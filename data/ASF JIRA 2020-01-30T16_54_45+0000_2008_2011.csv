Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Incorporates),Outward issue link (Reference),Outward issue link (Regression),Outward issue link (Required),Outward issue link (Supercedes),Outward issue link (dependent),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Patch Info),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Regression),Custom field (Regression),Custom field (Release Note),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Tags),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
java.io.EOFException: Chunk stream does not exist at page on broker start,AMQ-2935,12483866,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,andyg,andyg,23/Sep/10 12:43,09/Oct/15 02:49,30/Jan/20 16:51,06/Oct/10 13:43,5.4.0,5.4.1,5.4.2,,,,,5.4.2,,,Broker,,,,17,"I am seeing this regularly upon restarts in all versions from 5.4.x - I cannot downgrade due to breaking issues in previous versions.
The broker was shutdown cleanly with no logged issues.
Deleting the activemq-data directory seems to be the only recovery solution (which is not an option in production)

2010-09-23 13:54:30,997 [Starting ActiveMQ Broker] ERROR org.apache.activemq.broker.BrokerService - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.EOFException: Chunk stream does not exist at page: 0
java.io.EOFException: Chunk stream does not exist at page: 0
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:404)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.activemq.broker.scheduler.JobSchedulerStore$3.execute(JobSchedulerStore.java:250)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.broker.scheduler.JobSchedulerStore.doStart(JobSchedulerStore.java:239)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.getStore(SchedulerBroker.java:198)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.getInternalScheduler(SchedulerBroker.java:185)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.start(SchedulerBroker.java:85)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1786)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:496)
	at org.apache.activemq.ra.ActiveMQResourceAdapter$1.run(ActiveMQResourceAdapter.java:85)","Win7 32bit, JDK 1.6_20",adamaitch,akhanzode,alexdean,alisenberg,austinmills,computerpunk,dioh,eric-awl,fenghao0038,fgynnild,hanson2010,hc,jjordan,kbrown@intralinks.com,maxim.valyanskiy,ngehring,nikolay.elenkov,norman,okozlov,redvortex,rjanney,rjtokenlanring,s1ngle,shiweiyuan,sslavic,straun,swapnonil,tomdz,tpurcell@chariotsolutions.com,volkerk,ywtsang,,,,,,,,,,,,,,,,,,,"23/Sep/10 13:35;andyg;activemq-data.zip;https://issues.apache.org/jira/secure/attachment/12461872/activemq-data.zip","23/Sep/10 12:58;andyg;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461859/activemq.xml","24/Sep/10 17:42;bryanck;stacktraces.txt;https://issues.apache.org/jira/secure/attachment/12461845/stacktraces.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2010-09-23 15:49:24.4,,,false,,,,,,,,,,,,,,,,,14825,,,Fri Oct 09 02:49:19 UTC 2015,,,,,,,,"0|i0ba07:",63733,,,,,,,,,,,,,,,,,,,"23/Sep/10 12:46;andyg;Here is my config and zipped activemq-data directory","23/Sep/10 15:49;eric-awl;
I upgraded from 5.3.2 to 5.4.1. Some jars (spring) were updated.

If  I delete all files in activemq-data/xxxx/scheduler and then restart the process. It's OK

[sibModule@td0sib01s SIBBusModule-TestDeCharge-td0sib01s]$ ll scheduler
total 36
-rw-r--r-- 1 sibModule sibdev     0 Sep 23 17:39 db-1.log
-rw-r--r-- 1 sibModule sibdev     0 Sep 23 17:39 lock
-rw-r--r-- 1 sibModule sibdev 16384 Sep 23 17:39 scheduleDB.data
-rw-r--r-- 1 sibModule sibdev 16408 Sep 23 17:39 scheduleDB.redo

If I stop the process with a CTRL-C shutdown action and try to restart it without deleting the files, I have this error.

[sibModule@td0sib01s scheduler]$ ll
total 36
-rw-r--r-- 1 sibModule sibdev     0 Sep 23 17:39 db-1.log
-rw-r--r-- 1 sibModule sibdev 16384 Sep 23 17:44 scheduleDB.data
-rw-r--r-- 1 sibModule sibdev 16408 Sep 23 17:39 scheduleDB.redo

I have a MemoryPersistance configuration.


","23/Sep/10 16:05;eric-awl;When I add
schedulerSupport=""false""

in the ""broker"" configuration, It seems OK. No activemq-data directory nor files below are created.

Example :

<broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""SIBBusModule-TestDeCharge-td0sib01s"" useJmx=""true"" persistent=""false"" useShutdownHook=""false"" schedulerSupport=""false"">


","24/Sep/10 09:23;andyg;Thanks Eric,

Applying the property schedulerSupport=""false""  to the broker seems to have nipped this in the bud, at least for the few tests I have run.

Where did you find the docs on this parameter? - All I can find is this: http://activemq.apache.org/delay-and-schedule-message-delivery.html

As this was introduced recently (5.4.x) as new option I think 'false' should really be the default option - Especially as it seems to be broken.","24/Sep/10 17:27;bryanck;Setting the schedulerSupport=false for me did reduce the likelihood of this error occurring for me. With it set to true, it happens nearly every single time I shut down and restart. However, I am still getting the problem intermittently after shutdown and restart, even with this set to false, albeit less frequently. I will attached stack traces of it occurring with both schedulerSupport=true and false (the error occurs in different places during initialization).

Also, to note, this is a much more frequent occurrence with 5.4.1 vs 5.4.0. I do not have this issue with 5.3.2 so have downgraded to that for now.

This occurs for me on both Windows 7 64-bit JDK 1.6.21 and Mac OS 10.6.4.
","24/Sep/10 17:42;bryanck;Stack traces of the issue, with schedulerSupport=true and with schedulerSupport=false","26/Sep/10 07:14;shiweiyuan;I get the same issue when try activemq 5.4.1 on linux with jdk1.5. and I get around this issue by deleting all files/folders under data.
But it will not be practical if it's a production environment.","26/Sep/10 09:49;andyg;Yes Bryan, you are right, setting schedulerSupport=false has only 'reduced' the likelihood of this occurring - This is still happening, but less frequently.

There must be a race condition on shutdown which is corrupting the KahaDB files - I have looked at the startup code, but nothing seems to have changed much recently.

The corruption is obviously more aggressive in the the sheduler code.

This is a real show stopper for me right now, so I will dig more into this to see if I can find the problem.","26/Sep/10 09:58;andyg;I have elevated this to 'Blocker' due to the fact that others are also experiencing this, and that the general solution for everyone is to physically delete files in order to continue - not an option in production.
The bug is consistently repeatable and is destructive in that files are left in an unrecoverable state - The ability of ActiveMQ to recover from a crash is a feature, so the the ability to recover from a simple restart is ultimately critical. ","27/Sep/10 04:42;shiweiyuan;This issue maybe caused by lack of disk capacity.

when using the default configuration, i.e. the pending queue policy will be store based message cursor.
I found that the data folder size will increase very rapidly:
300,000 messages, 30 bytes per message, non_persistent,  the file named tmpDB.data  under data\localhost\tmp_storage\ will up to 1.15G in my environment.
so, pls check if your disk load/capacity is full.

But I'm still experiencing this issue after make sure the disk capacity is not full.
Will update on this issue if I get new evidence later...","27/Sep/10 07:09;andyg;Tested in several environments, of which at least one is a very high spec system, all with plenty of free space. Same results, so nothing to do with capacity.

This seems to be pretty consistent, but even more so with schedulerSupport=true (occurs on practically every restart).
The point of failure is easy to track down at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454) - The question is more about why is the KahaDB file left in an unreadable state on a clean shutdown?","04/Oct/10 08:33;fgynnild;This is a blocker issue for me, and it seems to be unrelated to the amount of available disk space.","04/Oct/10 09:44;adamaitch;This renders 5.4.1 unusable for me. Had to roll back to 5.3.2.","04/Oct/10 15:36;swapnonil;The reason I chose Active MQ 5.4 is because is of it's ""Message Scheduling"" feature, which is not there in 5.3. We are using the message scheduling feature released with 5.4. Our application needs messages to sit on a queue for at least 30 seconds.  
I am using the Spring JMS Template to send messages. This is how I am sending messages.
----	
{code:title=|borderStyle=none}
public Message createMessage(Session session) throws JMSException
{
    Date date = new Date();
    String delayInSeconds = properties.getProperty(MESSAGE_DELAY);
    Message message = session.createObjectMessage(mqRequest);
    message.setLongProperty(TIMESTAMP_AS_EPOCH_ATTRIBUTE, date.getTime());
    message.setStringProperty(TIMESTAMP_AS_STRING_ATTRIBUTE, getDateAsString(date));
    if (delayInSeconds != null)
    {
        LOGGER.info(""Delay set at "" + delayInSeconds + "" seconds"");
        message.setLongProperty(ScheduledMessage.AMQ_SCHEDULED_DELAY, Integer.parseInt(delayInSeconds) * 1000);
    }
    return message;
}

{code}

I can downgrade to 5.3 but then how do I get message scheduling. Please advice.

I have checked disk capacity. There's no problem with that. 
By the way the stack trace I get is exactly what Andy posted.

I just deleted all the contents of localhost/scheduler directory, and started the broker again. This time it starts ok and is working fine.","05/Oct/10 08:40;gtully;{code}useShutdownHook=""false""{code} is relevant. With a simple embedded broker Ctrl+C and restart without the shutdown hook, the stores are not stopped, in fact the broker is not stopped. A restart results in this problem every time. The store needs to be flushed on start which will should help but requires some code changes. In addition, this exception should be trapped such that it leads to recovery.

To work around, either {code}useShutdownHook=""true""{code} needs to be used such that the broker is stopped when the jvm is shutdown or there needs to be an explicit call to broker.stop()
","05/Oct/10 09:02;eric-awl;Hi Gary

Do you confirm us that ""schedulerSupport=false"" is enough when we don't plan to use sheduled messages and don't want to have any files written on disk ?

Eric
","05/Oct/10 09:03;s1ngle;In our configuration we have [and had] useShutdownHook=""true"", also we do not use db (only memory).

broker.setPersistenceAdapter(new MemoryPersistenceAdapter());
broker.setPersistent(false);
broker.setUseShutdownHook(true);
broker.setUseLoggingForShutdownErrors(false);

If we do not use: ""broker.setSchedulerSupport(false);"" the problem is 100% reproducible.

Although we were not able to reproduce it with a scheduler being off, we would not take a risk, as someone mentioned above, this setting only reduce the probability of the problem.","05/Oct/10 09:39;andyg;Eric,

Only using ""schedulerSupport=false"" does NOT resolve this issue. The problem is specifically a KahaDB problem (the default persistence store is KahaDB).

Swapping out the persistence store is currently the only option. If you need 'any' persistence then I would suggest the jdbcPersistenceAdapter (the default uses a Derby Database, but many can be used).
This is substantially slower than KahaDB, but not enough to worry about if you are only pushing say several thousand messages a minute (you'd have to run your own tests). I am in fact happy enough with the performance that I am likely to stick with it for stabilities sake even if this issue is resolved.

<broker xmlns=""http://activemq.apache.org/schema/core""
          useJmx=""false""
          brokerName=""YourName""
          useShutdownHook=""false""
          persistent=""true""
          start=""false""
          schedulerSupport=""false""
          enableStatistics=""false"">

    <persistenceAdapter>
      <jdbcPersistenceAdapter dataDirectory=""activemq-data/jdbc""/>
    </persistenceAdapter>

.....

Note: If schedulerSupport is enabled then the error will still persist (excuse the pun) due to the fact that the scheduler uses KahaDB irrelevant of the persistenceAdapter - So if you want scheduler support then there is currently no option (unless someone knows how to configure the scheduler to use another store?).

Gary,

I should have mentioned that my configuration is for an OpenEJB RA, whereby the RA is responsible for starting and stopping ActiveMQ (which is does, and still produces a corrupt KahaDB) - The default OpenEJB RA config uses a memory store, but I require persistence for my project. A standalone application (basically as Krzysztof writes) which loops through start/stop will still produce the same stacktrace virtually every time.","05/Oct/10 09:59;eric-awl;Hi Andy

I don't need nor scheduled Messages, nor Persistance. So I don't need KahaDB usage at all.

I wonder if, in this case, ""schedulerSupport=false"" is enough.

Eric","05/Oct/10 11:24;gtully;I have found a problem with the recovery processing in the kahaDB pageFile/index but the issue only occurs when there has been an abortive close, as in the stop method of the broker was not called or did not complete or a file write did not complete with the clean shutdown flag set.
With a successful call to broker.stop() the problem is avoided as there is no recovery of the pageFile from the redo buffer at restart so it may not be the only issue here.

The latest 5.5-SNAPSHOT from maven or the repo has the fix. It would be great if you could validate.
https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-SNAPSHOT/

Andy, Krzysztof, Can you verify that the broker is actually stopped in your start/stop tests.There should be messages in the log of the form: 10:55:37,927 [main ] INFO  JobSchedulerStore - JobSchedulerStore:activemq-data/localhost/scheduler stopped

Eric, for your use case, schedulerSupport=false is sufficient.
","05/Oct/10 11:47;ngehring;Gary - thanks for looking in to this.  We are going to test that it solves the issue we're seeing.

In the meantime a quick question please....  as we are running this in the background in Unix, how do we stop the broker gracefully?  The FAQ simply says to kill the process and I presume that this will not call broker.stop() correctly.
","05/Oct/10 11:57;s1ngle;Gary, you are right.
After deleting activemq-data I verified following situation:
until I abnormally quit the application [and thus the broker.stop() is not invoked] everything starts OK
only after a crash/abnormal ending of an application the problem appears [in 100% cases] (deleting the data or setting schedulerSupport to false resolve the issue).","05/Oct/10 12:32;gtully;Nik, so long as you don't use kill -9, and use one of the interrupt signals SIGHUP (Unix Only), SIGINT, or SIGTERM  instead, the jvm interruption handler will have a chance to kick in and call stop via the shutdownHooks registered by the broker.

But you can also use ./bin/activemq stop on unix, see : http://activemq.apache.org/unix-shell-script.html
I guess activemq stop is the preferred approach, it will try via jmx first and then revert to kill after some timeout.","05/Oct/10 18:33;swapnonil;Hi Gary,

I can indeed confirm that in our case the problem started only after someone killed the activemq process using kill -9. As I reported earlier, when I deleted everything under localhost/scheduler folder and restarted activemq it started cleanly.

With regards to your suggestion of testing 5.5 Snapshot; Are you saying that with 5.5 activemq can recover correctly from these kill -9 type shutdowns and we won't see this ""Chunk Stream"" errors? ","05/Oct/10 18:37;gtully;yes. it would be great if you could validate the fix.","06/Oct/10 13:16;andyg;Gary,

Many thanks, the fix works so far. I am still in the process of further testing , but a corrupted KahaDB is now properly recovered on restart.

I think in my specific RA case that 'not' calling 'waitUntilStopped()'  in the RA may have caused the corruption - If the system exits too early then this would be the culprit.

I'll let you know if and when I find something.","06/Oct/10 13:43;gtully;thanks for the validation andy, marking resolved.","06/Oct/10 14:13;fgynnild;Great that you found and fixed this issue! What is the strategy of back porting critical and blocker issues like this? The severity of this bug leaves 5.4.* useless in a production environment, but it is still announced as the stable one.","07/Oct/10 18:32;eduzanni;I agree with Frank. This issue has been affecting us too (we're using Fuse broker v. 5.4, which in turn relies on activeMQ 5.4). Is there any prevision regarding a ""patched"" release for version 5.4 with Gary's fix that can be used safely in a production environment?","08/Oct/10 01:48;tomdz;FWIW, I get this issue on first write into a new KahaDB store, as well, though not consistently. In this particular case, ActiveMQ is used in a unit test and KahaDB is configured to write to a new temporary directory. The startup code looks like this:

File tmpDir = File.createTempFile(""activmq"", """");

tmpDir.delete();
tmpDir.mkdir();

KahaDBStore kaha = new KahaDBStore();

kaha.setDirectory(localDbDir);

BrokerService broker = new BrokerService();

broker.setUseShutdownHook(true);
broker.setPersistenceAdapter(kaha);
broker.addConnector(""vm://localhost:12345"" );
broker.start();

Then the very first message (jms producer using via a vm connection) fails with this error:

VMTransport org.apache.activemq.broker.TransportConnection.Transport Transport failed: java.io.EOFException: Chunk stream does not exist at page: 0
java.io.EOFException: Chunk stream does not exist at page: 0
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:404)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.activemq.broker.scheduler.JobSchedulerStore$3.execute(JobSchedulerStore.java:250)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.broker.scheduler.JobSchedulerStore.doStart(JobSchedulerStore.java:239)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.getStore(SchedulerBroker.java:197)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.getInternalScheduler(SchedulerBroker.java:184)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:131)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
","08/Oct/10 07:35;swapnonil;Hi Gary,

We verified the fix. It works as expected. 

However since there is no talk of merging this fix back to 5.4 we are going into production from Monday onwards with 5.5 Snapshot.

We thank you for applying this fix.","08/Oct/10 14:01;fgynnild;I also tried the fix, and I no longer got the error message. But not all queues are working afterwards. Some queues work as expected, but for some of the other queues nothing gets into them. And there is no error messages either, neither on the server or the client side. Does anyone else experience this behavior?","08/Oct/10 14:08;gtully;Frank, can you try an reproduce with trace level logging?","10/Oct/10 18:08;norman;We saw the same exception in JAMES. IMHO a backport of the fix is a must because its really unacceptable to only be able to start again when purge all data. Thats just a no-go for a production service.. ","21/Oct/10 21:21;eduzanni;Any news on the backport possibility for this issue? We'd like having the scheduled/delayed message delivery available, so reverting to version 5.3 wouldn't be so much of a nice option for us here.","22/Oct/10 07:56;gtully;we will drop a new release 5.4.2 once we get completion on a few more outstanding issues.","22/Oct/10 23:11;jns;Gary,
 Activemq 5.5 snapshot fix worked. Thanks for the fix. 
Can you provide us with an approximate 5.4.2 release date....Just a rough estimate would be fine.","01/Nov/10 22:28;rbonneau;As requested by Eduardo Zanni above, can anyone supply a workaround if using 5.4.0?","08/Nov/10 16:53;redvortex;We are also looking for either:

- A workaround for 5.4.1
- A 5.4.2 version that includes this fix

We need to move to 5.4.x from 5.3.2 but cannot do so because of this critical issue.","11/Nov/10 02:20;okozlov;Could one of the Activemq developers provide a date for the next release that will include a fix for this issue? Whatever it will be.. 5.4.2 or 5.5.0.

We are in the final stage of developing an large system that will go to production in beginning of December and we are experiencing this issue in staging (using 5.4.1). It would be really nice to get a fix before Dec.1  If it's not possible - is there a patch for 5.4.1 or a workaround?

Really appreciate!

Regards,
Oleg.","11/Nov/10 05:53;srodrigu85@gmail.com;@Oleg: The issue is resolved in the trunk, you can always pickup the latest sourcecode there and compile, or grab the nightly builds.
But there is a discussion in the mailing list, there should be a 5.4.2 soon.","21/Dec/10 20:48;randy_palmer;It seems like schedulerSupport defaulted to true in 5.4.1.  It appears to default to false in 5.4.2 so you may need to explicitly set schedulerSupport=true on your broker when you update from 5.4.1. to 5.4.2 if it's not already in your config file.","28/Sep/15 17:58;volkerk;This error still happens in 5.10 with the PList store (tmp_storage), which always uses kahaDB. A lot!","09/Oct/15 02:49;fenghao0038;I met the same problem in 5.8 . I wonder  how did you resolve your problem in 5.10 , Using the workaround by set the schedulerSupport=false  ?
I will always use KahaDB and even sometimes need the scheduler function . 
Would you please share some of your good experience ?  Thanks",,,,,,,,,,,
ActiveMQ 5.1.0 runs out of file descriptors with lots of 'CLOSE_WAIT' sockets,AMQ-1739,12482579,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,acm,acm,21/May/08 10:59,28/Jul/14 13:44,30/Jan/20 16:31,02/Sep/08 06:57,5.1.0,,,,,,,5.2.0,,,Broker,,,,6,"We have no idea why or when, but within a few days after start-up, ActiveMQ suddenly runs out of file descriptors (we've raised the limit to 10240). According to lsof it has lots of sockets which are in CLOSE_WAIT when that happens. As soon as that happened once, it would re-occur within a few hours. This behavior did not happen with ActiveMQ 5.0.

We have five queues, all with only one consumer. All consumption and production is via the Stomp-interface using PHP-clients. Three of those queues get up to 50-100 messages/second in peak moments, while the consumers adjust their own consumption rate to the systems load (normally its maxed to about 50-150/sec). So in high-load moments on the consumers, the queues can grow to a few thousand messages, normally the queues are emptied as soon as a message occurs. Those five consumers stay connected indefinitely.

The messages are all quite small (at most 1 KB or so) and come from 5 web servers. For each web page-request (about 2-3M/day) a connection is made to ActiveMQ via Stomp and at least one message is sent to ActiveMQ, for most requests two are sent to the two most active queues. For all request a new connection is made and at most 4 stomp-messages are sent to ActiveMQ (connect, two messages, disconnect), since apache+php does not allow useful reuse of sockets and similar resources.So 
So the connection-rate is about the same as the highest message rate on any of the queues (so 50-100connects/second).

When the high amount of sockets in CLOSE_WAIT occurs, we manually disable the producers and the sockets disappear gradually. After that the amount of sockets stays around 180-190 (mostly opened jars), but seams to re-increase more easily than when ActiveMQ is restarted. I have not checked if anything special happens on the web servers or databases, since their producer and consumer implementation has not changed since 5.0.

What I did notice is that the memory-consumption increases heavily prior to running out of descriptors, and the consumption re-increases way to fast compared to before 11:45u:
http://achelois.tweakers.net/~acm/tnet/activemq-5.1-memory-consumption.png","We have a single broker with no special network-stuff. Our broker-system has two single core Opterons, 8GB of memory, plenty of I/O and runs a recent 64bit debian with 2.6.21 kernel.

Java(TM) SE Runtime Environment (build 1.6.0_06-b02)
Java HotSpot(TM) 64-Bit Server VM (build 10.0-b22, mixed mode)

We left most of the activemq.xml-configuration as-is and adjusted the start-up script to run with 2GB heap size and parallel garbage collector, which was more or less needed for 5.0 and left for 5.1 in the start-up script.",antoniogmc,craigwblake,guy.veraghtert,mkelley63,Patrickmorton,shabino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/May/08 11:41;acm;stomp-overload-producer.tgz;https://issues.apache.org/jira/secure/attachment/12461088/stomp-overload-producer.tgz",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-05-21 11:52:59.385,,,false,,,,,,,,,,,,,,,,,84784,,,Thu Sep 04 18:27:51 UTC 2008,,,,,,,,"0|i0rzmn:",161416,,,,,,,,,,,,,,,,,,,"21/May/08 11:52;rajdavies;SVN revision 658637 makes closing a socket in a separate thread optional.
The property to set is closeAsync which is true by default.

To disable this in a broker add it as a transport option to the transport connector address 
e.g.  

<transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://localhost:61616?transport.closeAsync=false""/>
</transportConnectors>
","21/May/08 12:22;ammulder;For what it's worth, we saw this (problems with lots of CLOSE_WAIT sockets) only when testing with client with a tight loop that opened and closed lots of connections (instead of pooling), and only on Windows (where it would fail unable to get an available port after 4000-5000 connections).

Another solution seemed to be to alter the Transport to set SO_LINGER to any positive value.","21/May/08 21:39;fhanik;CLOSE_WAIT is a kernel tuning parameter, how long the connection stays there depends on your OS.
On linux I don't even know if you can control it, but I know you can on windows and solaris.
problem with it being a kernel parameter, is that it then affects all the system, any program using TCP connections","22/May/08 14:17;fhanik;I stand corrected, it is just that solaris used to misname the parameter :)

http://www.sean.de/Solaris/soltune.html#tcp_close_wait_interval

close_Wait on a busy system can stick around if the application hasn't called close (server too busy, or a bug)

here is a good summary
http://www.sunmanagers.org/pipermail/sunmanagers/2006-January/039225.html","26/May/08 07:57;acm;The transport.closeAsync=false seems to work. We haven't had ActiveMQ running out of file descriptors for a few days now.

I did see the systemload spike to 3+ a few times though, so the original issue which started the whole running-out-of-descriptors thingy still seem to exist. With a maximum heap of 512MB it ran out of memory and started doing full GC's every few seconds. With 1024MB heap it had less trouble with the increased load, but ran to gc's where it ran had 900MB consumed and reduced it to only 500MB rather than 300MB -> 30MB.

I guess that's a different issue?","27/May/08 11:41;acm;The issue - or a similar one - reoccured yesterday.

It appears ActiveMQ 5.1/5.2-snapshot copes much worse with queues that are filled faster than consumed (or not consumed at all) than 5.0.

With 5.0 I could fill up two queues to over 80k small messages, but 5.2-snapshot refused to accept connections after about 5120 message on one queue and 3690 on the other.

The attached tgz is a set of two php5 scripts. Just extract it somewhere and adjust the $brokerUri in 'producerserver.php' to fit your needs. Then you should be able to run it and get an overloaded activemq within a minute or so.

Running is simple, make sure you have a CLI-version of php 5 (in debian that is 'apt-get install php5-cli') and run: 'php producerserver.php'

That script will then include the default Stomp-implementation for php and connect to ActiveMQ using Stomp. It forks off $max child-processes, until you stop the script, which send two messages to two seperate queues.  If you need any special connection-parameters, have a look at the Stomp.php StompConnection's 'getInstance'-method, but the above should work with a default ActiveMQ-install.

Our ActiveMQ is started with a slightly adjusted activemq.xml (ssl and xmmp connections are not started, camel-section is empty, resource management is commented out) but mostly left to the defaults. Our ACTIVEMQ_OPTS = ""-XX:+UseParallelOldGC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -Xms1024M -Xmx1024M -Dorg.apache.activemq.UseDedicatedTaskRunner=true""

Although normally you'd have at least one consumer for those queue's, its easier and faster to reproduce the issue without one. That way you should get 'ERROR TransportConnector             - Could not accept connection : Too many open files' pretty fast.","03/Jun/08 07:21;comdivisionys;I can only support what Arien said, we moved from 5.0 to 5.1 because of several smaller issues which are fixed, however there is something completly problematic going on...

We have data collectors for network traffic/disk/cpu usage spread cross the datacenter which will all report into an ActiveMQ instance, each collector has its own queue, so being it approx. 15K queus and on each queue about 3-10 messages per minute coming in. that sounds not much, but in certain scenarios the Apps/DB Server picking up the data is not fast enough to pick them in a timely fashion, so they might queue up for up to 2 days. 

We had issues with 5.0 that it died from time to time (approx. once a week), but with 5.1 it does not even stand for 12 hours. 

As it is run in a VM, we extend the original setup of 1 GB Memory already to 4 GB, but even that didn't help, we always run either out of File Descriptors or out of memory.

This is really a serious issue, because we need to decide whether we switch back to 5.0 or even back to a BEA or IBM tool, as the instabilities are going on for a few months now...","03/Jun/08 14:42;vikdhawan;Guys, 

i had the similar issue with 5.0 and 5.0 to resolve the File Descriptors and CLOSE_WAIT sockets. i tuned the JVM parameters and Solaris parmeter. 

1. i changed the ulimit -n to 1024 for the separate activemq user account we created to run AMQ. that basically changes the maximum file handles allowed per user. 

2. we are using these JVM parameters  -Xmx2048M -XX:SurvivorRatio=4 -XX:+UseParallelGC -Xms2048M -Xss512k. This configuration works and we don't get any out of File Descriptors problem any more. 

There are reasons behind why we chose this route, if you want to know the details let me know. 

BTW: Out-of-Memory is because a major bug in AMQ versions related to how they remove the old messages. The Old Gen memory pool keeps on growing because AMQ does not release the memory for the messages when the life cycle is complete for those messages (produced /consumed and removed from the queue). 

Hope this helps.

Thanks!","29/Jun/08 12:11;acm;I figured out why the CLOSE_WAIT's reoccured.

It is caused by the default memory limit of 5MB per queue, which is configured in the default activemq.xml. As soon as the limit is hit, activemq just has the producers wait untill space frees up.
But if there is no consumption, or the consumption isn't fast enough, ActiveMQ will eventually have more producers than available file descriptors. In my case I got 930 CLOSE_WAIT's for 1024 available descriptors in total. I also had 930 stacks ending like this:

 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.usage.MemoryUsage.waitForSpace(long) @bci=44, line=85 (Compiled frame)
 - org.apache.activemq.broker.region.Queue.send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) @bci=259, line=395 (Interpreted frame)
 - org.apache.activemq.broker.region.AbstractRegion.send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) @bci=42, line=350 (Compiled frame)
 - org.apache.activemq.broker.region.RegionBroker.send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) @bci=142, line=437 (Compiled frame)


So each of the 930 threads is waiting for someone to make some room, but since they prevent any other connection from entering the system, the memory will never be freed again. Possibly, even if there is a consumer which picks up consumption after a while, the fact that it ran out of file descriptors might cause it to a unpredictable and dangerous situation.

After removing the memory limit for seperate queues, I reran my ""overload producer"" and was able to produce several tens of thousands of messages. But it wasn't really gone after that. Similar behaviour seems to occur as soon as you run out of the systemUsage's memoryUsage and/or when the disk or temporary spaces fill up, even though it by no means had reached the disk limit yet, but possibly the temporary limit.

The problem here is of course that there might not be a solution to it. But it may help if the logfile gets error messages about hitting memory limits, rather than just leaving the user in the dark?","31/Jul/08 20:12;jpoloney;Arjen,

I have also been experiencing the same problems. I am running a near identical setup to yours with ActiveMQ 5.0.0. I switched to 5.1.0 temporarily, but it had so many more problems, that I had to revert back.

I believe the problem is actually within the Stomp client itself. I've been searching around about the CLOSE_WAIT socket issue (in general) and it appears to be a problem caused by the code, not the server. Basically, some where in your code, the socket never gets closed. It can theoretically remain in a CLOSE_WAIT state forever if this happens.

We monitor our ActiveMQ sockets every minute (using lsof) and about once every few hours, we see it spike from around 220 open connections to numbers like 7,000 or 8,000. It doesn't build up or anything, just spikes to extremely high numbers.

In some cases, the queue actually dies (overloaded from too many sockets) and in some cases it actually recovers and flushes everything out. 

So, I think the problem lies somewhere inside the Stomp client rather than in ActiveMQ itself. Have you gotten anywhere else with this lately?","04/Aug/08 11:20;acm;Joel,

The clients close their connection, as they should. If not, the sockets would not be in 'CLOSE_WAIT' but in some other state (TIME_WAIT?).

Switching to the 5.2 development build with the non-asynchronously closing sockets works fine once I had removed the limits on memory usage.","04/Aug/08 19:50;jpoloney;Arjen,

I rewrote my activemq.xml from scratch and modified a lot of the memory usage parameters (like you said) and I'm no longer having these issues. 

I don't really want to switch to a dev build of 5.2, I'll wait for it come out out officially (unless you strongly feel it's much better :D)","02/Sep/08 06:57;rajdavies;Going to mark this issue as resolved","04/Sep/08 18:27;linusl;Calling PHP 'socket_shutdown' and 'socket_close' functions to disconnect rather than using 'fclose' which might leaving linger sockets on the ActiveMQ server. Try an older version of http://stomp.codehaus.org/Stomp+JMS using fclose.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Infinite loop: WARN  PrefetchSubscription           - Ack before disaptch, waiting for recovery dispatch: MessageAck",AMQ-2210,12482550,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,yinghe0101,yinghe0101,16/Apr/09 13:52,14/Nov/13 14:54,30/Jan/20 16:55,17/Apr/09 09:37,5.2.0,,,,,,,5.3.0,,,Broker,,,,2,"Reproduce steps:
1. setup 4 network of brokers with multicast discovery
2. start client consumers and producers
3. let the producer produce message constantly
4. in jconsole, stop() the broker the consumers are connecting to
5. after the consumers failover to another broker, the newly connected broker will get into an infinite loop:

WARN  PrefetchSubscription           - Ack before disaptch, waiting for recovery dispatch: MessageAck {commandId = 1232, responseRequired = true, ackType = 2, consumerId = ID:host01-39430-1239887122787-0:0:2:1, firstMessageId = ID:host01-39430-1239887122787-0:0:87:1:5, lastMessageId = ID:host01-39430-1239887122787-0:0:87:1:5, destination = queue://Consumer.A-host01-1527-1239887124983.VirtualTopic.B, transactionId = TX:ID:host01-39430-1239887122787-0:0:38, messageCount = 1}

This broker will stop functioning and consumer is not processing messages. 

",solaris 10 trunk version 764403,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-04-16 15:35:20.54,,,false,,,,,,,,,,,,,,,,,75024,,,Fri Apr 17 09:39:22 UTC 2009,,,,,,,,"0|i0rzmf:",161415,,,,,,,,,,,,,,,,,,,"16/Apr/09 15:35;gtully;The intention of that wait is to allow a master/slave broker to start or restart and redeliver messages before an outstanding ack from a client is processed. In a network of brokers scenario, any unacked message will remain on the original broker so it will never get redelivered. In this case, it makes sense to get an unmatched ack exception.
The simple fix is to limit that wait to a few seconds and process the ack in the normal way even if the wait expires. Worst case scenario there is an unmatched ack exception and the message is eventually redelivered and should be seen as a duplicate.

So failover among a network of brokers will always be a little more lossy in terms of message ordering than master slave.","17/Apr/09 09:37;gtully;resolved in r765921

related issue that introduced this problem is https://issues.apache.org/activemq/browse/AMQ-2149","17/Apr/09 09:39;gtully;wait introduced in the fix for AMQ-2149 needed to be reverted to resolve this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Database lock driver override not found for : [oracle_jdbc_driver].  Will use default implementation.,AMQ-2804,12482894,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,ractive,ractive,28/Jun/10 17:31,13/Apr/12 06:17,30/Jan/20 16:55,13/Apr/12 06:17,5.3.2,,,,,,,5.6.0,,,,,,,0,"I am trying to do activeMQ Clustering with ORACLE database(master/slave).After the configuration I do see three tables created in the database but I don't see data is storing in the database. In fact it's storing in the activemq-data folder(default implementation). I see these warnings in the log.

INFO | Database adapter driver override recognized for : [oracle_jdbc_driver] - adapter: class org.apache.activemq.store.jdbc.adapter.OracleJDBCAdapter
 INFO | Database lock driver override not found for : [oracle_jdbc_driver].  Will use default implementation.


So somehow it's not using database ?? Any help on this is greatly appreciated.","2.6.9-89.0.11.ELsmp #1 SMP Mon Aug 31 11:00:34 EDT 2009 x86_64 x86_64 x86_64 GNU/Linux
",kimmking,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-28 03:00:34.301,,,false,,,,,,,,,,,,,,,,,74793,,,Fri Apr 13 06:17:11 UTC 2012,,,,,,,,"0|i0akef:",59578,,,,,,,,,,,,,,,,,,,"28/Jan/11 03:00;gliesian;I'm seeing a similar issue with Apache Derby: http://activemq.2283324.n4.nabble.com/Connecting-to-the-Apache-Derby-database-being-used-by-ActiveMQ-td3243546.html.

I'm using 5.4.2.","10/Feb/12 15:47;kimmking;DefaultDatabaseLocker use this sql to get an  exclusive lock:
select .... for update.

so it's correct for Oracle","10/Feb/12 16:18;kimmking;derby also support for-update syntax, see http://db.apache.org/derby/docs/dev/ref/  select segment.
so I think it's well with derby.

notice that it's INFO, not WARN or ERROR.

if DefaultDatabaseLocker can't get a locker, it will report it, sleep a while and retry.
","13/Apr/12 06:17;rajdavies;This looks fixed in 5.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KEYS file does not include A2F9E313 which was used to sign the 5.3.2 release,AMQ-2797,12482928,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,sebb,,24/Jun/10 08:37,09/Jul/11 16:35,30/Jan/20 16:55,09/Jul/11 16:35,,,,,,,,,,,,,,,0,"The KEYS file does not include A2F9E313 which was used to sign the 5.3.2 release.

Furthermore, the key A2F9E313 does not appear to be available from the pgp.mit.edu server.

This means that it is impossible to check the integrity of the release.

","http://www.apache.org/dist/activemq/apache-activemq/KEYS
http://activemq.apache.org/activemq-532-release.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-09 16:35:57.781,,,false,,,,,,,,,,,,,,,,,68664,,,Sat Jul 09 16:35:57 UTC 2011,,,,,,,,"0|i0rzr3:",161436,,,,,,,,,,,,,,,,,,,"18/Jan/11 12:40;sebb;The A2F9E313 key is now in the KEYS file, however it does not appear to be available from the pgp server.","09/Jul/11 16:35;tabish;This appears to be fixed now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set ClientID - InvalidClientIDException with http transport,AMQ-2831,12483467,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,rjtokenlanring,rjtokenlanring,16/Jul/10 11:49,01/Sep/10 10:27,30/Jan/20 16:55,01/Sep/10 10:25,5.3.2,,,,,,,5.4.1,,,Transport,,,,0,"I have a client that do a durable subscriptio to a topic.
It register with a static client id.

After a connectivity loss (an so a new re-connection), this exception is thrown and connection cannot be
re-established:

2010-07-15 13:49:04,700 ERROR - javax.jms.InvalidClientIDException: Broker: localhost - Client: (SchedulerId = '1') already connected from blockingQueue_8461294
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:216)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:77)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
....

This is not possible, because is the only client with that name and previos connection was closed . .close().

If I kill all the clients an I leave active only the broker,
If I try to reconnect using http (or tcp) I get the same error.
So client is not de-registered.
This appens also if I use failover protocol. After client kill/restart. Same exception is raised (javax.jms.InvalidClientIDException - with the clientID of the killed client).

I have to restart broker in order to register again the client. 

A test case is attached. 
If you connect to http the first time, connection is ok.
If you kill the JVM and the try to restart the test case, 'myclid already connected from blockingQueue_' is always raised. Also after some hours. I have to restart the broker in order to have a new conection with that client id.

This test simulate a JVM crash with no resource cleanup.
",,shbehna@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2764,,"16/Jul/10 11:49;rjtokenlanring;TestVaseClientID.zip;https://issues.apache.org/jira/secure/attachment/12461767/TestVaseClientID.zip","16/Jul/10 11:50;rjtokenlanring;broker-config.xml;https://issues.apache.org/jira/secure/attachment/12461768/broker-config.xml",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-09-01 10:25:10.016,,,false,,,,,,,,,,,,,,,,,74780,,,Wed Sep 01 10:27:38 UTC 2010,,,,,,,,"0|i0rphz:",159775,,,,,,,,,,,,,,,,,,,"16/Jul/10 11:49;rjtokenlanring;Test case class","16/Jul/10 11:50;rjtokenlanring;Broker configuration","01/Sep/10 07:49;rjtokenlanring;And related to this bug, I can report a related problem.
The http transport maintains a cache of the connected clients and doesn't flush it. If I restart the client, It cannot reconnect until I restart the broker:

javax.jms.JMSException: Could not connect to broker URL: http://server:61617/broker003. Reason: java.io.IOException: Failed to perform GET on: http://server:61617/broker003 as response was: 400
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:286)
at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:230)
at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:178)
....","01/Sep/10 10:25;gtully;The http transport now has an inactivity monitor, configure the http transport url with a low inactivity timeout value and the server end of the http transport will timeout when the client jvm crashes.

{code}http://localhost:61617??transport.readCheckTime=4000&amp;transport.initialDelayTime=4000{code}","01/Sep/10 10:27;gtully;This issue is resolved by the fix for AMQ-2764",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTPS transportConnector does not create a SslSocket but a plain text one,AMQ-2768,12483153,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,munger,munger,08/Jun/10 12:43,08/Jun/10 14:06,30/Jan/20 16:55,08/Jun/10 14:06,5.3.2,,,,,,,,,,Connector,,,,0,"Trying to enable HTTPS transportConnector in activemq.xml file, it is impossible to make it communicate in SSL.

I added the line:
<transportConnector name=""https"" uri=""https://localhost:8443"" enableStatusMonitor=""true""/> 

in the activemq.xml file,

and i can see at startup that a plain text socket seem to have been created, instead of a ssl one:

14:36:23,119  INFO org.mortbay.log.Slf4jLog 67 <main> Started SocketConnector@localhost:8443
14:36:23,119  INFO org.apache.activemq.broker.TransportConnector 250 <main> Connector https Started
14:36:23,119  INFO org.mortbay.log.Slf4jLog 67 <main> jetty-6.1.22

When i connect with a https client (based on Spring JmsTemplate class), i cannot connect. I have to mention also that i can successfully connect using ssl connection (so the certificates are OK) and also in HTTP.

Thanks a lot for your work!","Windows, in a Spring Based app, already embedding another Jetty server for app GUI, and embedding ActiveMQ.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-06-08 13:32:50.048,,,false,,,,,,,,,,,,,,,,,74809,,,Tue Jun 08 14:06:06 UTC 2010,,,,,,,,"0|i0rzqv:",161435,Regression,,,,,,,,,,,,,,,,,,"08/Jun/10 13:32;dejanb;Thanks for this submission. It would be even better if you could provide a simple test case that demonstrates the issue.","08/Jun/10 14:06;munger;Ok it works !!!!!!!!!!!!! :) 

The problem was very simple : i had to upgrade from activemq-optional-5.2.jar to activemq-optional-5.3.1.jar 

Shame on me ! ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set findMessageStatement cause problem for JDBCPersistenceAdapter due to error in Statements.java,AMQ-2681,12483290,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,dejanb,yinghe0101,yinghe0101,31/Mar/10 15:31,07/May/10 07:18,30/Jan/20 16:55,07/May/10 07:18,5.3.1,,,,,,,5.4.0,,,,,,,0,"field findMessageByIdStatement in org.apache.activemq.store.jdbc.Statements.java is never used and getFindMessageByIdStatement is using findMessageStatement which causes problem. Because if someone overwrite the default findMessageStatement, it will cause doGetMessageById to fail.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Apr/10 15:03;yinghe0101;AMQ-2681-2-trunk.patch;https://issues.apache.org/jira/secure/attachment/12461645/AMQ-2681-2-trunk.patch","31/Mar/10 15:33;yinghe0101;AMQ-2681.patch;https://issues.apache.org/jira/secure/attachment/12461648/AMQ-2681.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-04-01 10:56:54.816,,,false,,,,,,,,,,,,,,,,,74848,,,Fri May 07 07:18:07 UTC 2010,,,,Patch Available,,,,"0|i0rpnb:",159799,,,,,,,,,,,,,,,,,,,"31/Mar/10 15:33;yinghe0101;AMQ-2681.patch fix the problem and make find findMessageByIdStatement settable","01/Apr/10 10:56;dejanb;Patch committed with thanks.","01/Apr/10 15:03;yinghe0101;AMQ-2681-2-trunk.patch fixes:
removeMessageStatement has a typo missing a ""e"". 
GenerateJDBCStatements.java will generate the default sql statements for jdbc persistence in spring bean format so people can tune the sql  so I put in in util","02/Apr/10 09:42;dejanb;Patch applied with svn revision 930206. Thanks Ying. 

GenerateJDBCStatements is useful, but it would be even more useful if it would use specified database dialect as persistence adapters do. You can take a look at JDBCPersistenceAdapter.start() for example on how it can be done. Also, it'd be good to have this as an option that could be executed from the command line, so that folks can create statements, when they're deploying the broker (maybe activemq-admin command with some new switch). Interested in implementing some of these?

Cheers","07/May/10 07:18;dejanb;Will resolve this for now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock during FailoverTransport interruption,AMQ-2645,12483123,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,daroo,daroo,10/Mar/10 14:43,22/Mar/10 11:09,30/Jan/20 16:55,17/Mar/10 16:24,5.3.1,,,,,,,5.4.0,,,,,,,0,"Here is my scenario:
1)	Two AMQ servers setup with shared persistence storage (replicated message store)
2)	Single client constantly sends/receives small messages to/form one queue and uses single Connection with failover transport configured. The client code you can find here: AMQ-2512.
3)	After pushing several messages, shutdown active AMQ node - second one will kick in; client will successfully reconnect to this new active node; however it won't be able to receive any message out of the queue. Following warning is also generated by the client every 15s: ""WARNING: dispatch paused, waiting for outstanding dispatch interruption processing (20) to complete.."".

During debugging I've found that code which is supposed to clean messages during reconnection await for MessageDispatchChannel mutex owned by one of the session threads (screenshot-1). This session thread, from the other hand, is in the middle of send operation and waits for server's response. In result messages dispatch awaits infinitely on CountDownLatch which is supposed to be decremented by the deadlocked messages cleaning code (screenshot-2).

This occurs in the latest 5.3.1-SNAPSHOT as well as in 5.3.0-fuse-01-00 version.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/10 14:45;daroo;screenshot-1.JPG;https://issues.apache.org/jira/secure/attachment/12461652/screenshot-1.JPG","10/Mar/10 14:45;daroo;screenshot-2.JPG;https://issues.apache.org/jira/secure/attachment/12461653/screenshot-2.JPG",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-03-10 14:46:23.709,,,false,,,,,,,,,,,,,,,,,74859,,,Mon Mar 22 11:09:56 UTC 2010,,,,,,,,"0|i0rpnj:",159800,,,,,,,,,,,,,,,,,,,"10/Mar/10 14:46;rajdavies;Thanks for raising this - can you attach the screenshots ? - would help in quickly identifying the issue","17/Mar/10 16:24;rajdavies;Fixed by svn revision 924350","18/Mar/10 22:34;daroo;Thx. Any chance this fix will appear also in 5.3.1?","22/Mar/10 11:09;rajdavies;There's changes to the transport interface to support this - so its not possible to put into 5.3.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointer Exception Occurs when using producer flow control,AMQ-2435,12483092,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,chirino,chirino,chirino,01/Oct/09 16:43,01/Oct/09 16:53,30/Jan/20 16:55,01/Oct/09 16:52,,,,,,,,5.3.0,,,Broker,,,,0,"Looks like there is a synchronization issue still with producer based flow control.  Here is the stack trace of the problem:
{code}
Caused by: java.lang.NullPointerException
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:533)
	at org.apache.activemq.broker.region.Queue$7.run(Queue.java:442)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1102)
	at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
	at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:651)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:676)
	at java.lang.Thread.run(Thread.java:613)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74950,,,Thu Oct 01 16:51:58 UTC 2009,,,,,,,,"0|i0rzqf:",161433,,,,,,,,,,,,,,,,,,,"01/Oct/09 16:51;chirino;Fix applied to trunk and 5.3 branch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message grouping not honored when consumers started with existing messages,AMQ-2016,12483060,12482417,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,dejanb,hiyer,hiyer,26/Nov/08 20:27,03/Aug/09 13:30,30/Jan/20 16:55,23/Jan/09 13:29,5.1.0,5.2.0,,,,,,5.3.0,,,Broker,,,,3,"Messages are processed FIFO when messages with different groups are sent to a queue and then the consumers are started. 
If the messages are sent after the consumers are started, then message grouping works as expected.
Two JUnit tests are attached. 
1. MessageGroupTest.java starts up 3 consumers and then sends 30 messages evenly distributed across 3 groups A, B, and C. 
Each consumer then gets assigned a group and the ordering is as expected based on the different sleep intervals defined as seen in the log below
{quote}
2008-11-26 15:06:09,841 INFO  [main] [com.test.MessageGroupTest] 30 messages sent to group A/B/C
2008-11-26 15:06:09,841 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 9
2008-11-26 15:06:09,841 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 9
2008-11-26 15:06:09,841 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 9
2008-11-26 15:06:09,934 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 8
2008-11-26 15:06:10,044 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 7
2008-11-26 15:06:10,137 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 6
2008-11-26 15:06:10,247 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 5
2008-11-26 15:06:10,340 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 4
2008-11-26 15:06:10,450 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 3
2008-11-26 15:06:10,544 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 2
2008-11-26 15:06:10,653 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 1
2008-11-26 15:06:10,747 INFO  [Thread-4] [com.test.MessageGroupTest] worker3 received msg C remaining 0
2008-11-26 15:06:10,840 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 8
2008-11-26 15:06:11,840 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 7
2008-11-26 15:06:12,840 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 6
2008-11-26 15:06:13,840 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 5
2008-11-26 15:06:14,840 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 8
2008-11-26 15:06:14,840 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 4
2008-11-26 15:06:15,840 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 3
2008-11-26 15:06:16,840 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 2
2008-11-26 15:06:17,840 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 1
2008-11-26 15:06:18,840 INFO  [Thread-2] [com.test.MessageGroupTest] worker1 received msg B remaining 0
2008-11-26 15:06:19,840 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 7
2008-11-26 15:06:24,840 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 6
2008-11-26 15:06:29,840 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 5
2008-11-26 15:06:34,840 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 4
2008-11-26 15:06:39,840 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 3
2008-11-26 15:06:44,840 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 2
2008-11-26 15:06:49,840 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 1
2008-11-26 15:06:54,840 INFO  [Thread-3] [com.test.MessageGroupTest] worker2 received msg A remaining 0
{quote}


2. MessageGroupDelayedTest.java sends 30 messages evenly distributed across 3 groups A, B, and C and then starts up 3 consumers.
All 30 messages are delivered in FIFO order to a single consumer as seen in the log below
{quote}
2008-11-26 15:25:50,021 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 9
2008-11-26 15:25:55,021 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 9
2008-11-26 15:25:56,021 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 9
2008-11-26 15:25:56,130 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 8
2008-11-26 15:26:01,130 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 8
2008-11-26 15:26:02,130 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 8
2008-11-26 15:26:02,224 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 7
2008-11-26 15:26:07,224 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 7
2008-11-26 15:26:08,224 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 7
2008-11-26 15:26:08,333 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 6
2008-11-26 15:26:13,333 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 6
2008-11-26 15:26:14,333 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 6
2008-11-26 15:26:14,427 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 5
2008-11-26 15:26:19,427 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 5
2008-11-26 15:26:20,427 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 5
2008-11-26 15:26:20,536 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 4
2008-11-26 15:26:25,536 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 4
2008-11-26 15:26:26,536 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 4
2008-11-26 15:26:26,630 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 3
2008-11-26 15:26:31,630 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 3
2008-11-26 15:26:32,630 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 3
2008-11-26 15:26:32,739 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 2
2008-11-26 15:26:37,739 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 2
2008-11-26 15:26:38,739 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 2
2008-11-26 15:26:38,833 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 1
2008-11-26 15:26:43,832 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 1
2008-11-26 15:26:44,832 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 1
2008-11-26 15:26:44,926 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg A remaining 0
2008-11-26 15:26:49,926 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg B remaining 0
2008-11-26 15:26:50,926 INFO  [Thread-4] [com.test.MessageGroupDelayedTest] worker3 received msg C remaining 0
{quote}","JBOSS 4.2.2, AMQ 5.2.0 RA, JDK 1.5, Windows",ghopper,msiegenthaler,skomarla,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Nov/08 20:29;hiyer;MessageGroupDelayedTest.java;https://issues.apache.org/jira/secure/attachment/12461308/MessageGroupDelayedTest.java","26/Nov/08 20:29;hiyer;MessageGroupTest.java;https://issues.apache.org/jira/secure/attachment/12461222/MessageGroupTest.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-01-07 22:44:56.147,,,false,,,,,,,,,,,,,,,,,75124,,,Mon Aug 03 13:30:34 UTC 2009,,,,,,,,"0|i0rzlj:",161411,,,,,,,,,,,,,,,,,,,"07/Jan/09 22:44;ghopper;
bug summary: Message grouping fails when consumers are added.
keywords: JMSXGroupID JMSXGroupSeq

Uploading a new unit test.  An excerpt of the test results is below, which shows that the message groups GrA and GrB are being handled by both consumers simultaneously.

15:11:58,498 INFO  GroupNewConsumerTest - Con2 got message       GrA-5
15:11:58,560 INFO  GroupNewConsumerTest - Con2 got message       GrB-5
15:11:58,560 INFO  GroupNewConsumerTest - Con1 got message GrB-3
15:11:58,623 INFO  GroupNewConsumerTest - Con1 got message GrA-4
15:11:58,623 INFO  GroupNewConsumerTest - Con2 got message       GrA-6
15:11:58,685 INFO  GroupNewConsumerTest - Con1 got message GrB-4
15:11:58,685 INFO  GroupNewConsumerTest - Con2 got message       GrB-6
15:11:58,748 INFO  GroupNewConsumerTest - Con1 got message GrB-7
15:11:58,748 INFO  GroupNewConsumerTest - Con2 got message       GrA-7
15:11:58,810 INFO  GroupNewConsumerTest - Con1 got message GrB-8
15:11:58,810 INFO  GroupNewConsumerTest - Con2 got message       GrA-8
15:11:58,873 INFO  GroupNewConsumerTest - Con2 got message       GrA-9
15:11:58,935 INFO  GroupNewConsumerTest - Con2 got message       GrB-9

This is probably the same issue described in:
http://www.nabble.com/Message-groups-not-working-when-consuming-existing-messages-td18445237.html#a18445237

Note that setting the prefetch to 1 made reproducing the issue much easier.  (See the unit test)
","19/Jan/09 14:17;gtully;prefetch=1 should help here. Part of the problem is that the dispatch logic can only deal with the consumers that it has and on the first dispatch iteration it finds only one consumer and figures that that consumer has to deal with all of the groups. With prefetch of one, after the first dispatch iteration there may be another consumer (at least it allow the internal dispatch lock to be released so that another consumer can be added between dispatch attempts)

Currently there is an issue that evaluates message group selection before determining if a consumer is full, but if this is resolved, prefetch=1 should make group selection evenly distributed among subscriptions that arrive at the same time and before the group assignment has been determined. ","21/Jan/09 16:19;ghopper;After reviewing Hari's original files and the response from Gary, I think my issue is different than the original issue.  Hari is concerned with balancing between multiple consumers, while I am concerned with the exclusive property.  Sorry for the confusion.

Moved my test case to the ticket AMQ-2082.","22/Jan/09 17:27;dejanb;Recovery dispatch refactoring, which was the root of the problem, has been committed in SVN revision 736720. All that is left to be done is to add a configurable logic that would make broker to wait for a certain number of consumers (and/or a bit of time) before it starts dispatching. This will allow an even distribution of groups among consumers. Coming soon.","23/Jan/09 13:29;dejanb;The configurable queue policies has been added, which allows us to wait for specified number of consumers (and/or time) before we start dispatching messages. This ensures an even distribution of groups among consumers.

More documentation can be found at:
[http://cwiki.apache.org/confluence/display/ACTIVEMQ/Message+Groups#MessageGroups-Gettingnotifiedofownershipchangesofmessagegroups]
Modified test case (tests for different policies condemnations and fails if there is no even distribution of messages and groups) can be found here
[http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/MessageGroupDelayedTest.java?view=markup]

","28/Jul/09 22:00;rchristy;Any luck getting a fix for version 5.2?","03/Aug/09 13:30;dejanb;Hi Rich,

we don't maintain 5.2 branch anymore. Any specific reason you don't want to upgrade to 5.3 (it should be much more stable than 5.2)?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non temporary destination removing failure,AMQ-2216,12482914,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,gtully,ffrenchm,ffrenchm,21/Apr/09 16:18,20/Jul/09 14:13,30/Jan/20 16:55,20/Jul/09 14:13,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,When deleting a non temporary destination and after restarting ActiveMQ the destination is reloaded : so in fact this destination has not been deleted.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Apr/09 16:22;ffrenchm;QueueAdminTest.java;https://issues.apache.org/jira/secure/attachment/12461487/QueueAdminTest.java","21/Apr/09 16:22;ffrenchm;removeNonTemporaryQueue.patch;https://issues.apache.org/jira/secure/attachment/12461489/removeNonTemporaryQueue.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-07-16 14:33:22.078,,,false,,,,,,,,,,,,,,,,,75022,,,Mon Jul 20 14:13:44 UTC 2009,,,,,,,,"0|i0rzqn:",161434,,,,,,,,,,,,,,,,,,,"21/Apr/09 16:22;ffrenchm;The QueueAdminTest.java file demonstrate the problem (third test).
The removeNonTemporaryQueue.patch file propose a correction.","16/Jul/09 14:33;gtully;scheduling for 5.3 - as it has a test and patch - sorry that it was missed.","20/Jul/09 14:13;gtully;resolved in r795848
made test case a little more general and added explicit shutdown rather than depending on text execution ordering",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ producer/consumer hangs when one of the consumer didn't respond,AMQ-2167,12482885,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,ashok,ashok,17/Mar/09 21:47,17/Jul/09 11:04,30/Jan/20 16:55,17/Jul/09 11:04,,,,,,,,5.3.0,,,,,,,0,"We are using ActiveMQ 5.2 & Spring 2.5.4...

We are using ActiveMQ Embeeded broker 

<bean id=""jmsFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"" destroy-method=""stop"">
    <property name=""connectionFactory"">
      <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
        <property name=""brokerURL"">
          <value>vm://localhost?broker.persistent=false</value> 
        </property>
      </bean>
    </property>
  </bean>
  
   <bean id=""destination"" class="" org.apache.activemq.command.ActiveMQQueue"">
       <constructor-arg ref=""jmsQueueJndiName""></constructor-arg>
    </bean>
  
   
   <bean id=""calendarEventContainer"" class=""org.springframework.jms.listener.SimpleMessageListenerContainer"" >
    <property name=""connectionFactory"" ref=""jmsFactory"" />
    <property name=""destination"" ref=""destination"" />
    <property name=""messageListener"" ref=""calendarEventProcessor"" />
    <property name=""messageSelector"">
      <util:constant static-field=""com.jpmc.spex.utils.lookup.EventCategoryConstants.EVENT_CATEGORY_CALENDAR""/>
    </property>
  </bean>
  
   <bean id=""runtimeEventContainer"" class=""org.springframework.jms.listener.SimpleMessageListenerContainer"" >
    <property name=""connectionFactory"" ref=""jmsFactory"" />
    <property name=""destination"" ref=""destination"" />
    <property name=""messageListener"" ref=""runtimeEventProcessor"" />
    <property name=""messageSelector"">
      <util:constant static-field=""com.jpmc.spex.utils.lookup.EventCategoryConstants.EVENT_CATEGORY_RUNTIME""/>
    </property>
  </bean>
  
   <bean id=""systemEventContainer"" class=""org.springframework.jms.listener.SimpleMessageListenerContainer"" >
    <property name=""connectionFactory"" ref=""jmsFactory"" />
    <property name=""destination"" ref=""destination"" />
    <property name=""messageListener"" ref=""systemEventProcessor"" />
    <property name=""concurrentConsumers"" value=""5"" />
    <property name=""messageSelector"">
      <util:constant static-field=""com.jpmc.spex.utils.lookup.EventCategoryConstants.EVENT_CATEGORY_SYSTEM""/>
    </property>
  </bean>
  
  <bean id=""genericCalendarEventContainer"" class=""org.springframework.jms.listener.SimpleMessageListenerContainer"" >
    <property name=""connectionFactory"" ref=""jmsFactory"" />
    <property name=""destination"" ref=""destination"" />
    <property name=""messageListener"" ref=""genericCalendarEventProcessor"" />
    <property name=""messageSelector"">
      <util:constant static-field=""com.jpmc.spex.utils.lookup.EventCategoryConstants.EVENT_CATEGORY_GENERIC""/>
    </property>
  </bean>
   

We are sending the email from all these listeners after doing some logic.when something happens in the SMTP side and if there is no response from SMTP side and if the Listener is waiting then the entire producer/consumer is halted.

My Question is why One Consumer  blocking all other consumer /producer. (see the stack trace which shows one of the Consumer is waiting for some response from SMTP server).

ActiveMQ Session Task"" - Thread t@2554
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at com.sun.mail.util.TraceInputStream.read(TraceInputStream.java:97)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:237)
	- locked java.io.BufferedInputStream@13a80ea
	at com.sun.mail.util.LineInputStream.readLine(LineInputStream.java:75)
	at com.sun.mail.smtp.SMTPTransport.readServerResponse(SMTPTransport.java:1440)
	at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:1260)
	at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:370)
	at javax.mail.Service.connect(Service.java:275)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:389)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:342)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:338)
	at com.jpmc.ibtech.spring.email.MimeEmailService.sendEmail(MimeEmailService.java:61)
	at com.jpmc.spex.background.events.processor.AbstractEventAction.sendEmail(AbstractEventAction.java:63)
	at com.jpmc.spex.background.events.processor.AbstractEventAction.execute(AbstractEventAction.java:79)
	at com.jpmc.spex.background.events.processor.system.SystemEventAction.execute(SystemEventAction.java:47)
	at com.jpmc.ibtech.spring.jms.EventProcessor.onMessage(EventProcessor.java:101)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:531)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:466)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:435)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:407)
	at org.springframework.jms.listener.SimpleMessageListenerContainer.processMessage(SimpleMessageListenerContainer.java:290)
	at org.springframework.jms.listener.SimpleMessageListenerContainer$2.onMessage(SimpleMessageListenerContainer.java:266)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:967)
	- locked java.lang.Object@1e58347
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:122)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:192)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)

   Locked ownable synchronizers:
	- locked java.util.concurrent.locks.ReentrantLock$NonfairSync@10dbec7

See the attached ThreadDump which shows Producer is waiting..

I saw that..I can enable ProduceFlowControl...I am just worried whether it will start spilling to the disk and create more problems.",,ashok,npfistner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Mar/09 21:48;ashok;Thread Dump for ActiveMQ_2.tdump;https://issues.apache.org/jira/secure/attachment/12461410/Thread+Dump+for+ActiveMQ_2.tdump",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-07-17 11:04:21.671,,,false,,,,,,,,,,,,,,,,,75044,,,Fri Jul 17 11:04:21 UTC 2009,,,,,,,,"0|i0rznb:",161419,,,,,,,,,,,,,,,,,,,"18/Mar/09 03:55;ashok;I am using *ActiveMQ 5.1 NOT 5.2*","17/Jul/09 11:04;rajdavies;Turn producer Flow control off (default in 5.3).
Also change prefetch to 0 on the consumer",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failing to close a connection leaves consumers behind that prevent new consumers receiving messages,AMQ-1850,12482607,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,sparky2708,sparky2708,09/Jul/08 22:49,08/Oct/08 08:49,30/Jan/20 16:55,15/Sep/08 18:38,4.1.0,4.1.1,4.1.2,5.0.0,5.1.0,,,5.2.0,,,Broker,,,,2,"I have been having this problem throughout all of the ActiveMQ versions (starting from 4.1.0-incubator). Just got used to killing off the dead clients throught jconsole every morning. Would be nice to have this fixed... Glad someone put a test case for it [thanks Ossory]

Hi, 
I have an issue where a JMS client attempts to receive messages from a queue. The client fails due to a JVM crash and the JMS connection is not closed. This leaves a consumer behind (that I can see in the ActiveMQ admin console). If I restart the JMS client it fails to receive all of the new messages that sent to the queue in question. 
Using JMX to stop the open connections or closing ActiveMQ allows the client to work again. 
Is there a timeout value that you can apply to connections to avoid having to do this? 
Any help would be appreciated. 

I've created an artificial test case based on the behaviour I have seen in ActiveMQ 5.1 on Windows XP. 
The method jmsTest2 deliberately fails to close the connection. 

    static final String PROVIDER_URL = ""tcp://localhost:61616""; 
    static final String QUEUE = ""queueA""; 

    static void jmsTest() throws JMSException, NamingException { 
        Properties props = new Properties(); 
        props.setProperty(Context.INITIAL_CONTEXT_FACTORY, ""org.apache.activemq.jndi.ActiveMQInitialContextFactory""); 
        props.setProperty(Context.PROVIDER_URL, PROVIDER_URL);         
        InitialContext ctx = new InitialContext(props); 
        QueueConnectionFactory cf = (QueueConnectionFactory)ctx.lookup(""ConnectionFactory""); 
        QueueConnection conn = cf.createQueueConnection(); 
        conn.start(); //this is required if you want to receive messages using this connection 
        QueueSession sess = conn.createQueueSession(false, Session.AUTO_ACKNOWLEDGE); 
        Queue qa = sess.createQueue(QUEUE); 
        QueueSender sender = sess.createSender(qa); 
        for(int i = 0; i < 10; i++) { 
            Message msg = sess.createTextMessage(""test""); 
            sender.send(msg); 
        } 
        sender.close(); 
        sess.close(); 
        conn.close(); 
    } 

    static void jmsTest2() throws JMSException, NamingException { 
        Properties props = new Properties(); 
        props.setProperty(Context.INITIAL_CONTEXT_FACTORY, ""org.apache.activemq.jndi.ActiveMQInitialContextFactory""); 
        props.setProperty(Context.PROVIDER_URL, PROVIDER_URL);         
        InitialContext ctx = new InitialContext(props); 
        QueueConnectionFactory cf = (QueueConnectionFactory)ctx.lookup(""ConnectionFactory""); 
        QueueConnection conn = cf.createQueueConnection(); 
        conn.start(); //this is required if you want to receive messages using this connection 
        QueueSession sess = conn.createQueueSession(false, Session.AUTO_ACKNOWLEDGE); 
        Queue qa = sess.createQueue(QUEUE); 
        QueueReceiver qr = sess.createReceiver(qa); 
        for(int i = 0; i < 10; i++) { 
            Message msgin = qr.receive(5000); 
            System.out.println(""msgin"" + i + "" = "" + msgin); 
        } 
        //qr.close(); 
        //sess.close(); 
        //conn.stop(); 
        //conn.close(); 
    } 

   public static void main(String[] args) 
   { 
        jmsTest(); 
        jmsTest2(); 
        jmsTest(); 
        jmsTest2(); 
    } 

The first call to jmsTest2 prints 10 messages but the second call fails to read any messages. The JVM will not stop after the main method completes because some ActiveMQ threads remain open.",,pj.fanning,wuxz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/08 03:51;wuxz;TestAmq.java;https://issues.apache.org/jira/secure/attachment/12461171/TestAmq.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-07-10 14:36:25.441,,,false,,,,,,,,,,,,,,,,,84447,,,Fri Sep 19 12:10:36 UTC 2008,,,,,,,,"0|i0rzn3:",161418,,,,,,,,,,,,,,,,,,,"09/Jul/08 22:54;sparky2708;Same happens with Topics.","10/Jul/08 14:36;pj.fanning;Thanks for creating this issue Denis.
I've only really started testing ActiveMQ for large scale applications recently and have come across a couple of issues that would make adoption of ActiveMQ difficult. This is one but I have also found that if you have 2 consumers for the same queue on different machines for load balancing purposes that only 1 consumer seems to pull down the messages. If you stop this consumer then the other one takes over. This at least allows some high availability features to be built into applications.
Do you think it would be worthwhile to post a test case for the load balancing issue?","07/Aug/08 03:47;wuxz;I can reproduce this error using totally normal code, both on my notebook running winxp and linux server:

I start a JMS producer application to send 4000 persistent messages, each message is 1K string. After sending, the client application close everything and exit.

Then I start a JMS consumer application to receive 100 messages, when finished, the client application close everything and exit. 

Now I start the consumer application again, now I want to receive 3900 messages. But only after receiving about 2180 messages, the consumer stop at receive() method, for there is no more messages can arrive.

Now if you open the admin console, you will find that there is about 1800 messages remains pending status, but if click the queue to browse these messages, you will find that there is no message you can browse!

After restart AMQ and client application, we can receive the rest messages, about 1800, they are back!

Only persistent messages can produce this error.

Please see attached file: TestAMQ.java.

To run:

1 run TestAMQ with parameter send 4000
2 run TestAMQ with parameter receive 100
3 run TestAMQ with parameter receive 3900, it will hang after about 2180 messages being received.
","07/Aug/08 03:51;wuxz;I can reproduce this error using totally normal code, both on my notebook running winxp and linux server:

I start a JMS producer application to send 4000 persistent messages, each message is 1K string. After sending, the client application close everything and exit.

Then I start a JMS consumer application to receive 100 messages, when finished, the client application close everything and exit. 

Now I start the consumer application again, now I want to receive 3900 messages. But only after receiving about 2180 messages, the consumer stop at receive() method, for there is no more messages can arrive.

Now if you open the admin console, you will find that there is about 1800 messages remains pending status, but if click the queue to browse these messages, you will find that there is no message you can browse!

After restart AMQ and client application, we can receive the rest messages, about 1800, they are back!

Only persistent messages can produce this error.

Please see attached file: TestAMQ.java.

To run:

1 run TestAMQ with parameter send 4000
2 run TestAMQ with parameter receive 100
3 run TestAMQ with parameter receive 3900, it will hang after about 2180 messages being received.
","14/Aug/08 18:35;rajdavies;PJ Fanning - I'd suggest you reduce the prefetch limit for your consumers -  see http://activemq.apache.org/what-is-the-prefetch-limit-for.html","15/Aug/08 15:38;pj.fanning;Thanks for the advice, Rob. Using queueName?consumer.prefetchSize=0 means that my (artificial) test case passes.
I still think it would be a good feature if consumers and connections were timed out by the ActiveMQ server if the client goes offline.","15/Sep/08 18:38;rajdavies;You can more readily detect when a client has crashed by configuring the maxInactivityDuration property on the transport - this controls the keep alive protocol used - see http://activemq.apache.org/configuring-wire-formats.html

I'd recommend setting to 5000 (5 secs) - or lower (if you have a good network)","19/Sep/08 12:10;ztuffaha;I have faced this this problem in a current project. Somehow, if you just close the receiver, the program will work fine! If you separate the receivers and senders into two separate classes, you are ok too.

Ofcourse, the program will not exit until you close the connection. But why only with receivers and not sessions?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 QueueViewMBean.retryMessage() often seems to fail without retrying,AMQ-1909,12482625,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,jstrachan,jstrachan,22/Aug/08 17:41,02/Sep/08 12:23,30/Jan/20 16:55,02/Sep/08 06:15,,,,,,,,5.2.0,,,JMX,,,,0,Seems kinda easy to reproduce (e.g. the FUSE Web Console gets this each time),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-02 06:15:17.727,,,false,,,,,,,,,,,,,,,,,75179,,,Tue Sep 02 06:15:17 UTC 2008,,,,,,,,"0|i0rzsn:",161443,,,,,,,,,,,,,,,,,,,"26/Aug/08 10:35;jstrachan;see the test case MBeanTest.TODO_testRetryMessages() - if you remove the ""TODO_"" from the method name, the test case fails. Basically the retryMessage() method cannot find the message by message ID - despite the message ID coming from browsing the available messages in the DLQ","26/Aug/08 10:44;jstrachan;in the debugger, it appears like the DLQ is empty when attempting to retry a message (i.e. getMessage(String) doesn't have any messages available).

Am wondering if its related to the browse() of messages kinda removing them? Wonder if its related to AMQ-1914 in some way - that browsing somehow affects the status of the Queue?","02/Sep/08 06:15;rajdavies;Fixed by SVN revision 691114 and further enhancement by SVN revision 691214",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of pure master/slave synchronization issue,AMQ-1841,12482592,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,yinghe0101,yinghe0101,07/Jul/08 15:00,02/Sep/08 11:52,30/Jan/20 16:55,02/Sep/08 11:52,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"The topology is as follows:
Master A
Master B

Slave A
Slave B

configure the client(multiple threads of consumers and producers)  to use failover (failover://(tcp://masterA, tcp://masterB)) so slaves are only used to replicate data.

Issues:
Start masterA, slaveA, masterB, slaveB then start the client, slaveB will get IllegalStateException:
ERROR Service                        - Async error occurred: java.lang.IllegalStateException: brokerSlave2
Cannot add a consumer to a session that had not been registered: ID:usaapd1-32873-1215441964305-2:1:1
java.lang.IllegalStateException: brokerSlave2 Cannot add a consumer to a session that had not been register
ed: ID:usaapd1-32873-1215441964305-2:1:1
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:541)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:310)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

Comments:
The issue seems that broker masterA and masterB's DemandForwardingBridge started before slaveB is attached so the commands to adding connections and sessions are not replicated on slaveB so the exception happens. For a network of pure master/slave, we kinda want the following to happen in order:
1. master to wait for slave to be attached 
2. master to accept demandforwardbridge from other master
3. start master transport to serve connections

Is there anyway to enforce the above order? ",Solaris 9 jdk 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-596,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-02 11:52:17.776,,,false,,,,,,,,,,,,,,,,,84752,,,Tue Sep 02 11:52:17 UTC 2008,,,,,,,,"0|i0rzmv:",161417,,,,,,,,,,,,,,,,,,,"02/Sep/08 11:52;rajdavies;This is solved by SVN revision 691206?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in AMQMessageStore when using transactions,AMQ-1856,12482405,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,jmoran,jmoran,11/Jul/08 17:57,14/Jul/08 15:59,30/Jan/20 16:55,14/Jul/08 15:59,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"I am using ActiveMQ 5.1.0 with the AMQMessageStore (in the default configuration except data directory location) and sending/receiving transactionally using the VMTransport. This produced the deadlock shown in the attached (partial) thread dump, generated by jstack -l. 

In a nutshell, the VMTransport thread is holding the AMQMessageStore.lock=KahaReferenceStore.lock, acquired at AMQMessageStore.java:231, while awaiting a countDown on AMQMessageStore.flushLatch. The ActiveMQ Task (which is the AMQMessageStore.asyncWriteTask) should do the countDown on the flushLatch but is waiting on acquiring the KahaReferenceStore.lock first. Hence deadlock.

Note that the condition messageAcks.size() > this.peristenceAdapter.getMaxCheckpointMessageAddSize() must be true for the deadlock to occur -- this triggers the flush. 

Since the transport is one of the deadlocked threads, all access via the transport stops, making the broker unusable and making this issue a blocker for me. A comment (workaround?) as soon as possible would be much appreciated.
","Red Hat Enterprise Linux ES release 4 (Nahant Update 3)
jdk1.6.0_07",yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/08 11:17;jmoran;AMQ-1856.patch;https://issues.apache.org/jira/secure/attachment/12461123/AMQ-1856.patch","11/Jul/08 17:57;jmoran;ASF.LICENSE.NOT.GRANTED--thread_dump.txt;https://issues.apache.org/jira/secure/attachment/12461230/ASF.LICENSE.NOT.GRANTED--thread_dump.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-07-14 15:59:36.779,,,false,,,,,,,,,,,,,,,,,84749,,,Mon Jul 14 15:59:36 UTC 2008,,,,,,,,"0|i0rzlz:",161413,,,,,,,,,,,,,,,,,,,"14/Jul/08 11:17;jmoran;Perhaps the patch is as simple as this? Mirrors behaviour of addMessage. ","14/Jul/08 15:59;rajdavies;Fixed by SVN revision 676636",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inactivity Monitor: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long,AMQ-1592,12482387,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,sparky2708,sparky2708,22/Feb/08 06:10,25/Jun/08 00:19,30/Jan/20 16:55,07/Apr/08 15:57,4.1.1,,,,,,,5.1.0,,,Broker,,,,1,"From a different poster:

I'm programming some kind of messaging program that sends messages in sparse frequency using activeMQ. 
I got exceptions like following and connection between client and activeMQ server is closed. 
---------- 
11:20:24,202 DEBUG [InactivityMonitor] Message sent since last write check, resetting flag 
11:20:39,202 DEBUG [InactivityMonitor] No message sent since last write check, sending a KeepAliveInfo 
11:20:39,202 DEBUG [InactivityMonitor] Message received since last read check, resetting flag: 
11:20:54,202 DEBUG [InactivityMonitor] Message sent since last write check, resetting flag 
11:21:09,202 DEBUG [InactivityMonitor] No message sent since last write check, sending a KeepAliveInfo 
11:21:09,202 DEBUG [InactivityMonitor] Message received since last read check, resetting flag: 
11:21:24,202 DEBUG [InactivityMonitor] Message sent since last write check, resetting flag 
11:21:39,202 DEBUG [InactivityMonitor] No message sent since last write check, sending a KeepAliveInfo 
11:21:39,202 DEBUG [InactivityMonitor] Message received since last read check, resetting flag: 
11:21:54,202 DEBUG [InactivityMonitor] Message sent since last write check, resetting flag 
11:22:09,202 DEBUG [InactivityMonitor] No message sent since last write check, sending a KeepAliveInfo 
11:22:09,202 DEBUG [InactivityMonitor] Message received since last read check, resetting flag: 
11:22:24,202 DEBUG [InactivityMonitor] Message sent since last write check, resetting flag 
11:22:39,202 DEBUG [InactivityMonitor] No message sent since last write check, sending a KeepAliveInfo 
11:22:39,202 DEBUG [InactivityMonitor] Message received since last read check, resetting flag: 
11:22:54,202 DEBUG [InactivityMonitor] Message sent since last write check, resetting flag 
11:23:09,202 DEBUG [InactivityMonitor] No message sent since last write check, sending a KeepAliveInfo 
11:23:09,202 DEBUG [InactivityMonitor] No message received since last read check for tcp://aaa.aaa.aaa/111.111.111.111:61616! Throwing InactivityIOException. 
11:23:09,218 WARN  [ActiveMQConnection] Async exception with no exception listener: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: some.domain.com/som.ip.he.re:61616 
org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: some.domain.com/som.ip.he.re:61616 
        at org.apache.activemq.transport.InactivityMonitor$4.run(InactivityMonitor.java:108) 
11:23:09,218 DEBUG [TcpTransport] Stopping transport tcp://some.domain.com/som.ip.he.re:61616 
11:23:09,218 WARN  [ActiveMQConnection] Async exception with no exception listener: java.net.SocketException: socket closed 
java.net.SocketException: socket closed 
        at java.net.SocketInputStream.socketRead0(Native Method) 
        at java.net.SocketInputStream.read(Unknown Source) 
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50) 
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58) 
        at java.io.DataInputStream.readInt(Unknown Source) 
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268) 
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:192) 
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:184) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172) 
        at java.lang.Thread.run(Unknown Source) 
------------ 

",RedHat Linux,antoniogmc,hansonkx,jmontanez@emn8.com,justinpitts@gmail.com,konrad_a,lansa,sparky2708,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-02-22 10:08:51.775,,,false,,,,,,,,,,,,,,,,,84519,,,Wed Jun 25 00:19:28 UTC 2008,,,,,,,,"0|i0ku2n:",119690,,,,,,,,,,,,,,,,,,,"22/Feb/08 06:11;sparky2708;Thanks for your fast reply, Rob. 

I tried activeMQ 5.1. 
The connection alive time is longer than 5.0 version that I used before. 
But it still closes the connection after some while. 

I attach the exception logs below. 
Is there any configuration value for idle timeout? 
----- 
18:34:04,249 DEBUG [InactivityMonitor] No message sent since last write check, sending a KeepAliveInfo 
18:34:14,249 DEBUG [InactivityMonitor] 30000 ms elapsed since last read check. 
18:34:14,249 DEBUG [InactivityMonitor] No message received since last read check for tcp://some.domain.com/127.0.0.1:61616! Throwing InactivityIOException. 
18:34:14,249 WARN  [ActiveMQConnection] Async exception with no exception listener: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: some.domain.com/127.0.0.1:61616 
org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: some.domain.com/127.0.0.1:61616 
        at org.apache.activemq.transport.InactivityMonitor$4.run(InactivityMonitor.java:142) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 
        at java.lang.Thread.run(Unknown Source) 
18:34:14,249 DEBUG [TcpTransport] Stopping transport tcp://some.domain.com/127.0.0.1:61616 
18:34:14,265 WARN  [ActiveMQConnection] Async exception with no exception listener: java.net.SocketException: socket closed 
java.net.SocketException: socket closed 
        at java.net.SocketInputStream.socketRead0(Native Method) 
        at java.net.SocketInputStream.read(Unknown Source) 
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50) 
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58) 
        at java.io.DataInputStream.readInt(Unknown Source) 
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:267) 
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:203) 
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:195) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183) 
        at java.lang.Thread.run(Unknown Source) 



","22/Feb/08 06:12;sparky2708;I am using activemq-all-5.1-SNAPSHOT.jar and still get this error: 

2008-02-19 11:44:25,768 (ActiveMQConnection.java:1453) WARN  org.apache.activemq.ActiveMQConnection - Async exception with no exception listener: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long. 
org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long. 
        at org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:101) 
        at org.apache.activemq.transport.InactivityMonitor.access$000(InactivityMonitor.java:35) 
        at org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:51) 
        at edu.emory.mathcs.backport.java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:431) 
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.runAndReset(FutureTask.java:198) 
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:189) 
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:213) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) 
        at java.lang.Thread.run(Thread.java:595) 


","22/Feb/08 10:08;marcobuss;Try such a connector URL.

tcp://jmshost:61616?wireFormat.maxInactivityDuration=0","22/Feb/08 16:33;sparky2708;Already tried ""tcp://jmshost:61616?wireFormat.maxInactivityDuration=0"". What happens in this case is that the client is still dropped but there is no exception. The client just stops receiving messages - so isn't much better :-)

Thanks for the advice","25/Apr/08 06:13;rgavlin;Please ignore.","25/Jun/08 00:19;jmontanez@emn8.com;Can we get a solution to this made available in 4.1.1?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EOFExceptions and Broken Pipe exceptions everywhere in 5.0 (my services seem to run fine under 4.1 and 4.1.1 and somewhat better in 5.1-SNAPSHOT [if you don't count the queue size problem] which is critical),AMQ-1603,12482306,12482237,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,sparky2708,sparky2708,25/Feb/08 23:34,10/Jun/08 13:44,30/Jan/20 16:55,09/Apr/08 08:40,5.0.0,,,,,,,5.1.0,,,Broker,,,,4,"I keep getting these errors when any of my services startup... This version doesn't look too stable.

javax.jms.JMSException: java.io.EOFException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1642)
	at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1659)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:169)
	at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:95)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:176)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.EOFException
	at java.io.DataInputStream.readInt(DataInputStream.java:358)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:192)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:184)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
	... 1 more


and this one:

javax.jms.JMSException: Channel was inactive for too long: puccell/10.0.55.197:61616
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1642)
	at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1659)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:169)
	at org.apache.activemq.transport.InactivityMonitor$4.run(InactivityMonitor.java:108)
Caused by: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: puccell/10.0.55.197:61616
	... 1 more",,antoniogmc,konrad_a,mkelley63,nmervaillie,sparky2708,steff,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1600,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-03-04 11:16:38.377,,,false,,,,,,,,,,,,,,,,,84636,,,Wed Apr 09 08:40:57 UTC 2008,,,,,,,,"0|i0ku2v:",119691,,,,,,,,,,,,,,,,,,,"25/Feb/08 23:36;sparky2708;and:

javax.jms.JMSException: java.io.InterruptedIOException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1183)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1262)
	at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:453)
	at com.company_name.messaging.MessageManager.createConnection(MessageManager.java:101)
	at com.company_name.messaging.MessageManager.rebuildConnection(MessageManager.java:123)
	at com.company_name.messaging.MessageManager.onException(MessageManager.java:146)
	at org.apache.activemq.ActiveMQConnection$3.run(ActiveMQConnection.java:1648)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.InterruptedIOException
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:89)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:70)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:75)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1172)
	... 9 more","04/Mar/08 11:16;steff;I have the same exception metioned above. I've invested some time to trace the
cause because I haven't found a solution to this problem. I'm attaching a very
small patch for the InactivityMonitor which solves the problem for me
completly, but I don't know if this is the right way to solve it.

Some explaination to the patch:

The InactivityMonitor schedules two tasks. One is called every t ms and checks
if a message has been received since the last call. If this is not the
case an InactivityException is thrown.

The second task is called every t/2 ms and checks if a message was sent since
the last call. If this wasn't the case it sends a KeepAliveInfo AND sets the
send-flag which in turn prevents the next call from the sending this message
again.

When no application messages are sent or received a KeepAliveInfo is sent every
t ms. But the receiver also expects to receive a message every t ms . Now it is
a sole matter of timing until the KeepAliveInfo is sent some ms too late for
the receiver and the connection is closed by mistake.

{noformat}
Index: activemq-core/src/main/java/org/apache/activemq/transport/InactivityMonitor.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/transport/InactivityMonitor.java    (Revision 633376)
+++ activemq-core/src/main/java/org/apache/activemq/transport/InactivityMonitor.java    (Arbeitskopie)
@@ -157,7 +157,9 @@
                 next.oneway(o);
             }
         } finally {
-            commandSent.set(true);
+            if (o.getClass() != KeepAliveInfo.class) {
+                commandSent.set(true);
+            }
             inSend.set(false);
         }
     }
{noformat}","21/Mar/08 17:56;mkelley63;The EOFException is described in AMQ-1538. Not sure what the process is for linking issues here (info welcome), so I'm just adding this comment. ","31/Mar/08 16:18;eddie_epstein;FYI, the patch looks good for testing with the tcp: connector, but it breaks our code's use of the http: connector.","09/Apr/08 08:40;rajdavies;Fixed by SVN revision 638942",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ broker in JBoss hangs when receiving > 25k messages,AMQ-1769,12482487,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,aaronriekenberg,aaronriekenberg,04/Jun/08 22:10,05/Jun/08 16:06,30/Jan/20 16:55,05/Jun/08 16:06,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"Wrote a Java program to send 100000 TextMessage's to a JMS queue.  An EJB3 MDB in JBoss is listening to the queue and does a System.out.println when messages are received.

After ~25k messages are processed by the MDB, the following message is printed to the screen, and messages stop being processed by the MDB:

16:57:33,391 INFO  [KahaStore] Kaha Store using data directory activemq-data/jboss.activemq/tmp_storage

It appears activemq is hanging just after the ""KahaStore"" message is output.  No such problems have been observed using JBossMQ.

Attached is the output of kill -3 <pid of jboss> showing stack traces of all threads just after the hang happens (dump.txt), the client program that sends lots of messages (Test.java), and the MDB (TerminalTrackConsumerMDB.java).","RHEL 5 AMD64, Sun JDK 1.5.0_14, ActiveMQ 5.1.0 running in JBoss 4.2.2",josephcu,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1773,AMQ-1774,"04/Jun/08 22:10;aaronriekenberg;ASF.LICENSE.NOT.GRANTED--TerminalTrackConsumerMDB.java;https://issues.apache.org/jira/secure/attachment/12461141/ASF.LICENSE.NOT.GRANTED--TerminalTrackConsumerMDB.java","04/Jun/08 22:10;aaronriekenberg;ASF.LICENSE.NOT.GRANTED--Test.java;https://issues.apache.org/jira/secure/attachment/12461160/ASF.LICENSE.NOT.GRANTED--Test.java","04/Jun/08 22:10;aaronriekenberg;ASF.LICENSE.NOT.GRANTED--dump.txt;https://issues.apache.org/jira/secure/attachment/12461090/ASF.LICENSE.NOT.GRANTED--dump.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84777,,,Wed Jun 04 23:15:18 UTC 2008,,,,,,,,"0|i0rzm7:",161414,,,,,,,,,,,,,,,,,,,"04/Jun/08 23:15;aaronriekenberg;After doing more testing, it appears this problem is triggered by use of the setTimeToLive call on the MessageProducer setting the TTL to 10 seconds.

If I remove the setTimeToLive call, or do setTimeToLive(0), I can run the test multiple times with no hangs.  The Kaha Store message still comes out, but the MDB keeps processing all the messages.

Also if I make the TTL time sufficiently large it does not hang.  100 seconds works.

I suspect there is a problem here with removing timed out messages from the queue.

I also tried deploying ActiveMQ 4.1.2 into my JBoss setup and it hung in the same way with a 10 second TTL.

If anybody has suggestions of other things to try or wants more data please I'm happy to try nearly anything.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
possible dynamic instability in AMQStore indexes,AMQ-1683,12482323,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,rajdavies,rajdavies,24/Apr/08 12:00,24/Apr/08 18:34,30/Jan/20 16:55,24/Apr/08 12:20,5.0.0,,,,,,,5.1.0,,,Broker,Message Store,,,0,Due to incorrect assignment of index names - an index physical file can be shared between different durable subscribers - which leads to a dynamic instability of the underlying index - with undefined results.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84613,,,Thu Apr 24 12:20:58 UTC 2008,,,,,,,,"0|i0rzkv:",161408,,,,,,,,,,,,,,,,,,,"24/Apr/08 12:20;rajdavies;Fixed by SVN revision 651242",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem in Kaha persistence with file name lengths and collisions during persistence,AMQ-1663,12482477,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,yaussy,yaussy,14/Apr/08 13:24,14/Apr/08 16:19,30/Jan/20 16:55,14/Apr/08 16:02,5.1.0,,,,,,,5.1.0,,,Broker,,,,0,"The management of file names within Kaha persistence is such that it may create a file with a name that ends up colliding with a file meant for a different, but very close, topic name.  The file names are ultimately managed by org/apache/activemq/util/IOHelper.java, which will trim the file name down to a maximum file name size, default of 64.  With sufficiently large topic names, it is possible to create a collision with this scheme.  Ours is large enough, that even if I push the max to 200 (attempting to stay under the 256 max length in Solaris), I can still get a collision.

What this results in is modifications to a file for two different items and/or consumers, which causes corruption and errors.
","Solaris 10, JDK 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-14 16:02:54.139,,,false,,,,,,,,,,,,,,,,,84801,,,Mon Apr 14 16:19:54 UTC 2008,,,,,,,,"0|i0rzsf:",161442,,,,,,,,,,,,,,,,,,,"14/Apr/08 16:02;rajdavies;You can set the following system properties:

MaximumDirNameLength
MaximumFileNameLength

to configure your way around this","14/Apr/08 16:19;yaussy;Rob,

This is not a viable option.  As I indicated, I already did that - I set it to 200.  But, fundamentally, given a sufficiently large topic naming convention, it is possible to create a collision.

In our environment, we actually do not need to recover an AMQBroker on existing files, so our AMQBroker restart just deletes the persistent directory.  However, we do utilize and need the persistence.  So, to get around this problem right now, I've changed the HashIndex.java to use a static sequence number to name the files, rather than using the whole name.  I started out using name.hashCode(), which I think would be fine, but could in theory have a collision.  Seems to me the final solution would need to incorporate some sort of file index file, so that you could map the ""real"" names to some opaque naming convention that would guarantee the file name is not too long, and also guarantee no file name collisions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker Network Deadlocking,AMQ-1641,12482321,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,samwalton,samwalton,01/Apr/08 15:13,09/Apr/08 18:25,30/Jan/20 16:55,09/Apr/08 18:25,5.0.0,,,,,,,5.1.0,,,,,,,0,"I have two brokers, on two different machines.

Broker A opens a duplex connection to Broker B, by having the following in its config:

<networkConnectors>
      <networkConnector name=""hostfora"" uri=""static://(tcp://hostforB:5675)"" duplex=""true"" networkTTL=""5"" dynamicOnly=""true""/>
</networkConnectors>

We have producers and consumers on both brokers, but the majority of the message flow is from the producers on A to the consumers on B.  After a while, messages stop flowing.  Thread dumps on both brokers reveal the following.


==================
Broker A Thread Dump
==================

""ActiveMQ Transport Status Monitor: openwire"" daemon prio=10 tid=0xcdfc5000 nid=0x130f waiting on condition [0xcdab5000..0xcdab56f0]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
      at java.lang.Thread.sleep(Native Method)
      at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:102)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Transport Server: tcp://localhost:5675"" daemon prio=10 tid=0xcdfc4800 nid=0x130e runnable [0xcdcff000..0xcdcff670]
   java.lang.Thread.State: RUNNABLE
      at java.net.PlainSocketImpl.socketAccept(Native Method)
      at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
      - locked <0xd34062c8> (a java.net.SocksSocketImpl)
      at java.net.ServerSocket.implAccept(ServerSocket.java:450)
      at java.net.ServerSocket.accept(ServerSocket.java:421)
      at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:197)
      at java.lang.Thread.run(Thread.java:619)


INACTIVITY MONITORS
--------------------------------

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@34a2a5"" daemon prio=10 tid=0x081c3800 nid=0x2ac8 waiting on condition [0xca55d000..0xca55d570]
   java.lang.Thread.State: TIMED_WAITING (parking)
      at sun.misc.Unsafe.park(Native Method)
      - parking to wait for  <0xd34050c8> (a java.util.concurrent.SynchronousQueue$TransferStack)
      at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
      at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)
      at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)
      at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)
      at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:944)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:906)
      at java.lang.Thread.run(Thread.java:619)

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@12875ac"" daemon prio=10 tid=0x08495000 nid=0x2ac7 waiting on condition [0xca3ff000..0xca3ff4f0]
   java.lang.Thread.State: TIMED_WAITING (parking)
      at sun.misc.Unsafe.park(Native Method)
      - parking to wait for  <0xd34050c8> (a java.util.concurrent.SynchronousQueue$TransferStack)
      at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
      at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)
      at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)
      at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)
      at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:944)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:906)
      at java.lang.Thread.run(Thread.java:619)

""InactivityMonitor WriteCheck"" prio=10 tid=0x0846ec00 nid=0x1311 in Object.wait() [0xcda13000..0xcda137f0]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
      at java.lang.Object.wait(Native Method)
      at java.util.TimerThread.mainLoop(Timer.java:509)
      - locked <0xd3408638> (a java.util.TaskQueue)
      at java.util.TimerThread.run(Timer.java:462)

""InactivityMonitor ReadCheck"" prio=10 tid=0x08425800 nid=0x1310 in Object.wait() [0xcda64000..0xcda64770]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
      at java.lang.Object.wait(Native Method)
      at java.util.TimerThread.mainLoop(Timer.java:509)
      - locked <0xd3408a30> (a java.util.TaskQueue)
      at java.util.TimerThread.run(Timer.java:462)

Broker A - B CONNECTIONS
----------------------------------------

""ActiveMQ Transport: tcp://hostforB:5675"" prio=10 tid=0x083d1000 nid=0x2696 runnable [0xca3ae000..0xca3ae770]
   java.lang.Thread.State: RUNNABLE
      at java.net.SocketInputStream.socketRead0(Native Method)
      at java.net.SocketInputStream.read(SocketInputStream.java:129)
      at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
      at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
      at java.io.DataInputStream.readInt(DataInputStream.java:370)
      at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268)
      at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:192)
      at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:184)
      at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
      at java.lang.Thread.run(Thread.java:619)

====>
====> Blocked on write to broker A because broker A isn't reading?
====>
""ActiveMQ Connection Dispatcher: vm://localhost#18"" daemon prio=10 tid=0x0849a800 nid=0x2695 runnable [0xcbaa8000..0xcbaa86f0]
   java.lang.Thread.State: RUNNABLE
      at java.net.SocketOutputStream.socketWrite0(Native Method)
      at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
      at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
      at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:105)
      at java.io.DataOutputStream.flush(DataOutputStream.java:106)
      at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:154)
      at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:189)
      - locked <0xd42a6548> (a org.apache.activemq.transport.InactivityMonitor$2)
      at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:82)
      at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:91)
      at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
      - locked <0xd42a6028> (a java.lang.Object)
      at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
      at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:578)
      at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:138)
      at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
      at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
      at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:98)
      at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
      - locked <0xd4252740> (a java.lang.Object)
      at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
      at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1151)
      at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:766)
      at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:801)
      at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
      at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""VMTransport: vm://localhost#19"" daemon prio=10 tid=0x08499000 nid=0x2694 in Object.wait() [0xca5ae000..0xca5ae670]
   java.lang.Thread.State: WAITING (on object monitor)
      at java.lang.Object.wait(Native Method)
      at java.lang.Object.wait(Object.java:485)
      at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
      - locked <0xd4252468> (a java.lang.Object)
      at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)


PRODUCER CONNECTIONS
----------------------------------------

""ActiveMQ Connection Dispatcher: /producer1:36897"" daemon prio=10 tid=0x083e0800 nid=0x131c in Object.wait() [0xcd6e9000..0xcd6e9570]
   java.lang.Thread.State: WAITING (on object monitor)
      at java.lang.Object.wait(Native Method)
      - waiting on <0xd34574b8> (a java.lang.Object)
      at java.lang.Object.wait(Object.java:485)
      at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
      - locked <0xd34574b8> (a java.lang.Object)
      at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Transport: tcp:///producer1:36897"" daemon prio=10 tid=0x0846bc00 nid=0x131a runnable [0xcd78b000..0xcd78b470]
   java.lang.Thread.State: RUNNABLE
      at java.net.SocketInputStream.socketRead0(Native Method)
      at java.net.SocketInputStream.read(SocketInputStream.java:129)
      at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
      at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
      at java.io.DataInputStream.readInt(DataInputStream.java:370)
      at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268)
      at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:192)
      at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:184)
      at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
      at java.lang.Thread.run(Thread.java:619)



===================
Broker B Thread Dump
===================

""ActiveMQ Transport Status Monitor: ssl"" daemon prio=10 tid=0x0836e000 nid=0x61b9 waiting on condition [0xcd9ae000..0xcd9ae5f0]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
      at java.lang.Thread.sleep(Native Method)
      at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:102)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Transport Server: ssl://localhost:443"" daemon prio=10 tid=0x08537c00 nid=0x61b8 runnable [0xcd9ff000..0xcd9ff570]
   java.lang.Thread.State: RUNNABLE
      at java.net.PlainSocketImpl.socketAccept(Native Method)
      at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
      - locked <0xd37acfb0> (a java.net.SocksSocketImpl)
      at java.net.ServerSocket.implAccept(ServerSocket.java:450)
      at com.sun.net.ssl.internal.ssl.SSLServerSocketImpl.accept(SSLServerSocketImpl.java:259)
      at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:197)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Transport Status Monitor: openwire"" daemon prio=10 tid=0xce21fc00 nid=0x61b7 waiting on condition [0xcdb56000..0xcdb566f0]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
      at java.lang.Thread.sleep(Native Method)
      at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:102)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Transport Server: tcp://localhost:5675"" daemon prio=10 tid=0xcdeffc00 nid=0x61b6 runnable [0xcddff000..0xcddff670]
   java.lang.Thread.State: RUNNABLE
      at java.net.PlainSocketImpl.socketAccept(Native Method)
      at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
      - locked <0xd37aca78> (a java.net.SocksSocketImpl)
      at java.net.ServerSocket.implAccept(ServerSocket.java:450)
      at java.net.ServerSocket.accept(ServerSocket.java:421)
      at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:197)
      at java.lang.Thread.run(Thread.java:619)


INACTIVITY MONITORS
--------------------------------

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@704cf5"" daemon prio=10 tid=0x081af400 nid=0x6498 waiting on condition [0xcba92000..0xcba926f0]
   java.lang.Thread.State: TIMED_WAITING (parking)
      at sun.misc.Unsafe.park(Native Method)
      - parking to wait for  <0xd346d318> (a java.util.concurrent.SynchronousQueue$TransferStack)
      at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
      at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)
      at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)
      at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)
      at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:944)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:906)
      at java.lang.Thread.run(Thread.java:619)

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@b8d09d"" daemon prio=10 tid=0x081aec00 nid=0x6452 waiting for monitor entry [0xcd70b000..0xcd70c570]
   java.lang.Thread.State: BLOCKED (on object monitor)
      at com.sun.net.ssl.internal.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:661)
      - waiting to lock <0xd3791d18> (a java.lang.Object)
      at com.sun.net.ssl.internal.ssl.SSLSocketImpl.sendAlert(SSLSocketImpl.java:1624)
      at com.sun.net.ssl.internal.ssl.SSLSocketImpl.warning(SSLSocketImpl.java:1477)
      at com.sun.net.ssl.internal.ssl.SSLSocketImpl.closeInternal(SSLSocketImpl.java:1279)
      - locked <0xd3791408> (a com.sun.net.ssl.internal.ssl.SSLSocketImpl)
      at com.sun.net.ssl.internal.ssl.SSLSocketImpl.close(SSLSocketImpl.java:1218)
      at org.apache.activemq.transport.tcp.TcpTransport.doStop(TcpTransport.java:430)
      at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:57)
      at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:439)
      at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:90)
      at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
      at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:78)
      at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
      at org.apache.activemq.broker.TransportConnection.disposeTransport(TransportConnection.java:1239)
      at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:917)
      at org.apache.activemq.broker.jmx.ManagedTransportConnection.doStop(ManagedTransportConnection.java:74)
      at org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:876)
      at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:40)
      at org.apache.activemq.broker.TransportConnection.serviceTransportException(TransportConnection.java:206)
      at org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:185)
      at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
      at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
      at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
      at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:201)
      at org.apache.activemq.transport.InactivityMonitor$5.run(InactivityMonitor.java:139)
      at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
      at java.lang.Thread.run(Thread.java:619)

""InactivityMonitor WriteCheck"" daemon prio=10 tid=0x083c3c00 nid=0x61bb in Object.wait() [0xcd7ff000..0xcd7ff4f0]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
      at java.lang.Object.wait(Native Method)
      - waiting on <0xd37d1e58> (a java.util.TaskQueue)
      at java.util.TimerThread.mainLoop(Timer.java:509)
      - locked <0xd37d1e58> (a java.util.TaskQueue)
      at java.util.TimerThread.run(Timer.java:462)

""InactivityMonitor ReadCheck"" daemon prio=10 tid=0x083c4800 nid=0x61ba in Object.wait() [0xcd95d000..0xcd95d470]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
      at java.lang.Object.wait(Native Method)
      - waiting on <0xd37ae218> (a java.util.TaskQueue)
      at java.util.TimerThread.mainLoop(Timer.java:509)
      - locked <0xd37ae218> (a java.util.TaskQueue)
      at java.util.TimerThread.run(Timer.java:462)

Broker A - B CONNECTIONS
---------------------------------------

""ActiveMQ Connection Dispatcher: vm://localhost#0"" daemon prio=10 tid=0x082f5000 nid=0x61e8 waiting for monitor entry [0xccb57000..0xccb57570]
   java.lang.Thread.State: BLOCKED (on object monitor)
      at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:39)
      - waiting to lock <0xd3782640> (a java.lang.Object)
      at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
      at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:579)
      at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:138)
      at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
      at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
      at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:98)
      at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
      - locked <0xd3782a58> (a java.lang.Object)
      at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
      at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1151)
      at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:766)
      at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:801)
      at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
      at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""VMTransport: vm://localhost#1"" daemon prio=10 tid=0x082f4000 nid=0x61e7 runnable [0xccba7000..0xccba86f0]
   java.lang.Thread.State: RUNNABLE
      at java.net.SocketOutputStream.socketWrite0(Native Method)
      at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
      at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
      at com.sun.net.ssl.internal.ssl.OutputRecord.writeBuffer(OutputRecord.java:283)
      at com.sun.net.ssl.internal.ssl.OutputRecord.write(OutputRecord.java:272)
      at com.sun.net.ssl.internal.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:665)
      - locked <0xd3791d18> (a java.lang.Object)
      at com.sun.net.ssl.internal.ssl.AppOutputStream.write(AppOutputStream.java:59)
      - locked <0xd3793090> (a com.sun.net.ssl.internal.ssl.AppOutputStream)
      at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:105)
      at java.io.DataOutputStream.flush(DataOutputStream.java:106)
      at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:154)
      at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:189)
      - locked <0xd3793868> (a org.apache.activemq.transport.InactivityMonitor$2)
      at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:82)
      at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:91)
      at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
      - locked <0xd3793958> (a java.lang.Object)
      at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1151)
      at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:766)
      at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:727)
      at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:427)
      at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:93)
      at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:48)
      at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:601)
      at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:427)
      - locked <0xd3609748> (a org.apache.activemq.broker.region.Topic)
      at org.apache.activemq.broker.region.Topic.send(Topic.java:371)
      at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:328)
      at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:402)
      at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
      at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:125)
      at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
      at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:125)
      at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
      at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:434)
      at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:623)
      at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
      at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
      at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
      at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
      at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:202)
      at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
      at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)


====>
====> Nothing to dispatch from broker B
====>
""ActiveMQ Connection Dispatcher: /hostforA:50665"" daemon prio=10 tid=0x08431800 nid=0x61e4 in Object.wait() [0xccc4a000..0xccc4a770]
   java.lang.Thread.State: WAITING (on object monitor)
      at java.lang.Object.wait(Native Method)
      - waiting on <0xd37a6010> (a java.lang.Object)
      at java.lang.Object.wait(Object.java:485)
      at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
      - locked <0xd37a6010> (a java.lang.Object)
      at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

====>
====> Queue of traffic to broker A is full - and because this is the reading thread it also stops reading....
====>
""ActiveMQ Transport: tcp:///hostforA:50665"" daemon prio=10 tid=0x08430400 nid=0x61e3 waiting on condition [0xccc9b000..0xccc9b4f0]
   java.lang.Thread.State: WAITING (parking)
      at sun.misc.Unsafe.park(Native Method)
      - parking to wait for  <0xd37827e8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
      at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
      at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1889)
      at java.util.concurrent.LinkedBlockingQueue.put(LinkedBlockingQueue.java:254)
      at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:92)
      at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
      - locked <0xd3782640> (a java.lang.Object)
      at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
      at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:403)
      at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:149)
      at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
      at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
      at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
      at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:170)
      - locked <0xd3779350> (a org.apache.activemq.transport.InactivityMonitor$1)
      at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
      at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:185)
      at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
      at java.lang.Thread.run(Thread.java:619)


CONSUMER CONNECTIONS
----------------------------------------

""ActiveMQ Connection Dispatcher: /consumer1:2556"" daemon prio=10 tid=0x085b9000 nid=0x61c8 in Object.wait() [0xcd484000..0xcd484570]
   java.lang.Thread.State: WAITING (on object monitor)
      at java.lang.Object.wait(Native Method)
      - waiting on <0xd37bfd00> (a java.lang.Object)
      at java.lang.Object.wait(Object.java:485)
      at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
      - locked <0xd37bfd00> (a java.lang.Object)
      at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Transport: ssl:///consumer1:2556"" daemon prio=10 tid=0x085be000 nid=0x61c2 runnable [0xcd66a000..0xcd66a470]
   java.lang.Thread.State: RUNNABLE
      at java.net.SocketInputStream.socketRead0(Native Method)
      at java.net.SocketInputStream.read(SocketInputStream.java:129)
      at com.sun.net.ssl.internal.ssl.InputRecord.readFully(InputRecord.java:293)
      at com.sun.net.ssl.internal.ssl.InputRecord.read(InputRecord.java:331)
      at com.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:722)
      - locked <0xd37c0af0> (a java.lang.Object)
      at com.sun.net.ssl.internal.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:679)
      at com.sun.net.ssl.internal.ssl.AppInputStream.read(AppInputStream.java:75)
      - locked <0xd37c0e30> (a com.sun.net.ssl.internal.ssl.AppInputStream)
      at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
      at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
      at java.io.DataInputStream.readInt(DataInputStream.java:370)
      at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268)
      at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:192)
      at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:184)
      at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
      at java.lang.Thread.run(Thread.java:619)



It seems that B gets stuck because the queue in the VMTransport fills up.  The thread in B that stops, both blocks removal of items from the queue, and also is responsible for reading data from the A to B socket.  Therefore, all comms between A & B stops.",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84627,,,2008-04-01 15:13:51.0,,,,,,,,"0|i0rzs7:",161441,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Negative queue size (reproducible),AMQ-1940,12482508,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,cshannon,vchekan,vchekan,17/Sep/08 07:14,24/Jan/17 13:49,30/Jan/20 16:55,24/Jan/17 13:49,5.2.0,,,,,,,5.14.4,5.15.0,,Broker,,,,5,"When you ""purge"" queue from web admin console, it zeroes queue message
counter. But if you have an active consumer at that time which
pre-fetched messages than your consumer will keep sending ack as it
process messages from its buffer. ActiveMQ will keep decrement counter
upon receiving each ack. So when consumer is done queue will show
MINUS<consumer buffer size>.

",Found on Windows but reproduced under Linux,christianmovi,cp123,cshannon,ghopper,gtully,hubbitus,jira-bot,ryarger,vadimos,wfrag,wouterv,wschlich,yinghe0101,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Sep/08 07:16;vchekan;Main.java;https://issues.apache.org/jira/secure/attachment/12461247/Main.java","10/Mar/09 22:10;bmoran;Picture 6.png;https://issues.apache.org/jira/secure/attachment/12461388/Picture+6.png","17/Sep/08 14:45;bsnyder;QueuePurgeTest.java.diff.txt;https://issues.apache.org/jira/secure/attachment/12461132/QueuePurgeTest.java.diff.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-09-17 08:36:16.502,,,false,,,,,,,,,,,,,,,,,75166,,,Tue Jan 24 13:48:35 UTC 2017,,,,,,,,"0|i0rzw7:",161459,Regression,,,,,,,,,,,,,,,,,,"17/Sep/08 07:16;vchekan;Attached program reproduces a queue with -100 messages.","17/Sep/08 08:36;bsnyder;I've created the following test case out of the attached {{Main.java}} class: 

{code}
package org.apache.activemq.broker.region;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;
import javax.jms.TextMessage;
import javax.management.MBeanServerInvocationHandler;
import javax.management.MalformedObjectNameException;
import javax.management.ObjectName;

import junit.framework.TestCase;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.broker.BrokerService;
import org.apache.activemq.broker.jmx.QueueViewMBean;

public class QueuePurgeTest extends TestCase {
    
    BrokerService broker; 
    ConnectionFactory factory; 
    Connection connection;
    Session session;
    Queue queue;
    MessageConsumer consumer;

    protected void setUp() throws Exception {
        broker = new BrokerService();
        broker.setUseJmx(true);
        broker.setPersistent(false);
        broker.addConnector(""tcp://localhost:0"");
        broker.start();
        
        factory = new ActiveMQConnectionFactory(""vm://localhost"");
        
        connection = factory.createConnection();
        connection.start();
    }

    protected void tearDown() throws Exception {
        consumer.close();
        session.close();
        connection.stop();
        connection.close();
        broker.stop();
    }
    
    public void testPurgeQueueWithActiveConsumer() throws Exception {
        createProducerAndSendMessages();        
        QueueViewMBean proxy = getProxyToQueueViewMBean();
        createConsumer();
        proxy.purge();
        assertEquals(""Queue size is not zero, it's "" + proxy.getQueueSize(), 0, proxy.getQueueSize());
    }

    private QueueViewMBean getProxyToQueueViewMBean()
            throws MalformedObjectNameException, JMSException {
        ObjectName queueViewMBeanName = new ObjectName(""org.apache.activemq"" + "":Type=Queue,Destination="" + 
                queue.getQueueName() + "",BrokerName=localhost"");
        QueueViewMBean proxy = (QueueViewMBean)MBeanServerInvocationHandler.newProxyInstance(
                broker.getManagementContext().getMBeanServer(), 
                queueViewMBeanName, QueueViewMBean.class, true);
         
         return proxy;
    }
    
    private void createProducerAndSendMessages() throws Exception {
        session =  connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);
        queue = session.createQueue(""test1"");
        MessageProducer producer = session.createProducer(queue);
        for(int i=0; i<10000; i++) {
            TextMessage message = session.createTextMessage(""message ""+i);
            producer.send(message);
        }
        producer.close();
    }
    
    private void createConsumer() throws Exception {
        consumer = session.createConsumer(queue);
        // wait for buffer fill out
        Thread.sleep(5*1000);
        
        for(int i = 0; i < 100; ++i) {
            Message message = consumer.receive();
            message.acknowledge();
        }
    }

}
{code}

What I'm finding is that failure is intermittent, but I am able to see it once in a while: 

{panel}
junit.framework.AssertionFailedError: Queue size is not zero expected:<0> but was:<-60>
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.failNotEquals(Assert.java:282)
	at junit.framework.Assert.assertEquals(Assert.java:64)
	at junit.framework.Assert.assertEquals(Assert.java:136)
	at org.apache.activemq.broker.region.QueuePurgeTest.testPurgeQueueWithActiveConsumer(QueuePurgeTest.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
{panel}","17/Sep/08 17:48;vchekan;Perhaps it can be made more reproducible if purge is run in a thread parallel to the consumer. I'll try to rewrite it later tonight.","22/Sep/08 18:15;rajdavies;Fixed by SVN revision 697921","04/Nov/08 17:24;ghopper;1693 displays the same symptom of negative message counts.","10/Mar/09 22:09;bmoran;I can reproduce this in 5.2.0. 
I am going to attach a screenshot.","10/Mar/09 22:10;bmoran;Screenshot of negative messages, reproducible in 5.2.0 after purging the message queue, STOMP clients.
","27/Mar/09 09:24;deathemperor;I can reproduct this in 5.2.0. This happens to me because there are too many receivers, each of them try to recevie 500 messages but the total messages in queue is smaller, hence negative number.","27/Mar/09 10:37;yuriushakov;We have the same problem with 5.2.0.  A queue, single consumer, single producer.  We have -1 pending now, 1616 sent, 1617 received.","02/Apr/09 08:55;deathemperor;I can reproduce this on 5.2.0 too. I have 7 consumers getting 150 messages each. The negative number I receive is -123 at lowest.","20/May/09 04:44;wfrag;I had the same issue today. 

We are running two AMQ brokers in network of brokers, each one talking to the other one (the duplex is set to false). Under a high load after few hours I've noted that one of our queues started growing on both nodes, several thousand of pending messages in about 20 minutes (and the cursor memory usage was quite large). After I accidentally stopped the second node, the network bridge stopped on the first node and the queue size on the first node immediately became ""-8"".

So in my case this probably somehow related to the instability of network of brokers implementation, because if I disable the network connector the system runs stable for several days under the load.","26/May/09 08:51;rajdavies;Fixed for the 5.3","22/Jul/13 12:50;hubbitus;We seen such issue on 5.6.0 ActiveMQ.","02/Jul/14 06:56;wschlich;We also experience this currently with ActiveMQ 5.8.0.","11/Feb/15 06:18;cp123;Still have this issue in 5.10.0. Moreover, sometime I can see number of pending messages groving, but if I try to browse queue, I see nothing there. I.e. this numbers are all wrong.","11/Feb/15 11:32;cp123;What I can see in JMX using Hawtio:
Total dequeue count 2474137
Total enqueue count 1795563
Total message count -678584

BTW, I have camel route within broker, where incoming messages are duplicated in two queues. And, at the moment, web console displays something like:

||queue||pending||enqueued||dequeued||
|algo250a|856725|906471|1552909|
|algo250b|-23451|906472|929923|
|highwayQueue|0|0|	0|

Last one is inbound queue, algoxxx are outbound. I expect that number of enqueued messages for inbound Q should be equal to number of dequeued. But its always zero.
","11/Feb/15 12:06;gtully;@Sergey - can you make a junit test case that can reproduce - peek at the activemq-camel module if you need to use camel routes","11/Feb/15 12:14;cp123;I've just created AMQ-5576, and where is a route test case.

Just deploy this route, and send 1 message into inbound queue using web console, it should be enough to reproduce some of issues with counters/sizes.","19/Jan/17 18:14;cshannon;I noticed this issue today when doing a purge.  I believe the issue is that after the messages are removed in the do/while loop inside the queue purge method the statistics counter is reset to 0.  This is a problem because there is nothing preventing messages from being added to the Queue in between message removal and resetting of the counters.  This means it's possible to have new messages in the queue but the counter is set to 0 such that the count will now go negative when those messages acked.

[~gtully], I think the fix is as simple as removing two lines of code on line 1267 and 1268.  https://github.com/apache/activemq/blob/activemq-5.14.3/activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java#L1267

I don't see any reason why we should need to reset the messages cursor or the messages statistics counter to 0 at the end if the purge behaves properly as the counter should already be properly decremented when each message is dropped.  What do you think?","20/Jan/17 10:57;gtully;[~cshannon] that is interesting.. I agree, setting to zero does seem wrong.  Also, I think it makes sense to sync some more such that both sending and dispatch is locked out.
Seems there two issues: 
 1) the concurrent send issue
 2) removing messages that may be dispatched and the ack doing a double decrement

for 1) locking is the answer
for 2) locking and then a) ensuring that an ack does not decrement if the message cannot be found or b) purge ignoring inflight messages or c) ensuring the stat cannot go negative. 

2b may be the cleanest but may be difficult to implement, on balance maybe go for 2a. 2c would potentially hide later problems 
","20/Jan/17 11:30;cshannon;[~gtully], Thanks for the feedback.  I was going to try for option 2a) (and possibly 2b) initially because it seems like some of that work might have already been done over the years to prevent handling acks for messages that don't exist.  I will check the ack handling to verify and see what changes are needed.

In terms of locking I thought about this but was concerned about it being a bit slow if the purge took a long time.  My initial thought was to just grab a write lock on the pagedInMessagesLock for the entire purge() method and release when purge is done.  This should prevent new messages from being sent to the Queue.  Off the top of my head I don't remember if that is sufficient for preventing dispatch or if we need to grab another lock such as the messages lock or pagedInPendingDispatchLock. ","20/Jan/17 13:12;gtully;I don't think perf is a problem with the purge operation. an all out destination pause is sensible to maintain consistent state. I think purge needs to take  the sendLock and pagedInPendingDispatchLock. It is like purge a snapshot. Inflight sends can still be inflight. ","20/Jan/17 13:27;cshannon;Makes sense, I don't think I'll get a chance today but hopefully Monday I'll take a look at a patch for this.","23/Jan/17 19:53;cshannon;[~gtully], I don't think we need to do anything here other than to grab the sendLock to prevent new messages from coming in while the purge is running and works its way through all the pending messages in the queue including already dispatched messages (we can also remove the line of code that sets the count to 0 which isn't necessary)

For messages that are already dispatched we don't seem to need to worry about the ack doing a double decrement.  If the Queue has been purged and the already dispatched messages are acked later the metrics don't double decrement because in dropMessage() there is a dropIfLive() check that will fail.  This scenario is already shown if you look at QueuePurgeTest and run testPurgeLargeQueueWithConsumer.  This test shows that after a purge if the consumer acks the messages already in prefetch the messages count doesn't go negative.

I suppose an argument could be made that we should clear out the dispatch list in each subscription to save memory but then if messages are acked we'd get a bunch of unmatched acknowledge warnings in the log because assertAckMatchesDispatched() in PrefetchSubscription would throw a bunch of exceptions when the acks came in.","24/Jan/17 13:48;jira-bot;Commit 56bb079c8227a2beee609b205c001d66597db98a in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=56bb079 ]

https://issues.apache.org/jira/browse/AMQ-1940

Queue purge now acquires the sendLock to prevent new messages from
coming in while purging.  The statistics are no longer zeroed out as
they should properly decrement as messages are removed.  These changes
should prevent the statistics from going negative.
","24/Jan/17 13:48;jira-bot;Commit 1811d191afa91d15e6a37d13dbfd7fd8ef32690e in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1811d19 ]

https://issues.apache.org/jira/browse/AMQ-1940

Queue purge now acquires the sendLock to prevent new messages from
coming in while purging.  The statistics are no longer zeroed out as
they should properly decrement as messages are removed.  These changes
should prevent the statistics from going negative.

(cherry picked from commit 56bb079c8227a2beee609b205c001d66597db98a)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in kahadb linked list,AMQ-2910,12483544,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,behrmann,behrmann,13/Sep/10 12:08,01/Sep/16 15:55,30/Jan/20 16:55,16/Sep/10 17:10,5.4.0,,,,,,,5.4.1,,,Message Store,,,,0,"We got the following NullPointerException in kahadb.

13 Sep 2010 05:53:30 (JMS) [] Caught an Exception adding a message: ActiveMQObjectMessage {commandId = 111839609, responseRequired = false, messageId = ID:statler.ndgf.org-42286-1282568899957-0:0:2:1:43748846, originalDestination = null, originalTransactionId = null, producerId = ID:statler.ndgf.org-42286-1282568899957-0:0:2:1, destination = queue://cells.domain.dCacheDomain, transactionId = null, expiration = 0, timestamp = 0, arrival = 0, brokerInTime = 1284350009950, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@1bada5d, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = false, readOnlyBody = false, droppable = false} first to FilePendingMessageCursor 
java.lang.NullPointerException: null
        at org.apache.kahadb.util.LinkedNode.unlink(LinkedNode.java:231) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.SequenceSet.removeFirstSequence(SequenceSet.java:203) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.PageFile.allocate(PageFile.java:753) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:137) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:121) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.createEntry(PList.java:425) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:170) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList$2.execute(PList.java:163) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:161) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:221) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:192) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:96) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1601) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:707) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:646) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:494) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:136) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) [activemq-all-5.4.0.jar:5.4.0]
        at java.lang.Thread.run(Thread.java:619) [na:1.6.0_20]
13 Sep 2010 05:53:30 (JMS) [] Async error occurred: java.lang.RuntimeException: java.lang.NullPointerException
java.lang.RuntimeException: java.lang.NullPointerException
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:228) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:192) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:96) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1601) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:707) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:646) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:494) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:136) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) [activemq-all-5.4.0.jar:5.4.0]
        at java.lang.Thread.run(Thread.java:619) [na:1.6.0_20]
Caused by: java.lang.NullPointerException: null
        at org.apache.kahadb.util.LinkedNode.unlink(LinkedNode.java:231) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.SequenceSet.removeFirstSequence(SequenceSet.java:203) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.PageFile.allocate(PageFile.java:753) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:137) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:121) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.createEntry(PList.java:425) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:170) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList$2.execute(PList.java:163) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:161) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:221) ~[activemq-all-5.4.0.jar:5.4.0]
        ... 24 common frames omitted

Looking at the code, it appears to me that the only way an NPE can be thrown at that place is if list is null. Since the same method however tests for that exact case, I suspect there is unsynchronized concurrent access to the LinkedNode.

A few hours later we got more failures:

13 Sep 2010 08:38:19 (JMS) [] Caught an Exception adding a message: ActiveMQObjectMessage {commandId = 29114496, responseRequired = false, messageId = ID:arctic01.csc.fi-39780-1280232016428-0:0:2:1:333447, originalDestination = null, originalTransactionId = null, producerId = ID:arctic01.csc.fi-39780-1280232016428-0:0:2:1, destination = queue://cells.domain.dCacheDomain, transactionId = null, expiration = 0, timestamp = 0, arrival = 0, brokerInTime = 1284359899636, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@6f28b428, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = false, readOnlyBody = false, droppable = false} first to FilePendingMessageCursor 
java.lang.NullPointerException: null
        at org.apache.kahadb.util.LinkedNode.isHeadNode(LinkedNode.java:64) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.LinkedNode.unlink(LinkedNode.java:230) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.SequenceSet.removeFirstSequence(SequenceSet.java:203) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.PageFile.allocate(PageFile.java:753) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:137) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:121) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.createEntry(PList.java:425) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:170) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList$2.execute(PList.java:163) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:161) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:221) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:192) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:96) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1601) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:707) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:646) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:494) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:136) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) [activemq-all-5.4.0.jar:5.4.0]
        at java.lang.Thread.run(Thread.java:619) [na:1.6.0_20]
13 Sep 2010 08:38:19 (JMS) [] Async error occurred: java.lang.RuntimeException: java.lang.NullPointerException
java.lang.RuntimeException: java.lang.NullPointerException
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:228) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:192) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:96) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1601) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:707) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:646) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:494) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:136) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:663) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) [activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) [activemq-all-5.4.0.jar:5.4.0]
        at java.lang.Thread.run(Thread.java:619) [na:1.6.0_20]
Caused by: java.lang.NullPointerException: null
        at org.apache.kahadb.util.LinkedNode.isHeadNode(LinkedNode.java:64) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.LinkedNode.unlink(LinkedNode.java:230) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.util.SequenceSet.removeFirstSequence(SequenceSet.java:203) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.PageFile.allocate(PageFile.java:753) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:137) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.allocate(Transaction.java:121) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.createEntry(PList.java:425) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:170) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList$2.execute(PList.java:163) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.store.kahadb.plist.PList.addLast(PList.java:161) ~[activemq-all-5.4.0.jar:5.4.0]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:221) ~[activemq-all-5.4.0.jar:5.4.0]
        ... 24 common frames omitted

We got a number of those exceptions with the same stack trace and then followed by tons of other NullPointerExceptions, likely because the list was corrupted at that point.


Not long after these stack traces message delivery began to hang. A restart of the broker only helped temporarily as message delivery would hang again after half a minute or so. To our big suprise moving the db directory to let ActiveMQ create a new database didn't solve the problem either. I am unable to tell to what extend that was caused by the above exceptions or not.

We are happy to provide any other information you may need to debug this problem.","java version ""1.6.0_20""
Java(TM) SE Runtime Environment (build 1.6.0_20-b02)
Clients connection to the broker use Active MQ 5.3.0 or 5.3.2.",behrmann,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/10 09:41;gtully;AMQ2910Test.java;https://issues.apache.org/jira/secure/attachment/12461868/AMQ2910Test.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-13 12:33:45.851,,,false,,,,,,,,,,,,,,,,,14826,,,Thu Sep 01 15:55:16 UTC 2016,,,,,,,,"0|i0ba1r:",63740,,,,,,,,,,,,,,,,,,,"13/Sep/10 12:33;gtully;That NPE is coming from the cursor so it is using the temp store. If it occurs after a restart you may have a test case in the making because the temp store does not persist through restarts. it is recreated as needed.
It would be great of you could wrangle up a test app that can reproduce.

As a workaround, consider using the default store cursor rather than the file pending message cursor.","13/Sep/10 12:50;behrmann;Unfortunately the exceptions did *not* occur again after a restart.

What did happen after a restart was that message delivery was very shaky. Message delivery worked to some clients and not to others. I have absolutely no idea why. I suspect that those NPEs corrupted some state (possibly in the clients) that survived the broker restart.  It was not possible for us to restart all clients at once, as they are not under our direct control.

As this happened on a large production system that we could not afford to keep down for debugging we have temporarily switched back to our old (non-JMS) messaging system.

Thanks for the tip about a possible workaround. ","16/Sep/10 09:41;gtully;Attaching a test case that can reproduce this exception. ","16/Sep/10 17:10;gtully;resolve in r997849

would  be great if you could validate tonight's 5.5-SNAPSHOT or build trunk yourself to validate.","01/Sep/16 15:55;jira-bot;Commit a0d05f8ea3e883a16d86b4a6755f7fc1a503f55b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a0d05f8 ]

AMQ-2910 fix timing on test timeout - ensure consumer connection is started
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport memory leak on rollback,AMQ-2364,12483025,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,fdelaporte,fdelaporte,24/Aug/09 14:54,11/Apr/16 13:09,30/Jan/20 16:55,30/Aug/09 18:22,5.2.0,5.3.0,,,,,,5.3.0,,,,,,,0,"See this description:
[http://activemq.2283324.n4.nabble.com/Failover-transport-memory-leak-on-rollback-td2365794.html]

I'm not sure but maybe the TransactionContext should call this.connection.syncSendPacket(info) instead of this.connection.asyncSendPacket(info).

Cheers,
Fabrice",Java 1.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-08-30 18:22:22.501,,,false,,,,,,,,,,,,,,,,,74966,,,Sun Aug 30 18:22:22 UTC 2009,,,,,,,,"0|i0s07b:",161509,,,,,,,,,,,,,,,,,,,"30/Aug/09 18:22;rajdavies;Fixed by SVN  revision 809395",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB doesn't clean up old files,AMQ-2736,12483957,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,adrian.trenaman,adrian.trenaman,18/May/10 09:38,02/Feb/15 13:07,30/Jan/20 16:55,17/Feb/11 18:11,5.3.2,,,,,,,5.5.0,,,,,,,12,"Over time, we're seeing that kahadb doesn't clean up old journal files. As a result, we eventually run out of disk space, or rather, we hit our usage limits and our producers are slowed down by the producer flow control mechanism. Others have experienced this problem too (for example, see http://mail-archives.apache.org/mod_mbox/activemq-users/201002.mbox/%3C27502591.post@talk.nabble.com%3E)

For now, we're moving back to the old amqPersistenceStore. 

",,adrian.trenaman,alisenberg,alsoloplan,artemsakhnov,bezudar,boday,brice,ciand7,cwikman,ee7arh,gtully,jiminoc,jjordan,kokushibyou,m4c0,phil.pickett@springsource.com,shbehna@gmail.com,srpietrowicz,tranchida,treyhyde,vmirea,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5542,,,,,"24/Sep/10 13:42;m4c0;AMQ-2736.zip;https://issues.apache.org/jira/secure/attachment/12461844/AMQ-2736.zip","08/Oct/10 16:27;gtully;AMQ2736Test_should_with_this_diff.txt;https://issues.apache.org/jira/secure/attachment/12461836/AMQ2736Test_should_with_this_diff.txt","13/Oct/10 17:28;m4c0;MyKahaDBStore.java;https://issues.apache.org/jira/secure/attachment/12461862/MyKahaDBStore.java","08/Oct/10 15:41;jgenender;amq-2987-testcase.patch;https://issues.apache.org/jira/secure/attachment/12461839/amq-2987-testcase.patch","07/Oct/10 18:13;jgenender;amq-2987.patch;https://issues.apache.org/jira/secure/attachment/12461834/amq-2987.patch",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,2010-05-18 11:10:52.095,,,false,,,,,,,,,,,,,,,,,14686,,,Fri Oct 05 12:52:15 UTC 2012,,,,,,,,"0|i00we7:",3180,,,,,,,,,,,,,,,,,,,"18/May/10 11:10;gtully;Could you provide a test case or scenario description that can reproduce?","18/May/10 12:16;adrian.trenaman;Hi Gary,

I'm afraid I don't have a test case for this right now; just observed
behaviour on our systems here -and- verified by other users via a Google
Search.

/Ade


","18/May/10 13:17;adrian.trenaman;Hi Gary,

Just retested against the very latest FUSE distribution (5.3.1-fuse-01-00) and the log files are being deleted. Looks like this may have been fixed. Will mark this as resolved for now, and revisit if we begin to see the errors again. 

/Ade","17/Sep/10 06:09;straun;I am seeing this with a broker holding transactional persistent messages (100k messages a day 10k per msg), the queue sizes are all around 0 normally so I would expect the files to be cleared. I am using 5.4.0. The consumer of the messages is a .Net client with 'auto acknowledge' set. The KahaDB also appears to slow down as it runs, writes to the queues slows down so that the each commit cycle is taking 10% longer than the last.","17/Sep/10 08:40;gtully;Straun, can you provide some sort of test case that can reproduce what you are seeing? Maybe a simple java producer/consumer that mimics what your .Net add does.","24/Sep/10 13:42;m4c0;I'm attaching a test case that reproduces what I got here.

I tested with a Producer sending 1mi messages (in 100-message blocks) and a Consumer. After some time, I receive a ""Usage Manager Store is Full, 100% of 1073741824. Stopping producer (...)"" with only a hundred messages on the queue!","07/Oct/10 13:42;jgenender;Looks like there *maybe* a wait/lock condition on multiple ""KahaDB Scheduler"" threads...

I took the attached example and was able to reproduce the problem.  A thread dump showed waits on the ""KahaDB Scheduler"".  I knocked out one of the schedulers and it appears to clean up.

Hence... can you please try setting schedulerSupport=""false"" on the broker configuration and see if the files no longer grow?   This may be a work around for the time being.  Hopefully this is in the right direction...","07/Oct/10 13:49;jgenender;I ran the attached example and was able to reproduce it and indeed appears to endlessly grow.  I did a thread dump during the condition and there appears to be a possible locking problem with multiple ""KahaDB Scheduler"" threads.

As an experiment I killed one of the KahaDB Schedulers and it seemed to clean up.  I ran the example several times and it seems to clean up.  So this *may* be the culprit.

So please try this as a work around...

In the broker configuration set schedulerSupport=""false"" and see if the files clean up.  This may help until we identify the waits on multiple schedulers.","07/Oct/10 13:49;jgenender;I ran the attached example and was able to reproduce it and indeed appears to endlessly grow.  I did a thread dump during the condition and there appears to be a possible locking problem with multiple ""KahaDB Scheduler"" threads.

As an experiment I killed one of the KahaDB Schedulers and it seemed to clean up.  I ran the example several times and it seems to clean up.  So this *may* be the culprit.

So please try this as a work around...

In the broker configuration set schedulerSupport=""false"" and see if the files clean up.  This may help until we identify the waits on multiple schedulers.","07/Oct/10 13:50;jgenender;Oops... sorry for the multiple posts :/","07/Oct/10 18:13;jgenender;My last comment was a red herring.  I found the bug... it s a logic bug.  Patch has been attached.  I will try to create a unit test but wanted to get the patch up since this was a critical bug.","08/Oct/10 12:29;gtully;jeff, committed the fix, thanks. r1005806
await the test case to protect it. nice work.","08/Oct/10 15:41;jgenender;Test case attached","08/Oct/10 16:27;gtully;attaching the diff with the test case and the fix reverted, in which case the test should fail. but it does not atm.
Just so we are on the same page, I may be missing something but I would expect it to fail.","12/Oct/10 11:26;gtully;The scenario that needs to be tested, for future reference:{code}ackMessageFileMap = {2=[1], 3=[1, 2], 4=[2, 3, 4], 5=[4, 5], 6=[5, 6], 7=[6, 7], 8=[7, 8]}

gCandidateSet = [2, 3, 4, 5, 6, 7]{code}","13/Oct/10 17:21;m4c0;After some evil debugging tricks, I found that there are some pending inflight transactions (even after restarting the server) in my database files. In this scenario, the gcCandidadeSet is empty, since ""metadata.firstInProgressTransactionLocation"" points to the first log file (MessageDatabase.java, lines 1140-1154):

{code}// Don't GC files after the first in progress tx
Location firstTxLocation = metadata.lastUpdate;
if( metadata.firstInProgressTransactionLocation!=null ) {
  firstTxLocation = metadata.firstInProgressTransactionLocation;
}

if( firstTxLocation!=null ) {
  while( !gcCandidateSet.isEmpty() ) {
    Integer last = gcCandidateSet.last();
    if( last >= firstTxLocation.getDataFileId() ) {
      gcCandidateSet.remove(last);
    } else {
      break;
    }
  }
}
{code}

This leads to the question: why it must discard every log file starting from the one containing the first pending transaction? Any malfunctioning operation (even an one-time little mistake) will trash all log files from that point! 

I believe this should happens also on ""kill -9"" or unexpected power down.","13/Oct/10 17:28;m4c0;I'm attaching a nasty workaround that commits the pending transactions and automatically archives (or deletes) the old log files when closing the store. I'm not proud of this thing, but it seems to prove the problem is on the pending transaction, since all useless files are correctly disposed after running it.","25/Oct/10 06:52;cwikman;I'm using ActiveMQ 5.4.1 in production and I have added Gary's patch, but the log files are stilling growing (even if all queues are empty) and finally Activemq crashes. If I restart ActiveMQ then the log files are deleted. 

Any suggestions on how to fix the problem? ","25/Oct/10 19:00;moczarski;We also had some trouble with growing log files (version 5.4.1). I have two issues identified with similar symptoms (but it seems to be another cause as to this issue):
* AMQ-2982: sticky log files on a rollback of a local transaction (test case and patch available)
* AMQ-2983: sticky log files on multiple concurrent consumers with local transacted sessions (test case available)

If we only use non transacted sessions with auto-acknowledge, we have no problems.","26/Oct/10 08:03;bezudar;@Swen Does using non transacted sessions with auto acknowledge clear the log files?
We have been facing a similar problem, however we are using Kaha Persistence Adapter on upgrading from 5.3.2 to 5.4.1. We had to upgrade to 5.4.1 because earlier using Durable Subs Topics our data files weren't getting cleaned up. Now our index-subs file are creating an issue. 

Any Final fix for this problem?","26/Oct/10 17:16;jgenender;Folks..

Please try the patch supplied above: https://issues.apache.org/activemq/secure/attachment/19715/amq-2987.patch

That appears to fix the problem with the AMQ-2736.zip test.","26/Oct/10 17:26;jgenender;@Christer WIkman - Gary's attachment wasn't a patch... it was a revert to the test case to validate the test case fails.  Please try my patch.","26/Oct/10 23:08;jgenender;Here is the 5.4.1 distribution with the patch in it.  This is *not* an official release... could people please test it out?

http://people.apache.org/~jgenender/apache-activemq-5.4.1-AMQ2736-bin.tar.gz ","27/Oct/10 01:58;tranchida;Do not work for me, same issue.","27/Oct/10 03:22;tranchida;I think that the fix AMQ-2982 must fix also this issue.","27/Oct/10 09:18;dejanb;AMQ-2982 and AMQ-2983 are fixed now on the trunk, so you can test out if that helps. I spotted one more potential issue in the area and I'm working on it now, so stay tuned.","27/Oct/10 13:28;dejanb;That potential issue from the last comment was the false alarm. I believe that this issue should be fixed now. Please test the latest snapshot

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-SNAPSHOT/

and reopen if you find any problems.

Thanks","27/Oct/10 14:11;dejanb;Just to wrap it all up, there were three issues spotted;

- one spotted by Jeff and fixed by supplied patch and 
- and two covered by AMQ-2982 and AMQ-2983

Thanks to all who contributed, especially Jeff and Swen","03/Nov/10 09:33;cwikman;We running: http://people.apache.org/~jgenender/apache-activemq-5.4.1-AMQ2736-bin.tar.gz and we are still experience problems with log files that are not deleted. 

I deployed the fix yesterday with a new kahadb and this morning I had 155 log files with only 43 messages on two DLQ queues. I deleted the DLQ queues and only 12 log files where deleted. Currently,. I have 144 log files and nothing in the queues. 


","03/Nov/10 09:40;gtully;Christer, please validate with the 5.5-SNAPSHOT, that has the required combined fixes.
https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-SNAPSHOT/","09/Nov/10 07:50;cwikman;I deployed yesterday in stage latest 5.5-SNAPSHOT and it seems that the problem is solved. This morning I had 17 log files, but after I deleted DLQ queues with messages I ended up with only 1 log file! When I used 5.4.1 the files grow with approx 50-100 files per day. 

We are not comfortable deploying 5.5-SNAPSHOT in production. Can anyone provide me with a patch for 5.4.1? Currently, I cannot recommend using version 5.4.1 in production without the combined fixes from 5.5-SNAPSHOT.

","09/Nov/10 17:28;jgenender;@Christer Wlkman - I built one with the following JIRA patches:

http://people.apache.org/~jgenender/apache-activemq-5.4.1-AMQ2736-AMQ2982-AMQ2983-AMQ2935-bin.tar.gz

YMMV and this is not an official release.  Post back if this works for you.","11/Nov/10 09:02;cwikman;@Jeff - Thanks! I have deployed your fix in our stage environment. It works much better but not 100%. All queues are empty but I still have 4 log files and one contains 0 bytes, last updated yesterday, and other log file was last updated 6 hours ago. When I used 5.5-SNAPSHOT it went down to 1 log file!

I will evaluate it for some more days before I can tell for sure if the log files grows. ","16/Nov/10 09:53;cwikman;I have been running Jeff's fix in stage for 5 days and the log files have not grown. I'm now comfortable to use it in production.

Many thanks for all help!
","16/Nov/10 10:07;dejanb;BTW. We released a version of Fuse Message Broker that contains a fix for this issue. If anyone is interested, it can be found here 

http://repo.fusesource.com/nexus/content/repositories/releases/org/apache/activemq/apache-activemq/5.4.1-fuse-01-00/

Release notes available at: http://fusesource.com/wiki/display/ProdInfo/FUSE+Message+Broker+v5.4.1-fuse+Release+Notes","16/Nov/10 13:57;alisenberg;Hi, I really need this fix!!!!. So finally you tested the fix on 5.4.1 or you are going to put 5.5 in production? 

excuse me, but which is the file with the correct patch?

One more question: After applying this fix, would be any way for deleting old log files in order to reduce unused space? I am at 100G and I need to maintain the current state of the broker...

thanks.","16/Nov/10 14:16;cwikman;Use Jeff's patch for 5.4.1, http://people.apache.org/~jgenender/apache-activemq-5.4.1-AMQ2736-AMQ2982-AMQ2983-AMQ2935-bin.tar.gz

I deployed it in production today and it totally removed the problem with growing log files. It went down from 78 log files to just 1 log file. 
","16/Nov/10 20:52;srpietrowicz;I've been trying to track down a solution to a problem similar to this, and the latest snapshot of 5.5 doesn't resolve this for me.

This is the scenario I've created:

1) a producer starts sending messages
2) a consumer starts consuming messages, but pauses after 100.
3) db-##.log files start showing up in the tmp_storage directory as expected.   I let the producer go for a while so a number of db-##.log files are created.
4) the consumer starts consuming messages again. The db-##.log files start disappearing as they're used up.
5) everything finishes.

Now, if I do:

1) a producer starts sending messages
2) a consumer starts consuming messages, but pauses after 100.
3) db-##.log files start showing up in the tmp_storage directory as expected.   I let the producer go for a while so that a number of db-##.log files are created.

and kill the consumer and the producer.  The db-##.log files remain, and will not get cleaned up, even on subsequent invocations of new consumers and producers.  If a new consumer/producer (as in the first scenario) are created, it all works;  it's just that those old .log files never get cleaned up.","06/Jan/11 14:49;jgenender;Steve, I am having difficulty reproducing this... can you please attach a test case?","12/Jan/11 15:28;alisenberg;Hi, is this bug fixed on version 5.4.2? or I need to apply the patch too?

thanks!","12/Jan/11 15:34;straun;5.4.2 does include AMQ-2982 and AMQ-2983, whether this solves all of the issue I am unsure but using 5.4.2 worked for me.","14/Jan/11 19:29;matthewvon;No.  Not fixed in 5.4.2 ... just found that out today.  The hard way.","14/Jan/11 19:38;alisenberg;I think the same. I installed 5.4.2 but still growing. I will rollback to 5.4.1 with patches :(

Thanks","24/Jan/11 17:24;jgreen;Hmm something's not right on our 5.4.2 instance either. A 5GB store reporting itself (after purging some queues) ~89% full. On disk 4.4G. Restarted AMQ it went down to 1.6G and 29% full.","31/Jan/11 09:55;dejanb;Can anyone create a test case, or provide a steps to reproduce the problem with 5.4.2 release? Thanks!","14/Feb/11 15:28;mcekal;Hello Dejan,
We noticed StorageFull on KahaDb several times so I played a little and found two reasons for this (second seems to be a AMQ bug):
1) unconsumed message(s) in any datafile blocks the datafile forever there. So if you keep default setup 33mb per file and 1gb limit roughly 30 small messages spread one to each datafile can block whole system
(I assume this is not a bug, just not nice feature - Why not to reply(=rewrite) messages at least during AMQ restart to latest datafile?)

2) second issue seems to me as a bug. If you open transacted session and send a message, but do not commit it a datafile is blocked. Again if you spread such uncommited messages over all datafiles you gets ""storage is full"". That is ok - someone forget to commit - but problem comes if you kill AMQ using -9 signal (or via TaskManager on Windows). If you do this non-standard kill (=like a hw failure) the uncommited transaction seems to be blocking datafiles forever. New start of AMQ somehow reads again the transaction and still waiting for commit although the producer is not live any more. If you do regular shutdown so ShutdownHook on the Broker is fully executed, next AMQ start correctly recognize whether producer of uncommited transaction (with failover transport) is still up (then transaction is kept, messages are replayed to new/last datafile) or down (then transaction is rollbacked).
I think AMQ should be able to behave this way even if previously someone killed it brutally(kill -9).

I have tested these two scenarios on both 5.3.2 and 5.4.2 with same result. We would like to get a patch for 5.3.2 version. Is it possible?

Thanks a lot
Martin","14/Feb/11 17:50;gtully;@Martin, thanks for the feedback. The second issue is indeed a problem, on normal shutdown, inflight (non xa) transactions are rolledback. The same (rollback) should happen after recovery, to deal with the abortive shutdown case.","17/Feb/11 18:11;gtully;Fixed up abortive shutdown case such that recovered local transactions are auto rolledback.

http://svn.apache.org/viewvc?rev=1071732&view=rev

I think the compact journal data files feature needs another issue.","06/Jun/11 15:51;mcarpella;I am seeing this or a similar issue on a 5.5.0 broker as well, log files are not being deleted. I now deleted all queues, but I am still seeing the checkpoint task ""DEBUG | queue://a.deleted.queue expiring messages .."" in the logs.

I stopped ActiveMQ afterwards and restartet it, after I deleted all queues and still the space being occupied.

During the restart, even after I deleted all queues, I had:
{code}
DEBUG | XA Transaction new/begin : XID:1096044365:3137322e31372e312e352e746d31353531373030333432:3137322e31372e312e352e746d37313330363334
DEBUG | Ack for non existent subscription in recovery, ack:MessageAck {commandId = 66898301, responseRequired = false, ackType = 2, consumerId = ID:CLIENT-001-40008-1306310098527-2:5:10553821:1, firstMessageId = e041a486-8c88-3855-304e-4c9eac0f85b1:0:61129:61129, lastMessageId = e041a486-8c88-3855-304e-4c9eac0f85b1:0:61129:61129, destination = queue://a.deleted.queue, transactionId = XID:1096044365:3137322e31372e312e352e746d31353531373030333432:3137322e31372e312e352e746d37313330363334, messageCount = 1, poisonCause = null}
{code}

After the restart, all the space was still occupied and log-files were never deleted. But at least no more expiry entries for the now deleted queues any more.

KahaDB is 3 according to startup logs. Unfortunately I cannot provide steps to reproduce for 5.5.0 at the moment and the store in question is several GB in size and contains sensitive information I cannot share. 

Should I re-open this issue or a file this as a new issue?","14/Jun/11 17:27;kokushibyou;This does not appear to be fixed in 5.5. 

I have a queue that holds onto a message every once in a while due to bad formatting or what-have-you (not something I can immediately correct). Since KahaDB requires the need to retain the full contents of the DB file while one message persists, it will cause the file system to grow dramatically if you alter the default kahaDB file size at all. With a DB file of 96 megs each I've eaten up almost 5 gigs of disk space in 34 pending messages all less than 2000 bytes each. I'm going to begin auto purging the offending queue (since we don't require those messages), however it would be preferred to have some automatic process possibly automatically consolidate the DB once its reached a pre-configured limit? 
","23/Jun/11 14:02;gtully;Auto consolidation would be a nice enhancement. Can you open a new issue to track that.

As you know, you can also reduce the journal data file size to reduce the overall disk usage in this case.

One other thought, using a camel route, you can easily consume and re-submit messages so that they are moved to the current journal data file. Have a look at the route from the dlq back the the original destination for inspiration. https://issues.apache.org/jira/browse/AMQ-2710. The idea would be to periodically fire a consumer, using quarts, that removes and adds messages. See the test that pulls the original destination from the message.

http://svn.apache.org/viewvc/activemq/trunk/activemq-camel/src/test/resources/org/apache/activemq/camel/CamelRedeliveryTest-context.xml?view=markup
http://svn.apache.org/viewvc/activemq/trunk/activemq-camel/src/test/java/org/apache/activemq/camel/CamelRedeliveryTest.java?view=markup","04/Oct/12 14:37;vmirea;Hi guys,

I am using the version 5.5.1 of ActiveMQ and I can still reproduce this problem.
I saw you have fixed some problems but I think my case is different.
The most connected bug with my issue is :https://issues.apache.org/jira/browse/AMQ-2983

In my case I am no using local transactions, I am using global transaction (XATransactions) and then I always comit the transactions and still the log files are not deleted.
The JMS Connections Pool in my case it is defined in glassfish using the ActiveMQ Resource Adapter.
Have you tested with global transactions too ?
","04/Oct/12 14:58;gtully;@Vasile
If you can reproduce at will, and can provide a tests case, please open a new jira issue to track your use case. Also, validate that your use case fails on trunk using the latest snapshot.","04/Oct/12 15:10;vmirea;I want to add to my previous comment that we are using the CPP library CMS for ActiveMQ with stomp too.
This is the second use-case.
We have one producer and one subscriber and this is already causing problems.
The logs are growing.
In C++ we use Session::AUTO_ACKNOWLEDGE and even in this case the log files are not deleted.
We write(using a producer) in the queue and and another process is reading(using a listener) we never have many messages in the queue.
QueueName       Number of pending messages   Number of listener       Messages Enqueued     Messages Dequeued 
queuename 	0 	                           1 	               21522 	            21522
This is maybe a new use-case too ?","05/Oct/12 12:52;vmirea;I just downloaded the version 5.6.0 of ActiveMQ.
I took the old configuration I was using for 5.5.1 and repeat the tests with my application.
It seems the problems are fixed!
It means the fixed is not made in version 5.5.0 (like the bug is describing).
So please modify the description(Fix Versions field) so the people should know that the version 5.6.0 it contains the fix.
I won't open a new bug because it makes no sense.
"
Network bridge causes deadlock on queue/topic when message dispatch and consumer registration overlap.,AMQ-3127,12495173,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,stirlingc,stirlingc,10/Jan/11 21:46,11/Jul/14 19:00,30/Jan/20 16:55,11/Jul/14 19:00,5.4.2,,,,,,,,,,Broker,,,,0,"Symptom
=======
We have an AMQ 5.3.1 production environment with 7 brokers networked over HTTP using the DiscoveryNetworkConnector and SimpleDiscoveryAgent.  The brokers share a number of topics and queues.  Periodically, we have a catastrophic (cause still uknown) network outage that only affects the outbound bridges from one of the 7 brokers.  The affected broker detects the outage, stops the existing 6 outbound bridges, and starts 6 new outbound bridges.  Frequently, we find that the outbound bridges appear to be recreated properly, but messages produced by the affected broker to *some* of its shared queues/topics are no longer dispatched to the remote brokers.

We have verified that the cause of this issue exists in AMQ 5.4.2.

Cause
=====
Analysis of the affected broker's threads revealed a deadlock between one of the BrokerService threads, which was dispatching a message across an outbound bridge, and a transport thread (e.g., VMTransport or HTTP Reader) that was receiving a new subscriptions from the outbound bridge:

Daemon Thread [BrokerService[broker1] Task] (Suspended)	
	owns: Object  (id=104)	
	owns: Object  (id=105)	
	owns: Object  (id=106)	
	owns: Queue$3  (id=107)	
	waiting for: Object  (id=108)	
		owned by: Daemon Thread [VMTransport] (Running)	
	MutexTransport.oneway(Object) line: 40	
	ResponseCorrelator.oneway(Object) line: 60	
	DemandForwardingBridge(DemandForwardingBridgeSupport).serviceLocalCommand(Command) line: 738	
	DemandForwardingBridgeSupport$2.onCommand(Object) line: 161	
	ResponseCorrelator.onCommand(Object) line: 116	
	MutexTransport(TransportFilter).onCommand(Object) line: 69	
	VMTransport.dispatch(VMTransport, TransportListener, Object) line: 122	
	VMTransport.oneway(Object) line: 113	
	MutexTransport.oneway(Object) line: 40	
	ResponseCorrelator.oneway(Object) line: 60	
	ManagedTransportConnection(TransportConnection).dispatch(Command) line: 1249	
	ManagedTransportConnection(TransportConnection).processDispatch(Command) line: 810	
	ManagedTransportConnection(TransportConnection).dispatchSync(Command) line: 770	
	QueueSubscription(PrefetchSubscription).dispatch(MessageReference) line: 649	
	QueueSubscription(PrefetchSubscription).dispatchPending() line: 599	
	QueueSubscription(PrefetchSubscription).add(MessageReference) line: 156	
	Queue.doActualDispatch(List<QueueMessageReference>) line: 1798	
	Queue.doDispatch(List<QueueMessageReference>) line: 1745	
	Queue.pageInMessages(boolean) line: 1898	
	Queue.iterate() line: 1425	
	PooledTaskRunner.runTask() line: 122	
	PooledTaskRunner$1.run() line: 43	
	ThreadPoolExecutor$Worker.runTask(Runnable) line: 886	
	ThreadPoolExecutor$Worker.run() line: 908	
	Thread.run() line: 662	

Daemon Thread [VMTransport] (Suspended)	
	owns: Object  (id=499)	
	owns: RegionBroker$1  (id=205)	
		waited by: Daemon Thread [VMTransport] (Running)	
		waited by: Daemon Thread [ActiveMQ Broker[broker1] Scheduler] (Running)	
	owns: Object  (id=108)	
		waited by: Daemon Thread [BrokerService[broker1] Task] (Suspended)	
	owns: URI  (id=500)	
	Unsafe.park(boolean, long) line: not available [native method]	
	LockSupport.park(Object) line: 158	
	ReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).parkAndCheckInterrupt() line: 811	
	ReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).acquireQueued(AbstractQueuedSynchronizer$Node, int) line: 842	
	ReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).acquire(int) line: 1178	
	ReentrantReadWriteLock$WriteLock.lock() line: 807	
	Queue.addSubscription(ConnectionContext, Subscription) line: 360	
	ManagedQueueRegion(AbstractRegion).addConsumer(ConnectionContext, ConsumerInfo) line: 290	
	ManagedRegionBroker(RegionBroker).addConsumer(ConnectionContext, ConsumerInfo) line: 444	
	ManagedRegionBroker.addConsumer(ConnectionContext, ConsumerInfo) line: 240	
	AdvisoryBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89	
	AdvisoryBroker.addConsumer(ConnectionContext, ConsumerInfo) line: 91	
	CompositeDestinationBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89	
	TransactionBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89	
	BrokerService$3(MutableBrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 95	
	ManagedTransportConnection(TransportConnection).processAddConsumer(ConsumerInfo) line: 550	
	ConsumerInfo.visit(CommandVisitor) line: 349	
	
Specifically, a message had been produced to one of the shared queues and was being dispatched to a remote consumer by the BrokerService thread.  In so doing, BrokerService had acquired the pagedInPendingDispatchLock lock from Queue.java:

    private void doDispatch(List<QueueMessageReference> list) throws Exception {
        boolean doWakeUp = false;

        pagedInPendingDispatchLock.writeLock().lock();
	
BrokerService had sent the message to the remote broker was then acknowledging the local transport in DemandForwardingBridgeSupport.java:

    protected void serviceLocalCommand(Command command) {
    ...
                        if (!message.isResponseRequired()) {
                            
                            // If the message was originally sent using async
                            // send, we will preserve that QOS
                            // by bridging it using an async send (small chance
                            // of message loss).
                            try {
                                remoteBroker.oneway(message);
                                localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));

Since localBroker was a synchronous VMTransport, BrokerService had to then acquire the write mutex in MutexTransport.java:

    public void oneway(Object command) throws IOException {
        synchronized (writeMutex) {
            next.oneway(command);
        }
    }

So the dispatching thread (BrokerService) had acquired Queue.pagedInPendingDispatchLock was trying to acquire MutexTransport.writeMutex.

At the same time, a new remote consumer was being registered through the same outbound bridge through which the aforementioned dispatch was ocurring.  The bridge's remote transport listener thread (in this example, VMTransport) was adding the subscription through DemandForwardingBridgeSupport.java:

    protected void addSubscription(DemandSubscription sub) throws IOException {
        if (sub != null) {
            localBroker.oneway(sub.getLocalInfo());
        }
    }

Again, localBroker is synchronous, so the VMTransport thread acquired MutexTransport.writeMutex.  Registration of consumers to a queue is synchronized with the dispatching of messages, as shown in Queue.java:

    public void addSubscription(ConnectionContext context, Subscription sub) throws Exception {
        super.addSubscription(context, sub);
        // synchronize with dispatch method so that no new messages are sent
        // while setting up a subscription. avoid out of order messages,
        // duplicates, etc.
        pagedInPendingDispatchLock.writeLock().lock();

So the remote transport listening thread (VMTransport) had acquired MutexTransport.writeMutex and was trying to acquire Queue.pagedInPendingDispatchLock, thus creating a deadlock with BrokerService.

Solution
======
Deadlock can be avoided by making the local transport asynchronous, which would allow the remote transport listener thread to acquire the MutexTransport.writeMutex, but then offload the acquisition of Queue.pagedInPendingDispatchLock to its peer listening thread.  We've included a unit test that passes with this change.

There is no clear reason why the local transport is asynchronous.  This is enforced by BrokerService.java when it starts the network connectors:

    protected void startAllConnectors() throws Exception {
....
            URI uri = getVmConnectorURI();
            Map<String, String> map = new HashMap<String, String>(URISupport.parseParameters(uri));
            map.put(""network"", ""true"");
            map.put(""async"", ""false"");

This change was made by the following checkin, but no rational was given:

Revision: 553094
Author: rajdavies
Date: 11:33:48 PM, July 3, 2007
Message:
set async=false for network connectors
----
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/BrokerService.java

Addendum
=========
We've included a unit test that demonstrates the deadlock 100% of the time on our systems.  Since this is a timing issue, you may need to run the unit test several times to create the deadlock.  Also note that three specific configurations must exist to create the deadlock:

1) The bridge must have conduit subscriptions disabled; this is so that there can be an existing subscription across the bridge to which messages are being dispatched while at the same time another subscription is being added.
2) The bridge must be configured to dispatch synchronously; this is so that message subscriptions are are dispatched by the same thread that accesses the queue.
3) The message producers must be transactionalized; this is so that the message dispatches require a response by the dispatch thread (i.e., BrokerService).

If any of these conditions is not present, deadlock (at least through this recreation) does not occur.	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	




Through further testing ",,stirlingc,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/11 21:52;stirlingc;AMQ-3127.diff;https://issues.apache.org/jira/secure/attachment/12467923/AMQ-3127.diff","24/Oct/12 23:29;stirlingc;BridgeDeadlockTest.java;https://issues.apache.org/jira/secure/attachment/12550705/BridgeDeadlockTest.java","10/Jan/11 22:57;stirlingc;BridgeDeadlockTest.java;https://issues.apache.org/jira/secure/attachment/12467935/BridgeDeadlockTest.java",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2011-01-11 14:20:11.159,,,false,,,,,,,,,,,,,,,,,74730,,,Fri Jul 11 19:00:55 UTC 2014,,,,Patch Available,,,,"0|i0b2ev:",62503,,,,,,,,,,,,,,,,,,,"10/Jan/11 21:52;stirlingc;Unit test demonstrating deadlock.  The unit test passes after applying the patch.","10/Jan/11 21:52;stirlingc;Patch the resolves deadlock by making the local transport for a bridge asynchronous.","10/Jan/11 22:57;stirlingc;Unit test (amended to enable timeout) that demonstrates deadlock.  The test passes after applying patch.","11/Jan/11 14:20;gtully;Great investigative work. we ping rob to see if he has any recollection as to the reason/use case behind the Revision: 553094
Did you try a bunch of the other network connector unit tests org.apache.activemq.network in activemq-core with this fix?
","11/Jan/11 20:34;stirlingc;Gary, I ran the tests in org.apache.activemq.network several times and they succeeded.  If after consultation with Rob it is decided that the patch is too broad, we could always patch just the DiscoveryNetworkConnector/DemandForwardingBridgeSupport so that they make the localTransport asynchronous.

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.activemq.network.NetworkLoadTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 65.782 sec
Running org.apache.activemq.network.DemandForwardingBridgeFilterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 24.859 sec
Running org.apache.activemq.network.NetworkReconnectTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.391 sec
Running org.apache.activemq.network.DuplexNetworkTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 77.36 sec
Running org.apache.activemq.network.ForwardingBridgeTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.5 sec
Running org.apache.activemq.network.SimpleNetworkTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 73.5 sec
Running org.apache.activemq.network.DuplexNetworkMBeanTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 29.532 sec
Running org.apache.activemq.network.NetworkRemovesSubscriptionsTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 34.406 sec
Running org.apache.activemq.network.DemandForwardingBridgeTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.703 sec
Running org.apache.activemq.network.FailoverStaticNetworkTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 32.203 sec
Running org.apache.activemq.network.NetworkBrokerDetachTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.501 sec

Results :

Tests run: 41, Failures: 0, Errors: 0, Skipped: 0
","09/Feb/12 16:54;tabish;Ran the test repeatedly and could not reproduce using the latest trunk code.","24/Oct/12 23:27;stirlingc;Attaching a slightly-modified unit test the demonstrates the deadlock is still present on trunk code.","24/Oct/12 23:34;stirlingc;The only change in the updated BridgeDeadlockTest is the addition of line 72: persistentDelivery = false

The reason the original unit test passed on trunk as because of changes made to DemandForwardingBridgeSupport.java:

{code:title=DemandForwardingBridgeSupport.java}
protected void serviceLocalCommand(Command command) {
...
                    if (!configuration.isAlwaysSyncSend() && !message.isPersistent()) {

                        // If the message was originally sent using async
                        // send, we will preserve that QOS
                        // by bridging it using an async send (small chance
                        // of message loss).
                        try {
                            remoteBroker.oneway(message);
                            localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));
                            dequeueCounter.incrementAndGet();
                        } finally {
                            sub.decrementOutstandingResponses();
                        }

                    } else {
{code}

As originally described, the problematic code is the localBroker.oneway(...).  In trunk, the condition (!configuration.isAlwaysSincSend() && !message.isPersistent()) was preventing the original test from entering this block.  Setting persistentDelivery = false allows the block to be entered, thus creating the deadlock.","11/Jul/14 19:00;tabish;Testing against trunk the problem appears to be resolved, the code has been modified since the original issue and does not appear to have this issue any longer. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
durable subscriber gets stuck while using persistent delivery mode and client acknowledgment with session.recover().,AMQ-2021,12482754,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,durokuruc,durokuruc,02/Dec/08 13:03,31/Jul/13 11:51,30/Jan/20 16:55,23/Dec/08 17:04,5.2.0,,,,,,,5.3.0,,,,,,,1,"Using two topic durable subscribers which consume every odd message and recover their session if message number is even one of the durable subscriper after couple hundred messages get stuck and  java.lang.NullPointerException is shown on provider console.

Reproducing steps:
1. start amq server using default configuration.
2. run TopicRedeliver.
3. run TopicProducer.

Discovered during test of  https://issues.apache.org/activemq/browse/AMQ-1797 .
See attached logs and java files. 



","WinXP,
java version ""1.6.0_05""
Java(TM) SE Runtime Environment (build 1.6.0_05-b13)
Java HotSpot(TM) Client VM (build 10.0-b19, mixed mode, sharing) ",durokuruc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3236,,,,,,"02/Dec/08 13:05;durokuruc;amq2021.zip;https://issues.apache.org/jira/secure/attachment/12461224/amq2021.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-12-23 17:04:54.184,,,false,,,,,,,,,,,,,,,,,75120,,,Tue Dec 23 17:06:17 UTC 2008,,,,,,,,"0|i0rzyf:",161469,,,,,,,,,,,,,,,,,,,"23/Dec/08 17:04;gtully;resolved in r729038.
Problem is in dispatch to the DLQ for topics. A property is set in the message before dispatch to the DLQ but this can invalidate the message for delivery to other topic subscribers. The failure can be a little odd as it can result in empty properties at the consumer or marshal errors.
The solution is to copy the message before making modifications.","23/Dec/08 17:06;gtully;ps: thanks for the test case :-) I committed a variant of it that catches the various failure scenarios.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kahaDB 3 fails to start after server VM reset,AMQ-3104,12494036,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,hsn,hsn,24/Dec/10 13:27,02/May/13 02:29,30/Jan/20 16:55,15/Sep/11 11:38,5.4.2,,,,,,,5.6.0,,,Message Store,,,,3,"KahaDB fails to start after RESET (poweroff) virtual machine with activemq broker.

2010-12-24 13:08:07,577 | WARN  | destroyApplicationContextOnStop parameter is deprecated, please use shutdown hooks instead | org.apache.activemq.xbean.XBeanBrokerService | main
2010-12-24 13:08:07,619 | INFO  | PListStore:/usr/local/lib/activemq/data/localhost/tmp_storage started | org.apache.activemq.store.kahadb.plist.PListStore | main
2010-12-24 13:08:07,687 | INFO  | Using Persistence Adapter: KahaDBPersistenceAdapter[/usr/local/lib/activemq/data/kahadb] | org.apache.activemq.broker.BrokerService | main
2010-12-24 13:08:09,706 | INFO  | KahaDB is version 3 | org.apache.activemq.store.kahadb.MessageDatabase | main
2010-12-24 13:08:09,727 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Invalid location: 1:490436, : java.lang.NegativeArraySizeException | org.apache.activemq.broker.BrokerService | main
java.io.IOException: Invalid location: 1:490436, : java.lang.NegativeArraySizeException
	at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:94)
	at org.apache.kahadb.journal.Journal.read(Journal.java:596)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:484)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:438)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:315)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:357)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:222)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:180)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:186)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:117)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
2010-12-24 13:08:09,749 | INFO  | ActiveMQ Message Broker (localhost, null) is shutting down | org.apache.activemq.broker.BrokerService | main
2010-12-24 13:08:09,751 | INFO  | Network Connector toRADIM Stopped | org.apache.activemq.network.NetworkConnector | main
2010-12-24 13:08:09,751 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | main
2010-12-24 13:08:09,765 | INFO  | PListStore:/usr/local/lib/activemq/data/localhost/tmp_storage stopped | org.apache.activemq.store.kahadb.plist.PListStore | main
2010-12-24 13:08:09,765 | INFO  | Stopping async queue tasks | org.apache.activemq.store.kahadb.KahaDBStore | main
2010-12-24 13:08:09,765 | INFO  | Stopping async topic tasks | org.apache.activemq.store.kahadb.KahaDBStore | main
2010-12-24 13:08:09,765 | INFO  | Stopped KahaDB | org.apache.activemq.store.kahadb.KahaDBStore | main
2010-12-24 13:08:10,250 | INFO  | ActiveMQ JMS Message Broker (localhost, null) stopped | org.apache.activemq.broker.BrokerService | main
","FreeBSD 8.1, openjdk 1.6.20",alecw,hc,hsn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3422,,"24/Dec/10 13:30;hsn;db-1.log.xz;https://issues.apache.org/jira/secure/attachment/12466935/db-1.log.xz","24/Dec/10 13:30;hsn;db.data.xz;https://issues.apache.org/jira/secure/attachment/12466933/db.data.xz","24/Dec/10 13:30;hsn;db.redo.xz;https://issues.apache.org/jira/secure/attachment/12466934/db.redo.xz",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2011-03-21 18:48:26.928,,,false,,,,,,,,,,,,,,,,,60101,,,Thu Sep 15 11:40:30 UTC 2011,,,,,,,,"0|i0ak4n:",59534,,,,,,,,,,,,,,,,,,,"24/Dec/10 13:30;hsn;Database files","21/Mar/11 18:48;alecw;I have also experienced this problem, and discovered some other details that might be useful:

- After getting a stack trace like the above once, if you try to start ActiveMQ again, it works.  I haven't figured out yet if anything is lost from the DB.

- If you try to do graceful shutdown of a machine with ActiveMQ/KahaDB running, you can't.  The message ""mount: / is busy"" appears, and an ungraceful shutdown is needed if ActiveMQ isn't stopped first.","12/Sep/11 11:06;lviggiano;I had the same problem in production.

During the shutdown process RedHat does not execute the shutdown init script under /etc/init.d/yourservice if you don't have a corresponding file under /var/lock/subsys/yourservice. This causes the KahaDB file corruption.

Personally I think that Redhat is wrong in requiring the /var/lock/subsys stuff (documented here: http://www.redhat.com/magazine/008jun05/departments/tips_tricks/ ""Why do init scripts require lock files?""). And I think that KahaDB does wrong corrupting its file if the process get ungraciously killed by a server shutdown, since the meaning of using it is to recover from failures (ie. a server crash, which won't do a clean shutdown).

Regards,

Luigi","15/Sep/11 11:38;gtully;With the fix for https://issues.apache.org/jira/browse/AMQ-3422 a failure to recover the producerAudit does not cause startup to fail.","15/Sep/11 11:40;gtully;The description makes it appear unrelated but the fix for https://issues.apache.org/jira/browse/AMQ-3422 included traping errors relating to the recovery of the producer audit. Which is the problem here.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New clients unable to connect to broker while SubscriptionRecoveryPolicy is running,AMQ-3070,12492056,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,asussman,asussman,04/Dec/10 02:50,19/Sep/12 14:55,30/Jan/20 16:55,20/Sep/11 11:01,5.4.2,,,,,,,5.6.0,,,Broker,,,,0,"Discovered while authoring a custom SubscriptionRecoveryPolicy.

When function 'recover' is being run, no new connections to the broker can be made.  All connection attempts hang until 'recover' returns.

This is a huge problem when recovery takes any amount of time.  In my particular case, recovery can take many minutes.

Note that this problem also prevents the addition/removal of consumers and producers in general, so any threads needing to do so are also blocked.

The issue appears to be a lock on RegionBroker.purgeInactiveDestinationsTask.  I would attempt to fix, but I am unsure of the consequences of messing with this lock and I am unclear on what is being protected here.

Thread doing work in ""recover"":


    ""ActiveMQ Transport: ssl:///10.1.210.140:45407"" - Thread t@48
        at MyCustomSubscriptionRecoveryPolicy.recover(MyCustomSubscriptionRecoveryPolicy.java:xxx)
        at org.apache.activemq.broker.region.Topic.addSubscription(Topic.java:133)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:290)
        - locked java.lang.Object@62f4a9a3
        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:111)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:447)
        - locked org.apache.activemq.broker.region.RegionBroker$1@6d0718b7
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:240)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:91)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:550)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        - locked org.apache.activemq.transport.InactivityMonitor$1@2208d444
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSubscribe(ProtocolConverter.java:425)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:188)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
        at java.lang.Thread.run(Thread.java:619)

    Locked ownable synchronizers:
    - None


Thread attempting to make new connection:

    ""ActiveMQ Transport: ssl:///10.1.210.140:45408"" - Thread t@55
     java.lang.Thread.State: BLOCKED on org.apache.activemq.broker.region.RegionBroker$1@6d0718b7 owned by: ActiveMQ Transport: ssl:///10.1.210.140:45407 
        at org.apache.activemq.broker.region.RegionBroker.addProducer(RegionBroker.java:392)
        at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:93)
        at org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:145)
        at org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)
        at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:93)
        at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:99)
        at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:511)
        at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:105)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        - locked org.apache.activemq.transport.InactivityMonitor$1@53134610
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
        at org.apache.activemq.transport.stomp.ProtocolConverter$2.onResponse(ProtocolConverter.java:518)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:579)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:58)
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:255)
        - locked java.util.concurrent.atomic.AtomicBoolean@165cef0c
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        - locked java.lang.Object@2f52084c
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1249)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:810)
        at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:770)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:187)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        - locked org.apache.activemq.transport.InactivityMonitor$1@53134610
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:503)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:192)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
        at java.lang.Thread.run(Thread.java:619)

    Locked ownable synchronizers:
        - None
",,artnaseef,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-11 19:56:58.61,,,false,,,,,,,,,,,,,,,,,60059,,,Wed Sep 19 14:55:30 UTC 2012,,,,,,,,"0|i0agxz:",59018,,,,,,,,,,,,,,,,,,,"04/Dec/10 03:01;asussman;Note that the apparent inability to complete a connection happens because most
client libs attempt to subscribe to advisory messaging by default, so the connection
appears to hang.

But event if advisory message watching is disabled, the new connection (and any existing
connections) can't create new subscriptions or become new producers while the lock is
active.  So still bad.","11/Jul/11 19:56;tabish;You can now control the number of destinations that are purged in a single GC sweep.  See AMQ-3339.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version","19/Sep/12 14:49;gtully;@Tim, I am thinking that this is a partial fix, if a recover operaton takes a long time, there will still be the lock out. The real fix is to change the way we do recovery. what do you think?","19/Sep/12 14:55;gtully;a real fix for this is not trivial, if we want to support a large backlog, then we need to deal with order and possible additions while dispatching batches of the backlog.
Dispatch should be async in any event.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB rollback fails when connection is closed afterwards,AMQ-2746,12483719,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,lphorne,lphorne,24/May/10 14:03,23/Sep/11 22:24,30/Jan/20 16:55,23/Sep/11 22:24,5.3.0,5.3.1,5.3.2,,,,,5.5.0,,,Message Store,,,,3,"KahaDB appears to not correctly handle rollback of a transacted session(Session.SESSION_TRANSACTED, transacted = true), when the session and connection is closed immediatly afterwards. 

The messages are either being automatically committed or have been lost.
The rollback functionality on its own works correctly, its just the step of closing all our connections which must be applying unexpected behavior.

Switching to AMQ persistance adapter does not have this issue and will roll back the messages succesfully.

Attached is a class that demonstrates this behavior, and the activemq configuration file used in a 5.3.2 activeMQ instance

General Test Case Flow
--------------------------------------------------------
-Receives 5 messages on the OnMessage() method
-call session.commit()
-Receives 5 messages on the OnMessage() method
-set messagelistener(null)
-call connection.stop()
-call session.rollback()
-call session.close()
-Set up connection and consumer to same durable subscriber
-Confirm whether the messages have been rolled back succesfully when we receive the next 5 messages.

If the Test Case fails on rollback it will display the following message to the console for each message.
""ERROR: Failed Rollback expected version:2 actual version:3 on message:0""

Test Case Setup
------------------------------------------------------
-Zipped the eclipse project folder containing this test case
-Ensure the ""CONNECTION"" static string in ActiveMQTest.java will point to your running ActiveMQ instance.
-Run the ActiveMQTest main() method.

Have not tested in versions below 5.3.0


","Windows XP SP3
Sun JVM 1.5",angelo.rosenfelder,cgsmithe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/May/10 14:07;lphorne;KahaDBRollback.zip;https://issues.apache.org/jira/secure/attachment/12461705/KahaDBRollback.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-09-23 22:24:18.768,,,false,,,,,,,,,,,,,,,,,46495,,,Fri Sep 23 22:24:18 UTC 2011,,,,,,,,"0|i0akfj:",59583,,,,,,,,,,,,,,,,,,,"07/Apr/11 12:20;lphorne;This test case now passes in the recently released 5.5.0 .","23/Sep/11 22:24;tabish;User reports issue is resolved in 5.5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Time Synchronization Solution,AMQ-3031,12483881,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,lernit.2007,lernit.2007,12/Nov/10 12:13,23/Sep/11 18:49,30/Jan/20 16:55,23/Sep/11 18:49,5.4.1,,,,,,,5.6.0,,,Broker,,,,0,"We had a Problem if we synchronize the time of 1.1.2000 to the actual date. The cpu load increase to 170% over a long time period. We analyse the problem and find out that is a java timer problem. We pass the classes Scheduler.java in following packages:

1. \kahadb\src\main\java\org\apache\kahadb\util
2. activemq-core\src\main\java\org\apache\activemq\thread

We change the TimerTask by ScheduledThreadPoolExecutor. That was the solution. I want to discuss if that is the right solution or not. Can you analyze the classes and say if that is the right way or not? If not can you propose a solution. If yes can you release that with the next version.





",,jwatkins,lernit.2007,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/10 12:16;lernit.2007;Scheduler-ActivemqCore.java;https://issues.apache.org/jira/secure/attachment/12461886/Scheduler-ActivemqCore.java","12/Nov/10 12:16;lernit.2007;Scheduler-KahaDB.java;https://issues.apache.org/jira/secure/attachment/12461885/Scheduler-KahaDB.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-09-22 21:52:28.329,,,false,,,,,,,,,,,,,,,,,59473,,,Fri Sep 23 18:49:02 UTC 2011,,,,,,,,"0|i0ak9j:",59556,,,,,,,,,,,,,,,,,,,"12/Nov/10 12:16;lernit.2007;The first attachment is the Scheduler Class of kahadb. The second is the of activemq-core.

","22/Sep/11 21:52;tabish;It seems like a simple solution would be to remove the 'executePeriodically' function and just have the 'schedualPeriodically' called for all scheduled tasks as that uses fixed-delay execution instead of fixed-rate which is prone to stacking when tasks are delayed or in the reporters case the clock is changed.  ","23/Sep/11 07:38;lernit.2007;The changed are needed in the next activemq version. The both classes which I uploaded in this Jira Entry should be analyzes by a developer and then integrate it in the next activemq version.","23/Sep/11 18:49;tabish;Fix applied in trunk, removed the call to scheduleAtFixedRate and replaced it with just a call to schedule instead.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker goes down when database is restarted or goes down,AMQ-2498,12483742,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,pgovind,pgovind,16/Nov/09 22:14,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.0,,,,,,,5.6.0,,,Broker,,,,0,"When I database is idle for too long or I manually restart database, broker is shutting down. Does it not automatically try to reconnect? Am I missing anything?

I am setting validationQuery and testOnBorrow to true in broker-config.xml datasource bean.

Do I need to do anything else to tell broker for keep trying for database connection?

error
=========================

Failed to checkpoint a message store: java.util.concurrent.ExecutionException: java.io.IOException: The TCP/IP connection to the host  has failed. java.net.ConnectException: Connection refused: connect
java.util.concurrent.ExecutionException: java.io.IOException: The TCP/IP connection to the host  has failed. java.net.ConnectException: Connection refused: connect
 at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)
 at java.util.concurrent.FutureTask.get(FutureTask.java:83)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:421)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter$1.iterate(JournalPersistenceAdapter.java:124)
 at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
 at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
 at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
 at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.IOException: The TCP/IP connection to the host  has failed. java.net.ConnectException: Connection refused: connect
 at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:45)
 at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:61)
 at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:151)
 at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:406)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter.beginTransaction(JournalPersistenceAdapter.java:216)
 at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
 at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:258)
 at org.apache.activemq.store.journal.JournalTopicMessageStore.checkpoint(JournalTopicMessageStore.java:171)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter$5.call(JournalPersistenceAdapter.java:408)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter$5.call(JournalPersistenceAdapter.java:407)
 at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
 at java.util.concurrent.FutureTask.run(FutureTask.java:138)
 ... 3 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: The TCP/IP connection to the host  has failed. java.net.ConnectException: Connection refused: connect
 at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(Unknown Source)
 at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(Unknown Source)
 at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(Unknown Source)
 at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
 at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:294)
 at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:974)
 at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:96)
 at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:880)
 at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:54)
 ... 13 more
2009-11-12 14:30:12,705 INFO  [STDOUT] 2009-11-12 14:30:12,705 [Q Cleanup Timer] INFO  BrokerService                  - ActiveMQ JMS Message Broker (ess.broker1, ID:VR1Server-8183-1258064801205-0:0) stopped

============

Thanks,
PG",,abrand@esca.fr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/09 22:16;pgovind;server.log;https://issues.apache.org/jira/secure/attachment/12461433/server.log",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-11-18 15:03:14.995,,,false,,,,,,,,,,,,,,,,,60037,,,Tue Sep 20 11:01:38 UTC 2011,,,,,,,,"0|i0akmn:",59615,,,,,,,,,,,,,,,,,,,"16/Nov/09 22:16;pgovind;Please see attached log file upon request","16/Nov/09 22:17;pgovind;==========================================================================
Re: Broker goes down when database is restarted

by Dejan Bosanac :: Rate this Message:

Reply to Author | View Threaded | Show Only this Message
Hi,

what version are you using?

Cheers
-- 
Dejan Bosanac - http://twitter.com/dejanb

Open Source Integration - http://fusesource.com/
ActiveMQ in Action - http://www.manning.com/snyder/
Blog - http://www.nighttale.net


On Thu, Nov 12, 2009 at 11:47 PM, au.pg <pgovind@...> wrote:

>
> Hi,
>
> When I database is idle for too long or I manually restart database, broker
> is shutting down. Does it not automatically try to reconnect? Am I missing
> anything?
>
> I am setting validationQuery and testOnBorrow to true in broker-config.xml
> datasource bean.
>
> Do I need to do anything else to tell broker for keep trying for database
> connection?
>
> error
> =========================
>
> Failed to checkpoint a message store:
> java.util.concurrent.ExecutionException: java.io.IOException: The TCP/IP
> connection to the host  has failed. java.net.ConnectException: Connection
> refused: connect
> java.util.concurrent.ExecutionException: java.io.IOException: The TCP/IP
> connection to the host  has failed. java.net.ConnectException: Connection
> refused: connect
>  at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)
>  at java.util.concurrent.FutureTask.get(FutureTask.java:83)
>  at
>
> org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:421)
>  at
>
> org.apache.activemq.store.journal.JournalPersistenceAdapter$1.iterate(JournalPersistenceAdapter.java:124)
>  at
>
> org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
>  at
> org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
>  at
>
> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>  at
>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>  at java.lang.Thread.run(Thread.java:619)
> Caused by: java.io.IOException: The TCP/IP connection to the host  has
> failed. java.net.ConnectException: Connection refused: connect
>  at
>
> org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:45)
>  at
>
> org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:61)
>  at
>
> org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:151)
>  at
>
> org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:406)
>  at
>
> org.apache.activemq.store.journal.JournalPersistenceAdapter.beginTransaction(JournalPersistenceAdapter.java:216)
>  at
>
> org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
>  at
>
> org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:258)
>  at
>
> org.apache.activemq.store.journal.JournalTopicMessageStore.checkpoint(JournalTopicMessageStore.java:171)
>  at
>
> org.apache.activemq.store.journal.JournalPersistenceAdapter$5.call(JournalPersistenceAdapter.java:408)
>  at
>
> org.apache.activemq.store.journal.JournalPersistenceAdapter$5.call(JournalPersistenceAdapter.java:407)
>  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>  at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>  ... 3 more
> Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: The TCP/IP
> connection to the host  has failed. java.net.ConnectException: Connection
> refused: connect
>  at
> com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(Unknown
> Source)
>  at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(Unknown
> Source)
>  at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(Unknown Source)
>  at
>
> org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
>  at
>
> org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:294)
>  at
>
> org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:974)
>  at
>
> org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:96)
>  at
>
> org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:880)
>  at
>
> org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:54)
>  ... 13 more
> 2009-11-12 14:30:12,705 INFO  [STDOUT] 2009-11-12 14:30:12,705 [Q Cleanup
> Timer] INFO  BrokerService                  - ActiveMQ JMS Message Broker
> (ess.broker1, ID:VR1Server-8183-1258064801205-0:0) stopped
>
> ============
>
> Thanks,
> PG
> --
> View this message in context:
> http://old.nabble.com/Broker-goes-down-when-database-is-restarted-tp26327953p26327953.html
> Sent from the ActiveMQ - User mailing list archive at Nabble.com.
>
>
Dejan Bosanac

Open Source Integration - http://fusesource.com/
ActiveMQ in Action - http://www.manning.com/snyder/
Blog - http://www.nighttale.net

	
Re: Broker goes down when database is restarted

by au.pg :: Rate this Message:

Reply to Author | View Threaded | Show Only this Message
Hi Dejan,

I am using ActiveMQ 5.3.

Thanks,
PG

	
Re: Broker goes down when database is restarted

by Gary Tully :: Rate this Message:

Reply to Author | View Threaded | Show Only this Message
Can you create a jira and attach the full log, a checkpoint failure should
not force a broker shutdown, that is, that stack trace should not. There
should be something else in the logs I think.

do the validationQuery and testOnBorrow on the pool really take effect?
Seems odd that connection refused is the exception rather than EOF.

But it looks like some sort of failover Jdbc pool is required here.


2009/11/13 au.pg <pgovind@...>

>
> Hi Dejan,
>
> I am using ActiveMQ 5.3.
>
> Thanks,
> PG
> --
> View this message in context:
> http://old.nabble.com/Broker-goes-down-when-database-is-restarted-tp26327953p26338023.html
> Sent from the ActiveMQ - User mailing list archive at Nabble.com.
>
>


-- 
http://blog.garytully.com

Open Source Integration
http://fusesource.com
==========================================================================","18/Nov/09 15:03;magellings;I have handled this problem using a connection pooler.  Master goes down, slave attempts to connect to database and retries however many times configured...  New slave then needs to be started up manually (or automatically through some automation).


  <bean id=""mssql-ds"" class=""com.mchange.v2.c3p0.ComboPooledDataSource"" destroy-method=""close"">
    <property name=""driverClass"" value=""com.microsoft.sqlserver.jdbc.SQLServerDriver""/>
    <property name=""jdbcUrl"" value=""jdbc:sqlserver://CAGR.qg.com:1433;databaseName=AtvMMS""/>
    <property name=""user"" value=""user""/>
    <property name=""password"" value=""password""/>
    <property name=""acquireRetryAttempts"" value=""100""/>
    <property name=""testConnectionOnCheckout"" value=""true""/>
    <property name=""testConnectionOnCheckin"" value=""true""/>
    <property name=""automaticTestTable"" value=""ACTIVEMQ_CONN_TEST""/>
    <property name=""acquireRetryDelay"" value=""5000""/>
    <property name=""preferredTestQuery"" value=""SELECT 1""/>
  </bean>","24/Nov/09 14:29;gtully;In the standalone case, simple broker, not master slave. disable the lock thread for the jdbc persistence adapter. set  useDatabaseLock=false. This is what is initiating the shutdown of the broker when the connection to the DB dies, at it assumes that another broker is ready to take its place. It is not needed in the standalone case.
Otherwise,look into a connection pool that will do retries for you.","01/Jul/11 21:00;tabish;Not a problem, configuration issue as documented by gtully","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client stops receiving messages from topic after about 30 minutes of inactivity,AMQ-2517,12483732,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,pkozelka,pkozelka,28/Nov/09 10:58,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,5.3.0,,,,,,5.6.0,,,JMS client,,,,1,"Hello,
I have very simple ActiveMQ JMS client that listens on a topic. It works fine, but after about 30 minutes when there is no traffic, it ""does not hear"" anything.
Also, AMQ console indicates that there is one less consumer on that topic.
It seems to me somewhat similar to issue #AMQ-1251.
This behavior is the same on 5.2.0 and 5.3.0 version - always deployed both on provider and client side.

Is there a setting that might influence/workarround it ?","Ubuntu Karmic Koala
java version ""1.5.0_11""
",justinpitts@gmail.com,pkozelka,wangyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-01-26 14:52:34.174,,,false,,,,,,,,,,,,,,,,,60052,,,Tue Sep 20 11:01:35 UTC 2011,,,,,,,,"0|i0aklz:",59612,,,,,,,,,,,,,,,,,,,"28/Nov/09 11:17;pkozelka;btw, restarting the client helps, for next few minutes","26/Jan/10 14:52;wangyin;A AMQ(5.2.0) Broker server and three durable subscribers(no message selector).
It work fine usually.
After a few days one producer send a message successfully, but the subscribers do not receive any messages.
Restart the subscribers, it does not work yet.
Restart the Broker, three  subscribers receive message this time.
I'm so confused what's wrong.
:(
 ","26/Apr/10 10:39;markoforge;Hi, 

I am also experiencing same problem.

I am using ActiveMQ broker (v 5.3.1) and NMS ActiveMQ clients. 

Consumer is subscribed to topic and uses asynchronous message receiving. However problem appears when consumer is idle for about 30 minutes, that is consumer stops receiving messages after it has been idle for approximately 30 minutes. 

This problem does not appear when both clients and broker are running on same machine. Everything works fine when consumer application is restarted.

I have set maxInactivityDuration to 0. 

I have also set handlers for ConnectionInterruptedListener, ConnectionResumedListener and ExceptionListener but no events are fired. 

After I close consumer application ACTIVEMQ console does report one consumer less. 

Here is transport connector configuration element in activemq.xml: 

  <transportConnector name=""openwire"" 
uri=""tcp://0.0.0.0:61616?wireFormat.maxInactivityDuration=0&keepAlive=true"" discoveryUri=""multicast://default""/> 


and client connects by using following uri: 

""failover:(tcp://somehost:61616?wireFormat.maxInactivityDuration=0)"" 

Any idea why is this happening? ","29/Jun/11 15:09;tabish;This could be related to issues that were fixed in the NMS client.  Reopen if the problem still exists using the latest ActiveMQ and NMS client library.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Https JMSBridgeConnector failed to recover due to an infinite loop in Journal cleanup.,AMQ-1821,12483173,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,hansonkx,hansonkx,21/Jun/08 01:12,15/Aug/11 22:36,30/Jan/20 16:55,15/Aug/11 22:36,4.1.1,,,,,,,NEEDS_REVIEW,,,Broker,,,,0,"Hi, 
I am not sure if this is an known bug.
I am encountering an issue when I have a broker with a Https Queue Bridge connector in several machines connected with one embedded broker in a remote Tomcat server.  Messages are being sent from client machines to the server with no connectivity issue in the first couple days(well, not really, the time it takes to fail varies).  During this first period of time, the failover transport was able to recover from connection failures.  However, the brokers' https connections started to drop after time and not being able to recover anymore.  So It's not able to send messages to the server anymore.  The debug logs shows an infinite loop of checkpoints(msgs cleanups) with the Journal Persistence.  This also happens with Derby Persistence.  I am not sure if this infinite loop prevents the failover to take place in this case.  As a note, the time it takes to reach this failure case varies in different client machines, but they are sending messages to the server at the same rate(1 message per hour).

I have attached a partial text of the log.

2008-06-20 04:03:57,630 [r.emn2008.com/amq/] WARN  HttpClientTransport            - Received null command from url: https://publisher.emn2008.com/amq/
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG HttpMethodBase                 - Buffering response body
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG HttpMethodBase                 - Resorting to protocol version default close connection policy
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG HttpMethodBase                 - Should NOT close connection, using HTTP/1.1.
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG HttpConnection                 - HttpConnection.setSoTimeout(0)
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG HttpMethodBase                 - Execute loop try 1
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG header                         - >> ""GET /amq/ HTTP/1.1[\r][\n]""
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG HttpMethodBase                 - Adding Host request header
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG header                         - >> ""clientID: ID:emn2008-82646A4E67-2374-1213758751348-5:5[\r][\n]""
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG header                         - >> ""User-Agent: Jakarta Commons-HttpClient/2.0.1[\r][\n]""
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG header                         - >> ""Host: publisher.emn2008.com[\r][\n]""
2008-06-20 04:03:57,630 [r.emn2008.com/amq/] DEBUG header                         - >> ""[\r][\n]""
2008-06-20 04:07:16,505 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2008-06-20 04:07:16,505 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:07:16,505 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:07:16,505 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:07:16,505 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:07:16,505 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.
2008-06-20 04:07:48,489 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:07:48,489 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:07:48,489 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:07:48,489 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:12:16,520 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2008-06-20 04:12:16,520 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:12:16,520 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:12:16,520 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:12:16,520 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:12:16,520 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.
2008-06-20 04:12:48,505 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:12:48,505 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:12:48,505 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:12:48,505 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:17:16,536 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2008-06-20 04:17:16,536 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:17:16,536 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:17:16,536 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:17:16,536 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:17:16,536 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.
2008-06-20 04:17:48,520 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:17:48,520 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:17:48,520 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:17:48,520 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:22:46,552 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2008-06-20 04:22:46,552 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:22:46,552 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:22:46,552 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:22:46,552 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:22:46,552 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.
2008-06-20 04:22:48,536 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:22:48,536 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:22:48,536 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:22:48,536 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:27:48,552 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:27:48,552 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:27:48,552 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:27:48,552 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:28:16,552 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2008-06-20 04:28:16,567 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:28:16,567 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:28:16,567 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:28:16,567 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:28:16,567 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.
2008-06-20 04:32:48,552 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:32:48,552 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:32:48,567 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:32:48,567 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:33:16,567 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2008-06-20 04:33:16,567 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.
2008-06-20 04:37:48,567 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:37:48,567 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:37:48,567 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:37:48,567 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:38:16,583 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2008-06-20 04:38:16,583 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:38:16,583 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:38:16,583 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:38:16,583 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:38:16,583 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.
2008-06-20 04:42:11,989 [/127.0.0.1:3106] DEBUG AbstractRegion                 - Removing consumer: ID:emn2008-82646A4E67-3632-1213901674708-1:47:-1:1
2008-06-20 04:42:11,989 [/127.0.0.1:3106] DEBUG TransportConnection            - Stopping connection: /127.0.0.1:3106
2008-06-20 04:42:11,989 [/127.0.0.1:3106] DEBUG TransportConnection            - Stopped connection: /127.0.0.1:3106
2008-06-20 04:42:12,005 [localhost:60001] DEBUG WireFormatNegotiator           - Sending: WireFormatInfo { version=2, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2008-06-20 04:42:12,005 [/127.0.0.1:3128] DEBUG WireFormatNegotiator           - Received WireFormat: WireFormatInfo { version=2, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2008-06-20 04:42:12,005 [/127.0.0.1:3128] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:3128 before negotiation: OpenWireFormat{version=2, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2008-06-20 04:42:12,005 [/127.0.0.1:3128] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:3128 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
2008-06-20 04:42:12,005 [/127.0.0.1:3128] DEBUG TransportConnection            - Setting up new connection: org.apache.activemq.broker.jmx.ManagedTransportConnection@1e9d810
2008-06-20 04:42:12,005 [/127.0.0.1:3128] DEBUG AbstractRegion                 - Adding consumer: ID:emn2008-82646A4E67-3632-1213901674708-1:48:-1:1
2008-06-20 04:42:12,036 [758751348-3:1:2] DEBUG ActiveMQSession                - Sending message: ActiveMQTextMessage {commandId = 5, responseRequired = true, messageId = ID:emn2008-82646A4E67-2374-1213758751348-3:0:2:1:172, originalDestination = null, originalTransactionId = null, producerId = ID:emn2008-82646A4E67-2374-1213758751348-3:0:2:1, destination = queue://emn2008, transactionId = null, expiration = 0, timestamp = 1213962132036, arrival = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@931b44, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 3239, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = null}
2008-06-20 04:42:12,036 [758751348-3:1:2] DEBUG HttpConnection                 - An error occurred while reading from the socket, is appears to be stale
java.net.SocketException: Socket Closed
	at java.net.PlainSocketImpl.setOption(Unknown Source)
	at java.net.Socket.setSoTimeout(Unknown Source)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.setSoTimeout(Unknown Source)
	at org.apache.commons.httpclient.HttpConnection.isStale(HttpConnection.java:510)
	at org.apache.commons.httpclient.HttpConnection.isOpen(HttpConnection.java:436)
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:626)
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:497)
	at org.apache.activemq.transport.http.HttpClientTransport.oneway(HttpClientTransport.java:83)
	at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:392)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:69)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:74)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1175)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1551)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:415)
	at org.apache.activemq.ActiveMQQueueSender.send(ActiveMQQueueSender.java:116)
	at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:87)
	at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:134)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:854)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:99)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:166)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:101)
	at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:25)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:39)
2008-06-20 04:42:12,052 [758751348-3:1:2] DEBUG HttpConnection                 - Connection is stale, closing...
2008-06-20 04:42:13,161 [758751348-3:1:2] DEBUG HttpConnection                 - HttpConnection.setSoTimeout(30000)
2008-06-20 04:42:13,161 [758751348-3:1:2] DEBUG HttpMethodBase                 - Execute loop try 1
2008-06-20 04:42:13,161 [758751348-3:1:2] DEBUG header                         - >> ""POST /amq/ HTTP/1.1[\r][\n]""
2008-06-20 04:42:13,161 [758751348-3:1:2] DEBUG HttpMethodBase                 - Adding Host request header
2008-06-20 04:42:13,161 [758751348-3:1:2] DEBUG header                         - >> ""clientID: ID:emn2008-82646A4E67-2374-1213758751348-5:5[\r][\n]""
2008-06-20 04:42:13,161 [758751348-3:1:2] DEBUG header                         - >> ""User-Agent: Jakarta Commons-HttpClient/2.0.1[\r][\n]""
2008-06-20 04:42:13,161 [758751348-3:1:2] DEBUG header                         - >> ""Host: publisher.emn2008.com[\r][\n]""
2008-06-20 04:42:13,161 [758751348-3:1:2] DEBUG header                         - >> ""Content-Length: 2950[\r][\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG header                         - >> ""[\r][\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG EntityEnclosingMethod          - Using buffered request body
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""<org.apache.activemq.command.ActiveMQTextMessage>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <messageId>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""    <producerId>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""      <connectionId>ID:emn2008-82646A4E67-2374-1213758751348-3:0</connectionId>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""      <sessionId>2</sessionId>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""      <value>1</value>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""    </producerId>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""    <producerSequenceId>172</producerSequenceId>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""    <brokerSequenceId>0</brokerSequenceId>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  </messageId>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <producerId reference=""../messageId/producerId""/>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <destination class=""org.apache.activemq.command.ActiveMQQueue"">[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""    <string>emn2008</string>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""    <null/>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  </destination>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <expiration>0</expiration>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <timestamp>1213962132036</timestamp>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <arrival>0</arrival>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <persistent>true</persistent>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <priority>4</priority>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <groupSequence>0</groupSequence>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <compressed>false</compressed>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <content>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""    <data>AAAFRzw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiA/PjxlbW44LW1lc3NhZ2Ug[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""eG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNp[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""Om5vTmFtZXNwYWNlU2NoZW1hTG9jYXRpb249ImVtbjgtbWVzc2FnZS54c2QiIGJ1c2luZXNzRW50[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""aXR5SWQ9Ijg0OCIgYnVzaW5lc3NFbnRpdHlOYW1lPSJDYXJscyBKci4gKDY1MSkgS2lvc2sgMiIg[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""c3RvcmVOYnI9IjY1MSIgaXA9IjE5Mi4xNjguMS4xMiIgY3JlYXRpb25EYXRldGltZT0iMjAwOC0w[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""Ni0yMFQwNDoyNDo0MS43NTUtMDcwMCIgZXhwaXJhdGlvbkRhdGV0aW1lPSIyMDA4LTA2LTIwVDA1[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""OjI0OjM0Ljk1OC0wNzAwIj48a2lvc2tTdGF0dXMgY2xhc3M9Imtpb3NrLXN0YXR1cyIgYXZhaWxh[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""YmlsaXR5PSJPRkZMSU5FIiBtb2RlPSJPUkRFUklOR19NT0RFIiBzZXZlcml0eUxldmVsPSJMT1ci[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""IG1lc3NhZ2U9IlRoZSBhcHBsaWNhdGlvbiBpcyBvZmZsaW5lLiI+PC9raW9za1N0YXR1cz48Y29t[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""cG9uZW50U3RhdHVzTGlzdD48Y29tcG9uZW50LXN0YXR1cyBjb21wb25lbnROYW1lPSJPTkxJTkUi[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""IGF2YWlsYWJpbGl0eT0iT05MSU5FIiBtb2RlPSJSRUdVTEFSIiBzZXZlcml0eUxldmVsPSJMT1ci[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""IG1lc3NhZ2U9IlByaW50ZXIgTW9kZWwgb25saW5lLiI+PC9jb21wb25lbnQtc3RhdHVzPjxjb21w[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""b25lbnQtc3RhdHVzIGNvbXBvbmVudE5hbWU9IkNBUkRSRUFERVJPTkxJTkUiIGF2YWlsYWJpbGl0[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""eT0iT05MSU5FIiBtb2RlPSJPTkxJTkVfTU9ERSIgc2V2ZXJpdHlMZXZlbD0iTE9XIiBtZXNzYWdl[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""PSJDYXJkIFJlYWRlciBEZXZpY2Ugb25saW5lLiI+PC9jb21wb25lbnQtc3RhdHVzPjxjb21wb25l[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""bnQtc3RhdHVzIGNvbXBvbmVudE5hbWU9IkJJTExNQUNISU5FU09OTElORSIgYXZhaWxhYmlsaXR5[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""PSJPTkxJTkUiIG1vZGU9Ik9OTElORV9NT0RFIiBzZXZlcml0eUxldmVsPSJMT1ciIG1lc3NhZ2U9[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""IkJpbGwgTWFjaGluZXMgb25saW5lLiI+PC9jb21wb25lbnQtc3RhdHVzPjxjb21wb25lbnQtc3Rh[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""dHVzIGNvbXBvbmVudE5hbWU9IkNPSU5TT05MSU5FIiBhdmFpbGFiaWxpdHk9Ik9OTElORSIgbW9k[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""ZT0iT05MSU5FX01PREUiIHNldmVyaXR5TGV2ZWw9IkxPVyIgbWVzc2FnZT0iQ29pbnMgRGV2aWNl[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""IG9ubGluZS4iPjwvY29tcG9uZW50LXN0YXR1cz48Y29tcG9uZW50LXN0YXR1cyBjb21wb25lbnRO[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""YW1lPSJQT1NPTkxJTkUiIGF2YWlsYWJpbGl0eT0iT05MSU5FIiBtb2RlPSJPTkxJTkVfTU9ERSIg[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""c2V2ZXJpdHlMZXZlbD0iTE9XIiBtZXNzYWdlPSJQT1MgaXMgb25saW5lLiI+PC9jb21wb25lbnQt[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""c3RhdHVzPjwvY29tcG9uZW50U3RhdHVzTGlzdD48L2VtbjgtbWVzc2FnZT4=</data>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""    <offset>0</offset>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""    <length>1355</length>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  </content>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <redeliveryCounter>0</redeliveryCounter>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <size>3239</size>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <readOnlyProperties>true</readOnlyProperties>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <readOnlyBody>true</readOnlyBody>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <droppable>false</droppable>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <commandId>178</commandId>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""  <responseRequired>true</responseRequired>[\n]""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG content                        - >> ""</org.apache.activemq.command.ActiveMQTextMessage>""
2008-06-20 04:42:13,270 [758751348-3:1:2] DEBUG EntityEnclosingMethod          - Request body sent
2008-06-20 04:42:13,427 [758751348-3:1:2] DEBUG header                         - << ""HTTP/1.1 200 OK[\r][\n]""
2008-06-20 04:42:13,427 [758751348-3:1:2] DEBUG header                         - << ""Server: Apache-Coyote/1.1[\r][\n]""
2008-06-20 04:42:13,427 [758751348-3:1:2] DEBUG header                         - << ""Content-Length: 0[\r][\n]""
2008-06-20 04:42:13,427 [758751348-3:1:2] DEBUG header                         - << ""Date: Fri, 20 Jun 2008 11:40:16 GMT[\r][\n]""
2008-06-20 04:42:13,427 [758751348-3:1:2] DEBUG HttpMethodBase                 - Buffering response body
2008-06-20 04:42:13,427 [758751348-3:1:2] DEBUG HttpMethodBase                 - Resorting to protocol version default close connection policy
2008-06-20 04:42:13,427 [758751348-3:1:2] DEBUG HttpMethodBase                 - Should NOT close connection, using HTTP/1.1.
2008-06-20 04:42:48,583 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:42:48,583 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:42:48,583 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:42:48,583 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:43:16,598 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2008-06-20 04:43:16,598 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:43:16,598 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:43:16,598 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:43:16,598 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:43:16,598 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.
2008-06-20 04:47:48,598 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:47:48,598 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:47:48,598 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:47:48,598 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:48:16,614 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2008-06-20 04:48:16,614 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:48:16,614 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:48:16,614 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:48:16,614 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2008-06-20 04:48:16,614 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.
2008-06-20 04:52:48,614 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2008-06-20 04:52:48,614 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2008-06-20 04:52:48,614 [Q Cleanup Timer] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2008-06-20 04:52:48,614 [Q Cleanup Timer] DEBUG JDBCPersistenceAdapter         - Cleanup done.

Any information can help.
",Win XP,donv,jmontanez@emn8.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/08 01:12;hansonkx;ASF.LICENSE.NOT.GRANTED--activemq.log;https://issues.apache.org/jira/secure/attachment/12461091/ASF.LICENSE.NOT.GRANTED--activemq.log",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-08-15 22:36:08.459,,,false,,,,,,,,,,,,,,,,,43776,,,Mon Aug 15 22:36:08 UTC 2011,,,,,,,,"0|i0al7z:",59711,,,,,,,,,,,,,,,,,,,"15/Aug/11 22:36;tabish;4.x is EOL",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ broker fails to start due to java.lang.NullPointerException,AMQ-2956,12483844,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,jjanyan,jjanyan,01/Oct/10 17:48,30/Jun/11 14:56,30/Jan/20 16:55,30/Jun/11 14:56,5.3.2,,,,,,,,,,Broker,,,,1,"Broker fails to restart due to a java.lang.NullPointerException. It looks like it has to do with the JDBC persistance adapter. 
I'm using: 

<journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data"" dataSource=""#mysql-ds""/>
        <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
                <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
                <property name=""url"" value=""jdbc:mysql://myhostname.com/activemq?relaxAutoCommit=true""/>
                <property name=""username"" value=""myusername""/>
                <property name=""password"" value=""mypassword""/>
                <property name=""poolPreparedStatements"" value=""true""/>

I can solve this by emptying the table ACTIVEMQ_ACKS. It looks like there are some acks that exist for messages that aren't in the database.

Details below:

Running ActiveMQ Broker...
wrapper  | --> Wrapper Started as Console
wrapper  | Launching a JVM...
jvm 1    | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org
jvm 1    |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.
jvm 1    | 
jvm 1    | 
jvm 1    | WARNING - Unable to load the Wrapper's native library because none of the
jvm 1    |           following files:
jvm 1    |             libwrapper-linux-x86-64.so
jvm 1    |             libwrapper.so
jvm 1    |           could be located on the following java.library.path:
jvm 1    |             /var/lib/activemq/bin/linux-x86-64/../../bin/linux
jvm 1    |           Please see the documentation for the wrapper.java.library.path
jvm 1    |           configuration property.
jvm 1    |           System signals will not be handled correctly.
jvm 1    | 
jvm 1    | Java Runtime: Sun Microsystems Inc. 1.6.0_21 /usr/java/jdk1.6.0_21/jre
jvm 1    |   Heap sizes: current=117888k  free=111741k  max=466048k
jvm 1    |     JVM args: -Dactivemq.home=../.. -Dactivemq.base=../.. -Djavax.net.ssl.keyStorePassword=password -Djavax.net.ssl.trustStorePassword=password -Djavax.net.ssl.keyStore=../../conf/broker.ks -Djavax.net.ssl.trustStore=../../conf/broker.ts -Dcom.sun.management.jmxremote -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote.port=1616 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Xmx512m -Djava.library.path=../../bin/linux/ -Dwrapper.key=dafM8UrD_1bFGoNX -Dwrapper.port=32000 -Dwrapper.jvm.port.min=31000 -Dwrapper.jvm.port.max=31999 -Dwrapper.pid=24752 -Dwrapper.version=3.2.3 -Dwrapper.native_library=wrapper -Dwrapper.cpu.timeout=10 -Dwrapper.jvmid=1
jvm 1    | ACTIVEMQ_HOME: ../..
jvm 1    | ACTIVEMQ_BASE: ../..
jvm 1    | Loading message broker from: xbean:activemq.xml
jvm 1    |  INFO | Using Persistence Adapter: JournalPersistenceAdapator(JDBCPersistenceAdapter(org.apache.commons.dbcp.BasicDataSource@4762d950))
jvm 1    |  INFO | JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
jvm 1    |  INFO | Database adapter driver override recognized for : [mysql-ab_jdbc_driver] - adapter: class org.apache.activemq.store.jdbc.adapter.MySqlJDBCAdapter
jvm 1    |  INFO | Database lock driver override not found for : [mysql-ab_jdbc_driver].  Will use default implementation.
jvm 1    |  INFO | Attempting to acquire the exclusive lock to become the Master broker
jvm 1    |  INFO | Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@4762d950
jvm 1    |  INFO | ActiveMQ 5.3.2 JMS Message Broker (apollo) is starting
jvm 1    |  INFO | For help or more information please see: http://activemq.apache.org/
jvm 1    | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException
jvm 1    | java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.getLastMessageBrokerSequenceId(JournalPersistenceAdapter.java:222)
jvm 1    | 	at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
jvm 1    | 	at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
jvm 1    | 	at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:94)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:265)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(Native Method)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:619)
jvm 1    |  INFO | ActiveMQ Message Broker (apollo, null) is shutting down
jvm 1    |  INFO | Connector openwire Stopped
jvm 1    |  INFO | Connector stomp Stopped
jvm 1    |  INFO | ActiveMQ JMS Message Broker (apollo, null) stopped
jvm 1    | ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:619)
jvm 1    | Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(Native Method)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	... 16 more
jvm 1    | Caused by: java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.getLastMessageBrokerSequenceId(JournalPersistenceAdapter.java:222)
jvm 1    | 	at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
jvm 1    | 	at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
jvm 1    | 	at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:94)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:265)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	... 36 more
jvm 1    | ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:619)
jvm 1    | Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(Native Method)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	... 16 more
jvm 1    | Caused by: java.lang.NullPointerException
jvm 1    | 	at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.getLastMessageBrokerSequenceId(JournalPersistenceAdapter.java:222)
jvm 1    | 	at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
jvm 1    | 	at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
jvm 1    | 	at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:94)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)
jvm 1    | 	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
jvm 1    | 	at org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:265)
jvm 1    | 	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:597)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	... 36 more
wrapper  | <-- Wrapper Stopped
","Linux hostname-removed 2.6.21.7-2.fc8xen #1 SMP Fri Feb 15 12:34:28 EST 2008 x86_64 x86_64 x86_64 GNU/Linux

java version ""1.6.0_21""
Java(TM) SE Runtime Environment (build 1.6.0_21-b06)
Java HotSpot(TM) 64-Bit Server VM (build 17.0-b16, mixed mode)",muellerc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2696,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-13 16:29:57.808,,,false,,,,,,,,,,,,,,,,,69618,,,Thu Jun 30 14:56:26 UTC 2011,,,,,,,,"0|i0tsb3:",171895,,,,,,,,,,,,,,,,,,,"13/Apr/11 16:29;muellerc;We running in the same issue. Any updates here?

Env:
apache-activemq-5.3.1-fuse-02-01

We are using the jdbc persistence store (Oracle).
{code}
<persistenceAdapter>
    <jdbcPersistenceAdapter dataSource=""#oracle-ds""/>
</persistenceAdapter>

<bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"" value=""oracle.jdbc.driver.OracleDriver""/>
    <property name=""url"" value=""jdbc:oracle:thin:@127.0.0.1:1521:SID""/>
    <property name=""username"" value=""user""/>
    <property name=""password"" value=""password""/>
    <property name=""poolPreparedStatements"" value=""true""/>
    <property name=""initialSize"" value=""5""/>
    <property name=""maxActive"" value=""7""/>
    <property name=""minIdle"" value=""2""/>
    <property name=""maxIdle"" value=""5""/>
    <property name=""validationQuery"" value=""SELECT 1 FROM DUAL""/>
    <property name=""testOnBorrow"" value=""true""/>
</bean>
{code}

Thanks in advance,
Christian","13/Apr/11 16:32;muellerc;Our complete stack trace looks like:
{noformat}
ava Runtime: Sun Microsystems Inc. 1.6.0_21 /opt/sia/java/jre1.6.0_21
  Heap sizes: current=203136k  free=199951k  max=699072k
    JVM args: -Xmx768M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=11119 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.51.44.35 -Dactivemq.classpath=/opt/sia/apache-activemq-5.3.1-fuse-02-01/conf; -Dactivemq.home=/opt/sia/apache-activemq-5.3.1-fuse-02-01 -Dactivemq.base=/opt/sia/apache-activemq-5.3.1-fuse-02-01
ACTIVEMQ_HOME: /opt/sia/apache-activemq-5.3.1-fuse-02-01
ACTIVEMQ_BASE: /opt/sia/apache-activemq-5.3.1-fuse-02-01
Loading message broker from: xbean:activemq.xml
INFO | Using Persistence Adapter: JDBCPersistenceAdapter(org.apache.commons.dbcp.BasicDataSource@628f9a32)
INFO | Database adapter driver override recognized for : [oracle_jdbc_driver] - adapter: class org.apache.activemq.store.jdbc.adapter.OracleJDBCAdapter
INFO | Database lock driver override not found for : [oracle_jdbc_driver].  Will use default implementation.
INFO | Attempting to acquire the exclusive lock to become the Master broker
INFO | Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@628f9a32
INFO | ActiveMQ 5.3.1-fuse-02-01 JMS Message Broker (amqcat02) is starting
INFO | For help or more information please see: http://activemq.apache.org/
ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
        at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:95)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1740)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1694)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:712)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
INFO | ActiveMQ Message Broker (amqcat02, null) is shutting down
INFO | Network Connector F_TO_B Stopped
INFO | Connector openwire Stopped
INFO | Connector open2 Stopped
INFO | Connector ssl Stopped
INFO | ActiveMQ JMS Message Broker (amqcat02, null) stopped
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.lang.NullPointerException
        at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
        at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:95)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1740)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1694)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:712)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        ... 30 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.lang.NullPointerException
        at org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)
        at org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:95)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1740)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1694)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:712)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        ... 30 more

{noformat}","13/Apr/11 20:29;muellerc;I think the problem is related to this piece of code. The call to ""getAdapter().doGetLastMessageStoreSequenceId(c)"" returns the ""Math.max(lastSequenceIdInMsg, lastSequenceIdInAcks)"". In the case the broker was not shut down right, the sequenceId from lastSequenceIdInAcks is higher than the lastSequenceIdInMsg. But the JDBCPersistenceAdapter does not care about this and try to load the message with this id and fails with a NPE.

{code:title=org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.java}
    public long getLastMessageBrokerSequenceId() throws IOException {
        // Get a connection and insert the message into the DB.
        TransactionContext c = getTransactionContext();
        try {
            long seq =  getAdapter().doGetLastMessageStoreSequenceId(c);
            sequenceGenerator.setLastSequenceId(seq);
            long brokerSeq = 0;
            if (seq != 0) {
            	Message last = (Message)wireFormat.unmarshal(new ByteSequence(getAdapter().doGetMessageById(c, seq)));
            	brokerSeq = last.getMessageId().getBrokerSequenceId();
            }
            return brokerSeq;
        } catch (SQLException e) {
            JDBCPersistenceAdapter.log(""JDBC Failure: "", e);
            throw IOExceptionSupport.create(""Failed to get last broker message id: "" + e, e);
        } finally {
            c.close();
        }
    }
{code}

If someone could tell me what the right behavior is, I could provide a patch for this issue...

Christian","14/Apr/11 09:03;gtully;Hmm, that is a problem, i think the message corresponding to the seqId from the acks may not be in the store because it could already have been removed.
I think the brokerSeq should be set to the 'seq' in that case as a fallback.

On trunk there is a null check but brokerSeq defaults to 0, which means that ids will be reused, in a failover message producer this could lead to duplicates.

I think trunk needs to default the brokerSeq to the seq value returned from the store.

fyi: the root problem is that the brokerSeq, incremented when a messages is received cannot be used as the orderId/seqId in the store because they values get out of sync when transactions are used, commits may be out of order w.r.t to initial sends. For that reason, the next brokerSeq needs to be derived from what is stored on a restart.
In the case that the value comes from what is acked and the message is no longer available, using the value from the ack table as the new value makes sense.
","17/May/11 21:27;muellerc;I think this issue is solved. The code in trunk is:

{code:title=org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.java}
    public long getLastMessageBrokerSequenceId() throws IOException {
        TransactionContext c = getTransactionContext();
        try {
            long seq =  getAdapter().doGetLastMessageStoreSequenceId(c);
            sequenceGenerator.setLastSequenceId(seq);
            long brokerSeq = 0;
            if (seq != 0) {
                byte[] msg = getAdapter().doGetMessageById(c, seq);
                if (msg != null) {
                    Message last = (Message)wireFormat.unmarshal(new ByteSequence(msg));
                    brokerSeq = last.getMessageId().getBrokerSequenceId();
                } else {
                   LOG.warn(""Broker sequence id wasn't recovered properly, possible duplicates!"");
                }
            }
            return brokerSeq;
        } catch (SQLException e) {
            JDBCPersistenceAdapter.log(""JDBC Failure: "", e);
            throw IOExceptionSupport.create(""Failed to get last broker message id: "" + e, e);
        } finally {
            c.close();
        }
    }
{code}

So it's no longer possible to get the NPE by creating the ByteSequence. This issue is a duplicate to [AMQ-2696|https://issues.apache.org/jira/browse/AMQ-2696] which is already solved and can be closed.","30/Jun/11 14:56;tabish;Issue ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnectionInfo does not override toString to stop logging actual Password in case of Warning. ,AMQ-2858,12483481,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,kamaldalal,kamaldalal,03/Aug/10 17:09,29/Jun/11 22:22,30/Jan/20 16:55,29/Jun/11 22:22,5.3.0,,,,,,,5.3.1,,,Broker,,,,0,"In case of exception as shown below, the ConnectionInfo logged as warning which logs Password in plain Text. Should have encrypted or log as XXXX or YYYY ... 

If ConnectionInfo override the BaseCommand's toString(Map<String, Object>overrideFields) method and set Password as XXXXX... this would be better handled. 

WARN  org.apache.activemq.broker.TransportConnection.Service [ActiveMQ Transport Stopper: /134.42.197.187:2512] - Failed to remove connection ConnectionInfo {commandId = 1, responseRequired = true, connectionId = 4a6df719-b8ed-4431-a97f-52b93078f021, clientId = 2061e6c0-f8e0-4882-860c-89c3fd7e36db, userName = YYYYX *password = X2342$*, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true}
java.lang.SecurityException: User is not authenticated.
	at org.apache.activemq.security.AuthorizationBroker.addDestination(AuthorizationBroker.java:52)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:425)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:439)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:369)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:364)
	at org.apache.activemq.advisory.AdvisoryBroker.removeConnection(AdvisoryBroker.java:223)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:110)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:110)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:110)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConnection(MutableBrokerFilter.java:117)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:709)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:976)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.doStop(ManagedTransportConnection.java:71)
	at org.apache.activemq.broker.TransportConnection$3.run(TransportConnection.java:907)
",Linux,kamaldalal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-12 09:29:21.668,,,false,,,,,,,,,,,,,,,,,69674,,,Wed Jun 29 22:22:24 UTC 2011,,,,,,,,"0|i0rzvj:",161456,Regression,,,,,,,,,,,,,,,,,,"12/Oct/10 09:29;dejanb;This sounds like a duplicate of https://issues.apache.org/activemq/browse/AMQ-2499 and should be fixed in later versions","13/Oct/10 00:12;kamaldalal;This is different than https://issues.apache.org/activemq/browse/AMQ-2499

The exception is logged at WARN level with password in plain text. 

","29/Jun/11 22:22;tabish;Fixed by AMQ-2499

The IntrospectionSupport class maps all properties named ""password"" to 'XXXX'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue stalls after Job Scheduler component shuts down.,AMQ-3103,12493964,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,swapnonil,swapnonil,23/Dec/10 10:43,02/Jun/11 14:07,30/Jan/20 16:55,02/Jun/11 14:07,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"Observation
----
Active MQ stops accepting all incoming messages destined for a particular queue, after the scheduler component processing scheduled messages on that queue encounters an Null Pointer Exception.

Environment
----
We are using the Spring JMSTemplate component to post messages onto a queue. We also place a delay of 30 seconds on each message before posting
{noformat}
message.setLongProperty(ScheduledMessage.AMQ_SCHEDULED_DELAY, Integer.parseInt(""30"") * 1000);
{noformat}

We use the Spring Default Message Listener Container to receive messages.

Normally the broker runs fine and we have seen messages appear under the ""Scheduled"" tab on the Active MQ Console, after which they processed normally and we can tally using the ""Messages Enqueued"" and  the ""Messages Dequeued"" numbers. But occasionally the Job Scheduler fails with the following exception.

{code:xml}
2010-12-10 16:31:38,522 | ERROR | JMS Failed to schedule job | org.apache.activemq.broker.scheduler.JobSchedulerImpl | JobScheduler:JMS
java.lang.NullPointerException
        at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)
        at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:330)
        at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.remove(JobSchedulerImpl.java:347)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl$4.execute(JobSchedulerImpl.java:125)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.remove(JobSchedulerImpl.java:123)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.mainLoop(JobSchedulerImpl.java:515)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.run(JobSchedulerImpl.java:429)
        at java.lang.Thread.run(Thread.java:619)
2010-12-10 16:31:39,561 | INFO  | JobSchedulerStore:activemq-data/primary/scheduler stopped | org.apache.activemq.broker.scheduler.JobSchedulerStore | JobScheduler:JMS
{code}

Why does the Job Scheduler fail? One possible reason we have found is that the clock time settings on the VMs producing the messages and the broker as well as the consumers are all different. So the Job Scheduler may be shutting itself down arbitrarily due to this difference in clock. We are in the process of syncing all clocks but we are not sure whether this will solve the problem.

Bug
----
But the Bug really is, even if the Job Scheduler encounters an Null Pointer, why should it shutdown? Even more problematic is the fact that the queue itself stalls and does not accept anymore messages after the Job Scheduler shuts down.
The only way to recover is to completely delete the data directory.

I am attaching the activemq log and activemq configuration file.


","Redhat Enterprise Linux 5.X, 
JDK 1.5 32-bit
JDK 1.6 64-bit
",matt_good@yahoo.com,moczarski,swapnonil,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Dec/10 05:44;swapnonil;activemq-1.log;https://issues.apache.org/jira/secure/attachment/12466926/activemq-1.log","23/Dec/10 10:45;swapnonil;activemq.log;https://issues.apache.org/jira/secure/attachment/12466875/activemq.log","23/Dec/10 10:45;swapnonil;activemq.xml;https://issues.apache.org/jira/secure/attachment/12466876/activemq.xml",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2011-01-31 16:57:52.583,,,false,,,,,,,,,,,,,,,,,46496,,,Thu Jun 02 14:07:24 UTC 2011,,,,,,,,"0|i0ak4v:",59535,,,,,,,,,,,,,,,,,,,"23/Dec/10 10:45;swapnonil;Active MQ Log and Config files from our production servers.","24/Dec/10 05:42;swapnonil;Hi Everybody,

Another observation. This one is funny.

We are observing that the Job Scheduler component *shuts down everyday precisely at 01:48 hours GMT.*
As mentioned earlier, the way we recover from these failures is by
* Stopping the broker using $> ./activemq stop
* Deleting the entire data directory
* Restarting the broker using $> ./activemq start

Are we missing doing something for the recovery?

I am re-attaching another log file named activemq-1.log. This one is from our staging servers where you would observe that the Job Scheduler shuts itself precisely at 01:48 hours.
","15/Jan/11 10:08;swapnonil;The broker shutdown yesterday *at the same time i.e 01:49 hours GMT on the 14th of January 2011*. The broker ran ok for about 20 days.","15/Jan/11 10:22;swapnonil;Raising this to critical as this bug is causing *loss of messages*. The only way to recover from this error is to delete the data directory completely.","31/Jan/11 16:57;laslos;Hello,
we got the same bug in our setup. The differenz is that there is no observable reason why the scheduler throws the exception and shut down.

Is somebody working on this issue?

Thanks
Laslo","02/Feb/11 21:50;moczarski;We got similar problems. The scheduler stops from time to time due to an exception. Maybe, the cause is an unsynchronized method in the scheduler which results in a broken store structure. I described the issue in AMQ-3140. Testcase and patch is available :-) Would be interesting to see if the patch fix this issue.","09/Mar/11 23:23;tabish;There have been several fixes to the scheduler in trunk, have you tested against a 5.5.0 SNAPSHOT to see if this has been resolved?","10/Mar/11 15:50;swapnonil;Hi Timothy

I will test against 5.5.0 Snapshot and post my observations.","19/May/11 14:41;swapnonil;Hi,

I have not had this issue after upgrading to the Active MQ 5.5.0 Snapshot. Will upgrade all our production servers to Active Mq 5.5.0 in that case.","02/Jun/11 14:07;tabish;User reports problems went away by upgrading to a 5.5.0 build.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultJDBCAdapter returns incorrect value that prevents ActiveMQ from starting.,AMQ-2696,12483433,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,andyg,andyg,14/Apr/10 12:29,17/May/11 21:29,30/Jan/20 16:55,15/Apr/10 13:56,5.3.1,,,,,,,5.4.0,,,Message Store,,,,0,"org.apache.activemq.store.jdbcJDBCPersistenceAdapter.getLastMessageBrokerSequenceId() calls:

org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter:

The call to doGetLastMessageStoreSequenceId will return the max acks table id if the max msgs id is less.

The result is used to seed the sequenceGenerator:

long seq =  getAdapter().doGetLastMessageStoreSequenceId(c);
sequenceGenerator.setLastSequenceId(seq);

However the next call to set the brokerSeq variable will fail if the seq variable has been seeded with the max acks id, as 'doGetMessageById' expects a valid msgs id.

long brokerSeq = 0;
            if (seq != 0) {
            	Message last = (Message)wireFormat.unmarshal(new ByteSequence(getAdapter().doGetMessageById(c, seq)));
            	brokerSeq = last.getMessageId().getBrokerSequenceId();
            }
            return brokerSeq;

If 'seq' is not a valid msgs id (I presume because the message has expired and/or been removed) then this causes a NullPointerException in ByteSequence, which is not caught, and this leads to a complete failure to start ActiveMQ.

The solution is not simple if the tables are in production, and is compounded even further by durable subscribers that cannot simply be deleted from the acks table.",Vista 64bit,andyg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-15 08:42:40.262,,,false,,,,,,,,,,,,,,,,,74840,,,Mon Apr 19 14:55:18 UTC 2010,,,,,,,,"0|i0rpov:",159806,,,,,,,,,,,,,,,,,,,"15/Apr/10 06:33;andyg;Also in trunk","15/Apr/10 08:42;dejanb;Hi Andy,

just wondering if you can create a test case that can reproduce the issue? Or this is something you encountered in production?

Regards,
Dejan","15/Apr/10 12:18;andyg;Hi Dejan,

It's going to be difficult to create a test case, but is easy to reproduce if you have any JDBC adapter configured.

<persistenceAdapter>
<jdbcPersistenceAdapter dataSource=""#postgresql-activemq-ds"">
<adapter>
<postgresql-jdbc-adapter/>
</adapter>
</jdbcPersistenceAdapter>
</persistenceAdapter>

Just change the DataSource database to an empty test database and let ActiveMQ create new empty tables.

Stop ActiveMQ.

Manually add one dummy row to the empty 'activemq_acks' table:

INSERT INTO activemq_acks(container, sub_dest, client_id, sub_name, selector, last_acked_id) VALUES ('topic://a', 'topic://a', 'a', 'a', 'a', 555);

Start ActiveMQ.

It will try to load message id 555 - which does not exist, and will drop a NullPointerException.

The code in doGetLastMessageStoreSequenceId uses Math.max(seq1, seq2) to determine the next sequence id, so this is then definitely not safe to use in getLastMessageBrokerSequenceId() to load a message by id.

I suppose a test case using something like Derby could be created - without looking, is Derby on the default test classpath?

Andy. ","15/Apr/10 12:46;dejanb;Hi Andy,

no worries, I created a test case and will commit a fix soon.

Cheers","15/Apr/10 13:28;andyg;Great stuff, many thanks!","15/Apr/10 13:56;dejanb;This should be fixed on now with svn revision 934408.

JDBC store postpones deleting messages with min last seq id to the next iteration cycle. Also getting last broker sequence id procedure is also made resilient on these cases as they can still happen due to expired messages.","19/Apr/10 14:55;andyg;
   [[ Old comment, sent by email on Thu, 15 Apr 2010 11:33:28 +0200 ]]

Hi Dejan,

It's going to be difficult to create a test case, but is easy to 
reproduce if you have any JDBC adapter configured.

<persistenceAdapter>
<jdbcPersistenceAdapter dataSource=""#postgresql-activemq-ds"">
<adapter>
<postgresql-jdbc-adapter/>
</adapter>
</jdbcPersistenceAdapter>
</persistenceAdapter>

Just change the DataSource database to an empty test database and let 
ActiveMQ create new empty tables.

Stop ActiveMQ.

Manually add one dummy row to the empty 'activemq_acks' table:

INSERT INTO activemq_acks(container, sub_dest, client_id, sub_name, 
selector, last_acked_id) VALUES ('topic://a', 'topic://a', 'a', 'a', 
'a', 555);

Start ActiveMQ.

It will try to load message id 555 - which does not exist, and will drop 
a NullPointerException.

The code in doGetLastMessageStoreSequenceId uses Math.max(seq1, seq2) to 
determine the next sequence id, so this is then definitely not safe to 
use in getLastMessageBrokerSequenceId() to load a message by id.

I suppose a test case using something like Derby could be created - 
without looking, is Derby on the default test classpath?

Andy.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Message getting stuck on queue, leading to KahaDB log files not being deleted and disk running out of space",AMQ-2955,12483849,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,pblackburn,pblackburn,01/Oct/10 16:46,19/Apr/11 12:49,30/Jan/20 16:55,19/Apr/11 12:49,5.4.1,,,,,,,5.5.0,,,Message Store,,,,3,"Using the following test client, we see a single message getting stuck on the queue. This then prevents the KahaDB files from being cleaned up. Once this message gets stuck, we need to restart the broker before it can be consumed. This is a total show stopper for us, as when this occurs in our system the large number of messages that we produce and consume each second causes the disk to run out of space within the space of an hour. We also see the same behaviour using synchronous sending and without failover.

This doesn't happen every time with the test client - the most reliable way I have found to reproduce it is to start the broker and wait for the first MessageDatabase checkpoint to finish before starting the test client. 

{code:title=Test Client}
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.util.Random;

import javax.jms.Connection;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;
import javax.jms.ConnectionFactory;

import org.apache.activemq.ActiveMQConnectionFactory;

public class Test {
        public static final void main(String[] args) throws Exception {
                ConnectionFactory cf = new ActiveMQConnectionFactory(""failover:(tcp://localhost:61616)?jms.useAsyncSend=true&trackMessages=true"");
                final Connection producerConn = cf.createConnection();
                final Connection consumerConn = cf.createConnection();

                final BufferedWriter producerLog = new BufferedWriter(new FileWriter(""produced.log""));
                final BufferedWriter consumerLog = new BufferedWriter(new FileWriter(""consumed.log""));

                new Thread(new Runnable() {
                        public void run() {
                                try {
                                        producerConn.start();
                                        Session session = producerConn.createSession(false, Session.CLIENT_ACKNOWLEDGE);
                                        Queue queue = session.createQueue(""TEST_QUEUE"");
                                        MessageProducer producer = session.createProducer(queue);
                                        Random random = new Random();
                                        byte[] messageBytes = new byte[1024];

                                        for (int i = 0; i < 100000; i++) {
                                        //while (true) {
                                                random.nextBytes(messageBytes);
                                                Message message = session.createObjectMessage(messageBytes);
                                                producer.send(message);
                                                producerLog.write(message.getJMSMessageID());
                                                producerLog.newLine();
                                                producerLog.flush();
                                        }
                                        System.out.println(""Produced 100000 messages..."");
                                        producerLog.close();
                                }
                                catch (Exception e) {
                                        e.printStackTrace();
                                }
                        }
                }).start();

                System.out.println(""Started producer..."");

                new Thread(new Runnable() {
                        public void run() {
                                try {
                                        consumerConn.start();
                                        Session session = consumerConn.createSession(false, Session.CLIENT_ACKNOWLEDGE);
                                        Queue queue = session.createQueue(""TEST_QUEUE"");
                                        MessageConsumer consumer = session.createConsumer(queue);
                                        consumer.setMessageListener(new MessageListener() {
                                                public void onMessage(Message message) {
                                                        try {
                                                                message.acknowledge();
                                                                consumerLog.write(message.getJMSMessageID());
                                                                consumerLog.newLine();
                                                                consumerLog.flush();
                                                        }
                                                        catch (Exception e) {
                                                                e.printStackTrace();
                                                        }
                                                }
                                        });
                                }
                                catch (Exception e) {
                                        e.printStackTrace();
                                }
                        }
                }).start();

                System.out.println(""Started consumer..."");
        }
}
{code}

After the 100,000 messages have been produced, we can see the following difference in the log files:

{noformat}
[pblackburn@xxxx test]$ diff produced.log consumed.log
10394d10393
< ID:xxxx-35451-1285948546531-0:0:1:1:10394
[pblackburn@xxxx test]$
{noformat}

Looking in the activemq log file, at around this point we see:

{noformat}
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 349, enqueueSize: 10390
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 350, enqueueSize: 10391
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 351, enqueueSize: 10392
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 352, enqueueSize: 10393
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 69% of available memory, to: 70% of available memory
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 70% of available memory, to: 69% of available memory
2010-10-01 15:55:51 AbstractStoreCursor [DEBUG] TEST_QUEUE disabling cache on size:0, lastCachedIdSeq: 10398 current node seqId: 10399
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 69% of available memory, to: 70% of available memory
2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 2, Inflight: 353, pagedInMessages.size 353, enqueueSize: 10395
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 70% of available memory, to: 69% of available memory
2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 69% of available memory, to: 70% of available memory
{noformat}

At the end of the log file, where we have a single message stuck on the queue, we see:

{noformat}
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000
{noformat}

We can see the checkpoint failing to clean up the log files:

{noformat}
2010-10-01 15:56:36 MessageDatabase [DEBUG] Checkpoint started.
2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 2 as contained ack(s) refer to referenced file: [1, 2]
2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 3 as contained ack(s) refer to referenced file: [2, 3]
2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 4 as contained ack(s) refer to referenced file: [3, 4]
2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 5 as contained ack(s) refer to referenced file: [4, 5]
2010-10-01 15:56:36 MessageDatabase [DEBUG] Checkpoint done.
{noformat}

At this point our consumer had consumed all of the messages except the single stuck message.

We are using a clean out of the box set up - we have made no changes to the default activemq.xml file,

",Red Hat Enterprise Linux 5,fgynnild,janstey,pblackburn,straun,tranchida,vadimos,watcher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/10 12:50;pblackburn;TrackedMessageDequeuer.java;https://issues.apache.org/jira/secure/attachment/12461810/TrackedMessageDequeuer.java","12/Oct/10 12:50;pblackburn;TrackedMessageEnqueuer.java;https://issues.apache.org/jira/secure/attachment/12461809/TrackedMessageEnqueuer.java","13/Oct/10 12:58;pblackburn;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461837/activemq.xml",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2010-10-12 10:41:17.854,,,false,,,,,,,,,,,,,,,,,14832,,,Tue Apr 19 12:49:08 UTC 2011,,,,,,,,"0|i0akcv:",59571,,,,,,,,,,,,,,,,,,,"11/Oct/10 17:07;pblackburn;With a different test harness, we can get this failure to occur at the same point every time (for 1K message size always happens at  the 286th message sent, for 10K message size  at the 45th message sent nd for 100K message size at the 5th message sent).

Further investigation shows that when this occurs, the following conditions hold:

In class {{Queue}}, method {{doPageIn}}, the following loop body does not get executed as {{messages.hasNext()}} is returning false:

{code}
while (messages.hasNext() && count < toPageIn) {
    MessageReference node = messages.next();
    messages.remove();
// snipped for brevity
{code}

At this point, {{count=0}}, {{toPageIn=1}} and {{messages.size()=1}}.

Following the code through to the {{BTreeNode}} class, we find that the leaf node contains a single key with value 44.  When the {{BTreeNode.BTreeIterator}} class is instantiated, it is being passed in a value of 535 for the value of the default cursor position as the {{batchResetNeeded}} flag is false. This causes the loop body in the {{findNextPage}} method to exit before it sets the {{nextEntry}} field, leaving it null.

If we stick a quick hack into the {{doPageIn}} method in class {{Queue}} then the problem seems to go away, but we still don't know what the underlying cause was and we are wary of changing code that we don't fully understand:

{code}
if (messages.size() > 0 && !messages.hasNext()) {
    store.resetBatching();
}

while (messages.hasNext() && count < toPageIn) {
    MessageReference node = messages.next();
    messages.remove();
// snipped for brevity
{code}



","12/Oct/10 10:41;gtully;My suspicion is the operation of the setBatch method, disabling the cache will help pinpoint (policy entry useCache=false).

One thing that looks odd is in org.apache.activemq.store.kahadb.KahaDBStore.KahaDBMessageStore#resetBatching,
that does not obtain the indexLock, it should be comparable to org.apache.activemq.store.kahadb.KahaDBStore.KahaDBMessageStore#setBatch in this regard. It looks like this could be related to your problem, if an batch rest was missed from contention.

btw: What is the difference between your test case above and the other test harness?","12/Oct/10 12:50;pblackburn;Attached test harness. 

Compile with following:

{noformat}
javac -cp .activemq-core-5.4.1.jar:geronimo-j2ee-management_1.1_spec-1.0.1.jar:log4j-1.2.15.jar:commons-logging.jar:jms.jar *.java
{noformat}

When producing the error, we restart the activemq server and wait until we see the MessageDatabase ""Checkpoint done"" message in the log, then kick off the enquer as follows:

{noformat}
java -cp .:jms.jar:activemq-core-5.4.1.jar:geronimo-j2ee-management_1.1_spec-1.0.1.jar:log4j-1.2.15.jar:commons-logging.jar jms.TrackedMessageEnqueuer 'tcp://localhost:61616' 1 10 0
{noformat}

and then immediately kick off the dequeuer as follows:

{noformat}
java -cp .:jms.jar:lib/activemq-core-5.4.1.jar:geronimo-j2ee-management_1.1_spec-1.0.1.jar:log4j-1.2.15.jar:commons-logging.jar jms.TrackedMessageDequeuer 'tcp://localhost:61616'
{noformat}

We don't always get the error, but when it occurs it is always on the 45th message sent, using the 10K message size as shown.","12/Oct/10 15:18;pblackburn;Thanks for that Gary, I added some additional debug - the method {{KahaDBStore.KahaDMMessageStore#resetBatching}} is called once as the broker starts up and is not called again during my test run (I removed my hack from the {{Queue}} class).

I then tried the following three variations of this method:
# Added call to {{indexLock.readLock().lock()}}
# Added call to {{lockAsyncJobQueue}} and {{indexLock.readLock().lock()}}
# Added call to {{indexLock.writeLock().lock()}}

The stuck message is still observed with each variation.

I'll keep digging.","13/Oct/10 09:41;pblackburn;As suggested, I tried adding {{useCache=""false""}} to the queues' {{policyEntry}} element in {{activemq.xml}}. After doing this I have been unable to reproduce the issue.","13/Oct/10 12:07;gtully;that is good, in that it points to org.apache.activemq.store.kahadb.KahaDBStore.KahaDBMessageStore#setBatch and the cursor and store being out of sync. The intention is that when the cache is full and eventually exhausted, reading from the store can commence from the point in the store that corresponds to the last entry in the cache. 
can you attach your activemq.xml?","13/Oct/10 12:58;pblackburn;Attached {{activemq.xml}} file used.","19/Apr/11 12:49;dejanb;I cannot reproduce this problem in 5.5.0 version (while it is easily reproduced in 5.4.1 and 5.4.2). There was some work in this area for 5.5.0 release, so it seems that this has been fixed as well.

Can you please retest and reopen the issue if you still experience problems.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in ActiveMQ Journal Checkpoint worker thread cleanup leads to multiple running instances,AMQ-3161,12496740,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,ccondit,ccondit,25/Jan/11 22:55,26/Jan/11 13:32,30/Jan/20 16:55,26/Jan/11 13:32,5.4.2,,,,,,,5.5.0,,,Message Store,,,,0,"If the ActiveMQ Journal Checkpoint worker thread dies for any reason, any updates to KahaDB trigger the thread to be restarted. Unfortunately, there is a race condition between the Thread.isAlive() check and the restart of the thread, potentially leading to multiple instances of the thread being spawned.  We have observed in a busy environment as many as 8-10 instances of this thread, all waking up every 5 seconds to perform database checkpoints, bringing throughput on the broker to a halt.

The attached patch adds a lock around access to creation/destruction of this thread and prevents a second instance from being launched inadvertently.",CentOS 5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3160,,,,,,"25/Jan/11 22:56;ccondit;checkpoint-thread.patch;https://issues.apache.org/jira/secure/attachment/12469352/checkpoint-thread.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-26 13:32:41.567,,,false,,,,,,,,,,,,,,,,,14719,,,Wed Jan 26 13:32:41 UTC 2011,,,,Patch Available,,,,"0|i0ajy7:",59505,,,,,,,,,,,,,,,,,,,"25/Jan/11 22:56;ccondit;This patch to MessageDatabase.java prevents accidental launching of multiple Journal checkpoint worker threads.","25/Jan/11 22:57;ccondit;AMQ-3160 is the root cause of the thread aborting, leading to the case where this fix is necessary.","26/Jan/11 13:32;gtully;patch applied with thanks in r1063710

URL: http://svn.apache.org/viewvc?rev=1063710&view=rev

one minor mod, left unsynced check in store, such that locking overhead occurs only if thread needs a restart.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
a bug when send time out,AMQ-2867,12483438,12484224,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,dacy.zhouy,dacy.zhouy,12/Aug/10 03:14,27/Nov/10 04:01,30/Jan/20 16:55,13/Aug/10 13:57,5.3.0,,,,,,,5.4.1,,,Connector,,,,0,"  
There is a bug at ActiveMQConnection.java. The response is null when time out,but the code not handled 

	private Response doSyncSendPacket(Command command, int timeout)
			throws JMSException {
		try {
		    Response response = (Response)this.transport.request(command, timeout);
		    if (response != null && response.isException()) {
		        ExceptionResponse er = (ExceptionResponse)response;
		        if (er.getException() instanceof JMSException) {
		            throw (JMSException)er.getException();
		        } else {
		            throw JMSExceptionSupport.create(er.getException());
		        }
		    }
		    return response;
		} catch (IOException e) {
		    throw JMSExceptionSupport.create(e);
		}
	}

",linux/ java,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-13 13:57:26.437,,,false,,,,,,,,,,,,,,,,,74771,,,Fri Aug 13 13:57:26 UTC 2010,,,,,,,,"0|i0rpi7:",159776,,,,,,,,,,,,,,,,,,,"13/Aug/10 13:57;gtully;resolved in r985201
also related to https://issues.apache.org/activemq/browse/AMQ-2507",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ broker processing slows with consumption from large store,AMQ-3028,12483903,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,artnaseef,artnaseef,10/Nov/10 20:13,25/Nov/10 09:03,30/Jan/20 16:55,24/Nov/10 11:56,5.4.1,,,,,,,5.4.2,,,Broker,,,,2,"In scalability tests, this problem occured.  I have tested a workaround that appears to function.  A fix will gladly be submitted - would like some guidance, though, on the most appropriate solution.

Here's the summary.  Many more details are available upon request.

Root cause:

   - Believed to be simultaneous access to LRUCache objects which are not thread-safe (PageFile's pageCache)

Workaround:

   - Synchronize the LRUCache on all access methods (get, put, remove)

The symptoms are as follows:

  1. Message rates run fairly-constant until a point in time when they degrade rather quickly
  2. After a while (about 15 minutes), the message rates drop to the floor - with large numbers of seconds with 0 records passing
  3. Using VisualVM or JConsole, note that memory use grows continuosuly
  4. When message rates drop to the floor, the VM is spending the vast majority of its time performing garbage collection
  5. Heap dumps show that LRUCache objects (the pageCache members of PageFile's) are far exceeding their configured limits.
      The default limit was used, 10000.  A size of over 170,000 entries was reached.
  6. No producer flow control occurred (did not see the flow control log message)

Test scenario used to reproduce:

   - Fast producers (limited to <= 1000 msgs/sec)
      -- using transactions
      -- 10 msg per transaction
      -- message content size 177 bytes

   - Slow consumers (limited to <= 10 msg/sec)
      -- auto-acknowledge mode; not transacted

   - 10 Queues
      -- 1 producer per queue
      -- 1 consumer per queue

   - Producers, Consumers, and Broker all running on different systems, and on the same system (different test runs).

Note that disk space was not an issue - there was always plenty of disk space available.

One other interesting note - once a large database of records was stored in KahaDB, only running consumers, this problem still occurred.

This issue sounds like it may be related to 1764, and 2721.  The root cause sounds the same as 2290 - unsynchronized access to LRUCache.

The most straight-forward solution is to modify all LRUCache objects (org.apache.kahadb.util.LRUCache, org.apache.activemq.util.LRUCache, ...) to be concurrent.  Another is to create concurrent versions (perhaps ConcurrentLRUCache) and make use of those at least in PageFile.pageCache.
","CentOS 5.5, Sun JDK 1.6.0_21-b06 64 bit, ActiveMQ 5.4.1, AMD Athlon(tm) II X2 B22, local disk",artnaseef,asussman,bsnyder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/10 20:27;artnaseef;LRUCache.patch;https://issues.apache.org/jira/secure/attachment/12461882/LRUCache.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-11-24 11:56:27.43,,,false,,,,,,,,,,,,,,,,,14748,,,Thu Nov 25 09:03:54 UTC 2010,,,,,,,,"0|i0b9w7:",63715,,,,,,,,,,,,,,,,,,,"10/Nov/10 20:27;artnaseef;Patch which synchronizes org.apache.kahadb.util.LRUCache and org.apache.activemq.util.LRUCache on get(), put(), and remove() calls.
","22/Nov/10 18:47;artnaseef;Is there something I can do to further assist with this issue?

Testing with the attached patch was successful - all of the problems were aleviated.

I have considered writing a JUnit to test it, but that is not trivial because (a) the time needed to learn JUnit, (b) the impact of configuration on reproducing the problem in a timely manner (increasing JVM memory may delay detection of the issue), and (c) detecting the problem requires internal access to the LRUCache or some other method with which I am unfamiliar.
","24/Nov/10 11:56;dejanb;Fixed with svn revision 1038566

I didn't make LRU cache synced in general, just synced the usage of pageCache. Let us know if it helps with your scenario.","24/Nov/10 18:00;artnaseef;I will test with the update and post the results when complete.  With any luck, it'll be done today.","24/Nov/10 18:23;asussman;
Are you saying their solution isn't good enough?


","24/Nov/10 18:35;artnaseef;Oh hey Adam - different message thread.

I was just indicating that I need to run my tests to feel confident it's resolved.
","24/Nov/10 19:40;artnaseef;My tests just finished and ran without a problem.  In addition to consistent performance throughout the test, a heapdump with VisualVM shows the LRUCache objects all stayed within their limits.

Thank you!","25/Nov/10 09:03;dejanb;Thanks for confirming!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"HttpTunnelServlet leaks BlockingQueueTransport objects, causing eventual OOM on heap space",AMQ-3021,12483840,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,stirlingc,stirlingc,05/Nov/10 23:03,08/Nov/10 18:09,30/Jan/20 16:55,08/Nov/10 18:09,5.4.1,,,,,,,5.4.2,,,Broker,Transport,,,0,"Symptom
========
We have a production system involving a network of 8 Brokers connected over HTTP.  The Brokers discover each other using SimpleDiscoveryAgent.  Our network experienced a period of instability during which time numerous Broker-to-Broker bridges were created and failed repeatedly.  Over the course of about 7 hours, two of the Brokers crashed with OOM heap space errors.

We analyzed the heap dump and discovered several thousand instances of org.apache.activemq.transport.http.BlockingQueueTransport.  These transports were associated with bridges that had failed, however, they were not being garbage collected because HttpTunnelServlet was maintaining references to them.

This issue was easily replicated in a test environment were we repeatedly broke the connection between a pair of Brokers connected over HTTP.  In each case, both Brokers maintained *indefinitely* a number of instances of BlockingQueueTransport equal to the number of times the network was interrupted.

Cause
=====
When a bridge is first created over HTTP, the client broker's HttpClientTransport sends a HEAD command to the server broker, which is processed by an instance of HttpTunnelServlet.  In response,e HttpTunnelServlet creates an instance of BlockingQueueTransport to represent the connection to the client broker.  This instance of BlockingQueueTransport is stored in a private hash map managed by HttpTunnelServlet and indexed by the client's unique ID:

public class HttpTunnelServlet extends HttpServlet {
...
    private final Map<String, BlockingQueueTransport> clients = new HashMap<String, BlockingQueueTransport>();
...

    protected BlockingQueueTransport createTransportChannel(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String clientID = request.getHeader(""clientID"");
...
            answer = createTransportChannel();
            clients.put(clientID, answer);
...

Every time a client broker reestablishes a bridge, it generates a new clientID.  As a result, the clients hash map accumulates instances of BlockingQueueTransport, one for each bridge created.  Nowhere in the implementation of HttpTunnelServlet is there any code that removes the instance when a client broker is no longer connected.  In an environment with multiple brokers and an unreliable network, the client hash  map can accumulate thousands of instances of BlockingQueueTransport.

Solution
=======
HttpTunnelServlet needs to remove an instance of BlockingQueueTransport from the clients hash map whenever that instance is no longer being used.  The addition of InactivityMonitor as a default interceptor for the BlockingQueueTransport (see AMQ-2764) is a partial solution in that it triggers the closure of unused BlockingQueueTransport instances; however, HttpTunnelServlet does not detect these closures.

The solution is included a patch and involves the following changes to HttpTunnelServlet (not all changes are directly related to the OOM):
1) The addition of a ServiceListener to the BlockingQueueTransport, which is triggered when the transport is closed and causes the removal of the transport from the clients hash map
2) Refactoring of the access to the clients hash map to simplify thread safety (in particularly, removal of explicit synchronization in lieue of ConcurrentHashMap)
3) An additional check on the BlockingQueueTransport to ensure that it was not prematurely closed (the previous code ignored this possibility)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Nov/10 23:19;stirlingc;BlockingQueueTransport.java;https://issues.apache.org/jira/secure/attachment/12461850/BlockingQueueTransport.java","05/Nov/10 23:19;stirlingc;BlockingQueueTransportLeakTest.java;https://issues.apache.org/jira/secure/attachment/12461851/BlockingQueueTransportLeakTest.java","05/Nov/10 23:18;stirlingc;patch.txt;https://issues.apache.org/jira/secure/attachment/12461849/patch.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2010-11-08 10:49:32.77,,,false,,,,,,,,,,,,,,,,,14746,,,Mon Nov 08 18:09:08 UTC 2010,,,,Patch Available,,,,"0|i0b9xb:",63720,,,,,,,,,,,,,,,,,,,"05/Nov/10 23:18;stirlingc;Patch for HttpTunnelServlet.java","05/Nov/10 23:19;stirlingc;A unit test (requires slightly modified BlockingQueueTransport) that demonstrates the leak.  The unit test fails with unpatched HttpTunnelServlet.","08/Nov/10 10:49;dejanb;Committed with svn revision 1032539. Thanks for the patch!","08/Nov/10 16:52;stirlingc;Dejan, the addition of the CountdownLatch to BlockingQueueTransport should not be checked in --- it was only there to demonstrate the issue through the unit test.  In its present state, a NullPointerException is likely to occur at runtime because the finalize() method will be triggered, but finalizeLatch will not have been initialized.

If you want to include the unit test, the existing code will need to be changed to use a different technique for determining the leaking BlockingQueueTransport.  Somehow you'll need access to the instance of HttpTunnelServlet, publically expose the clients hashmap, and then assert against the number of elements in the hashmap.

Unfortunately, the HttpTunnelServlet/BlockingQueueTransport class structure was not set up to support this kind of unit test, so unless you know a way to determine the number of instances of a class that are loaded in the heap, you'll have to add some testing specific code, which seems rather invasive.

======

To summarize, the patch that I submitted should be applied, and it should only affect HttpTunnelServlet.  BlockingQueueTransport should be left as-is and the unit test should not be checked in.","08/Nov/10 18:09;dejanb;Removed unnecessary stuff. Thanks. Would be good to have a test to protect this in the future though!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException while sending messages to composite destinations,AMQ-2836,12482715,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,hadrian,hadrian,19/Jul/10 14:37,19/Jul/10 15:00,30/Jan/20 16:55,19/Jul/10 15:00,5.3.1,,,,,,,5.4.0,,,,,,,0,"When the LoggingBrokerPlugin is used and sending messages to composite destinations there is a very high amount of ConcurrentModificationException on the broker.

The exception thrown on the server side is also propagated to the client side and appears there as well as the additional exception that is thrown on the client side.

This is the stack trace on the server side:
{code}
java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
        at java.util.HashMap$EntryIterator.next(HashMap.java:834)
        at java.util.HashMap$EntryIterator.next(HashMap.java:832)
        at java.util.HashMap.putAllForCreate(HashMap.java:435)
        at java.util.HashMap.<init>(HashMap.java:225)
        at org.apache.activemq.command.Message.copy(Message.java:120)
        at org.apache.activemq.command.ActiveMQMessage.copy(ActiveMQMessage.java:64)
        at org.apache.activemq.command.ActiveMQObjectMessage.copy(ActiveMQObjectMessage.java:81)
        at org.apache.activemq.command.ActiveMQObjectMessage.copy(ActiveMQObjectMessage.java:75)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:88)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.util.LoggingBrokerPlugin.send(LoggingBrokerPlugin.java:280)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:446)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Thread.java:619)
{code}","Linux version 2.6.18-92.1.13.el5
Java 1.6.0_18",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-19 15:00:40.258,,,false,,,,,,,,,,,,,,,,,74778,,,Mon Jul 19 15:00:40 UTC 2010,,,,,,,,"0|i0rpp3:",159807,,,,,,,,,,,,,,,,,,,"19/Jul/10 15:00;gtully;resolved in r965517 - logger needs to copy the message before delegating. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"consumer stop consuming message when using selector,what's the problem?",AMQ-1893,12482780,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,elvis_qy,elvis_qy,18/Aug/08 15:45,14/Jul/10 13:58,30/Jan/20 16:55,14/Jul/10 13:58,5.0.0,5.1.0,,,,,,5.4.0,,,,,,,0,"1. Start ActiveMQ 5.0 or 5.1 using the activemq.xml config file uploaded.
2. Run TestProducer
3. Open Browser : http://localhost:8165/admin，enter 'Queues' page,you can see now the 'Number of Pending Messages' of queue 'TEST' is 30000.
4. Run TestConsumer,
5. The Consumer will stop consuming messages, now you refresh the 'Queues' page, the 'Number of Pending Messages' is large than zero

That's The problem, but why? Is the problem in my code or in ActiveMQ?",Windows XP SP2/SP3,elvis_qy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/08 15:45;elvis_qy;ASF.LICENSE.NOT.GRANTED--Test.zip;https://issues.apache.org/jira/secure/attachment/12461196/ASF.LICENSE.NOT.GRANTED--Test.zip","18/Aug/08 15:53;elvis_qy;PendingMessage1.png;https://issues.apache.org/jira/secure/attachment/12461237/PendingMessage1.png","18/Aug/08 15:54;elvis_qy;PendingMessage2.png;https://issues.apache.org/jira/secure/attachment/12461215/PendingMessage2.png","18/Aug/08 15:53;elvis_qy;TestConsumer.png;https://issues.apache.org/jira/secure/attachment/12461184/TestConsumer.png","18/Aug/08 15:55;elvis_qy;TestProducer.png;https://issues.apache.org/jira/secure/attachment/12461056/TestProducer.png",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,2008-09-05 07:04:49.617,,,false,,,,,,,,,,,,,,,,,84595,,,Wed Jul 14 13:58:28 UTC 2010,,,,,,,,"0|i0rppb:",159808,Regression,,,,,,,,,,,,,,,,,,"18/Aug/08 15:52;elvis_qy;Run TestProducer Console","18/Aug/08 15:53;elvis_qy;Number of Pending Message after running TestProducer","18/Aug/08 15:53;elvis_qy;Run TestConsumer Console","18/Aug/08 15:54;elvis_qy;Number of Pending Messages after running TestConsumer","18/Aug/08 15:55;elvis_qy;Run TestProducer Console","18/Aug/08 15:56;elvis_qy;ActiveMQ 4.1.2 is OK","05/Sep/08 07:04;rajdavies;Resolved in 5.2","03/Oct/08 20:58;rjanney;Can you describe what was fixed?  

I am seeing a similar issue in 5.1, but I am not sure if it would be addressed by whatever change was made for 5.2","09/Dec/09 15:19;wangyin;I'm sure Rob Davies may make a mistake. 
5.2 does not fix this bug indeed.","14/Jul/10 13:58;gtully;Added the test to trunk: activemq-core/src/test/java/org/apache/activemq/bugs/AMQ1893Test.java
revision: 964051.

It works as expected, all 30000 messages are received. Can you validate a current 5.4-SNAPSHOT to be sure. Or review the test case or change is such that it shows a problem. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Apache ActiveMQ is prone to source code disclosure vulnerability.,AMQ-2700,12483248,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,veerendragg,veerendragg,20/Apr/10 11:25,22/Jun/10 08:06,30/Jan/20 16:55,21/Apr/10 10:19,5.3.1,,,,,,,5.3.2,5.4.0,,,,,,0,"An input validation error is present in Apache ActiveMQ. Adding '//' after the
port in an URL causes it to disclose the JSP page source.

This has been tested on various admin pages,
admin/index.jsp, admin/queues.jsp, admin/topics.jsp etc.

NOTE : Refer attached file for complete information/advisory.",Linux/Windows environment,veerendragg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Apr/10 11:28;veerendragg;SECPOD_ActiveMQ.txt;https://issues.apache.org/jira/secure/attachment/12461671/SECPOD_ActiveMQ.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-04-21 10:19:14.061,,,false,,,,,,,,,,,,,,,,,74839,,,Tue Jun 22 08:06:02 UTC 2010,,,,,,,,"0|i0rpo7:",159803,,,,,,,,,,,,,,,,,,,"20/Apr/10 11:28;veerendragg;Attached file is having complete information about the issue.","21/Apr/10 10:19;dejanb;I confirmed this issue exists in 5.3.1 version, however it seems to be solved in trunk (5.4-snapshot) due to upgrade of jetty to 7.x.

After a bit of investigation it turns out to be a problem with Jetty's ResourceHandler. To work around this problem in 5.3.1, follow these steps:

1. go to the {{${ACTIVEMQ_HOME}/webapps}} dir
2. make new dir called static - {{mkdir static}}
3. move index.html file there - {{mv index.html static/}}
4. change ResourceHandler to use {{static}} dir . To do that, edit {{${ACTIVEMQ_HOME}/conf/jetty.xml}} and change ResourceHandler definition to 

{code}<bean class=""org.mortbay.jetty.handler.ResourceHandler"">
  <property name=""welcomeFiles"">
    <list>
      <value>index.html</value>
    </list>
  </property>
  <property name=""resourceBase"" value=""${activemq.base}/webapps/static""/>
</bean>{code}","21/Apr/10 10:46;dejanb;This workaround will be available in the next fuse 5.3.1-fuse-01-00 release (http://fusesource.com/), if anyone is interested.","22/Apr/10 09:01;veerendragg;I am able to reproduce  this issue in 5.4-snapshot as well.","22/Apr/10 10:19;dejanb;Hi Veerendra,

I just retested. The steps are following:

1. Download latest snapshot from https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4-SNAPSHOT/apache-activemq-5.4-SNAPSHOT-bin.tar.gz

2. install and run

3. Try accessing http://localhost:8161//admin/queues.jsp

I'm getting 404 as expected. Can you try this latest snapshot, just to be sure we're looking at the same thing and send you log if you're seeing something else?","22/Apr/10 11:04;veerendragg;Hi Dejan,

yeah, the issue has been fixed now.

Issue exists, when I downloaded from the same location and tested yesterday.

Thank you... :)


regards,
Veerendra","28/May/10 12:15;gtully;does this resolve the following, looks like it does to me, same sort of issue about restricting access to the resource loader:

iDefense VCP Submission V-ay6t2oua0k
05/05/2010
Apache ActiveMQ Directory Traversal Vulnerability

Description: 
Remote exploitation of a directory traversal vulnerability in Apache Software Foundation's Apache ActiveMQ could allow an attacker to download files from a restricted directory, which can result in information disclosure.

Apache ActiveMQ is a messaging and enterprise integration patterns provider. The platform provides a Message Broker which handles communication between several different applications. Apache ActiveMQ supports many popular development languages including C/C++, Python, Java, and .NET. Apache ActiveMQ runs on a variety of platforms, including Windows, Linux and Solaris

For more information, see the vendor's site at the following link: http://activemq.apache.org

The vulnerability is due to a failure by the Message Broker to restrict directory traversals. As a result, sensitive locations outside the configured Message Broker restricted directory can be accessed by an attacker. No authentication is required to access the ActiveMQ Message Broker service. 

Analysis: 
Exploitation of this vulnerability could allow an attacker to gain control over the affected machine.

By specifying a URL location with multiple directory traversal sequences such as ""/\../\../\"", it is possible for an attacker to access sensitive files hosted on the Message Broker Server using the privileges associated with the Message Broker process. An attacker may be able to read important system files, which will result in information disclosure, and can potentially lead to full host compromise.

iDefense considers this vulnerability to be of MEDIUM severity because the vulnerability leads to information disclosure. 

Credit: 
AbdulAziz Hariri


","04/Jun/10 11:17;dejanb;I cannot reproduce this either on 5.2.0 or 5.3.x. If anyone succeed, please provide steps and version of the broker.","22/Jun/10 08:06;dejanb;Analyzed in a separate issue https://issues.apache.org/activemq/browse/AMQ-2788",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemory provoked by Advisory messages,AMQ-2533,12483242,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,pmouawad,pmouawad,14/Dec/09 18:40,02/Jun/10 17:04,30/Jan/20 16:55,22/Feb/10 07:07,5.2.0,5.3.0,,,,,,5.3.1,5.4.0,,Broker,,,,1,"Hello,
We are in an environment where we have 1 Broker and 6 clients listener to one Topic.
We enabled advisory messages through:
<policyEntry topic="">"" memoryLimit=""5mb"" producerFlowControl=""true""  advisoryWhenFull=""true"" advisoryForSlowConsumers=""true""
                      sendAdvisoryIfNoConsumers=""true"">

And sendFailIfNoSpace:
<systemUsage>
            <systemUsage sendFailIfNoSpace=""true"">
                <memoryUsage>
                    <memoryUsage limit=""50 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""1 gb"" name=""foo"" store=""#store""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""100 mb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>


We also have a monitoring process that listens to advisory messages related to the concerned TOPIC.

After some run, we end up with OutOfMemory.

OutOfMemory analysis shows:
- 3372 instances of org.apache.activemq.command.ActiveMQTopic occupying 23,7%
Names of Topic contain ActiveMQ.Advisory.FULL.Topic:
- ActiveMQ.Advisory.FULL.Topic.ActiveMQ.Advisory.FULL.Topic.ActiveMQ.Advisory.FULL.....ActiveMQ.Advisory.Producer.Topic.OFBTopic

1069 instances of org.apache.activemq.thread.DedicatedTaskRunner$1 holding 12% through the names of the thread that are soooooo long.

Debuging ActiveMQ, I noticed that AMQ didn't check when sending advisory messages that advisory concerns an advisory.
Example, suppose you set a listener for advisory message ActiveMQ.Advisory.FULL.Topic.OFBTopic and this listener becomes slow for a reason, then AMQ will send an advisory on this advisory provoking more and more traffic 
on the broker only for this advisory.

I attached a Stack Trace showing that an advisory will be sent for the advisory.

I will be checking to see if this issue also exists on 5.3.0.
Thanks in advance.
Philippe.
http://www.ubik-ingenierie.com",,benoitw,pmouawad,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/09 18:42;pmouawad;Image 11.png;https://issues.apache.org/jira/secure/attachment/12461575/Image+11.png","02/Jun/10 17:04;nbryant;SlowConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461722/SlowConsumerTest.java","14/Dec/09 18:47;pmouawad;ThreadDump.txt;https://issues.apache.org/jira/secure/attachment/12461339/ThreadDump.txt","08/Jan/10 10:56;pmouawad;TopicListener.java;https://issues.apache.org/jira/secure/attachment/12461584/TopicListener.java","08/Jan/10 10:56;pmouawad;TopicPublisher.java;https://issues.apache.org/jira/secure/attachment/12461583/TopicPublisher.java","08/Jan/10 10:56;pmouawad;activemq-OOM-ADVISORY.xml;https://issues.apache.org/jira/secure/attachment/12461582/activemq-OOM-ADVISORY.xml","08/Jan/10 11:01;pmouawad;activemq-Workaround-OOM-ADVISORY.xml;https://issues.apache.org/jira/secure/attachment/12461585/activemq-Workaround-OOM-ADVISORY.xml","14/Dec/09 18:44;pmouawad;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461338/activemq.xml",,,,8.0,,,,,,,,,,,,,,,,,,,,2010-02-22 07:07:55.132,,,false,,,,,,,,,,,,,,,,,74902,,,Wed Jun 02 17:04:13 UTC 2010,,,,,,,,"0|i0rpnz:",159802,,,,,,,,,,,,,,,,,,,"14/Dec/09 18:42;pmouawad;Debugging screenshot that shows a FULL advisory generating a SLOW consumer advisory","14/Dec/09 18:44;pmouawad;ActiveMQ configuration","14/Dec/09 18:47;pmouawad;Thread Dump when OOM occured.
See the number of running threads and their names.","08/Jan/10 10:56;pmouawad;Attached are the files that reproduce the OOM issue","08/Jan/10 10:59;pmouawad;Hello,
I attached 3 files that enable repdrocing the OOM due to Advisory messages.
I think that issue is due to the fact that advisory messages are generating FULL Advisory either due to error in MemoryUsage computation based on parent (as I understant in code).
Thus when many Full Advisory messages are sent, Advisory end up generating advisory for advisory cascading this and ending with OOM ","08/Jan/10 11:01;pmouawad;Workaround that proves that OOM is related to Advisory on Advisory","08/Jan/10 11:03;pmouawad;Hi again,
I attached a configuration workaround that solves OOM by disabling Advisory messages on Advisory messages.

Philippe
http://www.ubik-ingenierie.com","08/Jan/10 15:47;pmouawad;Issue present on AMQ 5.3.0 and 5.2.0","22/Feb/10 07:07;rajdavies;Fixed by SVN revision 912497on 5.3.1
and 912496 on trunk","02/Jun/10 14:44;nbryant;regression test","02/Jun/10 15:00;nbryant;revised regression test - try harder to avoid interfering with other test cases","02/Jun/10 17:04;nbryant;attaching revised regression test - this should catch a broader class of errors by failing if the expected number of messages was not received

(part of the failure mode of this issue was that messages were being dropped)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BlobMessages are not deleted after delivery,AMQ-2713,12483285,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,thodte,thodte,26/Apr/10 09:20,14/May/10 15:57,30/Jan/20 16:55,14/May/10 15:57,5.3.1,,,,,,,5.4.0,,,Message Store,,,,0,"When I send a blob message and the content is uploaded into the integrated fileserver (WebDAV) then the blobmessage(byte content) are not deleted after the  broker deliver the message.

There is a method in the defaultupload class for deleting manually but when I do this the I get from fileserver a 404 (not authenticated) error.

I eexpected that the message a the integrated fileserver will be deleted automatically after delivery through the broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-14 15:57:37.078,,,false,,,,,,,,,,,,,,,,,74833,,,Fri May 14 15:57:37 UTC 2010,,,,,,,,"0|i0rppz:",159811,,,,,,,,,,,,,,,,,,,"14/May/10 15:57;dejanb;Fixed with svn revision 944167. Documentation to follow.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Apache ActiveMQ is prone to XSS Vulnerability,AMQ-2714,12483420,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,arun,arun,26/Apr/10 21:09,27/Apr/10 17:24,30/Jan/20 16:55,27/Apr/10 12:44,5.3.0,5.3.1,,,,,,5.4.0,,,,,,,0,"Cross-Site Scripting Vulnerability exists in Apache ActiveMQ.
Example:  http://localhost:8161/admin/queueBrowse/example.A?view=rss&feedType=<script>alert(""ACTIVEMQ"")</script>

Tested on 5.3.1 and 5.3.0 versions.
",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Apr/10 12:45;dejanb;AMQ-2714.zip;https://issues.apache.org/jira/secure/attachment/12461683/AMQ-2714.zip","26/Apr/10 21:48;arun;AMQ_XSS.doc;https://issues.apache.org/jira/secure/attachment/12461682/AMQ_XSS.doc",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-04-27 12:44:45.138,,,false,,,,,,,,,,,,,,,,,74832,,,Tue Apr 27 17:24:58 UTC 2010,,,,,,,,"0|i0rpq7:",159812,,,,,,,,,,,,,,,,,,,"26/Apr/10 21:45;arun;Screen shot placed into the file","26/Apr/10 21:48;arun;updated with  the xss screen shot.
screen shot file attached.","27/Apr/10 12:44;dejanb;I confirmed the problem in 5.3.x versions. However, it doesn't affect current 5.4-SNAPSHOT as the problem is in Jetty's error handler that doesn't escape the message (which is fixed in Jetty 7). Anyhow, I took this opportunity to implement custom 404 and 500 pages for the web console (which is also a workaround for this problem).

To work around this issues on existing 5.3.x installations: 

- download AMQ-2614.zip attached to this issue
- go to ${ACTIVEMQ_HOME}/webapp/admin
- unzip the archive

This workaround will be available in the next fuse 5.3.1-fuse-01-00 release (http://fusesource.com/), if anyone is interested.","27/Apr/10 17:24;arun;Hi Dejan,

Thanks for the prompt reply and fixing this issue.
I tested it on 5.4-SNAPSHOT and 5.3.x versions with workaround applied and seems the issue has been fixed.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Producer Flow Control seems to be broken,AMQ-2680,12483425,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,scoopex,scoopex,30/Mar/10 08:48,23/Apr/10 15:20,30/Jan/20 16:55,23/Apr/10 15:20,5.3.1,,,,,,,5.4.0,,,Broker,Documentation,,,1,"How to reproduce:

- Download ActiveMQ 5.3.1
- Start broker with the attached configuration
   ---
   <systemUsage>
       <systemUsage>
           <memoryUsage>
               <memoryUsage limit=""10 mb""/>
           </memoryUsage>
           <storeUsage>
               <storeUsage limit=""10 mb"" name=""queue/RemoteQ""/>
           </storeUsage>
           <tempUsage>
               <tempUsage limit=""3 gb""/>
           </tempUsage>
       </systemUsage>
   </systemUsage>
   ---
- Start example producer/consumer
   cd examples
   ant producer -Durl=tcp://127.0.0.1:61616 -Dmax=100000 -Dsubject=queue/RemoteQ -Ddurable=true -DsleepTime=2
   sleep 600
   ant consumer -Durl=tcp://127.0.0.1:61616  -Dsubject=queue/RemoteQ -Dmax=100000 -DsleepTime=2

The problem: 
When the 10mb limit is reached, the producer is blocked forever.
The expected behavior is, that if a consumer cleans the queue, producers are able to post more messages.
Neither cleaning up the queue, restarting producers and restarting the broker helps :-(

It would be also a good idea to enhance the documentation about producer-flow-control:
(http://activemq.apache.org/producer-flow-control.html)
- expected behavior
- what is limited in detail by using system|store|tempUsage 

The entire configuration :
---
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
        <property name=""locations"">
            <value>file:${activemq.base}/conf/credentials.properties</value>
        </property>      
    </bean>

    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.data}/data"" >

        <destinationPolicy>
            <policyMap>
              <policyEntries>

                <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""10mb"">

                  <deadLetterStrategy>
                    <!--
                      Use the prefix 'DLQ.' for the destination name, and make
                      the DLQ a queue rather than a topic
                    -->
                    <individualDeadLetterStrategy
                      queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />
                  </deadLetterStrategy>

                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""10mb"">
                  <!-- Use VM cursor for better latency
                       For more information, see:
                       
                       http://activemq.apache.org/message-cursors.html
                       
                  <pendingQueuePolicy>
                    <vmQueueCursor/>
                  </pendingQueuePolicy>
                  -->
                  <deadLetterStrategy>
                    <!--
                      Use the prefix 'DLQ.' for the destination name, and make
                      the DLQ a queue rather than a topic
                    -->
                    <individualDeadLetterStrategy
                      queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />
                  </deadLetterStrategy>


                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy> 
 
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""10 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""10 mb"" name=""queue/RemoteQ""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""3 gb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
                  
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>

    </broker>

    <import resource=""jetty.xml""/>
    
</beans>
---
","SLES 11, IBM JDK 1.6",mdirkse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Apr/10 10:48;scoopex;activemq-broken-flow-control.xml;https://issues.apache.org/jira/secure/attachment/12461664/activemq-broken-flow-control.xml","30/Mar/10 08:49;scoopex;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461643/activemq.xml","08/Apr/10 10:32;scoopex;producer-flow-control-problem.zip;https://issues.apache.org/jira/secure/attachment/12461646/producer-flow-control-problem.zip",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2010-03-31 09:13:08.48,,,false,,,,,,,,,,,,,,,,,43791,,,Fri Apr 23 15:20:52 UTC 2010,,,,,,,,"0|i0rpon:",159805,,,,,,,,,,,,,,,,,,,"31/Mar/10 09:13;gtully;I have not looked at this in detail but my guess is that this is blocked on store usage and the store is not reclaimed when the queue is drained because of the default datafile size of the store. A data file can only be reclaimed when it is not referenced any more, which requires many small data files in your case. I think, you need to configure the persistence adapter to have a data file size less that 10mb for this to work as you expect.","31/Mar/10 09:47;scoopex;Additional information:

If i execute the described steps, ActiveMQ logs the following message:
--- 
 INFO | Usage Manager Store is Full. Producer (ID:XXXXXXXXXXX-43726-1270028281473-0:0:1:1) stopped to prevent flooding queue://queue/RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
---
This message appears many time, ""blocking for : XXs"" is increased by 30s steps....

After that, it is not possible to enqueue or dequeue any message!

This also happens with the following settings:
(datafile 32mb, storeUsage 40mb)
---
         <persistenceAdapter>
            <amqPersistenceAdapter directory=""/srv/activemq/work/data"" maxFileLength=""32mb"" 
             persistentIndex=""true"" indexBinSize=""32768"" indexPageSize=""32768"" />
         </persistenceAdapter>
......
......
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""10 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""40 mb"" name=""queue/RemoteQ""/>
                    <storeUsage limit=""40 mb"" name=""queue/RemoteQ""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""3 gb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
---
","01/Apr/10 09:32;gtully;The problem is the configured maxFileLength, it is too large for cleanup. The ampPeristenceAdapter will not delete the first or current journal data file during store cleanup, so in order for some space to be reclaimed on a cleanup there must be at least 3 data files in the journal. For a 40mb store limit 3 15MB files does the trick. This allows cleanup to have an effect. Your scenario works as expected with the following configuration:{code}
<persistenceAdapter>
<amqPersistenceAdapter directory=""${activemq.base}/data/amq"" maxFileLength=""15mb""
persistentIndex=""true"" indexBinSize=""32768"" indexPageSize=""32768"" />
</persistenceAdapter>{code}

Btw: for faster recovery of large stores and for more linear enqueue rates, the kahaDB store will give better results. Similar config is needed w.r.t to store data file size.","01/Apr/10 10:15;gtully;The key is understanding how the store is reclaimed, it depends on a data fixe being unreferenced. In essence this means there needs to be more than one data file in operation. For the amq store, more than 2 when a store limit is reached.","07/Apr/10 10:47;scoopex;Thanks for the configuration hints.
 
It seems now working as expected.
I strongly recommend to put some logic in the configuration handling to detect bda configurations like that - sysadmins do normally not know details about the internals of the activemq message store implementation.

Nevertheless it seems that there is still a bug - after some time my messagequeue stopped receiving messages:
(mention the configuration attached as activemq-broken-flow-control.xml)

- Shutdown of producer was not possible
- Shutdown of broker was not possible (kill -KILL was the only solution)
- After restart the blocked queue does still not have any pending messages, but the queue is still
  blocked  by producer flow control
  (created a threaddump with a SUN jvm, by executing kill -QUIT, see beyond)

Threadump;:
{code}
ACTIVEMQ_HOME: /srv/activemq/install/current
ACTIVEMQ_BASE: /srv/activemq/install/current
Loading message broker from: xbean:activemq.xml
 INFO | Using Persistence Adapter: AMQPersistenceAdapter(/srv/activemq/work/data)
 INFO | AMQStore starting using directory: /srv/activemq/work/data
 INFO | Kaha Store using data directory /srv/activemq/work/data/kr-store/state
 INFO | JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:51109/jmxrmi
 INFO | Active data files: [1, 2, 3]
 INFO | ActiveMQ 5.3.1 JMS Message Broker (localhost) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | Kaha Store using data directory /srv/activemq/work/data/kr-store/data
 INFO | Listening for connections at: tcp://esxschnapp3-x3850.argl.iv.FOOBAR.de:61616
 INFO | Connector openwire Started
 INFO | ActiveMQ JMS Message Broker (localhost, ID:esxschnapp3-x3850.argl.iv.FOOBAR.de-48924-1270635425111-0:0) started
 INFO | Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
 INFO | jetty-6.1.9
 INFO | ActiveMQ WebConsole initialized.
 INFO | Initializing Spring FrameworkServlet 'dispatcher'
 INFO | ActiveMQ Console at http://0.0.0.0:8161/admin
 INFO | Initializing Spring root WebApplicationContext
 INFO | Successfully connected to tcp://localhost:61616
 INFO | Camel Console at http://0.0.0.0:8161/camel
 INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo
 INFO | RESTful file access application at http://0.0.0.0:8161/fileserver
 INFO | Started SelectChannelConnector@0.0.0.0:8161
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-9828-1270572546517-0:17247:1:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-9828-1270572546517-0:17247:1:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 60s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 60s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 90s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 120s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 60s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 150s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 90s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 180s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 120s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 210s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 150s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 240s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 180s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 270s)
2010-04-07 12:21:55
Full thread dump Java HotSpot(TM) 64-Bit Server VM (14.2-b01 mixed mode):

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@717fed4"" daemon prio=10 tid=0x00007f71b0a1e000 nid=0x4164 waiting on condition [0x00007f71b4a3e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71c83a2210> (a java.util.concurrent.SynchronousQueue$TransferStack)
        at java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
        at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(Unknown Source)
        at java.util.concurrent.SynchronousQueue$TransferStack.transfer(Unknown Source)
        at java.util.concurrent.SynchronousQueue.poll(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@6cfcaac5"" daemon prio=10 tid=0x00007f71b0a1d000 nid=0x4163 waiting on condition [0x00007f71af7f6000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71c83a2210> (a java.util.concurrent.SynchronousQueue$TransferStack)
        at java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
        at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(Unknown Source)
        at java.util.concurrent.SynchronousQueue$TransferStack.transfer(Unknown Source)
        at java.util.concurrent.SynchronousQueue.poll(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""JMX server connection timeout 94"" daemon prio=10 tid=0x0000000040530000 nid=0x414e in Object.wait() [0x00007f71b4c40000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd665e8> (a [I)
        at com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(Unknown Source)
        - locked <0x00007f71efd665e8> (a [I)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Connection(4)-10.130.39.230"" daemon prio=10 tid=0x00000000409e8800 nid=0x414d in Object.wait() [0x00007f71af3d6000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efbd6710> (a com.sun.jmx.remote.internal.ArrayNotificationBuffer)
        at com.sun.jmx.remote.internal.ArrayNotificationBuffer.fetchNotifications(Unknown Source)
        - locked <0x00007f71efbd6710> (a com.sun.jmx.remote.internal.ArrayNotificationBuffer)
        at com.sun.jmx.remote.internal.ArrayNotificationBuffer$ShareBuffer.fetchNotifications(Unknown Source)
        at com.sun.jmx.remote.internal.ServerNotifForwarder.fetchNotifs(Unknown Source)
        at javax.management.remote.rmi.RMIConnectionImpl$2.run(Unknown Source)
        at javax.management.remote.rmi.RMIConnectionImpl$2.run(Unknown Source)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(Unknown Source)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
        at sun.rmi.transport.Transport$1.run(Unknown Source)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.rmi.transport.Transport.serviceCall(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Connection(7)-10.130.39.230"" daemon prio=10 tid=0x0000000040479800 nid=0x414c runnable [0x00007f71b6760000]
   java.lang.Thread.State: RUNNABLE
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at java.io.BufferedInputStream.fill(Unknown Source)
        at java.io.BufferedInputStream.read(Unknown Source)
        - locked <0x00007f71efd8af60> (a java.io.BufferedInputStream)
        at java.io.FilterInputStream.read(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""btpool0-8"" prio=10 tid=0x00007f71a8b72800 nid=0x4143 in Object.wait() [0x00007f71af5f4000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc85688> (a org.mortbay.thread.BoundedThreadPool$PoolThread)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:490)
        - locked <0x00007f71efc85688> (a org.mortbay.thread.BoundedThreadPool$PoolThread)

""ActiveMQ Transport: tcp:///10.73.11.1:46264"" daemon prio=10 tid=0x00000000402f7000 nid=0x4142 in Object.wait() [0x00007f71aefd4000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2957450> (a java.lang.Object)
        at org.apache.activemq.usage.Usage.waitForSpace(Usage.java:100)
        - locked <0x00007f71c2957450> (a java.lang.Object)
        at org.apache.activemq.broker.region.Queue.waitForSpace(Queue.java:1726)
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:568)
        - locked <0x00007f71efb09768> (a java.lang.Object)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:539)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:446)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        - locked <0x00007f71efc544c0> (a org.apache.activemq.transport.InactivityMonitor$1)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Connection Dispatcher: /10.73.11.1:46264"" daemon prio=10 tid=0x0000000040236000 nid=0x4141 in Object.wait() [0x00007f71af0d5000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc29000> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efc29000> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""btpool0-6"" prio=10 tid=0x00007f71a8449000 nid=0x4138 in Object.wait() [0x00007f71af4f3000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc86118> (a org.mortbay.thread.BoundedThreadPool$PoolThread)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:490)
        - locked <0x00007f71efc86118> (a org.mortbay.thread.BoundedThreadPool$PoolThread)

""btpool0-4"" prio=10 tid=0x00007f71a86dd800 nid=0x4136 in Object.wait() [0x00007f71af6f5000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc84bf8> (a org.mortbay.thread.BoundedThreadPool$PoolThread)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:490)
        - locked <0x00007f71efc84bf8> (a org.mortbay.thread.BoundedThreadPool$PoolThread)

""btpool0-2"" prio=10 tid=0x0000000040a17800 nid=0x4134 in Object.wait() [0x00007f71af8f7000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc80150> (a org.mortbay.thread.BoundedThreadPool$PoolThread)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:490)
        - locked <0x00007f71efc80150> (a org.mortbay.thread.BoundedThreadPool$PoolThread)

""Timer-3"" daemon prio=10 tid=0x00007f71b056c000 nid=0x4132 in Object.wait() [0x00007f71afaf9000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd143d8> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efd143d8> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""Timer-2"" daemon prio=10 tid=0x00007f71b0103000 nid=0x4131 in Object.wait() [0x00007f71afbfa000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd67d68> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efd67d68> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""ActiveMQ Session: ID:esxschnapp3-x3850.argl.iv.FOOBAR.de-48924-1270635425111-2:0:1"" prio=10 tid=0x00007f71a8034000 nid=0x4130 in Object.wait() [0x00007f71afcfb000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd09b68> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efd09b68> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.Consumer.Queue.example.A"" daemon prio=10 tid=0x00000000409d8000 nid=0x412f in Object.wait() [0x00007f71afdfc000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb4cc78> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb4cc78> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""DefaultMessageListenerContainer-1"" prio=10 tid=0x00000000409dc000 nid=0x412e in Object.wait() [0x00007f71b4114000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd09d90> (a java.lang.Object)
        at org.apache.activemq.MessageDispatchChannel.dequeue(MessageDispatchChannel.java:77)
        - locked <0x00007f71efd09d90> (a java.lang.Object)
        at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:447)
        at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:572)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:405)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:308)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:261)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Transport: tcp:///127.0.0.1:52732"" daemon prio=10 tid=0x00000000403ab800 nid=0x412d runnable [0x00007f71afefd000]
   java.lang.Thread.State: RUNNABLE
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
        at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:527)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
        at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:512)
        at java.io.DataInputStream.readInt(Unknown Source)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:211)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Connection Dispatcher: /127.0.0.1:52732"" daemon prio=10 tid=0x00000000403a9800 nid=0x412c in Object.wait() [0x00007f71afffe000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71ef966be8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71ef966be8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" prio=10 tid=0x0000000040947000 nid=0x412a runnable [0x00007f71b4215000]
   java.lang.Thread.State: RUNNABLE
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
        at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:527)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
        at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:512)
        at java.io.DataInputStream.readInt(Unknown Source)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:211)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Failover Worker: 1811450195"" daemon prio=10 tid=0x00007f71a8009800 nid=0x4129 in Object.wait() [0x00007f71b4316000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd11618> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efd11618> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Timer-1"" daemon prio=10 tid=0x00007f71b0780800 nid=0x411e in Object.wait() [0x00007f71b4417000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c7fdd550> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71c7fdd550> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""Timer-0"" daemon prio=10 tid=0x00007f71b0018800 nid=0x411d in Object.wait() [0x00007f71b4539000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc86ea8> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efc86ea8> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""Topic  ActiveMQ.Advisory.Producer.Queue.queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x0000000040827000 nid=0x411c in Object.wait() [0x00007f71b463a000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb4ad20> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb4ad20> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""btpool0-0 - Acceptor0 SelectChannelConnector@0.0.0.0:8161"" prio=10 tid=0x00007f71b0137800 nid=0x411b runnable [0x00007f71b4d41000]
   java.lang.Thread.State: RUNNABLE
        at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)
        at sun.nio.ch.EPollArrayWrapper.poll(Unknown Source)
        at sun.nio.ch.EPollSelectorImpl.doSelect(Unknown Source)
        at sun.nio.ch.SelectorImpl.lockAndDoSelect(Unknown Source)
        - locked <0x00007f71efd0c458> (a sun.nio.ch.Util$1)
        - locked <0x00007f71efd0c440> (a java.util.Collections$UnmodifiableSet)
        - locked <0x00007f71efbda070> (a sun.nio.ch.EPollSelectorImpl)
        at sun.nio.ch.SelectorImpl.select(Unknown Source)
        at org.mortbay.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:406)
        at org.mortbay.io.nio.SelectorManager.doSelect(SelectorManager.java:166)
        at org.mortbay.jetty.nio.SelectChannelConnector.accept(SelectChannelConnector.java:124)
        at org.mortbay.jetty.AbstractConnector$Acceptor.run(AbstractConnector.java:537)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)

""Topic  ActiveMQ.Advisory.Connection"" daemon prio=10 tid=0x000000004018a000 nid=0x411a in Object.wait() [0x00007f71b4e42000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb4ea18> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb4ea18> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""InactivityMonitor WriteCheck"" daemon prio=10 tid=0x0000000040829000 nid=0x4119 in Object.wait() [0x00007f71b473b000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd31248> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efd31248> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""InactivityMonitor ReadCheck"" daemon prio=10 tid=0x0000000040838800 nid=0x4118 in Object.wait() [0x00007f71b483c000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc87c68> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71efc87c68> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""ActiveMQ Transport: tcp:///10.73.11.1:46253"" daemon prio=10 tid=0x0000000040824800 nid=0x4117 in Object.wait() [0x00007f71b493c000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2957450> (a java.lang.Object)
        at org.apache.activemq.usage.Usage.waitForSpace(Usage.java:100)
        - locked <0x00007f71c2957450> (a java.lang.Object)
        at org.apache.activemq.broker.region.Queue.waitForSpace(Queue.java:1726)
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:568)
        - locked <0x00007f71c3d75ff8> (a java.lang.Object)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:539)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:446)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        - locked <0x00007f71efad4c00> (a org.apache.activemq.transport.InactivityMonitor$1)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Connection Dispatcher: /10.73.11.1:46253"" daemon prio=10 tid=0x00000000406ee000 nid=0x4115 in Object.wait() [0x00007f71b4b3f000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efab86f8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efab86f8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Transport Server: tcp://0.0.0.0:61616"" daemon prio=10 tid=0x00007f71b0456800 nid=0x4111 runnable [0x00007f71b4f43000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71efc552b8> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:280)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Transport Server Thread Handler: tcp://0.0.0.0:61616"" daemon prio=10 tid=0x00007f71b0457800 nid=0x4110 waiting on condition [0x00007f71b5044000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71efc555a0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
        at java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpTransportServer$1.run(TcpTransportServer.java:352)
        at java.lang.Thread.run(Unknown Source)

""Producer Flow Control Timeout Task"" prio=10 tid=0x00007f71b00c2000 nid=0x410f waiting on condition [0x00007f71b514c000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71efb0bcb8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at org.apache.activemq.broker.region.Queue$FlowControlTimeoutTask.run(Queue.java:169)

""Queue:DLQ.queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b00c0000 nid=0x410e in Object.wait() [0x00007f71b524d000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb0b1e8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb0b1e8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Checkpoint: queue://DLQ.queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b00be800 nid=0x410d in Object.wait() [0x00007f71b534e000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb0a5e8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb0a5e8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Producer Flow Control Timeout Task"" prio=10 tid=0x00007f71b00bc000 nid=0x410c waiting on condition [0x00007f71b544f000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71efad75c0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at org.apache.activemq.broker.region.Queue$FlowControlTimeoutTask.run(Queue.java:169)

""Queue:example.A"" daemon prio=10 tid=0x00007f71b04c5000 nid=0x410b in Object.wait() [0x00007f71b5550000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efad6588> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efad6588> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Checkpoint: queue://example.A"" daemon prio=10 tid=0x00007f71b04c3000 nid=0x410a in Object.wait() [0x00007f71b5651000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efad59d8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efad59d8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Producer Flow Control Timeout Task"" prio=10 tid=0x00007f71b04c8000 nid=0x4109 waiting on condition [0x00007f71b5752000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71efb09a10> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at org.apache.activemq.broker.region.Queue$FlowControlTimeoutTask.run(Queue.java:169)

""Queue:queue/Einarbeitungsdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b04c7000 nid=0x4108 in Object.wait() [0x00007f71b5853000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb08f40> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb08f40> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Checkpoint: queue://queue/Einarbeitungsdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b04c6000 nid=0x4107 in Object.wait() [0x00007f71b5954000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb08330> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb08330> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Topic  ActiveMQ.Advisory.Queue"" daemon prio=10 tid=0x00007f71b0613800 nid=0x4106 in Object.wait() [0x00007f71b5a55000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efb487a8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efb487a8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Producer Flow Control Timeout Task"" prio=10 tid=0x00007f71b04c9800 nid=0x4105 waiting on condition [0x00007f71b5b56000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71c3cbded0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at org.apache.activemq.broker.region.Queue$FlowControlTimeoutTask.run(Queue.java:169)

""Queue:queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b061e800 nid=0x4104 in Object.wait() [0x00007f71b5c57000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efac23b8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efac23b8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""Checkpoint: queue://queue/Initialdaten_RemoteQ"" daemon prio=10 tid=0x00007f71b04b3800 nid=0x4103 in Object.wait() [0x00007f71b5d58000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efac1990> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71efac1990> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""ActiveMQ Journal Checkpoint Worker"" daemon prio=10 tid=0x00007f71b05d0800 nid=0x4102 in Object.wait() [0x00007f71b6b72000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71ef960c48> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:105)
        - locked <0x00007f71ef960c48> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

""RMI RenewClean-[10.130.18.244:35003]"" daemon prio=10 tid=0x00007f71b04d8000 nid=0x4100 in Object.wait() [0x00007f71b5f5a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efc91e50> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        - locked <0x00007f71efc91e50> (a java.lang.ref.ReferenceQueue$Lock)
        at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Data File Writer"" daemon prio=10 tid=0x00007f71b83b6000 nid=0x40ff in Object.wait() [0x00007f71b655e000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c7fd9fa0> (a org.apache.activemq.kaha.impl.async.DataFileAppender$1)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.kaha.impl.async.NIODataFileAppender.processQueue(NIODataFileAppender.java:80)
        - locked <0x00007f71c7fd9fa0> (a org.apache.activemq.kaha.impl.async.DataFileAppender$1)
        at org.apache.activemq.kaha.impl.async.DataFileAppender$2.run(DataFileAppender.java:230)

""RMI Scheduler(0)"" daemon prio=10 tid=0x00007f71b83b7000 nid=0x40fe waiting on condition [0x00007f71b665f000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007f71c28fd860> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
        at java.util.concurrent.DelayQueue.take(Unknown Source)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""GC Daemon"" daemon prio=10 tid=0x0000000040564800 nid=0x40fc in Object.wait() [0x00007f71b6970000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2926ee0> (a sun.misc.GC$LatencyLock)
        at sun.misc.GC$Daemon.run(Unknown Source)
        - locked <0x00007f71c2926ee0> (a sun.misc.GC$LatencyLock)

""RMI Reaper"" prio=10 tid=0x000000004023a000 nid=0x40fb in Object.wait() [0x00007f71b6a71000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c28fbee0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        - locked <0x00007f71c28fbee0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        at sun.rmi.transport.ObjectTable$Reaper.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Accept-51109"" daemon prio=10 tid=0x00007f71b8333800 nid=0x40f9 runnable [0x00007f71b6c73000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71c28817a8> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""ActiveMQ Scheduler"" daemon prio=10 tid=0x00007f71b836e800 nid=0x40f8 in Object.wait() [0x00007f71b6d74000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c28ba498> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Unknown Source)
        - locked <0x00007f71c28ba498> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Unknown Source)

""RMI TCP Accept-0"" daemon prio=10 tid=0x00007f71b0092000 nid=0x40f6 runnable [0x00007f71b70c6000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71c2881d38> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Accept-11099"" daemon prio=10 tid=0x00007f71b0090000 nid=0x40f5 runnable [0x00007f71b71c7000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71c28821c0> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""RMI TCP Accept-0"" daemon prio=10 tid=0x00007f71b0082000 nid=0x40f4 runnable [0x00007f71b72c8000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(Unknown Source)
        - locked <0x00007f71c2882630> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(Unknown Source)
        at java.net.ServerSocket.accept(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(Unknown Source)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""CommunicatorServer"" daemon prio=10 tid=0x00007f71b003c000 nid=0x40f3 runnable [0x00007f71b73c9000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainDatagramSocketImpl.receive0(Native Method)
        - locked <0x00007f71c289e760> (a java.net.PlainDatagramSocketImpl)
        at java.net.PlainDatagramSocketImpl.receive(Unknown Source)
        - locked <0x00007f71c289e760> (a java.net.PlainDatagramSocketImpl)
        at java.net.DatagramSocket.receive(Unknown Source)
        - locked <0x00007f71c289e7d0> (a java.net.DatagramPacket)
        - locked <0x00007f71c289e718> (a java.net.DatagramSocket)
        at com.sun.jmx.snmp.daemon.SnmpAdaptorServer.doReceive(Unknown Source)
        at com.sun.jmx.snmp.daemon.CommunicatorServer.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)

""Low Memory Detector"" daemon prio=10 tid=0x00007f71b0002000 nid=0x40ef runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread1"" daemon prio=10 tid=0x00007f71b826c000 nid=0x40ee waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread0"" daemon prio=10 tid=0x00007f71b826a000 nid=0x40ed waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""JDWP Event Helper Thread"" daemon prio=10 tid=0x00007f71b8267800 nid=0x40ec runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""JDWP Transport Listener: dt_socket"" daemon prio=10 tid=0x00007f71b8264000 nid=0x40eb runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=10 tid=0x00007f71b8258000 nid=0x40ea waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=10 tid=0x00007f71b823a000 nid=0x40e9 in Object.wait() [0x00007f71b7ffe000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2927370> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        - locked <0x00007f71c2927370> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        at java.lang.ref.Finalizer$FinalizerThread.run(Unknown Source)

""Reference Handler"" daemon prio=10 tid=0x00007f71b8238000 nid=0x40e8 in Object.wait() [0x00007f71bc1af000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71c2926ed0> (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:485)
        at java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
        - locked <0x00007f71c2926ed0> (a java.lang.ref.Reference$Lock)

""main"" prio=10 tid=0x000000004011d800 nid=0x40d8 in Object.wait() [0x00007f71f6488000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00007f71efd33780> (a [Z)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.console.command.StartCommand.waitForShutdown(StartCommand.java:161)
        - locked <0x00007f71efd33780> (a [Z)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:104)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)

""VM Thread"" prio=10 tid=0x00007f71b8233800 nid=0x40e7 runnable 

""GC task thread#0 (ParallelGC)"" prio=10 tid=0x0000000040127800 nid=0x40da runnable 

""GC task thread#1 (ParallelGC)"" prio=10 tid=0x0000000040129800 nid=0x40db runnable 

""GC task thread#2 (ParallelGC)"" prio=10 tid=0x000000004012b800 nid=0x40dc runnable 

""GC task thread#3 (ParallelGC)"" prio=10 tid=0x000000004012d000 nid=0x40dd runnable 

""GC task thread#4 (ParallelGC)"" prio=10 tid=0x000000004012f000 nid=0x40de runnable 

""GC task thread#5 (ParallelGC)"" prio=10 tid=0x0000000040131000 nid=0x40df runnable 

""GC task thread#6 (ParallelGC)"" prio=10 tid=0x0000000040132800 nid=0x40e0 runnable 

""GC task thread#7 (ParallelGC)"" prio=10 tid=0x0000000040134800 nid=0x40e1 runnable 

""GC task thread#8 (ParallelGC)"" prio=10 tid=0x0000000040136800 nid=0x40e2 runnable 

""GC task thread#9 (ParallelGC)"" prio=10 tid=0x0000000040138000 nid=0x40e3 runnable 

""GC task thread#10 (ParallelGC)"" prio=10 tid=0x000000004013a000 nid=0x40e4 runnable 

""GC task thread#11 (ParallelGC)"" prio=10 tid=0x000000004013c000 nid=0x40e5 runnable 

""GC task thread#12 (ParallelGC)"" prio=10 tid=0x000000004013d800 nid=0x40e6 runnable 

""VM Periodic Task Thread"" prio=10 tid=0x00007f71b0094800 nid=0x40f7 waiting on condition 

JNI global references: 6239

Heap
 PSYoungGen      total 199552K, used 51797K [0x00007f71e2800000, 0x00007f71f1f10000, 0x00007f71f2800000)
  eden space 158528K, 23% used [0x00007f71e2800000,0x00007f71e4bdcd18,0x00007f71ec2d0000)
  from space 41024K, 36% used [0x00007f71ef700000,0x00007f71f05b8820,0x00007f71f1f10000)
  to   space 47232K, 0% used [0x00007f71ec2d0000,0x00007f71ec2d0000,0x00007f71ef0f0000)
 PSOldGen        total 199616K, used 95454K [0x00007f71c2800000, 0x00007f71ceaf0000, 0x00007f71e2800000)
  object space 199616K, 47% used [0x00007f71c2800000,0x00007f71c8537b48,0x00007f71ceaf0000)
 PSPermGen       total 43264K, used 43152K [0x00007f71bd400000, 0x00007f71bfe40000, 0x00007f71c2800000)
  object space 43264K, 99% used [0x00007f71bd400000,0x00007f71bfe24138,0x00007f71bfe40000)

 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent flooding queue://queue/Einarbeitungsdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 210s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-12587-1270572565654-0:22380:1:1) stopped to prevent flooding queue://queue/Initialdaten_RemoteQ. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 300s)
 INFO | Usage Manager Store is Full. Producer (ID:HOST2-46261-1270635495961-0:0:6:1) stopped to prevent floodi
{code} 
","08/Apr/10 10:32;scoopex;Retested this issue with kahadb backend and created threaddumps (IBM jvm).

The name of the blocked queue was: queue/Einarbeitungsdaten_RemoteQ

The problem also appears by using the kahadb backend:

{code}
$ unzip -l producer-flow-control-problem.zip
Archive:  producer-flow-control-problem.zip
  Length      Date    Time    Name
---------  ---------- -----   ----
        0  2010-04-08 12:20   producer-flow-control-problem/    
   819119  2010-04-08 12:20   producer-flow-control-problem/activemq-javacore.20100408.115629.32099.0001.txt          (Threaddump of the ActiveMQ Standalone Broker)
   150326  2010-04-08 12:20   producer-flow-control-problem/standalone-client-javacore.20100408.115629.4914.0001.txt  (Threaddump of a standalone consumer : apache-activemq-5.3.1/example)
     6575  2010-04-08 12:20   producer-flow-control-problem/activemq.xml                                              (Configuration of the broker)
  2174495  2010-04-08 12:20   producer-flow-control-problem/jboss-javacore.20100408.115629.3419.0001.txt              (Threaddump of JBOSS Appserver which runs two message driven beans, consumers)  
---------                     -------
  3150515                     5 files
{code}
","14/Apr/10 11:18;gtully;The problem with the hang is DLQ processing. The stack trace of the broker has:{code}3XMTHREADINFO      ""ActiveMQ Transport: tcp:///127.0.0.1:53609"" TID:0x00000000010B1200, j9thread_t:0x00000000025A8890, state:CW, prio=8
3XMTHREADINFO1            (native thread ID:0xFD2, native priority:0x8, native policy:UNKNOWN)
4XESTACKTRACE          at java/lang/Object.wait(Native Method)
4XESTACKTRACE          at java/lang/Object.wait(Object.java:196(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/usage/Usage.waitForSpace(Usage.java:87(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/region/Queue.waitForSpace(Queue.java:1726)
4XESTACKTRACE          at org/apache/activemq/broker/region/Queue.doMessageSend(Queue.java:568)
4XESTACKTRACE          at org/apache/activemq/broker/region/Queue.send(Queue.java:539)
4XESTACKTRACE          at org/apache/activemq/broker/region/AbstractRegion.send(AbstractRegion.java:354)
4XESTACKTRACE          at org/apache/activemq/broker/region/RegionBroker.send(RegionBroker.java:445)
4XESTACKTRACE          at org/apache/activemq/broker/TransactionBroker.send(TransactionBroker.java:224)
4XESTACKTRACE          at org/apache/activemq/broker/BrokerFilter.send(BrokerFilter.java:126)
4XESTACKTRACE          at org/apache/activemq/broker/CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
4XESTACKTRACE          at org/apache/activemq/broker/MutableBrokerFilter.send(MutableBrokerFilter.java:133)
4XESTACKTRACE          at org/apache/activemq/util/BrokerSupport.doResend(BrokerSupport.java:65)
4XESTACKTRACE          at org/apache/activemq/util/BrokerSupport.resendNoCopy(BrokerSupport.java:36)
4XESTACKTRACE          at org/apache/activemq/broker/region/RegionBroker.sendToDeadLetterQueue(RegionBroker.java:727)
4XESTACKTRACE          at org/apache/activemq/broker/region/PrefetchSubscription.sendToDLQ(PrefetchSubscription.java:457(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/region/PrefetchSubscription.acknowledge(PrefetchSubscription.java:195(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/region/AbstractRegion.acknowledge(AbstractRegion.java:373(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/region/RegionBroker.acknowledge(RegionBroker.java:470(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/TransactionBroker.acknowledge(TransactionBroker.java:194(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/BrokerFilter.acknowledge(BrokerFilter.java:74(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/BrokerFilter.acknowledge(BrokerFilter.java:74(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/TransportConnection.processMessageAck(TransportConnection.java:451(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/command/MessageAck.visit(MessageAck.java(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/TransportConnection.service(TransportConnection.java:300(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/broker/TransportConnection$1.onCommand(TransportConnection.java:178(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/transport/TransportFilter.onCommand(TransportFilter.java:68(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/transport/WireFormatNegotiator.onCommand(WireFormatNegotiator.java:109(Compiled Code))
4XESTACKTRACE          at org/apache/activemq/transport/InactivityMonitor.onCommand(InactivityMonitor.java:216(Compiled Code))
{code}

A poison ack is coming from one of the consumers, the message has exceeded its redelivery quota so is is being discarded. However, the DLQ for a persistent message uses the same store that is currently full, so that ack is blocking on store usage which blocks the consumer.

There are a few options here:
* You could use a topic for the DLQ and the persistence will be optimised out if there are no durable subs to the DLQ topic for that Destination.
* You could disable DLQ processing for that destination
* You could investigate the redelivery issue on the consumer to avoid the use of the DQL by configuring a redelivery policy that does not limit the redeliveries. The message will remain on the consumer till it is accepted.
* a resolution to https://issues.apache.org/activemq/browse/AMQ-2668 would help, the test q could block a 70% leaving 30% for DLQ handling.
","14/Apr/10 11:19;gtully;link to per destination store usage high water mark policy feature https://issues.apache.org/activemq/browse/AMQ-2668","14/Apr/10 12:23;scoopex;Very interesting - i will try to verify this with my setup...

It would e very helpful for sysadmins to get a warning message which provides information that a queue is blocked for enqueue/dequeue 
because of the fact that there is no space for potentially submitting messages to the dead letter queue....

","23/Apr/10 15:20;gtully;Think the fix for https://issues.apache.org/activemq/browse/AMQ-2668 sort this. Reopen if here is any update or change.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot rename file,AMQ-2701,12483429,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,bbuzzard,bbuzzard,20/Apr/10 14:03,20/Apr/10 16:07,30/Jan/20 16:55,20/Apr/10 16:07,,,,,,,,,,,,,,,0,"I'm not sure if this issue should be reported here or in the Apache-Camel project.  Please let me know if I've logged it in the wrong place.  I have a drop folder used for testing called ""c:\esb\aaa"".  I have the route in the apache-activemq-5.3.0\webapps\camel\WEB-INF\applicationContext.xml file set up to route files from ""c:\esb\aaa"" to ""activemq:testQ"".  When I drop a file in the folder it appears to make it into the queue.  I see a camelLock file appear in the drop folder temporarily, but when it disappears the original file that I dropped remains and was not moved to the "".camel"" subfolder.  I can do the samething from my WindowsXP Laptop and it works, so I'm not sure what the problem is or how to track it down.  Here's my stacktrace:

org.apache.camel.component.file.GenericFileOperationFailedException: Cannot rename file: GenericFile[c:\esb\aaa\Test4.txt] to: GenericFile[c:\esb\aaa\.camel\Test4.txt]
	at org.apache.camel.component.file.strategy.GenericFileRenameProcessStrategy.renameFile(GenericFileRenameProcessStrategy.java:96)
	at org.apache.camel.component.file.strategy.GenericFileRenameProcessStrategy.commit(GenericFileRenameProcessStrategy.java:72)
	at org.apache.camel.component.file.GenericFileOnCompletion.processStrategyCommit(GenericFileOnCompletion.java:120)
	at org.apache.camel.component.file.GenericFileOnCompletion.onCompletion(GenericFileOnCompletion.java:82)
	at org.apache.camel.component.file.GenericFileOnCompletion.onComplete(GenericFileOnCompletion.java:50)
	at org.apache.camel.impl.DefaultUnitOfWork.done(DefaultUnitOfWork.java:115)
	at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:60)
	at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48)
	at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:198)
	at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:120)
	at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:93)
	at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)","Windows Server 2008 R2 Standard, JDK1.6.0_18, Apache-ActiveMQ-5.3.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-20 14:16:57.067,,,false,,,,,,,,,,,,,,,,,74838,,,Tue Apr 20 16:07:08 UTC 2010,,,,,,,,"0|i0s08f:",161514,,,,,,,,,,,,,,,,,,,"20/Apr/10 14:16;gtully;you should use the Camel jira for this issue with the camel file component","20/Apr/10 16:07;bbuzzard;See Camel 2661",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent Cross-site Scripting in /createDesitnation.action [JMSDestination parameter],AMQ-2613,12483277,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,rajats@gmail.com,rajats@gmail.com,17/Feb/10 19:22,08/Apr/10 09:21,30/Jan/20 16:55,08/Apr/10 09:21,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,"GET /createDestination.action?JMSDestinationType=queue&JMSDestination=%22%3E%3Cscript%3Ealert%28%22persistent%20XSS%22%29%3C%2fscript%3E
This GET request creates a queue name that has malformed queue name due to lack of input validation.  After sending this request a sample of the effect can be seen by browsing to /queues.jsp and clicking on the ""Home"" link.  
I do not know the affected version information yet.  Is there some way I can find it?    
Additionally, this is vulnerable to cross-site request forgery as well but XSS is a more critical bug than XSRF (at least at this point for me I guess).

----
CVE Identifier issued for this:
CVE-2010-0684",Linux environment.,rajats@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-02-23 15:41:43.88,,,false,,,,,,,,,,,,,,,,,74872,,,Thu Apr 08 09:21:50 UTC 2010,,,,,,,,"0|i0rpof:",159804,,,,,,,,,,,,,,,,,,,"17/Feb/10 19:38;rajats@gmail.com;Two issues:
- XSS
- XSRF/CSRF
","23/Feb/10 15:41;dejanb;Fixed with svn revision 915384 and merged into 5.3 branch.

The web console should now be immune to XSS and CSRF attacks. First ones are fixed by sanitizing the output. The CSRF attacks are prevented by sending a secret to the form and checking it before modifying results. Also, POST method is forced where it is applicable.
","07/Apr/10 10:45;joeluo;It looks like there are some new unpatched vunerabilities. Taking a release apache-activemq 5.3.1, installing it and navigating to :

http://localhost:8161/admin/connection.jsp?connectionID=%3Cscript%3Ealert%28%27XSS%27%29;%3C/script%3E

you see an non-permanent XSS vunerability

For a permanent XSS vunerability do the following:

1) On web console go to the 'send' page:

set:

    * destination : ""foo""
    * correlation ID field to ""<script>alert('Vunerable to XSS!');</script>""

2) go to the queue browser page page for queue ""foo"" - you get an XSS attack","07/Apr/10 12:14;romainw;Joe is correct.

Also, for the permanent XSS, ""correlation ID"" is not the only vulnerable variable. ""Reply To "", ""Type"", etc. are vulnerable.

It is important to sanitise user input in general, not just for the variables that are being reported here.","07/Apr/10 14:00;dejanb;Fixed in svn revision 931552

Thanks for reporting this. I did some more sanitation and hopefully everything is covered now.","08/Apr/10 08:18;jamesc;Dejan,

I just checked on the latest 5.4 snapshot (Thu Apr 08 04:00:00).  The first issue is fixed, but the second one (sending a message with correlationID containing script) still occurs.

cheers,

James.","08/Apr/10 08:30;dejanb;Hi James,

I just tried to reproduce it, but it seems all fine from here. What are you seeing as a result?

Cheers,
Dejan","08/Apr/10 09:03;jamesc;Dejan,

my mistake, activemq was picking up an old config file during my tests.  I confirm this now looks fixed.

I think you can close it now (again !)

thanks,

James.","08/Apr/10 09:21;dejanb;No worries James, I'm glad it's really fixed. Cheers",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Exception on setting ""sendFailIfNoSpaceAfterTimeout""",AMQ-2634,12482988,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,scoopex,scoopex,02/Mar/10 14:30,02/Mar/10 17:21,30/Jan/20 16:55,02/Mar/10 15:50,5.3.0,,,,,,,5.3.1,,,Broker,,,,0,"I added the follwing configuration to my broker:
---
<systemUsage>
 <systemUsage sendFailIfNoSpaceAfterTimeout=""3000"">
   <memoryUsage>
     <memoryUsage limit=""20 mb""/>
   </memoryUsage>
 </systemUsage>
</systemUsage>
---

I get the following exceptions:
(after removing sendFailIfNoSpaceAfterTimeout the broker start properly)
---
# /etc/init.d/activemq fgstart                                                                                                                                                                                                        
INFO: loading '/etc/default/activemq'                                                                                                                                                                                                 
INFO: useing java '/usr/bin/java'                                                                                                                                                                                                     
INFO: starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+c)                                                                                                                                   
INFO: changing to user 'activemq' to invoke java                                                                                                                                                                                      
Java Runtime: IBM Corporation 1.6.0 /usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre                                                                                                                                                           
  Heap sizes: current=131072k  free=126099k  max=1048576k                                                                                                                                                                             
    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Dsun.boot.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Djava.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64:/usr/lib -Djava.home=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre -Djava.ext.dirs=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/ext -Duser.dir=/srv/activemq/conf _j2se_j9=1119744 -Xdump -Djava.class.path=. -Xms128M -Xmx1024M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/srv/activemq/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/srv/activemq/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.130.18.244 -Dcom.sun.management.jmxremote -Dcom.sun.management.snmp.port=30000 -Dcom.sun.management.snmp.interface=0.0.0.0 -Dcom.sun.management.snmp.acl.file=/srv/activemq/conf/snmp.acl -Dactivemq.classpath=/srv/activemq/conf/; -Dactivemq.home=/srv/activemq/install/apache-activemq -Dactivemq.base=/srv/activemq/install/apache-activemq -Djava.class.path=/srv/activemq/install/apache-activemq/bin/run.jar -Dsun.java.command=/srv/activemq/install/apache-activemq/bin/run.jar start -Dsun.java.launcher=SUN_STANDARD -Dsun.java.launcher.pid=25854 _port_library _org.apache.harmony.vmi.portlib  
ACTIVEMQ_HOME: /srv/activemq/install/apache-activemq                                                                                                                                                                                  
ACTIVEMQ_BASE: /srv/activemq/install/apache-activemq                                                                                                                                                                                  
Loading message broker from: xbean:activemq.xml                                                                                                                                                                                       
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                                                                              
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                                                                                     
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)                                                                                                                                             
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)                                                                                                                                       
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)                                                                                                                                            
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)                                                                                                                                       
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)                                                                                                                                                
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)                                                                                                                                                                
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)                                                                                                                                              
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)                                                                                                                                      
        at java.lang.reflect.Method.invoke(Method.java:599)                                                                                                                                                                           
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)                                                                                                                                                               
        at org.apache.activemq.console.Main.main(Main.java:107)                                                                                                                                                                       
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                      
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)                                                                                               
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)                                                                                        
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)                                                                             
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)                                                                                    
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)                                                                                            
        at java.security.AccessController.doPrivileged(AccessController.java:224)                                                                                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)                                                                                       
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)                                                                                                                    
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)                                                                                                 
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)                                                                                                                      
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)                                                                                                                        
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)                                                                                                                        
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)                                                                                         
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)                                                                                        
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)                                                                                                                
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)                                                                                                                
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)                                                                                                                
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)                                                                                                                          
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)                                                                                                                                      
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)                                                                                                                                               
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)                                                                                                                                               
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)                                                                                                                                        
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)                                                                                                                                             
        ... 10 more                                                                                                                                                                                                                   
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                  
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)                                                                             
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)                                                                                    
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)                                                                                            
        at java.security.AccessController.doPrivileged(AccessController.java:224)                                                                                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)                                                                                       
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)                                                                                               
        ... 33 more                                                                                                                                                                                                                   
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                        
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)                                                                                                                                       
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)                                                                                                                                       
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)                                                                                                                     
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)                                                                                                                     
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
        ... 39 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
        at java.lang.reflect.Method.invoke(Method.java:599)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(AccessController.java:224)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(AccessController.java:224)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)
        ... 33 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
        ... 39 more
---

My activemq.xml:
---                                                                
<!--                                                                                      
    Licensed to the Apache Software Foundation (ASF) under one or more                    
    contributor license agreements.  See the NOTICE file distributed with                 
    this work for additional information regarding copyright ownership.                   
    The ASF licenses this file to You under the Apache License, Version 2.0               
    (the ""License""); you may not use this file except in compliance with                  
    the License.  You may obtain a copy of the License at                                 
                                                                                          
    http://www.apache.org/licenses/LICENSE-2.0                                            
                                                                                          
    Unless required by applicable law or agreed to in writing, software                   
    distributed under the License is distributed on an ""AS IS"" BASIS,                     
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.              
    See the License for the specific language governing permissions and                   
    limitations under the License.                                                        
-->                                                                                       
<beans                                                                                    
  xmlns=""http://www.springframework.org/schema/beans""                                     
  xmlns:amq=""http://activemq.apache.org/schema/core""                                      
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""                                   
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">                               

    <!-- Allows us to use system properties as variables in this configuration file -->
    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
        <property name=""locations"">                                                      
            <value>file:${activemq.base}/conf/credentials.properties</value>             
        </property>                                                                      
    </bean>                                                                              

    <!-- 
        The <broker> element is used to configure the ActiveMQ broker. 
    -->                                                                
    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.base}/data"" >
                                                                                                                         
<!--                                                                                                                     
         <systemUsage>                                                                                                   
           <systemUsage sendFailIfNoSpaceAfterTimeout=""3000"">                                                            
             <memoryUsage>                                                                                               
               <memoryUsage limit=""700 mb""/>                                                                             
             </memoryUsage>                                                                                              
             <storeUsage>                                                                                                
               <storeUsage limit=""1 gb"" name=""foo""/>                                                                     
             </storeUsage>                                                                                               
             <tempUsage>                                                                                                 
               <tempUsage limit=""1 gb""/>                                                                                 
             </tempUsage>                                                                                                
           </systemUsage>                                                                                                
         </systemUsage>                                                                                                  
-->                                                                                                                      

<systemUsage>
 <systemUsage sendFailIfNoSpaceAfterTimeout=""3000""> 
   <memoryUsage>                                    
     <memoryUsage limit=""20 mb""/>                   
   </memoryUsage>                                   
 </systemUsage>                                     
</systemUsage>                                      

        <!-- 
            The managementContext is used to configure how ActiveMQ is exposed in 
            JMX. By default, ActiveMQ uses the MBean server that is started by    
            the JVM. For more information, see:                                   
                                                                                  
            http://activemq.apache.org/jmx.html                                   
        -->                                                                       
        <managementContext>                                                       
            <managementContext createConnector=""false""/>                          
        </managementContext>                                                      

        <!-- 
            Configure message persistence for the broker. The default persistence
            mechanism is the KahaDB store (identified by the kahaDB tag).        
            For more information, see:                                           
                                                                                 
            http://activemq.apache.org/persistence.html                          
        -->                                                                      
        <persistenceAdapter>                                                     
            <kahaDB directory=""${activemq.base}/data/kahadb""/>                   
        </persistenceAdapter>                                                    
                                                                                 
                                                                                 
        <!--                                                                     
                        For better performances use VM cursor and small memory limit.
                        For more information, see:                                   
                                                                                     
            http://activemq.apache.org/message-cursors.html                          
                                                                                     
            Also, if your producer is ""hanging"", it's probably due to producer flow control.
            For more information, see:                                                      
            http://activemq.apache.org/producer-flow-control.html                           
        -->                                                                                 
                                                                                            
        <destinationPolicy>                                                                 
            <policyMap>                                                                     
              <policyEntries>                                                               


                <policyEntry topic="">"" producerFlowControl=""false"" memoryLimit=""1mb"">

                  <deadLetterStrategy>
                    <!--              
                      Use the prefix 'DLQ.' for the destination name, and make
                      the DLQ a queue rather than a topic                     
                    -->                                                       
                    <individualDeadLetterStrategy                             
                      queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />   
                  </deadLetterStrategy>

                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""false"" memoryLimit=""1mb"">
                  <!-- Use VM cursor for better latency
                       For more information, see:

                       http://activemq.apache.org/message-cursors.html

                  <pendingQueuePolicy>
                    <vmQueueCursor/>
                  </pendingQueuePolicy>
                  -->
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy>

         <!--
            The systemUsage controls the maximum amount of space the broker will
            use before slowing down producers. For more information, see:

            nfigur
            http://activemq.apache.org/producer-flow-control.html

        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""20 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""1 gb"" name=""foo""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""100 mb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
                -->

        <!--
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see:

            http://activemq.apache.org/configuring-transports.html
        -->
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>

    </broker>

    <!--
        Uncomment to enable Camel
        Take a look at activemq-camel.xml for more details

    <import resource=""camel.xml""/>
    -->

    <!--
        Enable web consoles, REST and Ajax APIs and demos
        Take a look at activemq-jetty.xml for more details
    -->
    <import resource=""jetty.xml""/>

</beans>
---
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-03-02 15:50:28.491,,,false,,,,,,,,,,,,,,,,,74863,,,Tue Mar 02 17:21:55 UTC 2010,,,,,,,,"0|i0ts9r:",171889,,,,,,,,,,,,,,,,,,,"02/Mar/10 15:50;gtully;5.3.1 has not been released yet. Try a https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.3.1-SNAPSHOT/","02/Mar/10 17:21;gtully;that attribute is only in the 5.3.1 schema, so it can't validate with 5.3.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent Cross-site Scripting in /createDesitnation.action [JMSDestination parameter],AMQ-2625,12482743,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,rajats@gmail.com,rajats@gmail.com,24/Feb/10 03:51,24/Feb/10 03:53,30/Jan/20 16:55,24/Feb/10 03:53,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,"GET /createDestination.action?JMSDestinationType=queue&JMSDestination=%22%3E%3Cscript%3Ealert%28%22persistent%20XSS%22%29%3C%2fscript%3E
This GET request creates a queue name that has malformed queue name due to lack of input validation.  After sending this request a sample of the effect can be seen by browsing to /queues.jsp and clicking on the ""Home"" link.  
I do not know the affected version information yet.  Is there some way I can find it?    
Additionally, this is vulnerable to cross-site request forgery as well but XSS is a more critical bug than XSRF (at least at this point for me I guess).

----
CVE Identifier issued for this:
CVE-2010-0684",Linux environment.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74867,,,2010-02-24 03:51:49.0,,,,,,,,"0|i0rr5r:",160044,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MemoryUsage stays at 100% used forever after all messages are sent,AMQ-1974,12483238,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,activemqny,activemqny,11/Oct/08 00:18,22/Feb/10 12:40,30/Jan/20 16:55,22/Feb/10 12:40,5.1.0,,,,,,,5.3.1,5.4.0,,,,,,3,"We  use a network of brokers and topic to do messaging. All our message producers and consumers talk to the local VM broker. We reply on bridges between network of brokers to move messages between brokers. We found a case that MemoryUsage stays at 100% forever after all messages are sent.

I attached two files to show this memory leak problem. TryJmsClient keeps sending persistent messages to a Topic. TryJmsManager has a message consumer. Start TryJmsManager first and then start TryJmsClient. After running about 10 seconds, TryJmsClient stops sending because of getting ""SystemUsage memory limit reached"" error. About 24K messages are sent and consumer shows it get all messages. Now examine ActiveMQ MemoryUsage printout of TryJmsClient, MemoryUsage percentage stays at 100% or 99% forever. Producer can never send any more messages.

Note1: If I slow down sending by adding a sleep, I don't see memory leak immediately. I am not sure for longer running time.
Note2: If I use Queue instead of Topic, there is no memory leak. 
Note3: This looks like similar to AMQ-1833 that is fixed in 5.2. But after testing with 5.2 snapshot, I still get the problem.","Linux with 2.6.18 kernel
JDK 1.5.0_15",bsnyder,walec51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/08 20:39;hansb;MsgsPerSecond.diff;https://issues.apache.org/jira/secure/attachment/12461176/MsgsPerSecond.diff","11/Oct/08 00:26;activemqny;TryJmsClient.java;https://issues.apache.org/jira/secure/attachment/12461266/TryJmsClient.java","11/Oct/08 00:26;activemqny;TryJmsManager.java;https://issues.apache.org/jira/secure/attachment/12461221/TryJmsManager.java",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-10-12 20:39:28.682,,,false,,,,,,,,,,,,,,,,,75144,,,Mon Feb 22 12:40:10 UTC 2010,,,,,,,,"0|i0rpnr:",159801,,,,,,,,,,,,,,,,,,,"11/Oct/08 00:26;activemqny;Test case ","12/Oct/08 20:39;hansb;I've modified the client a bit to measure how many could be sent without problems.

See MsgsPerSecond.diff to TryJmsClient.java

On my laptop it worked up to 1500 per second. At 2000 it took a while until it failed.

Maybe it helps to investigate the problem. Or you can use it as a workaround.","12/Oct/08 20:40;hansb;Also tested it on RC2.

See http://www.nabble.com/-VOTE--ActiveMQ-5.2.0---RC2-td19874910.html","14/Oct/08 19:43;bsnyder;I've created Maven projects to run each of these clients in their own VM using the exec-maven-plugin. Each one has now been running for a while (nearly 4 million messages have been sent) and I'm not seeing any errors at all. Am I missing something? 

I'm seeing the following output from the TryJmsManager and it doesn't seem to be changing at all: 

{code}
ActiveMQ memeory 0 1024
ActiveMQ message store 0
ActiveMQ temp space 0
sent message 3946000 (id=ID:mongoose.local-50509-1224010696716-3:0:1:1:3946001) after 2630643 ms.
sent message 3947000 (id=ID:mongoose.local-50509-1224010696716-3:0:1:1:3947001) after 2631294 ms.
sent message 3948000 (id=ID:mongoose.local-50509-1224010696716-3:0:1:1:3948001) after 2631974 ms.
sent message 3949000 (id=ID:mongoose.local-50509-1224010696716-3:0:1:1:3949001) after 2632658 ms.
sent message 3950000 (id=ID:mongoose.local-50509-1224010696716-3:0:1:1:3950001) after 2633326 ms.
sent message 3951000 (id=ID:mongoose.local-50509-1224010696716-3:0:1:1:3951001) after 2633965 ms.
sent message 3952000 (id=ID:mongoose.local-50509-1224010696716-3:0:1:1:3952001) after 2634663 ms.
{code}

Here is the output I'm seeing from the TryJmsClient: 

{code}
ot message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994202
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994203
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994204
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994205
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994206
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994207
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994208
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994209
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994210
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994211
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994212
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994213
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994214
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994215
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994216
got message ID:mongoose.local-50509-1224010696716-3:0:1:1:3994217
{code}","14/Oct/08 20:20;hansb;That first log

{code}
   sent message 3946000 (id=ID:mongoose.local-50509-1224010696716-3:0:1:1:3946001) after 2630643 ms.
{code}

looks like the output of TryJmsClient with my patch applied.

In that case set _msgsPerSecond_ to a much higher value, compile and run again.
","18/Nov/08 14:45;rwitcher;We are experiencing a similar issue using a non-persistent queue and producerFlowControl with ActiveMQ 5.1.0.  After sending enough messages for the broker to block the producers due to the memory usage being at 100%, we start a consumer which then drains the queue.  However, since the memoryUsage stays at 100%, the broker is still blocking producers from sending more messages.

I have 25 threads producing messages.  One is blocked here:

sun.misc.Unsafe.park(Native Method)
java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1841)
java.util.concurrent.LinkedBlockingQueue.put(LinkedBlockingQueue.java:253)
org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:92)
org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1176)
org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1170)
org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1743)
org.apache.activemq.ActiveMQMessageProducer.close(ActiveMQMessageProducer.java:147)
org.springframework.jms.support.JmsUtils.closeMessageProducer(JmsUtils.java:124)
org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:519)
org.springframework.jms.core.JmsTemplate$2.doInJms(JmsTemplate.java:477)
org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:428)
org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:475)

The rest are blocked here

org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:39)
org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1176)
org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1170)
org.apache.activemq.ActiveMQSession.<init>(ActiveMQSession.java:190)
org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:296)
sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
java.lang.reflect.Method.invoke(Method.java:585)
org.springframework.jms.connection.SingleConnectionFactory$SharedConnectionInvocationHandler.invoke(SingleConnectionFactory.java:418)
$Proxy30.createSession(Unknown Source)
org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:200)
org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:419)
org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:475)
","22/Feb/10 08:09;rajdavies;Ryan - your issues looks like https://issues.apache.org/activemq/browse/AMQ-2475 - which is fixed in 5.3.1 and 5.4","22/Feb/10 12:40;rajdavies;Tried this out on latest trunk today - I suspect the real problem was: https://issues.apache.org/activemq/browse/AMQ-2475
Looks fixed now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hangs possible because of Queue.doPageIn,AMQ-2413,12483007,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,cmacnaug,cmacnaug,25/Sep/09 01:26,25/Sep/09 08:34,30/Jan/20 16:55,25/Sep/09 08:34,5.4.0,,,,,,,5.3.0,,,Broker,,,,0,"I don't understand the intent of the following code in Queue.doPageIn() and in rev 818147 it was causing delivery to the consumer to get hung (temporarily until message expiration check kickstarts it again). See the commented out lines of code that determine how many messages to attempt to page in. 

{code}
    private List<QueueMessageReference> doPageIn(boolean force) throws Exception {
        List<QueueMessageReference> result = null;
        List<QueueMessageReference> resultList = null;
        synchronized(dispatchMutex) {
            //WHAT IS THIS DOING?
            //int toPageIn = getMaxPageSize() + Math.max(0, (int)destinationStatistics.getInflight().getCount()) -pagedInMessages.size();

            //DOES THIS MAKE MORE SENSE:
            int toPageIn = Math.min(getMaxPageSize(), messages.size());
            
            if (LOG.isDebugEnabled()) {
                LOG.debug(destination.getPhysicalName() + "" toPageIn: ""  + toPageIn + "", Inflight: ""
                        + destinationStatistics.getInflight().getCount()
                        + "", pagedInMessages.size "" + pagedInMessages.size());
            }
            
            //WHAT IS THIS DOING?
            //toPageIn = Math.max(0, Math.min(toPageIn, getMaxPageSize()));
                       
            if (isLazyDispatch()&& !force) {
                // Only page in the minimum number of messages which can be dispatched immediately.
                toPageIn = Math.min(getConsumerMessageCountBeforeFull(), toPageIn);
            }
   
{code}

It is definitely possible that I'm just not understanding the intent of the code, but whatever it is, it's not working, and consequently I'm not sure that the subsequent fixes on the branch have eliminated the problem. The attached patch contains both a unit test, that tests several combinations of ack mode, vm cursoring, and delivery mode, as well as version of Queue which should be applied against revirion 818147 -- this version has the fix commented out and preserves the buggy behavior","5.4 branch 818147. Some changes after this hide this error, but I'm still concerned it might be a problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/09 01:29;cmacnaug;AMQ-2413patch.txt;https://issues.apache.org/jira/secure/attachment/12461371/AMQ-2413patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-09-25 08:34:17.42,,,false,,,,,,,,,,,,,,,,,74954,,,Fri Sep 25 08:34:17 UTC 2009,,,,Patch Available,,,,"0|i0s06n:",161506,,,,,,,,,,,,,,,,,,,"25/Sep/09 01:29;cmacnaug;Patch with unit test and proposed fix. ","25/Sep/09 08:34;rajdavies;Patch looks good to me - applied in SVN 818762",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The MaximumPendingMessageLimit option is doesn't work  in .Net,AMQ-2164,12483012,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,tabish,pclovec,pclovec,16/Mar/09 16:58,14/Sep/09 13:58,30/Jan/20 16:55,14/Sep/09 13:58,5.2.0,,,,,,,5.3.0,,,JMS client,,,,0,"I tried to test the MaximumPendingMessageLimit property in donet . But it doesn't work. i tried to setup it in Code, and  ActiveMQ.XML ,it both doesn't work

1. Create a durable consumer
2. Create a producer and send message in topic (persistent send)
3. Consumer get message and try to block the consumer speed. (speed is slow )
4 Go to web console check the pendingmessage number
The number should be keeping the maxpendingmessage number. My consumer is slow the producer is faster. But I found out the number is still grow.

i will create another test poster and attach the test file in there
http://www.nabble.com/pendingmessagelimit-option-seems-doesn%27t-work!-td22447336r0.html

By the way there have another people test it , it also doesn't work for Java.
http://www.nabble.com/Fast-producers%2Cslow-consumer...-queue-growing-forever-td22373306.html

Thanks


Sample code---- include connection, session, consumer and producer

---------
public TopicConnection(IConnectionFactory connectionFactory, string clientId, string topicName)
{
this.connection = connectionFactory.CreateConnection() as Connection ;
this.connection.ClientId = clientId;

if (!this.connection.IsStarted)
{ this.connection.Start(); }

this.session = this.connection.CreateSession(AcknowledgementMode.ClientAcknowledge) as Session;
session.MaximumPendingMessageLimit = 10;
session.PrefetchSize = 20;
this.topic = new ActiveMQTopic(topicName);

}
-------------------------------

----- running another console to get message--
IMessageConsumer consumer = this.session.CreateDurableConsumer(this.topic, consumerId, ""2 > 1"", false);
consumer.Listener += new MessageListener(consumer_Listener);
void consumer_Listener(IMessage message)
{
ActiveMQTextMessage msg = message as ActiveMQTextMessage; Console.WriteLine(""Message received:"" + ""Id = "" + msg.NMSMessageId + "", Content:"" + msg.Text); Thread.sleep(1000);//block here message.Acknowledge(); 
}

---- running another console to send message
IMessageProducer producer = this.session.CreateProducer(this.topic);
while (true)
{
 publisher.SendMessage(""Message:"" + DateTime.Now.ToString(""yyyy-mm-dd HH:MM:ss"") + ""---"" + i.ToString() );
} 

And both setup it into activemq.xml
<destinationPolicy>
         <policyMap>
              <policyEntries>
                   <policyEntry topic="">"">
                           <dispatchPolicy>
                             <strictOrderDispatchPolicy />
                            </dispatchPolicy>
           <pendingMessageLimitStrategy>
              <constantPendingMessageLimitStrategy limit=""10""/>
            </pendingMessageLimitStrategy>

                    </policyEntry>
            </policyEntries>
       </policyMap>
</destinationPolicy 




"," ActiveMQ 5.2, XP 64,NMS, NMS.ActiveMQ, vs2008 ,java1.6 ant build the activemq ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/09 17:51;pclovec;ActiveMQPendingMessageTest.zip;https://issues.apache.org/jira/secure/attachment/12461405/ActiveMQPendingMessageTest.zip","16/Mar/09 17:51;pclovec;Activemq.xml;https://issues.apache.org/jira/secure/attachment/12461406/Activemq.xml",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-09-14 13:58:43.187,,,false,,,,,,,,,,,,,,,,,75046,,,Mon Sep 14 13:58:43 UTC 2009,,,,Patch Available,,,,"0|i0s073:",161508,Unit Test Broken,,,,,,,,,,,,,,,,,,"16/Mar/09 17:51;pclovec;Net .NMS VS2008","14/Sep/09 13:58;tabish;Fixed the NMS code so that it sets the max pending message limit in the Consumer Info when a consumer is created.

Fixed in SVN Rev: 814615",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-transactional and exclusive consumer may receive messages out-of-order.,AMQ-1897,12482840,12483329,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,tmielke,tmielke,19/Aug/08 20:02,13/Sep/09 10:40,30/Jan/20 16:55,13/Sep/09 10:40,5.1.0,,,,,,,5.3.0,,,Broker,,,,0,"With an env as described above it is possible to violate the exclusive consumer limitation. Initially with all three consumers being started and the producer sending messages, the exclusive consumer feature works fine. 
However if you kill and restart each consumer in a row, allowing another consumer to take over the exclusive right, you will eventually reach a state where a message that was already consumed by the previous exclusive consumer gets redelivered to the new exclusive consumer that has taken over the work. 
As consumers are non-transactional, they will autocommit every single message received, so each msgs gets deleted from the jdbc db sequentially. Hence if another exclusive consumer takes over it should only process messages >= the message number of the previous exclusive consumer. However this is not the case.

This bug is kind of related to AMQ-1896.","Environment: 
  * ActiveMQ 5.1.0
  * one broker using direct jdbc persistence (mysql)
  * transacted producer
  * non-transacted consumer!
  * 3 consumers but all configured for exclusive consumer
  * 1 producer that publishes msgs faster than consumers 
  * consumer using SESSION.AUTO_ACKNOWLEDGE
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Aug/08 20:04;tmielke;HelloWorldJMS_AMQ-1897.zip;https://issues.apache.org/jira/secure/attachment/12461217/HelloWorldJMS_AMQ-1897.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-09-13 10:40:18.343,,,false,,,,,,,,,,,,,,,,,75184,,,Sun Sep 13 10:40:18 UTC 2009,,,,,,,,"0|i0s0cn:",161533,,,,,,,,,,,,,,,,,,,"19/Aug/08 20:04;tmielke;Use testcase provided and follow steps in README_AMQ-1897.txt","13/Sep/09 10:40;rajdavies;Reduce prefetch to zero - see http://activemq.apache.org/what-is-the-prefetch-limit-for.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ with STOMP producer, multiple consumers -- ActiveMQ doesn't distribute correct messages to additional consumer AND Delivers messages out of order to newly connecting consumer.",AMQ-2155,12482902,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,bmoran,bmoran,10/Mar/09 22:28,12/Sep/09 07:00,30/Jan/20 16:55,12/Sep/09 07:00,5.1.0,5.2.0,,,,,,5.3.0,,,Broker,,,,0,"Using the stock ActiveMQ 5.2.0 install, with a very small producer and consumer (see source code here: http://groups.google.com/group/activemessaging-discuss/browse_thread/thread/0b45ae6f030a13af#) , using client :ack mode;
Adding additional consumers to a queue results has no affect on message distribution -- only the originally connected consumers receive the messages UNTIL the queue is empty, or the original message consumes disconnect. One would LIKE to be able to add additional consumers for a queue, and have the broker distrubute messages to those consumers -- this does NOT happen in 5.1.0 and 5.2.0.  

ALSO, when there are multiple consumers attached to the broker, performance can degrade so that only one or two consumers are being sent messages. THIS may be related, perhaps not.

ATTACHED is a dump of the STOMP TRANSPORT trace. 


","mac osx; rails 2.1.1; ruby 1.8.6;",bmoran,donv,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/09 22:37;bmoran;stomplog-1.log;https://issues.apache.org/jira/secure/attachment/12461390/stomplog-1.log",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75049,,,Fri May 29 05:16:15 UTC 2009,,,,,,,,"0|i0rzz3:",161472,,,,,,,,,,,,,,,,,,,"10/Mar/09 22:37;bmoran;Note that there two consumers initially connected, denoted by port - 55213, 55218. 
They process a number of messages, until 15:03:01,555 when 55305 connects/subscribes followed by 55309 then 55312, 55315,55318, 55324, etc.

NO messages are processed by any of the new consumers until the queue empties at 15:06:34.

A new batch of messages is queued at 15:20:13; this new set is distributed among the waiting consumers.
","22/Apr/09 05:50;bmoran;This is affecting a production environment now.
","23/Apr/09 17:06;bmoran;This appears to be related to the activemq.prefetchSize. Messages are also being dispatched out of order.

With the default prefetchSize (set to 1000 if the online docs are correct), using the code provided in this report, I do the following:
1) Clear the queues
2) Start one consumer
3) Queue 200 messages, 1 second delay (TestModel(200,1) in the example)
4) Start the 2nd consumer
5)  --- I observe that the 2nd consumer sees NO messages while the first consumer continues to process messages. EXPECTED BEHAVIOR: 2nd consumer should see messages
6) Queue 50 messages, 2 second delay(TestModel(50,2) in the example)
7) --- I observe that the 1st consumer is working on the original set of messages. The 2nd consumer starts to process the newly-queued 2-second messages- processing the Messages out of order. It only processes 1/2 of the messages that were queued (this 1/2 ratio of processed to queued was observed repeated for various #'s of queued messages
8) When the 2nd consumer stops, queue 4 messages of 3 second delay 
9) Observe that the 2nd consumer processes 2 of the 3 second delay messages, then stops. Also observe that consumer #1 is still processing 1 second messages: A listing of the messages in the queue shows gaps in the message sequences where messages have been removed and processed.
ID:shine.local-54798-1240240213473-4:11:-1:1:1432 		Persistent 	0 	false 		2009-04-23 09:56:46:037 PDT 		 Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1433 		Persistent 	0 	false 		2009-04-23 09:56:46:039 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1434 		Persistent 	0 	false 		2009-04-23 09:57:30:533 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1436 		Persistent 	0 	false 		2009-04-23 09:57:30:535 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1438 		Persistent 	0 	false 		2009-04-23 09:57:30:536 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1440 		Persistent 	0 	false 		2009-04-23 09:57:30:541 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1442 		Persistent 	0 	false 		2009-04-23 09:57:30:542 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1444 		Persistent 	0 	false 		2009-04-23 09:57:30:582 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1446 		Persistent 	0 	false 		2009-04-23 09:57:30:582 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1448 		Persistent 	0 	false 		2009-04-23 09:57:30:582 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1450 		Persistent 	0 	false 		2009-04-23 09:57:30:583 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1452 		Persistent 	0 	false 		2009-04-23 09:57:30:583 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1454 		Persistent 	0 	false 		2009-04-23 09:57:30:596 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1456 		Persistent 	0 	false 		2009-04-23 09:57:30:597 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1458 		Persistent 	0 	false 		2009-04-23 09:57:30:598 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1460 		Persistent 	0 	false 		2009-04-23 09:57:30:600 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1462 		Persistent 	0 	false 		2009-04-23 09:57:30:600 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1464 		Persistent 	0 	false 		2009-04-23 09:57:30:601 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1466 		Persistent 	0 	false 		2009-04-23 09:57:30:605 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1468 		Persistent 	0 	false 		2009-04-23 09:57:30:605 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1470 		Persistent 	0 	false 		2009-04-23 09:57:30:605 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1472 		Persistent 	0 	false 		2009-04-23 09:57:30:606 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1474 		Persistent 	0 	false 		2009-04-23 09:57:30:606 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1476 		Persistent 	0 	false 		2009-04-23 09:57:30:606 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1478 		Persistent 	0 	false 		2009-04-23 09:57:30:614 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1480 		Persistent 	0 	false 		2009-04-23 09:57:30:615 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1482 		Persistent 	0 	false 		2009-04-23 09:57:30:616 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1484 		Persistent 	0 	false 		2009-04-23 10:00:21:369 PDT 		Delete
ID:shine.local-54798-1240240213473-4:11:-1:1:1486 		Persistent 	0 	false 		2009-04-23 10:00:21:373 PDT 		Delete

10) Observe that Consumer 1 eventually processes the remaining 2 second and 3 second messages.




 ","23/Apr/09 17:08;bmoran;Tried various pre-fetch sizes.

prefetchsize of zero - NO messages delivered to initial or subsequent connecting consumers.

prefetchsize of 1 - subsequently connecting consumers get messages immediately, no issues with out of order messages.

","29/May/09 05:16;bmoran;We're working around this issue by limiting prefetch, using client_ack, and restarting the broker periodically.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Number of items in Topic queue never empties out (Queue Size in JMX for every topic seems to be > 0 all the time),AMQ-1600,12482991,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,sparky2708,sparky2708,25/Feb/08 21:41,12/Sep/09 06:45,30/Jan/20 16:55,12/Sep/09 06:45,5.1.0,,,,,,,5.3.0,,,Broker,,,,4,If I create a topic and then have a producer write to the topic (non-persistent message) the items in the queueSize in JMX appears to be the total messages that I sent. Even if I start the consumer the number of items on the queue never goes down. If I run the same code in 4.1.0 the queue size is always 0 which is the expected behavior -- something changed in 5.1... Will try on 5.0 in a few minutes.,Linux,jly,john.greeley,sparky2708,tpounds,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jul/08 21:01;sparky2708;untitled.JPG;https://issues.apache.org/jira/secure/attachment/12461228/untitled.JPG",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84809,,,Wed Jul 09 21:06:35 UTC 2008,,,,,,,,"0|i0rzx3:",161463,,,,,,,,,,,,,,,,,,,"25/Feb/08 23:27;sparky2708;Doesn't seem this problem exists in 5.0.0","09/Jul/08 21:01;sparky2708;running ActiveMQ 5.1.0:

How can Dequeuecount == Enqueuecount == Dispatchcount and QueueSize != 0?","09/Jul/08 21:06;sparky2708;Not really doing anything fancy to have this issue happen... just calling send many times: persistent = false and looking at JConsole... 

/*********************************************************************
	 * Create a connection to the messaging system
	 * 
	 * @param jms_url
	 * @param intf
	 * @param is_durable_subscriber
	 * @throws Exception
	 *********************************************************************/
	public void createConnection(String jms_url, MessageManagerIntf intf, boolean is_durable_subscriber) throws Exception {
		_jms_url = jms_url;
		_is_durable_subscriber = is_durable_subscriber;
		_msg_wrapper_intf = intf;
		
		log.info("""");
		log.info("""");
		log.info(""Creating Connection to: "" + jms_url);
		log.info("""");
		String user = ActiveMQConnection.DEFAULT_USER;
		String password = ActiveMQConnection.DEFAULT_PASSWORD;
		
		//jms_url = addJMSOptions(jms_url);
		ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(user, password, jms_url);
		connectionFactory.setDispatchAsync(true);
		connectionFactory.setUseAsyncSend(true);
		
		_connection = connectionFactory.createConnection();
		_connection.setExceptionListener(this);
		
		if (is_durable_subscriber)
			_connection.setClientID(_msg_wrapper_intf.getClass().getSimpleName());
		else {
			SimpleDateFormat f = new SimpleDateFormat(""M/d/yyyy h_mm_ss a"");
			Calendar cal = Calendar.getInstance();
			_connection.setClientID(_msg_wrapper_intf.getClass().getSimpleName().toLowerCase() + ""@"" +  InetAddress.getLocalHost().getHostName().toUpperCase() + ""-"" + f.format(cal.getTime()) + ""--"" + cal.getTimeInMillis());
		}
		
		log.info(""JMS VERSION: "" + _connection.getMetaData().getJMSVersion());
		log.info(""JMS PROVIDER: "" + _connection.getMetaData().getJMSProviderName());
		log.info(""JMS PROVIDER VERSION: "" + _connection.getMetaData().getProviderVersion());
		log.info(""CLIENT ID: "" + _connection.getClientID());
		
		_connection.start();
		_session = _connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
	}
	

public void send(String name, DESTINATION_TYPE destination_type, Destination reply_to, MessageIntf wrapper, boolean persistent) throws Exception { 
                Destination dest = createDestination(name, destination_type); 
                MessageProducer publisher = getProducer(dest, persistent); 
                          
                          //wrapper.generateXMLMessage() just generates some XML message. 
                TextMessage msg = _session.createTextMessage(wrapper.generateXMLMessage()); 
                msg.setJMSReplyTo(reply_to); 
                log.debug(this.getClass().getName() + "">>>>>> SENDING MESSAGE TO '"" + dest + ""': "" + wrapper.generateXMLMessage()); 
                publisher.send(msg); 
} 




        public MessageProducer getProducer(Destination dest, boolean persistent) throws Exception { 
                //just a little optimization so I don't have too many producing running amock. Have 1 producer per destination 

                         if (_producer_cache.containsKey(dest.toString())) 
                        return _producer_cache.get(dest.toString()); 
                
                MessageProducer publisher = _session.createProducer(dest); 
                if(persistent) 
                        publisher.setDeliveryMode(DeliveryMode.PERSISTENT); 
                else 
                        publisher.setDeliveryMode(DeliveryMode.NON_PERSISTENT); 
                
                _producer_cache.put(dest.toString(), publisher); 
                return publisher; 
        } 


/******************************************************************** 
         * Create a topic 
         * @param name 
         * @return 
         * @throws JMSException 
         * 
         *******************************************************************/ 
        public Destination createDestination(String name, DESTINATION_TYPE destination) throws JMSException { 
                switch (destination) { 
                case TOPIC: 
                        return _session.createTopic(name); 
                case QUEUE: 
                        return _session.createQueue(name); 
                default: 
                        return null; 
                } 
        } 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemoryError after 9505925 persistent messages,AMQ-2090,12482832,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,cybexion,cybexion,29/Jan/09 11:36,11/Sep/09 19:36,30/Jan/20 16:55,11/Sep/09 19:36,5.2.0,,,,,,,5.3.0,,,Message Store,,,,0,"When I was doing a high load 24/7 test where I produced 9505925 persistent small message (kaha) suddenly amq stopped working with an OutOfMemoryException. 
My memory settings are 
        -Xmn100M \ 
        -Xms500M \ 
        -Xmx1024M 

The Exception looks like this: 

Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:32929"" java.lang.OutOfMemoryError: Java heap space 
        at java.util.jar.Attributes.read(Attributes.java:377) 
        at java.util.jar.Manifest.read(Manifest.java:182) 
        at java.util.jar.Manifest.<init>(Manifest.java:52) 
        at java.util.jar.JarFile.getManifestFromReference(JarFile.java:165) 
        at java.util.jar.JarFile.getManifest(JarFile.java:146) 
        at sun.misc.URLClassPath$JarLoader$2.getManifest(URLClassPath.java:693) 
        at java.net.URLClassLoader.defineClass(URLClassLoader.java:221) 
        at java.net.URLClassLoader.access$000(URLClassLoader.java:56) 
        at java.net.URLClassLoader$1.run(URLClassLoader.java:195) 
        at java.security.AccessController.doPrivileged(Native Method) 
        at java.net.URLClassLoader.findClass(URLClassLoader.java:188) 
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307) 
        at java.lang.ClassLoader.loadClass(ClassLoader.java:252) 
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320) 
        at org.apache.activemq.broker.TransportConnection.serviceExceptionAsync(TransportConnection.java:244) 
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:841) 
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98) 
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36) 
Exception in thread ""ActiveMQ Scheduler"" java.lang.OutOfMemoryError: Java heap space 
        at java.util.HashMap.addEntry(HashMap.java:753) 
        at java.util.HashMap.put(HashMap.java:385) 
        at java.util.HashSet.add(HashSet.java:200) 
        at java.util.AbstractCollection.addAll(AbstractCollection.java:305) 
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.cleanup(AMQPersistenceAdapter.java:439) 
        at org.apache.activemq.store.amq.AMQPersistenceAdapter$3.run(AMQPersistenceAdapter.java:279) 
        at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33) 
        at java.util.TimerThread.mainLoop(Timer.java:512) 
        at java.util.TimerThread.run(Timer.java:462) 
Exception in thread ""RMI TCP Connection(idle)"" java.lang.OutOfMemoryError: Java heap space 
        at java.io.BufferedInputStream.<init>(BufferedInputStream.java:178) 
        at java.io.BufferedInputStream.<init>(BufferedInputStream.java:158) 
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:679) 
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649) 
Exception in thread ""RMI TCP Connection(idle)""  at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
        at java.lang.Thread.run(Thread.java:619) 
java.lang.OutOfMemoryError: Java heap space 
Exception in thread ""RMI TCP Connection(idle)"" java.lang.OutOfMemoryError: Java heap space 
Exception in thread ""RMI TCP Connection(idle)"" java.lang.OutOfMemoryError: Java heap space 
Exception in thread ""RMI TCP Connection(idle)"" java.lang.OutOfMemoryError: Java heap space 
Exception in thread ""RMI TCP Connection(idle)"" java.lang.OutOfMemoryError: Java heap space 
Exception in thread ""RMI TCP Connection(idle)"" java.lang.OutOfMemoryError: Java heap space 
Exception in thread ""InactivityMonitor WriteCheck"" java.lang.OutOfMemoryError: Java heap space 
Exception in thread ""RMI TCP Connection(idle)"" java.lang.OutOfMemoryError: Java heap space 
Exception in thread ""RMI TCP Connection(idle)"" java.lang.OutOfMemoryError: Java heap space 
... 


The stdout looks like this: 
2009-01-28 10:48:35,664 [ueue://tracking] DEBUG vemq.store.amq.AMQMessageStore - Batch update done. 
2009-01-28 10:48:33,537 [iveMQ Scheduler] DEBUG tore.amq.AMQPersistenceAdapter - lastDataFile: 5663 
2009-01-28 10:48:27,177 [itor WriteCheck] DEBUG .transport.InactivityMonitor$2 - 72107 ms elapsed since last write check. 
2009-01-28 10:48:56,877 [iveMQ Scheduler] DEBUG ha.impl.async.AsyncDataManager - lastFileId=5662, purgeList: (0) [] 
2009-01-28 10:48:52,634 [ueue://tracking] DEBUG vemq.store.amq.AMQMessageStore - Doing batch update... adding: 3 removing: 4 
2009-01-28 10:48:48,395 [127.0.0.1:39844] DEBUG vemq.store.amq.AMQMessageStore - Journalled message add for: ID:adbl006-40098-1233049753494-0:38:3395:1:2, 
 at: offset = 168080, file = 5663, size = 384, type = 1 
2009-01-28 10:48:48,395 [127.0.0.1:32929] DEBUG vemq.store.amq.AMQMessageStore - Journalled message remove for: ID:adbl006-40098-1233049753494-0:30:278402 
8:1:1, at: offset = 167801, file = 5663, size = 279, type = 1 
2009-01-28 10:48:37,784 [nitor ReadCheck] DEBUG .transport.InactivityMonitor$1 - 27573 ms elapsed since last read check. 
2009-01-28 10:51:32,122 [127.0.0.1:39844] DEBUG vemq.store.amq.AMQMessageStore - Journalled message add for: ID:adbl006-40098-1233049753494-0:38:3392:1:2, 
 at: offset = 168464, file = 5663, size = 384, type = 1 
2009-01-28 10:51:27,528 [ueue://tracking] DEBUG vemq.store.amq.AMQMessageStore - Batch update done. 
2009-01-28 10:50:48,614 [itor WriteCheck] DEBUG .transport.InactivityMonitor$2 - 165814 ms elapsed since last write check. 
2009-01-28 10:50:48,614 [iveMQ Scheduler] DEBUG tore.amq.AMQPersistenceAdapter - dataFilesInProgress.values: (1) [{5663=3}] 
2009-01-28 10:51:40,604 [ueue://tracking] DEBUG vemq.store.amq.AMQMessageStore - Doing batch update... adding: 2 removing: 1 
2009-01-28 10:51:36,365 [127.0.0.1:39844] DEBUG vemq.store.amq.AMQMessageStore - Journalled message add for: ID:adbl006-40098-1233049753494-0:38:3391:1:2, 
 at: offset = 169127, file = 5663, size = 384, type = 1 
2009-01-28 10:51:32,122 [127.0.0.1:32929] DEBUG vemq.store.amq.AMQMessageStore - Journalled message remove for: ID:adbl006-40098-1233049753494-0:30:278403 
2:1:1, at: offset = 168848, file = 5663, size = 279, type = 1 
2009-01-28 10:51:32,122 [nitor ReadCheck] DEBUG .transport.InactivityMonitor$1 - 197674 ms elapsed since last read check. 
2009-01-28 10:55:28,803 [127.0.0.1:39844] DEBUG vemq.store.amq.AMQMessageStore - Journalled message add for: ID:adbl006-40098-1233049753494-0:38:3385:1:2, 
 at: offset = 169511, file = 5663, size = 384, type = 1 
2009-01-28 10:55:28,803 [ueue://tracking] DEBUG vemq.store.amq.AMQMessageStore - Batch update done. 
2009-01-28 11:09:10,234 [.21.150.21:8161] ERROR rg.slf4j.impl.JCLLoggerAdapter - EXCEPTION 
java.lang.OutOfMemoryError: Java heap space 
2009-01-28 10:58:33,322 [127.0.0.1:39844] DEBUG vemq.store.amq.AMQMessageStore - Journalled message add for: ID:adbl006-40098-1233049753494-0:38:3383:1:2, 
 at: offset = 170174, file = 5663, size = 384, type = 1 
2009-01-28 10:55:51,594 [127.0.0.1:32929] DEBUG vemq.store.amq.AMQMessageStore - Journalled message remove for: ID:adbl006-40098-1233049753494-0:30:278372 
5:1:7, at: offset = 169895, file = 5663, size = 279, type = 1 
2009-01-28 10:55:42,624 [nitor ReadCheck] DEBUG .transport.InactivityMonitor$1 - 424840 ms elapsed since last read check. 
2009-01-28 11:17:46,299 [127.0.0.1:39844] DEBUG vemq.store.amq.AMQMessageStore - Journalled message add for: ID:adbl006-40098-1233049753494-0:38:2915:1:4, 
 at: offset = 170558, file = 5663, size = 384, type = 1 
2009-01-28 11:17:03,736 [127.0.0.1:32929] DEBUG vemq.store.amq.AMQMessageStore - Journalled message remove for: ID:adbl006-40098-1233049753494-0:30:278403 
3:1:1, at: offset = 170942, file = 5663, size = 279, type = 1 
2009-01-28 11:13:41,738 [3895909@qtp0-14] ERROR rg.slf4j.impl.JCLLoggerAdapter - /admin/queues.jsp 
java.lang.OutOfMemoryError: Java heap space 
2009-01-28 11:09:25,197 [Timer-0        ] ERROR rg.slf4j.impl.JCLLoggerAdapter - Problem scavenging sessions 
java.lang.OutOfMemoryError: Java heap space 
2009-01-28 11:19:30,007 [127.0.0.1:32929] DEBUG vemq.store.amq.AMQMessageStore - Journalled message remove for: ID:adbl006-40098-1233049753494-0:30:278403 
5:1:1, at: offset = 171605, file = 5663, size = 279, type = 1 
2009-01-28 11:18:50,504 [127.0.0.1:39844] DEBUG vemq.store.amq.AMQMessageStore - Journalled message add for: ID:adbl006-40098-1233049753494-0:38:3328:1:3, 
 at: offset = 171221, file = 5663, size = 384, type = 1 
2009-01-28 11:17:46,299 [nitor ReadCheck] DEBUG .transport.InactivityMonitor$1 - 1574177 ms elapsed since last read check. 
2009-01-28 11:30:42,525 [127.0.0.1:32929] DEBUG emq.broker.TransportConnection - Transport failed: java.io.IOException: Unexpected error occured 
java.io.IOException: Unexpected error occured 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:192) 
        at java.lang.Thread.run(Thread.java:619) 
Caused by: java.lang.OutOfMemoryError: Java heap space 
2009-01-28 11:31:20,726 [127.0.0.1:39844] DEBUG emq.broker.TransportConnection - Transport failed: java.io.IOException: Unexpected error occured 
java.io.IOException: Unexpected error occured 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:192) 
        at java.lang.Thread.run(Thread.java:619) 
Caused by: java.lang.OutOfMemoryError: Java heap space 
2009-01-28 11:39:58,676 [127.0.0.1:39844] DEBUG emq.broker.TransportConnection - Stopping connection: /127.0.0.1:39844 
2009-01-28 11:40:07,371 [127.0.0.1:32929] DEBUG emq.broker.TransportConnection - Stopping connection: /127.0.0.1:32929 
2009-01-28 11:41:04,406 [127.0.0.1:39844] DEBUG emq.transport.tcp.TcpTransport - Stopping transport tcp:///127.0.0.1:39844 
2009-01-28 11:41:26,226 [127.0.0.1:32929] DEBUG emq.transport.tcp.TcpTransport - Stopping transport tcp:///127.0.0.1:32929 
2009-01-28 11:43:11,185 [127.0.0.1:39844] DEBUG emq.broker.TransportConnection - Stopped transport: /127.0.0.1:39844 
2009-01-28 11:47:36,654 [127.0.0.1:32929] DEBUG emq.broker.TransportConnection - Stopped transport: /127.0.0.1:32929 
2009-01-28 11:52:06,738 [127.0.0.1:32929] DEBUG emq.broker.TransportConnection - Cleaning up connection resources: /127.0.0.1:32929 
2009-01-28 11:53:30,458 [127.0.0.1:32929] DEBUG q.broker.region.AbstractRegion - Removing consumer: ID:adbl006-40098-1233049753494-0:0:-1:1 
2009-01-28 11:55:40,444 [127.0.0.1:32929] DEBUG q.broker.region.AbstractRegion - Removing consumer: ID:adbl006-40098-1233049753494-0:0:1:1 
2009-01-28 11:51:49,128 [127.0.0.1:39844] DEBUG emq.broker.TransportConnection - Cleaning up connection resources: /127.0.0.1:39844 
2009-01-28 11:56:07,668 [127.0.0.1:32929] WARN  emq.broker.TransportConnection - Failed to remove consumer: ID:adbl006-40098-1233049753494-0:0:1:1. Reason 
: java.lang.OutOfMemoryError: Java heap space 
java.lang.OutOfMemoryError: Java heap space 
2009-01-28 11:56:23,041 [127.0.0.1:32929] DEBUG emq.broker.TransportConnection - Connection Stopped: /127.0.0.1:32929 
2009-01-28 11:56:23,040 [127.0.0.1:39844] DEBUG q.broker.region.AbstractRegion - Removing consumer: ID:adbl006-40098-1233049753494-0:38:-1:1 
2009-01-28 11:56:46,289 [127.0.0.1:39844] DEBUG emq.broker.TransportConnection - Connection Stopped: /127.0.0.1:39844 


activemq.xml looks like:
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>


        <bean id=""store"" class=""org.apache.activemq.store.amq.AMQPersistenceAdapter"">
                <property name=""directory"" value=""${activemq.base}/data""/>
                <!-- 1GB = 1073741824 -->
                <!-- 1MB = 1048576 -->
                <property name=""maxFileLength""          value=""1048576""/>
                <property name=""maxReferenceFileLength"" value=""1048576""/>
                <property name=""checkpointInterval""     value=""60000""/>
                <property name=""cleanupInterval""        value=""30000""/>
                <property name=""persistentIndex""        value=""true""/>
                <property name=""indexMaxBinSize""        value=""10485760""/>
                <property name=""indexBinSize""           value=""1048576""/>
                <property name=""indexPageSize""          value=""65536""/>
        </bean>


    <broker xmlns=""http://activemq.apache.org/schema/core""
        persistent=""true""
        advisorySupport=""false""
        deleteAllMessagesOnStartup=""true""
        useJmx=""true""
        monitorConnectionSplits=""false""
        splitSystemUsageForProducersConsumers=""false""
        brokerName=""localhost""
        dataDirectory=""${activemq.base}/data""
        persistenceAdapter=""#store""
        >


        <!--  The maximum about of space the broker will use before slowing down producers -->
        <systemUsage>
            <systemUsage sendFailIfNoSpace=""true"">
                <memoryUsage>
                    <memoryUsage limit=""1gb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""1gb"" store=""#store""/>
                </storeUsage>

                <!-- temp usage is used with non persistent messages only -->
                <tempUsage>
                    <tempUsage limit=""64mb""/>
                </tempUsage>
            </systemUsage>


        <!-- Use the following to configure how ActiveMQ is exposed in JMX -->
        <managementContext>
            <managementContext createConnector=""true""/>
        </managementContext>

        <!-- The transport connectors ActiveMQ will listen to -->
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://localhost:61616"" />
        </transportConnectors>

    </broker>

    <!-- An embedded servlet engine for serving up the Admin console -->
    <jetty xmlns=""http://mortbay.com/schemas/jetty/1.0"">
        <connectors>
            <nioConnector host=""172.21.150.21"" port=""8161""/>
        </connectors>

        <handlers>
            <webAppContext contextPath=""/admin"" resourceBase=""${activemq.home}/webapps/admin"" logUrlOnStart=""true""/>
        </handlers>
    </jetty>
</beans>


Other JMS related settings where (spring):
cookie.logic.jms.consumers.min=1
cookie.logic.jms.consumers.max=1
cookie.logic.jms.ActiveMQPrefetchPolicy.prefetchPolicy.queuePrefetch=100

cookie.logic.jms.activemq.broker=tcp://127.0.0.1:61616
cookie.logic.jms.ActiveMQConnectionFactory.jmsFactoryAMQ.useAsyncSend=true
cookie.logic.jms.ActiveMQConnectionFactory.jmsFactoryAMQ.alwaysSessionAsync=true
cookie.logic.jms.ActiveMQConnectionFactory.jmsFactoryAMQ.dispatchAsync=true
cookie.logic.jms.ActiveMQConnectionFactory.jmsFactoryAMQ.optimizeAcknowledge=false
cookie.logic.jms.ActiveMQConnectionFactory.jmsFactoryAMQ.copyMessageOnSend=false
cookie.logic.jms.ActiveMQConnectionFactory.jmsFactoryAMQ.disableTimeStampsByDefault=true
cookie.logic.jms.PooledConnectionFactory.pooledJmsFactory.maxConnections=1

cookie.logic.jms.JmsTemplate.jmsTemplate.messageIdEnabled=false
cookie.logic.jms.JmsTemplate.jmsTemplate.messageTimestampEnabled=false
cookie.logic.jms.JmsTemplate.jmsTemplate.pubSubNoLocal=false
cookie.logic.jms.JmsTemplate.jmsTemplate.receiveTimeout=-1
# next line has to be set to true if we want to specify non persistent messages
cookie.logic.jms.JmsTemplate.jmsTemplate.explicitQosEnabled=true
cookie.logic.jms.JmsTemplate.jmsTemplate.deliveryMode=javax.jms.DeliveryMode.PERSISTENT



","Debian 64 bit, 8 GB mem,  jdk1.6.0_10, apache-activemq-5.2.0.1-fuse
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-03-13 18:53:46.931,,,false,,,,,,,,,,,,,,,,,75079,,,Fri Sep 11 19:36:33 UTC 2009,,,,,,,,"0|i0s0bz:",161530,,,,,,,,,,,,,,,,,,,"13/Mar/09 18:53;yinghe0101;take a look at https://issues.apache.org/activemq/browse/AMQ-1868

the max heap size you configured is 1g and also memory limit in systemUsage is 1g, that might be a problem. make max heap size greater than memoryLimit, it might help.","11/Sep/09 19:36;rajdavies;See Ying's comment",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reply queue performance hit upgrading to 5.2,AMQ-2136,12482819,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,hackingbear,hackingbear,21/Feb/09 21:52,11/Sep/09 19:35,30/Jan/20 16:55,11/Sep/09 19:35,5.2.0,,,,,,,5.3.0,,,Performance Test,,,,1,"When upgrading to AMQ 5.2, my application gets 10x slower. This is traced to the usage of reply queue. I have written a test case (will be attached.)

In 5.1,
sender: 16.0 seconds spent for sending 8000 times, avg. 500.0msg/s

In 5.2:
sender: 432.0 seconds spent for sending 10000 times, avg. 23.148148msg/s

I have tried arrange the steps a bit (see commented out line,) no help.
","Windows Vista, JDK 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/09 23:39;hackingbear;test.java;https://issues.apache.org/jira/secure/attachment/12461354/test.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-02-23 12:29:05.368,,,false,,,,,,,,,,,,,,,,,75059,,,Fri Sep 11 19:35:07 UTC 2009,,,,,,,,"0|i0s0cf:",161532,,,,,,,,,,,,,,,,,,,"21/Feb/09 23:39;hackingbear;Note: two classes in the file","21/Feb/09 23:41;hackingbear;BTW it seems the problem is with transacted and CLIENT_ACK. With non-transacted session, it gets to 500 msg/s. But I don't understand why.
","22/Feb/09 05:26;hackingbear;OK, I found out the direct cause. The default amqPersistence store somehow slows to a hell.

After I change the persistence adaptor to

        <persistenceAdapter>
	    <kahaPersistenceAdapter directory=""activemq-data"" maxDataFileLength=""33554432""/>
            <!--amqPersistenceAdapter syncOnWrite=""false"" directory=""${activemq.base}/data"" maxFileLength=""20 mb""/-->
        </persistenceAdapter>

The performance number goes up to the roof -- 1000 msg/s.

cleaning out the old data/ directory content wouldn't help the poor amq persistence store either.","23/Feb/09 12:29;gtully;use of a transaction has an impact because a transaction boundary needs to be accompanied with a disk write and disk sync. 5.1 did not honor the need to do a disk sync on a transaction boundary and hence it is faster in this regard. 5.2 does the right thing.
Transactions will help if you do batch updates, but the overhead of transaction demarcation is noticeable when there is a a small amount of activity (like one message send or consume) in the transaction.","24/Feb/09 05:19;hackingbear;Transaction is needed if several messages are sent together. 

But why does the Kaha store (w/ 5.2) work much faster? In any case, 23 msg/s in transact mode seems too slow.  A database can beat it easily.


","29/Mar/09 21:27;hackingbear;Any comment and feedback on this bug?","30/Mar/09 10:41;tschoeftner;I have a similar performance problem using ActiveMQ via Spring 2.5.6.
Due to performance issues, I created a load-test for evaluation of the messaging performance:

The test basically sends 1000 messages which are later retrieved by 100 simultaneous consumers.
Each consumer waits 1 sec before returning the acknowledgement - every 10th consumer waits 10 secs.

Theoretically, all messges should be successfully handled in ~20secs.
With ActiveMQ 5.1, it takes ~50secs, but with 5.2 it's even slower (90secs).

This is strange because the server and consumer configuration has not changed.
Switching from AmqPersistance to KahaPersistance has no effect either.
BTW, currently there is no TransactionManager used.

Any ideas where to start looking? - Thx.
","11/Sep/09 19:35;rajdavies;Ran test case against 5.3 - got throughput of 615.38464msg/s",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
An application but always throw out of memory exception ,AMQ-2142,12482618,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,gongdonghui,gongdonghui,25/Feb/09 06:43,11/Sep/09 17:32,30/Jan/20 16:55,11/Sep/09 17:32,5.1.0,,,,,,,5.3.0,,,,,,,0,"Exception in thread ""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1a55477"" java.lang.OutOfMemoryError: unable to create new native thread
	at java.lang.Thread.start0(Native Method)
	at java.lang.Thread.start(Unknown Source)
	at org.apache.activemq.broker.TransportConnection.stopAsync(TransportConnection.java:904)
	at org.apache.activemq.broker.TransportConnection.serviceTransportException(TransportConnection.java:218)
	at org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:192)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:99)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:99)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:152)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:244)
	at org.apache.activemq.transport.InactivityMonitor$4.run(InactivityMonitor.java:164)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Exception in thread ""ActiveMQ Transport Initiator: /218.26.227.189:12572"" java.lang.OutOfMemoryError: unable to create new native thread
	at java.lang.Thread.start0(Native Method)
	at java.lang.Thread.start(Unknown Source)
	at org.apache.activemq.transport.TransportThreadSupport.doStart(TransportThreadSupport.java:43)
	at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:382)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:50)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
	at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
	at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:850)
	at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:213)
Exception in thread ""InactivityMonitor WriteCheck"" java.lang.OutOfMemoryError: unable to create new native thread
	at java.lang.Thread.start0(Native Method)
	at java.lang.Thread.start(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.addIfUnderMaximumPoolSize(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.execute(Unknown Source)
	at org.apache.activemq.transport.InactivityMonitor.writeCheck(InactivityMonitor.java:128)
	at org.apache.activemq.transport.InactivityMonitor$2.run(InactivityMonitor.java:103)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Unknown Source)
	at java.util.TimerThread.run(Unknown Source)","Apache tomcat 6.0.13 tomcat memory1024M  stack memory maxim256M  thread stack size 4096KB

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-09-11 17:32:19.714,,,false,,,,,,,,,,,,,,,,,75056,,,Fri Sep 11 17:32:19 UTC 2009,,,,,,,,"0|i0s0br:",161529,,,,,,,,,,,,,,,,,,,"11/Sep/09 17:32;rajdavies;dedicatedTaskRunner (no separate thread to run a task) is now off by default",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message expriation causes that receiver gets stuck,AMQ-2140,12482707,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,durokuruc,durokuruc,23/Feb/09 17:42,09/Sep/09 10:55,30/Jan/20 16:55,09/Sep/09 10:55,5.1.0,,,,,,,5.3.0,,,Broker,,,,2,"Using TimeToLive on message producer set on value <> 0 causes that receiver stops to receive messages at specific circumstances (see test case descr.),until receiver is restarted.

Steps to reproduce:
- start RedeliveryConsumer (waits 1000ms to ack)
- start DlqConsumer
- start RedeliveryProducer (timeToLive=500ms)

Result:
- only first message is received and acknowledged by RedeliveryConsumer
- after restart of RedeliveryConsumer another 9 are received by DlqConsumer

Similar behaviour was observed if message expires between delivery and first redelivery (after first calling session recover) client stops to receive and messages aren't post even to DLQ.Any further sending has no effect on receiver.
This behaviour is independent on destination type (queue/topic) or using of persistency. Using of message expiration therefore become unreliable.
","WinXP,
Java(TM) SE Runtime Environment (build 1.6.0_05-b13)",durokuruc,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Feb/09 17:43;durokuruc;ttl_amq_bug.zip;https://issues.apache.org/jira/secure/attachment/12461366/ttl_amq_bug.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-05-20 12:41:01.488,,,false,,,,,,,,,,,,,,,,,75057,,,Wed Sep 09 10:55:55 UTC 2009,,,,,,,,"0|i0rzxr:",161466,,,,,,,,,,,,,,,,,,,"20/May/09 12:41;fabienbrousse;Tested with 5.2.0, almost same behaviour.","09/Sep/09 10:55;rajdavies;Set the prefetch to zero for the consumer - see http://activemq.apache.org/what-is-the-prefetch-limit-for.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error with virtual topic with more than one consumer name,AMQ-1687,12482687,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,krm1312,krm1312,24/Apr/08 19:44,09/Sep/09 10:18,30/Jan/20 16:55,09/Sep/09 10:18,5.1.0,,,,,,,5.3.0,,,Broker,,,,1,"Tried upgrading to 5.1 today.  Seems virtual topics are broken with more than one different consumer name/queue.  This is a show-stopper for us as we're using this feature fairly heavily in 4.1 (with some issues, but none like this).

ERROR Service                        - Async error occurred: java.lang.ClassCastException: org.apache.activemq.broker.region.Topic cannot be cast to org.apache.activemq.broker.region.Queue
java.lang.ClassCastException: org.apache.activemq.broker.region.Topic cannot be cast to org.apache.activemq.broker.region.Queue
        at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:50)
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:224)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:359)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:443)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
        at java.lang.Thread.run(Thread.java:619)

This can be reproduced by modifying the existing VirtualTopicPubSubTest as attached (have two different consumer names).  I could not get it to error with an internal broker.  The easiest way to reproduce is to start an external broker and then run the attached test.  It seems to be important that the broker start clean.

",Activemq 5.1.0 (04/23/08). java 1.6.0_02.,carloc,krm1312,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Apr/08 19:44;krm1312;ASF.LICENSE.NOT.GRANTED--VirtualTopicPubSubTest.java;https://issues.apache.org/jira/secure/attachment/12461035/ASF.LICENSE.NOT.GRANTED--VirtualTopicPubSubTest.java","16/May/08 22:36;ammulder;GenericConsumer.java;https://issues.apache.org/jira/secure/attachment/12461116/GenericConsumer.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-05-16 22:36:21.287,,,false,,,,,,,,,,,,,,,,,84797,,,Fri May 16 22:36:58 UTC 2008,,,,,,,,"0|i0rzxb:",161464,Regression,,,,,,,,,,,,,,,,,,"16/May/08 22:36;ammulder;For what it's worth, I did not see this with the attached consumer test for a VirtualTopic.  It is sure inefficient, but whatever.  Maybe this will help narrow down where the problem might be.","16/May/08 22:36;ammulder;I should clarify -- my comment was regarding the ""GenericConsumer.java"" attachment.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ doesnt accept connections, and displays error like "" Transport ERROR: Could not accept conenctions ,connection reset. Also the message count is not displayed properly. The messages received is less than messages passed.",AMQ-2340,12483031,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,activemq5.2user,activemq5.2user,03/Aug/09 12:57,04/Sep/09 19:06,30/Jan/20 16:55,04/Sep/09 19:05,5.2.0,,,,,,,5.3.0,,,Transport,,,,0,"We are planning to use it in production,but we are getting following issues on Linux:

1) The activemq after some time starts rejecting connections giving error ""Transport Error: Could not accept connections,Connection reset""
2)  The messages count is not correct..the messages received is less than messages sent.

Please suggest us the changes we need to do for using it in production.",I am using it on Linux operating system. And version is 5.2.0.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-08-06 16:07:29.735,,,false,,,,,,,,,,,,,,,,,74975,,,Fri Sep 04 19:05:51 UTC 2009,,,,,,,,"0|i0s06v:",161507,,,,,,,,,,,,,,,,,,,"05/Aug/09 09:33;activemq5.2user;This is very critical for us ,can anyone please take a look at it?","06/Aug/09 16:07;rajdavies;It looks like ActiveMQ is running out of file descriptors - you'll need to provide information on your configuration and usage scenario.
You can try nio// transport.

Also check out this faq: http://activemq.apache.org/how-do-i-configure-10s-of-1000s-of-queues-in-a-single-broker-.html","04/Sep/09 19:05;rajdavies;Use 5.3 configuration will fix this issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Closing an ActiveMQ connection causes 1.5 JVM to crash,AMQ-1594,12482951,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,sparky2708,sparky2708,22/Feb/08 16:28,29/Aug/09 05:58,30/Jan/20 16:55,29/Aug/09 05:58,4.1.1,5.0.0,5.1.0,,,,,5.3.0,,,Broker,,,,0,"When I call ""closeConnection()""  (see below) after establishing a new connection to activeMQ my JVM crashes (see jvm crash log attached):

Here are the details:
I open a connection to activemq in the following manner:

{code}
private Session _session;
private Connection _connection;
private String _jms_url;
private boolean _is_durable_subscriber;
private MessageWrapperIntf _msg_wrapper_intf;
protected static Logger log = Log.getLogger(MessageManager.class);

public void createConnection(String jms_url, MessageWrapperIntf intf, boolean is_durable_subscriber) throws Exception {
 _jms_url = jms_url;
 _is_durable_subscriber = is_durable_subscriber;
 _msg_wrapper_intf = intf;
 
 log.info("""");
 log.info("""");
 log.info(""Creating Connection to: "" + jms_url);
 log.info("""");
 String user = ActiveMQConnection.DEFAULT_USER;
 String password = ActiveMQConnection.DEFAULT_PASSWORD;

 //jms_url = addJMSOptions(jms_url);
 ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(user, password, jms_url);
 connectionFactory.setDispatchAsync(true);
 connectionFactory.setUseAsyncSend(true);
 
 _connection = connectionFactory.createConnection();
 _connection.setExceptionListener(this);

 if (is_durable_subscriber)
 	_connection.setClientID(_msg_wrapper_intf.getClass().getName());
 
 _connection.start();
 _session = _connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
}

and then I close the connection as following:

public void closeConnection() throws Exception {
if (_session != null)
	_session.close();

if (_connection != null) {
	_connection.stop();
	_connection.close();
}
}
{code}
",Linux (see attached file for more specs),sparky2708,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/08 16:28;sparky2708;ASF.LICENSE.NOT.GRANTED--hs_err_pid858.log;https://issues.apache.org/jira/secure/attachment/12460903/ASF.LICENSE.NOT.GRANTED--hs_err_pid858.log",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-10-14 22:37:17.782,,,false,,,,,,,,,,,,,,,,,84518,,,Sat Aug 29 05:58:09 UTC 2009,,,,,,,,"0|i0rzv3:",161454,,,,,,,,,,,,,,,,,,,"14/Oct/08 22:37;bsnyder;It looks like the JVM crashed trying to read an entry in a ZIP file. I'm not sure if it's an issue with the libzip.so in the JRE/JDK that you're using or a problem with the JAR file from which the class is being loaded. First, I'd try to install a new copy of the JRE/JDK (from a fresh download of it) to check that it's not the libzip.so. If the JVM still crashes, then I'd try grabbing a fresh copy of the ActiveMQ libraries. It's possible that something was damaged during a download. 

FWIW, when I encounter oddities like this with JAR files, I tend to use the {{jar}} utility to get a table of contents on the JARs as a test of those JARs. Below is an example: 

{code}
$ for i in `ls /path/to/location/of/jar/files/*.jar`; do echo $i; jar tvf $i; done 
{code}","29/Aug/09 05:58;rajdavies;This hasn't been reproduced in our environment - or reported by other users",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq stops dispatching messages aborting transaction (STOMP),AMQ-1807,12483069,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,dejanb,cpinto,cpinto,18/Jun/08 10:12,19/Aug/09 11:37,30/Jan/20 16:55,05/Aug/09 14:48,5.1.0,,,,,,,5.3.0,,,Transport,,,,3,"As requested by Dejan Bosanac, I'm adding this ticket. I'm willing to help fix it, ie. I can get my hands dirty, but I must have some pointers on where to look because (unfortunately) I don't have much time to learn ActiveMQ's internals and architecture.

A copy of the email I sent to the users mailing-list:
=============================================

I'm currently struggling to understand the reason behind that's causing the behaviour described in the subject: I'm connecting to activemq via stomp on a python app. Because I need to have the messages rolled back in case of some processing failure I'm wrapping the message processing in the following way:

 message received -> start transaction -> ack message in transaction ->
process message -> if no exception commit tx, else rollback transaction


AFAIK, this is the only way of making message unacknowledgement possible with stomp. Also, this is a single client connection, ie. I'm using a
single client connection to create a message processing daemon, all messages are sent and received via this single connection to the MQ server.

Here's a telnet session that can be used to reproduce the problem (open jconsole and send 5 text messages to the queue):

% telnet localhost 61613
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
CONNECT

^@
CONNECTED
session:ID:starfish-53281-1213736462979-2:2


SUBSCRIBE
destination: /queue/testq
ack: client
activemq.prefetchSize: 1

^@
MESSAGE
message-id:ID:starfish-53281-1213736462979-3:3:1:1:1
destination:/queue/testq
timestamp:1213736837743
expires:0
priority:0

1
BEGIN
transaction: 1

^@
ACK
message-id:ID:starfish-53281-1213736462979-3:3:1:1:1
transaction: 1

^@
MESSAGE
message-id:ID:starfish-53281-1213736462979-3:4:1:1:1
destination:/queue/testq
timestamp:1213736840224
expires:0
priority:0

2
MESSAGE
message-id:ID:starfish-53281-1213736462979-3:5:1:1:1
destination:/queue/testq
timestamp:1213736842611
expires:0
priority:0

3
ABORT   
transaction: 1

^@
BEGIN 
transaction:2

^@
ACK
message-id:ID:starfish-53281-1213736462979-3:4:1:1:1
transaction:2

^@
ABORT
transaction:2

^@
ACK
message-id:ID:starfish-53281-1213736462979-3:5:1:1:1

^@


I see a couple of issues here:

#1) even though I specified activemq.prefetchSize to 1 in the subscription command, the connector dispatches two messages in a row

#2) no more messages are dispatched after aborting the transaction/acknowledging the last received message. Even if the second message isn't wrapped in a transaction, message dispatch stops there.

To add to the confusion, if I don't use transactions _at all_, my client keeps getting messages, one by one, ie. no two messages are sent together, I only get a new message after ACK'ing the previous one.

I think I may be stepping into the realms of a buggy STOMP connector. Please tell me if I'm missing something obvious that fixes this issue
(hence making it a non-issue) or if indeed the STOMP connector has problems.","Linux, JDK 1.6_06b2",cpinto,dejanb,donv,ervandew,john.greeley,pkozelka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jul/08 00:00;cpinto;stomp_test.patch;https://issues.apache.org/jira/secure/attachment/12461213/stomp_test.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-12-16 11:12:17.854,,,false,,,,,,,,,,,,,,,,,43750,,,Wed Aug 19 11:37:03 UTC 2009,,,,,,,,"0|i0rzvb:",161455,,,,,,,,,,,,,,,,,,,"01/Jul/08 00:00;cpinto;This test uncovers two messages being dispatched on client ACK","01/Jul/08 00:06;cpinto;I've attached a patch for tests that displays the error described on #1. Digging through the code, I found it is related with the following piece of code in activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java at line 230:

prefetchExtension = Math.max(prefetchExtension, index + 1);

This code is broken because when the first message is dispatched to the client, prefetchExtension isn't incremented so when the client ACKs the first message, index is incremented to 1 and Math.max() returns 2 so two messages are dispatched.

Can anyone please explain what prefetchExtension is supposed to do and how changing it impacts the rest of the code? I've asked on IRC and received no replies, same thing on activemq-devel mailing list. ","16/Dec/08 11:12;dejanb;I've committed a change (along with a test case) regarding the prefetch size problem. I've changed ""index + 1"" with ""index"", since it is being incremented earlier. All tests are passing. If anyone else can take a look at this as well it would be great.","29/Jan/09 16:19;dejanb;The problem with dispatch stopping after transaction abort was due to the fact that messages were acked at the moment they were dispatched and we didn't have any logic to redeliver them after the rollback. I implemented some additional logic (Committed revision 738904), that acks messages received in the transaction on commit, and redeliver them after the abort. This helps in this usecase, as you can see in the StompTest.testPrefetchSize().

I still can imagine certain scenarios where this would not work well, mostly because we dispatch messages as they come to the transport and don't care whether some of already dispatched messages should be redelivered before, but this requires quite a big refactoring, so I leave it for the future enhancements.","19/Feb/09 14:45;dejanb;It seems that acking a messages before an abort, still makes the client hang on the next receive.","24/Jun/09 11:23;gtully;pushing this out to 5.4.0 as more work is needed","30/Jun/09 00:35;ervandew;I just wanted to offer a bit of feedback on the current state of this as of the 20090620 snapshot (which includes Dejan's 738904 revision).  For message redelivery, when aborting the transaction, the redelivery policy is not currently honored.  This results in an infinite number of immediate retries to deliver the unacknowledged messages.","05/Aug/09 14:48;dejanb;Just looked at the test case again and it seems that this is working fine now (modified test case proves it).

As for the redelivery policy, it is not implemented for Stomp. I created another issue for this: https://issues.apache.org/activemq/browse/AMQ-2345","18/Aug/09 08:13;dejanb;The final comment on this issue: redelivery of messages after abort is not supported by Stomp protocol (thanks Hiram for the tip), so I reverted some of the delivery logic that was implemented for this issue. The test case is StompTest.testPrefetchSize() is now modified to reflect these changes and some fixes are implemented to make it work. Please take a look at http://activemq.apache.org/how-do-i-unack-the-message-with-stomp.html for more info on this topic.","18/Aug/09 13:11;cpinto;I'm sorry but that is just wrong, if the consumer dies out of an unexpected/unhandled error (think OOM) then the message is gone for good. The STOMP protocol does define transactions, it just doesn't specify how a consumer transaction must work. I personally see that as an oversight of the specification. You should do The Right Thing and rollback the messages if the transaction is a) explicitly aborted or b) the client connection is dropped, independently of the lack of completeness in the STOMP specification, anything else is unnacceptable and unexpected behavior of the message broker.","19/Aug/09 11:37;dejanb;Hi Celso,

I think you're confusing transaction rollback and death of consumer.

In case when consumer dies, the broker will detect it and will append all messages that are dispatched but not acknowledged by that consumer (all the messages you have acked in the transaction that hasn't been committed) to the end of the dispatch list. So these messages will be redelivered again to another consumer eventually. This works now in the same way for JMS and Stomp clients.

But when we rollback the transaction, we say to the broker that we haven't yet consumed messages that were delivered to us. So the broker will wait for those messages to be acked before sending more messages. This also works in the same way for Java and Stomp clients, it's just that JMS Java client has built-in logic that will try to redeliver those messages first (locally) when you start a new transaction. You can also implement the same logic in your Stomp client (or application).

The whole point is that redelivery of messages after the rollback, is the task for the client, since there's no need for the broker to resend those messages over the network again.

Hope this helps,
Dejan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Journal files don't get cleaned up,AMQ-1786,12482554,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,briandesai,briandesai,10/Jun/08 14:26,03/Aug/09 10:03,30/Jan/20 16:55,03/Aug/09 10:00,5.1.0,,,,,,,5.3.0,,,Broker,,,,10,"I'm running ActiveMQ 5.1.0 with the AMQ persistence adapter, and it appears that not all of the journal files get cleaned up.  My setup is a little abnormal, as I'm trying to test out ActiveMQ's ability to handle queue messaging with consumers that may become inactive for periods of time.
 
So for this test, I have a single publisher pushing messages out to 21 queues.  These are persistent messages with an expiration time.  I have a message listener reading from all queues (reading from '>').  So, as soon as the message is sent to the queues, it's read by the message listener, taking it off the queue.  So far, so good.
 
I have a 2 MB max file length set on the AMQ persistence adapter.  So, I would expect to see for the journal, 2 MB files that get cleaned up after the file rolls over.  However, the journal files don't always get cleaned up, as shown in the file listing below.  Out of 181 rollovers, 30 of the files did not get cleaned up.  The message listener showed no errors, and as far as I can tell, it didn't drop any messages.

{noformat}
-rw-r--r-- 1 root root  2096753 2008-05-30 20:30 data/journal/data-13
-rw-r--r-- 1 root root  2096967 2008-05-30 20:31 data/journal/data-14
-rw-r--r-- 1 root root  2096899 2008-05-30 20:45 data/journal/data-25
-rw-r--r-- 1 root root  2097057 2008-05-30 21:20 data/journal/data-52
-rw-r--r-- 1 root root  2096916 2008-05-30 21:22 data/journal/data-54
-rw-r--r-- 1 root root  2096536 2008-05-30 21:45 data/journal/data-72
-rw-r--r-- 1 root root  2096894 2008-05-30 21:47 data/journal/data-73
-rw-r--r-- 1 root root  2097129 2008-05-30 21:49 data/journal/data-75
-rw-r--r-- 1 root root  2097101 2008-05-30 21:58 data/journal/data-82
-rw-r--r-- 1 root root  2097026 2008-05-30 21:59 data/journal/data-83
-rw-r--r-- 1 root root  2096906 2008-05-30 22:02 data/journal/data-85
-rw-r--r-- 1 root root  2096973 2008-05-30 22:13 data/journal/data-94
-rw-r--r-- 1 root root  2097105 2008-05-30 22:24 data/journal/data-102
-rw-r--r-- 1 root root  2097033 2008-05-30 22:41 data/journal/data-113
-rw-r--r-- 1 root root  2096730 2008-05-30 22:42 data/journal/data-114
-rw-r--r-- 1 root root  2096569 2008-05-30 22:45 data/journal/data-116
-rw-r--r-- 1 root root  2096870 2008-05-30 22:50 data/journal/data-118
-rw-r--r-- 1 root root  2096567 2008-05-30 22:52 data/journal/data-119
-rw-r--r-- 1 root root  2096766 2008-05-30 23:03 data/journal/data-128
-rw-r--r-- 1 root root  2096877 2008-05-30 23:06 data/journal/data-130
-rw-r--r-- 1 root root  2096888 2008-05-30 23:18 data/journal/data-140
-rw-r--r-- 1 root root  2096699 2008-05-30 23:20 data/journal/data-141
-rw-r--r-- 1 root root  2096973 2008-05-30 23:22 data/journal/data-143
-rw-r--r-- 1 root root  2096924 2008-05-30 23:31 data/journal/data-150
-rw-r--r-- 1 root root  2096936 2008-05-30 23:45 data/journal/data-161
-rw-r--r-- 1 root root  2096527 2008-05-30 23:57 data/journal/data-170
-rw-r--r-- 1 root root  2097151 2008-05-30 23:58 data/journal/data-171
-rw-r--r-- 1 root root  2096972 2008-05-31 00:11 data/journal/data-179
-rw-r--r-- 1 root root  2096703 2008-05-31 00:13 data/journal/data-180
-rw-r--r-- 1 root root  2097069 2008-05-31 00:14 data/journal/data-181
{noformat}

I've also tried taking out the wildcard '>' on a single consumer, and instead used separate consumers for each queue, and I get the same result.

I haven't even gotten to the test yet where the listener is not running.  So, in this ""normal"" operation, all messages are consumed.  Yet, not all journal files get cleaned up.  These left-over files don't ever get cleaned up.  They will eventually start filling the hard drive.  I can understand files being left behind when there's no consumer, but there is a consumer the whole time.
 
What I'm basically looking for is a persistence layer for messaging to multiple clients, so that consumers can get messages retroactively when they start up.  I could try to use topics with durable clients, but I thought the queues would be easier to setup, as messages in queues are persisted by default.  However, I don't want the consumer to process ""stale"" messages, which is why I set an expiration time.  So, I would think that, with a constant rate of messages, the persistent disk store utilization would eventually level out as the messages started to expire.  I realize that if there's no consumer for a queue, expired messages won't get cleaned up (am currently trying to figure out a work-around for that - periodically checking the queues with a QueueBrowser seems to trigger the removal of expired messages).  However, even when all consumers are active, the journal keeps growing, as it's not always cleaning up it's files!

I've attached my configuration to this ticket.
","Linux server
Sun JDK 1.6.0
",ebarlas,pulapura,robertbrown,seth.cleveland@amd.com,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jun/08 14:26;briandesai;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12461162/ASF.LICENSE.NOT.GRANTED--activemq.xml","15/Jun/09 19:18;pulapura;PersistentStorageCleanup.java;https://issues.apache.org/jira/secure/attachment/12461529/PersistentStorageCleanup.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-07-11 15:38:20.886,,,false,,,,,,,,,,,,,,,,,84772,,,Mon Aug 03 10:03:39 UTC 2009,,,,,,,,"0|i0rzwn:",161461,,,,,,,,,,,,,,,,,,,"11/Jul/08 15:38;rajdavies;Slightly different problem - but this was resolved by https://issues.apache.org/activemq/browse/AMQ-1795","12/Jun/09 00:38;pulapura;We are using ActiveMQ 5.2.0 and see the same problem mentioned in this issue. It looks like the culprit is ""with consumers that may become inactive for periods of time. "" From the documentation, it does seem that the store clears out a log file only if it finds that there is no reference to a single message in the log file. However, with consumers that go up and down, it is possible that every log file ends up having a single persistent message that is not consumed. Hence, with a message store size of 1gb and a data file size of 32 MB, it takes around 30 messages to kill persistence, which is a very realistic scenario. Is there any method by which the files are consolidated and not held up by a single unconsumed message? Expiring the messages doesn't really work since there needs to be a consumer for messages to expire.","12/Jun/09 23:17;pulapura;We are using ActiveMQ 5.2.0 and see the same problem mentioned in this issue. It looks like the culprit is ""with consumers that may become inactive for periods of time. "" From the documentation, it does seem that the store clears out a log file only if it finds that there is no reference to a single message in the log file. However, with consumers that go up and down, it is possible that every log file ends up having a single persistent message that is not consumed. Hence, with a message store size of 1gb and a data file size of 32 MB, it takes around 30 messages to kill persistence, which is a very realistic scenario. Is there any method by which the files are consolidated and not held up by a single unconsumed message? Expiring the messages doesn't really work since there needs to be a consumer for messages to expire.","15/Jun/09 08:57;gtully;Sudip, have you tried a 5.3-SNAPSHOT?
Could you possibly submit your test case for this scenario ?","15/Jun/09 19:18;pulapura;The class takes the persistent directory as an argument.., the broker is named brokerOne, for ex: <basedir>/activemq-data/brokerOne/journal 

The class starts up a broker, creates a queue ""consume.queue"" with a normal consumer and producer. It also tries to produce to another queue ""no.consume.queue"" without a consumer whenever it finds a new log file has been added to the journal directory. The stats will show that adding just a single unconsumed message to each log file prevents it from being cleaned up. 

The issue seems to be inherent in the way persistent data files are handled in activemq. The problem is reproducible in the 5.3-SNAPSHOT too. While a fix is great, any workaround for 5.2.0 will be greatly appreciated. ","17/Jun/09 16:44;gtully;Sudip,
this is part of the contract when you make delivery persistent. The store cannot discard the message. Expiry with a consumer is your only option till an expiry processor can be added to activemq. see: https://issues.apache.org/activemq/browse/AMQ-1112","18/Jun/09 16:09;pulapura;Thanks for the reply. It would be great if you could take the above comments into account when looking at enhancements for activemq. It would be a good improvement to not have entire log files held up by a few unconsumed messages. ","18/Jun/09 16:31;gtully;one option for you may be to reduce the size of the data files, there will be more of them but the chances of them having unconsumed messages will be reduced. also, increase the checkpoint and cleanup interval.","19/Jun/09 05:40;ebarlas;Gary, for those of us who are concerned about the inefficient use of log files, do you think the jdbc persistence adapter is a suitable alternative?","19/Jun/09 11:12;gtully;sure, lots of folks uses it. For best performance use it with the Journal. ie: journaledJDBC","03/Aug/09 10:00;rajdavies;With https://issues.apache.org/activemq/browse/AMQ-1112 now resolved - to actively purge expired messages from the store - this is issue is resolved","03/Aug/09 10:03;jamesc;I'm on vacation until Monday 24th August 2009.
I will read your mail on return.
Thanks,
James Casey.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Number of messages when browsing queue is different to ""Number Of Pending Messages"" in queue list",AMQ-2186,12481025,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,deathemperor,deathemperor,27/Mar/09 04:23,31/Jul/09 09:18,30/Jan/20 16:55,31/Jul/09 09:18,5.2.0,,,,,,,5.3.0,,,Message Store,,,,0,"1. The Queues list displays a number, ""Number Of Pending Messages"" for like 1000.
2. When clicking on that queue, the number of message (total of all rows) is smaller than 1000.

Actually the #2 always displays a very small number of messages which is not more than 100 although the number on the list keep increasing to like forever.

The problem doesn't happen when ActiveMQ starts but after one to a few hours instead. At the moment the only way to resolve this at our end is to restart the AMQ.",CentOS 5.2 64bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75035,,,2009-03-27 04:23:19.0,,,,,,,,"0|i0s03b:",161491,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Active MQ performance issues when there are more than 100 queue'd up messages,AMQ-2333,12482758,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,malcomm@ochin.org,malcomm@ochin.org,28/Jul/09 19:27,30/Jul/09 16:43,30/Jan/20 16:55,30/Jul/09 16:43,5.2.0,,,,,,,,,,Broker,JMS client,,,0,"Over the past couple of days some of our queues get rather full because of downstream problems. The messages start numbering in the 1000's. When that happens ActiveMQ slows way down. I believe is slows down because we are trying to produce a message to the overloaded queue and it's taking a long time (minutes instead of seconds). Once the overloaded queue is emptied the problems go away.

Our system pretty much has all the defaults.

Note: this was not a problem before upgrading to 5.2.0

Any ideas on what should be done?",,npfistner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-07-30 11:34:44.063,,,false,,,,,,,,,,,,,,,,,74977,,,Thu Jul 30 16:43:27 UTC 2009,,,,,,,,"0|i0rzy7:",161468,,,,,,,,,,,,,,,,,,,"29/Jul/09 22:21;malcomm@ochin.org;This just happened w/ only 142 messages in a queue","30/Jul/09 11:34;gtully;investigate turning off producer flow control and increasing the memory available to the broker through the systemUsage config.","30/Jul/09 15:23;malcomm@ochin.org;OK, I'm going to try the systemUsage first. Here's my current config:
{panel}
        <!--  The maximum about of space the broker will use before slowing down producers -->
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""20 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""1 gb"" name=""foo""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""100 mb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
{panel}

Switching it to:

{panel}
  <memoryUsage limit=""50 mb""/>
  <tempUsage limit=""500 mb""/>
{panel}

Hopefully that will fix the problem - will let you know shortly.","30/Jul/09 16:43;malcomm@ochin.org;The configuration changes that I made fixed our problem. Thank you for the help!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting keepAlive through URL does nothing,AMQ-2274,12482910,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,pmouawad,pmouawad,29/May/09 17:52,23/Jul/09 03:41,30/Jan/20 16:55,10/Jun/09 10:28,5.1.0,5.2.0,,,,,,5.3.0,,,,,,,0,"I use ActiveMQ 5.2 and configure a client using jndi.properties with connection url:
connection.TopicConnectionFactory.brokerURL=tcp://localhost:61616?soTimeout=30000&connectionTimeout=30000&keepAlive=true&minmumWireFormatVersion=3&jms.prefetchPolicy.all=5


All boolean properties (keepAlive) are ignored",jdk5 ,pmouawad,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/May/09 18:45;pmouawad;BooleanEditor.java;https://issues.apache.org/jira/secure/attachment/12461521/BooleanEditor.java","29/May/09 17:53;pmouawad;BugKeepAlive.java;https://issues.apache.org/jira/secure/attachment/12461520/BugKeepAlive.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-06-10 10:28:57.51,,,false,,,,,,,,,,,,,,,,,75001,,,Thu Jul 23 03:41:50 UTC 2009,,,,,,,,"0|i0rzzb:",161473,,,,,,,,,,,,,,,,,,,"29/May/09 17:53;pmouawad;Class that illustrates the bug in IntrospectionSupport.setProperty","29/May/09 17:56;pmouawad;I looked at code of 5.2 and the bug seems to come from IntrospectionSupport.setProperty, look at attached file to see that Boolean conversion fails.


I checked out trunk version of IntrospectionSupport and it seems that code has drastically changed and registers Spring property editor for Boolean.
But looking at RoadMap I didn't see any comment about that bug, so I register it just to see it in changelog


Philippe
www.ubik-ingenierie.com","29/May/09 18:45;pmouawad;I looked in more detail the trunk code it will still fails even with Spring property editors since the class is CustomBoolean.
I attach a class to solve this issue but this introduces a dependency on Spring (although it seems this dependency is already here)","29/May/09 18:45;pmouawad;BooleanEditor","10/Jun/09 10:28;gtully;included Boolean test and added implementation of BooleanEditor that extends java.beans.PropertyEditorSupport rather than spring class.

r783281","23/Jul/09 03:41;will.tran;If you're using Phillipe's workaround, you still may need to register the BooleanEditor with java.beans.PropertyEditorManager, as PropertyEditorManager.findEditor(Boolean.class) (which is used in IntrospectionUtils) still returned null with the BooleanEditor in the classpath. I did that in some bootstrap code with this line:

PropertyEditorManager.registerEditor(Boolean.class, BooleanEditor.class);",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Systems hang due to inability to timeout socket write operation,AMQ-1993,12483053,12482857,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,fhanik,fhanik,03/Nov/08 00:32,26/Jun/09 16:25,30/Jan/20 16:55,19/Jun/09 20:53,5.1.0,5.2.0,,,,,,5.2.0,,,Broker,,,,0,"the blocking Java Socket API doesn't have a timeout on socketWrite invocations.
This means, if a TCP session is dropped or terminated without RST or FIN packets, the operating system it left to eventually time out the session. On the linux kernel this timeout usually takes 15 to 30minutes. 

For this entire period, the AMQ server hangs, and producers and consumers are unable to use a topic.

I have created two patches for this at the page:
http://www.hanik.com/covalent/amq/index.html

Let me show a bit more
---------------------------------
""ActiveMQ Transport: tcp:///X.YYY.XXX.ZZZZ:2011"" daemon prio=10 tid=0x0000000055d39000 nid=0xc78 runnable [0x00000000447c9000..0x00000000447cac10]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)

This is a thread stuck in blocking IO, and can be stuck for 30 minutes during the kernel TCP retransmission attempts.
Unfortunately the thread dump is very misleading since the name of the thread, is not the destination or even remotely related to the socket it is operating on.
To mend this, a very simple (and configurable) ThreadNameFilter has been suggested to the patch, that appends the destination and helps the system administrator correctly identify the client that is about to receive data. 

-----------------------------------
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:581)
	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:421)
	- locked <0x00002aaaec155818> (a org.apache.activemq.broker.region.Topic)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:363)
The lock being held at this issue unfortunately makes the entire Topic single threaded. 
When this lock is being held, no other clients (producers and consumers) can publish to/receive from this topic.
And this lock can hold up to 30 minutes.
I consider solving this single threaded behavior a 'feature enhancement' that should be handled separately from this bug. Because even if it is solved, threads still risk being stuck in socketWrite0 for dropped connections that still appear to be established.

For this, I have implemented a socket timeout filter, based on a TransportFilter, this filter only times out connections that are actually writing data.

The two patches are at:
http://www.hanik.com/covalent/amq/patch-1-threadname-filter.patch
http://www.hanik.com/covalent/amq/patch-3-tcp-writetimeout.patch

the binary 0000.jar applies to both 5.1 and trunk and can be used today in existing environments. 


",Unix (Solaris and Linux tested),bsnyder,paulgale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/09 09:12;felixehm;jstack.blockedSession;https://issues.apache.org/jira/secure/attachment/12461538/jstack.blockedSession","03/Nov/08 13:38;fhanik;patch-1-threadname-filter.patch;https://issues.apache.org/jira/secure/attachment/12461191/patch-1-threadname-filter.patch","03/Nov/08 13:38;fhanik;patch-3-tcp-writetimeout.patch;https://issues.apache.org/jira/secure/attachment/12461268/patch-3-tcp-writetimeout.patch",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-11-03 13:21:25.716,,,false,,,,,,,,,,,,,,,,,75135,,,Mon Jun 22 08:22:37 UTC 2009,,,,,,,,"0|i0ts8v:",171885,Regression,,,,,,,,,,,,,,,,,,"03/Nov/08 13:21;gtully;these fixes look great. Can you attach your patch files to this jira and select the appropriate license grant option.","03/Nov/08 13:31;gtully;on the tcp-writetimeout patch

In the catch clause below:
{code}
+    public void oneway(Object command) throws IOException {
+        try {
+            registerWrite(this);
+            super.oneway(command);
+        } catch (IOException x) {
+            deRegisterWrite(this,true,x);
+            throw x;
+        } finally {
{code}

fail is passed to deRegisterWrite which will cause a throw of the Forced exception rather than x. It seems that deRegisterWrite ignores the IOException argument which I guess is not intended, or is it?

Would it be possible to include some junit tests for this functionality?","03/Nov/08 13:37;fhanik;maybe you misread the code

if (fail) {
                IOException ex = (iox!=null)?iox:new IOException(""Forced write timeout for:""+filter.getNext().getRemoteAddress());
                filter.getTransportListener().onException(ex);
}

Filip","03/Nov/08 13:38;fhanik;thread name filter - patch 1","03/Nov/08 13:44;fhanik;{code}
if (fail) { 
  IOException ex = (iox!=null)?iox:new IOException(""Forced write timeout for:""+filter.getNext().getRemoteAddress()); 
  filter.getTransportListener().onException(ex); 
}
{code}","03/Nov/08 13:53;gtully;one more thought:
would it be sufficient to do deRegister in the finally and only have the timeout thread force an exception. I guess the question is, why is deRegister interested in the exception at all?","03/Nov/08 14:01;fhanik;I am currently working on a test case so that you can see this in action.
In the real life the following way is the easiest to reproduce

Have a few machines, consumers and producers working with the same topic

On one consumer machine - pull out the network cord

This action causes the connection to be in ""ESTABLISHED"" state, since no RST or FIN packets have been sent.
the Linux TCP implementation will then try to resend the packet 15 times (default config) with 2min in between each retransmission.

During this time, the server will keep filling up the TCP send buffer in the kernel, and when it is full, the thread will get stuck in java.net.Socket.socketWrite0
because this thread also holds the lock on the topic, no other thread can operate on the topic anymore

best
Filip","03/Nov/08 14:09;fhanik;Here is another example of a thread locking up the entire system, based on the same scenario.

{code}
""BrokerService"" daemon prio=10 tid=0x0000000060103800 nid=0x74e7 runnable [0x00000000467c7000..0x00000000467c7c10]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:106)
	at java.io.DataOutputStream.flush(DataOutputStream.java:106)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:165)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:233)
	- locked <0x00002aaabe89c2b0> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:100)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x00002aaabe89cc10> (a java.lang.Object)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1188)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:776)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:813)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
{code}

and as a result other threads are blocked
{code}
""ActiveMQ Transport Stopper: /xx.xx.xxx.xxx:61489"" daemon prio=10 tid=0x00000000607ad400 nid=0x7687 waiting for monitor entry [0x00000000450b0000..0x00000000450b0c90]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- waiting to lock <0x00002aaabe89cc10> (a java.lang.Object)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1188)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:776)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:735)
{code}","03/Nov/08 14:13;gtully;ah, apologies, I did mis read. I understand the problem, thanks.

Still wondering bout my last comment though, why is deRegisterWriter interested in exceptions?","03/Nov/08 14:14;fhanik;{quote}
one more thought:
would it be sufficient to do deRegister in the finally and only have the timeout thread force an exception. I guess the question is, why is deRegister interested in the exception at all?
{quote}

The reason is because deregister is atomic, that way we close the socket for the correct reason, and not make up a reason if a real socket exception and a timeout happen at the same time.

I thought about it for a while, to just ignore the socket exception that came from the underlying layer, and pass it on, but then I thought it would be safer to invoke the onException to guarantee a socket closure regardless of the IO exception that came back.","03/Nov/08 15:13;gtully;Am not sure it is safer because the filter introduces a change of behaviour to the normal exception case. Ie: onException is now always called.
In addition, in the event that a close is done async from an onException, there is still an opportunity to have a normal IOException interleaved with a Forced exception.
I think this is the same as with a pass through on exception, a close can get called twice, but this is handled ok by close.
Mostly though, I am wary of the change in behaviour introduced by the exception handler.
As this is a filter that is added by choice it is not such a big deal but we may as well iron out the detail. This is a handy feature. ","03/Nov/08 15:49;fhanik;{quote}
there is still an opportunity to have a normal IOException interleaved with a Forced exception.
{quote}
This is not the case. the deregister operation is atomic. deregister will never call throw twice. However, the oneway method will not stop the normal exception from propagating the underlying exception to the top. so only one exception will raise on the invoking thread. 
In case of a 'forced timeout exception' there will be two exceptions. On that is invoked in the onException, there will be a 2nd exception when the async handler calls socket.close, and terminates the write state.

{quote}
As this is a filter that is added by choice it is not such a big deal but we may as well iron out the detail. This is a handy feature.
{quote}
not only handy, but essential. It prevents the entire server from a complete dead lock due to synchronization in the higher layers.
Once that synchronization has been mended, it is still a handy feature, since it prevents single threads from becoming locked for a very long time.



","03/Nov/08 15:57;fhanik;That being said, the upper layer can react to the propagating IO exception if needed. But that shouldn't be an issue, this filter does what it is supposed to do. We could add more parameters to make the behavior configurable.

","03/Nov/08 16:18;gtully;agreed, will commit in an hour or so, once a sanity run of the tests completes.","03/Nov/08 17:31;gtully;patch applied in r710109
thanks.","04/Nov/08 16:01;fhanik;Index: activemq-core/src/main/java/org/apache/activemq/transport/tcp/TcpBufferedOutputStream.java

looks like I have a copy paste error

+                try {
+                    writeTimestamp = System.currentTimeMillis();
+                    out.write(b, off, len);
+                } finally {
+                    writeTimestamp = System.currentTimeMillis();
+                }


should be 

+                try {
+                    writeTimestamp = System.currentTimeMillis();
+                    out.write(b, off, len);
+                } finally {
+                    writeTimestamp = -1;
+                }

","04/Nov/08 16:10;gtully;just to be sure, the change is one line, right?:
{code}
Index: src/main/java/org/apache/activemq/transport/tcp/TcpBufferedOutputStream.java
===================================================================
--- src/main/java/org/apache/activemq/transport/tcp/TcpBufferedOutputStream.java	(revision 711284)
+++ src/main/java/org/apache/activemq/transport/tcp/TcpBufferedOutputStream.java	(working copy)
@@ -95,7 +95,7 @@
                     writeTimestamp = System.currentTimeMillis();
                     out.write(b, off, len);
                 } finally {
-                    writeTimestamp = System.currentTimeMillis();
+                    writeTimestamp = -1;
                 }
             }
         }
{code}","04/Nov/08 16:22;gtully;update applied in r711292","04/Nov/08 17:39;fhanik;That's correct Gary, thank you!","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3","16/Jun/09 09:05;felixehm;Hi,

I am using ActiveMQ 5.3.0  and apparently run into this reported problem again. 
Our clients weren't able to get any sessions and I first thought that it is a problem with the CopyOnWriteArray Object where consumers are kept. But then I saw one thread in RUNNABLE locking 3 mutexes and writing using java.net.SocketOutputStream.socketWrite0.

I attached the thread dump file for investigations.

Unfortunately I can't reproduce this situation with a unit test. The only additional information I got from our client was that he tried to restarted the connection within very short period (1-2 sec).

","16/Jun/09 09:12;felixehm;jstack thread dump","16/Jun/09 09:12;felixehm;jstack thread dump","16/Jun/09 17:59;fhanik;Felix, did you configure a timeout? transport.soWriteTimeout?


Example for configuring socket timeouts - transport.soTimeout applies to read, transport.soWriteTimeout applies to write.


	   <transportConnector
	       name=""tcp1""
	       uri=""tcp://127.0.0.1:61616?transport.soTimeout=10000&amp;transport.soWriteTimeout=15000""
	   />
	   ","19/Jun/09 20:53;fhanik;closing the WriteTimeoutFilter thread is not configured in the example stack trace.","22/Jun/09 08:22;felixehm;Hi,

thanks for the hint. Haven't tested it, but it appears to be reasonable.

Is there a reason for not having a timeout configured by default ?


Cheers,
Felix",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractStoreCursor.size gets out of synch with Store size and blocks consumers,AMQ-1918,12482815,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,ryarger,ryarger,28/Aug/08 14:28,26/May/09 08:50,30/Jan/20 16:55,26/May/09 08:50,5.1.0,,,,,,,5.3.0,,,Message Store,,,,3,"In version 5.1.0, we are seeing our queue consumers stop consuming for no reason.
We have a staged queue environment and we occasionally see one queue display negative pending message counts that hang around -x, rise to -x+n gradually and then fall back to -x abruptly. The messages are building up and being processed in bunches but its not easy to see because the counts are negative. We see this behavior in the messages coming out of the system. Outbound messages come out in bunches and are synchronized with the queue pending count dropping to -x.

This issue does not happen ALL of the time. It happens about once a week and the only way to fix it is to bounce the broker. It doesn't happen to the same queue everytime, so it is not our consuming code.

Although we don't have a reproducible scenario, we have been able to debug the issue in our test environment.
We traced the problem to the cached store size in the AbstractStoreCursor.
This value becomes 0 or negative and prevents the AbstractStoreCursor from retrieving more messages from the store. (see AbstractStoreCursor.fillBatch() )
We have seen size value go lower than -1000.
We have also forced it to fix itself by sending in n+1 messages. Once the size goes above zero, the cached value is refreshed and things work ok again.
Unfortunately, during low volume times, it could be hours before n+1 messages are received, so our message latency can rise during low volume times.... :(

I have attached our broker config.
",,bsnyder,john.greeley,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/08 14:28;ryarger;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12461185/ASF.LICENSE.NOT.GRANTED--activemq.xml","30/Mar/09 16:58;ryarger;NegativeQueueCursorSupport.java;https://issues.apache.org/jira/secure/attachment/12461461/NegativeQueueCursorSupport.java","28/Aug/08 22:16;ryarger;testAMQMessageStore.zip;https://issues.apache.org/jira/secure/attachment/12461199/testAMQMessageStore.zip","24/Sep/08 10:59;nic.tanase;testdata.zip;https://issues.apache.org/jira/secure/attachment/12461112/testdata.zip",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2008-09-04 14:34:24.767,,,false,,,,,,,,,,,,,,,,,75173,,,Tue May 26 08:50:28 UTC 2009,,,,,,,,"0|i0rzyn:",161470,,,,,,,,,,,,,,,,,,,"28/Aug/08 22:13;ryarger;I have a reproducible scenario for this issue.
I cannot guarantee that this is how it always happens, but AbstractStoreCursor.size does go negative everytime I follow this procedure.
I am sorry I could not make it into a nice little test case. I tried to break it down as best I could.

I wrapped up my eclipse project. It has 2 consumers, and 2 producers.
producer_flood sends a larger number of messages to test.queue.1 every 3 seconds
producer_steady sends a small number of messages to test.queue.1 every 3 seconds
consumer1 consumes messages off test.queue.1 and forwards them to test.queue.2
consumer2 consumes messages off test.queue.2 and prints text to system.out
My broker config file is included in the amq_broker_config dir. It sets the memory limits low so that they can be reached faster.
The queues are setup for 1MB each and the broker is setup for 3MB.

Here is the script:
1) Start a clean broker
2) Start consumer1 and consumer2
3) Start producer_flood - this will push messages in faster than consumer1 can handle. 
Let the queue size build up to 1000 messages. This should be 100% of the 1MB allowed for that queue.
4) Stop consumer2 - this will allow messages to build up in queue2. 
If you watch this queue in a jconsole, you will notice that the percent memory used does not rise, even after you pass the memory limit.
Let the queue2 size grow to around 2000.
This will put you near the memory limit for the broker.
5) Start consumer2 - if you look at jconsole now, the percent memory used is updated and > 100%.
6) Wait for queue2 to fall below 1000 messages and stop the producer. Let the messages drain and one or both of the queues should now have negative counts. 
7) If you start the producer_steady now you'll notice that messages do not reach consumer2 at the rate that they go in.
	If you debug the broker now and look at AbstractStoreCursor.size, it will be negative. 
	
Please let me know if you need more info.
Thanks.","28/Aug/08 22:16;ryarger;eclipse project with test files","04/Sep/08 14:34;rajdavies;Thanks Richard - I can't reproduce on Trunk - so I'm going to mark it fixed in 5.2 - if its still a problem - reopen and I'll investigate further","04/Sep/08 15:11;ryarger;I tested with apache-activemq-5.2-20080903.231704-53 and was able to reproduce problem.
Is there much code difference between yesterday's snapshot on trunk?
I'll try the snapshot tomorrow to be sure.

Did you happen to try the scenario against 5.1? If so, were you able to reproduce?","05/Sep/08 15:55;ryarger;I tested the same scenario against activemq-5.2-SNAPSHOT-20080904.231544-55.
I was able to reproduce the error.
Is it possible the code you test on trunk was different than what is in the snapshots?

","23/Sep/08 05:34;rajdavies;This is a timing issue - so its been difficult for me to reproduce on any version. I'll try get a slower box","24/Sep/08 10:59;nic.tanase;Hi,

You can use the test cases from the attached archive to reproduce the problem.
jmeterjms_nic-1.0.jar - modified version of the existing JMS sampler from JMeter project
JMS Request Only.jmx - test plan for sender
JMS Receive Only.jmx - test plan for receiver.
You need to use version 2.3.3 of Jmeter and replace ApacheJMeter_jms.jar with the modified one.

Sampler code is not closing the connections, so you need to restart Jmeter clients between tests.
I hope the JMS sampler will make testing easier.

I consistently get the following problem, using the attached test cases (actual figures may vary).
The broker is configured to use Oracle10 for persistence. I have created a trigger that copies the records deleted from ACTIVEMQ_MSGS into ACTIVEMQ_HISTORY table so I can see what has been produced and consumed at the persistence layer.


1. Start Jmeter with 3 producer threads each sending 3333 messages
2. Start Jmeter with a consumer thread.
3. Let the producers finish (9999 messages sent to the broker)
4. Wait for consumer to fetch all 9999 messages.
5. Consumer stops receiving after 9860 messages (as reported by Jmeter Summary Report).
6. Table ACTIVEMQ_MSGS contains 304 messages.
7. Table ACTIVEMQ_HISTORY contains 9695 messages.
8. JMX statistics show that the queue contains 139 messages.
9. Trying to browse the queue via JConsole does not return any messages.

Nic

","26/Sep/08 11:05;nic.tanase;I found a way to work around this issue, by changing the way messages are loaded from the database.
I ran tests with several queues, producers and consumers and did not get any undelivered messages anymore.

DefaultJDBCAdapter.doRecoverNextMessages() recovers the messages with ID higher then the last recovered messages.
The SQL statement is:
{code:title=org.apache.activemq.store.jdbc.Statements.java|borderStyle=solid}
findNextMessagesStatement = ""SELECT ID, MSG FROM "" + getFullMessageTableName()
                                        + "" WHERE CONTAINER=? AND ID > ? ORDER BY ID"";
{code}
However, it can happen that messages with lower id are inserted into the DB after messages with higher IDs. 
Such messages do not get recovered from DB.

I have changed on my local copy the DefaultJDBCAdapter to act retroactive, looking back {{maxReturned}} rows for any missed messages.
Anyway, I am not familiar with ActiveMQ code, so you might want to have a look at the modified DefaultJDBCAdapter.doRecoverNextMessages() bellow:

{code:title=org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.java|borderStyle=solid}
   public class DefaultJDBCAdapter implements JDBCAdapter {

   private Set<Long> lastRecoveredMessagesIds = new TreeSet<Long>();
   -------------------------------------------------------

    public void doRecoverNextMessages(TransactionContext c, ActiveMQDestination destination, long nextSeq,
                                      int maxReturned, JDBCMessageRecoveryListener listener) throws Exception {
        PreparedStatement s = null;
        ResultSet rs = null;
        long id = 0;
        List<Long> cleanupIds = new ArrayList<Long>();
        int index = 0;
        try {
            s = c.getConnection().prepareStatement(statements.getFindNextMessagesStatement());
            s.setMaxRows(maxReturned*2);
            s.setString(1, destination.getQualifiedName());
            s.setLong(2, nextSeq - maxReturned);
            rs = s.executeQuery();
            int count = 0;
            if (statements.isUseExternalMessageReferences()) {
                while (rs.next() && count < maxReturned) {
                	id = rs.getLong(1);
                	if ( lastRecoveredMessagesIds.contains(id) ) {
                		// this message was already recovered
                		cleanupIds.add(id);
                		continue;
                	}                	
                    if (listener.recoverMessageReference(rs.getString(1))) {
                        count++;
                        lastRecoveredMessagesIds.add(id);
                    } else {
                        LOG.debug(""Stopped recover next messages"");
                    }
                }
            } else {
                while (rs.next() && count < maxReturned) {
                	id = rs.getLong(1);
                	if ( lastRecoveredMessagesIds.contains(id) ) {
                		// this message was already recovered
                		cleanupIds.add(id);
                		continue;
                	}
                    if (listener.recoverMessage(rs.getLong(1), getBinaryData(rs, 2))) {
                        count++;
                        lastRecoveredMessagesIds.add(id);
                    } else {
                        LOG.debug(""Stopped recover next messages"");
                    }
                }
            }
            
            //not cleanup the list of recovered messages
            index = 0;
            Iterator<Long> it = cleanupIds.iterator();
            while (it.hasNext() && index < count) {
            	lastRecoveredMessagesIds.remove(it.next());
            }
            
            
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            close(rs);
            close(s);
        }
    }

}
{code}


","03/Nov/08 17:44;gtully;The following fix may be relevant, the root cause was the cursor and store being out of sync like you describe in the description.
https://issues.apache.org/activemq/browse/AMQ-1984","28/Dec/08 23:13;rajdavies;Fixed by SVN revision 729803","13/Jan/09 21:40;ryarger;I applied my test scenario to apache-activemq-5.3-20090113.084327-5.
It was actually worse.
I still got a negative queue.
And I was unable to consume from or produce to queue1. 
The queue was left with 131 messages that consumer1 will not consume, even after I stop and restart the consumer.
I ran my producers and no messages are added to queue1.

I restarted the broker and the 131 messages were consumed.
The following error was in the log:
ERROR Service                        - Async error occurred: javax.jms.JMSException: Unmatched acknowledege: MessageAck {comm
andId = 839, responseRequired = false, ackType = 2, consumerId = ID:vibes-richyarger-1501-1231882347001-0:0:2:1, firstMessage
Id = null, lastMessageId = ID:vibes-richyarger-3948-1231881217090-0:5200:1:1:1, destination = queue://test.queue.1, transacti
onId = TX:ID:vibes-richyarger-1501-1231882347001-0:0:138, messageCount = 1}; Could not find Message-ID ID:vibes-richyarger-39
48-1231881217090-0:5200:1:1:1 in dispatched-list (end of ack)
javax.jms.JMSException: Unmatched acknowledege: MessageAck {commandId = 839, responseRequired = false, ackType = 2, consumerI
d = ID:vibes-richyarger-1501-1231882347001-0:0:2:1, firstMessageId = null, lastMessageId = ID:vibes-richyarger-3948-123188121
7090-0:5200:1:1:1, destination = queue://test.queue.1, transactionId = TX:ID:vibes-richyarger-1501-1231882347001-0:0:138, mes
sageCount = 1}; Could not find Message-ID ID:vibes-richyarger-3948-1231881217090-0:5200:1:1:1 in dispatched-list (end of ack)

        at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:439)
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:192)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:377)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:458)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
        at java.lang.Thread.run(Thread.java:595)




","13/Jan/09 21:42;ryarger;I also have the following errors during startup:
ERROR Service                        - Async error occurred: javax.jms.JMSException: Transaction 'TX:ID:vibes-richyarger-1501
-1231882347001-0:0:1' has not been started.
javax.jms.JMSException: Transaction 'TX:ID:vibes-richyarger-1501-1231882347001-0:0:1' has not been started.
        at org.apache.activemq.broker.TransactionBroker.getTransaction(TransactionBroker.java:270)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:190)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:458)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
        at java.lang.Thread.run(Thread.java:595)
ERROR Service                        - Async error occurred: javax.jms.JMSException: Could not correlate acknowledgment with
dispatched message: MessageAck {commandId = 25, responseRequired = false, ackType = 3, consumerId = ID:vibes-richyarger-1501-
1231882347001-0:0:1:1, firstMessageId = null, lastMessageId = ID:vibes-richyarger-3948-1231881217090-0:5298:1:1:1, destinatio
n = queue://test.queue.1, transactionId = null, messageCount = 1}
javax.jms.JMSException: Could not correlate acknowledgment with dispatched message: MessageAck {commandId = 25, responseRequi
red = false, ackType = 3, consumerId = ID:vibes-richyarger-1501-1231882347001-0:0:1:1, firstMessageId = null, lastMessageId =
 ID:vibes-richyarger-3948-1231881217090-0:5298:1:1:1, destination = queue://test.queue.1, transactionId = null, messageCount
= 1}
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:330)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:377)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:458)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
        at java.lang.Thread.run(Thread.java:595)
INFO  WebConsoleStarter              - ActiveMQ WebConsole initialized.
ERROR Service                        - Async error occurred: javax.jms.JMSException: Unmatched acknowledege: MessageAck {comm
andId = 49, responseRequired = false, ackType = 2, consumerId = ID:vibes-richyarger-1501-1231882347001-0:0:2:1, firstMessageI
d = null, lastMessageId = ID:vibes-richyarger-3948-1231881217090-0:4731:1:1:1, destination = queue://test.queue.1, transactio
nId = TX:ID:vibes-richyarger-1501-1231882347001-0:0:7, messageCount = 1}; Could not find Message-ID ID:vibes-richyarger-3948-
1231881217090-0:4731:1:1:1 in dispatched-list (end of ack)
javax.jms.JMSException: Unmatched acknowledege: MessageAck {commandId = 49, responseRequired = false, ackType = 2, consumerId
 = ID:vibes-richyarger-1501-1231882347001-0:0:2:1, firstMessageId = null, lastMessageId = ID:vibes-richyarger-3948-1231881217
090-0:4731:1:1:1, destination = queue://test.queue.1, transactionId = TX:ID:vibes-richyarger-1501-1231882347001-0:0:7, messag
eCount = 1}; Could not find Message-ID ID:vibes-richyarger-3948-1231881217090-0:4731:1:1:1 in dispatched-list (end of ack)
        at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:439)
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:192)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:377)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:458)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
        at java.lang.Thread.run(Thread.java:595)","30/Mar/09 16:58;ryarger;I have created a unit test that can reproduce the issue.
It takes around 5 min to complete.

I modeled the test off of the CursorSupport test case.
I just added a second queue and more specific memory settings.
I also included tests with different prefetch values.
Lowering prefetch seems to have a direct impact on the issue.

testWithDefaultPrefetch() and testWithDefaultPrefetchFiveConsumers()
are usually the ones to fail.
 
I am reproducing the issue quite easily with this test case.
So let me know if you cannot.
Thanks.","30/Mar/09 17:00;ryarger;I also noticed another ticket that is most likely related to this issue: AMQ-1940.
","31/Mar/09 07:08;npfistner;Maybe also our problem concerning hanging persistent JDBC Messages is related to this. Please see https://issues.apache.org/activemq/browse/AMQ-2184 for details.
We have to restart our Broker in our productive environment at least once every 24 h.","02/Apr/09 14:53;ryarger;I should have mentioned that this test case has been written against tag 5.1.0.
I have been debugging the code and I have some concerns about whether the unit test is producing the same issue that we are seeing in our production environment.

While the unit test decrements the pending message count extra times and it goes negative,  it does not cause a cursor size to go negative.

The unit test is producing a negative queue because duplicate messages are being dispatched to the consumer from the RecoveryDispatch.
PagedInMessages are cached in a RecoveryDispatch when a new subscriber is added.
I was able to resolve the issue by adding a lock check to the Queue.iterate() method.
Which I thought was great until I saw that the RecoveryDispatch had been removed in later versions.

I am going to run the unit test in trunk.
","26/May/09 08:50;rajdavies;Added test case in SVN revision 778622.
Looks fixed with trunk on 26th May 2009",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multicast transport does not work when for a consumer or producer,AMQ-2134,12482693,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,jmathaiy,jmathaiy,20/Feb/09 22:25,23/May/09 06:33,30/Jan/20 16:55,23/May/09 06:33,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"I am creating a broker with just a multicast transport connector. Code snippet below.

            try{
			broker = new BrokerService();
		// configure the broker
			broker.setBrokerName(""ism"");		
			broker.addConnector(""multicast://224.1.2.3:6255?loopBackMode=true"");			
			broker.start();
		}catch(Exception ex){
			ex.printStackTrace();
		}

Now I try creating a subscriber on the broker  using the following broker url ""multicast://224.1.2.3:6255?loopBackMode=true&amp;trace=true""
The connection never succeeds and the following message is repeatedly thrown.

DEBUG o.a.a.t.reliable.ReliableTransport - Still waiting for response on: multicast://224.1.2.3:6255?loopBackMode=true&trace=true@0 to command: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = ID:JMATHAIY-WXP01-3697-1235159811727-2:0, clientId = ID:JMATHAIY-WXP01-3697-1235159811727-3:0, userName = null, password = null, brokerPath = null, brokerMasterConnector = false, manageable = true, clientMaster = true} sending replay message
11:58:44.270 [http-8080-1] DEBUG o.a.a.t.TransportLogger.Connection:1 - SENDING: ReplayCommand {commandId = 25, firstNakNumber = 1, lastNakNumber = 1}


The reason to believe why this is a bug: 
I did some sniffing on the network and found that the igmp multicast join request for the broker never came through. Some digging into the code revealed that the MulticastTransport was never created in the first place. UdpTransport was being created even though the transport was multicast. The following change in the doBind method on the UdpTransportFactory.java fixed this problem.

            //int port = location.getPort();
            //OpenWireFormat openWireFormat = asOpenWireFormat(wf);
            //UdpTransport transport = new UdpTransport(openWireFormat, port);
            log.debug(""Putting a custom fix for Multicast problem"");
            UdpTransport transport = (UdpTransport)createTransport(location, wf);

Now I was able to see the broker joining the multicast group, but the multicast socket gets timed out after every 5000 ms . I figured out that this is a default setting in the MulticastTransport.java (DEFAULT_IDLE_TIME) and tried changing it to 0 (open socket forever). Note : There is no way to specify this value from the uri. (or I was not able to figure that out).

After the above two changes, I could get publisher and consumer connect to the broker and pass on the messages.

Please review the above changes and let me know if this has any other side effects or if any better fix is possible.

Background : We are actively testing out the various transports to use ActiveMQ in our application and multicast is very essential. Infact we want to integrate jgroups and I am not having any success there. Is jgroups really integrated in 5.2 ?




",Using JMS in a spring framework,jmathaiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-05-23 06:33:45.119,,,false,,,,,,,,,,,,,,,,,75061,,,Sat May 23 06:33:45 UTC 2009,,,,Patch Available,,,,"0|i0rzxj:",161465,,,,,,,,,,,,,,,,,,,"23/May/09 06:33;rajdavies;Fixed in SVN revision 777806
You can specify the IDLE_TIMEOUT by the keepAliveInterval property in the URI",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in org.apache.activemq.usage.Usage,AMQ-2054,12482781,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,jurna,jurna,06/Jan/09 12:45,13/Jan/09 22:16,30/Jan/20 16:55,13/Jan/09 22:16,5.2.0,,,,,,,5.3.0,,,Broker,,,,1,"In highly concurrent environment, client deadlocks with this stack trace. Obiously, there are too many synchronized statements in Usage class. Either you add statements on method declaration, or use synchronized on mutex object. Now for example stop method is declared as synchronized and also locks usageMutex and this causes deadlock.

Found one Java-level deadlock:
=============================
""jmsConnector.dispatcher.486"":
  waiting to lock monitor 0x08528fb0 (object 0xa4b01390, a java.lang.Object),
  which is held by ""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616""
""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"":
  waiting to lock monitor 0x08528a38 (object 0xa4b01348, a org.apache.activemq.usage.MemoryUsage),
  which is held by ""jmsConnector.dispatcher.486""

Java stack information for the threads listed above:
===================================================
""jmsConnector.dispatcher.486"":
        at org.apache.activemq.usage.Usage.stop(Usage.java:306)
        - waiting to lock <0xa4b01390> (a java.lang.Object)
        - locked <0xa4b01348> (a org.apache.activemq.usage.MemoryUsage)
        at org.apache.activemq.ActiveMQMessageProducer.dispose(ActiveMQMessageProducer.java:156)
        at org.apache.activemq.ActiveMQSession.dispose(ActiveMQSession.java:589)
        - locked <0xa4b091d8> (a org.apache.activemq.ActiveMQSession)
        at org.apache.activemq.ActiveMQSession.close(ActiveMQSession.java:555)
        at org.apache.activemq.pool.SessionPool.destroyObject(SessionPool.java:81)
        at org.apache.commons.pool.impl.GenericObjectPool.addObjectToPool(GenericObjectPool.java:1128)
        at org.apache.commons.pool.impl.GenericObjectPool.returnObject(GenericObjectPool.java:1076)
        at org.apache.activemq.pool.SessionPool.returnSession(SessionPool.java:67)
        at org.apache.activemq.pool.PooledSession.close(PooledSession.java:124)
        at org.mule.providers.jms.JmsConnector.close(JmsConnector.java:1003)
        at org.mule.providers.jms.JmsConnector.closeQuietly(JmsConnector.java:1017)
        at org.mule.providers.jms.JmsMessageDispatcher.dispatchMessage(JmsMessageDispatcher.java:323)
        at org.mule.providers.jms.JmsMessageDispatcher.doDispatch(JmsMessageDispatcher.java:64)
        at org.mule.providers.AbstractMessageDispatcher$Worker.run(AbstractMessageDispatcher.java:561)
        at org.mule.impl.work.WorkerContext.run(WorkerContext.java:310)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:987)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:528)
        at java.lang.Thread.run(Thread.java:619)
""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"":
        at org.apache.activemq.usage.Usage.getExecutor(Usage.java:404)
        - waiting to lock <0xa4b01348> (a org.apache.activemq.usage.MemoryUsage)
        at org.apache.activemq.usage.Usage.fireEvent(Usage.java:271)
        at org.apache.activemq.usage.Usage.setPercentUsage(Usage.java:232)
        - locked <0xa4b01390> (a java.lang.Object)
        at org.apache.activemq.usage.MemoryUsage.decreaseUsage(MemoryUsage.java:146)
        at org.apache.activemq.ActiveMQMessageProducer.onProducerAck(ActiveMQMessageProducer.java:289)
        at org.apache.activemq.ActiveMQConnection$2.processProducerAck(ActiveMQConnection.java:1675)
        at org.apache.activemq.command.ProducerAck.visit(ProducerAck.java:56)
        at org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1647)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:167)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        - locked <0x752c53e8> (a org.apache.activemq.transport.InactivityMonitor$1)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
        at java.lang.Thread.run(Thread.java:619)

Found 1 deadlock.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/09 08:20;jurna;Usage.java.patch;https://issues.apache.org/jira/secure/attachment/12461307/Usage.java.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-01-13 22:16:20.391,,,false,,,,,,,,,,,,,,,,,75099,,,Tue Jan 13 22:16:20 UTC 2009,,,,Patch Available,,,,"0|i0s07z:",161512,,,,,,,,,,,,,,,,,,,"08/Jan/09 08:27;jurna;I've added a patch to Usage class. All (3) synchronized statments in method declarations were removed. In start and stop they are not necessary, because those methods are guarded by atomic booleans. getExecutor() needs more care, but I would prefere lock on usageMutex, because in order to prevent deadlocks, you need as little mutexes as possible. Also mutex is used only on executor initialisation. If it's already initialized, no locks are made.","13/Jan/09 22:16;gtully;patch applied in r734256 with thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HashIndex leaks file handles when destination is removed,AMQ-1842,12482726,12482330,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,snstanton,snstanton,07/Jul/08 22:20,07/Jan/09 07:57,30/Jan/20 16:55,29/Dec/08 16:51,5.2.0,,,,,,,5.3.0,,,Message Store,,,,0,"When a destination is removed, all open file handles inside HashIndex will be leaked because HashIndex.clear() closes the index, deletes the backing store files, then reopens the files.  There is no provision for closing the HashIndex without reopening the files.  Eventually the broker runs out of file handles and hangs.

For reference, here is the stack trace down to HashIndex.clear from the removeDestination call:

{code}
	  at org.apache.activemq.kaha.impl.index.hash.HashIndex.clear(HashIndex.java:313)
	  at org.apache.activemq.kaha.impl.container.MapContainerImpl.clear(MapContainerImpl.java:385)
	  at org.apache.activemq.store.kahadaptor.KahaReferenceStore.removeAllMessages(KahaReferenceStore.java:201)
	  at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.removeAllMessages(KahaTopicReferenceStore.java:320)
	  at org.apache.activemq.store.amq.AMQMessageStore.removeAllMessages(AMQMessageStore.java:503)
	  at org.apache.activemq.broker.region.Topic.dispose(Topic.java:452)
	  at org.apache.activemq.broker.region.AbstractRegion.dispose(AbstractRegion.java:469)
	  at org.apache.activemq.broker.region.AbstractRegion.removeDestination(AbstractRegion.java:185)
	  at org.apache.activemq.broker.region.RegionBroker.removeDestination(RegionBroker.java:289)
	  at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:146)
	  at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:146)
	  at org.apache.activemq.advisory.AdvisoryBroker.removeDestination(AdvisoryBroker.java:173)
	  at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:146)
	  at org.apache.activemq.broker.MutableBrokerFilter.removeDestination(MutableBrokerFilter.java:153)
	  at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:146)
	  at org.apache.activemq.broker.MutableBrokerFilter.removeDestination(MutableBrokerFilter.java:153)
...
{code}",,snstanton,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/08 01:17;snstanton;patches;https://issues.apache.org/jira/secure/attachment/12461092/patches",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-12-29 16:51:32.74,,,false,,,,,,,,,,,,,,,,,41684,,,Mon Dec 29 16:51:32 UTC 2008,,,,,,,,"0|i0rzxz:",161467,,,,,,,,,,,,,,,,,,,"10/Jul/08 01:17;snstanton;The attached patch attempts to resolve this issue by removing the state associated with a destination when it is removed.  Note that this patch resolves the issue for the Kaha message store, but does not attempt to resolve it for other message store types.

Summary of changes:

* Changed BaseDestination.dispose() to call dispose() on the MessageStore.
* Added Index.delete() method.
* Factored out AbstractMessageStore to hold the destination and the default implementations of various methods.
* Added dispose() to the MessageStore interface with implementations for KahaReferenceStore and KahaTopicReferenceStore that delete the messageContainer and subscriberContainer.
* Added KahaReferenceStoreAdapter.removeReferenceStore() that drops references to a message store that is being deleted.
* Added MapContainer.delete() with implementations for all three container types.","29/Dec/08 16:51;rajdavies;Fixed by SVN revision 729939, 729940, 729942",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock on producerWindow.waitForSpace() in ActiveMQMessageProducer,AMQ-2033,12482736,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,jurna,jurna,15/Dec/08 08:26,29/Dec/08 11:26,30/Jan/20 16:55,29/Dec/08 11:26,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"It seems, that producer throttling with producerWindow enabled doesn't work at all. I'm attaching unit test for this. After sending about ~80msg producer stops and never resumes sending. 
The problem is that producerWindow is not started ActiveMQMessageProducer. There must be something like this:
producerWindow.start();
I'm also attaching patch for this bug",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/08 08:28;jurna;ProducerFlowControlTest.java;https://issues.apache.org/jira/secure/attachment/12461294/ProducerFlowControlTest.java","16/Dec/08 09:02;jurna;ProducerFlowControlTest.patch;https://issues.apache.org/jira/secure/attachment/12461269/ProducerFlowControlTest.patch","24/Dec/08 06:27;jurna;producer.patch;https://issues.apache.org/jira/secure/attachment/12461241/producer.patch","15/Dec/08 08:27;jurna;producer.patch;https://issues.apache.org/jira/secure/attachment/12461347/producer.patch",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2008-12-15 20:12:30.535,,,false,,,,,,,,,,,,,,,,,38768,,,Mon Dec 29 11:26:26 UTC 2008,,,,Patch Available,,,,"0|i0s0c7:",161531,,,,,,,,,,,,,,,,,,,"15/Dec/08 20:12;gtully;This looks like a good catch.
w.r.t the test case you mentioned, do you also have a patch for the ProducerFlowControlTest. The ProducerFlowControlTest.java attachment is the same as the current trunk revision.
","16/Dec/08 09:04;jurna;Sorry, here is the patch for ProducerFlowControlTest","17/Dec/08 12:01;gtully;patch applied in r727353. Thanks for the fix and the test case,","23/Dec/08 17:26;jurna;Now with this patch, there is one thread for every producer created. On heavy systems, there are big amount of threads created (hundreds) and waiting, because every producerWindow has it's own thread executor. I thing they should reuse session thread pool or smth. Should I create new issue for this?","24/Dec/08 06:25;jurna;Updated","24/Dec/08 06:27;jurna;Patch wich includes producer window stop","24/Dec/08 06:29;jurna;Now prducer has thread leak, because it doesn't close producerWindow on producer close. I've attached patch, which closes the producer window (this patch includes both fixes).","29/Dec/08 11:26;gtully;I added a close to the original commit so the close (same as your second patch) is currently on trunk: see the [diff|http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/ActiveMQMessageProducer.java?p2=%2Factivemq%2Ftrunk%2Factivemq-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2FActiveMQMessageProducer.java&p1=%2Factivemq%2Ftrunk%2Factivemq-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2FActiveMQMessageProducer.java&r1=727353&r2=727352&view=diff&pathrev=727353]

Re the thread usage, and thread per producer. Please open another issue for that as SystemUsage may need a little refactor to obtain a thread pool or executor reference.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
More than one Thread can be created for a JMS Session,AMQ-2025,12482678,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,rajdavies,rajdavies,05/Dec/08 06:29,05/Dec/08 06:45,30/Jan/20 16:55,05/Dec/08 06:45,5.1.0,5.2.0,,,,,,5.3.0,,,JMS client,,,,0,"There is currently no guard around the creation of more than taskRunner in the ActiveMQSessionExecutor.wakeup() call.
The wakeup() call cannot itself be synchronized because that will lead to deadlocks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75117,,,Fri Dec 05 06:45:05 UTC 2008,,,,,,,,"0|i0s033:",161490,,,,,,,,,,,,,,,,,,,"05/Dec/08 06:45;rajdavies;Fixed by SVN revision 723614",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in broker - Temporary Queue related (fix proposal included),AMQ-1790,12482583,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,gregory.mostizky,gregory.mostizky,11/Jun/08 10:24,06/Nov/08 16:58,30/Jan/20 16:55,19/Jun/08 23:12,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"ActiveMQ broker leaks memory when using temp queues.
This is critical for projects that use spring based synchronous messaging because each message creates & destroys new temp queue,
however because of the leak they are not completely cleaned up resulting in OutOfMemory exception.

First these are the classes that are leaked:
org.apache.activemq.usage.MemoryUsage
org.apache.activemq.management.PollCountStatisticImpl
org.apache.activemq.usage.DefaultUsageCapacity

Cause:
org.apache.activemq.broker.region.BaseDestination is a base class for queues and by extension TempQueues.
When TempQueue is created it will call BaseDestination constructor which will allocate some memory usage and statistics objects.
However, the cleanup operation is missing - when TempQueue is destroyed these resources are not removed, and because these objects form a tree with the root being the root SystemUsage object they are never deleted.

Solution:
BaseDestination should implement dispose() method - this method is already defined in Destination interface but not implemented in BaseDestination.
This method should cleanup all the resources allocated during it's creation. For example, see Queue.dispose().


","ActiveMQ broker 5.1 
Spring based application with synchronous messages (temp queue based)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-11 10:54:56.468,,,false,,,,,,,,,,,,,,,,,84770,,,Thu Nov 06 16:58:29 UTC 2008,,,,,,,,"0|i0s05z:",161503,,,,,,,,,,,,,,,,,,,"11/Jun/08 10:54;rajdavies;Fixed by SVN revision 666617","12/Jun/08 10:16;gregory.mostizky;It turns that there is additional source of memory leak in the above scenario.

Class org.apache.activemq.broker.region.AbstractTempRegion in it's dispose() method doesnt dispose it's destinations when it's running in CacheTempDestinations=false mode (which is default). I fixed the method and used the fixed version on overnight stress test and it so far it seems ok.

The fix (I added the else part):

    protected final synchronized void dispose(ConnectionContext context,
            Destination dest) throws Exception {
        // add to cache
        if (this.doCacheTempDestinations) {
            cachedDestinations.put(new CachedDestination(dest
                    .getActiveMQDestination()), dest);
        } else {
            try {
                dest.dispose(context);
                dest.stop();
            } catch (Exception e) {
                LOG.warn(""Failed to dispose of "" + dest, e);
            }
        }
    }","12/Jun/08 10:18;gregory.mostizky;Fixed the formating:

{code:title=org.apache.activemq.broker.region.AbstractTempRegion.java|borderStyle=solid}
    protected final synchronized void dispose(ConnectionContext context,
            Destination dest) throws Exception {
        // add to cache
        if (this.doCacheTempDestinations) {
            cachedDestinations.put(new CachedDestination(dest
                    .getActiveMQDestination()), dest);
        } else {
            try {
                dest.dispose(context);
                dest.stop();
            } catch (Exception e) {
                LOG.warn(""Failed to dispose of "" + dest, e);
            }
        }
    }
{code} ","19/Jun/08 23:12;rajdavies;Fixed by svn revision 669511","06/Nov/08 16:41;nnzz;Hi there,

I just installed ActiveMQ 5.2, especially for the fix of the above problem, but the above issue is still occurring.

After instantiating circa 1300 temp queues I am getting the following error: java.lang.OutOfMemoryError : unable to create new native thread

Also if I go to the web admin (http://localhost:8161/admin/topics.jsp) I can see a long list of temp queues that don't go anywhere...

Would you be able to advise us when the fix for this issue will be released.

Many thanks

N","06/Nov/08 16:58;gtully;N, can you post your test case, how does it compare with http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/advisory/TempQueueMemoryTest.java?view=markup",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic messages cause MemoryUsage to increase slowly over time,AMQ-1833,12482645,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,tpounds,tpounds,30/Jun/08 22:38,04/Sep/08 16:08,30/Jan/20 16:55,04/Sep/08 16:05,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"In our particular scenario we were using ActiveMQ 5.0.0.14-fuse with ServiceMix 3.2.1 and JMS binding components configured via spring using a VMTransport in our connection factory.

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans  xmlns:jms=""http://servicemix.apache.org/jms/1.0"">
      <jms:consumer service=""xsite:jms-consumer""
                                    endpoint=""myConsumer""
                                    targetService=""impl:eip-pipeline""
                                    targetEndpoint=""transformXML""
                                    destinationName=""queue.input""
                                    connectionFactory=""#connectionFactory""
                                    cacheLevel=""3""
                                    transacted=""jms"" />

      <jms:connectionFactory brokerURL=""vm://localhost""/>
</beans>
{code}

What we see is a small memory leak related to advisory messages where the broker MemoryUsage is incremented slowly over time.  After investigating this further we saw that certain messages references were being incremented more than they were decremented.  As a result the method org.apache.activemq.usage.MemoryUsage.decreaseUsage() was not being called when needed inside the org.apache.activemq.command.Message.decrementReferenceCount() due to the referenceCount being invalid.  AFter a while, 2days or so, with our configuration producerFlowControl would stop the flow of messages (invalidly) due to this problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/08 22:39;tpounds;r672943.diff;https://issues.apache.org/jira/secure/attachment/12461165/r672943.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-04 16:05:02.606,,,false,,,,,,,,,,,,,,,,,84754,,,Thu Sep 04 16:05:02 UTC 2008,,,,,,,,"0|i0s06f:",161505,,,,,,,,,,,,,,,,,,,"30/Jun/08 22:39;tpounds;Attaching patch that seems to fix our issues in our limited testing environment.","04/Sep/08 16:05;rajdavies;Fixed by SVN revision 692134",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kaha store can not retrieve messages with non ASCII charcaters,AMQ-1911,12482661,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,pruente,pruente,25/Aug/08 11:01,29/Aug/08 09:16,30/Jan/20 16:55,29/Aug/08 09:16,5.2.0,,,,,,,5.2.0,,,Message Store,,,,0,"Scenario:
A client with the host name ""meißen"" (German special character ß aka sz) sends an ObjectMessage to a persistent queue.
This message goes from the client to the broker and from the broker to the kaha store without problems.
After that, the broker cannot read it from the kaha store. Error message:
ERROR 2008-08-21 12:14:10.906       AbstractStoreCursor - Failed to fill batch
java.io.IOException: Failed to read to journal for: offset = 4770274, file = 9, size = 2317, type = 0. Reason: java.io.UTFDataFormatException: bad string
  at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
  at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:637)
  at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:523)
  at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:432)
  at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
  at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
  at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:120)
  at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:533)
  at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
  at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:188)
  at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:104)
  at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:136)
  at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1108)
  at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1196)
  at org.apache.activemq.broker.region.Queue.iterate(Queue.java:951)
  at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
  at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
  at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
  at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.UTFDataFormatException: bad string
  at org.apache.activemq.util.DataByteArrayInputStream.readUTF(DataByteArrayInputStream.java:286)
  at org.apache.activemq.openwire.v3.BaseDataStreamMarshaller.looseUnmarshalString(BaseDataStreamMarshaller.java:572)
  at org.apache.activemq.openwire.v3.ProducerIdMarshaller.looseUnmarshal(ProducerIdMarshaller.java:115)
  at org.apache.activemq.openwire.OpenWireFormat.looseUnmarshalNestedObject(OpenWireFormat.java:471)
  at org.apache.activemq.openwire.v3.BaseDataStreamMarshaller.looseUnmarsalCachedObject(BaseDataStreamMarshaller.java:488)
  at org.apache.activemq.openwire.v3.MessageIdMarshaller.looseUnmarshal(MessageIdMarshaller.java:115)
  at org.apache.activemq.openwire.OpenWireFormat.looseUnmarshalNestedObject(OpenWireFormat.java:471)
  at org.apache.activemq.openwire.v3.BaseDataStreamMarshaller.looseUnmarsalNestedObject(BaseDataStreamMarshaller.java:467)
  at org.apache.activemq.openwire.v3.MessageMarshaller.looseUnmarshal(MessageMarshaller.java:210)
  at org.apache.activemq.openwire.v3.ActiveMQMessageMarshaller.looseUnmarshal(ActiveMQMessageMarshaller.java:102)
  at org.apache.activemq.openwire.v3.ActiveMQObjectMessageMarshaller.looseUnmarshal(ActiveMQObjectMessageMarshaller.java:102)
  at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:364)
  at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:204)
  at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:521)
  ... 17 more
ERROR 2008-08-21 12:14:10.906       AbstractStoreCursor - Failed to fill batch


Unfortunately the problem occurs first in the broker. This makes it very difficult to find out the real cause of the problem, the host name with a special character.
Further on it is not possible to recover from this problem and even worse all new messages which are put into this kaha store will be also lost.

Special characters within the message (TextMessage, MappedMessage and ObjectMessage seems to be ok.","Producer: Windows XP , Broker: Windows 2003 Server, Consumer Windows 2003 Server, all activemq-5.2-20080803.231633-26",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-08-29 09:16:48.808,,,false,,,,,,,,,,,,,,,,,75178,,,Fri Aug 29 09:16:48 UTC 2008,,,,,,,,"0|i0s067:",161504,,,,,,,,,,,,,,,,,,,"29/Aug/08 09:16;gtully;fixed in rev 690155.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in broker can occur when optimised dispatch is true,AMQ-1878,12482588,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,sits,sits,07/Aug/08 03:59,15/Aug/08 14:29,30/Jan/20 16:55,14/Aug/08 17:43,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"As an experiment in my application, I set optimised dispatch to be true for the broker and discovered during the startup of my application, a deadlock could occur.  The problem is the classic lock hierarchy issue, one thread has asked for lock A then B, another has asked for lock B then A.

I've attached an annotated jstack output with just the deadlock information, annotated with the locks involved.  I have also added a patch which seems to resolve the issue, but I can't be sure if the change has other ramifications.

The problem in a nutshell is one thread calls Queue.addSubscription(), which locks dispatchLock, and then calls wakeup/iterate() which blocks on iteratingMutex.

Another thread meanwhile has called Queue.send(), which locks iteratingMutex via wakeup/iterate(), but then tries to call doPageIn() which requires dispatchLock.

It seems to me addSubscription() doesn't need to hold on to dispatchLock while calling wakeup/iterate(), so I moved the wakeup() outside the usage of dispatchLock.  This ensures the lock heirarchy between iteratingMutex and dispatchLock is always obtained in the same order.  removeSubscription() has the same issue.

",,sits,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/08 03:59;sits;ASF.LICENSE.NOT.GRANTED--deadlock.txt;https://issues.apache.org/jira/secure/attachment/12461234/ASF.LICENSE.NOT.GRANTED--deadlock.txt","07/Aug/08 03:59;sits;ASF.LICENSE.NOT.GRANTED--queue.patch;https://issues.apache.org/jira/secure/attachment/12461195/ASF.LICENSE.NOT.GRANTED--queue.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-08-14 17:43:35.677,,,false,,,,,,,,,,,,,,,,,84742,,,Thu Aug 14 17:43:35 UTC 2008,,,,,,,,"0|i0rzwv:",161462,,,,,,,,,,,,,,,,,,,"14/Aug/08 17:43;rajdavies;Fixed by SVN revision 685971 and revision 686236",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException on restart of broker with durable subscriptions,AMQ-1872,12482567,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,rajdavies,rajdavies,28/Jul/08 19:43,29/Jul/08 04:22,30/Jan/20 16:55,29/Jul/08 04:22,5.1.0,5.2.0,,,,,,5.2.0,,,Message Store,,,,0,"We have two brokers A & B, with a producer on A and durable subscriber on B. A sends 50K messages and B consumes 25K messages. Then broker B is shutdown. We then restart Broker B and restablish the durable subscription.
We are seeing Broker B throwing the following array out of bounds exception when cleaning up the persistent adapter indexes after the consumer reconnects to the restarted broker B.

Caused by: java.lang.ArrayIndexOutOfBoundsException
        at java.lang.System.arraycopy(Native Method)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.addToBin(HashIndex.java:431)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.doLoad(HashIndex.java:497)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.doCompress(HashIndex.java:535)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.load(HashIndex.java:253)
        at org.apache.activemq.kaha.impl.container.MapContainerImpl.load(MapContainerImpl.java:107)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStoreAdapter.getMapReferenceContainer(KahaReferenceStoreAdapter.java:210)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStoreAdapter.createTopicReferenceStore(KahaReferenceStoreAdapter.java:168)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.createTopicMessageStore(AMQPersistenceAdapter.java:461)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:94)
        at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:425)
        at org.apache.activemq.broker.jmx.ManagedTopicRegion.createDestination(ManagedTopicRegion.java:56)
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:266)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:141)
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:147)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:141)
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:148)
        at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:385)
        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:67)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:383)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:92)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:529)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        ... 1 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84744,,,Tue Jul 29 04:22:08 UTC 2008,,,,,,,,"0|i0s05r:",161502,,,,,,,,,,,,,,,,,,,"29/Jul/08 04:22;rajdavies;Fixed by SVN revision 680465",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource Adapter's ManagedSessionProxy.setMessageListener is commented out.,AMQ-1756,12482512,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,mtrimpe,mtrimpe,29/May/08 17:34,04/Jun/08 10:37,30/Jan/20 16:55,04/Jun/08 10:37,4.0.1,4.0.2,4.1.0,4.1.1,4.1.2,5.0.0,5.1.0,5.2.0,,,Connector,JCA Container,,,0,"In the org.apache.activemq.ra.ManagedSessionProxy class the setMessageListener method doesn't do anything;.

This prevents the MessageListener from being added to the Session and that makes it kind of hard to listen to messages.

It seems quite probable that this is just a quick debugging fix that accidentally made it into subversion; but if there is some reason for this that I can't see please let me know.

The code:
    public void setMessageListener(MessageListener listener) throws JMSException {
        getSession(); // .setMessageListener(listener);
    }
",,antoniogmc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-04 10:37:16.882,,,false,,,,,,,,,,,,,,,,,84360,,,Wed Jun 04 10:37:16 UTC 2008,,,,,,,,"0|i0rzwf:",161460,,,,,,,,,,,,,,,,,,,"04/Jun/08 10:37;rajdavies;Not sure why it was commented out - Fixed by SVN revision 663052",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception on publishing persistent (disk persistence) message once consumer comes up.,AMQ-1701,12482076,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,rajdavies,rajdavies,30/Apr/08 06:28,30/Apr/08 06:35,30/Jan/20 16:55,30/Apr/08 06:35,5.0.0,5.1.0,,,,,,5.2.0,,,,,,,0,"Condition:
Message consumer is down
Message producer is publishing messages that ActiveMQ is writing to its store on disk
Now, when message consumer comes up, all the previous messages that were backed up on disk start getting deliered to consumer, however, message producer is no longer able to publish message. following exception is thrown


Caused by: javax.jms.JMSException: /mmca/activemq-data/journal/data-29 (File exists)
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1181)
at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1640)
at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:226)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84610,,,Wed Apr 30 06:35:14 UTC 2008,,,,,,,,"0|i0s0a7:",161522,,,,,,,,,,,,,,,,,,,"30/Apr/08 06:35;rajdavies;Fixed by SVN revision 652300",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AmqPersistenceAdapter throws java.io.IOException: Failed to read to journal for: offset,AMQ-1650,12482438,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,rajdavies,rajdavies,09/Apr/08 13:18,09/Apr/08 13:20,30/Jan/20 16:55,09/Apr/08 13:20,5.0.0,,,,,,,5.1.0,,,Message Store,,,,0,"Using durable consumers with multiple topics - can occasionally see this timing issue:
Caused by: java.io.IOException: Failed to read to journal for: offset = 17883251, file = 2, size = 0, type = 0. Reason: java.io.IOException: Invalid location: offset = 17883251, file = 2, size = 0, type = 0, : java.lang.NegativeArraySizeException
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:597)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:483)
	at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:431)
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:80)
	at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.recoverNextMessages(KahaTopicReferenceStore.java:285)
	at org.apache.activemq.store.amq.AMQTopicMessageStore.recoverNextMessages(AMQTopicMessageStore.java:62)
	at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.doFillBatch(TopicStorePrefetch.java:106)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:185)
	... 27 more
Caused by: java.io.IOException: Invalid location: offset = 17883251, file = 2, size = 0, type = 0, : java.lang.NegativeArraySizeException
	at org.apache.activemq.kaha.impl.async.DataFileAccessor.readRecord(DataFileAccessor.java:95)
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:585)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:480)
	... 34 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84624,,,Wed Apr 09 13:20:02 UTC 2008,,,,,,,,"0|i0s05b:",161500,,,,,,,,,,,,,,,,,,,"09/Apr/08 13:20;rajdavies;Fixed by svn revision 646332",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledTaskRunner fails to shutdown after task throws exception,AMQ-1647,12482379,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,proyal,proyal,07/Apr/08 23:02,09/Apr/08 10:12,30/Jan/20 16:55,09/Apr/08 10:12,5.1.0,,,,,,,5.1.0,,,,,,,0,"the PooledTaskRunner will fail to shutdown if a task throws an exception, because the state-tracking variables are never reset.

patch and unit test attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Apr/08 23:02;proyal;ASF.LICENSE.NOT.GRANTED--PooledTaskRunner_shutdown_failure.patch;https://issues.apache.org/jira/secure/attachment/12461098/ASF.LICENSE.NOT.GRANTED--PooledTaskRunner_shutdown_failure.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-09 10:12:02.878,,,false,,,,,,,,,,,,,,,,,84804,,,Wed Apr 09 10:12:02 UTC 2008,,,,Patch Available,,,,"0|i0s05j:",161501,,,,,,,,,,,,,,,,,,,"09/Apr/08 10:12;rajdavies;Patch applied in SVN  revision 646254",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayOutOfBoundsException in ActiveMQInputStream,AMQ-1580,12482295,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,aco,jackrabbit,jackrabbit,06/Feb/08 11:14,19/Feb/08 04:38,30/Jan/20 16:55,19/Feb/08 04:38,5.0.0,,,,,,,5.1.0,,,,,,,0,"When using JMS streaming, an ArrayOutOfBoundsException occurs in ActiveMQInputStream if the length of the streamed content is exactly a multiple of the chunk size sent by ActiveMQOutputStream (64KB at the moment).

The last message received by fillBuffer in such a case has a bodyLength of 0, so
  buffer = new byte[0]; // line 225
  pos = 0; // line 227
and in the next invocation of read()
  return buffer[pos]; // line 180
fails with:
  java.lang.ArrayIndexOutOfBoundsException: 0
	at org.apache.activemq.ActiveMQInputStream.read(ActiveMQInputStream.java:180)
	at Crash.main(Crash.java:54)

Attached is Crash.java which produces the exception.","Ubuntu 7.10 / i686
Sun Java 1.6.0_03",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/08 11:14;jackrabbit;ASF.LICENSE.NOT.GRANTED--Crash.java;https://issues.apache.org/jira/secure/attachment/12460973/ASF.LICENSE.NOT.GRANTED--Crash.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-02-19 04:38:28.298,,,false,,,,,,,,,,,,,,,,,84642,,,Tue Feb 19 04:38:28 UTC 2008,,,,,,,,"0|i0s0bb:",161527,,,,,,,,,,,,,,,,,,,"19/Feb/08 04:38;aco;Fix added in 628988.

Thanks for the test case! :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
session.recover does not result in repeated redelivery - duplicate is detected and auto-acked in error,AMQ-2751,12483262,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/May/10 13:25,04/Sep/19 11:16,30/Jan/20 16:55,26/May/10 14:55,5.3.1,5.3.2,,,,,,5.4.0,,,Broker,,,,0,see test case. calling recover form message listener with redelivery delay will result in auto ack of duplicate message so it disappears in error.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/May/10 13:28;gtully;amq2751-testcase.patch;https://issues.apache.org/jira/secure/attachment/12461712/amq2751-testcase.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74817,,,Wed May 26 14:55:31 UTC 2010,,,,,,,,"0|i0rqgf:",159930,,,,,,,,,,,,,,,,,,,"26/May/10 13:28;gtully;Test case that demonstrates the issue with repeated calls to recover. with debug logging the auto ack in error can be seen","26/May/10 14:55;gtully;resolved in r948463 ; duplicate suppression needs a rollback when delivery is paused due to redelivery delay as it will get redelivered in time.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Getting: ""java.lang.UnsupportedOperationException: Possible CSRF attack"" when trying to purge queue",AMQ-2886,12483511,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cvelo,cvelo,31/Aug/10 02:14,14/Aug/19 17:59,30/Jan/20 16:55,08/Sep/10 20:53,5.3.2,,,,,,,,,,,,,,0,"When trying to purge the contents of any queue, I receive:

HTTP ERROR: 500

Possible CSRF attack
RequestURI=/admin/purgeDestination.action

Caused by:

java.lang.UnsupportedOperationException: Possible CSRF attack
	at org.apache.activemq.web.handler.BindingBeanNameUrlHandlerMapping.getHandlerInternal(BindingBeanNameUrlHandlerMapping.java:58)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:184)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:854)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)",Linux 2.6.18-128.1.10.el5.xs5.5.0.51xen #1 SMP Wed Nov 11 07:38:08 EST 2009 i686 i686 i386 GNU/Linux,chines,cvelo,Dech,dslam2000,GTan,irishka,seyffchr,Yohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-10 12:58:07.117,,,false,,,,,,,,,,,,,,,,,65588,,,Wed Aug 14 17:59:44 UTC 2019,,,,,,,,"0|i0tslz:",171944,,,,,,,,,,,,,,,,,,,"08/Sep/10 20:52;cvelo;This has been resolved with the upgrade to *5.4.0* and can be closed.","08/Sep/10 20:53;cvelo;Fixed with *5.4.0* upgrade.","10/Aug/11 12:58;soupdragon;Looks a lot like the stacktrace I've just seen on 5.5.0, Trying to either purge or delete virtual topic consumer queues when topic still exists.

May need to be re-openned.
","10/Aug/11 13:41;soupdragon;Sorry, I'm putting it down to AMQ-3425 instead.

","27/Jun/14 14:07;irishka;I have the same problem on 5.9.1 :)","05/Aug/14 21:30;dslam2000;Still see a warning of this error on 5.9.1","29/Aug/14 08:40;seyffchr;Same problem with 5.10.0 here","02/Dec/14 22:02;GTan;I confirm this problem still exist on 5.9.1. Steps to reproduce:
# Unzip the package, run {{bin\activemq}}
# Open the admin console at {{localhost:8161/admin}} with user/pass admin/admin
# Browse any queue/topic and delete/purge it","21/Apr/15 12:37;Yohn;Hi everyone, I also met this problem days ago, on my Firefox. I googled it and found that if I change the browser to IE, the problem would go away. So I guess that there might be some configuration in Firefox (maybe the Cookie configuration?) forbid the queue creation function, and a check on the browser setting might work. Hope that would help you.","17/Aug/17 14:27;Dech;Hello together.
Yohn, thank you very much! Using IE helped.","14/Aug/19 17:42;chines;This appears to still be an issue with 5.14.5.  

 

We are running an apache proxypass on the same host to provide a pretty name for the admin interface, and this happens when we try to move or copy messages between queues.   Has anyone gotten a solution to this other than change browsers?

 

 ","14/Aug/19 17:59;chines;OK, I stand corrected, this seems to be some weird behavior with open in a new tab.

The workaround that seems to work is to click the refresh on my browser (using Chrome) before I attempt any of the move/copy/delete operations on a message.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporary destinations created with PooledConnectionFactory never get deleted,AMQ-2349,12483560,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,joeluo,joeluo,06/Aug/09 16:25,19/Jun/19 09:27,30/Jan/20 16:55,02/Jul/11 19:00,5.2.0,,,,,,,5.6.0,,,Broker,,,,0,"Temporary destinations that created are bound to the underlying connection. If the connection is destroyed, then the temp destinations that bound to the connection will be destroyed.

In the case that a PooledConnectionFactory is used, the underlying connection won't be destroyed even though PooledConnection.close() is called. Instead it is returned back to the pool. Thus, the temp desinations that created would never be destroyed and all of them would be accumulated until the connection is destroyed.

We should delete the temp destinations every time when the PooledConnection.close() is called to avoid accumulation of the temporary destinations.",,mikek753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Aug/09 16:26;joeluo;tempDestination-trunk.patch;https://issues.apache.org/jira/secure/attachment/12461423/tempDestination-trunk.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-07-02 19:00:22.232,,,false,,,,,,,,,,,,,,,,,14605,,,Sat Jul 02 19:00:22 UTC 2011,,,,,,,,"0|i0akpr:",59629,,,,,,,,,,,,,,,,,,,"02/Jul/11 19:00;tabish;Patch applied with some small modifications, Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Occaional hangs on ensureConnectionInfoSent,AMQ-2798,12482129,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,wanderingwalrus,wanderingwalrus,25/Jun/10 06:48,11/Dec/18 16:48,30/Jan/20 16:55,25/Feb/11 23:35,5.3.2,,,,,,,5.5.0,,,JMS client,,,,1,"When connecting to the broker, the client occasionally starts to hang. A thread dump reveals:

{noformat}
""QuartzScheduler_Worker-7"" prio=5 tid=0x0116f190 nid=0x1ce2400 waiting on condition [0xf1fae000..0xf1fafb30]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1767)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:341)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:80)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1233)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1339)
	- locked <0x10b9bdf8> (a java.lang.Object)
	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:298)
	at org.jencks.amqpool.SessionPool.createSession(SessionPool.java:110)
	at org.jencks.amqpool.SessionPool.makeObject(SessionPool.java:78)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:974)
	at org.jencks.amqpool.SessionPool.borrowSession(SessionPool.java:53)
	at org.jencks.amqpool.ConnectionPool.createSession(ConnectionPool.java:89)
	at org.jencks.amqpool.XaConnectionPool.createSession(XaConnectionPool.java:51)
	at org.jencks.amqpool.PooledConnection.createSession(PooledConnection.java:132)
	at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:200)
{noformat}

Looking closer at the code of {{ensureConnectionInfoSent}} in {{ActiveMQConnection}}, it uses the method:

{code}
public Response syncSendPacket(Command command) throws JMSException {
{code}

which never times out, possibly causing everything to hang eternally. There does seem to be an identical method that allows for a timeout. 

{code}
    public Response syncSendPacket(Command command, int timeout) throws JMSException {
{code}

should / can ensureConnectionInfoSent use the one with the timeout instead?

We're using the failover transport:
failover:(tcp://<someIP>:54663?wireFormat.maxInactivityDuration=300000)?maxReconnectAttempts=10&amp;initialReconnectDelay=15000",,akhanzode,fbenoit,gagan.deep,jayas,pbruski,roydar,samion,smil,wangyin,windeyu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQCPP-643,,,,,,"17/Aug/10 18:04;akhanzode;blocked-connection-patch3;https://issues.apache.org/jira/secure/attachment/12461800/blocked-connection-patch3",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-17 14:34:47.85,,,false,,,,,,,,,,,,,,,,,46504,,,Wed Mar 08 14:24:05 UTC 2017,,,,,,,,"0|i0akev:",59580,,,,,,,,,,,,,,,,,,,"17/Aug/10 14:34;akhanzode;I can reproduce this issue. I am using Master/Slave configuration with Master set to waitForSlave=""true"" 
Start Master and then start consumer. Consumer hangs at ensureConnectionInfoSent() does not matter if I am using shared or unshared connection.

I added a property syncResponseTimeout in factory and connection and wired it in. Changed syncSendPacket to use timeout and I dont get hung consumer.

I am going to attach a patch.","17/Aug/10 14:37;akhanzode;Patch I used to fix this issue. I am not expert in this codebase but ping me if this is not the best way. This is STOPPING us from going to production with this issue open.","17/Aug/10 17:53;akhanzode;Attaching new patch as FailoverTransactionTest was failing. Still running tests.","17/Aug/10 18:56;tabish;Have you tried just adding in the startupMaxReconnectAttempts option to your connection URI?  This option will limit the number of time the Failover Transport will attempt to reconnect on startup and allow the client to fail after that number of tries.","17/Aug/10 19:08;akhanzode;I have startupMaxReconnectAttempts=2 and it does not work.

my brokerURL looks like failover:(tcp://hostname:61616?keepAlive=true)?randomize=false&amp;startupMaxReconnectAttempts=2

keepAlive or not it fails.","18/Aug/10 08:08;wanderingwalrus;@Tim, I think the problem is happening at a lower level than that. As in, I think the the {{ensureConnectionInfoSent}} does the {{syncSendPacket}} on some sort of advisorial transport (I think org.apache.activemq.transport.ResponseCorrelator) and not the actual specified transport. This seems likely since syncSendPacket calls {{(Response)this.transport.request(command)}} and for FailoverTransport, the implementation for this is:

{code}
    public Object request(Object command) throws IOException {
        throw new AssertionError(""Unsupported Method"");
    }
{code}

","18/Aug/10 16:06;pbruski;The attached patch may throw an NPE on timeout, depending on transport.
","18/Aug/10 21:18;akhanzode;Do you think ResponseCrrelator needs to guard against nulls? I always assumes that Command (Object o) is a valid object. Or Can we assume if Response is null the connection is closed?","18/Aug/10 21:45;tabish;Version 5.4.0 adds a RequestTimeoutException that is thrown on timeout in ResponseCorrelator so the NPE is not an issue any longer.

Currently the code is operating as designed, the case where the connection.start or createSession is hanging is awaiting a response from the broker for its ConnectionInfo.  The case in which this is happening in regards to this issue is when the Master broker is up but awaiting its slave to start as well.  In this case the Master is there but it won't respond to the ConnectionInfo and the connection breaks at which time the FailoverTransport tries again to connect.  This explains why the maxReconnectAttempts and startupMaxReconnectAttempts don't apply here since it is able to actually open a socket successfully to the Master broker, it just doesn't complete the connect cycle because the master is awaiting its slave before it will allow any connections.  Once the slave comes online and the Master completes its start-up then the Connection should be established as normal.


","19/Aug/10 11:07;pbruski;I am not sure whether it's also an issue, but it seems that although ResponseCorrelator is fixed, ReliableTransport may still return null, since it does:
{code}
while (timeout > 0) {
...
}
return response.getResult(0);
{code}

and FutureResponse does:

{code}
if (result == null && timeout > 0) {
       throw new RequestTimedOutIOException();
}
return result;
{code}","19/Aug/10 13:42;akhanzode;I see that 5.4.0 behaves better. Is there any property that controlls the timeout? Additionally I see excessive logging in this situation and activemq takes over CPU.
Here is the exception:
2010-08-19 09:39:17,090 INFO  [org.apache.activemq.broker.TransportConnection.Transport] Transport failed: java.io.IOException: The transport is not running.
java.io.IOException: The transport is not running.
	at org.apache.activemq.transport.TransportSupport.checkStarted(TransportSupport.java:107)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:179)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:244)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1247)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:808)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:768)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:187)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
	at java.lang.Thread.run(Thread.java:619)
","25/Feb/11 23:35;tabish;I believe this has been resolved, please reopen if there's still an issue here","23/Feb/12 14:23;fbenoit;Sadly, I still have this exact issue in 5.5.0 (reproducible every time). Jstack shows the same stack as described. Is there a workaround ?

Edit: Also tested with 5.5.1 and 5.6-snapshot, same behaviour.","08/Mar/13 01:19;windeyu;We encountered the error too.  We're on 5.7.0.  Below is the thread stack of the hanging thread.  It doesn't happen often, but it's there.  We're using the failover uri.

<networkConnector name=""perform33"" uri=""static:(tcp://perform31:61616?keepAlive=true&amp;wireFormat.tightEncodingEnabled=false&amp;wireFormat.cacheEnabled=false,tcp://perform38:61616?keepAlive=true&amp;wireFormat.tightEncodingEnabled=false&amp;wireFormat.cacheEnabled=false)?useExponentialBackOff=false"">



Name: defaultQuartzScheduler_Worker-1
State: WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@3bd8ed5f
Total blocked: 10  Total waited: 10

Stack trace: 
sun.misc.Unsafe.park(Native Method)
java.util.concurrent.locks.LockSupport.park(Unknown Source)
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(Unknown Source)
java.util.concurrent.ArrayBlockingQueue.take(Unknown Source)
org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1366)
org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1481)
   - locked java.lang.Object@4bdacc2e

org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:516)
org.mule.transport.jms.JmsConnector.doStart(JmsConnector.java:626)
org.mule.transport.AbstractConnector$2.onTransition(AbstractConnector.java:459)
org.mule.transport.AbstractConnector$2.onTransition(AbstractConnector.java:454)
org.mule.lifecycle.AbstractLifecycleManager.invokePhase(AbstractLifecycleManager.java:141)
org.mule.transport.ConnectorLifecycleManager.fireStartPhase(ConnectorLifecycleManager.java:63)
org.mule.transport.AbstractConnector.startAfterConnect(AbstractConnector.java:453)
   - locked org.mule.transport.jms.activemq.ActiveMQJmsConnector@20fb07d4

org.mule.transport.AbstractConnector$5.doWork(AbstractConnector.java:1601)
org.mule.retry.policies.AbstractPolicyTemplate.execute(AbstractPolicyTemplate.java:67)
org.mule.transport.AbstractConnector.connect(AbstractConnector.java:1611)
org.mule.transport.AbstractConnector.start(AbstractConnector.java:419)
   - locked org.mule.transport.jms.activemq.ActiveMQJmsConnector@20fb07d4

sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
java.lang.reflect.Method.invoke(Unknown Source)
org.mule.lifecycle.phases.DefaultLifecyclePhase.applyLifecycle(DefaultLifecyclePhase.java:225)
org.mule.lifecycle.RegistryLifecycleManager$RegistryLifecycleCallback.onTransition(RegistryLifecycleManager.java:276)
org.mule.lifecycle.RegistryLifecycleManager.invokePhase(RegistryLifecycleManager.java:155)
org.mule.lifecycle.RegistryLifecycleManager.fireLifecycle(RegistryLifecycleManager.java:126)
org.mule.registry.AbstractRegistryBroker.fireLifecycle(AbstractRegistryBroker.java:80)
org.mule.registry.MuleRegistryHelper.fireLifecycle(MuleRegistryHelper.java:121)
org.mule.lifecycle.MuleContextLifecycleManager$MuleContextLifecycleCallback.onTransition(MuleContextLifecycleManager.java:94)
org.mule.lifecycle.MuleContextLifecycleManager$MuleContextLifecycleCallback.onTransition(MuleContextLifecycleManager.java:90)
org.mule.lifecycle.MuleContextLifecycleManager.invokePhase(MuleContextLifecycleManager.java:72)
org.mule.lifecycle.MuleContextLifecycleManager.fireLifecycle(MuleContextLifecycleManager.java:64)
org.mule.DefaultMuleContext.start(DefaultMuleContext.java:202)
   - locked org.mule.DefaultMuleContext@13aaf18f
","08/Mar/13 01:29;windeyu;By the way, we turned off the producer flow control.

<policyEntry queue="">"" timeBeforeDispatchStarts=""30000"" producerFlowControl=""false"" useCache=""false"">
</policyEntry>","08/Mar/13 02:42;wangyin;You can not talk to the master which the slave is not attached.
The master being waiting for the slave essentially opens a server socket but never accepts/reads the client socket.
Have you tried to enable soTimeout option?
http://activemq.apache.org/tcp-transport-reference.html","11/Mar/13 21:57;windeyu;Hi SuoNayi,
Thank you for your feedback.  Your second point about soTimeout is a valuable suggestion for me to try!  Since this issue happens rarely for us, I will tell if this will fix our case over time.
About your first point, I'm confused.  We're using the ""shared storage master/slave"".  The slave is simply standby and keeps trying to grab the distributed file lock.  The master has no knowledge of the slave(s).  The Jms clients (the mule connectors in our case) can establish connections only to the master.  I don't follow when you said ""you can not talk to the master which the slave is not attached.""  Or am I mistaken somewhere?
Thanks.","12/Mar/13 05:49;wangyin;Anish said he can reproduce the issue when he uses the pure master/slave and the master is waiting for the slave to be attached.
I think the master is half-started and unable to communicate with clients so I said ""You can not talk to the master which the slave is not attached to"".
The issue can not be reproduced when I use AMQ 5.7 in my test,I'm not sure how the issue of this case is solved at the moment.","31/Jan/15 16:30;smil;I just met this problem in our environment. 

My stacktrace revelas the same dead-lock, but with a different command:
""default-threads - 38"" prio=10 tid=0x000000001803f800 nid=0x4dd4 waiting on condition [0x00002aced9085000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00000000b07c6010> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)
        at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:374)
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1406)
        at org.apache.activemq.ActiveMQConnection.cleanup(ActiveMQConnection.java:1626)
        at org.apache.activemq.ra.ActiveMQManagedConnection.cleanup(ActiveMQManagedConnection.java:235)
        at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreArrayListManagedConnectionPool.returnConnection(SemaphoreArrayListManagedConnectionPool.java:435)
        at org.jboss.jca.core.connectionmanager.pool.AbstractPool.returnConnection(AbstractPool.java:561)
        at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.returnManagedConnection(AbstractConnectionManager.java:425)
        at org.jboss.jca.core.connectionmanager.listener.TxConnectionListener$TransactionSynchronization.afterCompletion(TxConnectionListener.java:732)
        at org.jboss.jca.core.connectionmanager.transaction.TransactionSynchronizer.invokeAfter(TransactionSynchronizer.java:380)
        at org.jboss.jca.core.connectionmanager.transaction.TransactionSynchronizer.afterCompletion(TransactionSynchronizer.java:329)
        at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
        at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
        - locked <0x00000000b072ab98> (a java.lang.Object)
        at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
        at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:162)
        at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
        at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:126)
        at com.arjuna.ats.jbossatx.BaseTransactionManagerDelegate.commit(BaseTransactionManagerDelegate.java:75)
        at org.jboss.as.ejb3.inflow.MessageEndpointInvocationHandler.afterDelivery(MessageEndpointInvocationHandler.java:72)
        at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.jboss.as.ejb3.inflow.AbstractInvocationHandler.handle(AbstractInvocationHandler.java:60)
        at org.jboss.as.ejb3.inflow.MessageEndpointInvocationHandler.doInvoke(MessageEndpointInvocationHandler.java:136)
        at org.jboss.as.ejb3.inflow.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:73)
        at com.sun.proxy.$Proxy151.afterDelivery(Unknown Source)
        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.afterDelivery(MessageEndpointProxy.java:128)
        at org.apache.activemq.ra.MessageEndpointProxy.afterDelivery(MessageEndpointProxy.java:69)
        at org.apache.activemq.ra.ServerSessionImpl.afterDelivery(ServerSessionImpl.java:225)
        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:1029)
        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:169)
        at org.jboss.jca.core.workmanager.WorkWrapper.run(WorkWrapper.java:218)
        at org.jboss.threads.SimpleDirectExecutor.execute(SimpleDirectExecutor.java:33)
        at org.jboss.threads.QueueExecutor.runTask(QueueExecutor.java:808)
        at org.jboss.threads.QueueExecutor.access$100(QueueExecutor.java:45)
        at org.jboss.threads.QueueExecutor$Worker.run(QueueExecutor.java:849)
        at java.lang.Thread.run(Thread.java:744)
        at org.jboss.threads.JBossThread.run(JBossThread.java:122)
","31/Jan/15 20:04;smil;Actially there is a general problem behind the scenes:

The component ResponseCorrelator is written in an optimistic manner. The assumption is that in case a command sent to the broker, an answer will reach us guaranteed.

This is not true in case of failover situations. It might happen, that we were able to serialize the last bit of the command just before the broker has crashed/killed. This is true for the failover-transport as well.

This means ResponseCorrelator could hang forever at very different locations.

The solution would be to define a time-to-live for the commands. Some of the commands do have timeout, the calling code also takes care of timeouts. (Callers without timeout does not cope with the situation well. In my case I interrupted the above thread, and then JBoss started to process the messages using two different processors at the same time). Thus, ResponseCorrelator should repeat the command to the server using the same commandID(?). 
In case the command ID is known to the failover-transport (ResponseMap) it might ignore the resend, because most likely it is still attempting to send it. TTL could be a larger number like 30-40 sec with infinite as default.




","02/Mar/17 14:54;roydar;Issue still happening in 5.13.0:

sun.misc.Unsafe.park(Native Method)
java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:403)
org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:48)
org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1381)
org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1495)
org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:522)
","08/Mar/17 12:21;samion;We are also experiencing this occasional hang with master/slave configuration using 5.11.1.

{code}
        sun.misc.Unsafe.park(Native Method)
        java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
        java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
        java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:403)
        org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
        org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
        org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1387)
        org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1501)
        org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:323)
        org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:192)
{code}
","08/Mar/17 14:24;roydar;Yes, we have validated that the issue was resolved in version 5.14.0
https://issues.apache.org/jira/browse/AMQ-6362
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect handling of interruptions during commit or rollback of a transaction,AMQ-2191,12483097,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,mgottschalk,mgottschalk,01/Apr/09 14:18,31/Jul/18 13:48,30/Jan/20 16:55,27/Nov/15 12:55,5.3.0,,,,,,,5.13.0,,,,,,,1,"We have a process framework that sends interruptions to threads that should be stopped or paused. Some of these threads interact with ActiveMQ, so interruptions can occur inside ActiveMQ at different points.
A problem occurs if the interruption is detected in ActiveMQConnection.syncSendPacket during commit or rollback of a transaction. ActiveMQ then throws a JMSException so that it appears to Bitronix as if the XA transaction is in an inconsistent state (see stacktrace in the attached file).

In our opinion, the interruption should be ignored by ActiveMQ during the critical commit or rollback phase. It is not mandatory that an interruption has an immediate effect. Especially such a non-interruptable step as rollback or commit should be performed even though an interruption occurs.

I created a patch for the class TransactionContext which, in case of an interruption, resets the interruption state of the thread, retries the syncSendPacket method call and restores the thread's interruption state afterwards. In this manner, no inconsistent state exceptions occur in the transaction manager any longer and interruption is deferred until the commit/rollback has succeeded.
","Java 1.6.0_02
Kubuntu Linux  2.6.24-22
Bitronix Transaction Manager 1.3.2",bhuman.vyas@gmail.com,diptesh2007,gtully,jira-bot,lichtin,mgottschalk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/10 17:07;ralfamm;ACTIVEMQ-PATCH;https://issues.apache.org/jira/secure/attachment/12461655/ACTIVEMQ-PATCH","01/Apr/09 14:21;mgottschalk;activemq_interruption_fix.diff;https://issues.apache.org/jira/secure/attachment/12461465/activemq_interruption_fix.diff","01/Apr/09 14:21;mgottschalk;xa-jms-exception.txt;https://issues.apache.org/jira/secure/attachment/12461464/xa-jms-exception.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2009-09-11 17:16:29.582,,,false,,,,,,,,,,,,,,,,,75033,,,Tue Jul 31 13:47:19 UTC 2018,,,,Patch Available,,,,"0|i0rpvb:",159835,,,,,,,,,,,,,,,,,,,"01/Apr/09 14:21;mgottschalk;Added attachments: the exception that occurs in case of interruption during commit/rollback and the patch that fixes the problem.","11/Sep/09 17:16;rajdavies;Fixed by SVN revision 813927","10/Mar/10 17:05;ralfamm;We use ActiveMQ in a similar scenario as pictured above. (Our transaction manager is Atomikos TransactionEssentials, but that is probably unimportant.) One major difference in our use case is that we use an embedded broker and thus the VM transport.

When the oneway method of the class VMTransport is interrupted it doesn't throw an InterruptedIOException but just an IOException.
Therefore the interrupt handling code in TransactionContext.syncSendPacketWithInterruptionHandling isn't used when the VM transport is used.

I have a small patch that has VMTransport throw an InterruptedIOException when it is interrupted. Tests show that this patch seems to help.","10/Mar/10 17:07;ralfamm;This patch seems to fix the problem for me when using the VM transport.","11/Mar/10 13:36;rajdavies;Fixed on 5.4 by revision 921822 and on 5.3.1 vy SVN revision 921844","18/Nov/15 14:57;gtully;I have come across a similar issue, different TM but that is incidental.
In my case, it is an ack as part of commit that sees the first interrupt. This causes a beforecompletion error. However on the rollback, the ack is done/gone and the broker side acks are missing so even after the client side rollback, the messages remain inflight to the consumer. 
From what I can see, it is not safe to assume a retry of a commit/rollback op is sufficient.
I think that an InterruptedIOException in the XA case should be reported to the exception listener and allow the connection to close, forcing a rollback broker side and forcing a rollback client side also.
{code}
2015-08-19 10:17:03,827 WARN [com.arjuna.ats.arjuna] (Transaction Reaper) ARJUNA012117: TransactionReaper::check timeout for TX 0:ffff650182a8:58549259:55d38674:22df0 in state RUN
2015-08-19 10:17:04,065 WARN [com.arjuna.ats.arjuna] (Transaction Reaper) ARJUNA012117: TransactionReaper::check timeout for TX 0:ffff650182a8:58549259:55d38674:22dec in state CANCEL
2015-08-19 10:17:04,328 WARN [com.arjuna.ats.arjuna] (Transaction Reaper) ARJUNA012117: TransactionReaper::check timeout for TX 0:ffff650182a8:58549259:55d38674:22df0 in state SCHEDULE_CANCEL
2015-08-19 10:17:04,488 WARN [com.arjuna.ats.jta] (Transaction Reaper Worker 0) ARJUNA016045: attempted rollback of < formatId=131077, gtrid_length=29, bqual_length=36, tx_uid=0:ffff650182a8:58549259:55d38674:22dec, node_name=1, branch_uid=0:ffff650182a8:58549259:55d38674:22ded, subordinatenodename=null, eis_name=unknown eis name > (org.apache.activemq.ra.LocalAndXATransaction@3de1f429) failed with exception code XAException.XAER_RMFAIL: javax.transaction.xa.XAException: java.io.InterruptedIOException
at org.apache.activemq.TransactionContext.toXAException(TransactionContext.java:805)
at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:532)
at org.apache.activemq.ra.LocalAndXATransaction.rollback(LocalAndXATransaction.java:141)
at com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord.topLevelAbort(XAResourceRecord.java:358) [jbossjts-jacorb-4.17.7.Final-redhat-4-bz-1023562.jar:4.17.7.Final-redhat-1]
at com.arjuna.ats.arjuna.coordinator.BasicAction.doAbort(BasicAction.java:2853) [jbossjts-jacorb-4.17.7.Final-redhat-4-bz-1023562.jar:4.17.7.Final-redhat-1]
at com.arjuna.ats.arjuna.coordinator.BasicAction.doAbort(BasicAction.java:2832) [jbossjts-jacorb-4.17.7.Final-redhat-4-bz-1023562.jar:4.17.7.Final-redhat-1]
at com.arjuna.ats.arjuna.coordinator.BasicAction.Abort(BasicAction.java:1625) [jbossjts-jacorb-4.17.7.Final-redhat-4-bz-1023562.jar:4.17.7.Final-redhat-1]
at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.cancel(TwoPhaseCoordinator.java:118) [jbossjts-jacorb-4.17.7.Final-redhat-4-bz-1023562.jar:4.17.7.Final-redhat-1]
at com.arjuna.ats.arjuna.AtomicAction.cancel(AtomicAction.java:215) [jbossjts-jacorb-4.17.7.Final-redhat-4-bz-1023562.jar:4.17.7.Final-redhat-1]
at com.arjuna.ats.arjuna.coordinator.TransactionReaper.doCancellations(TransactionReaper.java:370) [jbossjts-jacorb-4.17.7.Final-redhat-4-bz-1023562.jar:4.17.7.Final-redhat-1]
at com.arjuna.ats.internal.arjuna.coordinator.ReaperWorkerThread.run(ReaperWorkerThread.java:78) [jbossjts-jacorb-4.17.7.Final-redhat-4-bz-1023562.jar:4.17.7.Final-redhat-1]
Caused by: javax.jms.JMSException: java.io.InterruptedIOException
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:72)
at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1323)
at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1315)
at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1972)
at org.apache.activemq.ActiveMQSession$5.afterRollback(ActiveMQSession.java:948)
at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:161)
at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:527)
... 9 more
Caused by: java.io.InterruptedIOException
at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:102)
at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1321)
... 14 more
2015-08-19 10:17:04,493 WARN [com.arjuna.ats.arjuna] (Transaction Reaper Worker 0) ARJUNA012091: Top-level abort of action 0:ffff650182a8:58549259:55d38674:22dec received TwoPhaseOutcome.FINISH_ERROR from com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord
2015-08-19 10:17:15,361 WARN [com.arjuna.ats.arjuna] (default-threads - 46) ARJUNA012077: Abort called on already aborted atomic action 0:ffff650182a8:58549259:55d38674:22dec{code}
","27/Nov/15 12:36;jira-bot;Commit 0a12bcb928f151b5ace9a0cffc34ec717b6a8e9c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0a12bcb ]

https://issues.apache.org/jira/browse/AMQ-2191 https://issues.apache.org/jira/browse/AMQ-3529 - rework fixes to remove uncertanty from dealing with intettuptedexception. Sync requests will trap interrupts that ocurr while waiting for responses and fail the connection with an interruptedioexception. Interrupts pending before requests will be suppressed, allowing possible clean shutdown. It is not safe to replay openwire ops b/c they are not idempotent, the only safe option is to have a teardown of the broker side state from a close
","27/Nov/15 12:52;gtully;rework of this issue to make interruption of an inprogress request an error and allowing pending interrupts to be ignored for subsequent requests avoids the need to wrap close at a higher level. AMQ-3547","27/Nov/15 12:55;gtully;removed the uncertainty around dealing with interruption.

In essence, interrupting a pending request will be fatal to the connection, like any IOException. Interrupts are suspended and resumed for subsequent requests till the connection is closed.

This is the case b/c it is not safe to replay operations and it is not possible to know if the request got to the broker.
The typical use case for interrupt is to terminate gracefully but this can only be done safely with a close.

","31/Jul/18 13:47;diptesh2007;I am still getting this exception with 5.13 on the following scenario:

1) We have a producer template which writes messages to queue without using transaction.

2) When the queue depth reaches around 75000, we are getting the same exception which is mentioned below. 

3) When @Transaction is applied on the producerTemplate.send() , everything works fine.

 
 Exception in thread ""Thread-10"" org.apache.camel.CamelExecutionException: Exception occurred during execution on the exchange: Exchange[ID-*****][Message: CB occured during JMS processing; nested exception is javax.jms.JMSException: java.io.InterruptedIOException
 at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:316)
 at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:169)
 at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:497)
 at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.send(JmsConfiguration.java:245)
 at org.apache.camel.component.jms.JmsProducer.doSend(JmsProducer.java:413)
 at org.apache.camel.component.jms.JmsProducer.processInOnly(JmsProducer.java:367)
 at org.apache.camel.component.jms.JmsProducer.process(JmsProducer.java:153)
 at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)
 at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:109)
 at org.apache.camel.processor.UnitOfWorkProducer.process(UnitOfWorkProducer.java:68)
 at org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:412)
 at org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:380)
 at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:270)
 at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:380)
 at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:221)
 at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:124)
 at org.apache.camel.impl.DefaultProducerTemplate.sendBodyAndHeaders(DefaultProducerTemplate.java:233)
 ... 2 more
 Caused by: javax.jms.JMSException: java.io.InterruptedIOException
 at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
 at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1292)
 at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1284)
 at org.apache.activemq.TransactionContext.begin(TransactionContext.java:237)
 at org.apache.activemq.ActiveMQSession.doStartTransaction(ActiveMQSession.java:1809)
 at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1735)
 at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:277)
 at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:212)
 at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:79)
 at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:62)
 at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:636)
 at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.doSend(JmsConfiguration.java:353)
 at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.doSendToDestination(JmsConfiguration.java:292)
 at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.access$100(JmsConfiguration.java:234)
 at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate$1.doInJms(JmsConfiguration.java:248)
 at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:494)
 ... 16 more
 Caused by: java.io.InterruptedIOException
 at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:102)
 at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
 at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
 at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1290)
  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSException incorrectly thrown when using XAConnection/XASession outside a transaction,AMQ-2659,12482499,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rodos77,rodos77,19/Mar/10 16:31,30/Jul/18 16:13,30/Jan/20 16:55,13/Jun/18 10:53,5.3.0,,,,,,,5.16.0,5.4.0,,Broker,,,,0,"Currently, if one attempts to use an XAConnection (implemented by ActiveMQXAConnection) and consequently an XASession (implemented by ActiveMQXASession) outside a transaction, a JMSException is thrown.  However, nowhere in the JMS Spec does it say that if an XAConnection/XASession is used, it _*must*_ be enlisted in a transaction.  It is perfectly legal to _*not*_ start a transaction but still use the XA objects.

I propose that the following 2 methods in ActiveMQXASession be changed as follows to resolve this bug:
{noformat}
    public boolean getTransacted() throws JMSException {
        return getTransactionContext().isInXATransaction();
    }

    /**
     * This is called before transacted work is done by the session.
     * XA transactions are controlled outside of the session so
     * nothing has to be done here.  The only reason for this method
     * to be here is to override the parent.
     */
    protected void doStartTransaction() {
    }
{noformat}
\\
The current version of these methods is as follows (for reference):

{noformat}
    public boolean getTransacted() throws JMSException {
        return true;
    }

    /**
     * This is called before transacted work is done by
     * the session.  XA Work can only be done when this
     * XA resource is associated with an Xid.
     *
     * @throws JMSException not associated with an Xid
     */
    protected void doStartTransaction() throws JMSException {

        if (!getTransactionContext().isInXATransaction()) {
            throw new JMSException(""Session's XAResource has not been enlisted in a distributed transaction."");
        }

    }
{noformat}",,cshannon,gtully,jira-bot,rodos77,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Apr/10 15:44;rodos77;JMSConsumerTestXA.java;https://issues.apache.org/jira/secure/attachment/12461685/JMSConsumerTestXA.java","28/Apr/10 15:44;rodos77;JmsTestSupportXA.java;https://issues.apache.org/jira/secure/attachment/12461684/JmsTestSupportXA.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-04-20 16:24:15.417,,,false,,,,,,,,,,,,,,,,,14717,,,Mon Jul 30 16:13:54 UTC 2018,,,,,,,,"0|i0b9t3:",63701,,,,,,,,,,,,,,,,,,,"20/Apr/10 16:24;gtully;what is your use case here? it is normal for an xa connection to be used with an xa transaction, that is what xa_rdonly is about. Not sure why the check was added in the first place but it has been around for quite a while and is a good indication of intent, as in, it helps determine whether an XA connection factory is being used as desired when it is configured with a transaction manager. I am slow to drop it without out good reason.","20/Apr/10 16:56;rodos77;The use case is that when the JMS client calls createConnection on the connection factory handle, an XA tx may have been started or may not have been.  The RA has no way of knowing this.  Therefore, we configure the RA to always use XAConnectionFactory.  This way, if a tx was started, the XA capabilities of the connection will be used, and if not, they won't, but it should work in either case.

Without this change, I get an Exception when trying to use the AMQXAConnFactory/AMQXAConn when a tx has not been started.  I've had to make this change to make our RA work with AMQ.  Other JMS engines (such as JBoss) don't have this restriction.  Nor do the JMS and JCA specify anywhere that if XA objects are used, a tx MUST be started.","26/Apr/10 14:12;rodos77;So what's the verdict?  Can we get this change into 5.4.0 so I can use AMQ with our RA and not have to patch the source on my end?","26/Apr/10 15:18;gtully;to speed up the process, it would help if there were a few unit tests that demonstrated the required behavior and don't break anything else. I think message receipt will be problematic as an XASession is always transacted w.r.t acks and without a transaction there will be no ack.

btw: I think the change to getTransacted() will help with https://issues.apache.org/activemq/browse/AMQ-2712 which is good.","27/Apr/10 17:36;rodos77;Isn't an ack sent at the end of ActiveMQSession.run() irrespective of whether there is a tx in progress or not?  line 885 in 5.3.1: asyncSendPacket(ack).  In fact, ActiveMQXASession doesn't override this so it will always execute the code in ActiveMQSession which surely can run without a tx.

I will work on a junit test shortly...","27/Apr/10 17:52;gtully;yea, in the run() case it is. The issue is for other regular users of jms who swap in an XA connection factory for a regular connection factory and use an XASession as a regular session without a transaction, currently they will get an exception but with the proposed changes they will not and they are into undefined behavior.
The point being that this change has implications beyond the RA use case. A variant of the org.apache.activemq.JMSConsumerTest with an XA connection factory will demonstrate the problems that the current exception is trying to avoid. From a normal JMS user perspective, Session and XASession are not the same.

Maybe the way out of this is again through configuration, making the check for an active XA transaction optional, so it can be disabled for power users.
","27/Apr/10 18:15;rodos77;I still don't understand why using XASession without a tx is ""undefined behavior"".  No, they are not the same.  XASession has additional functionality but should still work as a regular session in the absence of tx. After all, XASession extends Session so even by the API an XASession can be treated as a regular Session.  In fact, the JMS client will always get a regular Session to work with.  However, the RA may instantiate an XASession behind the scenes.

If we make this change and modify JMSConsumerTest to use XASession, what problem are you expecting to occur?

","28/Apr/10 15:42;rodos77;Ok, so I modified JMSConsumerTest to use XASession (attached).  I did initially see some problems and now understand what you were talking about.  However, I was able to get rid of the problem and make the tests pass by including the following method in ActiveMQXASession: \\ \\
{noformat}
    public boolean isAutoAcknowledge() {
       return true;
    }
{noformat}

I think this makes sense since for an XASession transactions are controlled outside of the session and so as far as the session is concerned it is always AUTO_ACKNOWLEDGE.

This would take care of your concerns, no?

P.S.  There are 4 failures in the test but I think those are because the tests don't make sense any more with the transactions not controlled by the session.  Sorry, I don't have more time right now to look into it further.","18/May/10 16:31;rodos77;Hi Gary,

Did you have a chance to run the attached test and check the additional proposed change?  Does it satisfy your concerns?  Can these changes be adopted?  I think in this case it is better to make it work for all use cases as opposed to going the config route.","18/May/10 16:54;gtully;will try and find some time for this before the 5.4 release","06/Aug/10 17:07;gtully;changes implemented in r983057
thanks for the test case etc.","13/Jun/18 10:41;gtully;Revisiting this, I now think the change needs to be configurable.

I came across a use case with an XASession and consumer.receive(timeout) where the XA transaction rolls back before the timeout and where the subsequent received message gets auto acked in error, effectively loosing a message. Before this change, the doStartTransaction would throw and the receive would fail.

Because the lifecycle of the transaction is independent of the consumer and session, having the session work without a transaction will leave the potential for holes in transacted work. It should not be enabled by default.

 

In addition, XASession.getTransacted() should always return true  as per the [javadoc|https://docs.oracle.com/javaee/5/api/javax/jms/XASession.html#getTransacted()], not sure why that was missed 6years ago.

I will rework the changes to allow the use of an xasession outside of a transaction once there is an explicit request to use a non transacted ack mode via setXaAckMode.

By default, work outside an xa transaction will throw an error as it should.","13/Jun/18 10:48;jira-bot;Commit 004be56127e7e949c8ffff8c36435ea0f27d32d4 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=004be56 ]

AMQ-2659 - make configurable based on xaAckMode, otherwise pure xa case can default to autoack in error. Additional tests
","13/Jun/18 10:53;gtully;To use a non transacted ack mode in XASessions, it now needs to be explicitly enabled via the xaAckMode accessor. Either through the brokerURI or via the setter.
{code:java}
ActiveMQXAConnectionFactory activeMQXAConnectionFactory = new ActiveMQXAConnectionFactory(""vm://localhost?jms.xaAckMode=1"");

// or
activeMQXAConnectionFactory.setXaAckMode(Session.AUTO_ACKNOWLEDGE);{code}","30/Jul/18 11:37;cshannon;[~gtully] - it looks like your latest commit broke this test: [https://builds.apache.org/view/A/view/ActiveMQ/job/ActiveMQ-Java8/lastBuild/org.apache.activemq$activemq-karaf-itest/testReport/org.apache.activemq.karaf.itest/ActiveMQBrokerNdCamelFeatureTest/test/]

Do we need to configure something different now with camel for XA or is this a regression?","30/Jul/18 13:07;jira-bot;Commit 18543080a04b3612708464eb32e9975a8eb974f6 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1854308 ]

AMQ-2659 - fix camel route config to reflect revised behaviour
","30/Jul/18 13:08;gtully;[~cshannon] thanks for the heads up, apologies. yes - the config for that non transacted route with an xa connection factory needed to be updated after this change. sorted now.","30/Jul/18 16:13;cshannon;[~gtully] - no problem thanks for fixing that, I was just verifying this morning all the tests work as I am about to do a 5.15.5 release and noticed that the Camel test had broke in Jenkins",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrent Modification of Delivered Messages in MessageConsumer.dispose(),AMQ-2100,12482821,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,10/Feb/09 07:30,03/May/17 11:31,30/Jan/20 16:55,10/Feb/09 08:07,5.2.0,,,,,,,5.3.0,,,JMS client,,,,0,See thread on ActiveMQ user list: http://www.nabble.com/ConcurrentModificationException-while-closing-consumer-td21867250.html#a21924323,,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-05-03 11:31:29.502,,,false,,,,,,,,,,,,,,,,,75075,,,Wed May 03 11:31:29 UTC 2017,,,,,,,,"0|i182bz:",255180,,,,,,,,,,,,,,,,,,,"10/Feb/09 08:07;rajdavies;Fixed by SVN revision 742876","03/May/17 11:31;jira-bot;Commit 35f30102a6d2083bd640f86f30abffc536863458 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=35f3010 ]

[AMQ-2100] fix for intermittent ci failure
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX attribute change doesn't affect store usage,AMQ-3143,12495803,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,17/Jan/11 16:41,14/Feb/17 11:35,30/Jan/20 16:55,17/Jan/11 16:49,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"When producer is blocked on store usage limit, increasing the limit in JConsole doesn't unblock the producer",,jira-bot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6547,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-02-14 11:34:25.587,,,false,,,,,,,,,,,,,,,,,14712,,,Tue Feb 14 11:34:25 UTC 2017,,,,,,,,"0|i0agx3:",59014,,,,,,,,,,,,,,,,,,,"17/Jan/11 16:49;dejanb;Fixed with svn revision 1059981","14/Feb/17 11:34;jira-bot;Commit fad50812af792606efca5653f9b4761e663ac087 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fad5081 ]

[AMQ-6547] revert mod from AMQ-3143 such that waitForSpace respects child usage, fix test and validate mKahadb blocking send
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Exception ""The Consumer is closed"" in multithreaded environment",AMQ-1995,12482374,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,martinhasl,martinhasl,05/Nov/08 14:30,02/Dec/16 19:14,30/Jan/20 16:55,05/Nov/08 17:02,5.1.0,5.2.0,,,,,,5.2.0,,,Broker,,,,0,"I got the following exception when running the TempQueueMemoryTest and increasing number of producer, consumers and messages:

javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:699)
	at org.apache.activemq.ActiveMQMessageConsumer.getMessageListener(ActiveMQMessageConsumer.java:339)
	at org.apache.activemq.ActiveMQSession.checkMessageListener(ActiveMQSession.java:1864)
	at org.apache.activemq.ActiveMQMessageConsumer.checkMessageListener(ActiveMQMessageConsumer.java:717)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:457)
	at TempQueueMemoryTest$1Producer.run(TempQueueMemoryTest.java:94)

The error happens at ""Message reply = consumer.receive();"", the message is not received.

I increased the number of consumers and produceres to 2 and the number of messages to 5000. When using larger numbers the exception is thrown more often (unpredictable how often exactly). It definitly seems to be a multithreading-related problem because it only happens with multiple threads producing/consuming and the more threads you have the more often it happens.

Tested with 5.2 RC2.","Windows XP, JRE 1.5.0_12, 2GB Memory, Dual-core",martinhasl,nitinaggarwal1991,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-11-05 16:54:57.317,,,false,,,,,,,,,,,,,,,,,75134,,,Fri Dec 02 19:14:56 UTC 2016,,,,,,,,"0|i0s1sn:",161767,,,,,,,,,,,,,,,,,,,"05/Nov/08 16:54;gtully;good catch. this is a bug in the test, each Producer should have its own session as a session is only intended for use by a single tread at a time as per the JMS spec.
I am running a quick sanity check on the changes as I type. ","05/Nov/08 17:02;gtully;problem with the test code, it was not thread safe.
resolved in r711617.","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3","02/Dec/16 06:10;nitinaggarwal1991;Hi,

I am using apache-activemq-5.14.1 and i am getting the same error.

Could you kindly assist as how can i resolve it.

com.irdeto.manager.endpoint.activemq.MessageConsumerManager  - The Consumer is closed
javax.jms.IllegalStateException: The Consumer is closed
        at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:880)
        at org.apache.activemq.ActiveMQMessageConsumer.receiveNoWait(ActiveMQMessageConsumer.java:678)
        at org.apache.activemq.jms.pool.PooledMessageConsumer.receiveNoWait(PooledMessageConsumer.java:72)
        at com.irdeto.manager.endpoint.activemq.MessageConsumerManager$2.run(MessageConsumerManager.java:105)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)


Thanks in advance","02/Dec/16 14:02;tabish;You get this error when you call a consumer method on a closed consumer.  Solution, don't call any consumer methods after you've closed the consumer.  

Support questions are better sent to the users mailing list. ","02/Dec/16 19:14;nitinaggarwal1991;Thanks a lot for the quick response.

I resolved the issue and yes u were right i was getting this error as the consumer was actually closed and a web application was trying  to connect to it.

Thanks again.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
client calls to createProducer() and send() successful even though BrokerFilter methods throw exceptions,AMQ-3166,12497014,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,artnaseef,artnaseef,28/Jan/11 05:35,22/Nov/16 16:27,30/Jan/20 16:55,25/May/16 10:39,5.4.2,5.5.0,,,,,,5.14.0,,,Broker,JMS client,,,1,"Client calls to createProducer() always return without an error even though a BrokerFilter's addProducer() method throws an exception on the request. In contrast, createConsumer() throws an exception, as expected, when BrokerFilter's addConsumer() throws an exception.

Clients using transacted sessions always return successfully from send() when a BrokerFilter's send() method throws an exception.

Below is a broker configuration file using <authorizationPlugin> to illustrate the problem.

To reproduce the problem With this configuration, a test client only needs to connect with user = ""user"" and password = ""password"", and then attempt to produce messages with a transacted session to any queue other than ABC (e.g. DEF).

Tracing the cause of the issue has lead to finding that the client code for creating a producer uses an Async send for the producer information.  The analogous code for consumers uses a Sync send.

I will work on a patch.  It would be very helpful to have feedback on the operation of the bus and the best way to resolve this problem.  Based on my research, it seems that createProducer() should be using a Sync send in place of the Async one.  Not yet sure about send().  Another possibility is to move the security operations to earlier in the internal broker flow.

=== SAMPLE BROKER XML ===

<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

    <broker xmlns=""http://activemq.apache.org/schema/core""
            brokerName=""localhost""
            dataDirectory=""${activemq.base}/data""
            destroyApplicationContextOnStop=""true"" >

        <persistenceAdapter>
            <kahaDB directory=""${activemq.base}/data/kahadb""/>
        </persistenceAdapter>
        
        <plugins>
          <simpleAuthenticationPlugin anonymousAccessAllowed=""true"">
              <users>
                  <authenticationUser username=""user"" password=""password""
                      groups=""users""/>
              </users>
          </simpleAuthenticationPlugin>

          <authorizationPlugin>
              <map>
                  <authorizationMap>
                    <authorizationEntries>
                      <authorizationEntry queue=""ABC"" read=""users"" write=""users"" admin=""users"" />
                      <authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""users"" write=""users"" admin=""users"" />
                    </authorizationEntries>
                  </authorizationMap>
              </map>
          </authorizationPlugin>
        </plugins>

        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>
    </broker>
</beans>
",,artnaseef,gtully,jahlborn,jira-bot,ld4711,lichtin,mez,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQCPP-535,,,AMQ-4213,,,,,,"15/Feb/11 00:31;artnaseef;AMQ3166Test.java;https://issues.apache.org/jira/secure/attachment/12471043/AMQ3166Test.java","15/Feb/11 00:21;artnaseef;AMQ3166Test.java;https://issues.apache.org/jira/secure/attachment/12471042/AMQ3166Test.java","24/Jun/11 17:07;artnaseef;FailedTransactionTracking.java;https://issues.apache.org/jira/secure/attachment/12483740/FailedTransactionTracking.java","24/Jun/11 17:08;artnaseef;FailedTransactionTrackingPlugin.java;https://issues.apache.org/jira/secure/attachment/12483741/FailedTransactionTrackingPlugin.java",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2011-06-01 11:25:07.436,,,false,,,,,,,,,,,,,,,,,70097,,,Tue Nov 22 16:27:50 UTC 2016,,,,,,,,"0|i0eaon:",81493,,,,,,,,,,,,,,,,,,,"02/Feb/11 22:24;artnaseef;Research found the following:
   - The exceptions are being sent over the transport from the broker to the client
   - Client handling does not propogate the exception back through send() or commit() calls

It appears this is caused by the producer using async sends.  Looking at ActiveMQSession:

            if (sendTimeout <= 0 && !msg.isResponseRequired() && !connection.isAlwaysSyncSend() &&
                (!msg.isPersistent() || connection.isUseAsyncSend() || txid != null)) {
                this.connection.asyncSendPacket(msg);

msg.isResponseRequire() defaults to false for most transport commands, including Message.  Taking advantage of the ""isAlwaysSyncSend()"" logic above, the following works-around the issue (when clients can be modified to use it):

                org.apache.activemq.ActiveMQConnectionFactory   conn_fact;
                ...
                conn_fact.setAlwaysSyncSend(true);

Attempts to use URI parameters, and searches through the code for URI parameters, have yielded no working solutions there.  If the connection URL could include a setting such as ""?connection.alwaysSyncSend=true"" would make this problem easier to solve since most clients use a configurable connection string.

However, with all of that said, it seems that transacted sends - as well as creating producers - should be synchronous.  That can be solved by taking out the ""txid != null"" logic.

For further performance improvement over transacted sends, if a client wants batch sending, which is not part of the JMS standard, it makes sense to require clients to use ActiveMQ-specific features.  Perhaps a batchSend() method followed by batchComplete().
","15/Feb/11 00:21;artnaseef;JUnit test program with 3 test cases:
   1. Transacted sends which illustrate the problem
   2. Transacted sends using a work-around
   3. Non-transacted sends which do not have this problem","15/Feb/11 00:31;artnaseef;Corrected source.  The previous one contained a typo.","31/May/11 19:17;artnaseef;Confirmed with 5.5.0 as well.  Note that an activemq-cpp client was tested with the same results.","01/Jun/11 05:40;artnaseef;I finally walked through the entire IntrospectionSupport and query handling for an ActiveMQConnection and found that the following on the URL works around the issue as well:

{code}
...?jms.alwaysSyncSend=true         (JAVA CLIENT)
...?connection.alwaysSyncSend=true  (C++ CLIENT: activemq-cpp)
{code}

For TRANSACTIONS, I recommend that the extra logic be added to use sync sends by default because that matches the the JMS standard - and what I believe clients expect across all JMS providers - but with a setting that allows clients to override that operation.  Perhaps the following:

{code}
...?jms.transactionAsyncSend=false    => (default) don't use async sends with transactions
...?jms.transactionAsyncSend=true     => use async sends with transactions
{code}

By the way, shouldn't the activemq-cpp library support ""jms."" as the prefix for connection parameters in the same way the Java code does?  Otherwise, we have to make sure URL's are client-implementation-specific.

The subset of logic for async sends on transactions would be as follows:

{code}
IF (session IS transacted ) AND ( not alwaysSyncSend ) AND ( transactionAsyncSend )
THEN
  SEND async
ELSE
  SEND sync
END IF
{code}

A patch with this update will be coming soon.","01/Jun/11 11:25;gtully;I agree, it would be better if the cpp client respected the same naming convention, not sure why that is not the case.

The logic for async send with transactions follows from a commit/rollback being sent sync. There is no real work done on the broker till the transaction completes, this sort of batching is expected with multiple message sends in a transaction.
For the use case where a broker filter throws an exception, having commit fail would make some sense for the transacted case.
For a producer, I am not sure of the value of local transactions unless there is batching.
Having said that, having a transacted send respect alwaysSyncSend is no harm as it defaults to false. ","01/Jun/11 13:18;tabish;The C\+\+ client doesn't respect the jms option prefix for a few reasons, foremost being that its not a JMS client it implements CMS a JMS-like API that can and does vary somewhat from the JMS spec.  Also because the options vary between the C\+\+, .NET and Java client having the URI syntax be identical presents a false equivalence about what behaviour your URI options will produce in the case where you specify options that don't currently exist in the client of your choosing.   In the .NET client we prefix URI options with nms.* for the same reason.  It could be argued that the C\+\+ client should offer its options as cms.* and that would be fine with me, however nobody has stepped up to do the work involved in writing a better URI option parser so its remained as it is now.","24/Jun/11 17:00;artnaseef;Broker Filter which remembers failures on transactions and fails all subsequent operations (except rollbacks), including commit().","24/Jun/11 17:00;artnaseef;BrokerPlugin for the filter.","24/Jun/11 17:05;artnaseef;Sorry for the slow response.

I think the fail-on-commit is a feasible solution and have attached a Broker Filter which makes that happen.  There are a couple of non-optimal aspects to this solution, but I wanted to put it out for consideration/feedback.

The two concerns I have with this solution are:
* Only failures that occur after the filter in the broker's filter chain will be detected and handled.
* Clients may continue for a while after a failure, likely performing throw-away work.
** I would like to address this with a new message back to the client specifically indicating the transaction failure.
** Client logic would then be needed to check the transaction on send() and receive()/acknowledge() calls.

Please let me know.  If this looks like a feasible solution, I'll create JUnit tests that incorporate this feature.","24/Jun/11 17:07;artnaseef;Corrected the package name.","24/Jun/11 17:08;artnaseef;Corrected the package name.","07/Dec/12 21:49;tabish;AMQ-4213 - This resolves the complaint that the createProducer should be sync.  ","28/Feb/14 04:39;artnaseef;Let's get this fixed.  It's a violation of the JMS spec that transactions are not reliable.

I see two options.

* Make the client libraries perform sends synchronously.
* Have the broker retain state of failures and propogate failed sends to failed commits.
** Consider a way to propogate failures quickly so that a producer with large numbers of messages does not waste all that effort only to have the commit fail a long time later.

The downside of the first option is a likely loss of performance.  However, the second option is more complex to code and prevents possible intelligence in clients to perform better handling of issues like individual failed sends in a transaction (consider a client wanting to have logic to recover from a single failed send in a larger transaction).
","28/Feb/14 04:40;artnaseef;Anyone with thoughts on (a) the best approach to resolving this, and (b) avoiding reduced performance, please speak up.","28/Feb/14 12:03;gtully;thinking just in terms of sends and acks, if a request (sync or sync) results in an exception, then the transaction should be marked rollbackOnly. There may be wasted work but at least the outcome will be deterministic. all of nothing.
this can probably be handled in org.apache.activemq.broker.TransportConnection#service with some additional rollbackOnly logic in transaction. Or maybe just a rollback immediately will do it.","03/Mar/14 00:21;artnaseef;Thanks Gary - I'll look at TransportConnection's service method.

While I tend to agree the extra work may not be a problem, I'd like to see if there's a simple, straight-forward way to solve it.  I've seen this lead to thousands of errors logged in an application for a single request.  One idea is to propogate the failure by sending a transport command back to the client that says the transaction failed so the client library can then respond immediately to any subsequent operations on the transaction.  The biggest downside I see is the added transport command and iterating the protocol.","03/Mar/14 04:57;artnaseef;I tried forcing a rollback on the transaction and that causes the commit to fail, but the exception seems misleading to me, stating transaction has not been started:

{noformat}
javax.jms.JMSException: Transaction 'TX:ID:Arthur-Naseefs-MacBook-Pro.local-58321-1393821595757-5:1:1' has not been started.
{noformat}

Here's my patch:
{noformat}
diff --git a/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java b/activemq-broker/src/mai
index 65d044b..fc4a674 100755
--- a/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java
+++ b/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java
@@ -306,6 +306,9 @@ public class TransportConnection implements Connection, Task, CommandVisitor {
                 responseRequired = false;
             }
 
+            // AMQ-3166: remember and propogate transaction failures.
+            serviceTransactionExceptions(command, e);
+
             if (responseRequired) {
                 response = new ExceptionResponse(e);
             } else {
@@ -1608,4 +1611,44 @@ public class TransportConnection implements Connection, Task, CommandVisitor {
     public WireFormatInfo getRemoteWireFormatInfo() {
         return wireFormatInfo;
     }
+
+    protected void  serviceTransactionExceptions(Command command, Throwable thrown) {
+        if ( command instanceof Message ) {
+            Message msg = (Message) command;
+
+            if ( msg.isInTransaction() ) {
+                LOG.debug(""marking transaction {} failed on message {} due to {}"", msg.getTransactionId(),
+                          msg.getMessageId(), thrown.getMessage());
+                this.markTransactionFailure(msg.getConnection().getConnectionInfo().getConnectionId(),
+                                            msg.getTransactionId(), thrown);
+            }
+        } else if ( command instanceof MessageAck ) {
+            MessageAck ack = (MessageAck) command;
+
+            if ( ack.isInTransaction() ) {
+                LOG.debug(""marking transaction {} failed on ack for messages {}..{} due to {}"", ack.getTransactionId(),
+                          ack.getFirstMessageId(), ack.getLastMessageId(), thrown.getMessage());
+                this.markTransactionFailure(ack.getConsumerId().getParentId().getParentId(), ack.getTransactionId(),
+                                            thrown);
+            }
+        }
+
+        // TBD: any other commands?  MessagePull doesn't contain transaction info, and I suspect that it doesn't need
+        // it since it must be synchronous.
+    }
+
+    protected void  markTransactionFailure(ConnectionId connId, TransactionId tId, Throwable thrown) {
+        TransactionInfo rollback = new TransactionInfo();
+        rollback.setConnectionId(connId);
+        rollback.setTransactionId(tId);
+        rollback.setType(TransactionInfo.ROLLBACK);
+
+        try {
+            // Reuse the rollback existing logic.
+            this.processRollbackTransaction(rollback);
+        } catch ( Throwable err ) {
+            LOG.warn(""failed to force rollack on transaction {} after initial failure {}"", tId, thrown.getMessage(),
+                     err);
+        }
+    }
 }
{noformat}

I'm looking at adding a ""failed"" status to TransactionState - that appears to be a feasible approach, and seems more correct as well.","03/Mar/14 11:50;gtully;the behaviour makes sense b/c of the use of the rollback logic so the transaction goes away.
I was thinking more along the lines of a new rollbackOnly flag/state in transaction. that would only kick in on commit in the event of a previous failure.
tracking send/create producer-consumer failures should use syncSends and exception handlers clients side. Broker side they would flip the rollbackOnly flag. So any broker side failure that occurs within a transaction would set the rollbackonly flag and optionally a client can trap individual failures and call rollback. In any event, the transaction aborts.","03/Mar/14 19:16;artnaseef;If transacted-sends were always sent Synchronously from the client to the broker, this problem would go away as the clients would immediately receive the exception on the send.  In that case, I wouldn't bother with marking the transaction as failed since (a) there's really no need, and (b) the client could easily decide to go forward and commit in spite of the single send failure (i.e. more complex transacted use-cases would be supported).

My only concern with making that change is the potential impact to performance.  I'll give it a try and see how much impact it has.","07/Mar/14 14:53;artnaseef;Doing a quick test, I found {{alwaysSyncSend}} on the connection drops performance for message production.

In fact, the benefit of using a transaction for faster throughput appears to be eliminated.

Here's the test and results.  Note that increasing transaction sizes improves throughput in the async-case (desirable) but not the sync case.

*Test*
{noformat}
# Transacted async send of 1000 persistent messages with 100 messages per transaction to queue asn.test
echo ""=== TRANSACTED ASYNC SEND ===""
time javarun Flood -t -m 1000 -o 250 -c 100 -u 'tcp://localhost:61616' queue asn.test

# Transacted sync send of 1000 persistent messages with 100 messages per transaction to queue asn.test
echo
echo ""=== TRANSACTED SYNC SEND ===""
time javarun Flood -t -m 1000 -o 250 -c 100 -u 'tcp://localhost:61616?jms.alwaysSyncSend=true' queue asn.test

# Non-transacted send of 1000 persistent messages to queue asn.test
echo
echo ""=== NON-TRANSACTED SEND ===""
time javarun Flood -m 1000 -o 250 -u 'tcp://localhost:61616' queue asn.test
{noformat}

*Results*
{noformat}
=== TRANSACTED ASYNC SEND ===
log4j:WARN No appenders could be found for logger (org.apache.activemq.transport.WireFormatNegotiator).
log4j:WARN Please initialize the log4j system properly.
Set producer window size to 0
Running Producer
250
500
750
1000
Producer Terminating

real    0m0.927s
user    0m0.030s
sys     0m0.060s

=== TRANSACTED SYNC SEND ===
log4j:WARN No appenders could be found for logger (org.apache.activemq.transport.WireFormatNegotiator).
log4j:WARN Please initialize the log4j system properly.
Set producer window size to 0
Running Producer
250
500
750
1000
Producer Terminating

real    0m2.403s
user    0m0.015s
sys     0m0.061s

=== NON-TRANSACTED SEND ===
log4j:WARN No appenders could be found for logger (org.apache.activemq.transport.WireFormatNegotiator).
log4j:WARN Please initialize the log4j system properly.
Set producer window size to 0
Running Producer
250
500
750
1000
Producer Terminating

real    0m2.508s
user    0m0.015s
sys     0m0.045s
{noformat}


Based on this, I won't force all transacted sends to be synchronous.","07/Mar/14 14:56;mez;I'm out of the office and will return on Monday, Mar. 10th.




","08/Apr/14 12:47;ld4711;We had an issue in production with lost messages in a transacted batch, due to server memory limit settings (producer flow control). Setting an exception handler on the connection factory is not enough to be on the safe side, as we were able to construct a test case that builds a race condition between the producer thread and the exception handler thread such that the commit is done before the asynchronous exception callback is fired by the server response.

E.g. set server memory limit to 1 MB only, send batch of 100 messages, server can handle only 95 messages, commit is done before callback is triggered: 5 messages are lost, 95 messages appear in the queue.

As lost messages within a transaction are really a bad thing we would appreciate Gary Tully's approach of setting a flag in the transaction context, so that any exception will always and reliably yield a JMS rollback. Besides that, an exception should be thrown in the commit thread such that there is no chance of having a silent failure from the client perspective. Otherwise the rollback may go unnoticed.
Transaction handling should also be safe for those users that forget to set the exception handler at all.

I do not favor the option of doing a commit for only a part of my message batch, i.e. when you have a failure after message 101 you should not be able to commit messages 1 to 100. For me transactions are always an all-or-nothing matter. As with asynchronous sends you have a delay of several send operations until the exception handler gets fired it would require significant client logic to determine which messages survived and which got lost.","08/Apr/14 12:51;mez;I'm out of the office and will return on Monday, Apr. 13th.



","25/May/16 10:30;jira-bot;Commit fe9d99e7a071c4c09c78dfd95630036b86a8a05b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fe9d99e ]

AMQ-3166 - implement rollbackOnlyOnAsyncException such that async exceptions on transactional sends or acks result in the transaction being marked rollback only and commit failing with an exception. Test that shows current state of play using alwaySendSync or AsyncCallback. rollbackOnlyOnAsyncException enabled by default.
","25/May/16 10:39;gtully;async exceptions on transactional ops - message send and message ack will result in the transaction being marked rollback-only. Commit will fail with an exception.
In the event that folks want to have partial transactions in the event of failures, the behaviour can be disabled with {code}<broker rollbackOnlyOnAsyncException=""false"" ... >{code}

using setAlwaysSyncSend or using the AsyncCallback api variants provide workarounds for the current code base.","11/Nov/16 16:20;jahlborn;[~gtully] just curious, is there a reason that the Transaction does not remember the original cause in setRollbackOnly and include that on the resulting XAException?  I ran into this bug when using producer flow control on a jms transacted connection (on an older version of activemq).  the patch for this bug fixes the problem, however, you have to dig through the logs to find the ultimate cause of the send failure (a ResourceAllocationException).  seems like it would be useful to include that in the failure returned to the client?  

e.g.:
{code}
diff --git a/activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java b/activemq-broker/src/main/j
index f891c89..99b8c1f 100755
--- a/activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java
+++ b/activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java
@@ -45,6 +45,7 @@ public abstract class Transaction {
     public static final byte FINISHED_STATE = 3;
     boolean committed = false;
     boolean rollbackOnly = false;
+    private Throwable rollbackOnlyCause;
 
     private final ArrayList<Synchronization> synchronizations = new ArrayList<Synchronization>();
     private byte state = START_STATE;
@@ -112,6 +113,9 @@ public abstract class Transaction {
         if (rollbackOnly) {
             XAException xae = newXAException(""COMMIT FAILED: Transaction marked rollback only"", XAException.XA_RBROLLBA
             TransactionRolledBackException transactionRolledBackException = new TransactionRolledBackException(xae.getL
+            if(rollbackOnlyCause != null) {
+                transactionRolledBackException.initCause(rollbackOnlyCause);
+            }
             xae.initCause(transactionRolledBackException);
             throw xae;
         }
@@ -216,6 +220,7 @@ public abstract class Transaction {
         if (!rollbackOnly) {
             getLog().trace(""setting rollback only, cause:"", cause);
             rollbackOnly = true;
+            rollbackOnlyCause = cause;
         }
     }
{code}","11/Nov/16 16:21;mez;I'm out of the office and will return on Wed, Nov 16th.
[https://www.netcracker.com/assets/img/netcracker-social-final.png] ƕ



","22/Nov/16 16:08;jira-bot;Commit 7077d2b910405dea7a60c5140824966ffebc66a8 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7077d2b ]

[AMQ-3166] init rollbackonly exception cause such that xaexception has meaning, thanks to james (jtahlborn) for the suggestion
","22/Nov/16 16:11;gtully;[~jahlborn] thanks for the suggestion. I swapped the boolean for a throwable and now capture the root cause. ","22/Nov/16 16:27;jira-bot;Commit 99b7a28ccbb5435ef5bdba3ceac9995996dfbbed in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=99b7a28 ]

[AMQ-3166] fix typo that removed class name, sorry
",,,,,,,,,,,,,,,,,,,,,,,,
Locking issue with MySQL InnoDB,AMQ-2551,12483705,12483508,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dejanb,dejanb,23/Dec/09 15:31,20/Jul/16 21:15,30/Jan/20 16:55,04/Nov/10 13:21,5.3.0,,,,,,,5.4.2,,,,,,,0,"Using jdbc with Mysql InnoDB, can lead to following errors

{code}Deadlock found when trying to get lock;try restarting transaction{code}

and messages stuck in database.

The problem is described here http://dev.mysql.com/doc/refman/5.0/en/innodb-lock-modes.html and is caused by unsynced cleanup task. 

Current workaround is to turn off cleanup task like this

{code}<jdbcPersistenceAdapter dataSource=""#mysql-ds""  ... cleanupPeriod=""0""/>{code}",,tnarake,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6370,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-16 14:17:05.711,,,false,,,,,,,,,,,,,,,,,14734,,,Thu Nov 04 13:21:33 UTC 2010,,,,,,,,"0|i0b9yn:",63726,,,,,,,,,,,,,,,,,,,"16/Apr/10 14:17;gtully;{code}2010-04-14 15:33:24,044 | WARN  | Failure Details: Deadlock found when trying to get lock; try restarting transaction | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | ActiveMQ Cleanup Timer
com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:532)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.Util.getInstance(Util.java:381)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1045)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3515)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3447)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1951)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2101)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2554)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1761)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2046)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1964)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1949)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:102)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:102)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDeleteOldMessages(DefaultJDBCAdapter.java:617)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.cleanup(JDBCPersistenceAdapter.java:317)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$4.run(JDBCPersistenceAdapter.java:287)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:351)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:165)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:267)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:636)
2010-04-14 15:38:25,498 | WARN  | Old message cleanup failed due to:  etc...{code}","04/Nov/10 13:21;gtully;Added exclusive lock to the cleanup task such that it won't content with normal message addition. Cleanup takes care of deleting messages acked by all durable subs, so very often it has nothing to do but when it does, it needs to have exclusive access. r1030928",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak when marshaling ActiveMQTextMessage to persistent store,AMQ-2103,12483485,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tpounds,tpounds,10/Feb/09 20:29,14/Jun/16 14:37,30/Jan/20 16:55,14/Oct/10 11:24,5.0.0,,,,,,,5.4.2,,,Broker,,,,0,"When an org.apache.activemq.command.ActiveMQTextMessage is marshaled into the persistence store some portion of the messages are stored in memory (i.e. pending cursor/consumer dispatch queue).  The messages stored in memory have the potential to cause the broker to run out of memory because org.apache.activemq.command.ActiveMQTextMessage objects can store the data twice, once in the 'text' field and once in the 'content' field.  Normally this isn't a problem since the 'content' field is cleared when the message is being used in a client application (i.e. by calling getText() clears content).  The problem occurs when a consumer is slow and a large number of messages are sitting around on the broker in pending/dispatch memory space.  The message is marshaled for the store and then persisted to disk and copied to pending memory when space is available.

This bug affects any ActiveMQ*Message object that does not clear its temporary data (i.e. 'text' field) once it has been marshaled.  When a message is marshaled we should null the derived objects memory space once the data has been written to the parent object's 'content' field.",ActiveMQ 5.0.0.20-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5857,,,,,,"10/Feb/09 20:33;tpounds;AMQ-2103.diff;https://issues.apache.org/jira/secure/attachment/12461209/AMQ-2103.diff","10/Feb/09 20:30;tpounds;Duplicate Message Data (Internal Marshalling).png;https://issues.apache.org/jira/secure/attachment/12461351/Duplicate+Message+Data+%28Internal+Marshalling%29.png","10/Feb/09 22:21;tpounds;heap_100_1MB_messages.png;https://issues.apache.org/jira/secure/attachment/12461297/heap_100_1MB_messages.png","10/Feb/09 20:31;tpounds;jhat_ActiveMQTextMessage_0xe837a478.htm;https://issues.apache.org/jira/secure/attachment/12461251/jhat_ActiveMQTextMessage_0xe837a478.htm","10/Feb/09 20:31;tpounds;jhat_ByteSequence_0xe837a5c0.htm;https://issues.apache.org/jira/secure/attachment/12461208/jhat_ByteSequence_0xe837a5c0.htm","10/Feb/09 20:32;tpounds;jhat_ByteSequence_data_0xe837adb0.htm;https://issues.apache.org/jira/secure/attachment/12461285/jhat_ByteSequence_data_0xe837adb0.htm",,,,,,6.0,,,,,,,,,,,,,,,,,,,,2009-02-11 07:34:54.21,,,false,,,,,,,,,,,,,,,,,14757,,,Thu Oct 14 11:24:48 UTC 2010,,,,,,,,"0|i0b9xz:",63723,,,,,,,,,,,,,,,,,,,"10/Feb/09 20:30;tpounds;attaching memory usage diagram showing how the message data can be duplicated.","10/Feb/09 20:31;tpounds;attaching jhat heap analysis showing ActiveMQTextMessage object with duplicate data.","10/Feb/09 20:31;tpounds;attaching jhat heap analysis showing ActiveMQTextMessage->ByteSequence object holding the byte array data.","10/Feb/09 20:32;tpounds;attaching jhat heap analysis showing ActiveMQTextMessage->ByteSequence->byte array object holding the message data.","10/Feb/09 20:33;tpounds;attaching patch that clears ActiveMQTextMessage 'text' field data when marshaling.","10/Feb/09 21:07;tpounds;I also forgot to mention that this probably only affects use cases with something like vm transport where the message stays internal to the same JVM and is not marshaled across the wire.","10/Feb/09 22:21;tpounds;attaching heap usage graph comparing memory before and after applying patch ","11/Feb/09 07:34;rajdavies;Patch applied in SVN revision 743258","11/Feb/09 17:22;tpounds;Rob did you look at all to see if this affects other message types (i.e. ActiveMQObjectMessage, ActiveMQMapMessage)?  I believe some of these these suffer from the same problem.","11/Oct/10 16:23;gtully;This fix breaks the topic case with multiple consumers and a vm transport producer. There is contention over marshaling so whacking the marshaled state is not possible, results in missing content for some of the consumers. https://issues.apache.org/activemq/browse/AMQ-2966

Think the fix is to have an reduceMemoryFootprint policy option that when enabled for queues, will clear the marshaled state (can work for map and object messages also) when the message is first persisted. This is a natural sync point that is contention free provided the concurrentStoreAndDispatchQueue KahaDB option that tries to optimize out persistence, is not enabled.

","11/Oct/10 19:18;gtully;patch reverted and new policy based solution applied in r1021466

The patch, setting the text attribute to null, was unprotected. Currently there are no destructive operations, on a message, allowing it to be shared across topic consumers without synchronization, which allows concurrent dispatch to be fast. This is important to maintain.

A new destination policy for queues, boolean attribute reduceMemoryFootprint has been introduced to do meet this use case.
When true, the marshaled state of a message will be cleared once the message is persisted in the store. This is a natural, contention free sync point.
Note:  The kahaDB concurrentStoreAndForwardQueues option (which introduces concurrency) and the memory persistence adapter (which will not marshall) are not compatible with this new policy.

Trevor, can you validate that this change meet your use case?","12/Oct/10 04:13;tpounds;This fix looks like it will work but I do have some concerns implementing it as a destination policy. Wouldn't it make more sense to implement this using SoftReferences or a hook into the MarshallAware interface?  In my opinion it makes sense to clear memory at the discretion of the collector when the message has been completely serialized to disk when there is not enough memory. The actual problem I was trying to solve was to prevent ""hidden"" memory from hanging around that was not tied to the ActiveMQ memory usage policies. I could be missing something here but it seems there are disjoint philosophies for memory management related to overall broker memory usage, fast dispatch cursors and other unaccounted for ""live"" objects. I'm not sure what to do here but the proposed fix (including my original submission) seems like a kludge at best. Does anyone else have other opinions?","12/Oct/10 09:30;gtully;I think there is merit in the original use case, but soft references would not cut it as the messages are retained in memory by the cursors and there is duplication. The key issue with any destruction of a message in memory is that it requires a sync point. A general MarshallAware interface hook would require a sync on message that would have a large impact on scaleability of topics.

I agree, that there needs to be some tie with available vm memory and cursor memory usage, but that sort of scheme would require major surgery atm.

Memory management is something that is central to the amq 6.0 (apollo) architecture. ","14/Oct/10 11:24;gtully;resolving. 
addressing any further limitations to the memory usage tracking as it pertains to actual jvm usage will be punted to 6.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"FailoverTransport doesn't shut-down cleanly, complains about underlying transport going down",AMQ-1577,12482287,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jbrosenberg,jbrosenberg,04/Feb/08 16:53,17/Oct/15 11:16,30/Jan/20 16:55,07/Feb/08 10:03,5.0.0,,,,,,,5.1.0,,,Transport,,,,0,"Hello,

There's a problem with the FailoverTransport not shutting down cleanly.  It appears that it shuts down it's underlying transport, e.g. TcpTransport, but then doesn't disable it's handleTransportFailure thread, which then complains that the underlying transport has gone away, and tries to restart it again.

Looking at the code in FailoverTransport.java, there appears to be a simple fix, to check the 'started' variable in the method 'handleTransportFailure' before logging a warning and trying to restart the underlying transport.

Here's a log snippet that demonstrates the problem:

DEBUG [2008-02-04 03:44:05,752] thread:main                                FailoverTransport -- Stopped.
DEBUG [2008-02-04 03:44:05,753] thread:main                                     TcpTransport -- Stopping transport tcp://localhost/127.0.0.1:61616
WARN  [2008-02-04 03:44:05,760] thread:ActiveMQ Transport: tcp://localhost/127.0.0.1:61616              FailoverTransport -- Transport failed, attempting to automatically reconnect due to: java.net.SocketException: Socket closed
java.net.SocketException: Socket closed
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
        at java.io.DataInputStream.readInt(DataInputStream.java:351)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:267)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:195)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
        at java.lang.Thread.run(Thread.java:637)


Jason",5.1-SNAPSHOT,jbrosenberg,memelet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/08 05:52;jbrosenberg;ConnectionPool.java;https://issues.apache.org/jira/secure/attachment/12461069/ConnectionPool.java","07/Feb/08 05:52;jbrosenberg;FailoverTransport.java;https://issues.apache.org/jira/secure/attachment/12460937/FailoverTransport.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-02-07 10:03:20.176,,,false,,,,,,,,,,,,,,,,,84644,,,Sat Oct 17 11:16:24 UTC 2015,,,,,,,,"0|i0s1ov:",161750,,,,,,,,,,,,,,,,,,,"07/Feb/08 05:52;jbrosenberg;I've included a patch built against a recent 5.1-SNAPSHOT source (svn rev 618082)

The file FailoverTransport.java, includes fixes for 4 issues, including my fix for this issue.

The other issues that this patch includes fixes for are:

AMQ-1116
AMQ-1575
AMQ-1577
AMQ-1581

The file ConnectionPool.java is also needed for the fix for AMQ-1581

I've added comments in the code that clearly indicate which sections apply to which issue, so you can easily take edit to include only the fixes you want specifically.

Jason
","07/Feb/08 10:03;rajdavies;Fixed by svn revision 619336","17/Oct/15 11:16;memelet;I appear to be seeing this behavior in 5.12. When disconnected from the broker and jmv receives a sigterm the jvm is prevented from exiting (some daemon thread?)

2015-10-17 11:13:21,690 INFO  mono-server - Stopping mono-server server ---------------------------------------------------- | tenant=tft, name=mono-server [shutdownHook1] 
2015-10-17 11:13:21,696 INFO  s.can.server.HttpListener - Unbound from /0.0.0.0:8282 | akkaSource=akka://mono-server/user/IO-HTTP/listener-0, sourceThread=mono-server-akka.actor.default-dispatcher-5, tenant=tft, name=mono-server [mono-server-akka.actor.default-dispatcher-2] 
2015-10-17 11:13:21,697 INFO  s.restapi.service.RestApi - Stopped REST API | tenant=tft, name=mono-server [shutdownHook1] 
2015-10-17 11:13:21,703 INFO  c.b.f.WatchServiceTask - Interrupting, bye! | tenant=tft, name=mono-server [WatchService] 
2015-10-17 11:13:41,828 DEBUG o.a.a.t.f.FailoverTransport - urlList connectionList:[tcp://localhost:61616], from: [tcp://localhost:61616] | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:13:41,828 DEBUG o.a.a.t.f.FailoverTransport - Attempting  13th  connect to: tcp://localhost:61616 | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:13:41,829 DEBUG o.a.a.t.f.FailoverTransport - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:13:41,829 DEBUG o.a.a.t.tcp.TcpTransport - Stopping transport tcp://localhost:61616 | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:13:41,830 DEBUG o.a.a.t.tcp.TcpTransport - Closed socket Socket[unconnected] | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:13:41,830 DEBUG o.a.a.t.f.FailoverTransport - Waiting 30000 ms before attempting connection | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:11,831 DEBUG o.a.a.t.f.FailoverTransport - urlList connectionList:[tcp://localhost:61616], from: [tcp://localhost:61616] | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:11,832 DEBUG o.a.a.t.f.FailoverTransport - Attempting  14th  connect to: tcp://localhost:61616 | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:11,832 DEBUG o.a.a.t.f.FailoverTransport - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:11,832 DEBUG o.a.a.t.tcp.TcpTransport - Stopping transport tcp://localhost:61616 | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:11,833 DEBUG o.a.a.t.tcp.TcpTransport - Closed socket Socket[unconnected] | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:11,833 DEBUG o.a.a.t.f.FailoverTransport - Waiting 30000 ms before attempting connection | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:41,836 DEBUG o.a.a.t.f.FailoverTransport - urlList connectionList:[tcp://localhost:61616], from: [tcp://localhost:61616] | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:41,837 DEBUG o.a.a.t.f.FailoverTransport - Attempting  15th  connect to: tcp://localhost:61616 | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:41,838 DEBUG o.a.a.t.f.FailoverTransport - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:41,838 DEBUG o.a.a.t.tcp.TcpTransport - Stopping transport tcp://localhost:61616 | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:41,838 DEBUG o.a.a.t.tcp.TcpTransport - Closed socket Socket[unconnected] | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:14:41,838 DEBUG o.a.a.t.f.FailoverTransport - Waiting 30000 ms before attempting connection | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:15:11,842 DEBUG o.a.a.t.f.FailoverTransport - urlList connectionList:[tcp://localhost:61616], from: [tcp://localhost:61616] | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:15:11,842 DEBUG o.a.a.t.f.FailoverTransport - Attempting  16th  connect to: tcp://localhost:61616 | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:15:11,842 DEBUG o.a.a.t.f.FailoverTransport - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:15:11,842 DEBUG o.a.a.t.tcp.TcpTransport - Stopping transport tcp://localhost:61616 | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:15:11,843 DEBUG o.a.a.t.tcp.TcpTransport - Closed socket Socket[unconnected] | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:15:11,843 DEBUG o.a.a.t.f.FailoverTransport - Waiting 30000 ms before attempting connection | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:15:41,846 DEBUG o.a.a.t.f.FailoverTransport - urlList connectionList:[tcp://localhost:61616], from: [tcp://localhost:61616] | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:15:41,846 DEBUG o.a.a.t.f.FailoverTransport - Attempting  17th  connect to: tcp://localhost:61616 | name=mono-server [ActiveMQ Task-1] 
2015-10-17 11:15:41,847 DEBUG o.a.a.t.f.FailoverTransport - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused | name=mono-server [ActiveMQ Task-1] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ broker does not automatically reconnect if the connection to the database is lost,AMQ-1780,12483317,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jsrinivasan,jsrinivasan,06/Jun/08 20:44,19/Jun/15 17:01,30/Jan/20 16:55,28/Mar/11 11:08,5.0.0,,,,,,,5.5.0,,,Broker,,,,3,"hi

We are noticing that after any SQL Server restart or network blip between ActiveMQ and the database, after the connection or the database comes back online activeMQ broker needs to be restarted as well i.e it doesn't automatically re-establish connection to the database as result any message send fails because the broker is still using the stale connection to the database. 

Is this designed behaviour or a bug? we are using ActiveMQ 5.0.0 and the latest version of the JSQLConnect database driver: version 5.7. The database we are using is MS SQL Server 2005 

Right now, in our production environment any time we have network maintenance or database restart we also have to restart the ActiveMQ broker which is not a good option for us. 

Also, We are using a single ActiveMQ broker and not the JDBC(Master/Slave) set up.

Issue details in

http://www.nabble.com/Database-connection-between-ActiveMQ-and-broker-td17321330s2354.html

Please let me know if I need to give more information

thanks
jaya
",Windows 2003 Server,gtully,ibeaumont,jsrinivasan,kaiqinsun,kiorsak,kishan3814,nikolay.elenkov,npfistner,teto,volkerk,werdex,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-28 19:18:12.161,,,false,,,,,,,,,,,,,,,,,14608,,,Fri Jun 19 17:01:52 UTC 2015,,,,,,,,"0|i0ah2n:",59039,,,,,,,,,,,,,,,,,,,"24/Jun/08 04:05;jsrinivasan;hi

can someone give an ETA on when this would be fixed?

thanks!
jaya","28/Feb/11 19:18;kaiqinsun;This is an issue in our production as well and hope it could be fixed soon.

Thanks,
Kaiqin","28/Mar/11 11:08;gtully;reused the plug-able [IOExceptionHandler|http://activemq.apache.org/configurable-ioexception-handling.html]. It is now called when a call to JDBC getConnection fails. Extended the DefaultIOExceptionHandler to allow stop/resume of connectors option rather than simple broker stop. Added Xbean support for DefaultIOExceptionHandler so it can be easily included in xml configuration.

Relevant programatic configuration from the test, use stopStartConnectors and do not ignore sql exceptions. Disable the default DB lock such that it will not stop the broker on a lock failure.{code}        DefaultIOExceptionHandler handler = new DefaultIOExceptionHandler();
        handler.setIgnoreSQLExceptions(false);
        handler.setStopStartConnectors(true);
        broker.setIoExceptionHandler(handler);
        JDBCPersistenceAdapter persistenceAdapter = new JDBCPersistenceAdapter();
        persistenceAdapter.setDataSource(sharedDs);
        persistenceAdapter.setUseDatabaseLock(false);
{code}","06/Apr/11 06:37;kiorsak;Is this really been fixed in 5.5 ?

I just tried out 5.5 and same thing happens - as soon as I restart the SQLService the ActiveQM broker shutdowns completely...

(NOTE: I am using same activemq.xml config files copied across from 5.4.2 instance, do I need to modify something for ""fix"" to take effect maybe?)

Thank you!



--- LOG ---

...
 INFO | Using Persistence Adapter: JDBCPersistenceAdapter(org.apache.commons.dbcp.BasicDataSource@1f758cd1)
 INFO | JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:2011/jmxrmi
 INFO | Database adapter driver override recognized for : [microsoft_sql_server_jdbc_driver_2_0] - adapter: class org.apache.activemq.store.jdbc.adapter.TransactJDBCAdapter
 INFO | Database lock driver override recognized for : [microsoft_sql_server_jdbc_driver_2_0] - adapter: class org.apache.activemq.store.jdbc.adapter.TransactDatabaseLocker
 INFO | Attempting to acquire the exclusive lock to become the Master broker
 INFO | Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@1f758cd1
 INFO | ActiveMQ 5.5.0 JMS Message Broker (MobTechTest1) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | Listening for connections at: nio://mdtapdot01:10001
 INFO | Connector openwire Started
 INFO | Listening for connections at: stomp://mdtapdot01:10002
 INFO | Connector STOMP Started
 INFO | Listening for connections at: xmpp://mdtapdot01:10003
 INFO | Connector xmpp Started
 INFO | ActiveMQ JMS Message Broker (MobTechTest1, ID:mdtapdot01-46867-1302071153455-0:1) started
 INFO | jetty-7.1.6.v20100715
 INFO | ActiveMQ WebConsole initialized.
 INFO | Initializing Spring FrameworkServlet 'dispatcher'
 INFO | ActiveMQ Console at http://0.0.0.0:8161/admin
 INFO | Initializing Spring root WebApplicationContext
 INFO | OSGi environment not detected.
 INFO | Apache Camel 2.7.0 (CamelContext: camel) is starting
 INFO | JMX enabled. Using ManagedManagementStrategy.
 INFO | Found 5 packages with 16 @Converter classes to load
 INFO | Loaded 152 type converters in 1.914 seconds
 INFO | Connector vm://MobTechTest1 Started
 INFO | Route: route1 started and consuming from: Endpoint[activemq://MDT.INBOUND]
 INFO | Total 1 routes, of which 1 is started.
 INFO | Apache Camel 2.7.0 (CamelContext: camel) started in 5.167 seconds
 INFO | Camel Console at http://0.0.0.0:8161/camel
 INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo
 INFO | RESTful file access application at http://0.0.0.0:8161/fileserver
 INFO | Started SelectChannelConnector@0.0.0.0:8161
ERROR | Failed to update database lock: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe
com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe
        at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1368)
        at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1355)
        at com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1548)
        at com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:2368)
        at com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:2270)
        at com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:1877)
        at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:4403)
        at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:386)
        at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:338)
        at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:4026)
        at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1416)
        at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:185)
        at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:160)
        at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeUpdate(SQLServerPreparedStatement.java:306)
        at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:102)
        at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.keepAlive(DefaultDatabaseLocker.java:161)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:605)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:291)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
        at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
 INFO | No longer able to keep the exclusive lock so giving up being a master
 INFO | ActiveMQ Message Broker (MobTechTest1, ID:mdtapdot01-46867-1302071153455-0:1) is shutting down
 INFO | Connector openwire Stopped
 INFO | Connector STOMP Stopped
 INFO | Connector xmpp Stopped
 INFO | Connector vm://MobTechTest1 Stopped
 INFO | PListStore:/usr/local/tollmobile/activemq54data/data/MobTechTest1/tmp_storage stopped
 INFO | ActiveMQ JMS Message Broker (MobTechTest1, ID:mdtapdot01-46867-1302071153455-0:1) stopped


","06/Apr/11 08:01;gtully;Oleg, you do need to make some configuration changes as indicated in the previous comment as this is a behavior change.
You need to configure an IOExceptionHandler for the broker to override the defaults{code}<ioExceptionHandler
  <defaultIOExceptionHandler ignoreSQLExceptions=""false"" stopStartConnectors=""true"" />
</ioExceptionHandler>{code}","07/Apr/11 03:55;kiorsak;Thanks Gary!

I think I ""get it"" now... adding that config tweak and also - very importantly - setting useDatabaseLock=""false"" in jdbcPersistenceAdapter 

does the trick for a single standalone broker, but for a cluster there is still an outstanding issue (where you mention all these too in comments): https://issues.apache.org/jira/browse/AMQ-2497

so yes if this issue (AMQ-1780) is meant to be the context of not-a-cluster setup only then I can confirm it appears indeed to be fixed...

Hope the AMQ-2497 (as tricky as it sounds) does get fix in 5.6 as planned too... ;)












","07/Apr/11 04:27;kiorsak;there is an issue however... 

when the database is stopped for very small period of time - everything works somewhat rather smoothly and as expected... but once DB is not available for longer time (5 secs)

"" INFO | waiting for broker persistence adapter checkpoint to succeed before restarting transports""

and 

""INFO | Connector openwire Stopped""

so far so good - makes sense (but note that it only stooped ""openwire"" one at this point,

but when I restart the database, it then goes and stops (!!) the other transport connectors (in particular STOMP one), but does not start them back...

INFO | Connector STOMP Stopped
 INFO | Connector xmpp Stopped




only when I go to jConsole and _manually_ start the STOMP transport connector (one we're using) things get back to normal...

 INFO | Listening for connections at: stomp://mdtapdot01:10002
 INFO | Connector STOMP Started

but that means it requires a manual procedure....

it seems to me this is a bug and in fact it was meant to actually ""restart transports"", not just stop them...

it might be that there is in fact a different handling of ""openwire"" and the other s (""STOMP"") connectors... (based on the fact that ""openwire"" stops when DB connection detected as lost, but ""STOMP"" gets stopped when DB is restored... and does not get restarted automatically...


??








","07/Apr/11 14:53;gtully;I wonder what is causing the delay in the shutdown of all the transports. They should all be shutdown in order by the same thread. Is there anything odd in the logs?

It looks like the stop thread is blocked for some time until restart and the restart is complete before the stop is complete.

Could you generate a thread dump of the broker after it has stopped openwire and before you restart... so the stop of stomp should be pending at that time?
","08/Apr/11 05:59;kiorsak;Hi Gary 

interestingly, on some of the attempts I did today all transport connectors do stop all at same time (when DB conn is lost)...but in either case however they are not been restarted automatically when DB restored...

I tried to produce a thread dump - this is what could fit on shell screen:

---
""qtp768129156-32"" prio=3 tid=0x0000000101885800 nid=0x23 waiting on condition [0xfffffffd6bafe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0xfffffffedce04c38> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:619)

""qtp768129156-31"" prio=3 tid=0x00000001010dc000 nid=0x22 waiting on condition [0xfffffffd6bcfe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0xfffffffedce04c38> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:619)

""qtp768129156-30"" prio=3 tid=0x00000001013fe000 nid=0x21 waiting on condition [0xfffffffd6befe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0xfffffffedce04c38> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:619)

""qtp768129156-29"" prio=3 tid=0x00000001013fd800 nid=0x20 waiting on condition [0xfffffffd6c0fe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0xfffffffedce04c38> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
        at java.lang.Thread.run(Thread.java:619)

""qtp768129156-28 - Acceptor0 SelectChannelConnector@0.0.0.0:8161"" prio=3 tid=0x0000000100e89000 nid=0x1f runnable [0xfffffffd6c2fe000]
   java.lang.Thread.State: RUNNABLE
        at sun.nio.ch.DevPollArrayWrapper.poll0(Native Method)
        at sun.nio.ch.DevPollArrayWrapper.poll(DevPollArrayWrapper.java:170)
        at sun.nio.ch.DevPollSelectorImpl.doSelect(DevPollSelectorImpl.java:68)
        at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
        - locked <0xffffffff03259268> (a sun.nio.ch.Util$1)
        - locked <0xffffffff03259250> (a java.util.Collections$UnmodifiableSet)
        - locked <0xffffffff03258ef0> (a sun.nio.ch.DevPollSelectorImpl)
        at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
        at org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:480)
        at org.eclipse.jetty.io.nio.SelectorManager.doSelect(SelectorManager.java:193)
        at org.eclipse.jetty.server.nio.SelectChannelConnector.accept(SelectChannelConnector.java:134)
        at org.eclipse.jetty.server.AbstractConnector$Acceptor.run(AbstractConnector.java:793)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
        at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Broker[MobTechTest1] Scheduler"" daemon prio=3 tid=0x000000010109d000 nid=0x18 in Object.wait() [0xfffffffd6d6ff000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0xfffffffedc814190> (a java.util.TaskQueue)
        at java.util.TimerThread.mainLoop(Timer.java:509)
        - locked <0xfffffffedc814190> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""ActiveMQ Cleanup Timer"" daemon prio=3 tid=0x0000000100e35000 nid=0x17 waiting on condition [0xfffffffd6e8fe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0xfffffffedc766668> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
        at java.util.concurrent.DelayQueue.take(DelayQueue.java:164)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:583)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:576)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:619)

""RMI TCP Connection(5)-10.38.58.172"" daemon prio=3 tid=0x0000000100f54800 nid=0x16 runnable [0xfffffffd6d8fe000]
   java.lang.Thread.State: RUNNABLE
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:237)
        - locked <0xfffffffed9747f10> (a java.io.BufferedInputStream)
        at java.io.FilterInputStream.read(FilterInputStream.java:66)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:517)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)

""RMI RenewClean-[10.66.179.1:50344]"" daemon prio=3 tid=0x0000000100efd800 nid=0x15 in Object.wait() [0xfffffffd6dafe000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0xfffffffed7bf5598> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
        - locked <0xfffffffed7bf5598> (a java.lang.ref.ReferenceQueue$Lock)
        at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:516)
        at java.lang.Thread.run(Thread.java:619)

""RMI Scheduler(0)"" daemon prio=3 tid=0x0000000100dc9800 nid=0x14 waiting on condition [0xfffffffd6defe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0xfffffffd780eb878> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
        at java.util.concurrent.DelayQueue.take(DelayQueue.java:164)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:583)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:576)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:619)

""GC Daemon"" daemon prio=3 tid=0x000000010126f800 nid=0x12 in Object.wait() [0xfffffffd6e2ff000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0xfffffffd780001d8> (a sun.misc.GC$LatencyLock)
        at sun.misc.GC$Daemon.run(GC.java:100)
        - locked <0xfffffffd780001d8> (a sun.misc.GC$LatencyLock)

""RMI Reaper"" prio=3 tid=0x00000001010f9000 nid=0x11 in Object.wait() [0xfffffffd6e4ff000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0xfffffffd78000290> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
        - locked <0xfffffffd78000290> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
        at sun.rmi.transport.ObjectTable$Reaper.run(ObjectTable.java:333)
        at java.lang.Thread.run(Thread.java:619)

""RMI TCP Accept-0"" daemon prio=3 tid=0x0000000101009800 nid=0x10 runnable [0xfffffffd6e6fe000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)
        - locked <0xfffffffd782d55d0> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:453)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)
        at java.lang.Thread.run(Thread.java:619)

""RMI TCP Accept-2011"" daemon prio=3 tid=0x0000000101139800 nid=0xe runnable [0xfffffffd6eafe000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)
        - locked <0xfffffffd780007b0> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:453)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)
        at java.lang.Thread.run(Thread.java:619)

""RMI TCP Accept-0"" daemon prio=3 tid=0x00000001007ba800 nid=0xc runnable [0xfffffffd6eefe000]
   java.lang.Thread.State: RUNNABLE
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)
        - locked <0xfffffffd7807dcc8> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:453)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:34)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)
        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)
        at java.lang.Thread.run(Thread.java:619)

""Low Memory Detector"" daemon prio=3 tid=0x00000001004fe000 nid=0xb runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread1"" daemon prio=3 tid=0x00000001004f7800 nid=0xa waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread0"" daemon prio=3 tid=0x00000001004f4800 nid=0x9 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=3 tid=0x00000001004f2800 nid=0x8 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=3 tid=0x00000001004d2800 nid=0x7 in Object.wait() [0xfffffffd704ff000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0xfffffffd7807e7d0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
        - locked <0xfffffffd7807e7d0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=3 tid=0x00000001004cb800 nid=0x6 in Object.wait() [0xfffffffd706ff000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0xfffffffd780001b8> (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:485)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked <0xfffffffd780001b8> (a java.lang.ref.Reference$Lock)

""main"" prio=3 tid=0x0000000100114800 nid=0x2 in Object.wait() [0xffffffff7c4fd000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0xffffffff03266308> (a [Z)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.activemq.console.command.StartCommand.waitForShutdown(StartCommand.java:161)
        - locked <0xffffffff03266308> (a [Z)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:104)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)

""VM Thread"" prio=3 tid=0x00000001004c7800 nid=0x5 runnable

""GC task thread#0 (ParallelGC)"" prio=3 tid=0x000000010011c000 nid=0x3 runnable

""GC task thread#1 (ParallelGC)"" prio=3 tid=0x0000000100128000 nid=0x4 runnable

""VM Periodic Task Thread"" prio=3 tid=0x000000010066c000 nid=0xd waiting on condition

JNI global references: 767

Heap
 PSYoungGen      total 2447872K, used 1608619K [0xfffffffecd800000, 0xffffffff78400000, 0xffffffff78400000)
  eden space 2098176K, 76% used [0xfffffffecd800000,0xffffffff2faeaca0,0xffffffff4d900000)
  from space 349696K, 0% used [0xffffffff4d900000,0xffffffff4d900000,0xffffffff62e80000)
  to   space 349696K, 0% used [0xffffffff62e80000,0xffffffff62e80000,0xffffffff78400000)
 PSOldGen        total 5595136K, used 4074K [0xfffffffd78000000, 0xfffffffecd800000, 0xfffffffecd800000)
  object space 5595136K, 0% used [0xfffffffd78000000,0xfffffffd783fa8a8,0xfffffffecd800000)
 PSPermGen       total 45056K, used 44664K [0xfffffffd72c00000, 0xfffffffd75800000, 0xfffffffd78000000)
  object space 45056K, 99% used [0xfffffffd72c00000,0xfffffffd7579e1b8,0xfffffffd75800000)


[mdtapdot01]#
[mdtapdot01]#  INFO | waiting for broker persistence adapter checkpoint to succeed before restarting transports
 INFO | waiting for broker persistence adapter checkpoint to succeed before restarting transports
 INFO | waiting for broker persistence adapter checkpoint to succeed before restarting transports




","08/Apr/11 06:08;kiorsak;I also see a message in teh log that might explain why transport connections don't get restarted:


[mdtapdot01]#  WARN | Failure occurred while restarting broker connectors
java.io.IOException: Transport Connector could not be registered in JMX: org.apache.activemq:BrokerName=MobTechTest1,Type=Connector,ConnectorName=openwire
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1670)
        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2159)
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2073)
        at org.apache.activemq.util.DefaultIOExceptionHandler$2.run(DefaultIOExceptionHandler.java:99)
Caused by: javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=MobTechTest1,Type=Connector,ConnectorName=openwire
        at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)
        at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:299)
        at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:65)
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1667)
        ... 3 more

[mdtapdot01]#

","03/Oct/11 07:50;flume;When not using useDatabaseLock=""true"" on the jdbcPersistenceAdapter I still see the broker go down on a stopped database.
When useDatabaseLock=""false"" the broker keeps on going on a stopped database but accepted messages disappear (tested with web-console) completely. One should be warned using this setting.

<bean id=""ioExceptionHandler"" class=""org.apache.activemq.util.DefaultIOExceptionHandler"">
	<property name=""ignoreAllErrors""><value>false</value></property>
        <property name=""stopStartConnectors""><value>true</value></property>
</bean> ","27/Jun/13 20:39;gtully;https://issues.apache.org/jira/browse/AMQ-4575 is relevant.","03/Dec/13 18:03;kishan3814;Please have a look at https://issues.apache.org/jira/browse/AMQ-4911 andwould appreciate if u guys try to solve ","19/Jun/15 17:01;volkerk;When  using useDatabaseLock=""true"" of course a stopped DB will cause the broker to go down - it no longer has a lock, nor a means of obtaining one. But when the DB is back up, it needs to be able to re-establish connections, and obtain a new lock, since the DB going down means there no longer is anyone holding that lock. But if you have merely a network blip, and the DB did not go down, you may have a stale session in the DB that still holds the lock, and needs to be killed before a broker can be reestablished. That's tough, but tends to be a lot more reliable than filesystem-based locks, which go AWOL all the time.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary TcpTransportFactory NumberFormatException and warning,AMQ-2256,12483701,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,sblewis,sblewis,18/May/09 21:30,07/May/15 13:18,30/Jan/20 16:55,26/Feb/11 22:53,5.2.0,,,,,,,5.5.0,,,Transport,,,,0,"When executing TcpTransportFactory.createTransport(URI location, WireFormat wf) the following warning is incorrectly generated:

WARNING: path isn't a valid local location for TcpTransport to use
java.lang.NumberFormatException: For input string: ""/exampleTopic""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Integer.parseInt(Integer.java:447)
	at java.lang.Integer.parseInt(Integer.java:497)
	at org.apache.activemq.transport.tcp.TcpTransportFactory.createTransport(TcpTransportFactory.java:125)
	at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:141)
	at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:51)
	at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:80)
	at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:237)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:252)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:224)
	at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:172)
...

With the topic name set to ""/exampleTopic""

The code responsible for this looks like:

        URI localLocation = null;
        String path = location.getPath();
        // see if the path is a local URI location
        if (path != null && path.length() > 0) {
            int localPortIndex = path.indexOf(':');
            try {
                Integer.parseInt(path.substring(localPortIndex + 1, path.length()));
                String localString = location.getScheme() + "":/"" + path;
                localLocation = new URI(localString);
            } catch (Exception e) {
                LOG.warn(""path isn't a valid local location for TcpTransport to use"", e);
            }
        }
        SocketFactory socketFactory = createSocketFactory();
        return createTcpTransport(wf, socketFactory, location, localLocation);
    }


The problem seems to be that for the path=""/exampleTopic"", the following line:

           int localPortIndex = path.indexOf(':');

returns -1 (no colon and no port specified in path

and the subsequent line:

             Integer.parseInt(path.substring(localPortIndex + 1, path.length()));
  
generates the NumberFormatException (because the path does not have any integer).

It seems that perhaps there should be some test like:

if (localPortIndex != -1) {
...
}

I will create a patch if desired.  Just LMK.


",Windows XP,gangliu,ghenry@lswe.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-08-06 09:04:27.065,,,false,,,,,,,,,,,,,,,,,14698,,,Thu May 07 13:18:30 UTC 2015,,,,,,,,"0|i0akqf:",59632,,,,,,,,,,,,,,,,,,,"05/Aug/09 22:40;sblewis;Is there any way to shut off the presentation of this NumberFormatException in 5.2.0.  Short of having it fixed, it would be very nice to at least prevent the spurious NumberFormatException and stack trace from appearing when using the tcp protocol in this manner","06/Aug/09 09:04;gtully;could you attach a test case for this issue? Exactly what parameters are passed to the API?","06/Aug/09 15:25;sblewis;The String path passed to the API  at org.apache.activemq.transport.tcp.TcpTransportFactory.createTransport(TcpTransportFactory.java:125)

is ""/exampleTopic"".  The exact contents of the string doesn't matter.


","26/Feb/11 15:54;tabish;Not enough information provided to construct a test case.  Can be reopened if a test case is provided so this can be validated.","26/Feb/11 22:12;sblewis;The test case is simply:

new ActiveMQConnectionFactory(""tcp://localhost:61616/exampleTopic"").createConnection();

The connection is created successfully, bu the NumberFormatException is still being produced to standard error.

Although originally reported on 5.2.0, the same problem exists on 5.3.2 as well (what I happen to be using now).

As stated in the bug, the problem is in TcpTransportFactory.createTransport.  Here is an annotated code fragment that shows the problem (modified slightly from TcpTransportFactory.createTransport)

URI location = new URI(""tcp://localhost:61616/exampleTopic"");
String path = location.getPath();
// path is ""/exampleTopic""
if (path != null && path.length() > 0) {
  int localPortIndex = path.indexOf(':');
// localPortIndex == -1 ...this is wrong, since //exampleTopic has no port in it
  try {
    Integer.parseInt(path.substring(localPortIndex + 1,path.length()));  
// the previous line throws NumberFormatException because path.substring(0.path.length()) does not produce a number, because path is ""/exampleTopic""

","26/Feb/11 22:53;tabish;Thanks, having your full URI made that much easier.  The code will suppress the full exception stack and just log a warning now unless debug logging is on.","29/Nov/12 10:01;gangliu;sorry, But I found we still have some output which looks like:
*[/50/data/fileIn] TcpTransportFactory            WARN  path isn't a valid local location for TcpTransport to use*
I tested on activemq-5.7.0, it's a problem or not? Thanks.","07/May/15 13:18;ghenry@lswe.com;My two cents
Same warning with amq 5.8. used with Apche Camel 
Solved by not adding a / at the end of the amq server url 
tcp://myhost:61616/  give a warning 
tcp://myhost:61616 don't !",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redelivery after rollback does not seem to work well ,AMQ-2087,12482763,12482772,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gnodet,gnodet,28/Jan/09 13:00,21/Apr/15 15:06,30/Jan/20 16:55,30/Jan/09 09:36,5.2.0,,,,,,,5.3.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1601,,,AMQ-5735,,,AMQ-1952,,,"28/Jan/09 13:01;gnodet;AMQ-2087.test.diff;https://issues.apache.org/jira/secure/attachment/12461207/AMQ-2087.test.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-01-28 18:37:04.644,,,false,,,,,,,,,,,,,,,,,75080,,,Fri Jan 30 09:36:18 UTC 2009,,,,,,,,"0|i14c33:",233421,,,,,,,,,,,,,,,,,,,"28/Jan/09 13:01;gnodet;Test case reproducing the problem","28/Jan/09 18:37;gtully;This is a case of amq treating delivery as delivery to the consumer session rather than to the actual consumer implementation. In the test case, all of the 10 messages get redelivered to each consumer and they very quickly reach the default max redelivery count of 6 and get sent to the DLQ!

one solution is to configure the redelivery policy:
{code}ConnectionFactory connectionFactory =
     new ActiveMQConnectionFactory(""vm://localhost?jms.redeliveryPolicy.maximumRedeliveries=100"");
 {code}

An alternative is to use prefetch=0 so that each consumer will only get what it can use.

There are a bunch of related open issues on this behavior, with the wire format change in 6.0 it will be possible to address this. A subscription remove command needs to indicate to the broker the last delivered ack that it has produced. An alternative is that the subscription trys to keep track of this information (which may be simpler).

Is it ok to close this as there are so many open related issues: see: https://issues.apache.org/activemq/secure/IssueNavigator.jspa?reset=true&&query=redelivery&summary=true&description=true&body=true&type=1&pid=10520&status=1 ","28/Jan/09 18:38;gtully;ps: I committed your test with a few variants. thanks,","29/Jan/09 16:41;gtully;going to bite the bullit on this and augment the close command (RemoveInfo) with a deliveredSequenceId so that the broker can determine which of the prefetched messages were actually delivered to the end consumer.
This will require some api changes in the destination which will break DestinationFilters but something has got to give. ","30/Jan/09 09:36;gtully;resolved in r739008
new long attribute to RemoveInfo where the last delivered broker sequence id is passed back to the broker, prefetched messages with ids greater than this value now don't get their redelivery count incremented, requires wireformat version increment to 5 and Destination api change. Any existing DestinationFilters will need to be modified. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
conflict between checking validity of createSession args and requirement to ignore them in managed environment,AMQ-2079,12482613,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,20/Jan/09 02:12,20/Jan/15 17:51,30/Jan/20 16:55,20/Jan/09 02:13,5.3.0,,,,,,,5.3.0,,,Connector,,,,0,"Since amq 4 someone added some parameter checking to ActiveMQConnection.createSession.  This seems like a good idea until you get to the connector and read the ejb spec where it says in a managed environment these parameters should be ignored.  I'm not sure how much they really can be ignored if an xa tx is not present.  What I've done is to enhance the checking in ActiveMQConnection.createSession to be more thorough with better messages and to modify the ra ManagedConnectionProxy to modify one of the parameters if they are inconsistent (i.e. transacted == false, but ack mode == SESSION_TRANSACTED)  (I change it to AUTO_ACKNOWLDEDGE).  I haven't found this causing any problems.",,gtully,tyados,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2015-01-19 21:16:15.792,,,false,,,,,,,,,,,,,,,,,75085,,,Tue Jan 20 17:51:16 UTC 2015,,,,,,,,"0|i0tt33:",172021,,,,,,,,,,,,,,,,,,,"20/Jan/09 02:13;djencks;fixed rev 735914.","19/Jan/15 21:16;tyados;I'm not sure this is the right place, but starting from 5.10.0, that part of code has been deleted:
        if (!transacted && acknowledgeMode == Session.SESSION_TRANSACTED) {
            acknowledgeMode = Session.AUTO_ACKNOWLEDGE;
        }

The session is not transacted and absent an XA transaction, we are left with a problem an exception when we try to commit the ActiveMQ session.

Was there an issue and what is the back story for it, so I can change our code accordingly.

Thank you very much.","19/Jan/15 21:26;tyados;Ok. I found this:
http://marc.info/?l=activemq-commits&m=139483965611120&w=2

with a remark regarding proper use of transactions. Hopefully the dude saw this issue.","20/Jan/15 15:04;gtully;https://issues.apache.org/jira/browse/AMQ-5264 provides a way to have explicit control, even in a managed env.","20/Jan/15 17:51;tyados;Thanks for the info. However, it's added for release 5.11.0, I think we can assume that for 5.10.0 there is no way to manage your own session.
Anyway, sticking to the JMS specs doesn't seem like the worse idea. Probably that's the direction we're going to go for.

Thanks again for your promptness.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad use of Jms field JMSXDeliveryCount. Related to RedeliveryCount and message prefetch ,AMQ-1730,12482772,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,alexiskinsella,alexiskinsella,15/May/08 13:39,09/Jan/15 13:35,30/Jan/20 16:55,30/Jan/09 12:02,5.0.0,5.1.0,,,,,,5.3.0,,,Broker,,,,2,"JMSXDeliveryCount  has to be incremented only on transactional delivery failure ( RuntimeException on processing message, ... ).

JMSXDeliveryCount  is actualy used in correlation with Message.java field: 'redeliveryCounter'.

But RedeliveryCounter  field is used to be incremented each time the message is preteched or sent to a consumer => It does not mean that message has been processed by business in transaction with a failure. It just has been prefetched by consumer ou subscriber. 
A 'not consumed message' can be give back to the broker when the consumer is closed by user, because it has been prefetched but not really consumed!

It does not match the meaning of the JMS field JMSXDeliveryCount  :
""If a failure occurs within transactional processing then the JMSXDeliveryCount is incremented"".


JMSXDeliveryCount  field only has to be incremented on rollback (isn't it? ). This is why Message.redeliveryCount can not be used. Or the behavour of field Message.redeliveryCount has to be changed.

You can either :
* create a new counter on message incremented only on rollback, or
* modify classes : PrefetchSubscription.java and Queue.java to remove redeliveryCount increment and increment it only on rollback.


* PrefetchSubscription.java:

                    if (inAckRange) {
//                        node.incrementRedeliveryCounter();
                        if (ack.getLastMessageId().equals(messageId)) {
                            destination = node.getRegionDestination();
                            callDispatchMatched = true;
                            break;
                        }
                    }



* Queue.java:

                for (MessageReference ref : sub.remove(context, this)) {
                    QueueMessageReference qmr = (QueueMessageReference)ref;
//                    qmr.incrementRedeliveryCounter();
                    if( qmr.getLockOwner()==sub ) {
                        qmr.unlock();
//                        if (!qmr.isDropped() && !qmr.isAcked()) {
//                        	qmr.incrementRedeliveryCounter();
//                        }
                    }
                    list.add(qmr);
                }


BTW, In this code it seems there is a second bug, in case of  test ""qmr.getLockOwner()==sub"" is true qmr is incremented a second time ?! Is it right ?



The result of this problem is the following: 

With Spring and DefaultMessageListenerContainer, a message is consumed one by one. This is why a message prefteched many times, on first real consuming has a JMSXDeliveryCount  with high value not reflecting the reality.",,alexiskinsella,gtully,ibeaumont,syberyan,tsigelnik,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5513,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-17 12:39:35.456,,,false,,,,,,,,,,,,,,,,,84606,,,Fri Jan 09 13:35:09 UTC 2015,,,,,,,,"0|i0s273:",161832,,,,,,,,,,,,,,,,,,,"22/May/08 06:43;alexiskinsella;It is hard to guess how to correct the fact that undelivered messages prefetched should not have their JMSXDeliveryCount  incremented.

I finally corrected it as a workaround (I also have to let prefetch on queues at 0):


    *  PrefetchSubscription.java: (Finally not corrected)

if (inAckRange) {
 node.incrementRedeliveryCounter();
if (ack.getLastMessageId().equals(messageId)) { destination = node.getRegionDestination(); callDispatchMatched = true; break; }
}

    * Queue.java: (Finally only first increment commented)

for (MessageReference ref : sub.remove(context, this)) {
QueueMessageReference qmr = (QueueMessageReference)ref;
qmr.incrementRedeliveryCounter();
if( qmr.getLockOwner()==sub ) {
qmr.unlock();
// if (!qmr.isDropped() && !qmr.isAcked()) {
// qmr.incrementRedeliveryCounter();
// }
}
list.add(qmr);
}

Definitely it seems their is a need for 2 counters:
* one to count delivery to consumers (messages consumed or not by the consumer)
* one for the JMXDeliveryCount incremented only on rollback

JMXDeliveryCount  should not be affected by the value of the prefetch.","17/Jun/08 12:39;tsigelnik;I have the same problem AMQ-1800
But I think redeliveryCounter has to be incremented on rollback only also","03/Jul/08 07:09;tsigelnik;I've investigated the problem and I thnink the problem is absence of command like RollabckCommand which could increment redelivery counter on server. 

It think it should be added something like RollbackCommand and session.sendRollback(rollbackCommand) as like as sesssion.sendAck(ack)","03/Jul/08 13:48;tsigelnik;I was wrong. REDELIVERED_ACK_TYPE is what i ment
I commented qmr.incrementRedeliveryCounter(); both in Queue and now it's Ok for me
","07/Nov/08 16:30;gtully;On the meaning of JMSXDeliveryCount, note that the semantics of redelivery indicators in JMS are not absolute. They are in indication only that redelivery may have occurred or that a transaction rolledback. 
The fact that redispatch of prefetched messages on subscription close, increments the redelivery count, is reasonable w.r.t the spec. The extent of this can be managed by the prefetch value for the subscription.","30/Jan/09 10:56;gtully;The fix for https://issues.apache.org/activemq/browse/AMQ-2087 is relevant here. prefetched messages no longer get their redelivery incremented once the consumer or session is successfully closed.","30/Jan/09 12:02;gtully;resolved with r739249
The fix targets redeliveryCount and ensures that it is not incremented on prefetched messages that have not been delivered to the consumer. The JMSXDeliveredCount is always 1+ the redeliveryCount. 
Please validate your use case against the tests that were modified with r739249, They are visible in the subversion commits tab.","17/Dec/14 13:50;syberyan;Is this supposed to be fixed for topics as well as queues? (ActiveMQ 5.10.0)
The reason I ask is that we're running into this problem with a durable topic subscription. The application uses a transacted camel route without CACHE_CONSUMER, so from what I understand, the session gets closed after each receive and all prefetched messages (100 by default) get redispatched by the broker. The broker however is increasing redelivery count and we see lots of messages ending up in the DLQ.
edit: by looking at the implementations of Destination.removeSubscription(ConnectionContext context, Subscription sub, long lastDeliveredSequenceId), it seems that the lastDeliveredSequenceId parameter is only used for queues...","09/Jan/15 13:35;gtully;[~syberyan] - that was ignored for durable subs - a workaround would be setting keepDurableSubsActive to false. (I think)
I just fixed that up via https://issues.apache.org/jira/browse/AMQ-5513 which will make 5.11
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Try to maintain the order of redelivered messages,AMQ-2719,12483266,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,05/May/10 07:04,05/Dec/14 14:52,30/Jan/20 16:55,05/May/10 07:15,5.3.1,,,,,,,5.4.0,,,,,,,0,When consumer closes all messages dispatched to it are redelivered. These messages should have dispatch priority in order to try maintaining the order of  messages in a single-consumer scenario.,,gtully,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-12-05 14:52:51.438,,,false,,,,,,,,,,,,,,,,,43736,,,Fri Dec 05 14:52:51 UTC 2014,,,,,,,,"0|i0rqgv:",159932,,,,,,,,,,,,,,,,,,,"05/May/10 07:15;dejanb;Fixed with svn revision 941174, by introducing the additional list of redelivered messages that have priority during dispatch.","05/Dec/14 14:52;gtully;further refinement and additional test in http://git-wip-us.apache.org/repos/asf/activemq/commit/60ad0534",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ2149KahaDBTest - intermittent missing/out of order message with restart/failover and durable subs,AMQ-2864,12481790,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Aug/10 12:42,29/Oct/14 16:54,30/Jan/20 16:55,17/Aug/10 11:14,5.4.0,,,,,,,5.4.1,,,Broker,,,,0,"intermittent failure, activate of a durable sub and additions to the topic store may need a sync or async store and dispatch topics may need to be disabled.",,asubbiah,gtully,hekonsek,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-10-27 14:08:09.713,,,false,,,,,,,,,,,,,,,,,14799,,,Wed Oct 29 16:54:00 UTC 2014,,,,,,,,"0|i0ba8n:",63771,Unit Test Broken,,,,,,,,,,,,,,,,,,"17/Aug/10 11:14;gtully;r986264 - disable concurrentStoreAndDispatchTopics by default as it can lead to cursor being out of order w.r.t to the store such that it is possible in the event that the cache becomes exhausted that some messages are skipped for dispatch till a restart.
With a sufficiently large usage limit the cache will always be valid and concurrentStoreAndDispatchTopics can be used to optimise out persistence for fast durable consumers.","27/Oct/14 14:08;hekonsek;What is ""sufficiently large usage limit""? :)","29/Oct/14 03:44;asubbiah;Does this affect virtual topics?","29/Oct/14 12:18;gtully;sufficiently large means that the cursor cache does not get exhausted. In other words, large enough that any backlog can remain in memory. With durable subs that are offline most of the time this will not be practical, so concurrent... is disabled.

This does not affect virtual topics b/c virtual topics are implemented as queues.","29/Oct/14 14:14;asubbiah;Thank you Gary. That's what I would expect. So with concurrent store and dispatch on a virtual topic with persistent messages(multiple subscriber queues) , 
1. Does the producer gets released as soon as the message is published and broker gets a single copy of the message?
OR
2. Does the producer gets released, when the messages gets copied from VT to multiple subscriber queues and the consumers on the subscriber queues acks them.
3. Whats the risk of loosing messages on a VT with concurrent store and dispatch enabled.","29/Oct/14 16:54;gtully;with vt: the producer gets released when a send is enqueued on each of the subscriber queues. there is no risk of message loss. The enqueue is sync, there is no message loss risk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
start/control-script is not suitable for professional environments,AMQ-2453,12483876,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,scoopex,scoopex,14/Oct/09 16:43,01/Oct/14 21:26,30/Jan/20 16:55,30/Sep/13 19:27,5.3.0,,,,,,,NEEDS_REVIEW,,,Broker,,,,1,"The start-scripts ""activemq"" and ""activemq-admin"" do not seem to be ready for production use.

Reasons:
- Server does not run in background
  => this can be done by redirecting output to a file and run in background
  => in my opinion this should be implemented directly in java
  => the console log should be written by log4j to <install-root>/data/console.log
- The process should be started on a non-root user 
  => use 'su -c ""$COMMAND"" - $RUN_AS_USER' 
  => this should be defined in /etc/activemq.conf
- The script should support a ""reload"" feature to reload the configurartion
  (if activemq supports reloading)
- The script should support a ""status"" option
  => this should show a quick overview about the state of activemq
  => this should return a value != 0 if the service is not working
     (this is important for cluster integration)

Does anybody already working on these items?
Do you have suggestions for a implementation?
",,david@davidkarlsen.com,heikki_m,norman,scoopex,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5378,,,,,,"02/Dec/09 17:48;scoopex;activemq;https://issues.apache.org/jira/secure/attachment/12461536/activemq","11/Nov/09 17:53;scoopex;usage-example.txt;https://issues.apache.org/jira/secure/attachment/12461569/usage-example.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-01-15 14:04:50.775,,,false,,,,,,,,,,,,,,,,,14733,,,Thu Sep 19 14:38:30 UTC 2013,,,,Patch Available,,,,"0|i0ako7:",59622,Regression,,,,,,,,,,,,,,,,,,"11/Nov/09 17:53;scoopex;I wrote a new initscript for running standalone activemq installations
(see attached script).

This script is originally based on the scripts  ""activemq"" and
""activemq-admin"" located in
""assembly/src/release/bin/"" and replaces both scripts.

Read ""usage-examples.txt"" for  getting a first impression of the initscript.

Features of the new script:
- the script should be compatible with cygwin, macosx and most linux and
unix systems
  To ensure compatibility to macosx and cygwin it does not utilize lsb
standard infrastructure for controlling daemons like
  ""start-stop-daemon"".
   (i tried to keep the shell-syntax compatible to most unix systems,
but only tested on SLES11 and Ubuntu 9.10)
- the complete functionality if ""activemq-admin"" is now included in
""activemq""
  (list, query, browse, ...)
- all option not implemented by the initscript, are directly passed to
the java-call
- the configuration parameters can be located in
/etc/default/activemq.conf or  $HOME/.activemqrc
- the script supports operation of multiple instances on the same system
  (if the script is symlinked/renamed to
""activemq-instance-<INSTANCENAME>"", the configuration
  is searched on /etc/default/activemq-instance-<INSTANCENAME>.conf and
$HOME/.activemqrc-instance-<INSTANCENAME>)
- in case of syntax-errors in the configuration, the execution is stopped
- a template configuration for the script can be created by using the
""setup"" option
- activemq configuration- and data-dir (e.g. kahadb, tmpstorage) are
configurable
- configuration hints for jmx (because of non-available
""VirtualMachine.attach(PID)"", especially needed when using a ibm jvms)
- improved shutdown procedure: script invokes shutdown by a jmx-request,
if process does not disappear
  after a configurable timeout, the process is killed by SIGKILL (-9)
- start activemq daemon as an background process : option ""start""
- start activemq daemon without daemonizing the daemon: option ""fgstart""
- usage of PID files to determine running activemq instances
- the ""status"" option, checks if there is a running activemq instance
  (this is useful for using activemq with high-availability tools)
- the script outputs usage-information if it is invoked without any option
  (usage of the java binary combined with the script-usage)

In my opinion it would be good/nice:
- if this script is will be tested on several unix-systems and on cygwin
- to provide the possibility to configure the entire jmx-setup in
activemq.xml or jetty.xml
  (if jetty provides this)
- it would be nice if the java code supports daemonizing
- if this script will be part of activemq, we should adapt the wiki pages

Feedback and improvement ideas are very welcome :-)
","13/Nov/09 10:02;scoopex;Removed a typo","18/Nov/09 08:10;scoopex;- Enhanced function documentation
- removed some typos ","02/Dec/09 17:48;scoopex;Relocated /etc/default/activemq.conf to /etc/default/activemq","15/Jan/10 14:04;rajdavies;Marc,
this is really great!
Question - what do you mean by nice if java code supported daemonizing ?","15/Jan/10 16:17;dirkdk;hi there,

I had a short look a the script here and the activemq site (http://activemq.apache.org/unix-service.html). For me as a software engineer and not system engineer it is a bit difficult to say what the best way is, but this is my input:

- process should run like a daemon in the background
- process should do proper logging
- process should be available for status checks (e.g. via jmx)
- process should run like a specified user (e.g. activemq) and not root
- should use PID file 
- should be possible to configure for automatic startup and shutdown

What I miss right now (but might have overlooked):

- example directory layout (where binaries, config files, startup script)
- clear definition of responsibilities of files (controlling process, configuration, etc). Right now too much is in some files
- how to install for automatic startup/shutdown with the system (on linux for me in particular:))

just my 2 cents :)

dirk","15/Jan/10 19:27;scoopex;
Response to:
--- 
Rob Davies added a comment - 15/Jan/10 02:04 PM
Question - what do you mean by nice if java code supported daemonizing ? 
---

- The jetty process should detach STDOUT/STDERR on starting
- The jetty process should start as background process","15/Jan/10 19:42;scoopex;Response to: Dirk de Kok :
---
- process should run like a daemon in the background
- process should do proper logging
- process should be available for status checks (e.g. via jmx)
- process should run like a specified user (e.g. activemq) and not root
- should use PID file
- should be possible to configure for automatic startup and shutdown
---
=> This is already supported by the attached init-script, but it would be better to implement this directly in java
     (and not by using system-properties and shell-tricks)

Additional comments:
    *  example directory layout (where binaries, config files, startup script)
      => just invoke the script without any parameters, you will see some documentation
      => invoke the script with the setup option (./activemq status /path/to/file) and you get a example configuration file  
    * clear definition of responsibilities of files (controlling process, configuration, etc). Right now too much is in some files
      => i agree, this can be improved by implementing more functionality of the script directly in activemq
    * how to install for automatic startup/shutdown with the system (on linux for me in particular)
       => this is already documented in the init-documentation of your linux-os
","15/Jan/10 21:21;david@davidkarlsen.com;There's also a plugin to create jsw wrapper scripts: http://mojo.codehaus.org/appassembler/appassembler-maven-plugin/example-jsw-linux.html","16/May/10 16:46;scoopex;We should remove jsw wrapper scripts  - this is a ugly solution from a linux/unix  sysadmin's view....popular projects like tomcat and jboss
also do not need hacks like this....

See also:   https://issues.apache.org/activemq/browse/AMQ-2105?focusedCommentId=59373&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_59373","18/Jun/10 14:08;dejanb;A modified script has been committed with svn revision 956005

I made a few changes:

- copied the part from the old script that sets ACTIVEMQ_HOME to the current dir if it isn't already set and /opt/activemq does not exists
- refactored around seq as it does not exists on OS X
- added logic to create data folder if it doesn't exist (maybe this can be made even more bulletproof)
- used bash as echo -n is bash specific
- fixed some typos

This is only the starting point, so we should test this thoroughly in various environments and make it rock solid for the next release (I tested it so far on OS X)

The one thing I observed is that we need to improve the stop logic as ""regular stop method"" isn't called asynchronously, so the waiting loop doesn't do much.

Thanks for the contribution Marc.","30/Jun/10 11:01;dejanb;Fixed with svn revision 959227.

I incorporated couple of improvements and tested on OS X, Ubuntu and Cygwin.

Important thing to note is that when used on Cygwin, you should explicitly turn on JMX, like

{code}
        <managementContext>
            <managementContext createConnector=""true""/>
        </managementContext>
{code}

as connecting to pid works only on linux. This should be documented in the upcoming docs.","30/Jun/10 11:23;scoopex;Thats right, ""VirtualMachine.attach(PID)"" also does not work with a IBM JVM (we are using activemq with a IBM JVM on a IBM Mainframe/System z Linux).

Maybe there is a jmx connector for a unix domain socket file available?

This might be very cool from a system administrator´s view - because :

- you don´t need to open and secure (ssl, accounts, passwords, ...) a tcp port
- it is possible to control permissions by simple file permissions
- simple configuration of the initscript

Best regards
Marc","30/Jun/10 12:23;dejanb;Yeah, it'd be very useful, but I'm not aware of such a thing","06/Oct/10 13:34;scoopex;With activemq 5.4.1 the new initscript is part of the activemq distribution.

There are still parts of the old start/control-script infrastructure for unix/linuxmacos systems 
included in the activemq delivery.

This should be removed, because this confuses activemq-users.

Distribution should not contain the follwing folders/files:

apache-activemq-5.4.1/bin/activemq-admin : All functionality of bin/activemq-admin is implemented in bin/activemq
apache-activemq-5.4.1/bin/linux-x86-32 : This is only needed for jsw
apache-activemq-5.4.1/bin/linux-x86-64 : This is only needed for jsw
apache-activemq-5.4.1/bin/macosx       : This is only needed for jsw
apache-activemq-5.4.1/bin/wrapper.jar  : This is only needed for jsw

In my current work-environment admins and developers were confused of having two different start environments  - i think
it´s a good idea to cleanup the distribution.

Regards
Marc
","11/Oct/10 19:32;gtully;The script needs to confine its self to /bin/sh features. It needs to work out of the box on aix.","12/Oct/10 04:31;scoopex;Sorry, i don't own a aix system :-)

Probably its enough to modify the sheebang like this: 
----
$ svn diff
Index: activemq
===================================================================
--- activemq    (Revision 1021620)
+++ activemq    (Arbeitskopie)
@@ -1,4 +1,4 @@
-#!/bin/bash 
+#!/usr/bin/env bash 
 # ------------------------------------------------------------------------
 # Licensed to the Apache Software Foundation (ASF) under one or more
 # contributor license agreements.  See the NOTICE file distributed with
----

Bash emulation of /bin/sh is often not completely compatible to the ""sh"" of legacy unix systems - but most
of these systems provide the bash shell. Can you sent me the following information:
- stdout/stderr output of a script feature which is not working using ""/bin/sh activemq""
- stdout/stderr output of a script feature which is not working with ""/bin/sh -x activemq""

","19/Oct/10 19:16;norman;The script should only use basic shell stuff which is usable with a ksh. Bash is not installed on some unix like operation systems out of the box (for example freebsd). So you should use #!/bin/sh and make it work with it.

Just my 2 cents","20/Oct/10 16:24;scoopex;Rewriting shellscript to run with ksh might be real pain - because the implementation of ksh/sh  varies between systems.
(i.e. between K&R and Sun ksh)

/bin/sh does also not provide real portability for complexer functions - the behavior of /bin/sh varies between systems.

I really think it is no real pain to run this script in bash because bash is available on all commodity unix-systems.

At least Linux, AIX and Solaris provide a preinstalled bash for years now. 

BTW: If there are problems on other platforms i can rewrite the code if you can send me the debugging output of the shell (bash -x).

The new script is an advantage over the old mechanism because the old mechanism only supported linux and macos...

","12/Nov/10 16:36;dejanb;Portability issue fixed with svn revision 1034453

I tested it on osx, various dists of linux, aix and solari. It looks ok now. More testing is definitely welcomed. ","25/Jan/12 17:26;scoopex;The script is included in the distribution.

Why not removing apache-activemq-5.5.1/bin/{activemq-admin,linux-x86-32,linux-x86-64,macosx,wrapper.jar}?

The unix script does not utilize these files - and  apache-activemq-5.5.1/bin/activemq contains all
features of apache-activemq-5.5.1/bin/activemq-admin","10/Jul/12 13:40;scoopex;Please remove the no longer needed files apache-activemq-5.x.x/bin/{activemq-admin,linux-x86-32,linux-x86-64,macosx,wrapper.jar}

Please add the script header to the script apache-activemq-5.x.x/bin/activemq to prevent SLES systems to complain about
broken lsb-headers

{code}
insserv: missing `Required-Stop:'  entry: please add even if empty.
insserv: warning: script 'activemq' missing LSB tags and overrides
insserv: warning: script 'activemq' missing LSB tags and overrides
insserv: Default-Start undefined, assuming default start runlevel(s) for script `activemq'
{code}

Script header:
{code}
#!/bin/sh

### BEGIN INIT INFO
# Provides:          activemq
# Required-Start:    $remote_fs $network $syslog
# Required-Stop:     $remote_fs $network $syslog
# Default-Start:     3 5
# Default-Stop:      0 1 6
# Short-Description: Starts ActiveMQ
# Description:       Starts ActiveMQ Message Broker Server
### END INIT INFO
{code}","10/Jul/12 13:41;scoopex;See last comment - remove the artifacts of the old start mechanism.
Add the script header.","02/Aug/12 13:17;tabish;Added LSB compliant header to the scripts for systems that use it. ","10/Sep/13 14:59;scoopex;There are various references to the old activemq-admin script:

http://activemq.apache.org/activemq-command-line-tools-reference.html

It would be a good idea to add a disclaimer that this tool was replaced by ""bin/activemq"".

The new command is not documented in a good way (http://activemq.apache.org/unix-shell-script.html)
See comment of ""11/Nov/09 18:53"" for improvement. 

Another problem: 
I  discovered that the ""setup"" option seems to create a strange init-script-configuration file. It differs very much from the initial behavior.

I you provide access to the wiki, i will improve the documentation.","10/Sep/13 16:02;tabish;You need to follow the process to submit you ICLA to Apache and appear on the unlisted CLA list then submit a request on the mailing list to be granted karma for your user account on the wiki.

http://www.apache.org/licenses/
","19/Sep/13 08:11;scoopex;I submitted the ICLA and get the confirmation the the ICLA is filed.

If necessary and useful, i can provide documentation for wiki regarding the init-script and fixes for the init script :-)

","19/Sep/13 14:38;tabish;In order to gain edit access you should create an account on the confluence Wiki and then send an email to the dev forum requesting karma to edit.  Your account should be linked to the same email that's associated with your ICLA so we can match them up.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,
Nagitive Number Of Pending Messages ,AMQ-1693,12482854,12482508,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,macdoor,macdoor,28/Apr/08 09:48,02/Jul/14 06:57,30/Jan/20 16:55,26/May/09 08:51,5.1.0,,,,,,,5.3.0,,,,,,,2,"After purged messege from queue, ActiveMQ admin console gives Nagitive Number Of Pending Messages ",,donv,jrideout,mlukica,ryarger,wfrag,wschlich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1940,AMQ-1936,,,,,,,,"28/Apr/08 09:50;macdoor;nagitive Number Of Pending Messages.jpg;https://issues.apache.org/jira/secure/attachment/12460980/nagitive+Number+Of+Pending+Messages.jpg","24/Aug/11 13:42;depinski;negative queue size.png;https://issues.apache.org/jira/secure/attachment/12491483/negative+queue+size.png",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-04-29 13:45:16.569,,,false,,,,,,,,,,,,,,,,,63882,,,Wed Jul 02 06:57:10 UTC 2014,,,,,,,,"0|i0s29j:",161843,,,,,,,,,,,,,,,,,,,"28/Apr/08 09:50;macdoor;Queue A_pug1005 has nagitive Number Of Pending Messages","29/Apr/08 13:45;hadrian;Can you please provide more context?","30/Apr/08 14:22;alexiskinsella;I have the same problem: there are much message count problems in 5.x branches in Web Console.
One of those is related to messages sent with expiration date, which have not been consumed in time. But this is not the only case.

","15/May/08 08:26;alexiskinsella;After a purge the Number of pending messages can be negative. ","26/May/09 08:51;rajdavies;Fixed for 5.3","28/Apr/11 09:14;theozaf;Hi everybody, I am still facing this problem in version 5.5.0 which I have installed recently. My actions is that I am trying to purge an overloaded queue where some consumers are already active and then I have something like -60 messages.","24/Aug/11 13:38;depinski;This bug is still present in 5.5.0. I have a negative queue size in the broker.","24/Aug/11 13:42;depinski;negative queue size in broker active 5.5.0","02/Jul/14 06:57;wschlich;We experience negative queue sizes in ActiveMQ 5.8.0.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory messages are empty when received with a Stomp subscription,AMQ-2098,12482906,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,donv,donv,06/Feb/09 15:41,12/Jun/14 05:10,30/Jan/20 16:55,25/Jun/10 20:29,5.2.0,,,,,,,5.4.0,,,Transport,,,,1,"We need advisory messages for client connections, and we are stomp when connecting to ActiveMQ.  When we subscribe to ActiveMQ.Advisory.Connection, we get messages when clients connect of disconnect, but the messages are empty.  I suspect the information is lost when converting the ActiveMQMessage to a Stomp message.

Some sort of simple serialization (like key: value pairs) of the ConnectionInfo object in ActiveMQMessage.getDataStructure would solve the problem.
","ActiveMQ 5.2, Sun Java 1.6.0_11, Fedora Linux",jamesc,lisachenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/May/10 13:38;jamesc;stomp-advisory.patch;https://issues.apache.org/jira/secure/attachment/12461706/stomp-advisory.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-05-25 13:38:47.01,,,false,,,,,,,,,,,,,,,,,75076,,,Fri Jun 25 20:29:57 UTC 2010,,,,,,,,"0|i0rq5j:",159881,,,,,,,,,,,,,,,,,,,"25/May/10 13:38;jamesc;Find attached a patch which maps the DataStructure objects into JSON using XStream.

Tests included which check the different types of messages returned - ConnectionInfo, ConsumerInfo, ProducerInfo, Message","25/Jun/10 20:29;tabish;Applied the supplied patch, with some additional modifications:

I added some new transformations to the set of XML and JSON transformations so that clients like NMS.Stomp that don't support json can also receive the advisory messages in a format they can digest, namely XML.  The new transformations are 'jms-advisory-xml' and 'jms-advisory-json'.  By default the advisories got out in JSON in keeping with the supplied patch.  I also added two top level transformation for NMS.Stomp to use since it can handle all the transformation types in XML, these are 'jms-xml' and 'jms-json', when these are supplied any Advisory Message, MapMessage or ObjectMessage is encoded into xml or json respectively.  

Added several additional unit tests for my changes along with the ones supplied in the patch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnectionFactoryBean returns null in OSGi env sometimes,AMQ-2960,12483446,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,vbuell,vbuell,05/Oct/10 16:36,07/Jun/14 21:08,30/Jan/20 16:55,03/Nov/13 12:42,,,,,,,,5.10.0,5.9.1,,Broker,,,,0,"From time to time PooledConnectionFactoryBean failed to initialize itself correctly in ServiceMix 4 (FUSE actually). From activemq-broker.xml:

Exception in thread ""SpringOsgiExtenderThread-20"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pooledConnectionFactory' defined in URL [bundleentry://110.fwk173823/META-INF/spring/activemq-broker.xml]: factory-bean 'pooledConnectionFactoryFactory' returned null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:903)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.access$1600(AbstractDelegatedExecutionApplicationContext.java:69)
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$4.run(AbstractDelegatedExecutionApplicationContext.java:355)
	at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.completeRefresh(AbstractDelegatedExecutionApplicationContext.java:320)
	at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor$CompleteRefreshTask.run(DependencyWaiterApplicationContextExecutor.java:132)
	at java.lang.Thread.run(Thread.java:619)


The problem is that Spring sometimes invokes @PreConstruct *AFTER* the getObject() has been used for dependent beans constructing. Therefore PooledConnectionFactoryBean.getObject() returns null.
Lazy initialization is fixing this issue:

    public Object getObject() throws Exception {
        if (pooledConnectionFactory == null)
        {
            afterPropertiesSet();
        }
        return pooledConnectionFactory;
    }
","ServiceMix-4.2.0-fuse-02-00, spring-osgi 1.2.1, spring 2.5.6.SEC02",artnaseef,davsclaus,vbuell,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/10 16:39;vbuell;PooledConnectionFactoryBean-lazy-initialization-workaround-for-null.patch;https://issues.apache.org/jira/secure/attachment/12461805/PooledConnectionFactoryBean-lazy-initialization-workaround-for-null.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-11-03 12:42:10.048,,,false,,,,,,,,,,,,,,,,,74759,,,Sat Jun 07 21:08:41 UTC 2014,,,,Patch Available,,,,"0|i0easf:",81510,,,,,,,,,,,,,,,,,,,"05/Oct/10 16:39;vbuell;Patch attached","03/Nov/13 12:42;davsclaus;Thanks for the patch.","07/Jun/14 21:08;artnaseef;Git commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=4ddbb8546d7ca50b57213da45f3fbd021ef7fe69",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ajax client does not receive all messages,AMQ-3094,12493543,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,alexdean,alexdean,17/Dec/10 18:29,12/May/14 17:09,30/Jan/20 16:55,28/Jan/11 15:26,5.4.2,,,,,,,5.5.0,,,,,,,0,"Not all messages written to a destination are delivered to an ajax client.  This seems particularly true if more than 1 message should be returned to a client at once.  Often, if 5 messages are available, only the first 1 is actually returned in the <ajax-response> XML.  The other 4 are lost.

Steps to reproduce:
 * Place the attached chat-sent.html in activemq/webapps/demo/  (or in activemq-trunk/activemq-web-demo/src/main/webapp in an svn working copy).
 * Start ActiveMQ.
 * Browse to http://localhost:8161/demo/chat.html & join the chat room.
 * In a new window, browse to http://localhost:8161/demo/chat-send.html

chat-send.html will send 5 message to topic://CHAT.DEMO.  Only 1 (or sometimes 2) messages will be received by the original browser window which is subscribed to the topic.  The activemq web admin will verify that 5 messages were actually sent.","OSX 10.6 on MacBook Pro

java version ""1.6.0_20""
Java(TM) SE Runtime Environment (build 1.6.0_20-b02-279-10M3065)
Java HotSpot(TM) 64-Bit Server VM (build 16.3-b01-279, mixed mode)
",alexdean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/11 15:55;alexdean;all_messages_are_delivered_to_ajax_clients.2.patch;https://issues.apache.org/jira/secure/attachment/12467892/all_messages_are_delivered_to_ajax_clients.2.patch","07/Jan/11 20:27;alexdean;all_messages_are_delivered_to_ajax_clients.patch;https://issues.apache.org/jira/secure/attachment/12467757/all_messages_are_delivered_to_ajax_clients.patch","17/Dec/10 18:30;alexdean;chat-send.html;https://issues.apache.org/jira/secure/attachment/12466479/chat-send.html","17/Dec/10 19:10;alexdean;include-commons-httpclient-in-pom-xml.patch;https://issues.apache.org/jira/secure/attachment/12466485/include-commons-httpclient-in-pom-xml.patch",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2010-12-23 13:22:31.347,,,false,,,,,,,,,,,,,,,,,14715,,,Fri Jan 28 15:26:18 UTC 2011,,,,,,,,"0|i0ak5b:",59537,,,,,,,,,,,,,,,,,,,"17/Dec/10 18:30;alexdean;Test file which publishes 5 messages to topic://CHAT.DEMO.","17/Dec/10 19:10;alexdean;Attached test case does the following:
 * publishes 3 messages to queue://test
 * subscribes to queue://test using an http POST to the AjaxServlet
 * polls for messages

The results of the test are inconsistent.  Sometimes the client receives all messages, sometimes the client receives 0 messages.  (See attached test output in AjaxTest-output.txt.)  These results are not consistent with what I'm seeing in JavaScript testing, where I always seem to receive at least one message, but still provide some documentation for the issue.","17/Dec/10 22:10;alexdean;In AjaxTest-output.txt, also note that for the test runs where no messages are received also show 2 GET requests being made.  The test run where all messages are received shows only a single GET request.  I'm not sure what that means, given that the test has only a single GET.","22/Dec/10 23:52;alexdean;I added 1 debugging statement to MessageListenerServlet.writeMessageResponse.  (See attached patch & sample output.)  The output shows that several individual messages sent from another web client are contained in properties of this single ActiveMQTextMessage.  This seems very likely to be the root cause of the problem.

Is this normal behavior, and we need to search all properties of a TextMessage when writing a response to a client?  Or is it that we need to send messages differently so each 'send' POST actually creates a distinct TextMessage?","23/Dec/10 13:22;dejanb;Fixed with svn revision 1052259.

The problem was that messages received between POST and GET calls were ignored. That should be fixed now. I modified a provided test a bit to demonstrate this issue every time.

Thanks for the great work!","23/Dec/10 23:47;alexdean;Dejan: Take a look at the message properties in https://issues.apache.org/jira/secure/attachment/12466851/write_message_response_debugging_output.txt.  There are four messages here, but only 1 of them gets delivered.

The interesting bits are these:
  message=<message type=""chat"" from=""test-user"">message two</message>
  text = <message type=""chat"" from=""test-user"">message five</message>
  destination = topic://CHAT.DEMO
  m1=<message type=""chat"" from=""test-user"">message three</message>
  m2=<message type=""chat"" from=""test-user"">message four</message>
  m3=<message type=""chat"" from=""test-user"">message five</message>
  t1=send
  t3=send
  t2=send
  d1=topic://CHAT.DEMO
  d2=topic://CHAT.DEMO
  d3=topic://CHAT.DEMO

When an ajax client sends many messages in a short amount of time, they are then delivered to other clients in a single ActiveMQTextMessage.  writeMessageResponse() doesn't handle this properly, and only delivers one of the messages to a subscriber.

I'm not sure if this is a problem on the sending or receiving side.  (Is it legitimate to have multiple messages piled into a single ActiveMQTextMessage like this?)  I agree the junit test now passes, but I don't think the issue is resolved yet.  I'll work on getting some more tests created which reproduce this issue.  For now, you should be able to reproduce it using the chat-send.html script I've already attached to the ticket.","05/Jan/11 19:44;alexdean;Attached test shows that an ajax client will miss messages which arrive while an ajax poll request is in progress.

This test uses org.eclipse.jetty.client.HttpClient rather than org.apache.commons.httpclient.HttpClient.  I was able to get session handling working with the Jetty HttpClient, and it's much better at async requests than the commons HttpClient.

I sometimes see an org.eclipse.jetty.io.EofException in the poll request.  The cause is unclear.  Sometimes the error disappears simply by re-running the test.  Sometimes doing a recompile of activemq-trunk/activemq-web and then re-running the test causes the error to disappear.","05/Jan/11 19:46;alexdean;Sample test output showing the presence/absence of the EofException I noted.","07/Jan/11 20:27;alexdean;Patch will allow an ajax client to receive all messages.  Several other tests are included for previously-untested ajax code.

The following tests fail w/o the patch:
  testAjaxClientReceivesMessagesWhichAreSentToQueueWhileClientIsPolling
  testAjaxClientReceivesMessagesWhichAreSentToTopicWhileClientIsPolling
  testStompMessagesAreReceivedByAjaxClient","10/Jan/11 15:47;alexdean;Updated my svn working copy & re-generated patch due to request from Jeff Rose.  Now based on trunk r1057227.","10/Jan/11 15:55;alexdean;Updated my svn working copy & re-generated patch due to request from Jeff Rose. Now based on trunk r1057227.  Previous version of this patch (w/ identical file name) was missing 1 test which should not have been omitted.","28/Jan/11 15:26;alexdean;Resolved in svn revision 1064725.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible replay of old messages post index recovery from journal - data files containing acks reclaimed/cleaned up in error,AMQ-2832,12482705,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gtully,gtully,16/Jul/10 14:05,13/Feb/14 11:13,30/Jan/20 16:55,15/Apr/13 18:17,5.3.2,,,,,,,5.4.0,5.9.0,,Broker,,,,0,"With long lived messages and outstanding acks, ack distribution can be sparse across data files. If a data file is in use (still has unreferenced messages, the data files containing acks for all those messages also need to be maintained to ensure a replay of the journal replays the corresponding acks. Currently it is possible that data files with no unreferenced messages but with acks pertinent to an in use data file can get deleted. The result is duplicate or relay of old messages after journal recovery (following a crash/restart)",,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4212,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-04-11 17:55:15.35,,,false,,,,,,,,,,,,,,,,,74779,,,Mon Apr 15 18:17:19 UTC 2013,,,,,,,,"0|i0rqrr:",159981,,,,,,,,,,,,,,,,,,,"19/Jul/10 09:18;gtully;resolved in  r964804 KahaDB store and  r964866 AMQ store

Data files containing only acks for messages in referenced data files are now excluded from cleanup till the dependent message file is eligible for cleanup.","11/Apr/13 17:55;tabish;Unfortunately this wasn't really fully fixed.  The tracking of acks isn't persistent so a broker restart between the acks and the recovery can lose track of the ack and allow its data file to be deleted resulting in a recovered message that was previously consumed to be redispatched. ","11/Apr/13 17:55;tabish;Both share the issue of losing track of an ack in a data file that's GC'd","15/Apr/13 18:17;tabish;New fix and tests on trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-admin does not take a user/pass for browse command,AMQ-2266,12483773,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bdarfler,bdarfler,26/May/09 21:51,02/Nov/13 22:19,30/Jan/20 16:55,02/Nov/13 22:19,5.2.0,,,,,,,5.6.0,,,,,,,0,I'm trying to use the activemq-admin browse command to browse some queues.  Unfortunately I'm using JAAS security and the command line tool doesn't allow me to set a user/pass as far as I can tell.  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-11-03 17:34:52.348,,,false,,,,,,,,,,,,,,,,,75004,,,Thu Nov 03 21:53:17 UTC 2011,,,,,,,,"0|i0eaw7:",81527,,,,,,,,,,,,,,,,,,,"03/Nov/11 17:34;callain_accovia;Same issue for me. How to pass username and password for browse? Not documented or lack of feature?
","03/Nov/11 17:47;callain_accovia;I saw a fix in 5.6, can it be backported to 5.3.x or at least 5.5.x?

https://issues.apache.org/jira/browse/AMQ-3411","03/Nov/11 21:53;areese;If you build 5.3.2 or 5.5.1 by yourself, this patch can be applied cleanly.
We backport this patch along with several others onto a build of 5.3.2 and 5.5.1
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.jms.JMSException: User name or password is invalid --> activemq-admin browse --amqurl tcp://localhost:61616 TEST.FOO,AMQ-2794,12482930,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmoulliard,cmoulliard,23/Jun/10 16:00,02/Nov/13 22:19,30/Jan/20 16:55,02/Nov/13 22:19,5.3.0,,,,,,,5.6.0,,,,,,,0,"When security is enable on ActiveMq 5.3.1, the following command 

activemq-admin browse --amqurl tcp://localhost:61616 TEST.FOO 

generates the error :

{code}
[root@mombrks10 bin]# ./activemq-admin browse --amqurl tcp://localhost:64011  Q.INAMEDIA.GESCOM.PANIER.P
Java Runtime: Sun Microsystems Inc. 1.6.0_20 /usr/java/jre1.6.0_20
  Heap sizes: current=15680k  free=15284k  max=251456k
    JVM args: -Dactivemq.classpath=/ap03/brokermutd1/appl/conf; -Dactivemq.home=/ap03/brokermutd1/appl -Dactivemq.base=/ap03/brokermutd1/appl
ACTIVEMQ_HOME: /ap03/brokermutd1/appl
ACTIVEMQ_BASE: /ap03/brokermutd1/appl
ERROR: java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: User name or password is invalid.
java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: User name or password is invalid.
        at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:130)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)

{code}

If we use the command activemq-admin query --jmxuser=monitorRole --jmxpassword=abc123, it works",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-11-03 17:33:42.873,,,false,,,,,,,,,,,,,,,,,74799,,,Thu Nov 03 17:48:31 UTC 2011,,,,,,,,"0|i0eatz:",81517,,,,,,,,,,,,,,,,,,,"03/Nov/11 17:33;callain_accovia;Same issue for me, how to pass the username and password to the activemq-admin browse operation??? Not documented or a lack of feature?
","03/Nov/11 17:48;callain_accovia;I saw a fix in 5.6, can it be backported to 5.3.x or at least 5.5.x?

https://issues.apache.org/jira/browse/AMQ-3411",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XmlBeanDefinitionStoreException : activemq.xsd URL broken in spring.schemas,AMQ-1638,12483889,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,cleclerc@pobox.com,cleclerc@pobox.com,28/Mar/08 16:53,02/Nov/13 20:36,30/Jan/20 16:55,02/Nov/13 20:36,5.0.0,,,,,,,5.9.0,,,Broker,,,,4,"*Problem description*

activemq-core's {{spring.schemas}} file targets broken activemq xsd urls. When {{beans.xml}} targets the correct activemq-core-5.0.0.xsd url in {{xsi:schemaLocation}} attribute, Spring fails to start if an internet connection to activemq.apache.org does not work.

* Broken urls currently in {{spring.schemas}} : 
** http://activemq.apache.org/schema/activemq-core.xsd 
** http://activemq.apache.org/schema/activemq-core-5.0.xsd
* Correct url to add in {{spring.schemas}} : 
** http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd

*Sample of currently failing spring configuration file*

{code:xml|title=beans.xml with ""activemq-core-5.0.0.xsd"" in ""xsi:schemaLocation"" attribute}
<beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:lang=""http://www.springframework.org/schema/lang""
   xmlns:amq=""http://activemq.org/config/1.0"" xmlns:jms=""http://www.springframework.org/schema/jms""
   xsi:schemaLocation=""
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.5.xsd
http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-2.5.xsd
http://activemq.org/config/1.0 http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd"">
   ...
   <amq:queue id=""requestDestination"" physicalName=""requestDestination"" />
   <amq:queue id=""replyToDestination"" physicalName=""replyToDestination"" />
   <amq:connectionFactory id=""activeMqConnectionFactory"" brokerURL=""vm://localhost?broker.persistent=false&amp;broker.useJmx=false"" />
   ...
</beans>
{code}

*Spring loading failure stacktrace*
{noformat}
42907 [main] WARN  org.springframework.beans.factory.xml.XmlBeanDefinitionReader  - Ignored XML validation warning
org.xml.sax.SAXParseException: schema_reference.4: Failed to read schema document 'http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not <xsd:schema>.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
...
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:283)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
...
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:44)
...
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
42969 [main] ERROR org.springframework.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1be8711] to prepare test instance [fr.xebia.sample.springframework.jms.requestreply.RequestReplySpringFrameworkTest@1958cc2]
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 24 in XML document from class path resource [fr/xebia/sample/springframework/jms/requestreply/beans.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element 'amq:queue'.
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
...
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:44)
...
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
Caused by: org.xml.sax.SAXParseException: cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element 'amq:queue'.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
...
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:283)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:382)
	... 26 more
{noformat}
",activemq-core-5.0.0 and spring-jms-2.5.2 .,cleclerc@pobox.com,davsclaus,klenkes,lachezar,pkd,sslavic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1673,,"28/Mar/08 17:00;cleclerc@pobox.com;AMQ-1638.patch;https://issues.apache.org/jira/secure/attachment/12461045/AMQ-1638.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-17 14:40:14.81,,,false,,,,,,,,,,,,,,,,,84628,,,Sat Nov 02 20:35:52 UTC 2013,,,,,,,,"0|i0eawv:",81530,Regression,,,,,,,,,,,,,,,,,,"28/Mar/08 17:00;cleclerc@pobox.com;Patch for AMQ-1638 : add correct [activemq-core-5.0.0.xsd|http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd] URL in {{spring.schemas}} file.

Added line in {{spring.schemas}} file:
{noformat}
http\://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd = activemq.xsd
{noformat}","17/Apr/08 14:40;gmazza;Our company has also stumbled upon this problem--it was rather time-consuming to root out.  It would nice if the patch could be applied to save others the headache.","24/Apr/08 17:15;chirino;AMQ-1673 basically changes how name spaces need to be setup and declared in 5.1.0.  

Switch to the following xmlns configuration and it should work with 5.1.0

{code}
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">
{code}","26/Nov/08 12:58;lachezar;I would like to comment negatively on the decision to change the URLs for the schema files.

Using the no-version XSD files breaks many tools, including, but not limited to XML validation tools.
Using the with-version XSD files fixes the problems with any other tools, however since the URL is not mapped within the spring.schemas file it breaks application start up when no Internet connection is available.
There is also the compatibility issue. If the no-version URL is used it will break, or work, depending on whether the correct version of the JAR is in the class path, which leads to a number of obscure XML validation errors at runtime.

The simplest thing is to include the no-version AND the with-current-version URLs in the spring.schemas file.

Please reopen this issue.","24/Oct/10 11:00;klenkes;In activemq-all-5.4.1.jar the spring.schemas list is broken:

{code}
http\://activemq.org/config/1.0=activemq.xsd
http\://activemq.org/config/1.0/1.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-${pom.version}.xsd=activemq.xsd
{code}

The pom.version can't be interpreted by spring ...","17/Nov/10 02:58;sslavic;Seems like resource filtering hasn't been configured (properly). http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html","02/Nov/13 20:35;davsclaus;All the schema versions is included in activemq-all in the 5.9 release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consumers left hanging in the large network of brokers,AMQ-2327,12482784,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dejanb,dejanb,17/Jul/09 10:42,06/Sep/13 21:53,30/Jan/20 16:55,06/Sep/13 21:51,5.2.0,,,,,,,5.9.0,,,,,,,1,"In a network of brokers of a size of 4 (or more) and using conduit subscriptions, some ""proxy"" consumers can be left hanging due to circular references.",,bra@fsn.hu,donnchadh,gtully,guerrero,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4607,,,,,,"20/Nov/12 15:04;guerrero;ConduitMockTest.java;https://issues.apache.org/jira/secure/attachment/12554351/ConduitMockTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-11-20 15:04:57.418,,,false,,,,,,,,,,,,,,,,,74980,,,Fri Sep 06 21:51:09 UTC 2013,,,,,,,,"0|i0l4qn:",121418,,,,,,,,,,,,,,,,,,,"17/Jul/09 12:46;dejanb;Fixed in svn revision 795069","20/Nov/12 15:04;guerrero;Attaching unit test that shows messages stop forwarding depending on the order consumer paths are added and removed. See [this thread|http://activemq.2283324.n4.nabble.com/Topic-consumers-are-lost-in-a-cyclic-network-td4659548.html].","20/Nov/12 16:17;gtully;There seems to be an ordering issue with this fix, as per the new unit test. Lets investigate for 5.8","06/Sep/13 21:51;gtully;fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/6c5732bc

thanks for the easymock test case. it helped focus in on the real problem.

btw: added the bridge identity to the consumerId generator seed, so that the origin of network consumers is more visible. {code}Broker2->Broker1-52624-1378503483334-23_1_1_1, Broker2->Broker0-52624-1378503483334-31_1_1_1{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC exception when sending and receiving a lot of messages (MySQL 5 in use for persistence),AMQ-1870,12483938,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,pj.fanning,pj.fanning,28/Jul/08 10:35,13/Jun/13 15:17,30/Jan/20 16:55,29/Jan/13 15:29,,,,,,,,5.8.0,,,JMS client,,,,0,"The number of messages that were on the queue was approx 3 million when this exception happened. Would it be possible to modify the code so that the setMaxRows value is kept to a much lower number?

java.sql.SQLException: setMaxRows() out of range. 50871918 > 50000000.
        at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1055)
        at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956)
        at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:926)
        at com.mysql.jdbc.StatementImpl.setMaxRows(StatementImpl.java:2412)
        at org.apache.commons.dbcp.DelegatingStatement.setMaxRows(DelegatingStatement.java:186)
        at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doRecoverNextMessages(DefaultJDBCAdapter.java:703)
        at org.apache.activemq.store.jdbc.JDBCMessageStore.recoverNextMessages(JDBCMessageStore.java:230)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:83)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:188)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:104)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:136)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1092)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1178)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:956)
        at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
        at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)

","Active MQ 5.1, Windows XP, MySQL 5.0.45, MySQL Connector/J 5.1.5",davsclaus,donnchadh,gtully,koppenheim,pj.fanning,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/12 09:33;davsclaus;AMQ-1870.patch;https://issues.apache.org/jira/secure/attachment/12548386/AMQ-1870.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-10-07 12:17:45.189,,,false,,,,,,,,,,,,,,,,,95933,,,Thu Jun 13 15:17:14 UTC 2013,,,,,,,,"0|i05x0f:",32445,,,,,,,,,,,,,,,,,,,"07/Oct/12 12:17;davsclaus;Yeah there should IMHO be some upper limit to cap, so the max rows wont get as large as yours.","09/Oct/12 09:33;davsclaus;A patch that caps at max rows.","09/Oct/12 09:34;davsclaus;Gary do you mind taking a look at this, and the proposed patch.

As the default max rows is at 200, it may be lowered than maxReturned * 2.
","09/Oct/12 12:38;gtully;I wonder what is causing the request for 50871918. It should be based on the page size for the destination. 
@PJ, can you attach your xml configuration.

The original intent of maxrows was to force a table scan to see more than page size messages such that priority messages or selector matching would work independent of the prefetch size or requested dispatch size. It was not intended as a limit, rather as a way of extending the scan.
In this case, it looks like the value being requested is way too large through some error.

Making maxRows an upper limit means we need to pick a better default value, one that is based on the destination pageSize I think.
For the priority and sparse selecto use case, explicit values for pageSize are needed in any event.","09/Oct/12 12:58;pj.fanning;Hi Gary, Claus,
I raised this issue in 2008 and I don't really use ActiveMQ much these days.
I have never modified the ActiveMQ default config, other than to set some environmental settings (eg the MySQL connection details).
Thanks for looking at the issue though.
For the prefetch logic, it does seem sensible to limit the rows to the 100s as opposed to 1000s.
Sorry I can't be of much assistance.","29/Jan/13 15:29;gtully;fix in http://svn.apache.org/viewvc?view=revision&revision=1439933

maxRows is now a max value, limiting the statements result set. the min of maxrows and the current request is used","09/Jun/13 22:54;koppenheim;Hi Gary,

It appears that maxRows is still computed using the max of maxrows and the current request rather than the min in one of the DefaultJDBCAdapter#doRecoverNextMessages overloads.  Please see line 1037 in DefaultJDBCAdapter.

Thanks,

Keith ","13/Jun/13 15:17;gtully;@Keith, thanks for the catch - fix in http://svn.apache.org/r1492698",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible Memory-Leak as ActiveMQTempDestinations don't get deleted when ActiveMQConnection.close() is called,AMQ-3038,12483879,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,norman,norman,15/Nov/10 13:46,02/May/13 02:30,30/Jan/20 16:55,20/Jan/11 16:12,,,,,,,,5.5.0,,,,,,,0,As TemporaryQueue and TemporaryTopic is bound to the scope of a Connection both should be deleted when the Connection is closed. If that's not done its possible to see a Memory-Leak on heavy usage really soon,trunk,sslavic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4196,,,,,,"15/Nov/10 13:48;norman;AMQ-3038.diff;https://issues.apache.org/jira/secure/attachment/12461889/AMQ-3038.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-20 16:12:37.29,,,false,,,,,,,,,,,,,,,,,14707,,,Wed Jan 04 14:30:18 UTC 2012,,,,,,,,"0|i0ak8v:",59553,,,,,,,,,,,,,,,,,,,"15/Nov/10 13:48;norman;This should fix it..","20/Jan/11 16:12;dejanb;Patch applied with svn revision 1061365. Thanks!","04/Jan/12 14:30;harikrishnan;Kindly explain why we are not calling deleteTempDestination as shown below?
for (Iterator<ActiveMQTempDestination> i = this.activeTempDestinations.values().iterator(); i.hasNext();) {
  ActiveMQTempDestination c = i.next();
  deleteTempDestination(c); 
}

Calling delete on ActiveMQTempDestination also calls deleteTempDestination again on the connection.

Please clarify.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prefetchExtension off-by-1 for transacted consumers with prefetchSize > 0,AMQ-2651,12483428,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rodos77,rodos77,15/Mar/10 21:22,02/May/13 02:29,30/Jan/20 16:55,20/Apr/10 15:17,5.3.0,,,,,,,5.4.0,,,Broker,,,,0,"Linked to forum discussion: http://old.nabble.com/prefetchExtension-off-by-1-for-transacted-consumers-with-prefetchSize-%3E-0-ts27866123.html

Hi,

I've searched the forum and JIRA and have noticed that the prefetchExtension in PrefetchSubscription has caused grief before.  However, I think there's still a problem.

First, I understand the purpose of the prefetchExtension for the case when prefetchSize = 0.  It allows messages to be dispatched to the consumer when the consumer requests them (i.e. polls them).  However, I don't really understand the purpose of the prefetchExtension for the cases when prefetchSize > 0.  If the consumer has set the prefetchSize to x, shouldn't it always receive only x messages at a time?  Why is the prefetchSize being extended?  I see that it is only extended in the case when the message delivery is transacted but I still don't understand why this is necessary.

In any case, assuming the prefetchExtension is necessary in the case of prefetchSize > 0 and transacted message delivery, I think the calculation of the prefetchExtension in this case has an off-by-1 error.  I am attaching a junit test that illustrates this problem.

The test is basically acting like a JCA Resource Adapter and sets up an asynchronous message listener by creating a ConnectionConsumer with a maxMessages value of 1.  This translates into a PrefetchSubscription with a prefetchSize of 1.  The test then sends 3 messages.  The purpose of the 1st message is to trigger the prefetch extension logic in PrefetchSubscription upon the message's ack.  When this happens, the prefetchExtension is set to 1 and the prefetchSize essentially becomes 2.  I believe this is incorrect and is the off-by-1 error (assuming the prefetchExtension is required at all in this case).  The 2nd message is simulated to be a long running message so that when the 3rd message is dispatched, the 2nd message is still being processed.  When the 3rd message is dispatched, because the prefetchSize has been extended, it will try to deliver it even though the processing of the 2nd message has not been completed and even though maxMessages on the ConnectionConsumer was specified as 1.

Now, if I only have 1 ServerSession in the ServerSessionPool, this behavior seems to violate the JMS Spec since the maxMessages parameter used during ConnectionConsumer creation is defined as ""the maximum number of messages that can be assigned to a server session at one time"" and ActiveMQ is trying to assign 2 messages to the same ServerSession at the same time. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Apr/10 15:45;rodos77;ASF.LICENSE.NOT.GRANTED--UsePrefetchExtension_Option.patch;https://issues.apache.org/jira/secure/attachment/12461666/ASF.LICENSE.NOT.GRANTED--UsePrefetchExtension_Option.patch","15/Mar/10 21:24;rodos77;OnePrefetchAsyncConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461656/OnePrefetchAsyncConsumerTest.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-04-20 15:17:16.166,,,false,,,,,,,,,,,,,,,,,65689,,,Tue Apr 20 15:17:16 UTC 2010,,,,,,,,"0|i0rq6f:",159885,,,,,,,,,,,,,,,,,,,"15/Mar/10 21:24;rodos77;Attaching junit test.","15/Apr/10 15:45;rodos77;Patch attached.","20/Apr/10 15:17;gtully;resolved in r935954

policyEntry.usePrefetchExtension allows the prefetch extension behaviur to be disabled. When false, and with prefetch of 1 or X, a new message will only be dispatched when the message is acked, rather than when it is delivered. When false, a client ack consumer  or transacted consumer will only ever get prefetch (X) number messages. 

code example of it disabled from the test:
{code}
        PolicyMap policyMap = new PolicyMap();
        PolicyEntry defaultEntry = new PolicyEntry();
        // ensure prefetch is exact. only delivery next when current is acked
        defaultEntry.setUsePrefetchExtension(false);
        policyMap.setDefaultEntry(defaultEntry);
        broker.setDestinationPolicy(policyMap);{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ non-conformance to JMS Spec causing deadlock when using 3rd-party Resource Adapter,AMQ-2652,12483708,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rodos77,rodos77,15/Mar/10 21:45,02/May/13 02:29,30/Jan/20 16:55,09/Aug/11 10:49,5.3.0,,,,,,,5.6.0,,,,,,,2,"Linked to forum discussion: http://old.nabble.com/ActiveMQ-non-conformance-to-JMS-Spec-causing-deadlock-when-using-3rd-party-Resource-Adapter-tt27869447.html

The following is an excerpt from the JMS Spec 1.1:

{quote}
*8.2.3 ServerSessionPool*

	...<snip>...

	If the ServerSessionPool is out of ServerSessions, the getServerSession() method
	may block. If a ConnectionConsumer is blocked, it cannot deliver new messages
	until a ServerSession is eventually returned.
{quote}
\\
I am using a 3rd-party JMS Resource Adapter to integrate ActiveMQ with a J2EE app server.  This Resource Adapter does just what the JMS Spec above allows - it blocks in the ServerSessionPool.getServerSession() call when it is out of ServerSessions.  This causes ActiveMQ to hang due to a deadlock.

The deadlock occurs because the ServerSessionPool uses a single connection to service all its ServerSessions.  This is perfectly legal.  However, ActiveMQ is using this same connection for both dispatching messages to the ConnectionConsumer as well as communicating transaction commits to the JMS engine.  

So the deadlock scenario is as follows:
\- message 1 is dispatched to the ConnectionConsumer and is being processed
\- before message 1 is committed, message 2 is dispatched
\- ServerSession is requested for processing message 2
\- ServerSessionPool.getServerSession() blocks because it is out of ServerSessions, blocking the connection from which the call was made
\- message 1 is finished processing and the tx is committed
\- ActiveMQ does a synchronous send using the same connection that is currently blocked, to communicate the transaction commit command
\- the commit blocks waiting for the connection to be released which will never happen because that release is dependent on the ServerSession being returned to the pool which won't happen until the tx is committed

The stacktraces of the 2 deadlocked threads at the time of the deadlock are as follows:

{noformat} 
""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" prio=6 tid=0x0aecc9f8 nid=0x1414 in Object.wait() [0x0b6af000..0x0b6afc68]
	at java.lang.Object.wait(Native Method)
	- waiting on <0x03070188> (a org.apache.activemq.BlockingServerSessionPoolDeadlockTest$TestServerSessionPool)
	at java.lang.Object.wait(Object.java:474)
	at org.apache.activemq.BlockingServerSessionPoolDeadlockTest$TestServerSessionPool.getServerSession(BlockingServerSessionPoolDeadlockTest.java:106)
	- locked <0x03070188> (a org.apache.activemq.BlockingServerSessionPoolDeadlockTest$TestServerSessionPool)
	at org.apache.activemq.ActiveMQConnectionConsumer.dispatch(ActiveMQConnectionConsumer.java:129)
	at org.apache.activemq.ActiveMQConnection$2.processMessageDispatch(ActiveMQConnection.java:1676)
	at org.apache.activemq.command.MessageDispatch.visit(MessageDispatch.java:108)
	at org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1658)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	- locked <0x03064e98> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:595)
	

""Thread-5"" prio=6 tid=0x0af48ae0 nid=0x14a4 waiting on condition [0x0b8af000..0x0b8afbe8]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1841)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:341)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:80)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1244)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:643)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:286)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:510)
	at org.apache.activemq.BlockingServerSessionPoolDeadlockTest$TestServerSession$1.run(BlockingServerSessionPoolDeadlockTest.java:140)
{noformat} 

\\
I'm attaching a junit test that illustrates this deadlock.

Now, I realize that this bug does not manifest itself if the ActiveMQ Resource Adapter is used.  However, that is only because of the way AMQ RA works - it reuses existing ServerSessions instead of blocking when it runs out (and does a weird callback from the jms session to the ServerSession to start a tx, in order to avoid delivering several messages on same tx which is what would happen when reusing an existing ServerSession that is already in the middle of processing another message).  

I think this is a bug in AMQ JMS engine's implementation which just happens to be masked by the way AMQ RA is implemented.  If a Resource Adapted relies on the blocking behavior clearly provisioned by the JMS Spec, the problem becomes evident. ",,andreaja,grigory,izapolsky@gmail.com,rodos77,tkrah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2651,,"15/Mar/10 21:46;rodos77;BlockingServerSessionPoolDeadlockTest.java;https://issues.apache.org/jira/secure/attachment/12461658/BlockingServerSessionPoolDeadlockTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-03-22 15:17:04.963,,,false,,,,,,,,,,,,,,,,,60072,,,Tue Aug 09 10:49:42 UTC 2011,,,,,,,,"0|i0ah07:",59028,,,,,,,,,,,,,,,,,,,"15/Mar/10 21:46;rodos77;Attaching junit test.","22/Mar/10 15:17;gtully;is it the prefetch extension that is responsible for the second message dispatch that causes the problem here?","22/Mar/10 15:22;rodos77;Yes, exactly.  I didn't mention it here before because I had opened a separate JIRA for that and didn't want to confuse the issues.","09/Aug/11 10:49;gtully;fixed by https://issues.apache.org/jira/browse/AMQ-2651",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lost messages when scheduling messages concurrently,AMQ-3140,12495724,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,moczarski,moczarski,16/Jan/11 20:32,02/May/13 02:29,30/Jan/20 16:55,09/Feb/11 15:25,5.4.2,,,,,,,5.5.0,,,,,,,0,"We observed some problems with the scheduler component. One issue is, that the kaha db files from the scheduler won't be removed. On further investigation I found a potential cause which could be exposed by a test. When messages are send concurrently delayed by the scheduler, messages will be lost. It seems that the schedule method on JobSchedulerImpl should be synchronized.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/11 21:18;moczarski;AMQ3140.patch;https://issues.apache.org/jira/secure/attachment/12468516/AMQ3140.patch","16/Jan/11 21:18;moczarski;AMQ3140Test.patch;https://issues.apache.org/jira/secure/attachment/12468515/AMQ3140Test.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-02-09 15:25:02.907,,,false,,,,,,,,,,,,,,,,,14720,,,Wed Feb 09 15:25:02 UTC 2011,,,,Patch Available,,,,"0|i0ak0f:",59515,,,,,,,,,,,,,,,,,,,"16/Jan/11 21:18;moczarski;Unit test and patch attached. To get the needed concurrency in the test, I have disable the debug log for the scheduling component (see modification in log4j.properties file).","09/Feb/11 15:25;tabish;Confirmed the problem, Patches applied, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NegativeQueueTest and JDBC variant - intermittent failure - missing message when cache exhausted,AMQ-2868,12482179,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Aug/10 11:01,25/Apr/13 12:34,30/Jan/20 16:55,29/Nov/11 00:26,5.4.0,,,,,,,5.6.0,,,,,,,0,"Test fails trying to consume all messages and misses one message on occasion.
Problem, concurrent transaction completion leaves messages out of order in the cursor w.r.t to the store. When the cursor is exhausted, the cache memory limit is reached and subsequent messages are not cached so the next message needs to be recovered from the store, the point at which we start reading from the store is important. If, at the point at which the cache is full, the cursor is out of order, it can skip a message in the store.
Previously, the entire store was replayed, as if it was never cached and these messages are suppressed by the cursor as duplicates, but there is a size limit and producers spread limit on the duplicate suppression that means messages can avoid duplicate detection. Also, in the case of consumer transactions that rollback, duplicate delivery is required so out of order messages may arrive on a subsequent dispatch.
setBatch, ensuring that messages are replayed form the correct point in the store is important to give ordering guarantees with failover and memory limits, so synchronization of the store and cursor w.r.t concurrent transactions is also needed in support of setBatch.

Store commit and the after completions that update the cursor need to be serialized for a destination to keep make this totally deterministic.
recap, memory limits such that a cache will be filled, concurrent send transaction completion so that store updates and cursor updated can overlap with each other and with cache invalidation. setBatch trying to reduce the replay of messages.

Outstanding question:
- do we make the use of setBatch and transaction sync with store and cursor configurable. If setBatch is off, don't sync. Then at the mercy of consumer transactions and duplicate suppression in the event of failover. An alternative is to make the sync conditional on the use of the cache for a destination. Very reliable but slow; slow is a very relative determination!
Also, may need to be disabled for all destinations as a transaction can span many destinations.",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4485,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-06-01 09:19:09.011,,,false,,,,,,,,,,,,,,,,,14555,,,Fri Jun 01 09:19:09 UTC 2012,,,,,,,,"0|i0agzb:",59024,Regression,,,,,,,,,,,,,,,,,,"13/Aug/10 11:07;gtully;Added the sync that serialises transaction updated to the store and cursor such that the cursor is always in order w.r.t to the store and setBatch can revert to just where it needs to so that there are no duplicates replayed to the cursor.
r985155
This is the bullet proof approach.
A variant could acquire per destination locks rather than the transaction store lock that is currently used. This would allow more per destination concurrency.","16/Aug/10 17:01;gtully;sticking with the shared lock for the time being.","26/Aug/11 13:02;gtully;This sync is only needed for sends, but it impacts acks so it needs a revisit. it is too heavy handed.
It breaks concurrent consumption on a destination.","26/Aug/11 15:28;gtully;think setBatch needs to take the sync hit as it is the rare event. It may need to wait till store and cursor are in sync.","31/Aug/11 13:14;gtully;Removed the sync and replaced cursor updates with a stack so that they occur in the same order as the index update, but without the need for the index lock or serial commit execution. Concurrent transactions can now wait on a batch write to the journal for their commit record.


http://svn.apache.org/viewvc?rev=1163613&view=rev","28/Nov/11 23:05;gtully;A failed Ack transaction, one that results in UnMatched ack exceptions for example, if this interleaves with non empty transactions, it can cause the non empty transaction to block. Thread stack{code}ActiveMQ Transport: tcp:///xx:34724"" daemon prio=10 tid=0x00002aaab8187000 nid=0xfd9 waiting on condition [0x000000005a13d000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000794062330> (a java.util.concurrent.FutureTask$Sync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)
	at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:218)
	at java.util.concurrent.FutureTask.get(FutureTask.java:83)
	at org.apache.activemq.transaction.Transaction.waitPostCommitDone(Transaction.java:146)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:73)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:432)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113){code}

The problem is that the empty transaction completion does not get pushed, it pops the valid transaction completion and runs it. The valid transaction pops nothing and tries again to run the after completion. The empty transaction hangs awaiting completion.
The fix is to run the after completion once we determine that there is no transaction work to be done.

This is a tough one to unit test due the the fact that two commit threads need to cross over in the broker.","29/Nov/11 00:26;gtully;fix in http://svn.apache.org/viewvc?rev=1207693&view=rev","01/Jun/12 09:19;dejanb;Removed synchronisation in MemoryTransactionStore.commit() with 1345023. We don't need it anymore as JDBC message store doesn't have a problem with order or writes and message sequence ids.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction commit/rollback through failover should throw TransactionRolledBackException if recovery redelivery dispatches to another consumer,AMQ-2590,12483211,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Feb/10 22:39,19/Apr/13 22:29,30/Jan/20 16:55,01/Feb/10 22:43,5.3.0,,,,,,,5.3.1,5.4.0,,JMS client,,,,0,"Given an outstanding consumer transaction and failover transport recovery. On recovery, messages are redispatched by the broker once the connection, sessions and producers/consumers and transactions are replayed. Redispatch may not dispatch the same messages to the same consumers atm. In the case that a client transaction cannot be recreated it should fail with a TransactionRolledBackException. The failure indicates that the messages the session wants to ack have not again been redispatched so their receipt cannot be committed. The messages in question will have been redelivered to another consumer. 
Likewise in a rollback, in this case there is a warn message to the effect that the rolled back messages may not all be included in the rollback. It that they may not have been redispatched. The unordered redelivery semantics after a session rollback ensure that this error does not need to propagate up to the client.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74880,,,Mon Feb 01 23:12:06 UTC 2010,,,,,,,,"0|i0rqfb:",159925,,,,,,,,,,,,,,,,,,,"01/Feb/10 22:43;gtully;resolved in r905432
","01/Feb/10 23:12;gtully;on 5.3.1 branch a r905437",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"concurrentStoreAndDispatchQueues when cache disabled can lead to skipped message dispatch, leaving message pending for some time",AMQ-3149,12496260,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Jan/11 11:33,12/Mar/13 17:07,30/Jan/20 16:55,21/Jan/11 17:02,5.4.0,5.4.1,5.4.2,,,,,5.5.0,,,Broker,,,,0,"concurrentStoreAndDispatchQueues is on by default for the kahaDB store. It allows dispatch to happen concurrently with persistence to disk. 

It has a dependency on the cache to do the immediate dispatch.(The idea is that a quick ack can cancel the async message add.) 

On a message send, there is a dispatch attempt, if the cache is disabled and the store has not yet seen the message, the dispatch does nothing. problem! 

The next dispatch attempt will only occur when there is a new message, an ack is received or when the expiry processing (default 30 seconds) kicks in. The result is delayed dispatch or unexpected message expiry.
The cache can be disabled on startup if there are pending messages in the store for the default store based cursor.
Workaround: A simple workaround is to disable concurrentStoreAndDispatchQueues via config {code}<kahaDB .... concurrentStoreAndDispatchQueues=""false"" />{code}

Fix: Async storage should be conditional on the cache being enabled.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3145,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14726,,,Fri Jan 21 17:02:22 UTC 2011,,,,,,,,"0|i0ajz3:",59509,,,,,,,,,,,,,,,,,,,"21/Jan/11 11:34;gtully;link to visibility of current state of caching for a q.","21/Jan/11 17:02;gtully;resolved in http://svn.apache.org/viewvc?rev=1061859&view=rev

concurrentStoreAndDispatchQueues is now only in effect when the cache is enabled",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message delivery to selector based consumers pauses if selector leaves messages on the queue.,AMQ-2217,12483549,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jarbaby,jarbaby,21/Apr/09 21:39,06/Dec/12 21:55,30/Jan/20 16:55,17/Sep/10 12:17,5.1.0,5.3.0,,,,,,5.4.1,,,Broker,,,,0,"I have written a test case which will demonstrate the difference between the following two scenarios:

1. Producer sending dissimilar JMSType messages to a queue, with a client consuming all messages (no selector).
2. Producer sending dissimilar JMSType messages to a queue, with a client consuming every other message (using selector).

With a large enough size of test messages (for my environment about 5k), scenario 2 will fail with delivery to the consumer halted, while scenario 1 will not.

Test Output:

waiting for consumer to pause ... consumer: 0, producer: 0
waiting for consumer to pause ... consumer: 200, producer: 5000
waiting for consumer to pause ... consumer: 200, producer: 5000
waiting for consumer to pause ... consumer: 200, producer: 5000
waiting for consumer to pause ... consumer: 200, producer: 5000
waiting for consumer to pause ... consumer: 200, producer: 5000","Windows XP Professional 2002, Service Pack 2,  Intel Pentium D 3ghz, various 1.5 and 1.6 versions of jdk",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2745,,,,,,,"21/Apr/09 21:41;jarbaby;DiscriminatingConsumerLoadTest.java;https://issues.apache.org/jira/secure/attachment/12461490/DiscriminatingConsumerLoadTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-09 11:28:10.319,,,false,,,,,,,,,,,,,,,,,14793,,,Tue Nov 29 15:54:58 UTC 2011,,,,,,,,"0|i0ba3z:",63750,,,,,,,,,,,,,,,,,,,"09/Sep/10 11:28;gtully;There is a workaround, demonstrated in the committed test case. Thanks for the neat test case btw. 
Increasing the maxPageSize from the default 200 to 5000 makes the test work. In xml config for all queues it would be something like:
{code}<destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry queue="">"" maxPageSize=""5000""/>
                </policyEntries>
            </policyMap>
        </destinationPolicy>{code}","09/Sep/10 11:39;gtully;The pageSize is the amount of messages that are pulled into memory by a destination prior to a dispatch, it needs to be large enough to bridge the gaps between messages with sparse selector distribution, otherwise messages of one type will halt the dispatch till they are consumed or expire. A sensible message expiry policy can help in tandem here.","17/Sep/10 12:17;gtully;This is a known limitation, with the Apollo (AMQ 6) project we will be able to address this architectural constraint.
In the mean time, using a large maxPageSize, named queues at the application level, or filtered name virtual queues can provide an alternative strategy. ","29/Nov/11 15:54;smirzai;Does this mean that there is no plan to fix it in future versions of ActiveMQ and not Appollo ?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in Web Console when using an existing browser session with a restarted broker instance,AMQ-2740,12483947,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,adrian.trenaman,adrian.trenaman,19/May/10 08:58,06/Dec/12 20:37,30/Jan/20 16:55,06/Dec/12 20:37,5.3.2,,,,,,,5.8.0,,,Broker,,,,1,"As per summary above. If you have a browser open to the web console, and create a queue it works OK. However, if you then restart the broker adn then try and perform an action like deleting the queue (from the web console) then you'll see the NPE in the broker's log. 

{code}
ERROR | Nested in org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.NullPointerException:
java.lang.NullPointerException
        at org.apache.activemq.web.handler.BindingBeanNameUrlHandlerMapping.getHandlerInternal(BindingBeanNameUrlHandlerMapping.java:57)
        at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:184)
        at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1057)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:854)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:324)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)

{code} 

I think this has something to do with stale session secrets, and is a consequence of support that was put in to protect ActiveMQ against CSRF (cross-site request forgery) attacks. The original CSRF error was alarming; this error, however, is a plain old NPE and we should fix it.",Windows,adrian.trenaman,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-06 20:37:42.484,,,false,,,,,,,,,,,,,,,,,44143,,,Thu Dec 06 20:37:42 UTC 2012,,,,,,,,"0|i0aldz:",59738,,,,,,,,,,,,,,,,,,,"19/May/10 09:00;adrian.trenaman;Just another note on this - if you explicitly refresh the browser page before you do a delete, then the error goes away. This supports my suspicion about this being down to stale session information. ","06/Dec/12 20:37;tabish;Fixed the NPE, will log a scary possible CSRF warning now instead. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Confusion with changes to the default activemq.xml configuration file ,AMQ-2467,12483731,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,bsnyder,bsnyder,bsnyder,27/Oct/09 20:46,05/Dec/12 20:54,30/Jan/20 16:55,05/Dec/12 20:54,5.3.0,,,,,,,5.x,,,,,,,0,"The original intent of AMQ-1894 was to make the default configuration more production ready instead of a demonstration of features. Evidently some of the changes to the default configuration from AMQ-1894 got crossed resulting in some undesirable changes including: 

* [Revision 812481|http://svn.apache.org/viewvc?view=revision&revision=812481] commented out the {{<systemUsage>}} element entirely. 
* [Revision 812481|http://svn.apache.org/viewvc?view=revision&revision=812481] also set the default {{memoryLimit}} attribute on {{<systemUsage>}} element to 20mb instead of the intended128mb. 
* [Revision 813011|http://svn.apache.org/viewvc?view=revision&revision=813011] added back the {{memoryLimit}} attribute on {{<policyEntry>}} elements that apply to all destiations after this attribute had been removed entirely in the original patch. 
* [Revision 819520|http://svn.apache.org/viewvc?view=revision&revision=819520] added a {{<pendingSubscriberPolicy>}} element to the {{<policyEntry>}} element for all topics. There should be no pendingSubscriberPolicy by default. 
* [Revision 820563|http://svn.apache.org/viewvc?view=revision&revision=820563] added a {{<pendingQueuePolicy>}} element to the {{<policyEntry>}} element for all queues. There should be no pendingQueuePolicy by default. 
* It also looks like some of the docs got goofed up so I'll fix that, too. 
* There are also three web applications enabled that shouldn't be including camel, demo and fileserver 
** Enabling the camel web application also enables the camel JMX support which just confuses users who notice the camel JMX domain is present 

The original patch for AMQ-1894 removed the {{<destinationPolicy>}} element entirely. At a later time it was agreed that it should be put back in but only to explicitly enable producer flow control. 

This issue is to remedy these items using a new patch. ",,donnchadh,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Dec/10 19:57;bsnyder;AMQ-2467.patch.txt;https://issues.apache.org/jira/secure/attachment/12465611/AMQ-2467.patch.txt","27/Oct/09 21:13;bsnyder;AMQ-2467.patch.txt;https://issues.apache.org/jira/secure/attachment/12461425/AMQ-2467.patch.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-10-28 13:05:56.958,,,false,,,,,,,,,,,,,,,,,44176,,,Wed Dec 05 20:54:05 UTC 2012,,,,Patch Available,,,,"0|i0allj:",59772,Regression,,,,,,,,,,,,,,,,,,"28/Oct/09 13:05;gtully;Am thinking that producerFlowControll should be off by default. It is an advanced option that allows producers to block such that the entire queue does not block on the broker side. So it is relevant when blocking is the desired behavior.

I think the default should be to use disk space rather than to block. Blocking should only happen when disk space is exhausted. To enable this, the pending message policy needs to be configured to spool message indexes to disk.

From my experience, producer flow control is experienced as ""this broker is getting slower"" where as it should be experienced as the solution to: I have configured a queue limit but I don't want to block all producers, just fast ones. Disabling it by default will lead users to it when they need it.","24/Feb/10 00:59;bsnyder;I concur with disabling producer flow control because I've heard the same comments from many users due to the fact that it is enabled by default. 

I concur with the use of disk space instead of blocking. I see that this requires a {{<pendingSubscriberPolicy>}} and a {{<pendingQueuePolicy>}} in the config, but shouldn't a {{<fileCursor />}} and a {{<fileQueueCursor />}} be used instead of a {{<vmCursor />}} and a {{<vmQueueCursor />}} to achieve disk usage? 

Both of these changes would allow the broker to run in an unencumbered state by default. This is what most users expect. We just need to make sure that this is adequately documented in the config. ","06/Dec/10 19:55;bsnyder;I didn't realize that this issue was not included in the 5.4.2 release so I'm attaching an updated patch that provides the following:

* Disables flow control 
* Enables the {{<systemUsage>}} element by default (so that these settings are explicit and not buried in code) 
* Syncs the values of the {{<systemUsage>}} element with the hard-coded default values in the {{BrokerService.getSystemUsage()}} method ","14/Sep/12 13:37;tabish;Can we close this out now?  The default config now has the systemUsage settings in it.  Flow control is still on by default though. ","05/Dec/12 20:54;tabish;This appears to now be fixed as the default config basically matches what's requested here, with commented out sections showing other configuration options that can be applied.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory messages for Connections distribute userNames and passwords ,AMQ-2335,12482584,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,29/Jul/09 05:15,30/Nov/12 13:40,30/Jan/20 16:55,29/Jul/09 05:24,5.0.0,5.1.0,5.2.0,,,,,5.3.0,,,Broker,,,,0,Advisory messages for Connections distribute userNames and passwords ,,zakalwe,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4198,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74976,,,Wed Jul 29 05:24:55 UTC 2009,,,,,,,,"0|i0s2bb:",161851,,,,,,,,,,,,,,,,,,,"29/Jul/09 05:24;rajdavies;Fixed by SVN revision 798785",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in DemandForwardingBridgeSupport can cause remote connection to be leaked.,AMQ-3016,12483820,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,stirlingc,stirlingc,04/Nov/10 20:01,06/Nov/12 21:50,30/Jan/20 16:55,06/Nov/12 21:50,5.4.1,,,,,,,5.8.0,,,Connector,Transport,,,0,"Symptom
========
I set up two Brokers and a network bridge from Broker A to Broker B over HTTP.  When the bridge is established, each Broker has a single transport connection (VM on broker A and HTTP on broker B) as recorded in RegionBroker.connections

I noticed that when Broker A was stopped (normally), periodically the HTTP connection would remain in Broker B's RegionBroker.connections until the InactivityMonitor on the connection timed out.  If the InactivityMonitor was disbled, then the connection would remain indefinitely.  

If Broker A was restarted, the bridge would be restarted and a second connection would be recorded in Broker B's RegionBroker.connections.  Repeating restarts of Broker A would cause an accumulation of ""dead"" connections, which would eventually lead to an OOM.

Cause
=====
When Broker A is stopped, DemandForwardingBridgeSupport.stop() is called and sends a ShutdownInfo command to the local and remote transports.  When the transports receive the ShutdownInfo, they remove the connection from their associated RegionBroker.connections as part of  TransportConnection.processRemoveConnection(ConnectionId, long):

    public synchronized Response processRemoveConnection(ConnectionId id, long lastDeliveredSequenceId)
            throws InterruptedException {
...
            try {
                broker.removeConnection(cs.getContext(), cs.getInfo(), null);
            } catch (Throwable e) {
                SERVICELOG.warn(""Failed to remove connection "" + cs.getInfo(), e);
            }

In the cases were Broker B would not clean up its connection, I traced the code and discovered that the ShutdownInfo message was not being sent because the remote transport (HttpClientTransport) had already had its ""stopped"" flag set to true as part of HttpClientTransport.oneway(Object command):

    public void oneway(Object command) throws IOException {

        if (isStopped()) {
            throw new IOException(""stopped."");
        }
...

DemandForwardingBridgeSupport's stop() method has the following code:

    public void stop() throws Exception {
...
                    ASYNC_TASKS.execute(new Runnable() {
                        public void run() {
                            try {
                                localBroker.oneway(new ShutdownInfo());
                                sendShutdown.countDown();
                                remoteBroker.oneway(new ShutdownInfo());
                            } catch (Throwable e) {
                                LOG.debug(""Caught exception sending shutdown"", e);
                            } finally {
                                sendShutdown.countDown();
                            }
                        }
                    });
                    if (!sendShutdown.await(10, TimeUnit.SECONDS)) {
                        LOG.info(""Network Could not shutdown in a timely manner"");
                    }
                } finally {
                    ServiceStopper ss = new ServiceStopper();
                    ss.stop(remoteBroker);
                    ss.stop(localBroker);
                    // Release the started Latch since another thread could be
                    // stuck waiting for it to start up.
                    startedLatch.countDown();
                    startedLatch.countDown();
                    localStartedLatch.countDown();
                    ss.throwFirstException();
                }
            }

ShutdownInfo is sent asynchronously to the local and remote transports by a slave thread:

                                localBroker.oneway(new ShutdownInfo());
                                sendShutdown.countDown();
                                remoteBroker.oneway(new ShutdownInfo());

The sendShutdown  latch is used by the master thread to prevent running the finally clause until the ShutdownInfo has been sent:

                    if (!sendShutdown.await(10, TimeUnit.SECONDS)) {
                        LOG.info(""Network Could not shutdown in a timely manner"");
                    }
                } finally {
                    ServiceStopper ss = new ServiceStopper();
                    ss.stop(remoteBroker);
                    ss.stop(localBroker);
...
                }
            }

However, because the latch is countdown *before* remoteTransport.oneway(new ShutdownInfo()) there is a race condition and in most cases the main thread calls ss.stop(remoteBroker) before the slave thread has completed its call to remoteTransport.oneway(new ShutdownInfo()).  As a result, the remoteTransport appears already stopped and the ShutdownInfo is discarded.  This leaves the connection dangling on the remote broker until the InactivityMonitor closes it.

Solution
======
The sendShutdown latch should be countdown *after* remoteTransport.oneway(new ShutdownInfo()).
",,eric-awl,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Nov/10 20:03;stirlingc;ConnectionLeakTest.java;https://issues.apache.org/jira/secure/attachment/12461830/ConnectionLeakTest.java","04/Nov/10 20:08;stirlingc;patch.txt;https://issues.apache.org/jira/secure/attachment/12461840/patch.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-11-05 08:25:53.31,,,false,,,,,,,,,,,,,,,,,74748,,,Tue Nov 06 21:50:27 UTC 2012,,,,Patch Available,,,,"0|i0earb:",81505,,,,,,,,,,,,,,,,,,,"04/Nov/10 20:03;stirlingc;This unit test exhibits the problem being reported.  In this test, a ""validation"" run is made using TCP as the bridge transport --- the race condition does not cause a leak because the remote end of the TCP connection detects the closing of the socket and cleans up the connection.  The ""failed"" run is made using HTTP as the bridge transport.  On my system, the race condition always occurs and causes the unit test to fail.  With the patch applied, both tests always succeed.","04/Nov/10 20:08;stirlingc;Patch to DemandForwardingBridgeSupport which removes the premature call to sendShutdown.countDown.  countDown is already called by the finally clause.","04/Nov/10 20:13;stirlingc;Checkin for r808890 added the extra call to sendShutdown.countDown()","05/Nov/10 08:25;eric-awl;Hi

Since duplex connections are very different from non-duplex one, this patch must be carefully test in all conditions. 
Did you launch all ActiveMQ Maven tests and verify that no border effects are discovered ?

Regards
Eric-AWL","06/Nov/12 21:50;tabish;Noticed this also while doing some work in the bridging code.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
spring.schemas should map http\://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd,AMQ-1637,12483400,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,samokk,samokk,28/Mar/08 12:05,07/Oct/12 12:45,30/Jan/20 16:55,07/Oct/12 12:45,5.0.0,,,,,,,5.x,,,,,,,0,"the 5.0.0 spring.schemas file does not map the URI :
http\://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd

So, an additional line should be added to META-INF/spring.schemas :
http\://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd = activemq.xsd",,davsclaus,samokk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-07 12:45:28.654,,,false,,,,,,,,,,,,,,,,,84629,,,Sun Oct 07 12:45:28 UTC 2012,,,,,,,,"0|i05x3z:",32461,,,,,,,,,,,,,,,,,,,"07/Oct/12 12:45;davsclaus;Its mapped on the 5.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
confluence website misconfigured for custom skin preventing embedded images,AMQ-1619,12483340,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,dsmiley,dsmiley,13/Mar/08 19:11,07/Oct/12 12:25,30/Jan/20 16:55,07/Oct/12 12:25,,,,,,,,5.8.0,,,Documentation,,,,0,"See this page:  http://activemq.apache.org/jboss-integration.html
Notice that there is no embedded image.  The text on the page refers to one.
Now see the same page using the default confluence skin:
http://cwiki.apache.org/confluence/display/ACTIVEMQ/JBoss+Integration
Notice the big image up front.",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-07 12:25:02.44,,,false,,,,,,,,,,,,,,,,,95845,,,Sun Oct 07 12:25:02 UTC 2012,,,,,,,,"0|i05x2f:",32454,,,,,,,,,,,,,,,,,,,"07/Oct/12 12:25;davsclaus;That page is outdated, so I linked to the newer JBoss / AMQ page.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource adapter stops consuming messages after broker is forcefully stopped/restarted during XA transaction.,AMQ-1719,12483350,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,johan.eke,johan.eke,12/May/08 12:47,07/Oct/12 10:52,30/Jan/20 16:55,07/Oct/12 10:52,5.1.0,,,,,,,5.8.0,,,Broker,Connector,,,1,"Have attached logs from websphere, activeMQ and also the content of the datadirectory for details of data state ( plus the smal program used to create the scenario).

#1. Installed the resource adapter that came with ActiveMQ into the websperhe applicationserver and configured it to connect to external broker using failover.
#2. Setup a JDBC XA datasource ( Oracle ) and JMS XA destination ( ActiveMQ ).
#3. Created a small Message Driven bean that receives a JMS message that it tries to store in the database after which it sleeps for 5 secs. And deployed it to the WebSphere appserver.
#4. Started the activemq broker without doing any modifications since the download and extract into the filesystem.
#5. Started applicationserver. 
#6. Started publishing messages to the broker
#7. As expected the Message driven bean received the messages one-by-one and processed them.
#8. Used to ctrl-C on the broker to halt it in the middle of the processing. Resulting in a failed commit of XA transaction.
#9. Waited a while and then started broker again.
#10. Received Exception on client side and nothing more happened. 

Exception in thread ""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" java.lang.NullPointerException
    at org.apache.activemq.state.ConnectionStateTracker$RemoveTransactionAction.run(ConnectionStateTracker.java:84)
    at org.apache.activemq.state.Tracked.onResponses(Tracked.java:31)
    at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:148)
    at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
    at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
    at java.lang.Thread.run(Thread.java:801)
","Windows XP, IBM WebSphere 6.1.0.15, Oracle 10.2.0.3, Java 1.5.0 ( IBM J9 VM), ActiveMQ 5.1.0 downloaded 2008-May-12.",davsclaus,jerryshea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/May/08 12:47;johan.eke;ASF.LICENSE.NOT.GRANTED--DemoEAR.ear;https://issues.apache.org/jira/secure/attachment/12461047/ASF.LICENSE.NOT.GRANTED--DemoEAR.ear","12/May/08 12:47;johan.eke;ASF.LICENSE.NOT.GRANTED--apache-activemq-5.1.0_data.tar.zip;https://issues.apache.org/jira/secure/attachment/12461004/ASF.LICENSE.NOT.GRANTED--apache-activemq-5.1.0_data.tar.zip","12/May/08 12:47;johan.eke;ASF.LICENSE.NOT.GRANTED--websphere_trace.log;https://issues.apache.org/jira/secure/attachment/12461103/ASF.LICENSE.NOT.GRANTED--websphere_trace.log",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-06-25 00:19:48.413,,,false,,,,,,,,,,,,,,,,,84791,,,Sun Oct 07 10:52:40 UTC 2012,,,,,,,,"0|i05wyn:",32437,,,,,,,,,,,,,,,,,,,"12/May/08 12:49;johan.eke;Ooops! Should be WebSphere 6.1.0.11","25/Jun/08 00:19;jerryshea;We are getting a similar exception thrown occasionally during our stress tests. Exception happens on start up of some of our consumers. I am working on some reproduction code now but stack trace looks like this:
{noformat} 
Exception in thread ""ActiveMQ Transport: tcp://localhost/127.0.0.1:62616"" java.lang.NullPointerException
        at org.apache.activemq.state.ConnectionStateTracker$RemoveTransactionAction.run(ConnectionStateTracker.java:84)
        at org.apache.activemq.state.Tracked.onResponses(Tracked.java:31)
        at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:148)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
        at java.lang.Thread.run(Unknown Source)
{noformat} 
We are using AMQ5.1, Jencks 2.1 on Windows XP SP2, Sun JDK1.6.03
","01/Jul/08 21:20;hansb;The NullPointerException occurs at the last line of the 'run()' method of RemoveTransactionAction:

\\
{code:title=ConnectionStateTracker.java|borderStyle=solid}

    private class RemoveTransactionAction implements Runnable {
        private final TransactionInfo info;   

        public RemoveTransactionAction(TransactionInfo info) {
            this.info = info;
        }

        public void run() {
            ConnectionId connectionId = info.getConnectionId();
            ConnectionState cs = connectionStates.get(connectionId);
            cs.removeTransactionState(info.getTransactionId());
        }
    }
{code}

Apparently there is no ConnectionState for ""connectionId"" (anymore).

""removeTransactionState"" removes the TransactionState identified by ""transactionId"" from a local Map, but since ConnectionState does not exist anymore, this is bogus.

The NullPointerException itself is not a problem, but can be avoided by putting an 

   ""if (cs != null) {...}""

around the last statement.

The problem probably existed already.

","07/Oct/12 10:52;davsclaus;I looked in the latest code, and added a fix for the potential NPE.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.NoClassDefFoundError: javax/transaction/... when trying to do data access for Activemq core OSGi bundle,AMQ-1652,12483339,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,jrudnick,jrudnick,09/Apr/08 15:45,07/Oct/12 10:44,30/Jan/20 16:55,07/Oct/12 10:44,5.0.0,,,,,,,5.x,,,Broker,,,,1,"When trying to use the Activemq core OSGi module in a container, you may see java.lang.NoClassDefFoundError: javax/transaction/... when trying to do data access.

This could be worked around if geronimo jta version used was set to 1.1, and reflected with a ""version=1.1"" on the javax.transaction ""Import-Package"" statement in the manifest file for the Activemq-core OSGi bundle.

See 1.15 of http://static.springframework.org/osgi/docs/1.0.2/reference/html/spring-osgi-faq.html for more information.",In OSGi environment (Equinox or Felix containers),davsclaus,jrudnick,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-07 10:44:38.682,,,false,,,,,,,,,,,,,,,,,84622,,,Sun Oct 07 10:44:38 UTC 2012,,,,,,,,"0|i05wyv:",32438,,,,,,,,,,,,,,,,,,,"07/Oct/12 10:44;davsclaus;That package is now optional imported in activemq-core.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to access Serializable class when receiving ObjectMessage in OSGi environment,AMQ-2488,12483743,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,darren.davison,darren.davison,11/Nov/09 21:06,18/Sep/12 13:56,30/Jan/20 16:55,18/Sep/12 13:56,5.3.0,,,,,,,5.7.0,,,Broker,,,,3,"I have configured applications to use Log4J's JMSAppender in order to log messages on a queue as follows;

{noformat}
log4j.appender.jms=org.apache.log4j.net.JMSAppender
log4j.appender.jms.InitialContextFactoryName=org.apache.activemq.jndi.ActiveMQInitialContextFactory
log4j.appender.jms.ProviderURL=tcp://localhost:61616
log4j.appender.jms.TopicBindingName=logTopic
log4j.appender.jms.TopicConnectionFactoryBindingName=ConnectionFactory
{noformat}

Each application logging statement adds a new message to topic://logTopic on the broker.  I have a bundle deployed that attempts to route the messages from this topic with camel;

{code}
from(""activemq:topic:logTopic"")
  .convertBodyTo(String.class)
  .to(""log:foo?level=DEBUG&showProperties=true&showHeaders=true"");
{code}

When using servicemix 4 (Fuse 4.1.0.4), a stack trace is seen with the following message (enhanced using felix.log.level=4);


{noformat}Caused by: java.lang.ClassNotFoundException: *** Class 'org.apache.log4j.spi.LoggingEvent' 
was not found because bundle 56 does not import 'org.apache.log4j.spi' even though bundle 84 
does export it. To resolve this issue, add an import for 'org.apache.log4j.spi' to bundle 56. ***
{noformat}

Bundles as follows;

{noformat}smx@root:/> osgi/list|grep 56
[  56] [Active     ] [       ] [   60] activemq-core (5.3.0.fuse)

smx@root:/> osgi/list|grep 84
[  84] [Active     ] [       ] [    8] OPS4J Pax Logging - API (1.3.0)
{noformat}
",,computerpunk,darren.davison,davisond,davsclaus,donnchadh,gertvanthienen,lintongalloway,mikek753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/09 08:19;gertvanthienen;SMX4-424.diff;https://issues.apache.org/jira/secure/attachment/12461449/SMX4-424.diff","11/Nov/09 21:07;darren.davison;amq-error.log;https://issues.apache.org/jira/secure/attachment/12461568/amq-error.log","11/Nov/09 21:07;darren.davison;amq-headers.log;https://issues.apache.org/jira/secure/attachment/12461570/amq-headers.log",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2009-11-12 07:36:33.535,,,false,,,,,,,,,,,,,,,,,43794,,,Tue Sep 18 13:56:46 UTC 2012,,,,,,,,"0|i0akn3:",59617,,,,,,,,,,,,,,,,,,,"11/Nov/09 21:07;darren.davison;complete stack trace attached in amq-error.log
output of OSGi headers for activemq-core bundle attached in amq-headers.log","12/Nov/09 07:36;mproch;Do  you have this log4j import in your bundle (containing camel route)? I guess the felix debug message (... was not found because ...) can be misleading - I think it should be your camel bundle that imports 'org.apache.log4j.spi' package","12/Nov/09 08:19;gertvanthienen;I think the message on the CNFE is correct: if you look at the stack traces, you'll notice that it's ActiveMQ's ClassLoadingAwareObjectInputStream class that is trying to load the org.apache.log4j.spi.LoggingEvent class.  

With the current OSGi bundle configuration for activemq-core, it can not access that class.  The easy solution would be to add a dynamic import to the activemq-core bundle as in the attached SMX4-424.diff file.  Another option would be to modify the ClassLoadingAwareObjectInputStream class to use OSGi's FrameworkUtil class to determine the correct classloader.","12/Nov/09 08:22;gertvanthienen;This issue was originally created for ServiceMix 4, but I think the real issue is inside the activemq-core bundle.","12/Nov/09 08:23;darren.davison;sorry, I thought I'd included those OSGi headers in one of the attachments.  It does import that package.  Here are the headers from my bundle with the camel route (line breaks added by me for formatting)
\\
\\
{noformat}Application Log Router (75)
---------------------------
Manifest-Version = 1.0
Bnd-LastModified = 1257721682850
Tool = Bnd-0.0.238
Bundle-Name = Application Log Router
Built-By = darren
Import-Package = org.apache.activemq;version=""5.2.0.fuse"",
  org.apache.camel; version=""1.6.1.fuse"",
  org.apache.camel.builder;version=""1.6.1.fuse"",
  org.apache.camel.component.jms;version=""1.6.1.fuse"",
  org.apache.camel.model;version=""1.6.1.fuse"",
  org.apache.camel.spring;version=""1.6.1.fuse"",
  org.apache.commons.logging,
  org.apache.log4j.spi,
  org.davisononline.fuselogger
Bundle-SymbolicName = org.davisononline.fuse-logger
Export-Package = org.davisononline.fuselogger;
  uses:=""org.apache.camel.builder,org.apache.camel.model,
    org.apache.commons.logging,org.apache.camel,org.apache.camel.spring""
Bundle-Version = 0.0.1.SNAPSHOT
Build-Jdk = 1.6.0_16
Created-By = Apache Maven Bundle Plugin
Bundle-ManifestVersion = 2
{noformat}
\\
\\
I queried this all with gertv on IRC, it was he that suggested this looked like an activemq bug and henced raised here.

","13/Jan/10 15:56;dejanb;Fixed with svn revision 898812","19/Apr/10 08:07;davisond;I still appear to get similar issues even with the dynamic import in the manifest:


21:35:46,565 | ERROR | tenerContainer-2 | EndpointMessageListener          | rg.apache.camel.processor.Logger  248 | Caused by: [org.apache.camel.RuntimeCamelException - Failed to extract body due to: javax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: org.apache.log4j.spi.LoggingEvent. Message: ActiveMQObjectMessage {commandId = 5, responseRequired = true, messageId = ID:hepburn-51431-1271622946297-0:0:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:hepburn-51431-1271622946297-0:0:1:1, destination = topic://logTopic, transactionId = null, expiration = 0, timestamp = 1271622946535, arrival = 0, brokerInTime = 1271622946538, brokerOutTime = 1271622946539, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@13bef50, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false}]
org.apache.camel.RuntimeCamelException: Failed to extract body due to: javax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: org.apache.log4j.spi.LoggingEvent. Message: ActiveMQObjectMessage {commandId = 5, responseRequired = true, messageId = ID:hepburn-51431-1271622946297-0:0:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:hepburn-51431-1271622946297-0:0:1:1, destination = topic://logTopic, transactionId = null, expiration = 0, timestamp = 1271622946535, arrival = 0, brokerInTime = 1271622946538, brokerOutTime = 1271622946539, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@13bef50, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false}
	at org.apache.camel.component.jms.JmsBinding.extractBodyFromJms(JmsBinding.java:158)
	at org.apache.camel.component.jms.JmsMessage.createBody(JmsMessage.java:183)
	at org.apache.camel.impl.MessageSupport.getBody(MessageSupport.java:42)
	at org.apache.camel.impl.DefaultUnitOfWork.<init>(DefaultUnitOfWork.java:60)
	at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:56)
	at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48)
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)
	at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:84)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:543)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:482)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:451)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:323)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:261)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
	at java.lang.Thread.run(Thread.java:619)
Caused by: javax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: org.apache.log4j.spi.LoggingEvent
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)
	at org.apache.camel.component.jms.JmsBinding.extractBodyFromJms(JmsBinding.java:125)
	... 16 more
Caused by: java.lang.ClassNotFoundException: org.apache.log4j.spi.LoggingEvent
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:468)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:410)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:398)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:105)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:247)
	at org.apache.activemq.util.ClassLoadingAwareObjectInputStream.load(ClassLoadingAwareObjectInputStream.java:63)
	at org.apache.activemq.util.ClassLoadingAwareObjectInputStream.resolveClass(ClassLoadingAwareObjectInputStream.java:37)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1575)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1496)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1732)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:177)
	... 17 more
","28/Feb/11 04:29;computerpunk;Hi, any updates on this issue ? Is it fixed in version 5.5.0 or will there be any upcoming fix?  

I see a similar stacktrace on my side using activemq version 5.4.2. Is there any other way to verify that I have the same problem on my side other than using the stacktrace?  

For my case, I've deployed ActiveMQ embedded within WebLogic 10. 

Thank you for your time.","24/Jun/11 05:01;joed;Have confirmed the same on a 5.5 embedded in servicemix 4.0, possible to 
workaround by doing the serialization yourself and making sure that mapJmsMessage=false in camel.

The problem is in :

https://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java

Will try to get a patch together against a 5.5 release.","24/Jun/11 06:10;davsclaus;In the camel-sql component there is a JDBC based support for a persistent store for the aggregator EIP. And the serialization logic was a copy of that class mentioned above. We recently had this problem with class loading in OSGi, so we had to use an OSGi aware class loader. So I guess a similar issue exists now in AMQ when running under OSGi.","24/Jun/11 06:23;joed;The fallback strategy really is the problem.
I think this whole classloader should be delegated back to the consumer of the object.

The * dynamic import in a server is a kinda sorta solution to me.
","24/Jun/11 07:27;joed;Just had this confirmed on a non osgi deploy as well.
","19/Apr/12 00:04;johno;Any luck with the patch Edstrom?","18/Sep/12 12:45;davsclaus;Working on using the classloader from the input stream as fallback.

But ideally we may have to do as in Camel to have a ClassResover SPI, which can adapt to its environments, standalone, OSGi, jee etc.","18/Sep/12 13:56;davsclaus;Committed a fix to trunk that uses the classloader of the input stream as 2nd fallback. 

Fell free to give the code on trunk a try.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to monitor or manage slave brokers in shared filesystem master slave configuration,AMQ-2306,12483112,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,scott.clasen,scott.clasen,25/Jun/09 19:09,08/Sep/12 18:15,30/Jan/20 16:55,06/Nov/09 14:19,5.2.0,,,,,,,5.3.1,5.4.0,,Broker,JMX,,,0,"It appears that when running in shared master slave configuration one cant connect to the jmx console or use activemq-admin to stop the slave.

Start a slave with a master running

ACTIVEMQ_HOME: /itdept/apache-activemq-5.2.0
ACTIVEMQ_BASE: /itdept/apache-activemq-5.2.0
Loading message broker from: xbean://itdept//messagebroker/activemq-config/broker3.xml
INFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(/datafiles/itdept//activemq-journal)
WARN  AMQPersistenceAdapter          - Waiting to Lock the Store /datafiles/itdept/activemq-journal

Notice that no connections including jmx have been started...attempts to stop the broker with activemq-admin fail with..Caused by: java.net.ConnectException: Connection refused

Kill the master and get

INFO  AMQPersistenceAdapter          - Aquired lock for AMQ Store/datafiles/itdept/activemq-journal
INFO  BrokerService                  - ActiveMQ 5.2.0 JMS Message Broker (messagebroker3) is starting
INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
INFO  KahaStore                      - Kaha Store using data directory /datafiles/itdept/activemq-journal/kr-store/data
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:55563/jmxrmi
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://0.0.0.0:55553
INFO  TransportConnector             - Connector tcp Started
INFO  BrokerService                  - ActiveMQ JMS Message Broker (messagebroker3, ID:nymb02d-59998-1245957027403-0:0) started
INFO  log                            - Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
INFO  log                            - jetty-6.1.9
INFO  log                            - WebApp@1288520654 at http://0.0.0.0:55573/admin
INFO  log                            - Started SelectChannelConnector@0.0.0.0:55573

Now you can connect via JMX and concole....

brokers are very simply configured...

broker3 

<broker:broker useJmx=""true"" persistent=""true"" brokerName=""messagebroker3"">
        <broker:managementContext>
            <broker:managementContext connectorPort=""55563"" jmxDomainName=""messagebroker3""/>
        </broker:managementContext>
        <broker:persistenceAdapter>
            <broker:amqPersistenceAdapter directory=""/datafiles/itdept/activemq-journal""/>
        </broker:persistenceAdapter>
        <broker:transportConnectors>
            <broker:transportConnector name=""tcp"" uri=""tcp://0.0.0.0:55553""/>
        </broker:transportConnectors>
    </broker:broker>

broker 4 

 <broker:broker useJmx=""true"" persistent=""true"" brokerName=""messagebroker4"">
        <broker:managementContext>
            <broker:managementContext connectorPort=""55564"" jmxDomainName=""messagebroker4""/>
        </broker:managementContext>
        <broker:persistenceAdapter>
            <broker:amqPersistenceAdapter directory=""/datafiles/itdept/activemq-journal""/>
        </broker:persistenceAdapter>
        <broker:transportConnectors>
            <broker:transportConnector name=""tcp"" uri=""tcp://0.0.0.0:55554""/>
        </broker:transportConnectors>
    </broker:broker>



",,npfistner,scott.clasen,sully6768,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4032,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-11-06 14:19:34.317,,,false,,,,,,,,,,,,,,,,,74990,,,Fri Nov 06 14:19:34 UTC 2009,,,,,,,,"0|i0rqvj:",159998,,,,,,,,,,,,,,,,,,,"06/Nov/09 14:19;dejanb;The broker starting sequence now first starts a jmx connector and then tries to boot the broker (including the persistence adapter). This will allow that the slave broker (with the port different than master) in shared file-system ms scenario will be reachable by jmx. However, since broker isn't started properly, there's no much point to do anything with it in this mode, except to stop it. This works fine with activemq-admin script and using ""terminateVm()"" jmx command (used by activemq-admin). I noticed that ""stop()"" jmx command doesn't fully work, since there are some threads left from persistence adapters trying to aquire locks, but that's the topic for some other issue. When master dies, the slave jmx connector becomes fully operable.

In case that master and slave have the same jmx port defined (which is often the case), the slave will detect that jmx connector is not started before acquiring the lock and will try to do it again afterwards. So users that deploy with this configuration will not be affected with this change.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-camel is missing an optional Import-Package for org.apache.activemq.pool,AMQ-2502,12483100,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,philmes,philmes,19/Nov/09 11:28,01/Sep/12 15:54,30/Jan/20 16:55,18/Apr/12 16:08,5.2.0,5.3.0,,,,,,5.3.1,5.4.0,5.6.0,,,,,0,"If pooling is used, org.apache.activemq.pool.PooledConnectionFactory is instantiated using reflection. BND does not detect this, so compliant OSGI containers will throw a class not found exception. To fix, the following line should be added to the <activemq.osgi.import.pkg /> section of the pom:

org.apache.activemq.pool;resolution:=optional,",,davsclaus,gtully,janstey,tabish,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-11-19 13:11:34.17,,,false,,,,,,,,,,,,,,,,,74916,,,Sat Sep 01 15:54:42 UTC 2012,,,,,,,,"0|i0akmf:",59614,Regression,,,,,,,,,,,,,,,,,,"19/Nov/09 13:11;gtully;applied suggestion in r882136, thanks.","18/Apr/12 15:30;gtully;this seems to have regressed via https://issues.apache.org/jira/browse/AMQ-3463

optional imports are missing again.","18/Apr/12 16:08;gtully;fix in http://svn.apache.org/viewvc?rev=1327557&view=rev","14/May/12 01:52;janstey;I'm wondering about this one... in 5.6 with the new optional dependency on activemq-pool, now Maven users the activemq-camel component will fail OOTB. The default behavior is to use pooling, so it isn't an optional dependency by default :) The workaround right now is to always depend on activemq-pool when using activemq-camel. 

Maybe we should remove that optional tag from the activemq-pool Maven dependency? WDYT?","17/May/12 13:13;tabish;I'd agree with this, the optional bit seems a bit odd since its pretty much a requirement.","17/May/12 13:39;gtully;the workaround is to manually install the activemq-pool bundle: {code}>osgi:install activemq-pool{code}","01/Sep/12 15:54;davsclaus;I am adding activemq-pool as required dep for activem-camel again. Just as it used to be in 5.5.1 or older.
See ticket AMQ-3847.

Any objections?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscriber on startup ignores Selectors when calculating pending queue size,AMQ-2801,12482899,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,cgsmithe,cgsmithe,25/Jun/10 15:42,28/Aug/12 11:31,30/Jan/20 16:55,05/Aug/11 15:06,5.3.2,,,,,,,5.6.0,,,JMX,Selector,,,2,"The attached test case demonstrates the following scenario.  

-       Start all durable subscriber connections (on Separate JVMs) each with different selectors.
-       Publish messages to ActiveMQ that only matches one of selectors.
-       Close the connection to both subscribers and restart both connections.
-       The other durable subscriber pending queue size is displayed with the enqeue count for the subscriber on the activemq console.",Windows XP SP3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3998,,,,,,,"25/Jun/10 15:43;cgsmithe;InvalidPendingQueueTest.java;https://issues.apache.org/jira/secure/attachment/12461748/InvalidPendingQueueTest.java","25/Jun/10 15:43;cgsmithe;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461749/activemq.xml",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-08-05 15:06:24.155,,,false,,,,,,,,,,,,,,,,,60100,,,Fri Aug 05 15:06:24 UTC 2011,,,,,,,,"0|i0aken:",59579,,,,,,,,,,,,,,,,,,,"05/Aug/11 15:06;tabish;Created a test case based on the attached sample app, problem seems to be fixed.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support ajax clients in multiple windows/tabs in a single browser,AMQ-2948,12483846,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,alexdean,alexdean,28/Sep/10 17:21,22/Jul/12 04:43,30/Jan/20 16:55,13/Oct/10 11:54,5.4.1,,,,,,,5.4.2,,,,,,,0,"In current ajax code, there is a 1-1 relationship between ajax client and session.  Since multiple windows in the same browser share the same session, it's impossible for the ajax code to update both windows.  Either 1 or the other will receive messages, but not both.

The attached patch allows an optional 'clientId' string to be passed to the JavaScript amq.init() function, similar to that supported by the REST servlet.  This clientId string is sent to the server with every ajax request.  In MessageListenerServlet, a new consumer is created for every new sessionid+clientId, allowing multiple windows in the same browser to send & receive messages independently.

For some (currently) unknown reason, IE7 cannot send messages from multiple windows.  2 IE7 windows can receive messages independently with no errors, but once either IE7 window sends a message, both windows cease receiving data.  This behavior is not seen in FF (OSX or WinXP) or Safari (OSX).  All those browsers are able to send & receive simultaneously in multiple windows with no errors.","OSX 10.6
Centos 5.4",saravanantp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Sep/10 21:11;alexdean;support-multiple-ajax-clients-per-session.patch;https://issues.apache.org/jira/secure/attachment/12461876/support-multiple-ajax-clients-per-session.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-10-13 11:54:50.814,,,false,,,,,,,,,,,,,,,,,14838,,,Sun Jul 22 04:43:35 UTC 2012,,,,Patch Available,,,,"0|i0b9xj:",63721,,,,,,,,,,,,,,,,,,,"28/Sep/10 17:29;alexdean;There's a separate minor change in the attached patch, which ensures that the Content-Type header is always set to 'text/xml'.

In current svn code, this header is only set when a message is delivered.  When a timeout occurs (and an empty <ajax-response></ajax-response> is returned), the Content-Type header is set to 'text/plain'.  The jQuery adapter attempts to parse the responseXML property of the response, which is not populated due to the Content-Type header being set to 'text/plain'.

This is seen in FIrebug as a 200 response resulting in a parseerror.  (Successful response which fired the error-handling ajax callback!)","28/Sep/10 22:20;alexdean;We have observed that ActiveMQ running with this patch does not clean up session data as quickly as we expected.  (Every reload of a browser window which uses the clientId parameter creates 5 new threads in the JVM, and these do not appear to be cleaned up.)  We're going to investigate this a bit more and possibly submit a revised patch.","30/Sep/10 21:11;alexdean;This patch replaces the original one I attached to this ticket.

Changes since original patch:
 - private MessageListenerServlet.ClientConsumerState class refactored to AjaxWebClient (extends WebClient).
 - private MessageListenerServlet.Listener class refactored to AjaxListener.  AjaxWebClient uses an instance of Listener/AjaxListener, so this needs to be public.
 - AjaxWebClient & associated data for each client are now stored in a MessageListenerServlet instance variable (ajaxWebClients) rather than in sessions.
 - Timer/TimerTask code added to examine ajaxWebClients and clean up clients which have not been accessed in the past minute.  This solves the thread-leakage we were seeing in my initial patch.
 - JavaScript to append clientId parameter to all requests moved to amq.js, so no changes are required to the jquery, prototype, or dojo adapters.

New patch also includes a new JS test, and an updated chat.html which uses a clientId (so you can open chat.html in multiple windows in the same browser) for a quick test.","13/Oct/10 11:54;dejanb;Committed with svn revision 1022071. Thanks a lot for a great work.

I think there's two things left to be done to complete Ajax improvements:

* Documentation on Ajax is way out of date, so we should update it with these new features - http://activemq.apache.org/ajax.html
* We should automate JS tests and include them in our unit testing suite with something like WebDriver (http://code.google.com/p/selenium/wiki/GettingStarted)","22/Jul/12 04:38;saravanantp;Hi,
I have a auction application being developed and have multiple users login at the same time for bidding. I understand that clientId in amq.init is the unique parameter that distincts each users window. Say for example, user U1 is logged in IE and user U2 is logged in Chrome at the same time. When they bid, the messages and updated price information are passing to both the users. However, when U1 logs out of the application and logs in back for bidding, he doesnt see the updated price information in his screen, which is weird. Can you please let me know if this is really an issue or I am doing something wrong, please? I use ActiveMQ 5.6.0 with Java and Spring Framework. Appreciate your response.

Saravanan Thoppan","22/Jul/12 04:43;saravanantp;Slight change in my words - However, when U1 logs out of the application and logs in back for bidding and when he starts bidding, the update doesnt come to his winidow but the other users U2 sees the price information being updated on his.

Saravanan Thoppan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client hangs on receive call with timeout value > 0 when activemq is shutdown (CTRL-C),AMQ-2446,12483901,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,callain_conceptum,callain_conceptum,08/Oct/09 23:49,20/Jul/12 20:30,30/Jan/20 16:55,09/Oct/09 16:30,5.2.0,,,,,,,5.3.0,,,,,,,0,"Start ActiveMQ

create a message consumer and make a receive(30000) call for example.

stop ActiveMQ (CTRL-C)

There is an error reported on the console:

2009-10-08 19:23:54,978 [ActiveMQ Transport: tcp://localhost/127.0.0.1:61616] DEBUG org.apache.activemq.ActiveMQConnection - Async exception with no exception listener: java.io.EOFException
java.io.EOFException
	at java.io.DataInputStream.readInt(DataInputStream.java:358)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:210)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:202)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:595)
2009-10-08 19:23:54,978 [ActiveMQ Connection Worker: tcp://localhost/127.0.0.1:61616] DEBUG org.apache.activemq.transport.tcp.TcpTransport - Stopping transport tcp://localhost/127.0.0.1:61616

The thread making the receive call is waiting on a mutex that the ActiveMQ Connection Worker thread that reported that log has (I guess):

class MessageDispatchChannel
    public MessageDispatch dequeue(long timeout) throws InterruptedException {
        synchronized (mutex) {
            // Wait until the consumer is ready to deliver messages.
            while (timeout != 0 && !closed && (list.isEmpty() || !running)) {
                if (timeout == -1) {
                    mutex.wait(); <-----------------------------------------------------------
                } else {
                    mutex.wait(timeout);
                    break;
                }
            }
            if (closed || !running || list.isEmpty()) {
                return null;
            }
            return list.removeFirst();
        }
    }

What is also strange to me is that my timeout of 30000 ms is silently converted to an infinite timeout if the preFetchSize == 0 by this code? Why?

class ActiveMQMessageConsumer
...
            MessageDispatch md;
            if (info.getPrefetchSize() == 0) {
                md = dequeue(-1); // We let the broker let us know when we
                // timeout.
            } else {
                md = dequeue(timeout);
            }
","Windows XP SP3, ActiveMQ 5.2, prefetchSize=0 (java.naming.provider.url = tcp://localhost:61616?jms.prefetchPolicy.queuePrefetch=0)",alisenberg,ll121555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/09 16:18;callain_conceptum;AMQ-2446-Test.zip;https://issues.apache.org/jira/secure/attachment/12461325/AMQ-2446-Test.zip","09/Oct/09 16:29;gtully;AMQ2446Test.java;https://issues.apache.org/jira/secure/attachment/12461326/AMQ2446Test.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-10-09 11:49:34.571,,,false,,,,,,,,,,,,,,,,,74942,,,Fri Jul 20 20:30:23 UTC 2012,,,,,,,,"0|i17kav:",252258,,,,,,,,,,,,,,,,,,,"09/Oct/09 00:05;callain_conceptum;I think this may be linked to https://issues.apache.org/activemq/browse/AMQ-2044.","09/Oct/09 11:49;gtully;would it be possible to run your test case against the current 5.3 release candidate to see if it is resolved. Details of where to find the kits are in the current vote message to the dev list: see: http://www.nabble.com/-VOTE--Apache-ActiveMQ-5.3.0-RC4-ts25802076.html
","09/Oct/09 14:23;callain_conceptum;Hi. I D/L 5.3 RC4 from the link above. I took my application, added the activemq-all-5.3.0.jar jar in my classpath (before other jars) and I still have the same problem (client hangs). I can't vote for a 5.3 RC4 without this being fixed ;-). It is just normal that sometimes, the broker has to be stopped and clients should really not hang like that.

In the mean time, I redesigned portions of my app to use receiveNoWait() + my own thread sleeping logic (more latency though on new messages added to an empty queue of course) instead of receive(timeout) and with that, event with the 5.2 version, I get some exceptions that I can use to recover lost connections, and still use the prefetchSize=0 option on my connection URL.

Still, we have an integration component using Camel on top of ActiveMQ, and for that one, there is not much I can do.

Thanks.

","09/Oct/09 16:18;callain_conceptum;Contains an Eclipse 3.3 project.","09/Oct/09 16:22;callain_conceptum;Good news! I wrote down the simplest test case I could come with:

import java.util.Properties;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Destination;
import javax.jms.MessageConsumer;
import javax.jms.Session;
import javax.naming.Context;
import javax.naming.InitialContext;

public class TestActiveMQShutdown {

    /**
     * Start ActiveMQ on default port
     * Run the main program, it will make a receive with a timeout of 30 seconds
     * During that time, shutdown ActiveMQ.  
     * The system.out below will never happen and you will need to kill the java process
     */
    public static void main(String[] args) throws Exception {

        Properties props = new Properties();
        props.put(Context.INITIAL_CONTEXT_FACTORY, ""org.apache.activemq.jndi.ActiveMQInitialContextFactory"");
        // Please not the prefetch policy here
        props.put(Context.PROVIDER_URL, ""tcp://localhost:61616?jms.prefetchPolicy.queuePrefetch=0"");
        props.put(""queue.test1"", ""test1.q"");

        InitialContext initialContext = new javax.naming.InitialContext(props);

        ConnectionFactory connectionFactory = (ConnectionFactory) initialContext.lookup(""ConnectionFactory"");

        Connection connection = (Connection) connectionFactory.createConnection();

        Session session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);

        Destination destination = (Destination) initialContext.lookup(""test1"");

        MessageConsumer messageConsumer = session.createConsumer(destination);

        messageConsumer.receive(30000);

        System.out.println(""Will never get there if ActiveMQ is shutdown while we were in the receive call above"");

        // I don't care about closing all resources in that test and about the message received

    }

}

And with that, I can reproduce the problem in 5.2 (using activemq-all-5.2.0.jar) , but not in 5.3 (using activemq-all-5.3.0.jar). I used jms-1.1.jar in both cases.

I must have made a mistake or something with my full application when I tried to modify. If you guys can confirm that my test case works for you too, reproducing the problem in 5.2 and seeing 5.3 fixes it, the we could all vote for 5.3 RC4!
","09/Oct/09 16:22;callain_conceptum;Of course, when using activemq-all-5.2.0.jar, I was running ActiveMQ 5.2 server and when using activemq-all-5.3.0.jar, I was running 5.3.","09/Oct/09 16:29;gtully;junit tests case that demos that this works with trunk and hence 5.3","09/Oct/09 16:30;gtully;glad to see we both came to the same conclusion :-) I had just run my junit tests case that worked fine against trunk. thanks,","23/Nov/10 03:01;alisenberg;Hi, I am using 5.4.1 and still have the same situation. I use prefetch=0, failover and connection pool. 

Sometimes when I call receive(1000), the consumer hangs at this line:

org.apache.activemq.SimplePriorityMessageDispatchChannel.dequeue(SimplePriorityMessageDispatchChannel.java:87)
org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:452)

It's very difficult to reproduce with a test case.

thanks,
adrian","20/Jul/12 20:30;ll121555;I wanted to add that we are using 5.6.0 and hit this hang also using prefetch=0, failoverTransport and Spring CachingConnectionFactory with a DMLC consumer.  We aren't sure where in the process the disconnect happens, but after killing the broker, some (but not ALL) of our consumers hung on this wait.  Looking at the Java thread dump, they were on the mutex.wait() call that is mentioned in this JIRA.

We were doing failover testing for our clustered solution hence the reason for stopping the broker during testing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQInitialConnectionFactory cannot return an XAConnectionFactory,AMQ-2656,12483476,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,edan,edan,18/Mar/10 19:51,11/Jul/12 11:41,30/Jan/20 16:55,11/Jul/12 11:41,5.3.0,,,,,,,5.4.0,5.7.0,,JMS client,,,,0,"ActiveMQInitialContextFactory cannot resolve the name ""XAConnectionFactory""  a la:

INFO: JNDI API lookup failed: javax.naming.NameNotFoundException: XAConnectionFactory

This prevents using the builtin JNDI service in an XA transaction context.  I've created a simple patch to workaround this and discussed it on the mailing list:  http://old.nabble.com/ActiveMQ%27s-JNDI-does-not-resolve-XAConnectionFactory-td27936255.html

",,gtully,hindsbeans,sapunce,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/10 03:05;edan;ActiveMQInitialContextFactory.java;https://issues.apache.org/jira/secure/attachment/12461576/ActiveMQInitialContextFactory.java","18/Mar/10 20:20;edan;ActiveMQInitialContextFactory.java;https://issues.apache.org/jira/secure/attachment/12461439/ActiveMQInitialContextFactory.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-03-18 20:05:11.874,,,false,,,,,,,,,,,,,,,,,74857,,,Wed Jul 11 11:41:21 UTC 2012,,,,,,,,"0|i0akiv:",59598,,,,,,,,,,,,,,,,,,,"18/Mar/10 20:05;gtully;added support for a boolean xa property in the environment which will cause an xa connection factory to be created. r924972
{code}xa=true{code}
or on a lookup name basis
{code}connection.<name>.xa=true{code}
will result in an XAConnectionFactory being created.
","18/Mar/10 20:20;edan;This is my patched version that allows me to jndiContext.lookup(""XAConnectionFactory"") and get a working XAConnectionFactory.
","18/Mar/10 20:24;edan;Gary, will your patch (I can't see it yet) allow me to JNDI lookup ""XAConnectionFactory""  ?  That may be all I have available in webMethods ""JNDI Provider Alias"" settings.  I guess I can try to lookup connection.MyConnection or something along those lines.","18/Mar/10 20:45;gtully;check out the subversion commits tag to see the changes.

It may not be enough for you if you cannot augment the environment to add the xa=true property.
there is also a property for the connectionFactoryNames where you can provide the list of names you will expect. This overrides the DEFAULT_CONNECTION_FACTORY_NAMES","19/Mar/10 01:31;edan;At least from work, it took a while for the source code to show up in Crucible.  I saw it before I left work, but I wasn't able to get it to work.  I'll try again tomorrow, but I get ClassCastException trying to cast ActiveMQConnectionFactory to ActiveMQXAConnectionFactory.  Maybe that should work since it's a subclass, but that error makes me doubtful :)  So far I've only been successful with my patch which returns an ActiveMQXAConnectionFactory specifically.

From within webMethods, I can set ""other properties"" which seem to be ""jndi.properties.""   I tried adding ""MyConnection"" to my custom list of connectionFactoryNames, but I was unsuccessful performing a context.lookup() on ""MyConnection.xa=true"" or ""connection.MyConnection.xa=true"" ...

If I can get your patch working, I still want to modify the DEFAULT_CONNECTION_FACTORY_NAMES to include ""XAConnectionFactory"" to make it available as easily as the other standard JMS types.  Thanks for your help on this :)","19/Mar/10 03:05;edan;This version is based on the latest svn but adds an XAConnectionFactory to the default list of factories, and sets the ""xa"" environment value manually for that factory during creation.  I was able to test the original patch successfully, and this patch lets me lookup ""XAConnectionFactory"" via the JNDI context which I believe will be required to easily integrate with webMethods.

Maybe it should be a regexp so any custom connection name with ""XA"" will get the treatment?  *shrug*  I guess I think that at a minimum, a default connection factory name like ""XAConnectionFactory"" should work without setting environment variables.  But I what do I know, seriously...   ;)","19/Mar/10 11:19;gtully;If you can specify in other properties:
{code}
connectionFactoryNames=XAConnectionFactory
xa=true
{code}

then:
{code}context.lookup(""XAConnectionFactory""){code} will be an instanceof XAConnectionFactory","19/Mar/10 15:46;edan;Thanks for the pointers on the properties.  I was able to just have a line with ""xa=true"" in both my jndi.properties for my standalone java client test and the ""Other Properties"" in webMethods and create an ""XA"" transaction by just looking up ""ConnectionFactory.""  It seems to apply to all ConnectionFactory lookups, though, so my standalone java client gets an exception when sending a message:

javax.jms.JMSException: Session's XAResource has not been enlisted in a distributed transaction.

I assume there is no way to limit the xa=true property to a particular connection factory lookup with this method.  (If I use your snippet above a lookup of ""ConnectionFactory"" fails, for instance.)  It seems less desirable to me to be forced into creating separate processes or JNDI Providers in webMethods to do XA or not.  But I can work with the patch you have submitted for 5.4.0, as opposed to current.  Once we've had a chance to test out the current patch in webMethods more, perhaps we will see if it is a big of a pain or not.  

I'm tempted to keep my patch locally, as it strikes me as much easier to remember ""just look up XAConnectionFactory if that's what you need"" as opposed to configuring the environment.  OTOH, it may be harder to remember to keep my local patch when we upgrade someday :)  Thanks again.","19/Mar/10 15:53;gtully;you are nearly there, try{code}
connectionFactoryNames=XAConnectionFactory,ConnectionFactory
connection.XAConnectionFactory.xa=true
{code}

and you can lookup both an xa and non xa connectonfactory by their respective names.","23/Mar/10 20:14;edan;Why didn't you mention that in the first place!?!?!   Oh... Because you did... DOH!

Ok, that is working fine for both my Java client test and our webMethods environment, even as far as verifying a transaction can be rolled back.    I still think XAConnectionFactory should be available without additional configuration, for instance, just yesterday I had to remind a coworker to copy the properties configuration after setting up a new system :)

But this is working and I don't want to be too pushy with my first reported issue :)  Thanks a lot for the help.","01/Sep/10 14:37;sapunce;Hello Gary and Edan, 

I have the same problem using the XAConnectionFactory with ActiveMQ. 
Could please tell me is this patch released and how can I use it?

Regards,
Nace","01/Sep/10 15:25;gtully;it is in 5.4.0, see the fix version above and the comment: https://issues.apache.org/activemq/browse/AMQ-2656?focusedCommentId=58336&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_58336

that has details of the properties.
There is also a test you can browse: 
http://fisheye6.cenqua.com/browse/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/jndi/XAConnectionFactoryTest.java","02/Sep/10 10:32;sapunce;Thanks for your fast response Gary. Yes it works for me.

Thanks again, 
Nace","25/Jan/11 14:52;hindsbeans;Gary, thanks for your help on this. In the end I had to use the version of ActiveMQInitialContextFactory.java as attached by Edan idzerda at 2010-03-18 11:05 PM. I had a search through the ActiveMQ issue tracker and couldn't find if Edan's suggested code was ever added to core - do you know if it was? It would be very useful if it was for cases like the one I have outlined below where the setting up of the jndi environment is abstracted up out of the code. (i.e. in websphere you cannot define the 'xa=true' property anywhere - hence Edan's 'XAConnection' jndi name is invaluable!

For anybody else trying to get a connection to ActiveMQ within a WebSphere7.0.0-managed XA transaction and getting an error of ""An illegal attempt to commit a one phase capable resource with existing two phase capable resources has occured"" in the WebSphere SystemOut.log. This error was thrown when a Message Driven Bean was fired from a WebSphere default jms queue and it tried to write a message to an ActiveMQ queue all within an XA transaction. There was an Oracle db write in the same transaction also. Here are the steps to get around it:

1) Use the attached file kindly attached by Edan at 2010-03-18 11:05 PM to compile activemq-5.4.0.

2) In WebSphere Admin Console, create a new JMS provider:
i) Resources > JMS > JMS providers > New
ii) Use the following:
    Name: use a name like 'ActiveMQ 5.4.0'
    Classpath: add the paths to the following jar files (each path needs to be on a new line in the text box) activemq-all-5.4.0.jar, commons-logging-1.1.jar, geronimo-j2ee-management_1.1_spec-1.0.1.jar
    External Initial Context Factory: org.apache.activemq.jndi.ActiveMQWASInitialContextFactory
    External Provider URL: tcp://localhost:61616

3) In WebSphere Admin Console, create a new ConnectionFactory
i) Resources > JMS > Connection factories > New
ii) Use the following:
    Name: use a name like 'ActiveMQ 5.4.0 Connection Factory'
    JNDI name: jmsfactory/activemq540connfactory (this will be the name that any WebSphere-run apps will lookup using jndi)
    External JNDI name: XAConnectionFactory (this is the new name added by Edan's code in step 1 above - basically, when you're code running in WebSphere calls 'jmsfactory/activemq540connfactory', WebSphere does a call to activemq using this jndi name, i.e. XAConnectionFactory )

","25/Jan/11 15:29;gtully;@peter, thanks for closing the loop on this with the feeback.
So in 2.ii or 3.i - there is no possibility to specify an additional property for the jndi environment?
not good. 

So either we have a hardcoded xaconnection factory, Edan's fix, or the 'xa=true' jndi env property needs to be embedded in the 2.ii external provider url, like tcp://localhost:61616?jndi.xa=true","25/Jan/11 16:56;hindsbeans;In websphere there are options in 2.ii and 3.i to add what are called 'custom properties' but these do not get translated into jndi environment properties unfortulately.

In terms of which route to take I would say that the provider url should be left intact. To me it would be more intuitive if the name you supply to a jndi lookup call determines if an ActiveMQXAConnectionFactory or an ActiveMQConnectionFactory is returned as opposed to the provider url used to create the InitialContext. I guess setting it in the provider url abstracts it away from where it is relevant, which is in the jndi lookup call. As in all things though, this is just my opinion - and I'm more than wiling to be corrected!

Using the 'XAConnectionFactory' jndi name also has the additional benefit of leaving the well recognised url of 'tcp://localhost:61616' untouched as well as being tried and tested - thanks to Edan!!

","28/Jan/11 20:21;gtully;opening so we don't forget to add a hard coded xa factory name.","11/Jul/12 11:41;gtully;
URL: http://svn.apache.org/viewvc?rev=1360125&view=rev
Log:
https://issues.apache.org/jira/browse/AMQ-2656 - add wellknown xa factory name, XAConnectionFactory so that context.lookup(""XAConnectionFactory"") will work as expected out of the box",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscription re-activation failed when keepDurableSubsActive=true.,AMQ-2665,12483151,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,akos.baraz,akos.baraz,24/Mar/10 12:53,11/Jul/12 09:30,30/Jan/20 16:55,09/Jun/10 12:23,5.3.1,,,,,,,5.4.0,5.7.0,,,,,,0,"If the keepDurableSubsActive=true in the broker and there are pre-created topics (at startup) in the config xml, then every subscription re-activation increases the consumers list.
",,dejanb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jun/10 14:15;akos.baraz;DurableSubscriptionReactivationTest2.java;https://issues.apache.org/jira/secure/attachment/12461730/DurableSubscriptionReactivationTest2.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-06-09 12:23:46.92,,,false,,,,,,,,,,,,,,,,,74855,,,Wed Jul 11 09:30:07 UTC 2012,,,,,,,,"0|i0aki7:",59595,,,,,,,,,,,,,,,,,,,"24/Mar/10 12:54;akos.baraz;here is a junit testcase.","09/Jun/10 12:23;dejanb;Resolved with svn revision 952976","11/Jul/12 09:30;dejanb;There was regression with this issue as keepDurableSubsActive wasn't properly propagated to the durable sub. It's fixed now with 1360085. Also take a look at [AMQ-3921]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crashing and restarting the broker causes message redelivery even if the XA transaction was already prepared (but not commited),AMQ-2717,12483746,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rodos77,rodos77,29/Apr/10 17:28,01/Jun/12 11:13,30/Jan/20 16:55,01/Jun/12 11:12,5.3.1,,,,,,,5.6.0,5.x,,,,,,0,"The scenario is as follows:
\- message is delivered within an XA global transaction
\- the XA tx completes the prepare phase
\- the server crashes before the XA tx completes the commit
\- the server is restarted
\- (if the J2EE server supports XA recovery, it will recover the XA tx and complete the commit (tested and confirmed with Websphere))
\- ActiveMQ redelivers the message

The redelivery should not happen.  Unless, following recovery, the TransactionManager decides to rollback the tx, the tx will be committed.  If it is committed, the message would have been processed already.  Redelivering it causes the message to be processed again and breaks JMS' deliver-once-and-only-once guarantee.

If the tx has been prepared, AMQ should not redeliver the message following a crash recovery,  If the tx is ultimately rolled back and the message is put back on the queue, it can redeliver it, otherwise, it should not.

This is very difficult to write a Junit test for but I will try to come up with something...",,gtully,rodos77,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/May/10 16:19;rodos77;XATransactionRecoveryTest.java;https://issues.apache.org/jira/secure/attachment/12461704/XATransactionRecoveryTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-04-29 18:04:44.487,,,false,,,,,,,,,,,,,,,,,44145,,,Fri Jun 01 11:13:15 UTC 2012,,,,,,,,"0|i0akg7:",59586,,,,,,,,,,,,,,,,,,,"29/Apr/10 18:04;gtully;For a test case, you may find something useful in org.apache.activemq.transport.failover.FailoverTransactionTest - a variant of a broker plugin used can kill off the broker before/after a prepare","21/May/10 16:19;rodos77;Attaching junit test that illustrates the problem.

Note that if you uncomment xaRes.commit(), the message will not be redelivered and the test will succeed as expected.  However, if the xaRes is only prepared but not committed, the message is redelivered.","01/Jun/12 11:12;gtully;fixed via https://issues.apache.org/jira/browse/AMQ-3305","01/Jun/12 11:13;gtully;link to issue that fixes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build-up of unwanted messages,AMQ-3004,12483852,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rnaude,rnaude,27/Oct/10 13:00,15/Apr/12 10:38,30/Jan/20 16:55,15/Apr/12 10:38,5.4.1,,,,,,,5.6.0,,,Broker,,,,1,"One of our installations have several consumers. These consumers subscribe for messages from a queue linked to a virtual topic. All consumers supply a selector. Some consumers connect, process any persisted messages, then disconnect. These connect/disconnect cycles are repeated a few times a day.

What we've seen is that messages build-up for consumers. These messages does not match the supplied selector. The side effect of this was that we ran into a situation whereby message ""got stuck"". Increasing the _maxPageSize_ property helped. This is unfortunately a short term solution.

A simple test was constructed whereby *selectorAware* was set to *true*:
{code:xml}
<virtualDestinations>
  <virtualTopic name=""VirtualTopic.>"" prefix=""Consumer.*."" selectorAware=""true""/>
</virtualDestinations>
{code}

What we noticed is that:
# Messages are correctly received by a connected consumer
# A consumer that connects, disconnects and re-connects later will loose any messages that were send in the time period it was disconnected.

This behaviour was unexpected. From the AMQ documention (http://activemq.apache.org/virtual-destinations.html):
{quote}
From version 5.4, dispatch from virtual topics to subscription queues can be selectorAware such that only messages that match one of the existing subscribers are actually dispatched. Using this option prevents the build up of unmatched messages when selectors are used by exclusive consumers
{quote}

Note: it does not state that the consumer needs to be connected for this feature to work.

Given the test it looks like subscriptions itself are not persisted, thus the AMQ broker has no idea that it should enqueue a message for a particular subscription queue.

Would it be possible to add either of:
# Persist subscription detail, specifically for the case where the subscription's selector should be applied to the subscription queue
# Propagate selectors and the attached  subscription queue to the top-level virtual topic so that only interested messages can be delivered to the intended recipient?

Anything else we can try, supply or help with?",,rnaude,tkarakai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Nov/10 11:58;rnaude;AMQ-3004.patch;https://issues.apache.org/jira/secure/attachment/12461816/AMQ-3004.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-09-16 23:52:14.632,,,false,,,,,,,,,,,,,,,,,59926,,,Sun Apr 15 10:38:09 UTC 2012,,,,,,,,"0|i0akb3:",59563,,,,,,,,,,,,,,,,,,,"04/Nov/10 11:58;rnaude;The attached patch solves the issue for the most part. Consumers need to connect at least once for the selector to be cached. The cached selector will be persisted to the configured file every 10min. It is re-loaded during startup.

{code:xml}
<broker>
.
.
.
   <plugins>
      <spring:ref local=""subQueueSelectorCacheBroker""/>
    </plugins>
.
.
.
</broker>

<spring:bean id=""subQueueSelectorCacheBroker"" class=""org.apache.activemq.plugin.SubQueueSelectorCacheBrokerPlugin"">
    <spring:property name=""persistFile"" value=""file:${jboss.server.data.dir}/activemq/selectorCache.dat""/>
 </spring:bean>
{code}
","16/Sep/11 23:52;tkarakai;We would very much like to get this patch into the trunk!

Virtual Topics are a perfect match for our use case, we have a single selector per queue (multiple consumers but each using the same selector on a given queue), and need to guarantee that the (filtered) messages are delivered to each queue even when all the consumers disconnect (in our case not intentionally, just dues to some failure or networking issue) and it's not acceptable to miss messages that were published during a disconnect.

Any chance that this solution or a comparable one will make it to an an official release?
","20/Sep/11 10:23;gtully;lets try and get to this for 5.6","21/Sep/11 14:24;gtully;@Takar
Roelof's patch looks very good and is mostly unobtrusive. 
For your use case though I think it only kicks in if all subscriptions are disconnected, which may not be what you want.

It also needs a junit test case to validate and protect it.
Maybe you can provide the required test case and some update that will make it work for you?","27/Oct/11 16:32;tabish;Would be great if we could get a JUnit test case for this to help determine what the best fix is.","15/Apr/12 10:38;rajdavies;Submitted patch - and other bits a pieces -
Can use the persistent cache as a broker plugin - 
e.g.

<plugins>
 <virtualSelectorCacheBrokerPlugin persistFile =""selectorcache.data""/>
</plugins>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Restart of network connector in ""network-of-brokers"" configuration does not reestablish connection",AMQ-2722,12483750,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,garnold,garnold,05/May/10 16:39,17/Feb/12 21:10,30/Jan/20 16:55,17/Feb/12 21:10,5.3.1,,,,,,,5.x,,,Broker,Connector,JMX,,0,"After stopping and restarting the network connector between 2 brokers in a ""network-of-brokers"" configuration (via either JMX or direct API access), messages are no longer pushed to the receiving broker.  Test case attached.",Mac OS X 10.6.3 (java -version: build 1.6.0_17-b04-248-10M3025),garnold,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/10 16:41;garnold;NetworkOfBrokersTest.java;https://issues.apache.org/jira/secure/attachment/12461689/NetworkOfBrokersTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-02-17 21:10:22.572,,,false,,,,,,,,,,,,,,,,,44144,,,Fri Feb 17 21:10:22 UTC 2012,,,,,,,,"0|i0ale7:",59739,,,,,,,,,,,,,,,,,,,"05/May/10 16:41;garnold;Failing JUnit test, depends on ActiveMQ and Spring libraries.","17/Feb/12 21:10;tabish;The provided unit tests work fine with the latest trunk code. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jdbcPersistenceAdapter adapterClass attribute does not exist,AMQ-2649,12483582,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,aheinz,aheinz,12/Mar/10 19:28,13/Feb/12 13:01,30/Jan/20 16:55,13/Feb/12 13:01,5.3.0,,,,,,,5.6.0,5.x,,Broker,,,,0,"http://activemq.apache.org/jdbc-support.html

This documentation states that:

You can explicitly specify the JDBC adaptor class inside the activemq.xml...
<jdbcPersistenceAdapter  adapterClass=""org.apache.activemq.store.jdbc.adapter.ImageBasedJDBCAdaptor""/>

But I get an error when I use the following configuration:

<persistenceAdapter>
  <jdbcPersistenceAdapter adapterClass=""org.apache.activemq.store.jdbc.PostgresqlJDBCAdapter"" dataSource=""#postgres-ds""/>
</persistenceAdapter>

jvm 1    | Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'adapterClass' of bean class [org.apache.activemq.store.jdbc.JDBCPersistenceAdapter]: Bean property 'adapterClass' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
jvm 1    |      at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)
jvm 1    |      at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)
jvm 1    |      at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)
jvm 1    |      at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)
jvm 1    |      at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
jvm 1    |      ... 45 more



Something similar was fixed a few years ago:
https://issues.apache.org/activemq/browse/AMQ-237
",RHEL4/5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-02-13 09:58:05.3,,,false,,,,,,,,,,,,,,,,,44153,,,Mon Feb 13 13:01:35 UTC 2012,,,,,,,,"0|i0akjb:",59600,,,,,,,,,,,,,,,,,,,"13/Feb/12 09:58;kimmking;just delete ""adapterClass=""org.apache.activemq.store.jdbc.PostgresqlJDBCAdapter"""".","13/Feb/12 13:01;gtully;Updated the doc, the adapterClass is replaced with adapter attribute, where the xbean identifier is used.
https://cwiki.apache.org/confluence/display/ACTIVEMQ/JDBC+Support",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC datastore locking does not work when using MYSQL cluster,AMQ-2414,12483691,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,alexjfisher,alexjfisher,25/Sep/09 13:48,10/Feb/12 11:47,30/Jan/20 16:55,27/Oct/11 16:10,5.3.0,,,,,,,5.6.0,,,Message Store,,,,0,"JDBC Master/Slave doesn't work properly for mysql cluster when the master and slave brokers are using different MYSQL frontends as would be required in a HA setup.  The code currently locks the database using a TABLE lock which are not cluster wide in mysql.
http://dev.mysql.com/doc/refman/5.1/en/mysql-cluster-limitations-multiple-nodes.html

The default code path uses a SELECT FOR UPDATE to get a lock.  This is supported in mysql cluster.
The attached patch works for me.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/09 13:51;alexjfisher;mysql-cluster-locking-r818849.patch;https://issues.apache.org/jira/secure/attachment/12461446/mysql-cluster-locking-r818849.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-09-25 13:57:35.245,,,false,,,,,,,,,,,,,,,,,60075,,,Fri Feb 10 11:47:09 UTC 2012,,,,Patch Available,,,,"0|i0akon:",59624,,,,,,,,,,,,,,,,,,,"25/Sep/09 13:57;chirino;Does SELECT for UPDATE work on all the MySQL back end types, and previous MySQL versions?","25/Sep/09 14:03;chirino;Perhaps the best strategy may be to property to the adapter like:

String mysqlEngine=""INODB"";

And then the setStatements() method can change it's behavior based on the setting of mysqlEngine.
","25/Sep/09 16:14;chirino;Applied a version of the patch /w the configurable property I discussed earlier in rev 818905.","25/Sep/09 18:06;alexjfisher;Two problems when testing with ndbcluser (mysql cluster).

1) Only the first table is created.  The other CREATE TABLES fail mysteriously with Table 'ACTIVEMQ_ACKS' already exists SQLState: 42S01 Vendor code: 1050.

2) Assuming manually created tables, console output on slave is filled with SQL exceptions and stacktraces due to 'lock timeout exceeded' exceptions.  These are quite normal and should be handled quietly.","27/Oct/11 16:10;gtully;please reopen again if there are problems and add as much information as possible There have been multiple updates since the patch was applied.","30/Dec/11 01:36;wangyin;Other tow problems when testing with ndbcluster.
1)No distributed table locks support yet, so it's impossible to set up a master/slave broker for HA with ndbcluster.
2)Low performance and from time to time producer is suspended and resumes to send messages after several minutes.","10/Feb/12 11:47;kimmking;it is a good way to use zookeeper for independent distributed locks;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue destination bridge does not stay up,AMQ-3008,12483826,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,treyhyde,treyhyde,29/Oct/10 20:49,04/Feb/12 22:12,30/Jan/20 16:55,04/Feb/12 22:12,5.3.2,5.4.1,,,,,,5.6.0,,,,,,,0,"I'm not sure of cause of any of these exceptions.  The IllegalStateException seems be be due to the direct interaction between the OpenMQ and ActiveMQ jms code.   I haven't the faintest why the reconnect code can't connect again in the normal circumstance.  The agents that talk directly to OpenMQ do no have issues during these times and nothing is logged in the OpenMQ log.


2010-10-29 10:54:44,170 | ERROR | failed to forward message on attempt: 1 reason: javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed. message: ActiveMQMapMessage {commandId = 3, responseRequired = false, messageId = ID:mq1.cdlocal-27338-12
88370972745-6:24434:-1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:mq1.cdlocal-27338-1288370972745-6:24434:-1:1, destination = queue://CD.live.search.needsretrieve, transactionId = null, expiration = 0, timestamp = 1288374884167, arrival = 
0, brokerInTime = 1288374884167, brokerOutTime = 1288374884167, correlationId = null, replyTo = null, persistent = true, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.ut
il.ByteSequence@224f68dc, marshalledProperties = org.apache.activemq.util.ByteSequence@b6d551d, dataStructure = null, redeliveryCounter = 0, size = 1797, properties = {transformation=jms-map-json}, readOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQMa
pMessage{ theTable = {} } | org.apache.activemq.network.jms.DestinationBridge | ActiveMQ Session: ID:mq1.cdlocal-27338-1288370972745-4:0:2
javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed.
        at com.sun.messaging.jmq.jmsclient.MessageProducerImpl.checkState(MessageProducerImpl.java:175)
        at com.sun.messaging.jmq.jmsclient.MessageProducerImpl.send(MessageProducerImpl.java:719)
        at com.sun.messaging.jmq.jmsclient.QueueSenderImpl.send(QueueSenderImpl.java:145)
        at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:80)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:129)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1229)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
2010-10-29 10:54:45,179 | ERROR | failed to forward message on attempt: 2 reason: com.sun.messaging.jms.JMSException: [C4003]: Error occurred on connection creation [search2.cdlocal:6076]. - cause: java.net.ConnectException: Connection refused message: ActiveMQMapMessage {co
mmandId = 3, responseRequired = false, messageId = ID:mq1.cdlocal-27338-1288370972745-6:24434:-1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:mq1.cdlocal-27338-1288370972745-6:24434:-1:1, destination = queue://CD.live.search.needsretrieve, t
ransactionId = null, expiration = 0, timestamp = 1288374884167, arrival = 0, brokerInTime = 1288374884167, brokerOutTime = 1288374884167, correlationId = null, replyTo = null, persistent = true, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId =
 null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@224f68dc, marshalledProperties = org.apache.activemq.util.ByteSequence@b6d551d, dataStructure = null, redeliveryCounter = 0, size = 1797, properties = {transformation=jms-map-json}, rea
dOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQMapMessage{ theTable = {} } | org.apache.activemq.network.jms.DestinationBridge | ActiveMQ Session: ID:mq1.cdlocal-27338-1288370972745-4:0:2
com.sun.messaging.jms.JMSException: [C4003]: Error occurred on connection creation [search2.cdlocal:6076]. - cause: java.net.ConnectException: Connection refused
        at com.sun.messaging.jmq.jmsclient.ExceptionHandler.throwConnectionException(ExceptionHandler.java:274)
        at com.sun.messaging.jmq.jmsclient.ExceptionHandler.handleConnectException(ExceptionHandler.java:220)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.readBrokerPorts(PortMapperClient.java:241)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.init(PortMapperClient.java:150)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.<init>(PortMapperClient.java:92)
        at com.sun.messaging.jmq.jmsclient.protocol.tcp.TCPConnectionHandler.<init>(TCPConnectionHandler.java:164)
        at com.sun.messaging.jmq.jmsclient.protocol.tcp.TCPStreamHandler.openConnection(TCPStreamHandler.java:135)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnection(ConnectionInitiator.java:778)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnectionNew(ConnectionInitiator.java:254)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnection(ConnectionInitiator.java:208)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnection(ConnectionInitiator.java:158)
        at com.sun.messaging.jmq.jmsclient.ProtocolHandler.init(ProtocolHandler.java:816)
        at com.sun.messaging.jmq.jmsclient.ProtocolHandler.<init>(ProtocolHandler.java:1529)
        at com.sun.messaging.jmq.jmsclient.ConnectionImpl.openConnection(ConnectionImpl.java:2327)
        at com.sun.messaging.jmq.jmsclient.ConnectionImpl.init(ConnectionImpl.java:1024)
        at com.sun.messaging.jmq.jmsclient.ConnectionImpl.<init>(ConnectionImpl.java:418)
        at com.sun.messaging.jmq.jmsclient.UnifiedConnectionImpl.<init>(UnifiedConnectionImpl.java:60)
        at com.sun.messaging.jmq.jmsclient.QueueConnectionImpl.<init>(QueueConnectionImpl.java:59)
        at com.sun.messaging.ConnectionFactory.createQueueConnection(ConnectionFactory.java:98)
        at com.sun.messaging.ConnectionFactory.createQueueConnection(ConnectionFactory.java:83)
        at com.centraldesktop.mq.openmq.QueueConnectionFactory.createQueueConnection(QueueConnectionFactory.java:33)
        at org.apache.activemq.network.jms.JmsQueueConnector.initializeForeignQueueConnection(JmsQueueConnector.java:223)
        at org.apache.activemq.network.jms.JmsQueueConnector.restartProducerConnection(JmsQueueConnector.java:184)
        at org.apache.activemq.network.jms.DestinationBridge.restartProducer(DestinationBridge.java:177)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:115)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1229)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:310)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:176)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:163)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:381)
        at java.net.Socket.connect(Socket.java:537)
        at java.net.Socket.connect(Socket.java:487)
        at java.net.Socket.<init>(Socket.java:384)
        at java.net.Socket.<init>(Socket.java:198)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.makeSocketWithTimeout(PortMapperClient.java:268)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.readBrokerPorts(PortMapperClient.java:220)
        ... 27 more


this exception repeats 10 times IMMEDIATELY and no further attempts are made at reconnecting.   A restart of ActiveMQ reestablishes the bridge.

Code and configuration for the AMQ->IMQ bridge is available here: http://github.com/centraldesktop/openmq-spring-bean

This has to be somewhat related to AMQ-2455 which I was told may resolve this issue (it didn't).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-02-04 22:12:27.866,,,false,,,,,,,,,,,,,,,,,43768,,,Sat Feb 04 22:12:27 UTC 2012,,,,,,,,"0|i0akan:",59561,,,,,,,,,,,,,,,,,,,"04/Feb/12 22:12;tabish;Fixed by latest changes made for AMQ-2455",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
whoami not in PATH on Solaris,AMQ-2899,12483494,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,joeseeder,joeseeder,06/Sep/10 16:01,26/Jan/12 11:30,30/Jan/20 16:55,07/Sep/10 11:32,5.4.0,,,,,,,5.4.1,,,,,,,0,"bin/activemq script has reference to missing command

Standard PATH for Solaris is /bin:/usr/bin and these folders do not contain 'whoami' this is located in /usr/ucb/bin which is rarely set in PATH 

I recommend use of $LOGNAME instead or detection of whoami location

","SunOS wsfmaz03 5.10 Generic_142901-06 i86pc i386 i86pc
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-07 11:32:50.272,,,false,,,,,,,,,,,,,,,,,14804,,,Thu Jan 26 11:30:32 UTC 2012,,,,,,,,"0|i0ba7z:",63768,,,,,,,,,,,,,,,,,,,"07/Sep/10 11:32;dejanb;Fixed with svn revision 993322.

It'd be great if you could test this new script in your environment","26/Jan/12 11:30;christianh;The fix applied does not work on all Solaris installations as /ucr/ucb is not part of the minimal installation bundle.

My suggestion to replace the who am I or whoami is:

`who am i | cut -d "" "" -f 1`
From my tests this is platform independend, and for Solaris you can set the application user easy by setting it in activemq.xml from AMQ-2907 Solaris 10 SMF manifest
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
misplaced semicolon in bin/activemq l,AMQ-3053,12483955,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bimargulies@gmail.com,bimargulies@gmail.com,25/Nov/10 00:21,25/Jan/12 00:42,30/Jan/20 16:55,25/Jan/12 00:42,5.4.1,,,,,,,,,,,,,,0,"{noformat}

ACTIVEMQ_CLASSPATH=""${ACTIVEMQ_CONFIG_DIR};${ACTIVEMQ_CLASSPATH}""
if [ ""${ACTIVEMQ_BASE}"" != ""${ACTIVEMQ_HOME}"" ]; then
    ACTIVEMQ_CLASSPATH=""${ACTIVEMQ_BASE}/conf;${ACTIVEMQ_CLASSPATH}""
fi

{noformat}

Note the use of the _only valid on Windows_ semicolon in appending to the classpath. It needs to be a colon on Linux.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-25 00:42:56.758,,,false,,,,,,,,,,,,,,,,,74740,,,Wed Jan 25 00:42:56 UTC 2012,,,,,,,,"0|i0tsxz:",171998,,,,,,,,,,,,,,,,,,,"25/Jan/12 00:42;tabish;The revamped scripts should have resolved this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to reset batching ... java.lang.IllegalStateException: PageFile is not loaded,AMQ-3131,12495322,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,ives.stoddard,ives.stoddard,12/Jan/11 00:24,18/Jan/12 16:50,30/Jan/20 16:55,22/Nov/11 23:08,5.4.2,,,,,,,5.6.0,,,Message Store,,,,11,"
The following error just started showing up in our ActiveMQ log file for unknown reasons (repeated 11 times, all within a second):

{noformat}

2011-01-11 03:42:00,997 | ERROR | Failed to reset batching | org.apache.activemq.store.kahadb.KahaDBStore | Thread-2002
java.lang.IllegalStateException: PageFile is not loaded
        at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
        at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:512)
        at org.apache.activemq.store.ProxyMessageStore.resetBatching(ProxyMessageStore.java:93)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.resetBatch(QueueStorePrefetch.java:85)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.stop(AbstractStoreCursor.java:69)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:84)
        at org.apache.activemq.broker.region.Queue.stop(Queue.java:853)
        at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:110)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:713)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:113)
        at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:213)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.scheduler.SchedulerBroker.stop(SchedulerBroker.java:104)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:114)
        at org.apache.activemq.broker.BrokerService$3.stop(BrokerService.java:1773)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:575)
        at org.apache.activemq.console.command.StartCommand$1.run(StartCommand.java:135)
{noformat}

Similarly we now have an issue on shutdown, with the following error (also repeating 11 times):

{noformat}
2011-01-11 10:34:39,652 | ERROR | Failed to reset batching | org.apache.activemq.store.kahadb.KahaDBStore | ActiveMQ ShutdownHook
java.lang.IllegalStateException: PageFile is not loaded
        at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
        at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:512)
        at org.apache.activemq.store.ProxyMessageStore.resetBatching(ProxyMessageStore.java:93)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.resetBatch(QueueStorePrefetch.java:85)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.stop(AbstractStoreCursor.java:69)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:84)
        at org.apache.activemq.broker.region.Queue.stop(Queue.java:853)
        at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:110)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:713)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:113)
        at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:213)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.scheduler.SchedulerBroker.stop(SchedulerBroker.java:104)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
        at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:114)
        at org.apache.activemq.broker.BrokerService$3.stop(BrokerService.java:1773)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:575)
        at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:1971)
        at org.apache.activemq.broker.BrokerService$4.run(BrokerService.java:1938)
{noformat}

Subsequent start / stops result in the same shutdown errors above.

Is there a workaround for this besides deleting the datastore DB files?


","- Sun Solaris 5.10
- Master / Slave with shared storage",artnaseef,cwikman,dwallace@udel.edu,fgynnild,iocanel,ives.stoddard,jplmelanson,lexsoto,luggage,matt_good@yahoo.com,moczarski,sbucci,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-14 10:03:00.402,,,false,,,,,,,,,,,,,,,,,74728,,,Wed Jan 18 16:50:40 UTC 2012,,,,,,,,"0|i0agxb:",59015,,,,,,,,,,,,,,,,,,,"14/Jan/11 10:03;gtully;please attach the full log of the broker if this occurs again. the additional context may help diagnose.","03/Feb/11 13:37;fgynnild;I ran into the same issue today, but I got if after changing some parameters in the activemq.xml file and then did a restart of AMQ.","03/Feb/11 15:14;ives.stoddard;@Frank: couple questions...

1) do you recall what the changes were to activemq.xml?
2) are you using the scheduler functionality?
3) are you using anything other than the default prefectch or batching settings?

Thanks.","25/Feb/11 11:46;iocanel;I am having similar issues. In my case they are clearly related to the scheduler.


javax.jms.JMSException: PageFile is not loaded
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
        at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1833)
        at org.apache.activemq.ActiveMQConnection$2$1.run(ActiveMQConnection.java:1754)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.IllegalStateException: PageFile is not loaded
        at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
        at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
        at org.apache.activemq.broker.scheduler.JobSchedulerImpl.schedule(JobSchedulerImpl.java:110)
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:185)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:227)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:462)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:677)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:129)
        at org.apache.activemq.transport.nio.NIOTransport.access$000(NIOTransport.java:44)
        at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:68)
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
        ... 3 more
","02/Mar/11 10:40;sbucci;I have the same problem after an activemq.xml change.
Environment : 
 - Windows xp/2008 r2
 - I'm using scheduler

{code:java}
2011-02-10 05:00:46,992 | ERROR | Failed to reset batching | org.apache.activemq.store.kahadb.KahaDBStore | ActiveMQ ShutdownHook
java.lang.IllegalStateException: PageFile is not loaded
	at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
	at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:512)
	at org.apache.activemq.store.ProxyMessageStore.resetBatching(ProxyMessageStore.java:93)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.resetBatch(QueueStorePrefetch.java:85)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.stop(AbstractStoreCursor.java:69)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:84)
	at org.apache.activemq.broker.region.Queue.stop(Queue.java:853)
	at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:110)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:713)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:113)
	at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:213)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
	at org.apache.activemq.broker.scheduler.SchedulerBroker.stop(SchedulerBroker.java:104)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)
	at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:114)
	at org.apache.activemq.broker.BrokerService$3.stop(BrokerService.java:1773)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:575)
	at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:1971)
	at org.apache.activemq.broker.BrokerService$4.run(BrokerService.java:1938)
{code}","08/Apr/11 22:18;matt_good@yahoo.com;I have the same problem.  In my case, I deleted several queues from admin console.  These queues were used for testing scheduled messages.  When I stopped ActiveMQ, I got 5 of these errors.  When I restarted it 5 of the queues I deleted reappeared.  Coincidence or part of the problem - I can't say.","18/Nov/11 19:08;jplmelanson;Similar stack trace here:
{code}
Caused by: java.lang.IllegalStateException: PageFile is not loaded 
  at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721) 
  at org.apache.kahadb.page.PageFile.tx(PageFile.java:239) 
  at org.apache.activemq.broker.scheduler.JobSchedulerImpl.schedule(JobSchedulerImpl.java:110) 
  at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:185) 
  at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129) 
  at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
{code} 

I haven't reproduced it yet, but I opened up the trunk code and seems like {{JobSchedulerImpl.schedule()}} methods are using the {{tx()}} method, which in turn asserts that the {{PageFile}} is loaded, which doesn't seems to be the case. 

I don't know the code at all, but I wonder if the job scheduler should check if the page file is loaded first, load it if needed and process with the transaction? What do you think?","22/Nov/11 23:02;gtully;For the shutdown case, there is a fix on trunk, the org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:512) checks if the page file has been unloaded as it will be due to being shutdown before the destinations.
http://svn.apache.org/viewvc?rev=1170201&view=rev","22/Nov/11 23:08;gtully;The schedular store is not started when it is created so the use before initialisation error should not occur on trunk. Reopen if this is reproducible with trunk of 5.6 ","13/Jan/12 18:22;artnaseef;Hey Gary, we need to back-port a patch as we are not comfortable to run the 5.6-SNAPSHOT to fix this problem and the 5.5.1 version is still problematic.

After back-porting all of the changes to the Scheduler code, this still happens.

Do you have any idea where else I should look?  I've been going through all of the Jira entries resolved in 5.6 and not finding any promising leads.
","17/Jan/12 19:51;artnaseef;SCRATCH THAT.

I had build problems that prevented the updates from taking effect.  Using the latest version of the scheduler sources resolves the problem for us.","17/Jan/12 20:10;gtully;Glad you got sorted :-)
On Jan 17, 2012 7:51 p.m., ""Arthur Naseef (Commented) (JIRA)"" <

","18/Jan/12 08:38;ishitori;Arthur, right now I experience the same error. Moreover, I can see a lot of .log files in KahaDb. I believe that they are not got cleaned up because of this exception.

I also don't want to move to 5.6.0 and I would love to have this fix in 5.5.1 version. Can you commit your changes into 5.5.1 version so the latest snapshot of 5.5.1 would have your changes?","18/Jan/12 15:21;devantor;I don't know the steps to reproduce this one. But this bug affect also expired messages. org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:772)

Failed to reset batching
java.lang.IllegalStateException: PageFile is not loaded
at org.apache.kahadb.page.PageFile.assertLoaded(PageFile.java:721)
at org.apache.kahadb.page.PageFile.tx(PageFile.java:239)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.resetBatching(KahaDBStore.java:469)
at org.apache.activemq.store.ProxyMessageStore.resetBatching(ProxyMessageStore.java:93)
at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.resetBatch(QueueStorePrefetch.java:85)
at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:256)
at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1009)
at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:772)
at org.apache.activemq.broker.region.Queue.access$100(Queue.java:83)
at org.apache.activemq.broker.region.Queue$2.run(Queue.java:123)
at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
at java.util.TimerThread.mainLoop(Timer.java:512)
at java.util.TimerThread.run(Timer.java:462)","18/Jan/12 15:34;gtully;@devantor: for the periodic expiry case, that can be disabled via policy entry, expireMessagesPeriod=0
Expiry will still occur on send/dispatch, the only problem will be when there are no consumers, there will be no check for expiry, so expired messages can build up till dispatch is attempted again. ","18/Jan/12 16:50;artnaseef;Sergei - my issue was with the scheduler for which the fixes are in 5.5.1, I believe.  If your having trouble due to the scheduler, the latest head version of the sources for the following directory fixed my problem:

activemq-core/src/main/java/org/apache/activemq/broker/scheduler

Note that we still see ""failed to reset batching"" errors with this update when shutting down the brokers if there are messages still pending delivery in the scheduler, but that's not a problem for us.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages are lost and no exception raised when queue is deleted and created by another process.,AMQ-2524,12483555,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,uvapalmer,uvapalmer,07/Dec/09 20:45,01/Dec/11 11:55,30/Jan/20 16:55,28/Jun/11 18:22,5.3.0,,,,,,,5.6.0,,,,,,,0,"To reproduce the bug I used ConsumerTool.java and ProducerTool.java found in the activemq distribution examples, transactions and durable queues:

Start ConsumerTool.java
Start producer 1 (Instance of ProducerTool.java)
Producer 1 sends first message
Consumer receives first message
Pause Producer 1 (I used a breakpoint)
Delete Queue
Start producer 2
Make sure at least 1 message is created by producer 2 (10 messages total)
Let Producer 1 continue (9 more messages produced)

Expected result: 20 messages consumed by the consumer
Actual Result: 11 messages consumed by the consumer.  The second through tenth messages from Producer 1 are lost and no exception is thrown.","Windows Server 2003, Windows XP, ActiveMQ standalone installed as a windows service via the Java Service Wrapper",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Dec/09 15:30;uvapalmer;ConsumerTool.java;https://issues.apache.org/jira/secure/attachment/12461573/ConsumerTool.java","08/Dec/09 15:30;uvapalmer;ProducerTool.java;https://issues.apache.org/jira/secure/attachment/12461574/ProducerTool.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-11-30 14:24:41.354,,,false,,,,,,,,,,,,,,,,,14593,,,Thu Dec 01 11:55:59 UTC 2011,,,,,,,,"0|i0aklr:",59611,,,,,,,,,,,,,,,,,,,"08/Dec/09 15:30;uvapalmer;Producer and consumer I used.  Requires no command line arguments.  I specified all constants needed.","30/Nov/10 14:24;team.fiveoh;Same issue exists in 5.4.1. We are silently loosing messages if a queue is deleted via the console and the application continues to run. This behavior is not exactly ideal and I'm surprised this issue has been open for a year.

The send method should throw an exception.","28/Jun/11 18:22;tabish;fixed in trunk","01/Dec/11 11:55;gtully;same problem but slightly different fix. the fixes are combined in: http://svn.apache.org/viewvc?rev=1209046&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deleting a Queue from the console results in lost messages,AMQ-3092,12493445,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,16/Dec/10 17:06,01/Dec/11 11:55,30/Jan/20 16:55,16/Dec/10 17:09,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"After the queue is deleted using JMX, producer messages are lost with even with no execption thrown.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2524,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14769,,,Thu Dec 16 17:09:50 UTC 2010,,,,,,,,"0|i0ak5r:",59539,,,,,,,,,,,,,,,,,,,"16/Dec/10 17:09;dejanb;Fixed with svn revision 1050059",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker XSD: boolean attributes should permit value injection via Srping's PropertyPlaceholderConfigurer,AMQ-3168,12497106,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,joeniski,joeniski,28/Jan/11 22:18,14/Nov/11 10:58,30/Jan/20 16:55,14/Nov/11 10:58,5.4.2,,,,,,,5.6.0,,,Broker,,,,0,"i'm working on upgrading from AMQ 5.3.0 to 5.4.2. i'd like to keep schema validation enabled, so i'm carefully re-ordering the elements in activemq.xml.
Our configuration uses PropertyPlaceholderConfigurer to insert values into activemq.xml. One of our configured values is of XSD type ""boolean"":

        <managementContext>
            <managementContext createConnector=""${enableJmx}"" connectorPort=""${jmxConnectorPort}""/>
        </managementContext>

 i'm seeing this error in the console when i run ""activemq/bin/activemq-admin start"":

ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 128 in XML document from class path resource [activemq.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '${enableJmx}' is not a valid value for 'boolean'.

Other replacement tokens that precede this in the file don't produce errors, but they're for string or numeric values, not booleans. Issue AMQ-2939 mentions accomodating numeric vbalues in the broker.xsd. It would be very useful to accomodate boolean values as well, for both configurability and backward compatibility with existing configurations.

","Linux (tested), probably all",joeniski,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-11-14 10:58:54.85,,,false,,,,,,,,,,,,,,,,,74721,,,Mon Nov 14 10:58:54 UTC 2011,,,,,,,,"0|i0ajx3:",59500,,,,,,,,,,,,,,,,,,,"14/Nov/11 10:58;dejanb;BooleanEditor is now used for createConnector property, which will enable it to be substituted even when schema validation is used. For older versions, you can explicitly turn off schema validation by using config ""xbean:activemq.xml?validate=false""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pure master/slave configuration will not failover to slave when master fails ,AMQ-2743,12483744,12482973,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bsnyder,bsnyder,20/May/10 04:46,28/Oct/11 08:04,30/Jan/20 16:55,28/Oct/11 08:04,5.3.1,,,,,,,5.6.0,,,,,,,0,"When using a pure/master slave configuration in ActiveMQ 5.3.1 and the master is killed, the failover to the slave never takes place. 

Below is a description of the topology being used: 

* The producer sends messages to brokerA 
* BrokerA has a uni-directional network connection using the failover transport to brokerB-master and brokerB-slave 
* BrokerB-master and brokerB-slave each have a uni-directional network connection using failover to brokerA 
* The consumer uses a failover connection to brokerB-master and brokerB-slave 

Below are the steps to reproduce the problem: 
# In terminal one, start up brokerA 
# In terminal two, start up brokerB-master 
# In terminal three, start up brokerB-slave 
# In terminal four, start up the consumer that connects to brokerB-master and brokerB-slave  
# In terminal five, startup the producer that connects to brokerA to send messages 
# In terminal two, kill brokerB-master 
# Notice that the producer will continue sending messages until producer flow control kicks in and blocks the send operation, but brokerB-slave never takes over 

I copied the same exact configuration files over to instances of ActiveMQ 5.3.0 and it works without a problem. There must be something in ActiveMQ 5.3.1 that is causing this issue. ",,kevan,scotte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/May/10 04:47;bsnyder;activemq-brokerA.xml;https://issues.apache.org/jira/secure/attachment/12461701/activemq-brokerA.xml","20/May/10 04:47;bsnyder;activemq-brokerB-master.xml;https://issues.apache.org/jira/secure/attachment/12461702/activemq-brokerB-master.xml","20/May/10 04:47;bsnyder;activemq-brokerB-slave.xml;https://issues.apache.org/jira/secure/attachment/12461703/activemq-brokerB-slave.xml",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2011-04-07 21:07:58.211,,,false,,,,,,,,,,,,,,,,,44142,,,Fri Oct 28 08:04:02 UTC 2011,,,,,,,,"0|i0agzz:",59027,,,,,,,,,,,,,,,,,,,"20/May/10 04:47;bsnyder;Attaching the three config files needed to reproduce the problem. ","07/Apr/11 21:07;scotte;We have seen this same thing. Everything was fine in 5.3.0, but unable to failover to slave in 5.4.2. This is a serious issue - we cannot rollback to 5.3.0 due to other bugs, fixed in later versions - and we can not deploy a fault-tolerant configuration on a newer version, because of this bug.","08/Apr/11 09:41;gtully;NetworkConnectors and the failover transport can work against each other as they both do retries to reconnect on failure.
When failover is used with a network connector, the failover transport needs to propagate a failure such that the network bridge can be recreated. To achieve this you need to provide maxReconnectAttempts=1. In this way, failover is used to choose the uri to connect to, but when it fails it lets the network connector know such that it can retry creating the bridge.

To determine if this is the problem, replace the use of network connector with failover (uri1, uri2) with two network connectors, one to uri1 and the other to uri2.","08/Apr/11 18:25;scotte;Interesting, and very useful information, thank you!","13/Apr/11 00:25;scotte;For what it's worth we carefully retested our failover scenarios after carefully checking configurations in 5.4.2 and can not reproduce the issue any longer. Our current configuration has two bridged AMQ networks. The configuration that seems to work for us is primary/backup with shared disk in each network. Our bridges use a static: connector with both uplink AMQ servers listed (note *not* failover: as that does not work properly). Since only the primary or the backup server is alive at any given time, this works. Our clients all use a failover: connector with ?updateURIsSupported=false to make sure they only talk to their proper network. We didn't do anything with maxReconnectAttempts...","28/Oct/11 08:04;gtully;The updates in AMQ-3542 identify the only supported use case where failover: and static: discovery work together.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to implement custom broker-to-broker authorization,AMQ-3154,12496618,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,artnaseef,artnaseef,24/Jan/11 23:41,26/Oct/11 22:42,30/Jan/20 16:55,26/Oct/11 22:42,5.4.2,,,,,,,5.6.0,,,Broker,,,,1,"Ran into the following issues preventing a custom Broker-To-Broker authentication implementation:

  - BrokerFilter's addBroker() can not be used to secure a connection:
      - for duplex connections, it is never called on the initial conneciton
      - even if addBroker() throws an exception, it does not deny access (it does not close the connection nor prevent other functioning)
      - addBroker() does not have direct access to the ConnectionContext, nor any other means for the BrokerFilter to access SSL certificates on the SSL transport

  - BrokerFilter's addConnection() can not be used to secure a connection:
       - there is no way to distinguish broker connections from clients

Other approaches were considered, but lead to dead-ends.

It seems the optimal solution would use the existing addBroker() method.

A patch will be provided that adds a new method specifically for securing Broker-To-Broker connections.",,asussman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/11 18:37;artnaseef;AMQ3154Test.java;https://issues.apache.org/jira/secure/attachment/12471302/AMQ3154Test.java","24/Jan/11 23:43;artnaseef;pre_add_broker.patch;https://issues.apache.org/jira/secure/attachment/12469217/pre_add_broker.patch","17/Feb/11 20:29;artnaseef;trunk2011-02-17_result.txt;https://issues.apache.org/jira/secure/attachment/12471324/trunk2011-02-17_result.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2011-02-16 19:11:16.158,,,false,,,,,,,,,,,,,,,,,74726,,,Wed Oct 26 22:42:20 UTC 2011,,,,Patch Available,,,,"0|i0agwn:",59012,,,,,,,,,,,,,,,,,,,"24/Jan/11 23:43;artnaseef;Patch which adds a ""preAddBroker()"" method to BrokerFilter which is designed specifically to secure broker-to-broker connections.

If an exception is thrown by the method, the TransportConnection shuts down.
","16/Feb/11 18:30;artnaseef;I'm looking for some quick feedback on the fit of this solution; we would like to make use of this update, but prefer to have reason to believe it is a good fit first.  If not, I will gladly implement an alternate approach.","16/Feb/11 19:11;gtully;I would like to see if addBroker could be used/called in a way that can make it work as an authentication point rather than using a new entry point. 
There were some changed to improve failure detection in http://svn.apache.org/viewvc?rev=1069339&view=rev that may be relevant.
If you could produce a junit test case that captures your usage scenario it would be a great help in validating an alternative approach to the current patch.","16/Feb/11 19:33;artnaseef;That would be a nicer solution; I'll take a look at the changes mentioned and work on a JUnit case.","17/Feb/11 01:02;artnaseef;Working on a JUnit, I'm finding it difficult to capture whether the broker connection was made or not.  Subclassing DiscoveryNetworkConnector seemed like a good idea, but even it doesn't appear to have a clear point in its lifecycle at which the success or failure of the connection can be determined.

Any tips would be appreciated.

While it would be possible to create a consumer and producer that use the two different brokers, I'd rather not add that complexity.

Note that I'm working purely with 5.4.2 at this point.","17/Feb/11 09:42;gtully;Go high level with your junit test, having more than one broker is not a problem. Maybe org.apache.activemq.security.JaasNetworkTest can provide some inspiration.

The BrokerInfo command is the only difference between a client and a broker connection.
To see if a broker connection is complete, org.apache.activemq.broker.region.RegionBroker#getPeerBrokerInfos can give you some high level view.
Not sure if this answers your questions but I hope it helps :-)","17/Feb/11 17:20;artnaseef;The JaasNetworkTest method should work - I'm just concerned about a short timeout leading to incorrect results.

Trying to clarify - some of this may be a rehash.

Perhaps this description of the problem will help:
   - Need connectors on a broker that can only be used by other, authenticated, brokers
   - Those connectors can not be used by regular clients - only authenticated peer brokers

So, the high level desired flow would be:
&nbsp;&nbsp;ON CONNECTION
&nbsp;&nbsp;&nbsp;&nbsp;IF client IS a broker
&nbsp;&nbsp;&nbsp;&nbsp;THEN
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DO check authentication
&nbsp;&nbsp;&nbsp;&nbsp;ELSE
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DO reject connection
&nbsp;&nbsp;&nbsp;&nbsp;END IF

Securing addConnection() sounds like a good approach, but rejecting a connection does not prevent the creation of network bridges in TransportConnection's processBrokerInfo().  On the other hand, testing shows that exceptions on addBroker() do not prevent the bridges and do not stop the peer from continuing to create a connection.  So, I believe both need to be done.

These obervations are based on the 5.4.2 code; I do see that addBroker()'s handling has changed on the trunk, so that's why it would be good to have a JUnit that can confirm the results of an exception on addBroker() are as-expected.

Checking getPeerBrokerInfos() is one place to check.  Another is to look for network bridges.  I'll try that approach.

Thanks!","17/Feb/11 18:37;artnaseef;JUnit test which shows the attempt to reject peer broker connections using a BrokerFilter which throws exceptions on addBroker().","17/Feb/11 20:29;artnaseef;Full output running against 5.5 trunk snapshot checked out today, 17 Feb 2011; rev: 1071750.

Something is notably different.  The test is getting 4 persistence adapters configured, according to the log output, and one is a KahaDB even though both brokers have been set to be non-persistent.","26/Oct/11 22:42;tabish;The test case passes when run against the current trunk code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Questionable processing of interruptions in TcpTransport::doStop,AMQ-2526,12483785,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ndolgov,ndolgov,09/Dec/09 02:37,25/Oct/11 21:22,30/Jan/20 16:55,25/Oct/11 21:22,5.2.0,5.3.0,,,,,,5.6.0,,,Transport,,,,0,"Imagine you are processing a few jobs by a thread pool. A timeout is set for the whole batch. A job should send a JMS message. If the timeout expires before all the jobs are completed the pool will interrupt still running jobs. 

Most of the time the interruption will be caught and processed deep inside of ActiveMQ TCP transport classes. While I'm not entirely convinced it's a good idea to shut down and reopen the connection to the ActiveMQ server if a client thread is merely interrupted what really seems ugly is:

15:12:53,745 ERROR [org.apache.activemq.transport.tcp.TcpTransport] Could not stop service: tcp:///x.x.x.x:61616. Reason: java.lang.InterruptedException
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1200)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:245)
	at org.apache.activemq.transport.tcp.TcpTransport.doStop(TcpTransport.java:482)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
	at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:499)
	at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:113)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
	at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:87)
	at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
	at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:201)
	at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:471)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1214)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1208)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1643)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:227)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)

and the reason for it is that the await call on the CountDownLatch in TcpTransport::doStop will throws an InterruptedException if the calling thread is already interrupted. No attempt is made (in both 5.2 or 5.3) to gracefully process InterruptedException, the exception itself is logged as ERROR with a rather menacing message and the log file gets full of meaningless stack traces although no real harm was done.

Calling latch.await(1,TimeUnit.SECONDS) in a try block seems like a no-brainer but there could be even smarted approaches to processing InterruptedExceptions differently than, say, IOEs and other genuine problems. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Dec/09 02:38;ndolgov;Test.java;https://issues.apache.org/jira/secure/attachment/12461337/Test.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-10-25 21:22:06.634,,,false,,,,,,,,,,,,,,,,,74907,,,Tue Oct 25 21:22:06 UTC 2011,,,,,,,,"0|i0ah0n:",59030,,,,,,,,,,,,,,,,,,,"25/Oct/11 21:22;tabish;Fix applied in trunk, handle the interrupted exception and reset the thread's interrupted state.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel ActiveMQComponent - Please add validation of unknown or invalid URI parameters,AMQ-2240,12483666,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,davsclaus,davsclaus,01/May/09 07:16,20/Oct/11 15:04,30/Jan/20 16:55,20/Oct/11 15:04,5.2.0,,,,,,,5.x,,,Broker,,,,0,"AMQ is used a lot with Camel and vice-versa. In AMQ there is a activemq-camel.jar for easy AMQ-Camel integration.

As Camel often uses URI for configuration we in Camel have validation for all parameters provided in the URI.
But this is lacked in the activemq-camel.jar so you can provide bogus or misspelled options and AMQ just keeps on running.
This is serious as it can be hard to overlook a tiny misspelled option and you think that it runs with this parameter, but it does not!

This seems to only apply for ""nested"" URI options, eg the options prefixed with
- jms
- broker


For instance using this factory method:
{code}
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent(String uri);
{code}

In the sample code below, for a unit test, where I have mistyped some URI options by inserting XXX or the likes:
{code}
        ActiveMQComponent activemq = activeMQComponent(""vm://localhost?broker.XXX=foo&broker.persistent=XXX&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=ABC&jms.maxXXXXReconnectAttempts=1&jms.timeout=3000"");
{code}

But AMQ 5.2 is just started without any error indications
{code}
2009-05-01 09:16:53,247 [main           ] INFO  BrokerService                  - ActiveMQ 5.2.0 JMS Message Broker (localhost) is starting
2009-05-01 09:16:53,248 [main           ] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2009-05-01 09:16:53,392 [main           ] INFO  KahaStore                      - Kaha Store using data directory activemq-data/localhost/kr-store/data
2009-05-01 09:16:53,513 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:davsclaus.local-50096-1241162213265-0:0) started
2009-05-01 09:16:53,520 [main           ] INFO  TransportConnector             - Connector vm://localhost Started
{code}

But if I enter an invalid URI without the prefix such as: bla=foo
{code}
        ActiveMQComponent activemq = activeMQComponent(""vm://localhost?bla=foo"");
{code}

I get a nice error report
{code}
org.apache.camel.RuntimeCamelException: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {bla=foo}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-20 15:04:49.995,,,false,,,,,,,,,,,,,,,,,44193,,,Thu Oct 20 15:04:49 UTC 2011,,,,,,,,"0|i0alpr:",59791,,,,,,,,,,,,,,,,,,,"20/Oct/11 15:04;tabish;Fix applied in trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bin/activemq error on MacOS (and maybe Cygwin),AMQ-3163,12496846,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dcheckoway,dcheckoway,26/Jan/11 17:04,14/Oct/11 21:07,30/Jan/20 16:55,14/Oct/11 21:07,5.5.0,,,,,,,5.6.0,,,Broker,,,,0,"Had to make this change to bin/activemq to avoid an error...need spaces inside the []s:

[dan:/usr/local/apache-activemq-5.5-SNAPSHOT/bin]$ diff activemq activemq.new
252c252
<            if [-z ""$JAVA_HOME""] && [ ""$JAVACMD"" = ""auto"" ];then
---
>            if [ -z ""$JAVA_HOME"" ] && [ ""$JAVACMD"" = ""auto"" ];then ","Mac OSX Snow Leopard
GNU bash, version 3.2.48(1)-release (x86_64-apple-darwin10.0)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-14 21:07:22.075,,,false,,,,,,,,,,,,,,,,,74722,,,Fri Oct 14 21:07:22 UTC 2011,,,,,,,,"0|i0ajxr:",59503,,,,,,,,,,,,,,,,,,,"14/Oct/11 21:07;tabish;This has since been fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQEndpointWorker.stop() sometimes is needing many minutes to shutdown,AMQ-2662,12483654,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,joerg.wassmer,joerg.wassmer,24/Mar/10 05:17,08/Oct/11 18:42,30/Jan/20 16:55,28/Mar/11 12:36,5.3.0,,,,,,,5.5.0,,,JCA Container,,,,0,"On shutdowns the threads occasionally are waiting for a long time in ActiveMQEndpointWorker.stop() on the field ActiveMQEndpointWorker.shutdownMutex. The cause is that shutdownMutex is a string constant (initialization line is shutdownMutex = ""shutdownMutex""), effectively making it a global lock.
The hangs are happening especially on servers with high traffic.",irrelevant,rshinge,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/11 22:16;joerg.wassmer;ActiveMQEndpointWorker.diff;https://issues.apache.org/jira/secure/attachment/12474741/ActiveMQEndpointWorker.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-03-28 12:36:14.987,,,false,,,,,,,,,,,,,,,,,14607,,,Sat Oct 08 18:42:48 UTC 2011,,,,,,,,"0|i0akif:",59596,,,,,,,,,,,,,,,,,,,"27/Mar/11 22:16;joerg.wassmer;Attached patch for trunk.","28/Mar/11 12:36;gtully;patch applied with thanks.","08/Oct/11 18:42;rshinge;Hi Gary - We are using AMQ 5.4.2 with J2EE Server and it hangs server during shutdown
ActiveMQEndpo I org.apache.activemq.ra.ActiveMQEndpointWorker stop Stopping

Where can I download fix for AMQ 5.4.2 JCA Resource Adapter?

Regards
Rahul ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Closing a PooledConnection does not seem to return associated sessions to the SessionPool,AMQ-2643,12483604,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,henriko,henriko,09/Mar/10 09:37,07/Oct/11 13:52,30/Jan/20 16:55,07/Oct/11 13:52,5.2.0,,,,,,,5.6.0,,,,,,,0,"Reading the documentation at http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Connection.html#close() one would assume the associated session(s) would be closed/returned to the SessionPool when closing a connection: ""There is no need to close the sessions, producers, and consumers of a closed connection.""

But it seems if you don't also explicitly call close() on the session you will run out of Session objects in the SessionPool. 
Looking at http://www.google.com/codesearch/p?hl=en#coOE0tRomSs/trunk/activemq-core/src/main/java/org/apache/activemq/pool/PooledConnection.java&d=9&l=69 trunk seems to have the same behaviour.",,fredrikj,henriko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Oct/11 13:22;tabish;PooledSessionExhaustionTest.java;https://issues.apache.org/jira/secure/attachment/12497632/PooledSessionExhaustionTest.java","28/Sep/11 09:03;henriko;SimpleTest.java;https://issues.apache.org/jira/secure/attachment/12496860/SimpleTest.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-09-27 20:48:55.2,,,false,,,,,,,,,,,,,,,,,33650,,,Fri Oct 07 13:52:22 UTC 2011,,,,,,,,"0|i0akjj:",59601,,,,,,,,,,,,,,,,,,,"27/Sep/11 20:48;tabish;Not test case provided which would be needed to reproduce the issue in question.","28/Sep/11 09:02;henriko;Still a bug, tested against 5.5.0. Making a test case","28/Sep/11 09:05;henriko;Attached a test case showing that continously requesting a connection (and a a session) from a ConnectionFactory that happens to be a PooledConnectionFactory and only closing the connection, not the session, eventually exhausts the session pool. This seems to break the contract of Connection.close since the official documentation for it states that ""There is no need to close the sessions, producers, and consumers of a closed connection.""","04/Oct/11 13:22;tabish;Create a usable JUnit test based on the initial test case.  This one will throw an exception if sessions are exhausted and creates its own BrokerService.  ","07/Oct/11 13:52;tabish;Fix applied in trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Browsing DLQ over transacted session,AMQ-2553,12483444,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,29/Dec/09 08:41,05/Oct/11 14:45,30/Jan/20 16:55,05/Oct/11 14:45,5.3.0,,,,,,,5.6.0,,,Broker,,,,1,"When you browse DLQ over transacted session, a rollback is called when browser disconnects and can lead to messages to be sent to another DLQ (if their max redeliveries has been reached). The simple solution is to commit the session, just before destroying the consumer in those situations.",,nedenom@hotmail.com,tcoates,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-20 15:56:10.489,,,false,,,,,,,,,,,,,,,,,46467,,,Wed Oct 05 14:45:05 UTC 2011,,,,,,,,"0|i0akkv:",59607,,,,,,,,,,,,,,,,,,,"29/Dec/09 13:54;dejanb;Fixed with SVN revision 894347","20/May/10 15:56;nedenom@hotmail.com;This causes an exception on regular queues if in a XA transaction.

 javax.jms.TransactionInProgressException: Cannot commit() if an XA transaction is already in progress 
2010-05-20 17:22:21,453 ERROR [STDERR] (WorkManager(2)-13)      at org.apache.activemq.TransactionContext.commit(TransactionContext.java:277)
2010-05-20 17:22:21,453 ERROR [STDERR] (WorkManager(2)-13)      at org.apache.activemq.ra.ManagedTransactionContext.commit(ManagedTransactionContext.java:62)
2010-05-20 17:22:21,454 ERROR [STDERR] (WorkManager(2)-13)      at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:558)
2010-05-20 17:22:21,454 ERROR [STDERR] (WorkManager(2)-13)      at org.apache.activemq.ActiveMQQueueBrowser.destroyConsumer(ActiveMQQueueBrowser.java:117)
2010-05-20 17:22:21,454 ERROR [STDERR] (WorkManager(2)-13)      at org.apache.activemq.ActiveMQQueueBrowser.close(ActiveMQQueueBrowser.java:206)
","05/Oct/10 22:07;tcoates;In 5.4.1 I'm seeing that browsing a queue in an XA transaction throws the exception previously commented.","05/Oct/11 14:45;tabish;Fixed by AMQ-3465",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Too many expired queue messages on intermittent consumer causes ActiveMQ to hang,AMQ-1787,12483434,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,briandesai,briandesai,10/Jun/08 14:54,04/Oct/11 23:39,30/Jan/20 16:55,04/Oct/11 23:39,5.1.0,,,,,,,5.2.0,5.4.2,,Broker,,,,7,"I have a case where a queue consumer may become inactive for periods of time.  If too may messages are sent to this queue, and they eventually expire (setting the TTL) before the consumer comes back online, then once the consumer does come online, I see many of the following messages printed to the broker console.

{quote}Failed to fire message expired advisory{quote}

Once this happens, it seems that no more messages go to any queues, not just the queue whose consumer was down for a while.  I've looked at the web console, both before and after this occurs, and the message counts for all queues stop.  It appears that the broker just gets hung.  I have to kill the broker, and wipe out the data storage in order to get back to a working state.

I've tried various memory settings, with the same result.  My TTL was fairly low (60 seconds), as I was testing out the ability to expire messages.  The number of messages in the queue that were expired were in the 1000+ range.  With a low number of expired messages (< 100), there was no problem.

As a work around, I can disable sending of the advisory messages, and turn off processing of expired messages, but this is not ideal.

{code:xml}
<beans>
  ....
  <broker  ...  advisorySupport=""false"">
    <destinationPolicy>
        <policyMap>
            <policyEntries>
                <policyEntry queue="">"">
                    <deadLetterStrategy>
                        <sharedDeadLetterStrategy processExpired=""false""/>
                    </deadLetterStrategy>
                </policyEntry>
                ...
            </policyEntries>
        </policyMap>
    </destinationPolicy>
    ...
  </broker>
</beans>
{code}","Linux
Sun JDK 1.6.0",dongpak,robertbrown,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-11 10:18:20.224,,,false,,,,,,,,,,,,,,,,,46108,,,Tue Oct 04 23:39:37 UTC 2011,,,,,,,,"0|i0rpkf:",159786,Regression,,,,,,,,,,,,,,,,,,"11/Jun/08 10:18;rajdavies;The same underlying problem as was fixed for https://issues.apache.org/activemq/browse/AMQ-1774","14/Apr/10 22:26;dongpak;With a producer producing object messages with message expiration set to 5 seconds, we are seeing no messages sent to consumer when messages start to expire and put into DLQ.  Due to some issue between the ActiveMQ RA and SJSAS 9.1, our consumer's prefetch is set to 100.  We are using a queue, which the prefetch should be defaulted to 1000.  We are seeing this ""hanging"" appearance in 5.3.1.","04/Oct/11 23:39;tabish;This should have all been resolved with the addition of the purge of inactive destination along with other fixes for this type of issue.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
kahaDB: maxCheckpointMessageAddSize not accepted,AMQ-2690,12483782,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,scoopex,scoopex,08/Apr/10 06:38,04/Oct/11 13:51,30/Jan/20 16:55,04/Oct/11 13:51,5.3.1,,,,,,,5.6.0,,,Broker,,,,0,"I configured the following persintence adapter:

{code}
<persistenceAdapter>
   <kahaDB directory=""/srv/activemq/work/data"" 
                    journalMaxFileLength=""32mb"" indexWriteBatchSize=""10000"" 
                    indexCacheSize=""1000"" maxCheckpointMessageAddSize=""100""/>
</persistenceAdapter>
{code}

According to http://activemq.apache.org/kahadb.html the parameter maxCheckpointMessageAddSize should be usable.

If i startup the message broker i get the follwing exceptions:
{code}
# /etc/init.d/activemq fgstart
INFO: loading '/etc/default/activemq'
INFO: useing java '/usr/bin/java'
INFO: starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+c)
INFO: changing to user 'activemq' to invoke java
INFO: Pushing the following environment Variables to JVM
INFO:  IBM_HEAPDUMPDIR='/var/log/activemq/' IBM_COREDIR='/var/log/activemq/' IBM_JAVACOREDIR='/var/log/activemq/'
Java Runtime: IBM Corporation 1.6.0 /usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre
  Heap sizes: current=131072k  free=126224k  max=8286208k
    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Dsun.boot.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Djava.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64:/usr/lib -Djava.home=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre -Djava.ext.dirs=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/ext -Duser.dir=/srv/activemq/conf _j2se_j9=1119744 -Xdump -Djava.class.path=. -Xms128M -Xmx8092M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=log4j.properties -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/srv/activemq/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/srv/activemq/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.130.18.244 -Dcom.sun.management.jmxremote -Dcom.sun.management.snmp.port=30000 -Dcom.sun.management.snmp.interface=0.0.0.0 -Dcom.sun.management.snmp.acl.file=/srv/activemq/conf/snmp.acl -Dactivemq.classpath=/srv/activemq/conf/; -Dactivemq.home=/srv/activemq/install/current -Dactivemq.data=/srv/activemq/work -Dactivemq.base=/srv/activemq/install/current -Djava.class.path=/srv/activemq/install/current/bin/run.jar -Dsun.java.command=/srv/activemq/install/current/bin/run.jar start -Dsun.java.launcher=SUN_STANDARD -Dsun.java.launcher.pid=22786 _port_library _org.apache.harmony.vmi.portlib
ACTIVEMQ_HOME: /srv/activemq/install/current
ACTIVEMQ_BASE: /srv/activemq/install/current
Loading message broker from: xbean:activemq.xml
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#1' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'maxCheckpointMessageAddSize' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'maxCheckpointMessageAddSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#1' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'maxCheckpointMessageAddSize' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'maxCheckpointMessageAddSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
        at java.lang.reflect.Method.invoke(Method.java:599)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#1' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'maxCheckpointMessageAddSize' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'maxCheckpointMessageAddSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(AccessController.java:224)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-08 16:34:14.352,,,false,,,,,,,,,,,,,,,,,44361,,,Tue Oct 04 13:51:05 UTC 2011,,,,,,,,"0|i0akh3:",59590,,,,,,,,,,,,,,,,,,,"08/Apr/10 16:34;gtully;I think setJournalMaxWriteBatchSize is what you want. looks like this is a bug in the documentation. let me know it setJournalMaxWriteBatchSize works for you","09/Apr/10 06:10;scoopex;Sorry, this does not work - same type of exceptions.

{code}
 <kahaDB directory=""/srv/activemq/work/data"" 
    setJournalMaxWriteBatchSize=""32mb"" 
    enableJournalDiskSyncs=""false""
    journalMaxFileLength=""32mb"" 
    indexWriteBatchSize=""10000"" 
    indexCacheSize=""1000""/>
{code}","09/Apr/10 08:09;gtully;The error should be a little different, about a conversion or type must be an int rather than a string. That attribute does not have the property conversion on it, that can also be fixed. currently the value needs to be a plain int, 32000 rather than Xmb
See: http://activemq.apache.org/maven/5.3.1/activemq-core/apidocs/org/apache/activemq/store/kahadb/KahaDBPersistenceAdapter.html#setJournalMaxWriteBatchSize(int) 

It needs the annotation like setJournalMaxFileLength
{code}/**
 * When set using Xbean, values of the form ""20 Mb"", ""1024kb"", and ""1g"" can be used
 * @org.apache.xbean.Property propertyEditor=""org.apache.activemq.util.MemoryIntPropertyEditor""
 */{code}","04/Oct/11 13:51;tabish;This has since been resolved by other work on this class.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getJMSRedelivered() incorrectly returns false after a MasterSlave failover,AMQ-2334,12483757,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kman,kman,28/Jul/09 23:56,30/Sep/11 21:13,30/Jan/20 16:55,30/Sep/11 21:13,5.2.0,,,,,,,5.x,,,Broker,,,,1,"Shared master/slave setup, described here http://activemq.apache.org/shared-file-system-master-slave.html
Scenario:
1. Transacted consumer receives a message
2. Transacted consumer disconnects prior to committing
3. Transacted consumer #2 receives the same message.

Normally consumer #2 sees that message as getJMSRedelivered() = true.  However, if the broker fails and another takes over from the data dir between step 1 and 3, the redelivery is set as false - even though a consumer has, in fact, seen the message before.  See attached unit test.",,npfistner,willjohnson3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10800,10800,,0%,10800,10800,,,,,,,,,,,,,"28/Jul/09 23:57;kman;SanRedeliver.java;https://issues.apache.org/jira/secure/attachment/12461301/SanRedeliver.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-07-29 16:49:49.522,,,false,,,,,,,,,,,,,,,,,41659,,,Fri Sep 30 21:13:48 UTC 2011,,,,,,,,"0|i0alnz:",59783,,,,,,,,,,,,,,,,,,,"28/Jul/09 23:57;kman;See attached unit test","29/Jul/09 15:18;kman;In my application, I'd prefer a message marked as redelivered if it wasn't to a re-delivered message that wasn't marked as such.

So a quick fix, I modified org.apache.activemq.broker.region.queue to increment the message count prior to persistent storage, then decremented immediately after on the version in memory:
message.incrementRedeliveryCounter();
store.addMessage(context, message);
message.setRedeliveryCounter(message.getRedeliveryCounter()-1);

Aside from marking all messages as redelivered upon recovery or a page in, any possible issues with this?  Any better solutions out there?","29/Jul/09 16:49;gtully;that seems like a reasonable (and smart) solution but it may make sense as part of a broker plugin and/or destination filter so that it can be easily enabled or disabled. If redelivery semantics are vital then it can be enabled through config etc.
From what I can see, any other solution will require storing the message twice which would kill performance.","30/Sep/11 21:13;tabish;This issue is fixed by AMQ-3519",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Using connection pool, ActiveMQConnection is not started if an error occur during first attempt to start the connection.",AMQ-2326,12483648,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mbaril,mbaril,16/Jul/09 15:44,30/Sep/11 21:10,30/Jan/20 16:55,30/Sep/11 21:10,5.2.0,,,,,,,5.x,,,,,,,0,"calling start() on org.apache.activemq.pool.PooledConnection do the following:
   
   public void start() throws JMSException {
        if (started.compareAndSet(false, true)) {
            connection.start();
        }
    }

If an error occurs during call on the underlying connection, the value of started is equal to true. This means that the next call to the start method of the pooled connection will not call start on the underlying connection even if in reality the connection is not started...

In my case, I use FailoverTransport but I want that my call to start returns after a certain delay so I interrupt the Thread that is starting the ActiveMQConnection. Doing that, the method returns but the isStarted method on the ActiveMQConnection returns false. The result is that all MessageDispatchChannel created on that connection are not started and don't dispatch message received.

ActiveMQConnection: 
   public void start() throws JMSException {
        checkClosedOrFailed();
        ensureConnectionInfoSent();           => The thread is interrupted here....
        if (started.compareAndSet(false, true)) {
            for (Iterator<ActiveMQSession> i = sessions.iterator(); i.hasNext();) {
                ActiveMQSession session = i.next();
                session.start();
            }
        }
    }


This is the solution that I propose and that seems to work for me:
In PooledConnection, replace:
    public void start() throws JMSException {
        if (started.compareAndSet(false, true)) {
            connection.start();
        }
    }

by

    public void start() throws JMSException {
        started.compareAndSet(false, true);
        if (!connection.isStarted()) {
            connection.start();
        }
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-30 21:10:31.446,,,false,,,,,,,,,,,,,,,,,41652,,,Fri Sep 30 21:10:31 UTC 2011,,,,,,,,"0|i0alo7:",59784,,,,,,,,,,,,,,,,,,,"30/Sep/11 21:10;tabish;This issue was fixed by AMQ-2677",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DemandForwardingBridgeSupport can send BrokerInfo to remote transport before local broker ID is known.,AMQ-3014,12483853,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,stirlingc,stirlingc,03/Nov/10 22:56,30/Sep/11 19:36,30/Jan/20 16:55,30/Sep/11 19:36,5.4.1,,,,,,,5.6.0,,,Broker,Transport,,,0,"Symptom
========
We have a production system that involves a set of Brokers connected in a demand-forwarding Network-of-Brokers using HTTP-based bridges.  Each Broker periodically scans its list of peer brokers by iterating over RegionBroker.getPeerBrokerInfos:

    public synchronized BrokerInfo[] getPeerBrokerInfos() {
        BrokerInfo[] result = new BrokerInfo[brokerInfos.size()];
        result = brokerInfos.toArray(result);
        return result;
    }

This scanning code assumes that BrokerInfo.getBrokerId() is always non-null (since every broker should have an ID).  However, we periodically noticed that BrokerInfo.getBrokerId() returned a NULL value, which was very unexpected.

Cause
======
We analyzed the DemandForwardingBridgeSupport and noticed that when the remote bridge/transport is started, it sends the local Broker's ID:

    protected void startRemoteBridge() throws Exception {
...
                    brokerInfo.setBrokerId(this.localBrokerId);
                    remoteBroker.oneway(brokerInfo);
                }

The local Broker's ID is not initially known until it is received from the local transport and processed by DemandForwardingBridge.serviceLocalBrokerInfo(...):

    protected void serviceLocalBrokerInfo(Command command) throws InterruptedException {
        synchronized (brokerInfoMutex) {
            localBrokerId = ((BrokerInfo)command).getBrokerId();
            localBrokerPath[0] = localBrokerId;
            localBrokerIdKnownLatch.countDown();

The local Broker's ID is dispatched asynchronously when the local transport is started, as seen in TransportConnection.start():

    public void start() throws Exception {
        starting = true;
        try {
            synchronized (this) {
                if (taskRunnerFactory != null) {
                    taskRunner = taskRunnerFactory.createTaskRunner(this, ""ActiveMQ Connection Dispatcher: ""
                            + getRemoteAddress());
                } else {
                    taskRunner = null;
                }
                transport.start();
                active = true;
                dispatchAsync(connector.getBrokerInfo());

Because of the asynchronous dispatch, the remote bridge may be started before the local Broker's ID is known.  This would be particularly evident when the local broker is under load processing a lot of tasks.

We've attached a unit test that demonstrates how a slow asynchronous dispatch on the local transport can cause the remote transport to transmit a null BrokerId.

Solution
======
DemandForwardingBridgeSupport already contains a  localBrokerIdKnownLatch, so starting the remote transport should wait for this latch before accessing the local Broker's ID (see patch).

",,eric-awl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/11 00:59;stirlingc;NullBrokerIdTest.java;https://issues.apache.org/jira/secure/attachment/12486126/NullBrokerIdTest.java","03/Nov/10 22:59;stirlingc;NullBrokerIdTest.java;https://issues.apache.org/jira/secure/attachment/12461881/NullBrokerIdTest.java","03/Nov/10 22:57;stirlingc;patch.txt;https://issues.apache.org/jira/secure/attachment/12461880/patch.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2011-07-09 21:40:19.618,,,false,,,,,,,,,,,,,,,,,41606,,,Fri Sep 30 19:36:05 UTC 2011,,,,Patch Available,,,,"0|i0agyf:",59020,,,,,,,,,,,,,,,,,,,"03/Nov/10 22:57;stirlingc;Patch of DemandForwardingBridgeSupport, which waits until the local Broker's ID is known before transmitting the BrokerInfo to the remote transport.","03/Nov/10 22:59;stirlingc;Unit test that demonstrates the ability of DemandForwardingBridgeSupport to transmit a null local Broker ID.  The test contains a ""normal"" case that typically succeeds because there are few delays in VMTransport.  The test also contains a ""delayed"" case that fails with the unpatched DemandForwardingBridgeSupport.  When the attached patch.txt is applied, both tests pass.","09/Jul/11 21:40;tabish;Both tests seem to fail regardless of the patch being applied.","11/Jul/11 19:49;stirlingc;The unit test is failing because Broker.addBroker(...) is no longer being called when the bridge processes a remote BrokerInfo command.  The test was relying on addBroker(...) to verify that the broker ID had been set.

The removal occurred in TransportConnection#processBrokerInfo(...) as part of this changeset:

Revision: 1058577
Author: gtully
Date: 6:18:14 AM, January 13, 2011
Message:
https://issues.apache.org/jira/browse/AMQ-3077 - ArraysIndexOutOfBoundsException : -32768 in ""BrokerService[xxx] Task"" thread - brokerInfo and peerBroker infro explosion problems. A peer is a oneway relationship with networks, broker infos were being accumulated in duplicate for each connector and for multiple connectors. The peer broker info was maintained for each which caused the problem marshalling. re: https://issues.apache.org/jira/browse/AMQ-2632 - the configuration is now respected so it can be selectively enabled and rebalance only occurs if we randomly choose an alternative. The nested peer broker info is not propagated in a connection control
----
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/TransportConnection.java
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/RegionBroker.java
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/command/BrokerInfo.java
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/transport/failover/FailoverTransport.java
Modified : /activemq/trunk/activemq-core/src/test/java/org/apache/activemq/transport/failover/FailoverClusterTest.java
Modified : /activemq/trunk/activemq-core/src/test/java/org/apache/activemq/JmsMultipleBrokersTestSupport.java
Added : /activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/NetworkOfTwentyBrokersTest.java

","12/Jul/11 00:59;stirlingc;Updated unit test that works on trunk to demonstrate the issue (pre-patch) and resolution (post patch).","12/Jul/11 01:00;stirlingc;I've added a revised unit test that does not rely on Broker.addBroker(...) to demonstrate that the issue (transmitting BrokerInfo with null ID) is still present on trunk.","30/Sep/11 19:36;tabish;Reviewed the code, Patch applied, thanks for the hard work on this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ajax client receives incorrect messages when subscribed to multiple topics,AMQ-3123,12494988,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,alexdean,alexdean,07/Jan/11 21:20,27/Sep/11 21:26,30/Jan/20 16:55,27/Sep/11 21:26,5.4.2,,,,,,,5.5.0,,,,,,,0,"When an ajax client is subscribed to multiple topics, the ""id"" attribute of a returned <response> element indicates to JavaScript which callback function should process the message.  Currently, the MessageListenerServlet returns multiple copies of each message, 1 per subscription.  So all callback functions will receive all messages.

For example, if I send messages 'A1' and 'A2' to /topic/topicA, and messages 'B1' and 'B2' to /topic/topicB, my ajax client gets the following message:
<ajax-response>
  <response id='handlerA' destination='topic://topicA' >A1</response>
  <response id='handlerA' destination='topic://topicA' >B1</response>
  <response id='handlerA' destination='topic://topicA' >A2</response>
  <response id='handlerA' destination='topic://topicA' >B2</response>
  <response id='handlerB' destination='topic://topicB' >A1</response>
  <response id='handlerB' destination='topic://topicB' >B1</response>
  <response id='handlerB' destination='topic://topicB' >A2</response>
  <response id='handlerB' destination='topic://topicB' >B2</response>
</ajax-response>

Further, these messages are constantly re-delivered to the client.  (They are never removed from the unconsumedMessages linked list in AjaxListener.)

If https://issues.apache.org/jira/secure/attachment/12467757/all_messages_are_delivered_to_ajax_clients.patch from https://issues.apache.org/jira/browse/AMQ-3094 is applied, the duplication is reduced, but the ""id"" values for the ""topicB"" messages are still incorrect.

<ajax-response>
  <response id='handlerA' destination='topic://topicA' >A1</response>
  <response id='handlerA' destination='topic://topicA' >B1</response>
  <response id='handlerA' destination='topic://topicA' >A2</response>
  <response id='handlerA' destination='topic://topicA' >B2</response>
</ajax-response>

I've attached a test which demonstrates the problem.  This patch will conflict with the one attached to AMQ-3094, but the conflicts should be easy to resolve.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/11 03:10;alexdean;undelivered_messages_need_associated_consumer.patch;https://issues.apache.org/jira/secure/attachment/12470957/undelivered_messages_need_associated_consumer.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-09-27 21:26:05.126,,,false,,,,,,,,,,,,,,,,,14689,,,Tue Sep 27 21:26:05 UTC 2011,,,,,,,,"0|i0ak2n:",59525,,,,,,,,,,,,,,,,,,,"13/Feb/11 03:10;alexdean;Messages which are buffered for later delivery need to be associated with the correct consumer.","27/Sep/11 21:26;tabish;The fixes were applied but this issue seems to have been left open.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent test failure - DataFileNotDeletedTest,AMQ-2076,12483600,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,djencks,djencks,19/Jan/09 00:30,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.0,,,,,,,5.6.0,,,Broker,,,,0,"Only info is surefire report

  <testcase time=""34.105"" name=""testForDataFileNotDeletedTransacted"">
    <failure type=""junit.framework.AssertionFailedError"" message=""persistence adapter dataManager has correct number of files expected:&amp;lt;2&amp;gt; but was:&amp;lt;22&amp;gt;"">junit.framework.AssertionFailedError: persistence adapter dataManager has correct number of files expected:&amp;2&amp; but was:&amp;22&amp;
        at junit.framework.Assert.fail(Assert.java:47)
        at junit.framework.Assert.failNotEquals(Assert.java:282)
        at junit.framework.Assert.assertEquals(Assert.java:64)
        at junit.framework.Assert.assertEquals(Assert.java:201)
        at org.apache.activemq.bugs.DataFileNotDeletedTest.waitFordataFilesToBeCleanedUp(DataFileNotDeletedTest.java:110)
        at org.apache.activemq.bugs.DataFileNotDeletedTest.doTestForDataFileNotDeleted(DataFileNotDeletedTest.java:97)
        at org.apache.activemq.bugs.DataFileNotDeletedTest.testForDataFileNotDeletedTransacted(DataFileNotDeletedTest.java:78)
</failure>
  </testcase>",osx 10.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-01 20:17:36.113,,,false,,,,,,,,,,,,,,,,,60024,,,Tue Sep 20 11:01:40 UTC 2011,,,,,,,,"0|i0aksn:",59642,,,,,,,,,,,,,,,,,,,"01/Jul/11 20:17;tabish;recent test history doesn't show any failures from this test.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak with ManagedRegionBroker,AMQ-2778,12483643,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,brice,brice,14/Jun/10 10:26,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.2,,,,,,,5.6.0,,,JMX,,,,0,There are memory leak with the ManagedRegionBroker,Sun Solaris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/10 10:33;brice;ManagedRegionBroker.jpeg;https://issues.apache.org/jira/secure/attachment/12461738/ManagedRegionBroker.jpeg","21/Jul/10 08:52;brice;activemq.properties;https://issues.apache.org/jira/secure/attachment/12461707/activemq.properties","21/Jul/10 08:52;brice;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461773/activemq.xml","21/Jul/10 08:52;brice;broker1.properties;https://issues.apache.org/jira/secure/attachment/12461719/broker1.properties",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2010-07-20 10:41:47.297,,,false,,,,,,,,,,,,,,,,,60023,,,Tue Sep 20 11:01:40 UTC 2011,,,,,,,,"0|i0akf3:",59581,Regression,,,,,,,,,,,,,,,,,,"14/Jun/10 10:33;brice;I used MAT to detect memory leak","20/Jul/10 10:41;rajdavies;Can you provide some more information ? - a test case would be ideal. JMX Objects do take up a lot of memory - is this in normal operation ? (do you see this when re-started ?).","21/Jul/10 08:50;brice;I do not have test case, but if I set useJmx=""false"" in the broker,  the memory leak disappear. I can provide my configuration files in attachement.","29/Jun/11 21:52;tabish;Not test case or information allowing this to be tested or reproduced.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client using 41 API and Server is running on 5.2,AMQ-2363,12483670,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mchek123,mchek123,23/Aug/09 14:31,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,4.1.2,5.2.0,,,,,,5.6.0,,,,,,,0,"We are running ActiveMQ ver 5.2 server, all the clients are using Activemq 4.1.1to connect to the same server.
It works fine for sometime but after that if we restart the activmq server we see the following error. As it works some time and doesnt work few times we are not sure if we have to change the client API to Activemq 5.2. Any comment on this will be helpful.
----------------------------------------------------------------------------------------------------------------------------------------------------------------


INFO | jvm 1 | 2009/08/23 02:36:01 | [ERROR] 02:36:01 AbstractStoreCursor - Failed to fill batch
INFO | jvm 1 | 2009/08/23 02:36:01 | java.io.IOException: Failed to read to journal for: offset = 692, file = 1, size = 0, type = 0. Reason: java.io.IOException: Invalid location: offset = 692, file = 1, size = 0, type = 0, : java.lang.NegativeArraySizeException
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:647)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:533)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:435)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:120)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:533)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:227)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:100)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1179)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:237)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:275)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:372)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:541)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
INFO | jvm 1 | 2009/08/23 02:36:01 | at java.lang.Thread.run(Unknown Source)
INFO | jvm 1 | 2009/08/23 02:36:01 | Caused by: java.io.IOException: Invalid location: offset = 692, file = 1, size = 0, type = 0, : java.lang.NegativeArraySizeException
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.kaha.impl.async.DataFileAccessor.readRecord(DataFileAccessor.java:94)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:624)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:530)
INFO | jvm 1 | 2009/08/23 02:36:01 | ... 29 more
INFO | jvm 1 | 2009/08/23 02:36:01 | [ERROR] 02:36:01 AbstractStoreCursor - Failed to fill batch
INFO | jvm 1 | 2009/08/23 02:36:01 | java.lang.RuntimeException: java.io.IOException: Failed to read to journal for: offset = 692, file = 1, size = 0, type = 0. Reason: java.io.IOException: Invalid location: offset = 692, file = 1, size = 0, type = 0, : java.lang.NegativeArraySizeException
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:230)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:100)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1179)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:237)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:275)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:372)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:541)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
INFO | jvm 1 | 2009/08/23 02:36:01 | at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
INFO | jvm 1 | 2009/08/23 02:36:01 | ","linux 32 bit -2.6.18-92.el5 i686 i686 i386 GNU/Linux-, jre1.6.0_10 ",mchek123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-01 20:55:20.514,,,false,,,,,,,,,,,,,,,,,60026,,,Tue Sep 20 11:01:40 UTC 2011,,,,,,,,"0|i0ah0v:",59031,,,,,,,,,,,,,,,,,,,"01/Jul/11 20:55;tabish;No test case and at this point 4.1 is EOL.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX does not indicate durable subscription activity.,AMQ-2666,12483532,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,akos.baraz,akos.baraz,24/Mar/10 13:43,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.1,,,,,,,5.6.0,,,,,,,0,"The ManagedRegionBroker.addInactiveSubscription adds the subscription to this domain: ""...Type=Subscription,active=false,name=..."". I don't know what this active=false part supposed to mean, but it puts the MBean to a strange path in the jconsole. What is not a big problem, but it is not managed by the rest of the code. Even if a subscription is inactivated the MBean in the ""Durable"" section shows active. If the subscription is active the ""false"" section contains an entry as it would be inactive.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/10 13:44;akos.baraz;DurableSubscriptionReactivationTest3.java;https://issues.apache.org/jira/secure/attachment/12461604/DurableSubscriptionReactivationTest3.java","24/Mar/10 13:44;akos.baraz;activemq2.xml;https://issues.apache.org/jira/secure/attachment/12461605/activemq2.xml",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-08-05 15:37:39.022,,,false,,,,,,,,,,,,,,,,,60025,,,Tue Sep 20 11:01:40 UTC 2011,,,,,,,,"0|i0akhz:",59594,,,,,,,,,,,,,,,,,,,"24/Mar/10 13:44;akos.baraz;junit testcase","05/Aug/11 15:37;tabish;Working as designed.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker hangs reading KahaDB data store,AMQ-2721,12483804,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jteetel,jteetel,05/May/10 14:28,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.1,,,,,,,5.6.0,,,Broker,,,,1,"Broker hangs on loading the data store. Happens after using the broker for 10 hours in productive environment.

In broker log the last entries we see is a bunch of loading kahadb debug entries.
2010-05-05 16:06:19,462 | DEBUG | loading | org.apache.kahadb.index.BTreeIndex | main

But the broker doesn't stall completely. It is doing something with high cpu load. But it doesn't get the data store loaded. Even after a few hours it doesn't get finished (usually only takes a few seconds).

I took a few jstack-dumps where we can see the broker being busy putting something into a hashmap.

We have 2 brokers connected as network of brokers.",Red hat enterprise,daggerrz,daroo,shbehna@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/10 14:28;jteetel;brokerjstack.log;https://issues.apache.org/jira/secure/attachment/12461688/brokerjstack.log",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-05-05 14:44:29.419,,,false,,,,,,,,,,,,,,,,,60028,,,Tue Sep 20 11:01:40 UTC 2011,,,,,,,,"0|i0akfr:",59584,,,,,,,,,,,,,,,,,,,"05/May/10 14:31;jteetel;I should add that the broker was shut down successfully (no exceptions/problems in the log) before started again.

If the broker was run for a shorter time like an hour or less, this issue does not take place.","05/May/10 14:44;gtully;would it be possible to attach a zip/tar.gz of your store directory so that this could be reproduced. It looks like it is in the middle or recovery but it should not take hours. How big is the store?","05/May/10 14:54;jteetel;This is the data store of a productive broker with procurement data. For confidential reasons I can not post it here.

These are the file sizes:
ls -l
total 530240
-rw-r--r-- 1 root root 33556012 May  5 09:33 db-10.log
-rw-r--r-- 1 root root 33555666 May  5 10:42 db-11.log
-rw-r--r-- 1 root root 33556967 May  5 11:40 db-12.log
-rw-r--r-- 1 root root 33556179 May  5 12:45 db-13.log
-rw-r--r-- 1 root root 33554986 May  5 13:55 db-14.log
-rw-r--r-- 1 root root 33555934 May  5 15:35 db-15.log
-rw-r--r-- 1 root root 33554839 May  5 16:05 db-16.log
-rw-r--r-- 1 root root 33030144 May  5 16:08 db-17.log
-rw-r--r-- 1 root root 33556869 May  4 14:00 db-1.log
-rw-r--r-- 1 root root 33556347 May  4 14:53 db-2.log
-rw-r--r-- 1 root root 33554523 May  4 15:20 db-3.log
-rw-r--r-- 1 root root 33555765 May  4 16:07 db-4.log
-rw-r--r-- 1 root root 33554705 May  4 17:05 db-5.log
-rw-r--r-- 1 root root 33555131 May  5 08:58 db-6.log
-rw-r--r-- 1 root root 33555786 May  5 09:01 db-7.log
-rw-r--r-- 1 root root 33555139 May  5 09:03 db-8.log
-rw-r--r-- 1 root root 33555024 May  5 09:06 db-9.log
-rw-r--r-- 1 root root  1564672 May  5 16:08 db.data
-rw-r--r-- 1 root root   837208 May  5 16:08 db.redo
-rw-r--r-- 1 root root        0 May  5 16:08 lock
","07/May/10 14:07;jteetel;We had to restart one broker and this time the issue did not show up. Here in the log we can see that it only takes 5 seconds to read the datastore.

2010-05-07 15:43:25,569 | DEBUG | loading | org.apache.kahadb.index.BTreeIndex | main
...
2010-05-07 15:43:25,637 | DEBUG | loading | org.apache.kahadb.index.BTreeIndex | main
2010-05-07 15:43:30,851 | INFO  | Replayed 68230 operations from the journal in 5.213 seconds. | org.apache.activemq.store.kahadb.MessageDatabase | main

","27/Oct/10 07:28;daggerrz;We also see this issue on 5.3.1-fuse-01-00. Occasionally on restarts (graceful), Kaha hangs on startup and we have to delete the entire store (and loose messages) to get it going again. A strange and probably related symptom is that the store seems to grow indefinitely. Although there should be only a few in-flight messages, our current, corrupted store has 40 data-queue files (128MB each). The data is too sensitive to publish here, but we can arrange that privately if needed.

The problem is in KahaStore.generateInterestInMapDataFiles where the while-loop is alternating between two item ids in an infinite loop.","27/Oct/10 09:09;daggerrz;It's worth mentioning that the broker has moderate load (about 100 messages per minute). Most messages are very small, but about 50-150 per day are 1-3MB in size. 

Dennis: Are you sending big messages?","06/Apr/11 22:40;daroo;In the past I came accross similar issue in the other application. In short: not synchronized, concurrent put/get operations on HashMap can cause infinite loop.
See this blog: http://lightbody.net/blog/2005/07/hashmapget_can_cause_an_infini.html

I think this problem has been fixed already (at least in current trunk) by adding synchronization on inflightTransactions map in getInflightTx method. In 5.3.1 this map wasn't synchronized and I think that caused your broker hang. 
","11/Aug/11 19:26;tabish;I believe this issue has been fixed.  Try a later version or the 5.6-SNAPSHOT to verify. ","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No Of connections Increases at Server end ,AMQ-2361,12483676,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mchek123,mchek123,22/Aug/09 17:44,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,,,,,0,"We are running ActiveMQ 5.2 and we had set the maxInactivityTimeOUt=0 in the server URL

There are many clients which connects to this Activemq. The issue here is with the number of connections, 

Lets say a client has 20 connections to activemq it will be always constantly remain at 20 if we check the number of connections to activemq from CLIENT end

If we check the number of connections fromSERVER (activemq) it will show more than 20 connections from the same client and the same keeps increasing by 1 or 2 after every few hours. 

This creates lot of issues as the total connections increases beyond limit (i.e., in thousands) 

Earlier we were using 4.1.1 with the same configuration. I saw this issue is resolved in 5.2, hence we are using the same but issue is occurring in 5.2 also.

Please let me know if there is any fix for the same.
",Linux,mchek123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-10 21:10:45.198,,,false,,,,,,,,,,,,,,,,,60027,,,Tue Sep 20 11:01:40 UTC 2011,,,,,,,,"0|i0akpj:",59628,,,,,,,,,,,,,,,,,,,"10/Aug/11 21:10;tabish;Not test to help reproduce the issue.  Likely since the user is disabling the inactivity monitor their app is closing connections abruptly and they are then lingering on the broker side. ","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message Selector Not working in High Load.,AMQ-2093,12483662,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,rykumar7,rykumar7,02/Feb/09 11:28,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,4.1.0,5.0.0,5.2.0,,,,,5.6.0,,,Broker,,,,0,"I am facing a problem on receiving messages by multiple blocked receivers from a single Queue with different correlation id.

Here is what exactly I am doing.

My client thread is publishing a message ( having a unique co-relationid) to a RequestQueue and waiting for a response (blocked)
on Response Queue with the same co-relationid.  I have such 100 client threads.

The client thread is publishing a message using normal JMS (w/o Spring) whereas receiving the response using Spring JMSTemplate
using object=jmsQueueTemplate.receiveSelectedAndConvert(destinationName, ""JMSCorrelationID='"" + correlationID+ ""';

the other side, Spring Message POJOs are consuming the published message from RequestQueue, processing it and sending back the response to ResponseQueue with the co-relation id set using normal publishing (w/o Spring).


My Observations

I have sent 1000 unique co-relationId messages (using 100 client threads) but received 992 unique co-related id messages;
8 duplicated co-related id messages and dropped 8 unique co-related id messages.

This is happening under 100 client threads load using Jmeter ","Windows XP Profesional - 32 Bit.
JDK 1.5 Update 8 
Broker Running in Jboss",gpugar,rajdavies,rykumar7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-07-17 11:43:03.499,,,false,,,,,,,,,,,,,,,,,60034,,,Tue Sep 20 11:01:39 UTC 2011,,,,,,,,"0|i0ah1z:",59036,,,,,,,,,,,,,,,,,,,"08/Apr/09 17:09;rykumar7;Dear James Strachan,
 
We are stuck at this issue. can you pls help us to look at this problem ?  i think that this problem is similar to https://issues.apache.org/activemq/browse/AMQ-1375 AMQ-1375 
please advise. 
","17/Jul/09 11:43;rajdavies;Can you attach a junit test case please ?","08/Jul/11 21:59;tabish;No test case given to allow for reproducing the issue.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"temp-queue - no producer, no consumer -> messagecount ",AMQ-2657,12483605,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,lucious,lucious,18/Mar/10 22:13,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.1,,,,,,,5.6.0,,,Broker,,,,0,"HI,

I tried the latest snapshot 12.03.2010, several producers and consumers. No matter what I change in activemq.xml file I always end up with memorylimit and broker is ""frozen"". However today I found one really strange thing. Maybe this is something wrong with what JMX says but: several temp-queues with  ConsumerCount=0, ProducerCount=0 but EnqueueCount was getting up and up and Dequeue was 0 all the time . This way MemoryPercentageUsage got to 100% and AMQ said again something like this:

2010-03-16 15:02:28,455 | INFO  | Usage Manager Memory Limit reached on temp-queue://e0499daa-604e-227c-57c5-8a700a83d690:0. Producers will be throttled to the rate at which messages are removed from this destination to prevent flooding it. See http://activemq.apache.org/producer-flow-control.html for more info | org.apache.activemq.broker.region.Queue | ActiveMQ Transport: tcp:///127.0.0.1:46737 

My config file is attached. All producers and consumers use CMS -3.0.1. and 3.1.1.

",,lucious,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Mar/10 22:17;lucious;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461567/activemq.xml","19/Mar/10 16:37;lucious;jms1.png;https://issues.apache.org/jira/secure/attachment/12461363/jms1.png","19/Mar/10 16:37;lucious;jms2.png;https://issues.apache.org/jira/secure/attachment/12461365/jms2.png","19/Mar/10 16:37;lucious;jms3.png;https://issues.apache.org/jira/secure/attachment/12461612/jms3.png",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2010-07-20 10:38:40.036,,,false,,,,,,,,,,,,,,,,,60033,,,Tue Sep 20 11:01:39 UTC 2011,,,,,,,,"0|i0akin:",59597,,,,,,,,,,,,,,,,,,,"18/Mar/10 22:17;lucious;My configuration file","19/Mar/10 16:37;lucious;Some screenshots from todays testing. There was one temp-queue without Consumer and Producer but with EnqueueCount counting. I had to do Purge on this queue from time to time - and memory was released. ","22/Mar/10 09:26;lucious;Hi It's me again... I found I think which can be helpful... Today I had network problem with my one of my ISPs. So for about 20sec all clients connected via AMQ lost connection. After that time they had to reconnect although temp-queues kept ""safe"" in AMQ and now I have to purge them every  10-20 minutes to not get ""memory exhausted"" on temp-queue.","20/Jul/10 10:38;rajdavies;Downgrading this to a major bug. I can't reproduce it - would like to know if its possible to add an expiration to the messages.
Also  - in 5.4 is the option to garbage collect unused destinations- which may help. 
Do you know the types of messages being enqueued ?","03/Aug/10 07:14;lucious;Hi Rob,

First of all I didn't get any notification regarding your comment so could react faster. But anyway... 
1. What's the option in 5.4 for garbage unused destinations ? 
2. Regarding messages types: well I'm not a programmer but we use AMQ for Order management System -> so we're sending ""orders"", ""transactions"" to and from exchanges. So rather text messages max 1k -> is there a way to ""mirror"" messages to so exactly what is being sent?
3. We have now simple script in jruby to ""clean"" ""unconnected"" temp-queues"" so in 5.3.2 there is still this problem. I can test 5.4 if there is some relevant change to provide latest update if you need?
","11/Aug/11 15:46;tabish;Use of the Inactive Destination Garbage Collection feature will resolve issues like this.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.jms.TopicPublisher is not announced via Advisory Topic,AMQ-2773,12483624,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,felixehm,felixehm,10/Jun/10 14:29,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.2,,,,,,,5.6.0,,,Broker,,,,0,"When using a javax.jms.TopicPublisher object over a TopicSession, no ActiveMQ.Advisory.Producer.Topic is created.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jun/10 14:32;felixehm;ProducerAnnouncementTest.java;https://issues.apache.org/jira/secure/attachment/12461736/ProducerAnnouncementTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-07-05 19:48:44.527,,,false,,,,,,,,,,,,,,,,,60029,,,Tue Sep 20 11:01:39 UTC 2011,,,,,,,,"0|i0akfb:",59582,,,,,,,,,,,,,,,,,,,"10/Jun/10 14:32;felixehm;You can use the attached (rudimentary) Test class to test this case. ","05/Jul/11 19:48;tabish;The test case creates a TopicPublisher without an assigned destination, in which case there is no advisory message sent because the broker doesn't know what destination that producer will publish on.  If you assign it a Destination you will get the advisory.  The same is true for a standard producer, if you remove the destination from the createProducer call in the test it won't get an advisory message either.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mix of Persistent and Non-Persistent producers on the same queue breaks producer flow control,AMQ-2703,12483622,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,frbo,frbo,21/Apr/10 12:22,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.0,5.3.1,,,,,,5.6.0,,,,,,,0,"To reproduce this bug I will attach the source of two small test applications:
# ProducerFlowControlTest.java
# FastProducer.java

Both applications connect to a standalone broker on the same machine. For the broker I'm using the default configuration that comes with the 5.3.1 download.

The ProducerFlowControlTest program does two things:
# Read incoming messages from a queue
# Once every 3 seconds: post a message on this incoming queue (from a different thread, so using a different session). Posting is done in a NON_PERSISTENT way.

The FastProducer sends some big text messages to the queue to trigger the 'producer flow control'. It uses PERSISTENT delivery.

After a while this will get stuck and the FastProducer is not able to deliver all its messages.
Instead of seeing something like this in the output:
{noformat}
Received message of size: 47000
Received message of size: 47000
Received message of size: 11
Published message on queue
Received message of size: 47000
Received message of size: 47000
Received message of size: 11
{noformat}

You see this:
{noformat}
Published message on queue
Received message of size: 47000
Received message of size: 47000
Published message on queue
Published message on queue
Published message on queue
Published message on queue
Published message on queue
Published message on queue
...
{noformat}

If you change the delivery of the messages in ProducerFlowControlTest to PERSISTENT, then everything works fine!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Apr/10 12:24;frbo;FastProducer.java;https://issues.apache.org/jira/secure/attachment/12461673/FastProducer.java","21/Apr/10 12:24;frbo;ProducerFlowControlTest.java;https://issues.apache.org/jira/secure/attachment/12461672/ProducerFlowControlTest.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-08-17 19:42:10.194,,,false,,,,,,,,,,,,,,,,,60030,,,Tue Sep 20 11:01:39 UTC 2011,,,,,,,,"0|i0akgv:",59589,,,,,,,,,,,,,,,,,,,"17/Aug/10 19:42;tabish;Can you try against the 5.4.0 release, I've run the apps locally using that release and can't seem to reproduce the problem.","29/Jun/11 21:48;tabish;Unable to reproduce this using current release.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PrefetchSubscription NullPointerException,AMQ-2248,12483730,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,yinghe0101,yinghe0101,12/May/09 20:12,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,Broker,,,,0,"After Master/Slave pair runs for about 5 days. I get one error on the slave. I haven't found the root cause so more investigation is needed.

2009-05-12 15:10:08,827 [ActiveMQ Connection Dispatcher: vm://mb01#6] ERROR org.apache.activemq.broker.ft.MasterBroker - Slave Failed java.lang.NullPointerException
	at org.apache.activemq.broker.region.PrefetchSubscription.processMessageDispatchNotification(PrefetchSubscription.java:167)
	at org.apache.activemq.broker.region.Queue.processDispatchNotification(Queue.java:1467)
	at org.apache.activemq.broker.region.AbstractRegion.processDispatchNotificationViaDestination(AbstractRegion.java:440)
	at org.apache.activemq.broker.region.QueueRegion.processDispatchNotification(QueueRegion.java:77)
	at org.apache.activemq.broker.region.RegionBroker.processDispatchNotification(RegionBroker.java:586)
	at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:202)
	at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:202)
	at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:202)
	at org.apache.activemq.broker.MutableBrokerFilter.processDispatchNotification(MutableBrokerFilter.java:209)
	at org.apache.activemq.broker.TransportConnection.processMessageDispatchNotification(TransportConnection.java:483)
	at org.apache.activemq.command.MessageDispatchNotification.visit(MessageDispatchNotification.java:77)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:320)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:204)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
",Solaris 10 trunk version 771718,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-08 22:11:52.03,,,false,,,,,,,,,,,,,,,,,60036,,,Tue Sep 20 11:01:38 UTC 2011,,,,,,,,"0|i0ah1j:",59034,,,,,,,,,,,,,,,,,,,"08/Jul/11 22:11;tabish;Not enough information to debug or reproduce, need some broker logs with debug turned on.  ","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failing network connectors randomly log SEVERE message : Could not accept connection : java.lang.Object cannot be cast to org.apache.activemq.command.Command,AMQ-1990,12483942,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,justinpitts@gmail.com,justinpitts@gmail.com,30/Oct/08 01:12,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.1.0,,,,,,,5.6.0,,,Broker,,,,1,"I have an application which embeds the broker service. A common deployment scenario is a sometimes-connected network of these applications. Unfortunately, I don't have many situations where I can use discovery, so the network connectors are static configurations. Randomly, when these network connections are unable to connect, I see the following exception trace:

30 Sep 2008 18:36:18 ERROR [ActiveMQ Transport Initiator: vm://instance-2#2] (TransportConnector.java:234) - Could not accept connection : java.lang.Object cannot be cast to org.apache.activemq.command.Command

These errors seem like they might be the result of a race condition during start or stop of a network connector. I will attach a sample application which demonstrates the problem. You may have to run the application a couple times to provoke it.

","Linux, Windows XP, Mac OSX 10.5.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/08 01:15;justinpitts@gmail.com;CouldNotAcceptConnection.java;https://issues.apache.org/jira/secure/attachment/12461903/CouldNotAcceptConnection.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-11-03 15:48:32.829,,,false,,,,,,,,,,,,,,,,,60040,,,Tue Sep 20 11:01:37 UTC 2011,,,,,,,,"0|i0aktb:",59645,,,,,,,,,,,,,,,,,,,"30/Oct/08 01:15;justinpitts@gmail.com;This application demonstrates the issue. Run the application, and observe the SEVERE level log message ""Unable to accept connection""","03/Nov/08 15:48;gtully;Justin,
I put this test in a loop and ran 20 times against trunk but did not see the error message. Have you verified with trunk or a 5.3-SNAPSHOT?
thanks


","03/Nov/08 19:35;justinpitts@gmail.com;I have not verified in anything but 5.1. Our product is currently shipping with 5.1. Should I not expect this issue to be addressed in 5.1?","24/Apr/09 10:25;benoitx;We have this issue with 5.2 and 5.3-snapshot (18 April).

The same application seems to be running ok under XP, OpenSolaris but throws those exceptions at a rate of 1 every minute or so under Ubuntu Server 8.10.

HTH
Benoit.","08/Jul/11 21:47;tabish;Ran the test many times against 5.6-SNAPSHOT did not see the error described.","12/Jul/11 14:24;justinpitts@gmail.com;Can someone point me to a clear, unambiguous statement regarding the policy on versioning and back-porting bugs? At what point does a version become unsupported? So far as I can tell, M.m becomes unsupported the moment M.m+1 is released. This is frustrating because, as I mentioned, we embed the broker in our product, and in the past upgrading minor versions has required significant developer and QA resources to validate. That's a surprise to me.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Annotation error with IBM 1.5 JVM,AMQ-2639,12483686,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,hgomez,hgomez,08/Mar/10 07:27,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.0,,,,,,,5.6.0,,,,,,,1,"When I launch ActiveMQ 5.3.0 with an IBM 1.5.0 JVM I see the following error :

jvm 1    |  INFO | Connector vm://localhost Started
jvm 1    | ERROR | failed Jersey Filter
jvm 1    | java.lang.TypeNotPresentException: Type javax.annotation.PreDestroy not present
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:38)
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getDeclaredAnnotations(AnnotationHelper.java:50)
jvm 1    | 	at com.ibm.oti.reflect.Method.getDeclaredAnnotations(Method.java:31)
jvm 1    | 	at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:722)
jvm 1    | 	at java.lang.reflect.AccessibleObject.getAnnotations(AccessibleObject.java:191)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.hasMetaMethodAnnotations(AnnotatedMethod.java:269)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.hasAnnotations(AnnotatedMethod.java:262)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.findAnnotatedMethod(AnnotatedMethod.java:232)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.findAnnotatedMethod(AnnotatedMethod.java:218)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.<init>(AnnotatedMethod.java:109)
jvm 1    | 	at com.sun.jersey.core.reflection.MethodList.<init>(MethodList.java:75)
jvm 1    | 	at com.sun.jersey.core.reflection.MethodList.<init>(MethodList.java:57)
jvm 1    | 	at com.sun.jersey.server.impl.modelapi.annotation.IntrospectionModeller.createResource(IntrospectionModeller.java:108)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.getAbstractResource(WebApplicationImpl.java:400)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.processRootResources(WebApplicationImpl.java:800)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.initiate(WebApplicationImpl.java:645)
jvm 1    | 	at com.sun.jersey.spi.spring.container.servlet.SpringServlet.initiate(SpringServlet.java:97)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer$InternalWebComponent.initiate(ServletContainer.java:242)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.WebComponent.load(WebComponent.java:455)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.WebComponent.init(WebComponent.java:178)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:281)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:613)
jvm 1    | 	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:589)
jvm 1    | 	at org.mortbay.jetty.servlet.Context.startContext(Context.java:139)
jvm 1    | 	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
jvm 1    | 	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
jvm 1    | 	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
jvm 1    | 	at org.mortbay.jetty.Server.doStart(Server.java:222)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.xbean.JettyFactoryBean.run(JettyFactoryBean.java:47)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(AccessController.java:214)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:811)
jvm 1    | Caused by: 
jvm 1    | java.lang.ClassNotFoundException: javax.annotation.PreDestroy
jvm 1    | 	at java.lang.Class.forNameImpl(Native Method)
jvm 1    | 	at java.lang.Class.forName(Class.java:163)
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:33)
jvm 1    | 	... 78 more
jvm 1    | ERROR | Failed startup of context org.mortbay.jetty.webapp.WebAppContext@4fb04fb0{/camel,file:/home/apache-activemq-5.3.0/webapps/camel/}
jvm 1    | java.lang.TypeNotPresentException: Type javax.annotation.PreDestroy not present
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:38)
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getDeclaredAnnotations(AnnotationHelper.java:50)
jvm 1    | 	at com.ibm.oti.reflect.Method.getDeclaredAnnotations(Method.java:31)
jvm 1    | 	at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:722)
jvm 1    | 	at java.lang.reflect.AccessibleObject.getAnnotations(AccessibleObject.java:191)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.hasMetaMethodAnnotations(AnnotatedMethod.java:269)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.hasAnnotations(AnnotatedMethod.java:262)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.findAnnotatedMethod(AnnotatedMethod.java:232)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.findAnnotatedMethod(AnnotatedMethod.java:218)
jvm 1    | 	at com.sun.jersey.core.reflection.AnnotatedMethod.<init>(AnnotatedMethod.java:109)
jvm 1    | 	at com.sun.jersey.core.reflection.MethodList.<init>(MethodList.java:75)
jvm 1    | 	at com.sun.jersey.core.reflection.MethodList.<init>(MethodList.java:57)
jvm 1    | 	at com.sun.jersey.server.impl.modelapi.annotation.IntrospectionModeller.createResource(IntrospectionModeller.java:108)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.getAbstractResource(WebApplicationImpl.java:400)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.processRootResources(WebApplicationImpl.java:800)
jvm 1    | 	at com.sun.jersey.server.impl.application.WebApplicationImpl.initiate(WebApplicationImpl.java:645)
jvm 1    | 	at com.sun.jersey.spi.spring.container.servlet.SpringServlet.initiate(SpringServlet.java:97)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer$InternalWebComponent.initiate(ServletContainer.java:242)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.WebComponent.load(WebComponent.java:455)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.WebComponent.init(WebComponent.java:178)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:281)
jvm 1    | 	at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:613)
jvm 1    | 	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:589)
jvm 1    | 	at org.mortbay.jetty.servlet.Context.startContext(Context.java:139)
jvm 1    | 	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)
jvm 1    | 	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:510)
jvm 1    | 	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
jvm 1    | 	at org.mortbay.jetty.Server.doStart(Server.java:222)
jvm 1    | 	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)
jvm 1    | 	at org.mortbay.jetty.xbean.JettyFactoryBean.run(JettyFactoryBean.java:47)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
jvm 1    | 	at java.security.AccessController.doPrivileged(AccessController.java:214)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:618)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:811)
jvm 1    | Caused by: 
jvm 1    | java.lang.ClassNotFoundException: javax.annotation.PreDestroy
jvm 1    | 	at java.lang.Class.forNameImpl(Native Method)
jvm 1    | 	at java.lang.Class.forName(Class.java:163)
jvm 1    | 	at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:33)
jvm 1    | 	... 78 more


I didn't see such behaviour with an IBM 1.6.0 JVM or Sun 1.5.0 / 1.6.0.
Some of our futur ActiveMQ targets platform will only have IBM 1.5.0 JVM and couldn't be upgraded to IBM 1.6.0 for a while.

Regards

","Linux Suse SLES 10, IBM 1.5 0-SR11 JVM ",norman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-14 13:02:15.322,,,false,,,,,,,,,,,,,,,,,60043,,,Tue Sep 20 11:01:37 UTC 2011,,,,,,,,"0|i0akjz:",59603,,,,,,,,,,,,,,,,,,,"14/Oct/10 13:02;norman;You can add the following jar to the classpath as workaround :

http://mirrors.ibiblio.org/pub/mirrors/maven2/org/apache/geronimo/specs/geronimo-annotation_1.1_spec/1.0.1/geronimo-annotation_1.1_spec-1.0.1.jar

","26/Jan/11 19:09;norman;maybe the activemq devs should just add it to the classpath as default. It does not hurt even on sun jdk.. wdyt ?","01/Jul/11 21:28;tabish;ActiveMQ now requires JDK 1.6.  Reopen if still an issue with latest versions","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expired Messages appear through policy entry on the DLQ and are also processed from the main Queue,AMQ-2373,12483638,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,amaharaj,amaharaj,03/Sep/09 12:27,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,,,,,0,"Hi,

We have a policy entry like this:

<destinationPolicy>
                <policyMap>
                                 <policyEntries>
                                                  <policyEntry queue="">"" memoryLimit=""10mb"">
                                                                  <deadLetterStrategy>     
                                                                                <individualDeadLetterStrategy queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />     
                                                                </deadLetterStrategy>     
                                                  </policyEntry>
                                                  <policyEntry topic="">"" memoryLimit=""10mb"">
                                                  </policyEntry>
                                 </policyEntries>
                </policyMap>
</destinationPolicy>

Messages sent with an expiry time of 10 seconds appear on the Dead Letter Queue.

However, if a Message Driven Bean ultimately picks up the message from the main queue in a transaction and the transaction is slow, the message can expire while the transaction is in progress.

This leads to a situation where the message is processed twice, implying that the queue processing is not atomic.
                        - The main MDB completes processing, 
                        - The expired message is moved to the DLQ 
                        - The MDB listening to the Dead Letter Queue also processes a response.

Utlimately, responses for the expired message and for the in flight message are both generated.  Neither operation reports any exceptions.

The MDB's are simple, vanilla MDB's using Apache Geronimo 2.1.4 and referring to a separate ActiveMQ 5.2 installation (not the 4.1 shipped with Geronimo).

",,amaharaj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-25 16:03:49.554,,,false,,,,,,,,,,,,,,,,,60042,,,Tue Sep 20 11:01:37 UTC 2011,,,,,,,,"0|i0akov:",59625,,,,,,,,,,,,,,,,,,,"25/Aug/11 16:03;tabish;Need a test case to demonstrate the nature of this issue before it can be investigated further.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interrupting Consumer.close() thread puts queue into unusable state,AMQ-2648,12483724,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,parasoft,parasoft,12/Mar/10 18:01,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,JMS client,,,,0,"We have built a client program for sending and receiving JMS messages. Each send/receive operation is performed in a thread, so that we can handle timeouts properly. However, if the thread which is performing the receive() gets interrupted, the queue no longer responds to receive() requests, even from another client with a separate JVM.

To reproduce, use two separate programs:
-----------[QueueSendReceiveActiveMQInterrupt.java]--------
import java.util.*;
import javax.jms.*;
import javax.naming.*;

public class QueueSendReceiveActiveMQInterrupt implements MessageListener {

    public static void main(String[] args) throws Exception {
        useConnectionFactory();
    }
    private static void useConnectionFactory() throws Exception, JMSException {
        ConnectionFactory factory = getConnectionFactoryUsingJNDI();
        Connection connect = null;
        Session session = null;
        connect = factory.createConnection(/*""Admin"", ""Admin""*/);
        session = connect.createSession(false, Session.AUTO_ACKNOWLEDGE);
        Destination entryDest = session.createQueue(""soatest.demo.queue"");
        Destination exitDest = entryDest;
        MessageProducer producer = session.createProducer(entryDest);
        producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
        MessageConsumer consumer = session.createConsumer(exitDest);
        connect.start();
        TextMessage txtMessage = session.createTextMessage();
        txtMessage.setJMSReplyTo(exitDest);
        txtMessage.setText(""Hello 1 from standalone program!"");
        producer.send(txtMessage);
        System.out.println(""message 1 sent"");
        Message msg;
        
        // threaded receive with a kill
        ReceiverRunner runner = (new QueueSendReceiveActiveMQInterrupt()).new ReceiverRunner(consumer);
        Thread t = new Thread(runner);
        t.setDaemon(true);
        t.start();
        t.join(1000);
        t.interrupt();
        msg = runner.getMessage();
        if (msg != null) {
            System.out.println(""msg 1 received: "" + ((TextMessage)msg).getText());
        } else {
            System.out.println(""got no message 1"");
        }
        
        producer.close();
//        consumer.close();
//        session.close();
//        connect.close();
    }
    private static ConnectionFactory getConnectionFactoryUsingJNDI() throws Exception {
        Object ret = null;
        Properties props = new Properties();
        props.put(javax.naming.Context.PROVIDER_URL, ""tcp://skynet:61616"");
        props.put(javax.naming.Context.INITIAL_CONTEXT_FACTORY, ""org.apache.activemq.jndi.ActiveMQInitialContextFactory"");
        InitialContext ictx = new javax.naming.InitialContext(props);
        Object obj = ictx.lookup(""QueueConnectionFactory"");
        if (obj instanceof Reference) {
            Reference ref = (Reference)obj;
            String className = ref.getClassName();
            System.out.println(""Connection factory class name: "" + className);
            Class cls = Class.forName(className);
            ret = cls.newInstance();
        } else {
            ret = obj;
        }
        ictx.close();
        return (ConnectionFactory)ret;
    }
    public void onMessage(Message msg) {
        if (msg != null) {
            try {
                System.out.println(""msg = "" + ((TextMessage)msg).getText());
            } catch (JMSException e) {
                e.printStackTrace();
            }
        } else {
            System.out.println(""got nothing"");
        }
    }
    public class ReceiverRunner implements Runnable {
        private MessageConsumer consumer;
        private Message msg;
        
        public ReceiverRunner(MessageConsumer consumer) {
            this.consumer = consumer;
        }
        public void run() {
            try {
                msg = consumer.receive(500);
                // change the following to a very small amount like 500 and notice how everything works
                consumer.receive(10000); // another receive just so it blocks and get the thread to stop
            } catch (JMSException e) {
                e.printStackTrace();
            } finally {
                try {
                    consumer.close();
                } catch (JMSException e) {
                    e.printStackTrace();
                }
            }
        }
        public Message getMessage() {
            return msg;
        }
    }
}
--
-----------[QueueSendReceiveActiveMQ.java]--------
import java.util.*;
import javax.jms.*;
import javax.naming.*;

public class QueueSendReceiveActiveMQ implements MessageListener {

    public static void main(String[] args) throws Exception {
        useConnectionFactory();
    }
    private static void useConnectionFactory() throws Exception, JMSException {
        ConnectionFactory factory = getConnectionFactoryUsingJNDI();
        Connection connect = null;
        Session session = null;
        connect = factory.createConnection(/*""Admin"", ""Admin""*/);
        session = connect.createSession(false, Session.AUTO_ACKNOWLEDGE);
        Destination entryDest = session.createQueue(""soatest.demo.queue"");
        Destination exitDest = entryDest;
        MessageProducer producer = session.createProducer(entryDest);
        producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
        MessageConsumer consumer = session.createConsumer(exitDest);
        connect.start();
        TextMessage txtMessage = session.createTextMessage();
        txtMessage.setJMSReplyTo(exitDest);
        txtMessage.setText(""without thread interrupt: Hello 1 from standalone program!"");
        producer.send(txtMessage);
        System.out.println(""without thread interrupt: message 1 sent"");
        Message msg;
        // regular receive
        msg = consumer.receive(2000);
        
        if (msg != null) {
            System.out.println(""msg 1 received: "" + ((TextMessage)msg).getText());
        } else {
            System.out.println(""without thread interrupt: got no message 1"");
        }
        
        producer.close();
        consumer.close();
        session.close();
        connect.close();
        
    }
    private static ConnectionFactory getConnectionFactoryUsingJNDI() throws Exception {
        Object ret = null;
        Properties props = new Properties();
        props.put(javax.naming.Context.PROVIDER_URL, ""tcp://skynet:61616"");
        props.put(javax.naming.Context.INITIAL_CONTEXT_FACTORY, ""org.apache.activemq.jndi.ActiveMQInitialContextFactory"");
        InitialContext ictx = new javax.naming.InitialContext(props);
        Object obj = ictx.lookup(""QueueConnectionFactory"");
        if (obj instanceof Reference) {
            Reference ref = (Reference)obj;
            String className = ref.getClassName();
            System.out.println(""Connection factory class name: "" + className);
            Class cls = Class.forName(className);
            ret = cls.newInstance();
        } else {
            ret = obj;
        }
        ictx.close();
        return (ConnectionFactory)ret;
    }

    public void onMessage(Message msg) {
        if (msg != null) {
            try {
                System.out.println(""msg = "" + ((TextMessage)msg).getText());
            } catch (JMSException e) {
                e.printStackTrace();
            }
        } else {
            System.out.println(""got nothing"");
        }
    }
}
--

1) Run QueueSendReceiveActiveMQ alone, notice how it works in sending receiving messages from the queue.
2) Run QueueSendReceiveActiveMQInterrupt will result in the program halting (due to some non-daemon thread created by ActiveMQ), then while it is running run QueueSendReceiveActiveMQ and notice how it fails to retrieve messages from the queue. If JMS Consumer.close() is excuted in a thread that is interrupted, it fails and throws an exception and leaves the consumer in some bad state.

Note that the same code does not exhibit this behavior when using other vendors' MQ solutions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-12 19:54:08.374,,,false,,,,,,,,,,,,,,,,,60039,,,Tue Sep 20 11:01:37 UTC 2011,,,,,,,,"0|i0ah0f:",59029,,,,,,,,,,,,,,,,,,,"12/Jul/11 19:54;tabish;Running the provided test the message is received and the connection is shut down when the receive call is interrupted, the program exists normally. ","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Automatic message expiration may not occur on a queue with no (or slow) consumers.,AMQ-2552,12483590,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,stirlingc,stirlingc,29/Dec/09 00:20,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.1,,,,,,,5.6.0,,,Broker,,,,0,"Symptom
========
If a queue is loaded with 400+ messages that never expire, and then a message that does expire is added to the end of the queue, the added message will not be processed by the Broker's expiration logic until some of the 400+ unexpired messages are consumed.  A unit test is provided to demonstrate this issue.

These test cases worked for AMQ 5.3, but not for AMQ 5.3.1-SNAPSHOT r893661.

Motivation
========
Our application uses message expiration to trigger actions when messages are left in a queue for too long a period.  In many cases, there are no consumers on the queue containing the messages that might expire.  Prior versions of AMQ only expired messages when an attempt was made to dispatch them to a consumer, but AMQ-1112 introduced the notion of periodic, automatic expiration of pending messages (see the expireMessagesPeriod policy).  With this periodic expiration, our expectation is that expired messages will be detected and processed in a timely fashion, regardless of the presence of consumers on the queue.

Cause
======
AMQ-2481 removed forced paging from the periodically-called expireMessages() method:

>>
        doBrowse(true, browsedMessages, this.getMaxExpirePageSize());
<<
        doBrowse(browsedMessages, this.getMaxExpirePageSize());

The purpose of the change was to limit the number of messages that would be paged into memory from the message store.  The side effect is that only the first 400 messages in the queue are ever inspected by expireMessages().  If these 400 messages do not contain the messages that are expiring and there are no active consumers to move the expiring messages forward, then expiration will never occur.  With AMQ 5.3, successive calls to expireMessages() would eventually pull all messages into the page so they could be checked for expiration.

It should also be noted that the test cases can be modified so there is a consumer (with a selector that doesn't choose any of the messages), and they still fail showing that the issue is not purely the result of having *no* consumers.

Resolution
=========
I don't think the browse idiom works very well for the automated expiration task.  It was my initial assumption (and expectation) that the expireMessagesPeriod task would process *all* expired messages in the queue *each time* the task fired.  A related issue to limiting the number of messages that are examined during each expiration task is that expiring messages at the end of the queue will not be handled in a timely fashion since they must wait for multiple firings of the expiration task (this is on 5.3 code; 5.3.1 code will never get to those messages).

If the desire/need is to scan all messages to determine which have expired, the existing paging strategy is limited because it would require all messages to be brought from store into memory, thus defeating the whole point of paging.  An alternative might be to have a sliding page window that would allow batches of messages to be brought in while clearing out the previous batch.

Another solution might be to have the expiration task page in directly from the store, but this is problematic since non-persistent messages would still have to come in from the pending message cursor.  In addition, a complete scan of the store might be non-performant for large queues.

I think the most satisfactory solution for minimizing unnecessary processing and providing timely expiration of messages is to implement a proper heap that indexes messages with expiration values and allows immediate access to *only* the messages that have expired.  The references to these expired messages could then be used to remove the messages directly from the cursors and the store rather than having to iterate over these structures.
",ActiveMQ 5.3.1 Snapshot r893661,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Dec/09 00:32;stirlingc;AMQTest.java;https://issues.apache.org/jira/secure/attachment/12461376/AMQTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-01-04 17:29:28.196,,,false,,,,,,,,,,,,,,,,,60046,,,Tue Sep 20 11:01:36 UTC 2011,,,,,,,,"0|i0akl3:",59608,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"29/Dec/09 00:32;stirlingc;Unit test demonstrating how an expiring message at the end of a queue may never get processed.","04/Jan/10 17:29;gtully;Have you played with maxExpirePageSize > 400, the intent is that a larger value of this will force the browse to examine more than a page full of messages but will not keep them in memory. 
The problem of timely processing of messages at the end of the queue is still an issue though.
It may be possible to remember the last checked message id and implement a moving window on subsequent processing. That would require support in the cursor for setting that start point which is not currently exposed. It is there under the covers though so it is worth a look. The down side is that it will kill performance (in the case of concurrent dispatch) as it will lock the cursor. 

btw: I agree that the browse idiom is not ideal but it is consistent with existing cursor usage. The main difficulty in a ideal solution is synchronization with message dispatch and acking. For that reason, I think 6.0 is the place for the ideal solution.","11/Aug/11 19:40;tabish;The Apollo project implements a store that allows for this to work as described.  ","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timestamp Order,AMQ-2641,12483737,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ggvv25,ggvv25,08/Mar/10 18:28,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.0,,,,,,,5.6.0,,,Broker,,,,0,"Hi all,
II have 10 producers, 1 consumer and 1 broker activemq.
Producers send 1 message in the same time in a queue.
The problem is that the timestamp order I visualize in the manager (http://localhost:8161/admin) is incorrect and so messages order is wrong.
How can I solve the problem?

Best regards,
Vincenzo

",Linux 64bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-03-08 18:37:52.09,,,false,,,,,,,,,,,,,,,,,60045,,,Tue Sep 20 11:01:36 UTC 2011,,,,,,,,"0|i0akjr:",59602,,,,,,,,,,,,,,,,,,,"08/Mar/10 18:37;tjsnell;Timestamps are set on the client. Are you sure the clocks on the producer machines are synced? 

If you have no control over the client machines you could use the timestamp plugin

http://activemq.apache.org/timestampplugin.html","08/Mar/10 18:46;bsnyder;Timestamps are not used for sorting the visual order of messages in the web console. ","08/Mar/10 21:06;ggvv25;Thanks Trace and Bruce.
I have already used timestampplugin but the problem is the same.
Bruce, what is the role played by Timestamps of a message?

When the only consumer consumes a message it records in database table the message and the timestamp associate with it (behalf      Message.getJMSTimestamp ()) and I think: If i order by timestamp the records in the table, I obtain the same message order as it was in the queue.
I want to preserve the order behalf timestamp setted by the broker.
 
Is it possible? Or I have to solve in another way?

Thanks in advance.

Vincenzo","08/Mar/10 23:20;bsnyder;The web consolejust uses JMX and a queue browser to look into the broker to get a peek at the messages at that particular instant. The web console is not concerned with order of the messages and is completely separate from message consumption. 

Are you seeking to consume the messages in the order that they were received by the broker? If so, check out [total ordering with the strict order dispatch policy|http://activemq.apache.org/total-ordering.html]. That is a broker feature that must be configured in the {{activemq.xml}}. It will not affect the display of messages in the web console, only the order in which messages are dispatched to the a consumer subscription. ","09/Jul/11 21:30;tabish;This doesn't appear to be a problem, just a lack of configuration for the desired results.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Apache Camel Activemq component does not allow use of ""consumer.retroactive=true""",AMQ-2846,12482673,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,futant23,futant23,22/Jul/10 13:18,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.2,,,,,,,5.6.0,,,,,,,1,"I am not entirely certain if this belongs here or in Camel, but use of the parameter""...?consumer.retroactive=true"" while using the Activemq component in camel throws the following:

Failed to resolve endpoint: activemq://topic:foo.bar?consumer.retroactive=true due to: There are 1 parameters that couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[{consumer.retroactive=true}]

Excerpt from dsl:
<camelContext xmlns=""http://camel.apache.org/schema/spring"">
		<route>
			<from uri=""activemq:topic:foo.bar?consumer.retroactive=true"" />

It seems odd that this would be left out.
",,futant23,jwatkins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-14 21:56:52.213,,,false,,,,,,,,,,,,,,,,,60048,,,Tue Sep 20 11:01:36 UTC 2011,,,,,,,,"0|i0akdz:",59576,,,,,,,,,,,,,,,,,,,"22/Jul/10 17:10;futant23;Initial indications seem to suggest this might work.

<bean id=""jmsFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
		<property name=""brokerURL"">
			<value>failover://(tcp://localhost:61616)</value>
		</property>	
		<property name=""useRetroactiveConsumer"">
			<value> true </value>
		</property>	
	</bean>


Still it would be better (IMO) that this be able to use as suggested above as a parameter.

-Brian
","14/Sep/11 21:56;tabish;Duplicate of AMQ-3498.  Fixed","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-core activeio-core test-jar,AMQ-2211,12483715,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,finn,finn,17/Apr/09 13:18,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.1.0,,,,,,,5.6.0,,,,,,,1,"activemq-core has the following 2 dependecies to activeio-core:

    <dependency>
      <groupId>${pom.groupId}</groupId>
      <artifactId>activeio-core</artifactId>
      <optional>false</optional>
    </dependency>
...

    <dependency>
      <groupId>${pom.groupId}</groupId>
      <artifactId>activeio-core</artifactId>
      <optional>false</optional>
      <type>test-jar</type>
    </dependency>


The <type>test-jar</type>dependency should also be <scope>test</test>. With the current setting, you get the test-jar bundled (transitively) when including activemq-core. 

Correct me if i'm wrong...",,bsnyder,wguttmn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-12-10 19:33:19.14,,,false,,,,,,,,,,,,,,,,,60051,,,Tue Sep 20 11:01:35 UTC 2011,,,,,,,,"0|i0akrb:",59636,,,,,,,,,,,,,,,,,,,"17/Apr/09 13:20;finn;The activeio-core test-jar bundles a log4j.properties which made our application log to output to /target/test.log. This is what got us chasing this test-jar today.","10/Dec/09 19:33;wguttmn;Even worse, the second (test) dependency causes some ugly behaviour with log4j initialization in our environment, as it contains a {{log4j.properties}} file. When ''introduced'' into a web container in our case, you start relying on the sequence of how JARs are loaded. In our case, this {{log4j.properties}} unfortunately initialized log4j in such a way that our project logging settings never were applied, as the ones from activeio-core had been picked up before. And that made it hard for us - during a functional testing period - to diagnose problems we had as we lost parts of our logging messages.

Personally, I consider this to be reason enough to ship a new Maven release that fixes this, especially as the fix is easy to apply. And yes, I know there's a work-around.","01/Jul/11 20:45;tabish;Current pom has the scope option for test.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not able to receive messages using 'http' (transportConnector) connection,AMQ-2060,12483664,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,s.rakesh,s.rakesh,12/Jan/09 11:30,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,Connector,,,,0,"I am trying to use http transportConnector to send and receive messages. I am able to send messages over a http connection but not able to receive messages over http connection. 
I am getting the following warning in the ActiveMQ console:

WARN  ManagedTransportConnection     - Failed to register MBean: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=http,ViewType=address,Name=blockingQueue ",windows,s.rakesh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-08 21:56:04.085,,,false,,,,,,,,,,,,,,,,,60050,,,Tue Sep 20 11:01:35 UTC 2011,,,,,,,,"0|i0akt3:",59644,,,,,,,,,,,,,,,,,,,"08/Jul/11 21:56;tabish;No test case given to allow the issue to be reproduced.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageProducer hangs when using many concurrent sessions,AMQ-2294,12483653,12483255,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pungaa,pungaa,17/Jun/09 18:32,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,Broker,JMS client,,,0,"If you create a client (producer) that creates 25 non-transacted sessions and concurrently starts sending messages. The producer will hang after sending exactly 2560 1K messages. 

This behavior is very easily reproducible.





",I am using the default activemq.xml config. tested and reproduced on both windows and linux machines,jly,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/09 19:57;pungaa;Consumer_ThreadDump.txt;https://issues.apache.org/jira/secure/attachment/12461544/Consumer_ThreadDump.txt","17/Jun/09 18:34;pungaa;Producer_ThreadDump.txt;https://issues.apache.org/jira/secure/attachment/12461545/Producer_ThreadDump.txt","17/Jun/09 18:34;pungaa;ServerDebugLog_ThreadDump.txt;https://issues.apache.org/jira/secure/attachment/12461543/ServerDebugLog_ThreadDump.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2009-06-17 19:04:13.98,,,false,,,,,,,,,,,,,,,,,60049,,,Tue Sep 20 11:01:35 UTC 2011,,,,,,,,"0|i0akq7:",59631,,,,,,,,,,,,,,,,,,,"17/Jun/09 18:34;pungaa;The client seems to hang at org.apache.activemq.transport.FutureResponse.getResult()

   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x03fc6578> (a java.util.concurrent.locks.Abstra
ctQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject
.await(AbstractQueuedSynchronizer.java:1925)
        at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:
317)
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse
.java:40)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorr
elator.java:80)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnect
ion.java:1233)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1659)
        - locked <0x0454b128> (a java.lang.Object)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProdu
cer.java:227)
        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessa
geProducerSupport.java:269)
        at perf.harness.ProducerObj.sendMsg(ProducerObj.java:317)
        at perf.harness.ProducerObj.run(ProducerObj.java:237)
        at java.lang.Thread.run(Thread.java:619)
","17/Jun/09 19:04;bsnyder;You indicated that you're using the default configuration which limits the size of all queues and topics to 5mb and, by default in ActiveMQ, [producer flow control|http://activemq.apache.org/producer-flow-control.html] is enabled. So either the destination to which you're sending has filled up or the has flow control kicked in and paused the producers. Chances are this is the producer flow control. ","17/Jun/09 19:37;pungaa;I did not mention that I have 25 Message Consumers also listening on the same queue. So there is no reason for the producers to hang as eventually the producers and consumers should achieve equilibrium message rate. The problem persists even after killing the producers and consumers and restarting the consumers. ","17/Jun/09 19:53;bsnyder;The consumers and/or producers are not sharing a {{Session}} object are they? ","17/Jun/09 19:57;pungaa;No, The producer, server and consumer are all running on separate machines.","17/Jun/09 19:57;pungaa;Consumer Thread Dump is attached as well","17/Jun/09 20:26;bsnyder;This could still be the broker invoking the producer flow control because the consumers are either not consuming messages are are too slow. Are the consumers actually consuming messages? If so, are they actually acknowledging messages? Please attach the code for your consumers. ","20/Jun/09 20:08;pungaa;I am using DUPS_OK_ACKNOWLEDGE acknowledgement mode and I explicitly call acknowledge() only if the Acknowledge Mode is CLIENT_ACKNOWLEDGE. 

This works ok if there is only 1 consumer on the queue. If I create multiple consumers I start to see the hang with Acknowledge Mode AUTO_ACKNOWLEDGE and DUPS_OK_ACKNOWLEDGE.

Here is the code:

public void onMessage ( Message aMessage )
	{
		try
		{
			if(aMessage != null)
			{
				System.out.println(""received message"" + aMessage);
				if (session.getTransacted())
				{
						try
						{
							session.commit();
						}catch(JMSException jmse)
						{
							System.err.println(""Error committing transaction....see trace for more details"");
							jmse.printStackTrace();
						}
					}
				}
				else
				{
					if (session.getAcknowledgeMode() == Session.CLIENT_ACKNOWLEDGE)
						aMessage.acknowledge();
				}
		}catch (Exception e)
		{
			e.printStackTrace();
		}
	}
","20/Jun/09 21:21;pungaa;Confirmed that this is only a problem with DUPS_OK_ACKNOWLEDGE and multiple sessions","29/Jun/11 14:47;tabish;Need a test case to help reproduce this, reopen if its still an issue","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expired messages not being removed from the queue,AMQ-2126,12483558,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,teamhiro,teamhiro,18/Feb/09 13:46,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,,,,,2,"Expired messages are not being removed from the queue.

To reproduce this do the following:
1. Put a load of messages on a queue with a very short time to live.
2. Wait for a bit longer than the time to live then try to consume messsages from the queue - There will be no messages received as the messages have expired, this is correct behavior
3. Now connect jConsole and inspect the queue, and the queue count is not zero, all the expired messages are still in the queue.
 ",MacOS 10.5 & Solaris 10,bdarfler,mlukica,teamhiro,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-04-13 22:14:37.624,,,false,,,,,,,,,,,,,,,,,60055,,,Tue Sep 20 11:01:34 UTC 2011,,,,,,,,"0|i0aks7:",59640,,,,,,,,,,,,,,,,,,,"13/Apr/09 22:14;bdarfler;If I look at the queue page with the web console it will expire the message and put it in the DLQ but if I just load the main queues page the message will stay in the original queue.","29/Jun/11 14:35;tabish;Automatic removal of expired messages was implemented in 5.3.0","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ5.2 - Some listeners stopped getting messages. Even after restart of the broker/client the messages were not getting picked. Then we stopped ActiveMQ 5.2 and started Active mq 4.1 (we migrated some one week back) and then client and it worked,AMQ-2362,12483609,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kush.srivastava,kush.srivastava,22/Aug/09 22:56,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,Broker,,,,0,"This seems to be a very wierd issue which came on the production env.

Set up- we are using one broker which is in our inside zone and many producers and consumers started in different applications,both in the internal zone and in the DMZ, to connect to the broker.

We were using 4.1 active mq till last week on our production enviornment and were having some issues with the number of connections sometimes were getting increased and hence after quite a bit of testing we tried to move to the 5.2 active mq. So we migrated on Monday 17Aug at around 0500 hours IST and it worked fine till Friday 0840 hours IST and after that some listeners stopped working. The consumers were showing connected but they were not receiving any message from the broker. At the same time we saw some exception like this in the broker (please note - we used journal with jdbc)
--------------------------------------------------------
:23 JournalPersistenceAdapter - Failed to mark the Journal: org.apache.activeio.journal.InvalidRecordLocationException: The
location is less than the last mark.
 org.apache.activeio.journal.InvalidRecordLocationException: The location is less than the last mark.
       at org.apache.activeio.journal.active.JournalImpl.setMark(JournalImpl.java:340)
      at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:416)
       at org.apache.activemq.store.journal.JournalPersistenceAdapter$1.iterate(JournalPersistenceAdapter.java:121)
       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
       at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
       at java.lang.Thread.run(Unknown Source)
---------------------------------------------------------------------------------------------------------

We then restarted the broker a few times (even deleted the journal and the mesasges from DB as we did not wanted to process old messages in the system) and then this started working. Now a problem of duplicate messages started coming and checking for the net we got one fuse solution..""5.2.0.1-fuse"" and we patched this release at around 1730 Hours Friday 21 Aug IST. Also for checking purpose we also changed our persistent strategy to AMP
using the following 
<persistenceAdapter>
            <amqPersistenceAdapter syncOnWrite=""false"" directory=""./activemq-data"" maxFileLength=""100 mb""/>
        </persistenceAdapter>
        
. This worked fine (note- with considerable better performance) till around 2345 hours Friday 21 Aug IST and then again we started facing the same read location issue and our listeners stopped getting message. (Please note - Not all the listeners stopped. Somehow only the listeners in the DMZ zone stopped. In the same application the producers (based on the pooled connection factory) were working fine. Again in the broker the same error was being seen
-------------------------------------------------------------------------------------------------------------
:23 JournalPersistenceAdapter - Failed to mark the Journal: org.apache.activeio.journal.InvalidRecordLocationException: The
location is less than the last mark.
 org.apache.activeio.journal.InvalidRecordLocationException: The location is less than the last mark.
       at org.apache.activeio.journal.active.JournalImpl.setMark(JournalImpl.java:340)
      at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:416)
       at org.apache.activemq.store.journal.JournalPersistenceAdapter$1.iterate(JournalPersistenceAdapter.java:121)
       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
       at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
       at java.lang.Thread.run(Unknown Source)
------------------------------------------------------------------------------------------------------------------------------------------------

Now we tried to restart the broker but we got some OOM issues - probably because of the Amq persistence Adapter and hence we reverted back to our normal journal and jdbc approach and started the broker. Our listener then connected fine and started working. This was around 0300hours IST on Saturday 22 Aug. It worked fine perfectly till about Saturday 22 Aug 2345 hours IST when again we started seeing the following errors in the broker

----------------------------------------------------------------------------------------------------------------------------------------------
 [ERROR] 00:12:22 JournalPersistenceAdapter - Failed to mark the Journal: org.apache.activeio.journal.InvalidRecordLocationException: The location is less than the last mark.
INFO   | jvm 1    | 2009/08/23 00:12:23 | org.apache.activeio.journal.InvalidRecordLocationException: The location is less than the last mark.
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activeio.journal.active.JournalImpl.setMark(JournalImpl.java:340)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:416)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activemq.store.journal.JournalPersistenceAdapter$1.iterate(JournalPersistenceAdapter.java:121)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at java.lang.Thread.run(Unknown Source)
INFO   | jvm 1    | 2009/08/23 00:12:23 | [ERROR] 00:12:23 JournalPersistenceAdapter - Failed to mark the Journal: org.apache.activeio.journal.InvalidRecordLocationException: The location is less than the last mark.
INFO   | jvm 1    | 2009/08/23 00:12:23 | org.apache.activeio.journal.InvalidRecordLocationException: The location is less than the last mark.
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activeio.journal.active.JournalImpl.setMark(JournalImpl.java:340)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:416)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activemq.store.journal.JournalPersistenceAdapter$1.iterate(JournalPersistenceAdapter.java:121)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
INFO   | jvm 1    | 2009/08/23 00:12:23 |       at java.lang.Thread.run(Unknown Source)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

and again our listeners stopped picking up messages. Now again we tried to restart the broker and then the client but to no avail. Even we tried to put the broker on the debug mode (logging) and see if we get any errors but none were seen. By the ways the listener did not started picking up the message. So in such desparate situations we tried the following things
a) Restarting broker and client again and again - but to no avail
b) change back to Amq persistent stragtegy but again to no avail - we got this log in the broker log file
-------------------------------------
INFO   | jvm 1    | 2009/08/23 02:36:01 | [ERROR] 02:36:01 AbstractStoreCursor - Failed to fill batch
INFO   | jvm 1    | 2009/08/23 02:36:01 | java.io.IOException: Failed to read to journal for: offset = 692, file = 1, size = 0, type = 0. Reason: java.io.IOException: Invalid location: offset = 692, file = 1, size = 0, type = 0, : java.lang.NegativeArraySizeException
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:647)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:533)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:435)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:120)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:533)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:227)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:100)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1179)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:237)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:275)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:372)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:541)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at java.lang.Thread.run(Unknown Source)
INFO   | jvm 1    | 2009/08/23 02:36:01 | Caused by: java.io.IOException: Invalid location: offset = 692, file = 1, size = 0, type = 0, : java.lang.NegativeArraySizeException
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.kaha.impl.async.DataFileAccessor.readRecord(DataFileAccessor.java:94)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:624)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:530)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 ... 29 more
INFO   | jvm 1    | 2009/08/23 02:36:01 | [ERROR] 02:36:01 AbstractStoreCursor - Failed to fill batch
INFO   | jvm 1    | 2009/08/23 02:36:01 | java.lang.RuntimeException: java.io.IOException: Failed to read to journal for: offset = 692, file = 1, size = 0, type = 0. Reason: java.io.IOException: Invalid location: offset = 692, file = 1, size = 0, type = 0, : java.lang.NegativeArraySizeException
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:230)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:100)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1179)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:237)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:275)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:372)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:541)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
INFO   | jvm 1    | 2009/08/23 02:36:01 |                 
----------------------------------------------------------------------------------

Now it was around 0300 hours on Sunday 23 Aug IST and we were loosing time. So just in some silly mind we tried to revert back to 4.1 Active mq leaving other things untouched..And to a matter of disbeleif it started working. And the listeners started picking up messages (Even old one from the DB were picked  - whcih means 5.2 is backward compliant as well) and it worked fine.

We are now seriously considering not to take any change with any other version of Active MQ other than 4.1. Please advice if we are doing somehting wrong here. Also i am attaching both my activemq.xml from 5.2 and 4.1




","linux 32 bit -2.6.18-92.el5 i686 i686 i386 GNU/Linux-, jre1.6.0_10",mchek123,npfistner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-11 19:45:34.998,,,false,,,,,,,,,,,,,,,,,60056,,,Tue Sep 20 11:01:34 UTC 2011,,,,,,,,"0|i0ah13:",59032,,,,,,,,,,,,,,,,,,,"22/Aug/09 23:17;kush.srivastava;would attach the xmls tomorrow..as its not getting attached this time..here is a snippet of those

------------------------------------------------------------------------------------------------------------------------
4.1
    <destinationPolicy>
      <policyMap><policyEntries>
        
          <policyEntry topic=""FOO.>"">
            <dispatchPolicy>
              <strictOrderDispatchPolicy />
            </dispatchPolicy>
            <subscriptionRecoveryPolicy>
              <lastImageSubscriptionRecoveryPolicy />
            </subscriptionRecoveryPolicy>
          </policyEntry>

      </policyEntries></policyMap>
    </destinationPolicy>
  
  
    <persistenceAdapter>
      <!--
       <journaledJDBC journalLogFiles=""5"" dataDirectory=""./activemq-data""/>
       -->
      <!-- To use a different datasource, use the following syntax : -->
      <!-- 
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""../activemq-data"" dataSource=""#postgres-ds""/>
      -->
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""./activemq-data"" dataSource=""#oracle-ds""/>
       
    </persistenceAdapter>
  
    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://brokerIP:60010"" />
    </transportConnectors>
    
----------------------------------------------------------------------------------------------------------------------------
in 5.2

<destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry queue="">"" memoryLimit=""5mb""/>
                    <policyEntry topic="">"" memoryLimit=""5mb"">
                        <dispatchPolicy>
                            <strictOrderDispatchPolicy/>
                        </dispatchPolicy>
                        <subscriptionRecoveryPolicy>
                            <lastImageSubscriptionRecoveryPolicy/>
                        </subscriptionRecoveryPolicy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>
        
        
        

		 <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://bokerIP:60010""/> 
            
        </transportConnectors>

        <persistenceAdapter>
            <journaledJDBC dataDirectory=""./activemq-data"" dataSource=""#oracle-ds""/>
        </persistenceAdapter>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------    
","11/Aug/11 19:45;tabish;Reopen if problem still exists.  ","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nullpointer-Exception in Queue.send,AMQ-2759,12483729,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jteetel,jteetel,02/Jun/10 16:03,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.1,,,,,,,5.6.0,,,Broker,,,,0,"We found the following NullPointerException in our logs:

2010-06-02 07:13:15,434 WARN  org.apache.activemq.broker.TransportConnection.Service - Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.broker.region.Queue.send(Queue.java:442)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
        at de.telefonica.CustomBrokerFilter.send(CustomBrokerFilter.java:103)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:446)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
        at java.lang.Thread.run(Thread.java:619)

This is logged only as log level WARN. Is this a severe problem that we should be concerned about?
",red had enterprise,jteetel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jun/10 17:51;jteetel;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461723/activemq.xml",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-06-29 21:51:01.394,,,false,,,,,,,,,,,,,,,,,60058,,,Tue Sep 20 11:01:34 UTC 2011,,,,,,,,"0|i0agzr:",59026,,,,,,,,,,,,,,,,,,,"29/Jun/11 21:51;tabish;Not enough information to reproduce or test the issue.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Number of pending messages are greater than 0 but no actual messages on queues,AMQ-2372,12483645,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,deathemperor,deathemperor,03/Sep/09 03:51,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.1.0,,,,,,,5.6.0,,,,,,,0,"- Start up AMQ normally
- Running 2m to 3m messages daily
- After 36 to 72 hours, AMQ starts to act abnormally with ""Number Of Pending Messages"" showing a positive number (messages available) but nothing can get delivered. If I view the messages of a queue there are no messages, the ""Number Of Pending Messages"" stays positive and keeps increasing (messages are being sent continuously). The consumers also receives no messages (as what happens when I view the queues).

At the moment, we have to restart the AMQ manually as it's the only way to fix. It's kind of painful tho when it happens on weekend, holidays or midnight.

FYI, we use Stomp connector.",CentOS 5,deathemperor,shbehna@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/09 10:49;deathemperor;Abstract.php;https://issues.apache.org/jira/secure/attachment/12461324/Abstract.php","07/Sep/09 10:49;deathemperor;IPBonus.php;https://issues.apache.org/jira/secure/attachment/12461323/IPBonus.php","07/Sep/09 10:49;deathemperor;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461322/activemq.xml",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2009-09-03 09:14:01.661,,,false,,,,,,,,,,,,,,,,,60057,,,Tue Sep 20 11:01:34 UTC 2011,,,,,,,,"0|i0akp3:",59626,,,,,,,,,,,,,,,,,,,"03/Sep/09 09:14;gtully;think this is resolved on trunk.
Can you try out the current 5.3-SNAPSHOT?","03/Sep/09 09:16;deathemperor;I'll absolutely try that but could you tell me what's happening ?","05/Sep/09 06:39;deathemperor;Confirming the snapshot doesn't fix this. It still happens after 5 million of messages.","07/Sep/09 09:35;gtully;can you post your actiivemq.xml and any test code - or an entire test case, this will help reproduce?","07/Sep/09 10:49;deathemperor;Sure, check the files.

Note that ever since upgrading to 5.3 Snapshot, it's happening more frequent whenever it reaches 2m messages.","11/Sep/09 03:52;deathemperor;My assumption on this problem may be because of the resize hash bin problem. Every time this happens I check the AMQ log and found no error but the resizing logs:

Resize hash bins queue-data_queue#3a#2f#2fipbonus from 1024 to 2048

Can you point me to where I can find additional log if there is ?","11/Sep/09 08:14;gtully;resizing the index persistent hash does lock the store and can take some time. To prevent a resize at run time you can configure the initial size of the hash bins using the ""indexBinSize"" attribute  of the kaha persistence adapter.

You may also want to consider the kahaDB store in the 5.3 snapshot which has more consistent enqueue rate profile. An example configuration can be found at http://svn.apache.org/viewvc/activemq/trunk/assembly/src/sample-conf/activemq-scalability.xml?view=markup","11/Sep/09 11:42;deathemperor;I'm load testing with the new config of indexBinSize and see how it goes. Anyway, I'm running AMQ5.3 Snapshot but it's still saying "" ActiveMQ 5.2.0 JMS Message Broker (localhost) is starting"". Is that normal ?","15/Sep/09 05:03;deathemperor;Nothing works so far, every changes I made still result the same problem at 4m messages.

On restarting AMQ I notice:

INFO  KahaStore                      - Kaha Store using data directory /usr/local/gtweb/activemq/data/kr-store/state
INFO  AMQPersistenceAdapter          - Active data files: []
WARN  AMQPersistenceAdapter          - The ReferenceStore is not valid - recovering ...
INFO  KahaStore                      - Kaha Store successfully deleted data directory /usr/local/gtweb/activemq/data/kr-store/data


Is that something we should look at ?

I'm getting tired of this because it's like being middle of nowhere.","22/Sep/09 12:21;deathemperor;Thought it would be good to update with you that I switched to use kahaPersistenceAdapter and the enqueued and dequeued messages are 6,5m now. Consider that's a big different with usual 2m-3m.

I'll keep you posted.","05/Aug/11 15:45;tabish;Appears to be fixed, reopen if still experiencing issues.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue.send NPE in broker => inoperative broker,AMQ-2329,12483650,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mccraig,mccraig,22/Jul/09 07:37,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,Broker,,,,0,"after correct operation for some time, an NPE in the broker renders the broker inoperable. restart is required

these mails describe two instances of what seem to be the same problem :

http://www.nabble.com/NPE-in-broker-%3D%3E-inoperative-broker-to24586798.html
http://www.nabble.com/What-can-be-the-reason---td21750762.html#a21750762

below is activemq related logging from broker start to failure. info level and above only unfortunately 

the tcp:///127.0.0.1:55870 is a client connection

i only have one broker. there were two clients, one in the same vm, producing only, and one in a different vm both consuming and producing, each using a single tcp connection


------------------------>

20 Jul 2009 14:01:21,134 INFO  [BrokerService] (main:) - Using Persistence Adapter: AMQPersistenceAdapter(/home/sonar/sonar/local_storage/production_devcrunch01-reeep/amq)
20 Jul 2009 14:01:21,219 INFO  [KahaStore] (main:) - Kaha Store using data directory /home/sonar/sonar/local_storage/production_devcrunch01-reeep/amq/kr-store/state
20 Jul 2009 14:01:21,348 INFO  [BrokerService] (main:) - ActiveMQ 5.2.0 JMS Message Broker (sonar-production-devcrunch01-reeep) is starting
20 Jul 2009 14:01:21,348 INFO  [BrokerService] (main:) - For help or more information please see: http://activemq.apache.org/
20 Jul 2009 14:01:21,527 INFO  [KahaStore] (main:) - Kaha Store using data directory /home/sonar/sonar/local_storage/production_devcrunch01-reeep/amq/kr-store/data
20 Jul 2009 14:01:21,595 INFO  [TransportServerThreadSupport] (main:) - Listening for connections at: tcp://devcrunch01:50639
20 Jul 2009 14:01:21,667 INFO  [TransportConnector] (main:) - Connector openwire Started
20 Jul 2009 14:01:21,668 INFO  [BrokerService] (main:) - ActiveMQ JMS Message Broker (sonar-production-devcrunch01-reeep, ID:devcrunch01-55590-1248098481379-0:0) started
20 Jul 2009 14:02:19,904 INFO  [DiscoveryTransport] (Multicast Discovery Agent Notifier:) - Adding new broker connection URL: tcp://devcrunch01:50639
20 Jul 2009 14:02:19,934 INFO  [FailoverTransport] (ActiveMQ Task:) - Successfully connected to tcp://devcrunch01:50639
20 Jul 2009 14:36:24,989 INFO  [DiscoveryTransport] (Multicast Discovery Agent Notifier:) - Adding new broker connection URL: tcp://devcrunch01:50639
20 Jul 2009 19:53:24,757 INFO  [DiscoveryTransport] (Multicast Discovery Agent Notifier:) - Adding new broker connection URL: tcp://devcrunch01:50639
20 Jul 2009 19:53:25,249 WARN  [FailoverTransport] (ActiveMQ Transport: tcp://localhost/127.0.0.1:50639:) - Transport failed to tcp://devcrunch01:50639 , attempting to automatically reconnect due to: java.net.SocketException: Connection reset
20 Jul 2009 19:53:25,322 INFO  [FailoverTransport] (ActiveMQ Task:) - Successfully reconnected to tcp://devcrunch01:50639
21 Jul 2009 09:03:59,091 INFO  [DiscoveryTransport] (Multicast Discovery Agent Notifier:) - Adding new broker connection URL: tcp://devcrunch01:50639
21 Jul 2009 09:03:59,341 INFO  [FailoverTransport] (ActiveMQ Task:) - Successfully reconnected to tcp://devcrunch01:50639
21 Jul 2009 09:03:59,362 WARN  [FailoverTransport] (InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@719bd84b:) - Transport failed to tcp://devcrunch01:50639 , attempting to automatically reconnect due to: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: localhost/127.0.0.1:50639
21 Jul 2009 09:04:14,136 ERROR [Service] (ActiveMQ Transport: tcp:///127.0.0.1:55870:) - Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.broker.region.Queue.send(Queue.java:328)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:350)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:437)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:450)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:619)

",,npfistner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-15 22:41:16.691,,,false,,,,,,,,,,,,,,,,,60060,,,Tue Sep 20 11:01:33 UTC 2011,,,,,,,,"0|i0ah1b:",59033,,,,,,,,,,,,,,,,,,,"15/Aug/11 22:41;tabish;Unable to reproduce, no test case attached.  User can reopen if the problem reappears in a later release.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestinationView.browseMessages(String) must not call OpenTypeSupport.convert(),AMQ-3023,12483861,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mwc_tonesoft,mwc_tonesoft,09/Nov/10 01:21,20/Sep/11 10:42,30/Jan/20 16:55,12/Jul/11 19:11,5.3.2,,,,,,,5.6.0,,,Broker,,,,0,"Method DestinationView.browseMessages(String) should return a homogeneous List of Message(s). Therefore, line 196 of DestinationView.java must not call OpenTypeSupport.convert(), and should be changed:

From:
{quote}
    answer.add(OpenTypeSupport.convert(message));
{quote}
To:
{quote}
    answer.add(message);
{quote}
Just like line 200 that follows.",ActiveMQ 5.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-12 19:11:14.369,,,false,,,,,,,,,,,,,,,,,60068,,,Tue Jul 12 19:11:14 UTC 2011,,,,,,,,"0|i0ak9z:",59558,,,,,,,,,,,,,,,,,,,"12/Jul/11 19:11;tabish;Fixed in trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slow consumer stops receiving messages because PrefetchSubscription.dispatched is filled with expired messages.,AMQ-2908,12483856,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,siim_kaalep,siim_kaalep,10/Sep/10 06:27,20/Sep/11 10:42,30/Jan/20 16:55,29/Jul/11 13:30,5.3.2,,,,,,,5.6.0,,,Broker,,,,0,"Slow consumer gets stuck when consuming from queue that has expiring messages in it. 

Looked into broker while it got stuck and saw that PrefetchSubscription.dispatched is full of expired messages.

WORKAROUND
Into doActualDispatch added check that if subscription is full, it will remove all expired message from dispatch.

{code}
Index: trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java
===================================================================
--- trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java               (revision 42304)
+++ trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java            (working copy)
@@ -400,6 +400,21 @@
         }
     }
 
+   public void removeExpiredMessagesFromDispatch() {
+     synchronized(dispatchLock) {
+                  for (Iterator<MessageReference> iter = dispatched.iterator(); iter.hasNext(); ) {
+                    final MessageReference node = iter.next();
+                    if (node.isExpired()) {
+                        if (broker.isExpired(node)) {
+                            node.getRegionDestination().messageExpired(context, this, node);
+                        }
+                        dispatched.remove(node);
+                        node.getRegionDestination().getDestinationStatistics().getInflight().decrement();
+                    }
+                  }
+     }
+   }
+    
     /**
      * Checks an ack versus the contents of the dispatched list.
      * 
{code}

{code}
Index: trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/Queue.java
===================================================================
--- trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/Queue.java           (revision 42304)
+++ trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/Queue.java        (working copy)
@@ -1543,6 +1543,9 @@
                 }
                 if (dispatchSelector.canSelect(s, node)) {
                     if (!fullConsumers.contains(s)) {
+                               if (s.isFull() && s instanceof PrefetchSubscription) {
+                                             ((PrefetchSubscription)s).removeExpiredMessagesFromDispatch();
+                               }
                         if (!s.isFull()) {
                             // Dispatch it.
                             s.add(node);

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-10 09:09:55.425,,,false,,,,,,,,,,,,,,,,,14751,,,Fri Jul 29 13:30:20 UTC 2011,,,,Patch Available,,,,"0|i0agz3:",59023,,,,,,,,,,,,,,,,,,,"10/Sep/10 09:09;gtully;do you have a test case for this?","10/Sep/10 12:07;siim_kaalep;{quote}
do you have a test case for this?
{quote}
Regrettably, no.","10/Sep/10 12:49;gtully;a code change like that without a test to validate is just a good start. To have it committed to trunk it needs a test to validate: 
1) the issue still exists
2) to protect the fix into the future

I guess a slow client ack consumer can fill the prefetch and an appropriate ttl can have them expire, but I wonder what type of client would cause this behavior is real life, until it acks there will be no further dispatch.
There is an existing check for message expiry on dispatch and on receiving an ack.","15/Oct/10 13:36;pmorris;hmmm i am wondering if i am seeing the same issue here, unfortunately the original stack trace or indication of why the user thinks this is a bug was not included but i am seeing the same sort of thing and the broker produced the following stack trace:

2010-09-05 09:07:51,844 | ERROR | Failed to page in more queue messages  | org.apache.activemq.broker.region.Queue | Queue:CORE-IN-QUEUE
java.lang.OutOfMemoryError: Java heap space
                at java.util.Arrays.copyOf(Unknown Source)
                at java.util.concurrent.CopyOnWriteArrayList.add(Unknown Source)
                at org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:630)
                at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:592)
                at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:158)
                at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1548)
                at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1500)
                at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1585)
                at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1219)
                at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
                at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

we are using 5.3.1 by the way, and i will hopefully upgrade to 5.4.1 next week and retry

in our case we have very slow consumers in certain conditions, because they recieve the message and post it out to a web endpoint, and at various points during the year the web endpoint is taken offline, causing us the above problem.... 

we do have a test case here, but it is kind of explicitly linked into stopping and starting our services, and pulling the IP stack down, so it is kind of difficult to repost that one, and it takes about 2 days for it to actually kill the system after 300 messages per second","04/Nov/10 18:45;gtully;I tried to reproduce this issue with a test case. The test case is committed at apache as it works ok: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/ExpiredMessagesWithNoConsumerTest.java?view=diff&r1=1031135&r2=1031136&pathrev=1031136
It is a variant of a slow consumer test, in the original the consumer blocks and only acks when all the messages in the queue have expired. So it will have received 600 (prefetch) messages and they will be in the prefetchsubscription.dispatched list on the broker. The test verifies that all of these messages expire.
The variation of that test to validate this issue adds another batch of messages with no expiry and validates that the consumer can receive them, so it proves that expiring messages in the dispatched list does not block the consumer.

Could you look at the test case to see if any of the options used in the test do not match your use case?","05/Nov/10 09:18;siim_kaalep;After performing more tests I also observed the appearance of OutOfMemoryError. I would like to raise the theoretical case that OutOfMemoryError caused some thread to die that was supposed to perform maintenance for the dispatched list. Leading to a situation wherein the expired messages clogged the processing of the dispatched list.

If that would be the case, then the current fix is redundant and the real problem is what caused that OutOfMemoryError.","05/Nov/10 10:51;gtully;yes, with an OOM all bets are off as any thread can die and it is not possible to restart them when there is no heap. 
There is a bunch of information related to memory usage and trouble shooting at: http://activemq.apache.org/javalangoutofmemory.html","29/Jul/11 13:30;tabish;The addition of the inactive destination cleanup and the auto sweep for expired messages should resolve this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set ClientID - InvalidClientIDException with stomp,AMQ-2974,12483510,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ons,ons,13/Oct/10 16:00,20/Sep/11 10:42,30/Jan/20 16:55,13/Aug/11 22:44,5.4.0,5.4.1,,,,,,5.6.0,,,Connector,,,,1,"We are using the NMS stomp-client to communicate with ActiveMQ. Our Stomp-Clients are mobile devices connected via GSM and loose the connection from time to time. Therefore we are using durable subscriptions and the clients use a fixed but unique Client-ID. When they loose the connection they can't reconnect because the server doesn't release the (failed) connection.

The server log looks like this:
INFO  | Transport failed: java.io.IOException: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:yyyyy | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///xxx.xxx.xxx.xxx:yyyyy
java.io.IOException: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:zzzzz
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)
        at org.apache.activemq.transport.stomp.ProtocolConverter$2.onResponse(ProtocolConverter.java:510)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:579)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:58)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1247)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:808)
        at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:768)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:187)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:503)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:192)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
        at java.lang.Thread.run(Thread.java:636)
Caused by: javax.jms.InvalidClientIDException: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:yyyyy
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:242)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:78)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)
        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:694)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:83)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:137)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        ... 10 more

At the same time the NMS-Client logs the following:
StompWireFormat - Received ERROR command: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:yyyyy

The connection is not being released even after more than 10 minutes. I have to restart the ActiveMQ server to be able to reconnect earlier.

For me it looks quite similar to the following Issue: https://issues.apache.org/activemq/browse/AMQ-2831",,jigneshb,ons,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Oct/10 07:23;ons;MQAlreadyConnectedTest.cs;https://issues.apache.org/jira/secure/attachment/12461825/MQAlreadyConnectedTest.cs",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-02-03 01:22:38.733,,,false,,,,,,,,,,,,,,,,,60088,,,Sat Aug 13 22:44:21 UTC 2011,,,,,,,,"0|i0agyv:",59022,,,,,,,,,,,,,,,,,,,"19/Oct/10 07:23;ons;Added a test case to demonstrate the problem","03/Feb/11 01:22;jigneshb;This is exactly what we are experiencing. We are using mobile devices to connect to ActiveMQ broker using STOMP (1.5.1) and the same result. This also affects ActiveMQ version 5.4.2.","29/Jun/11 22:47;tabish;ActiveMQ 5.x implements Stomp 1.0 which has no heartbeat mechanism to detect that a client connection has dropped.  In the event that the socket drop is not detected then the tcp keepalive won't kick in for up to two hours which is why you would see an error like this.  From the brokers point of view the connection appears valid an the subscriber is assumed to still be connected.","14/Jul/11 19:17;artnaseef;NMS is creating a new client ID every time a connection is created, right?  In which case, a timeout on the broker wouldn't matter.

We're seeing this problem without the failover transport - just a straight ssl://.... connection.  The connection is created once and used to create multiple sessions in separate threads, then the problem occurs.","14/Jul/11 19:29;tabish;The issue reports the error in relation to durable subscribers which requires that the client reconnect with same client id and subscribe to the same subscription id which is what my comment was referencing.  If you are experiencing something like this without durable subscribers then there could also be some other issue at play.

You best bet as always to get a quick resolution is to create a unit test that can reproduce the problem so we can debug it.  ","13/Aug/11 22:44;tabish;Fixed by use of Stomp v1.1 client with heartbeats (AMQ-3449) and also with improvements made in AMQ-3442",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Numeric selectors do not work in STOMP,AMQ-1942,12483322,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ruby_stomp_user,ruby_stomp_user,17/Sep/08 15:59,20/Sep/11 10:42,30/Jan/20 16:55,13/Aug/11 22:29,5.1.0,,,,,,,5.6.0,,,,,,,2,"JMS SQL92 numeric selectors, such as 
  - < > <= >=
  - BETWEEN val AND val

Fail to work via STOMP.

Possible solutions:
  1.  String Operands to numeric selector operators are converted to Numeric types
       - only in STOMP?
  2.  Explicit casting to SQL92 Numeric types becomes supported in selectors, ie
       - ( INTEGER(field) <= 5)

",,andras,ruby_stomp_user,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,72000,72000,,0%,72000,72000,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-13 13:16:23.336,,,false,,,,,,,,,,,,,,,,,14531,,,Sat Aug 13 22:29:38 UTC 2011,,,,,,,,"0|i0aktj:",59646,,,,,,,,,,,,,,,,,,,"13/Apr/11 13:16;andras;Any related tickets, threads about this? Should not be a huge fix unless i'm missing something.
Thanks!

ps: my message on activemq-users http://activemq.2283324.n4.nabble.com/Integer-header-in-STOMP-submitted-message-for-numeric-selector-header-gt-n-string-td3444817.html","13/Apr/11 13:23;tabish;The Stomp Spec 1.0 / 1.1 doesn't yet define encoding for numeric types in the headers.  You might want to get involved in the Stomp Spec mailing list to push for this in v2.0 of the spec.  See: http://stomp.github.com/index.html","13/Apr/11 15:12;andras;Thanks, i will, and it would indeed make a great addition to the spec.. However, i see this particular problem as being outside the JMS ( specifically, what subset of SQL92 is used for selectors - if that is defined in there at all ) and STOMP specifications. I haven't had a look yet, but i assume all custom (non-JMS) message headers from a STOMP message are being saved into a string type property. Wouldn't it make sense to try and make an educated guess about the intended type of the STOMP header based on its content? At least as far as numeric and string types go. ( This functionality could depend on configuration to isolate a possible performance hit )

in the mean time i'll familiarize myself with the STOMP transport, maybe i can come up with a patch to better illustrate this ( if it is at all feasible )

regards,
Andras","13/Apr/11 15:33;ruby_stomp_user;@Andras_Szerdahelyi Wow, I filed this bug report in 2009 with the EXACT same expectations and intent that you are expressing now. I just want to commend you and second your intent to solve this problem in some way that is perhaps separable or orthogonal to the JMS or STOMP designs. This is absolutely just a question of ""allowing"" the user to pass information *through* STOMP into the JMS headers that would otherwise simply work.

I continue to agree with you that the solution is either:
  * Best guess at typing, as you suggested, OR
  * A mechanism for explicit casting

Looking forward to seeing this issue eventually solved.
-Marc","01/Jul/11 20:11;tabish;This is a limitation of the Stomp specification.  Suggest getting active on the Stomp group and requesting this sort of thing be added to the next Stomp spec.","02/Jul/11 14:34;chirino;Hi,

First off, the STOMP spec does not define how selectors work.  So this is purely a ActiveMQ extension to the STOMP spec and I think we should be able to make it just work as expected even if the type info is not part of each header.  

The approach that Apollo took was to auto convert String header values to right numeric type in the comparison operation.","13/Aug/11 22:29;tabish;Back port of the Apollo version of the comparison filter.  Added tests to stomp tests to show the numeric selectors in action.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.activemq.broker.region.Queue#removeMatchingMessages(String selector) does not allow empty string as a selector, but empty string is a valid JMS message selector.",AMQ-2528,12483585,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,stirlingc,stirlingc,09/Dec/09 21:14,20/Sep/11 10:42,30/Jan/20 16:55,09/Jul/11 20:36,5.3.0,,,,,,,5.6.0,,,Selector,,,,0,"According to the JMS specification, an ""empty string"" message selector indicates no message selector (i.e., all messages should be selected):

""A message selector is a String whose syntax is based on a subset of the SQL92 conditional expression syntax. If the value of a message selector is an empty string, the value is treated as a null and indicates that there is no message selector for the message consumer.""

However, if org.apache.activemq.broker.region.Queue#removeMatchingMessages(String selector)  with selector = """", the following stacktrace is generated:

javax.jms.InvalidSelectorException: 
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:72)
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:46)
	at org.apache.activemq.broker.region.Queue.createSelectorFilter(Queue.java:1200)
	at org.apache.activemq.broker.region.Queue.removeMatchingMessages(Queue.java:908)
	at org.apache.activemq.broker.region.Queue.removeMatchingMessages(Queue.java:898)
	at com.invoqsystems.foundation.utility.AMQUtility.deleteMessages(AMQUtility.java:192)
	at com.invoqsystems.foundation.utility.AMQUtilityTest.testDeleteMessages(AMQUtilityTest.java:187)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
	at org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
	at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
	at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:71)
	at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
	at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
Caused by: org.apache.activemq.selector.ParseException: Parse error at line 0, column 0.  Encountered: <EOF>
	at org.apache.activemq.selector.SelectorParser.generateParseException(SelectorParser.java:1196)
	at org.apache.activemq.selector.SelectorParser.jj_consume_token(SelectorParser.java:1148)
	at org.apache.activemq.selector.SelectorParser.unaryExpr(SelectorParser.java:453)
	at org.apache.activemq.selector.SelectorParser.multExpr(SelectorParser.java:375)
	at org.apache.activemq.selector.SelectorParser.addExpression(SelectorParser.java:344)
	at org.apache.activemq.selector.SelectorParser.comparisonExpression(SelectorParser.java:196)
	at org.apache.activemq.selector.SelectorParser.equalityExpression(SelectorParser.java:141)
	at org.apache.activemq.selector.SelectorParser.andExpression(SelectorParser.java:120)
	at org.apache.activemq.selector.SelectorParser.orExpression(SelectorParser.java:99)
	at org.apache.activemq.selector.SelectorParser.JmsSelector(SelectorParser.java:91)
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:69)
	... 26 more


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jul/11 18:27;stirlingc;AMQ2528Test.java;https://issues.apache.org/jira/secure/attachment/12485172/AMQ2528Test.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-07-01 21:24:10.116,,,false,,,,,,,,,,,,,,,,,14594,,,Sat Jul 09 20:36:12 UTC 2011,,,,,,,,"0|i0aklj:",59610,Unit Test Broken,,,,,,,,,,,,,,,,,,"01/Jul/11 21:24;tabish;Cannot reproduce with test case added to trunk.","04/Jul/11 18:26;stirlingc;This issue is still present on trunk.  The JmsTopicSelectorTest that was used to verify the bug was not on truck is incorrect as it doesn't make use of Queue#removeMatchingMessages.  I've attached a unit test to demonstrate the issue on trunk.","04/Jul/11 18:27;stirlingc;Unit test demonstrating that bug still exists on trunk.","09/Jul/11 20:36;tabish;Fixed in trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractJmxCommand depends on sun.management.ConnectorAddressLink,AMQ-2464,12483748,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,philliph,philliph,25/Oct/09 17:41,20/Sep/11 10:42,30/Jan/20 16:55,15/Jul/11 13:57,,,,,,,,5.6.0,,,,,,,0,"AbstractJmxCommand is failing to compile for me because it depends on Sun-specific class, sun.management.ConnectorAddressLink.

Some us don't use the Sun JVM :-)",All but a Sun JVM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-15 13:57:27.651,,,false,,,,,,,,,,,,,,,,,14536,,,Fri Jul 15 13:57:27 UTC 2011,,,,,,,,"0|i0aknj:",59619,,,,,,,,,,,,,,,,,,,"15/Jul/11 13:57;tabish;Changed the code the use the JMS VirtaulMachine APIs in tools.jar for find the local VMs and get their connector URL.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""VMTransport"" NullPointerException from ActiveMQSessionExecutor.wakeup",AMQ-2679,12483570,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,easyl,easyl,29/Mar/10 14:32,20/Sep/11 10:42,30/Jan/20 16:55,01/Jul/11 21:33,4.1.2,,,,,,,5.6.0,,,Broker,Geronimo Integration,,,0,"setup in Geronimo deployment plan with 
{quote}
<config-property-setting name=""ServerUrl"">vm://localhost?async=true&jms.asyncDispatch=false&jms.copyMessageOnSend=false&jms.watchTopicAdvisories=false</config-property-setting> 
{quote}

I use only JMS send/reply pattern:
{quote}
connection = factory.createQueueConnection(); 
connection.start(); 
session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE); 
sender = session.createSender(requestQueue); 
replyQueue = session.createTemporaryQueue(); 
jmsRequestMessage = session.createTextMessage(); 
sender.send(jmsRequestMessage, DeliveryMode.NON_PERSISTENT, Message.DEFAULT_PRIORITY, timeToLive); 
receiver = session.createReceiver(replyQueue); 
jmsReplyMessage = receiver.receive(); 
connection.close();
{quote}

When the message traffic get huge (or the server is under intensive computing), I would got such NPE 
{quote}
 Exception in thread ""VMTransport"" java.lang.NullPointerException 
 at  org.apache.activemq.ActiveMQSessionExecutor.wakeup(ActiveMQSessionExecutor.java:76) 
 at  org.apache.activemq.ActiveMQSessionExecutor.execute(ActiveMQSessionExecutor.java:61) 
 at org.apache.activemq.ActiveMQSession.dispatch(ActiveMQSession.java:1344) 
 at  org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1485) 
 at  org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95) 
 at  org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65) 
 at  org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:201) 
 at  org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:120) 
 at  org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26) 
 at  org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47) 
 at  edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:665) 
 at  edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:690) 
 at java.lang.Thread.run(Thread.java:619) 
{quote}

setting _jms.asyncDispatch=false_ may ease the problem, but the NPE still happens..

as comment from kevan http://n3.nabble.com/sudden-NullPointerException-from-ActiveMQSessionExecutor-wakeup-tt676485.html#a676966
It could be a timing hole in ActiveMQSessionExecutor.
possible fix from kevan
{quote}
Index: activemq-core/src/main/java/org/apache/activemq/ActiveMQSessionExecutor.java 
=================================================================== 
--- activemq-core/src/main/java/org/apache/activemq/ActiveMQSessionExecutor.java	(revision 663068) 
+++ activemq-core/src/main/java/org/apache/activemq/ActiveMQSessionExecutor.java	(working copy) 
@@ -118,10 +118,14 @@ 
         try { 
             if (messageQueue.isRunning()) { 
                 messageQueue.stop(); 
-                if (taskRunner != null) { 
-                    taskRunner.shutdown(); 
-                    taskRunner = null; 
+                TaskRunner tempTaskRunner; 
+                synchronized (this) { 
+                    tempTaskRunner = this.taskRunner; 
+                    this.taskRunner = null; 
                 } 
+                if (tempTaskRunner != null) { 
+                    tempTaskRunner.shutdown(); 
+                } 
             } 
         } catch (InterruptedException e) { 
             Thread.currentThread().interrupt(); 
{quote}


","AMQ 4.1.2 embedded in Geronimo 2.1.3, SuSE Linux 11",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-03-30 06:02:42.733,,,false,,,,,,,,,,,,,,,,,43764,,,Fri Jul 01 21:33:19 UTC 2011,,,,,,,,"0|i0akhj:",59592,,,,,,,,,,,,,,,,,,,"30/Mar/10 06:02;rajdavies;Does look like it could be a timing issue - can fix in trunk. We don't go back to previous major versions and do releases generally.","01/Jul/11 21:33;tabish;This code has been fixed in trunk for awhile",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
embedded RESTful fileserver do not close files when PUT method is called,AMQ-2430,12483703,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,fabien.marty,fabien.marty,28/Sep/09 20:37,20/Sep/11 10:41,30/Jan/20 16:55,10/Aug/11 22:32,5.2.0,5.3.0,,,,,,5.6.0,,,Broker,,,,0,"When doing a massive uploading of blobs with activemq 5.2 (same thing on svn trunk) on the embedded RESTful fileserver, you get a ""too many open files"" error and the system doesn't work anymore.

Steps to reproduce :
* send a BlobMessage with ""jms.blobTransferPolicy.uploadUrl=http://127.0.0.1:8161/fileserver/""
* use ""lsof |grep fileserver"" command and you will see your uploaded BLOB still open

The fix seems really easy (works ok for me) :
* open ""RestFilter.java""
* locate the ""doPut()"" method
* change :
{code} 
try {
    IO.copy(request.getInputStream(), out);
 } catch (IOException e) {
{code}

with :

{code} 
try {
    IO.copy(request.getInputStream(), out);
    out.close();
 } catch (IOException e) {
{code}


","linux 64 bits, but probably not significant",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-10 22:32:59.002,,,false,,,,,,,,,,,,,,,,,60110,,,Wed Aug 10 22:32:59 UTC 2011,,,,Patch Available,,,,"0|i0akof:",59623,,,,,,,,,,,,,,,,,,,"10/Aug/11 22:32;tabish;Fix applied in trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"What the relationship is among ""CursorMemoryUsage"" and ""QueueSize""",AMQ-2629,12483074,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,spesg2,spesg2,25/Feb/10 16:58,23/Aug/11 21:38,30/Jan/20 16:55,23/Aug/11 21:38,5.2.0,,,,,,,,,,Message Store,,,,0,"Hi to everybody,  
  
In my application, that has 2 fast producers and 1 slow consumer, after some hours of job, where ""Queue Size"" various among 0 and 1000, ""CursorMemoryUsage"" it begins to increase him. This phenomenon provokes a deceleration both of ""Enqueue"" that ""Dequeue"", and even if they are stopped the producers the speed of ""dequeue"" it doesn't increase. When ""Queue Size"" returns to 0, ""CursorMemoryUsage"" it doesn't decrease.  
  
When this phenomenon happens I have seen that also her ""Heap Memory Usage"" it grows.  
  
Do you have some explanation to this phenomenon?  
What the relationship is among ""CursorMemoryUsage"" and ""QueueSize.""  
  
Thanks in advance ",Windows2003 server - JDK 1.5.0_09-b03,sreepanchajanyam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-23 11:28:16.032,,,false,,,,,,,,,,,,,,,,,63992,,,Tue Aug 23 21:38:08 UTC 2011,,,,,,,,"0|i0tskv:",171939,,,,,,,,,,,,,,,,,,,"23/Aug/11 11:28;sreepanchajanyam;Non-persistent messages are stored in memory before they are sent to consumers. CursoryMemoryUsage indicates the memory(heap) used by non-persistent messages. This is usually capped at 70% of heap space. This is configuration is made in activemq.xml. When the cursory memory usage goes beyond the capped value( say 70% by default) the incoming messages are written to tempstore( a location on disk) and all the messages from memory are flushed to tempstore, here the CursorMemoryUsage becomes 0%. When you hit tempstore the dequeueing and enqueueing slows down because of disk writes. 

When queue size increases CursorMemoryUsage increases till a capped value and then becomes zero . After this enqueue and dequeue operations slow down due to disk writes involved.","23/Aug/11 21:38;tabish;The supplied comment answers the question nicely, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Massege store is not cleaned when durable topic subscribers are refusing messages ,AMQ-2584,12483832,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,durokuruc,durokuruc,27/Jan/10 11:33,23/Aug/11 19:11,30/Jan/20 16:55,27/Oct/10 12:04,5.3.0,5.3.1,5.4.0,,,,,5.4.2,,,Message Store,,,,0,"Hi,

i am using activemq 5.3 (resp. 5.4 snapshot , 5.3.1 snapshot) with kahadb in following use-case:
- 3 durable topic subscriber, each refuses message using session.recover(), 1 delivery attempts
- ActiveMQ.DLQ consumer
- persistent message topic producer

In such case deadletter consumer should consume every message sent, as soon as number of delivery attempts is reached and mmessage is sent to ActiveMQ.DLQ. Result is ok but kahadb data directory at the end contains all log files with names db-<number>.log ever created. They aren't deleted even after some time.

I can also see following massege in console:

WARN | Duplicate message add attempt rejected. Message id: ID:sk1d069c-3826-1264006781626
-0:0:1:1:13425

If use-case is altered to use queue instead of topic log files are periodically deleted without WARN messages in console.

Same behaviour (data files not cleaned) if amqPersistenceAdapter is used except of WARN messages.


","WinXP,
java version ""1.6.0_05""
Java(TM) SE Runtime Environment (build 1.6.0_05-b13)
Java HotSpot(TM) Client VM (build 10.0-b19, mixed mode, sharing)",gtully,larhvi,slewis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/10 14:31;durokuruc;2584_test.zip;https://issues.apache.org/jira/secure/attachment/12461601/2584_test.zip","17/Aug/10 14:28;slewis;AMQ2584Test.java;https://issues.apache.org/jira/secure/attachment/12461799/AMQ2584Test.java","16/Aug/10 16:54;gtully;AMQ2584Test.java;https://issues.apache.org/jira/secure/attachment/12461797/AMQ2584Test.java","20/Oct/10 20:25;slewis;UpdatedTestCase.patch;https://issues.apache.org/jira/secure/attachment/12461814/UpdatedTestCase.patch",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2010-01-27 12:25:34.875,,,false,,,,,,,,,,,,,,,,,14533,,,Tue Aug 23 19:11:38 UTC 2011,,,,,,,,"0|i0b9m7:",63670,,,,,,,,,,,,,,,,,,,"27/Jan/10 12:25;gtully;
Could you attach a test case to this?

I have just tracked down the cause of the:
 WARN | Duplicate message add attempt rejected. Message id: ID:sk1d069c-3826-1264006781626-0:0:1:1:13425
but I don't think this could result in dangling references to files in the store. 
So i suspect the there is another reason for the data files not being cleaned up. At simple test case would help a lot.","27/Jan/10 14:31;durokuruc;Find attached java files, sample message and configuration file activemq.xml  for  reproducing this issue.","16/Aug/10 16:54;gtully;junit test case based on submitted test but borrowing from the junit test case attached to https://issues.apache.org/activemq/browse/AMQ-2870

This test case works fine on trunk","16/Aug/10 16:56;gtully;The difference may be the use of a small journal data file length such that the files are quickly reclaimed when the contain unreferenced data. With a large file all the messages can exist in one or two data files.","17/Aug/10 12:18;gtully;Try the new test case, if you can make that fail, please reopen","17/Aug/10 14:28;slewis;Hey Gary, I modified the test case to use multiple consumers, I think that's when this seems to break, what do you think?","17/Aug/10 14:52;gtully;need to look at it in some detail.. guess you should reopen this pending that.","17/Aug/10 14:58;slewis;Yup, sure thing Gary.  Haven't had time to look at it other than updating the test case, but I think it's still an issue.","18/Aug/10 15:24;gtully;got to the bottom of this. Both stores left dangling references to data files when a journal add was suppressed as a duplicate by the index or reference store.
In the AMQ case, the bug was a little subtler as it only occurred if a batched write to the journal was pending when the duplicate occurs.","20/Oct/10 20:25;slewis;Looks like there's still a case this issue can occur, namely if the consumers and DLQ consumer consumes messages concurrently.  Here's a patch that updates the existing test which will then show this other case.","27/Oct/10 12:04;gtully;A workaround for this issue, where the DLQ can receive duplicates, is to disable the cursor message audit for the DLQ.
{code}<policyEntry queue=ActiveMQ.DLQ"" enableAudit=""false"" />{code}

An enhancement, to allow a DLQ per durable subscription would make it possible to track which durable subscription rejected a message on an individual basis:
https://issues.apache.org/activemq/browse/AMQ-3003","28/Oct/10 12:40;gtully;additionally, {code}concurrentStoreAndDispatchQueues=false{code} must be added to the kahaDB persistence adapter to allow it to correctly ack the duplicates that ensue. Otherwise there can be the occasional missed ack. This needs more investigation to see if it can be made work reliably with the default value.","02/Nov/10 13:07;gtully;Final resolution is to suppress duplicate dispatch to the DLQ at source, in the DeadLetterStrategy implementation by having it keep an audit. In this way, only one copy of a message is dispatched to the DLQ, irrespective of how many durable consumers reject the message. AMQ-3003 will help with that.
Most duplicates are trapped by the store, but when the store has already acked the original, it can get through, the potential problem is the pending cursor of messages to dispatch. When concurrent with store, this can result in a missed dispatch and a subsequent missing ack leaving a dangling message.
Suppressing the duplicate send in the deadletter strategy removes this possibility.
Fix in r1030013","09/Jul/11 13:09;larhvi;I'm having a problem where messages fails to enter the DLQ. My scenario is:

1. some message fails during processing and ends up on the DLQ
2. it's moved back to its original queue, but fails again
3. message not sent back to the DLQ

After some googling I found this issue, and I suspect you may have introduced a bug in AbstractDeadLetterStrategy by adding the duplication-checks. (http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/policy/AbstractDeadLetterStrategy.java?r1=1030013&r2=1030012&pathrev=1030013).

I'm seeing the debug log-entry when messages are lost..
2011-07-09 14:59:07,177 | DEBUG | rollback: TX:ID:ubuntu-48335-1310214645889-0:1:18 syncCount: 2 | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: tcp:///127.0.0.1:59188
2011-07-09 14:59:07,178 | DEBUG | Not adding duplicate to DLQ: ID:ubuntu-58129-1310214649907-0:1:9:1:5, dest: queue://xxxx | org.apache.activemq.broker.region.policy.AbstractDeadLetterStrategy | ActiveMQ Transport: tcp:///127.0.0.1:59188
","11/Jul/11 09:13;gtully;Lars, yes, the audit should be configurable, such that is it possible to disable. I will expose the option on the default DLQ strategy.

btw: How do you achieve 2), is it a manual process or do you use a camel route or something else? Any chance you have a test case?

The addition of https://issues.apache.org/jira/browse/AMQ-3003 provides an alternative way of avoiding duplicate submission to the DLQ in the scenario described in this issue.","11/Jul/11 09:50;gtully;new DeadLetterStrategy enableAudit attribute introduced in http://svn.apache.org/viewvc?rev=1145092&view=rev","11/Jul/11 12:36;larhvi;I moved the messages using the admin interface (conf/jetty.xml).

>> Any chance you have a test case?
This happens almost every time a message is moved back to the DLQ the 2nd time. Seems a little bit random though..

Using the new setting in #1145092 we can avoid message loss now, but shouldn't that be the default? I mean, if people are bothered by dups in the DLQ wouldn't it be better for them to enable the audit?

Btw, when will this fix be released?","23/Aug/11 18:23;carfey;>> new DeadLetterStrategy enableAudit attribute introduced in http://svn.apache.org/viewvc?rev=1145092&view=rev

Gary, will this be configurable on the individualDeadLetterStrategy/sharedDeadLetterStrategy element or will it be derived from a policyEntry setting? ","23/Aug/11 19:11;gtully;on a dead letter strategy, eg: {code}<policyEntry .."">
            <deadLetterStrategy>
              <individualDeadLetterStrategy queuePrefix=""Test.DLQ."" processNonPersistent=""true"" enableAudit=""false"" />
            </deadLetterStrategy>{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak when undeploying webapp with ActiveMQ client,AMQ-2852,12483952,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,daniel.spilker@hamburg.de,daniel.spilker@hamburg.de,28/Jul/10 16:01,15/Aug/11 10:47,30/Jan/20 16:55,23/Mar/11 16:37,5.3.2,,,,,,,5.5.0,,,Transport,,,,11,"I have a web app with an ActiveMQ client. When undeploying the app, Tomcat logs the following messages.

{code}
28.07.2010 17:44:28 org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SCHWERWIEGEND: The web application [] appears to have started a thread named [InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@c821ef] but has failed to stop it. This is very likely to create a memory leak. 
28.07.2010 17:44:28 org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SCHWERWIEGEND: The web application [] appears to have started a thread named [TcpSocketClose: java.util.concurrent.ThreadPoolExecutor$Worker@19ac2e3] but has failed to stop it. This is very likely to create a memory leak. 
{code}

Searching for ""InactivityMonitor Async Task"" and ""TcpSocketClose"", I found org.apache.activemq.transport.tcp.TcpTransport and org.apache.activemq.transport.InactivityMonitor which both start a ThreadPoolExecutor in their static intializers but never stop them. The ThreadPoolExecutors hold references to ActiveMQ classes which hold a reference to the webapp classloader. These references prevent the webapp classes from being unloaded when the webapp is undeployed. Due to this the servlet container runs out of memory after a few redeployments.

The ActiveMQ client should dispose all resources when being closed, including the ThreadPoolExecutors. Or to provide some methods to explicitly stop these Threads (like org.apache.activemq.thread.Scheduler.shutdown() does).",,coderman,daniel.spilker@hamburg.de,danttran,henryju,javich,mikewhit,sslavic,timezra,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-23 09:18:09.172,,,false,,,,,,,,,,,,,,,,,14610,,,Mon Aug 15 10:44:30 UTC 2011,,,,,,,,"0|i0akdr:",59575,,,,,,,,,,,,,,,,,,,"23/Sep/10 09:18;henryju;I still have this issue with ActiveMQ 5.4.1.","14/Dec/10 10:44;coderman;The same with 5.4.2","14/Dec/10 10:50;coderman;here is the log output:

SEVERE: The web application [/webapp] appears to have started a thread named [AMQPersistenceAdaptor Task] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/webapp] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/webapp] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/webapp] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/webapp] appears to have started a thread named [ActiveMQ Task] but has failed to stop it. This is very likely to create a memory leak.
Dec 14, 2010 11:22:37 AM org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap","14/Dec/10 17:29;gtully;resolve client side issues in r1049184
addition of org.apache.activemq.thread.DefaultThreadPools#shutdown to allow the default pool to be shutdown on undeploy.","15/Dec/10 12:45;gtully;additional broker improvements in r1049527 - have discovery agent and network connector delegate to the common pool that can be explicitly shutdown.","15/Dec/10 17:26;gtully;still seems to be an issue with the amq persistence adapter{code}SEVERE: The web application [/web-app] appears to have started a thread named [AMQPersistenceAdaptor Task] but has failed to stop it. This is very likely to create a memory leak.{code}","23/Mar/11 16:37;gtully;fixed up AMQStore piece in revision - http://svn.apache.org/viewvc?rev=1084633&view=rev","24/Jul/11 21:24;danttran;I am using AMQ 5.5 using embedded mode with no persistent listening for external producer connectors and consumed via VM connector. Still see the issue

turn on persistent still see the issue ( <amq:broker useJmx=""true"" persistent=""true"" advisorySupport=""false""> )

SEVERE: The web application [/mc] appears to have started a thread named [ActiveMQ Task-20] but has failed to stop it. This is very likely to create a memory leak.

Any suggestion?","15/Aug/11 10:44;beowulf;The bug persists in ActiveMQ 5.5, I have created a new issue https://issues.apache.org/jira/browse/AMQ-3451.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.management.InstanceAlreadyExistsException when registrating an MBean,AMQ-2819,12482556,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,christian.lang,christian.lang,09/Jul/10 13:00,11/Aug/11 19:15,30/Jan/20 16:55,11/Aug/11 19:15,5.3.2,,,,,,,,,,Broker,,,,0,"Hi,

I'm using the latest ActiveMQ version in a test environment with about 100 msg / sec via stomp.
From time to time, i receive the following warning in the logfile:

INFO   | jvm 1    | 2010/07/09 14:38:11 |  WARN | Failed to register MBean: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=stomp+nio,ViewType=address,Name=/XXXXXXXX

Furthermore, this mbean seems to hang as it always appears in the jetty ""Connections"" frontend as ""active connection"".

After some debugging i found following exception in the logfile:

2010-07-09 13:20:58,036 | DEBUG | Setting up new connection id: ID:XXXXXXXX:1995214, address: /XXXXXXXX:56801 | org.apache.activemq.broker.TransportConnection | ActiveMQ NIO Worker
2010-07-09 13:20:58,038 | DEBUG | localhost removing consumer: ID:XXXXXXXX:239638 for destination: queue://myqueue | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///XXXXXXXX:54632
2010-07-09 13:20:58,038 | DEBUG | remove sub: QueueSubscription: consumer=ID:XXXXXXXX:1:239638, destinations=1, dispatched=0, delivered=0, pending=0, lastDeliveredSeqId: 0, dequeues: 208844, dispatched: 208883, inflight: 0 | org.apache.activemq.broker.region.Queue | ActiveMQ Transport: tcp:///XXXXXXXX:54632
2010-07-09 13:20:58,038 | DEBUG | localhost adding consumer: ID:XXXXXXXX:239639 for destination: queue://myqueue | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///XXXXXXXX:54632
2010-07-09 13:20:58,039 | DEBUG | Transport failed: java.io.IOException: Broken pipe | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ NIO Worker
java.io.IOException: Broken pipe
 at sun.nio.ch.FileDispatcher.write0(Native Method)
 at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:29)
 at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:104)
 at sun.nio.ch.IOUtil.write(IOUtil.java:75)
 at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:334)
 at org.apache.activemq.transport.nio.NIOOutputStream.write(NIOOutputStream.java:174)
 at org.apache.activemq.transport.nio.NIOOutputStream.flush(NIOOutputStream.java:115)
 at java.io.DataOutputStream.flush(DataOutputStream.java:106)
 at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:168)
 at org.apache.activemq.transport.stomp.StompTransportFilter.sendToStomp(StompTransportFilter.java:92)
 at org.apache.activemq.transport.stomp.ProtocolConverter.sendToStomp(ProtocolConverter.java:139)
 at org.apache.activemq.transport.stomp.ProtocolConverter.handleException(ProtocolConverter.java:221)
 at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:195)
 at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:71)
 at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
 at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:122)
 at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:49)
 at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:73)
 at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
 at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
 at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
 at java.lang.Thread.run(Thread.java:619)
2010-07-09 13:20:58,040 | DEBUG | Stopping connection: /XXXXXXXX:56801 | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | Stopping transport tcp:///XXXXXXXX:56801 | org.apache.activemq.transport.tcp.TcpTransport | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | Stopped transport: null | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | Cleaning up connection resources: null | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | remove connection id: ID:XXXXXXXX:1995214 | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,040 | DEBUG | Connection Stopped: null | org.apache.activemq.broker.TransportConnection | ActiveMQ Task
2010-07-09 13:20:58,158 | WARN  | Failed to register MBean: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=stomp+nio,ViewType=address,Name=/XXXXXXXX_56802 | org.apache.activemq.broker.jmx.ManagedTransportConnection | ActiveMQ Task
2010-07-09 13:20:58,158 | DEBUG | Failure reason: javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=stomp+nio,ViewType=address,Name=/XXXXXXXX_56802 | org.apache.activemq.broker.jmx.ManagedTransportConnection | ActiveMQ Task
javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=stomp+nio,ViewType=address,Name=/XXXXXXXX_56802
 at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)
 at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)
 at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)
 at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)
 at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)
 at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)
 at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:305)
 at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:54)
 at org.apache.activemq.broker.jmx.ManagedTransportConnection.registerMBean(ManagedTransportConnection.java:99)
 at org.apache.activemq.broker.jmx.ManagedTransportConnection.<init>(ManagedTransportConnection.java:57)
 at org.apache.activemq.broker.jmx.ManagedTransportConnector.createConnection(ManagedTransportConnector.java:52)
 at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:212)
 at java.lang.Thread.run(Thread.java:619)
2010-07-09 13:20:58,159 | DEBUG | Setting up new connection id: ID:XXXXXXXX:1995215, address: /XXXXXXXX:56802 | org.apache.activemq.broker.TransportConnection | ActiveMQ NIO Worker

As you can see, the instance of this MBean seems to be already registered.

Any idea why this happens and how to fix?

Cheers,
Christian



",Debian x64,lionel.cons,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-05 15:31:08.468,,,false,,,,,,,,,,,,,,,,,65334,,,Thu Aug 11 19:15:58 UTC 2011,,,,,,,,"0|i0tsnj:",171951,,,,,,,,,,,,,,,,,,,"05/Jul/11 15:31;gtully;seems to be the same issue. Tonight's 5.6-SNAPSHOT will have the fix. ","11/Aug/11 19:15;tabish;Fixed by AMQ-3382",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq lost messages on restart,AMQ-2270,12482681,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mprem74,mprem74,28/May/09 23:31,10/Aug/11 16:05,30/Jan/20 16:55,09/Sep/09 10:03,5.2.0,,,,,,,5.3.0,,,,,,,0,"Hi , 
   Have two brokers in network AMQ1 and AMQ2 and have lots of virtual topics configured , Some consumers exists on some queues on AMQ1 and vice versa . On some queues AMQ2 have a consumers with a selector and hence consume a certain percentage of messages and the queue gets filled up every time my test program runs . After a certain number of test runs when the queues on AMQ2 have about 2800 pending messages , I have observerd that the messages got forwarded over to AMQ1 though AMQ1 have no consumers on these queues .
After certain point producer cannot send any more messages to AMQ1 and dint see any exceptions on the producer side (no activity on Queues in admin console) .
Killed AMQ1 and tried to restart it , It took long time to restart and issued a kill command again and then restarted .
Now all my pending messages on AMQ1 have disappeared and this is what i see on console during start up .


INFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(/home/prem/software/apache-activemq-5.2.0/data.1)
INFO  AMQPersistenceAdapter          - AMQStore starting using directory: /home/prem/software/apache-activemq-5.2.0/data.1
INFO  KahaStore                      - Kaha Store using data directory /home/prem/software/apache-activemq-5.2.0/data.1/kr-store/state
INFO  AMQPersistenceAdapter          - Active data files: []
WARN  AMQPersistenceAdapter          - The ReferenceStore is not valid - recovering ...
INFO  KahaStore                      - Kaha Store successfully deleted data directory /home/prem/software/apache-activemq-5.2.0/data.1/kr-store/data
INFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)
INFO  KahaStore                      - Kaha Store using data directory /home/prem/software/apache-activemq-5.2.0/data.1/kr-store/data
",,rasitha1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-09-09 10:03:53.409,,,false,,,,,,,,,,,,,,,,,65572,,,Wed Aug 10 16:05:33 UTC 2011,,,,,,,,"0|i0s23j:",161816,,,,,,,,,,,,,,,,,,,"09/Sep/09 10:03;rajdavies;This is issue will be resolved in 5.3 by using the KahaDB","09/Aug/11 15:04;rasitha1;Do you know if there is a fix for this when using jdbcPersistenceAdapter? 

I'm using 5.4.2 broker with jdbcPersistenceAdapter and was able to reproduce this bug. I created a Consumer.*.VirtualTopic.FOO and published a message to VirtualTopic.FOO with Persistent Delivery. Message correctly got to the queue and then I restarted the broker. Now the queue and the message are gone. When I query ACTIVEMQ_MSGS table, I see the message and the queue but upon restarting broker does not pick that up.

Tried the same with KahaDB and that works.","09/Aug/11 16:05;gtully;can you validate 5.5.0 for the jdbc persistence adapter and open a new issue if you still see a problem?","10/Aug/11 16:05;rasitha1;The same issue exists in 5.5 broker.

Just to note: Both 5.4.2 and 5.5 will show the message in the database once you create the queue (Consumer.MyClient.VirtualTopic.FOO) manually. Then all messages in the DB shows up in the queue. But the problem is, any message published to the virtual topic since the restart is lost to that consumer (until it connects next time which creates the queue).

With KahaDB this is not the case. It will correctly show the queue right after the restart with existing messages so any newly published messages will continue coming to the queue.

I'll open a new issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LDAPLoginModule undocumented,AMQ-1782,12483395,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,minfrin,minfrin,06/Jun/08 23:37,30/Jul/11 22:11,30/Jan/20 16:55,30/Jul/11 22:11,5.1.0,,,,,,,NEEDS_REVIEW,,,Documentation,,,,0,"The JAAS LDAP module at the following location in svn is completely undocumented, and contains neither javadocs nor code comments:

http://svn.apache.org/repos/asf/activemq/trunk/activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-30 22:11:57.943,,,false,,,,,,,,,,,,,,,,,66614,,,Sat Jul 30 22:11:57 UTC 2011,,,,,,,,"0|i0aly7:",59829,,,,,,,,,,,,,,,,,,,"30/Jul/11 22:11;tabish;Docs are available for LDAP here:
http://activemq.apache.org/cached-ldap-authorization-module.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"soTimeout transport property- Incorrect documentation (or code, you pick)",AMQ-1860,12482608,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,fhanik,fhanik,18/Jul/08 18:26,03/Jun/11 15:06,30/Jan/20 16:55,02/Sep/08 07:03,5.0.0,5.1.0,,,,,,5.2.0,,,Broker,Documentation,,,0,"The documentation for TCP transport, shows soTimeout, connectionTimeout and socketBufferSize as properties without a prefix.
The code in TcpTransportServer.java doesn't have the support for these properties.
hence setting a URL to tcp://192.168.3.3:61616?soTimeout=180000 does nothing, and defaults to soTimeout=0 (which is a bad value due to how sockets get closed, and can cause the system to hang on  a socketWrite call, causing the rest of the server to hang, but I can explain that on the dev lists for those interested)

Bug description: Transport properties are incorrectly document or implemented

There are two solutions to this bug:

1. The preferred, would be to fix the documentation
http://activemq.apache.org/tcp-transport-reference.html
the mentioned options will work if they are prefixed with ""transport.""
so the URL would be 
tcp://192.168.3.3:61616?transport.soTimeout=180000

2. Add the properties with their getters/setters into TcpTransportServer.java and then during the handleSocket method add them to the options map

Please note, this bug refers to the soTimeout setting on the socket that gets created on the server when a producer/consumer connects in using TCP

best
Filip",All,jleroux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Aug/08 04:05;fhanik;transport-options.patch;https://issues.apache.org/jira/secure/attachment/12461212/transport-options.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-08-14 08:31:09.83,,,false,,,,,,,,,,,,,,,,,72166,,,Fri Jun 03 15:06:41 UTC 2011,,,,,,,,"0|i0s20v:",161804,Regression,,,,,,,,,,,,,,,,,,"18/Jul/08 19:03;fhanik;As a side note, and not relevant to this issue, let me explain why soTimeout=0 is a bad default value

Lets say you have a connection between a consumer and the AMQ server, that connections gets terminated.

When a socket is closed, it doesn't really mean its closed - this is explained in:
http://java.sun.com/j2se/1.5.0/docs/guide/net/articles/connection_release.html

On the server the following will happen

yy.yy.yy.yy.61616    xx.xx.xx.xx.44674    49152      0 49330      0 CLOSE_WAIT

And inside of the AMQ you'll see the following stack trace
""ActiveMQ Transport: tcp:///xx.xx.xx.xx:44674"" daemon prio=4 tid=0x002ebc88 nid=0x2a runnable [0xd10ff000..0xd10ffc70]
        at java.net.SocketOutputStream.socketWrite0(Native Method)
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:105)
        at java.io.DataOutputStream.flush(DataOutputStream.java:106)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:154)
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:157)
        - locked <0xd8775fc0> (a org.apache.activemq.transport.InactivityMonitor$2)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:82)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:91)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        - locked <0xd8775da8> (a java.lang.Object)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1151)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:766)
        at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:727)

please remember, the client is no longer connected, and is no longer reading data. The server now has a CLOSE_WAIT connection and a thread that is stuck in this state.
The socketWrite0 will only return after a TCP packets has moved on the connection (which it wont since the client is no longer present) or until it times out (which it wont since soTimeout is 0)

As you can see this thread is also holding a bunch of locks, some of these interfer with other server threads, causing the system to display systems of being hung. The only work around ar this point is to restart the AMQ server.

Hope this makes sense. My recommendation would be to have a >0 soTimeout value as default, (and the property name be documented properly of course:) )

best
Filip","05/Aug/08 04:03;fhanik;Looks like the problems go further than just the documentation being incorrect. On the server, it the soTimeout setting wont take into effect unless you use transport.soTimeout property.
However, trying to apply this setting to a client URL, the system bombs out
Caused by: java.lang.IllegalArgumentException: Invalid connect parameters: {transport.soTimeout=180000}
    at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:133)
    at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:47)
    at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:76)
    at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:235)

then it would probably be better to just allow the property soTimeout, but it looks like the entire socket property settings need to have a look over, since there is no consistent way of setting these properties. And because the soTimeout property is not set, the whoe server locks up if there is a client that is deciding to stop receiving data.

","05/Aug/08 04:03;fhanik;Example of how to make the soTimeout property work on the server","05/Aug/08 04:05;fhanik;Example of how to make the soTimeout work for the server, one must of course verify that the client is picking up the option too","14/Aug/08 08:31;rajdavies;Thanks Filip - applied the patch in SVN revision 685808","14/Aug/08 17:08;fhanik;Rob, looks like I wrote the patch with my head up my rear,

this

+            options.put(""soTimeout"", Integer.valueOf(soTimeout));
+            options.put(""soTimeout"", Integer.valueOf(soTimeout));
+            options.put(""connectionTimeout"", Integer.valueOf(socketBufferSize));

should be

+            options.put(""soTimeout"", Integer.valueOf(soTimeout));
+            options.put(""socketBufferSize"", Integer.valueOf(socketBufferSize));
+            options.put(""connectionTimeout"", Integer.valueOf(connectionTimeout));","15/Aug/08 16:50;fhanik;See previous note, copy paste error in the included patch","02/Sep/08 07:03;rajdavies;no problem! - updated in SVN revision 691129","01/Jun/11 13:16;jleroux;Hi,

Why, unlike proposed  Filip, the soTimeout is still at 0 by default?

This is from the current documentation at http://activemq.apache.org/tcp-transport-reference.html

I had a quick look at the 5.4.2 code and I see that TcpTransportServer.configureServerSocket() sets soTimeout to 2000 and is called in TcpTransportServer.bind() which is itself used by TransportServer.doBind(). I stopped there, so maybe I'm missing something...","01/Jun/11 13:36;gtully;The default for client transports and server side accepted connections (and underlying transports) is still 0, configureServerSocket is a bit of an anomaly, it applies to just the listen socket, the socket that does an accept loop such that the accept thread won't block a shutdown.

There is a distinction on the server/broker side between the listen transport and accepted transports (new connections).

Transport options on the broker side that need to be applied to newly accepted connections need to use the ""transport."" prefix. without the prefix, they are applied just to the listener.","01/Jun/11 15:34;jleroux;Thanks Garry,

This helped much :)","01/Jun/11 20:47;jleroux;Just one question more,

When in activemq.xml I put
{code}
<transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616?transport.soTimeout=60000""/>
{code}

I don't see anymore information dynamically changing at http://server:8161/admin/topics.jsp (we use a topic to broadcast), is it normal?
I checked with lsof and netstat there are connections created and removed. 

","02/Jun/11 09:28;jleroux;OK Forget my question, it's actually dynamically changing but far, far less than before...

I think I will have some other questions but I have to check how our application (based on Apache OFBiz which uses JNDI to connect to the broker) handles some parts before","03/Jun/11 15:06;jleroux;OK, it's all clear, thanks again",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Deflater has been closed"" exception when jms.useCompression=true and using ActiveMQBytesMessage",AMQ-3062,12491724,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jgassner,jgassner,01/Dec/10 02:15,05/May/11 02:21,30/Jan/20 16:55,05/Dec/10 18:10,5.4.1,,,,,,,5.5.0,,,Connector,,,,0,"When compression is turned on and the ActiveMQBytesMessage is used, the following exception will be encountered:

java.lang.NullPointerException: Deflater has been closed
	at java.util.zip.Deflater.ensureOpen(Deflater.java:427)
	at java.util.zip.Deflater.deflate(Deflater.java:305)
	at java.util.zip.DeflaterOutputStream.deflate(DeflaterOutputStream.java:159)
	at java.util.zip.DeflaterOutputStream.finish(DeflaterOutputStream.java:134)
	at java.util.zip.DeflaterOutputStream.close(DeflaterOutputStream.java:146)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.apache.activemq.command.ActiveMQBytesMessage$1.close(ActiveMQBytesMessage.java:808)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.apache.activemq.command.ActiveMQBytesMessage.storeContent(ActiveMQBytesMessage.java:124)
	at org.apache.activemq.command.ActiveMQBytesMessage.copy(ActiveMQBytesMessage.java:109)
	at org.apache.activemq.command.ActiveMQBytesMessage.copy(ActiveMQBytesMessage.java:104)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1735)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)",,artnaseef,jgassner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/10 02:18;jgassner;patch.txt;https://issues.apache.org/jira/secure/attachment/12465020/patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-12-05 17:22:01.294,,,false,,,,,,,,,,,,,,,,,14772,,,Thu May 05 02:21:19 UTC 2011,,,,Patch Available,,,,"0|i0ak7z:",59549,,,,,,,,,,,,,,,,,,,"01/Dec/10 02:18;jgassner;This patch seems to fix the problem.","05/Dec/10 17:22;tabish;Can you provide a test case that reproduces this problem.","05/Dec/10 18:10;tabish;Was able to reproduce, added a test case and applied the provided patch. fixed in svn rev: 1042388","05/May/11 02:21;artnaseef;Rev 1042388 doesn't have the changes.

Is 1042394 the correct rev?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak in ActiveMQConnection,AMQ-2138,12483602,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,knisterpeter,knisterpeter,23/Feb/09 10:26,28/Mar/11 12:28,30/Jan/20 16:55,28/Mar/11 12:27,,,,,,,,5.5.0,,,Connector,,,,0,"We discovered a memory leak in the ActiveMQConnection class.
In our setup we have an activemq 5.1 embedded in our webapplication. On undeployemnt (more specially on connection close) the ThreadPoolExecutor is kept in memory and could not be garbage collected, because of the ThreadFactory which is loaded by our webapp classloader. A reference to it is held by the ThreadPoolExecutor.
This is likly a bug in the JDK TheadPoolExecutor but it could be fixed by setting a default ThreadFactory before shutdown.",Tomcat 6 + ActiveMQ 5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,,0%,0,0,,,,,,,,,AMQ-2852,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-28 12:27:56.26,,,false,,,,,,,,,,,,,,,,,46503,,,Mon Mar 28 12:28:51 UTC 2011,,,,,,,,"0|i0akrz:",59639,,,,,,,,,,,,,,,,,,,"23/Feb/09 11:24;knisterpeter;This is also the case for the ASYNC_TASKS ThreadPoolExecutor in the InactivityMonitor class.","23/Feb/09 12:41;knisterpeter;And there are at least two more of this cases:
* In TcpTransport the field SOCKET_CLOSE
* In TaskRunnerFactory the field executor","28/Mar/11 12:27;gtully;The fix for https://issues.apache.org/jira/browse/AMQ-2852 will sort this.","28/Mar/11 12:28;gtully;The fix reduced the number of thread pools created and ensured they could be shutdown.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Browse queue hangs with prefetch = 0,AMQ-2171,12483598,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,rgibson,rgibson,20/Mar/09 13:34,24/Mar/11 19:16,30/Jan/20 16:55,24/Mar/11 19:16,5.2.0,,,,,,,5.5.0,,,JMS client,,,,2,"Browsing a queue with prefetch = 0 blocks on the first read, see attached test case.","$ java -versionjava version ""1.6.0_12""
Java(TM) SE Runtime Environment (build 1.6.0_12-b04)
Java HotSpot(TM) Server VM (build 11.2-b01, mixed mode)
$ uname -a
Linux 2.6.18-92.1.18.el5PAE #1 SMP Wed Nov 12 10:02:30 EST 2008 i686 i686 i386 GNU/Linux
",npfistner,rdelaporte,tcoates,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Mar/09 13:36;rgibson;AMQ2171.java;https://issues.apache.org/jira/secure/attachment/12461414/AMQ2171.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-03-24 19:16:30.997,,,false,,,,,,,,,,,,,,,,,14611,,,Thu Mar 24 19:16:30 UTC 2011,,,,,,,,"0|i0ah1r:",59035,,,,,,,,,,,,,,,,,,,"20/Mar/09 13:40;rgibson;To be honest, I've only just started using ActiveMQ so perhaps this is expected behaviour - but I'm trying to program against the JMS API and it least to be counter to the spec for an enumeration to block on the hasMoreElements.","20/Mar/09 15:00;rgibson;See also http://www.nabble.com/Forcing-queue-flush-through-to-consumers-browsers--to22621755.html and AMQ-2172","24/Mar/11 19:16;tabish;fixed in trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepare the upgrade to Karaf 2.2,AMQ-3142,12495753,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jbonofre,jbonofre,17/Jan/11 09:12,24/Mar/11 13:03,30/Jan/20 16:55,04/Mar/11 11:01,,,,,,,,5.5.0,,,,,,,1,"ActiveMQ 5.4.x uses Karaf 2.1.0.

Karaf 2.2.0 will be released soon. A change affects ActiveMQ: a new Felix gogo version.

For instance, if you try to deploy ActiveMQ 5.4.2 on Karaf 2.1.99-SNAPSHOT, you will get an unresolved constraint as the Felix Gogo export package changed.

In preparation for the support of Karaf 2.2.0, I'm gonna submit a patch to update the Import-Package and use the corresponding Gogo version.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Mar/11 07:45;pieber;AMQ3142.patch;https://issues.apache.org/jira/secure/attachment/12472512/AMQ3142.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-03-03 07:37:58.429,,,false,,,,,,,,,,,,,,,,,14616,,,Thu Mar 24 13:03:02 UTC 2011,,,,,,,,"0|i0ajzz:",59513,,,,,,,,,,,,,,,,,,,"03/Mar/11 07:37;danttran;Hi JB, is there a way to manually patch activemaq 5.4 to get this issue fixed ( while waiting for official fix 5.5? )

Thanks","03/Mar/11 07:46;pieber;I've patched AMQ to run smoothly on karaf-2.2.0. @Dan: Feel free to give the patch attached to this issue a try and report your feedback","04/Mar/11 11:01;dejanb;Patched applied with svn revision 1077868. Thanks!","23/Mar/11 16:55;dejanb;I'm trying now to make 5.5.0 work with both karaf 2.1.x and 2.2.0 and newer, but have some difficulties at the moment. I created a separate features for [2.1.x|http://svn.apache.org/viewvc/activemq/trunk/activemq-karaf/src/main/resources/features-2.1.xml?revision=1084635&view=markup].

But trying to do:

{code}
karaf@root> features:addUrl mvn:org.apache.activemq/activemq-karaf/5.5-SNAPSHOT/xml/features-2.1
karaf@root> features:install activemq-spring 
{code}

gets

{code}
Error executing command: Could not start bundle mvn:org.apache.activemq/activemq-karaf/5.5-SNAPSHOT in feature(s) activemq-5.5-SNAPSHOT: Unresolved constraint in bundle activemq-karaf [64]: Unable to resolve 64.0: missing requirement [64.0] package; (&(package=org.apache.felix.gogo.commands)(version>=0.6.0)(!(version>=1.0.0)))
{code}


I tried manually adding gogo commands and runtime (v 0.8.0) but with no luck. Can someone else take a look at it, as I might missing something obvious.

 

","23/Mar/11 19:21;pieber;This is strange. I'm sure I've already fixed this. Could you please locally apply my second patch @AMQ-3207, build locally and try again?","24/Mar/11 13:03;dejanb;This is now solved by using older (5.4.2) activemq-karaf for older versions. It's also documented here 

https://cwiki.apache.org/confluence/display/ACTIVEMQ/OSGi+Integration

Thanks to Andreas for suggestion",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VMTransport fails with IOException,AMQ-2734,12483667,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,eliebmann,eliebmann,17/May/10 06:32,15/Mar/11 20:58,30/Jan/20 16:55,15/Mar/11 20:58,5.3.0,,,,,,,,,,Broker,,,,1,"We are able to successfully publish a large number of messages to an embedded ActiveMQ instance via the VM protocol/transport. After a while, however, further publishing starts to fail with IOExceptions (caused by InterruptedExceptions). For some (unknown) reason the invocation of LinkedBlockingQueue#put() in the VMTransport#oneway() method starts to fail with InterruptedExceptions. Please find the full stack trace below.

Since we use the VM transport together with the FAILOVER transport the connection is recovered automatically (a fraction of a second later). Our connection URL currently is as follows:

failover:(vm://amqmasterbroker?create=false&amp;waitForStart=10000)?initialReconnectDelay=100&amp;maxReconnectAttempts=5

We intend to set the transport parameters backup=true&timeout=100 on the FAILOVER protocol to work around the problem of stuck publishing threads and message publishing errors in case of the IOException (not sure if this will help) but would want see the root-cause to be fixed by ActiveMQ as this issue is causing a lot of troubles for us in production.

2010-05-14 18:19:13,950 [EventServiceChannel$ReceiverThread[daemon]_357] DEBUG failover.FailoverTransport - Send oneway attempt: 0 failed for command:ActiveMQObjectMessage {commandId = 1929587556, responseRequired = false, messageId = ID:saturntstsgp-40467-1273493117026-2:0:35:2:8847665, originalDestination = null, originalTransactionId = null, producerId = ID:saturntstsgp-40467-127349311702
2010-05-14 18:19:13,950 [EventServiceChannel$ReceiverThread[daemon]_357] WARN  failover.FailoverTransport - Transport failed to vm://amqmasterbroker?create=false&waitForStart=10000 , attempting to automatically reconnect due to: java.io.IOException
2010-05-14 18:19:13,951 [EventServiceChannel$ReceiverThread[daemon]_357] DEBUG failover.FailoverTransport - Transport failed with the following exception:
java.io.IOException
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:45)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:104)
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:471)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1225)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1219)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1680)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:269)
        at org.springframework.jms.connection.CachedMessageProducer.send(CachedMessageProducer.java:117)
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:597)
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:574)
        at org.springframework.jms.core.JmsTemplate$3.doInJms(JmsTemplate.java:541)
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:471)
        at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:539)
        at com.scb.saturn.services.messagebroker.MessageBrokerImpl.publishMessage(MessageBrokerImpl.java:118)
        at com.scb.saturn.services.messagebroker.MessageBrokerImpl.publishMessage(MessageBrokerImpl.java:102)
        at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.doInvoke(ServiceInvoker.java:64)
        at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.invoke(ServiceInvoker.java:78)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
        at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.osgi.service.util.internal.aop.ServiceTCCLInterceptor.invoke(ServiceTCCLInterceptor.java:36)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.osgi.service.importer.support.LocalBundleContextAdvice.invoke(LocalBundleContextAdvice.java:59)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
        at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
        at $Proxy45.publishMessage(Unknown Source)
        at com.scb.saturn.services.apamaclient.scenario.ScenarioService.publishToMessageBroker(ScenarioService.java:362)
        at com.scb.saturn.services.apamaclient.scenario.ScenarioService.updateInstance(ScenarioService.java:97)
        at com.scb.saturn.services.apamaclient.scenario.ScenarioService.propertyChange(ScenarioService.java:176)
        at java.beans.PropertyChangeSupport.firePropertyChange(Unknown Source)
        at java.beans.PropertyChangeSupport.firePropertyChange(Unknown Source)
        at com.apama.services.scenario.internal.ScenarioDefinition.handle_instanceUpdated(ScenarioDefinition.java:1424)
        at com.apama.services.scenario.internal.ScenarioDefinition.access$300(ScenarioDefinition.java:52)
        at com.apama.services.scenario.internal.ScenarioDefinition$2.handleEvent(ScenarioDefinition.java:1627)
        at com.apama.services.event.internal.EventServiceChannel.processEvent(EventServiceChannel.java:1057)
        at com.apama.services.event.internal.EventServiceChannel$ReceiverThread.run(EventServiceChannel.java:1179)
Caused by: java.lang.InterruptedException
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(Unknown Source)
        at java.util.concurrent.locks.ReentrantLock.lockInterruptibly(Unknown Source)
        at java.util.concurrent.LinkedBlockingQueue.put(Unknown Source)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:94)
        ... 44 more
2010-05-14 18:19:13,960 [EventServiceChannel$ReceiverThread[daemon]_357] WARN  util.LoggingTransportListener - transport [amqMessageBrokerAmqConnectionTransport] has been interrupted
2010-05-14 18:19:13,961 [ActiveMQ Task] DEBUG failover.FailoverTransport - urlList connectionList:[vm://amqmasterbroker?create=false&waitForStart=10000]
2010-05-14 18:19:13,961 [ActiveMQ Task] DEBUG failover.FailoverTransport - Attempting connect to: vm://amqmasterbroker?create=false&waitForStart=10000
2010-05-14 18:19:13,962 [ActiveMQ Task] DEBUG failover.FailoverTransport - Connection established
2010-05-14 18:19:13,962 [ActiveMQ Task] WARN  util.LoggingTransportListener - transport [amqMessageBrokerAmqConnectionTransport] has been resumed
2010-05-14 18:19:14,025 [ActiveMQ Task] INFO  failover.FailoverTransport - Successfully reconnected to vm://amqmasterbroker?create=false&waitForStart=10000","OS: Linux / 2.6.9-67.ELsmp / i386 / 8
JVM: Java HotSpot(TM) Server VM / Sun Microsystems Inc. / 1.6.0_17-b04",aravind,eliebmann,shafina,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/10 06:34;eliebmann;VMTransport_IOException.txt;https://issues.apache.org/jira/secure/attachment/12461698/VMTransport_IOException.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-20 00:48:25.661,,,false,,,,,,,,,,,,,,,,,74822,,,Tue Mar 15 20:58:12 UTC 2011,,,,,,,,"0|i0tsm7:",171945,,,,,,,,,,,,,,,,,,,"17/May/10 06:34;eliebmann;the full stacktrace and associated reconnection logs","19/May/10 02:32;eliebmann;Forgot to mention that we amended the FailoverTransport#handleTransportFailure() method to capture the full stack trace (could probably have been done with AOP or BTrace as well). Would appreciate if someone could look into this.","20/Jan/11 00:48;shafina;Is the fix available in 5.4.2? 

After getting this exception gets Session closed exception if we try to sent message as shown below

Jan 13 15:26:28 127.0.0.1 aused by: javax.jms.IllegalStateException: The Session is closed Jan 13 15:26:28 127.0.0.1 at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:722)
Jan 13 15:26:28 127.0.0.1 at org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:922)

Is there any specific reason for session being closed after java.lang.InterruptedException ?
","15/Mar/11 20:58;tabish;Fixes in the VM Transport in 5.5.0 should resolve this issue, reopen if the problem reoccurs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ArraysIndexOutOfBoundsException : -32768 in ""BrokerService[xxx] Task"" thread",AMQ-3077,12492805,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,eric-awl,eric-awl,09/Dec/10 08:52,15/Mar/11 08:02,30/Jan/20 16:55,13/Jan/11 14:26,5.4.0,5.4.1,,,,,,5.5.0,,,Broker,,,,0,"Exception in thread ""BrokerService[SUP-tterdp31v] Task"" java.lang.ArrayIndexOutOfBoundsException: -32767
        at org.apache.activemq.openwire.BooleanStream.writeBoolean(BooleanStream.java:54)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:377)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)
        at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:228)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:181)
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:255)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1249)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:810)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:846)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)

Today this exception is not written in ActiveMQ logs but on the standard output. 
It seems that happens when network of brokers connections are stopped, but I'm not sure at all. (the number of ""bridge to ... stopped"" seems to be the same as the number of Exceptions detected)

So I need to dig into this problem to be more precise.

Eric-AWL","Linux, Java 6, Fuse Message Brokers 5.4.0-1 or 5.4.1-1",artnaseef,eric-awl,johnkidd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Dec/10 13:23;eric-awl;NetworkOfTwentyBrokersTest.java;https://issues.apache.org/jira/secure/attachment/12466628/NetworkOfTwentyBrokersTest.java","20/Dec/10 13:23;eric-awl;TransportConnection.java;https://issues.apache.org/jira/secure/attachment/12466626/TransportConnection.java","20/Dec/10 13:23;eric-awl;TransportConnector.java;https://issues.apache.org/jira/secure/attachment/12466627/TransportConnector.java","17/Dec/10 09:21;eric-awl;activemq_SIBBusModule.xml;https://issues.apache.org/jira/secure/attachment/12466453/activemq_SIBBusModule.xml","17/Dec/10 09:21;eric-awl;activemq_SIBBusSupervisor.xml;https://issues.apache.org/jira/secure/attachment/12466454/activemq_SIBBusSupervisor.xml","17/Dec/10 09:21;eric-awl;activemq_Serveur.xml;https://issues.apache.org/jira/secure/attachment/12466452/activemq_Serveur.xml","16/Dec/10 15:45;eric-awl;bsm.log;https://issues.apache.org/jira/secure/attachment/12466389/bsm.log",,,,,7.0,,,,,,,,,,,,,,,,,,,,2010-12-09 10:16:49.213,,,false,,,,,,,,,,,,,,,,,14705,,,Tue Mar 15 08:02:09 UTC 2011,,,,,,,,"0|i0agxj:",59016,,,,,,,,,,,,,,,,,,,"09/Dec/10 10:16;elisa41;I confirm that, into each broker experiencing java.lang.ArrayIndexOutOfBoundsException, there is as much number of exceptions as number of ""bridge to ... stopped"" messages.","10/Dec/10 09:22;eric-awl;Since I see a lot of ""imbrications"" of 

at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject1(OpenWireFormat.java:397)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalNestedObject1(BaseDataStreamMarshaller.java:131)
        at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.tightMarshalObjectArray1(BaseDataStreamMarshaller.java:357)
        at org.apache.activemq.openwire.v6.BrokerInfoMarshaller.tightMarshal1(BrokerInfoMarshaller.java:106)

perhaps a ""short"" usage in the BooleanStream.writeBoolean is not enough to manage complexity of the message sent ?

public void writeBoolean(boolean value) throws IOException {
        if (bytePos == 0) {
            arrayLimit++;
            if (arrayLimit >= data.length) {
                // re-grow the array.
                byte d[] = new byte[data.length * 2];
                System.arraycopy(data, 0, d, 0, data.length);
                data = d;
            }
        }
        if (value) {
            data[arrayPos] |= 0x01 << bytePos;
        }
        bytePos++;
        if (bytePos >= 8) {
            bytePos = 0;
            arrayPos++;
        }
    }


            data[arrayPos] |= 0x01 << bytePos;

arrayPos would become too big and reached 32768 limit of the ""short usage"" into the BooleanStream object ? (8 * 32768 bits => 262144 individual informations to send)

We are in a complex network of brokers situation  (that will have to be far, far more complex for our needs in the future with more than 1000 servers and 4 imbricated networks of brokers)

Eric-AWL","13/Dec/10 08:41;eric-awl;Here is a Gary Tully's comment added on User discussion forum :

That looks like some concurrent access to the brokerInfos. Can you 
open a jira issue and attach as much relevant info about your setup as 
possible. 

I think the problem is in the 
org.apache.activemq.command.BrokerInfo#copy() method, it does not deep 
copy the brokerInfo array. 

Gary, what happened with ""peerBrokerInfo"" and BrokerInfoMarshaller if one broker A is ""network connected"" on broker B and broker B is connected on broker A  too ? It's our configuration.

eric-AWL

","13/Dec/10 10:04;eric-awl;TransportConnection.java 

start() in 5.4.1

public void start() throws Exception {
        starting = true;
        try {
            synchronized (this) {
                if (taskRunnerFactory != null) {
                    taskRunner = taskRunnerFactory.createTaskRunner(this, ""ActiveMQ Connection Dispatcher: ""
                            + getRemoteAddress());
                } else {
                    taskRunner = null;
                }
                transport.start();
                active = true;
                BrokerInfo info = connector.getBrokerInfo().copy();
                info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());
                dispatchAsync(info);
                
                connector.onStarted(this);
            }
        } catch (Exception e) {
            // Force clean up on an error starting up.
            stop();
            throw e;
        } finally {
            // stop() can be called from within the above block,
            // but we want to be sure start() completes before
            // stop() runs, so queue the stop until right now:
            starting = false;
            if (pendingStop) {
                LOG.debug(""Calling the delayed stop()"");
                stop();
            }
        }
    }


and start() in 5.3.2

public void start() throws Exception {
        starting = true;
        try {
            synchronized (this) {
                if (taskRunnerFactory != null) {
                    taskRunner = taskRunnerFactory.createTaskRunner(this, ""ActiveMQ Connection Dispatcher: ""
                            + getRemoteAddress());
                } else {
                    taskRunner = null;
                }
                transport.start();
                active = true;
                dispatchAsync(connector.getBrokerInfo());
                connector.onStarted(this);
            }
        } catch (Exception e) {
            // Force clean up on an error starting up.
            stop();
            throw e;
        } finally {
            // stop() can be called from within the above block,
            // but we want to be sure start() completes before
            // stop() runs, so queue the stop until right now:
            starting = false;
            if (pendingStop) {
                LOG.debug(""Calling the delayed stop()"");
                stop();
            }
        }
    }


BrokerInfo info = connector.getBrokerInfo().copy();
info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());
dispatchAsync(info);

vs

dispatchAsync(connector.getBrokerInfo());


I suspect the difference with what happened in 5.3.2 is here ...        
We are in a configuration with ""no duplex connectors"" where A is connected to B and B is connected to A.

Eric-AWL","14/Dec/10 09:17;eric-awl; public Response processBrokerInfo(BrokerInfo info) {
        if (info.isSlaveBroker()) {
            BrokerService bService = connector.getBrokerService();
            // Do we only support passive slaves - or does the slave want to be
            // passive ?
            boolean passive = bService.isPassiveSlave() || info.isPassiveSlave();
            if (passive == false) {
                
                // stream messages from this broker (the master) to
                // the slave
                MutableBrokerFilter parent = (MutableBrokerFilter) broker.getAdaptor(MutableBrokerFilter.class);
                masterBroker = new MasterBroker(parent, transport);
                masterBroker.startProcessing();
            }
            LOG.info((passive?""Passive"":""Active"")+"" Slave Broker "" + info.getBrokerName() + "" is attached"");
            bService.slaveConnectionEstablished();
        } else if (info.isNetworkConnection() && info.isDuplexConnection()) {
            // so this TransportConnection is the rear end of a network bridge
            // We have been requested to create a two way pipe ...
            try {
                // We first look if existing network connection already exists for the same broker Id
                // It's possible in case of brief network fault to have this transport connector side of the connection always active
                // and the duplex network connector side wanting to open a new one
                // In this case, the old connection must be broken
                BrokerId	remoteBrokerId = info.getBrokerId();
                setDuplexRemoteBrokerId(remoteBrokerId);
                CopyOnWriteArrayList<TransportConnection> connections = this.connector.getConnections();
                for (Iterator<TransportConnection> iter = connections.iterator(); iter.hasNext();) {
            		TransportConnection c = iter.next();
                    if ((c != this) && (remoteBrokerId.equals(c.getDuplexRemoteBrokerId()))) {
                        LOG.warn(""An existing duplex active connection already exists for this broker ("" + remoteBrokerId + ""). Stopping it."");
                        c.stop();
                    }
                }
                Properties properties = MarshallingSupport.stringToProperties(info.getNetworkProperties());
                Map<String, String> props = createMap(properties);
                NetworkBridgeConfiguration config = new NetworkBridgeConfiguration();
                IntrospectionSupport.setProperties(config, props, """");
                config.setBrokerName(broker.getBrokerName());
                URI uri = broker.getVmConnectorURI();
                HashMap<String, String> map = new HashMap<String, String>(URISupport.parseParameters(uri));
                map.put(""network"", ""true"");
                map.put(""async"", ""false"");
                uri = URISupport.createURIWithQuery(uri, URISupport.createQueryString(map));
                Transport localTransport = TransportFactory.connect(uri);
                Transport remoteBridgeTransport = new ResponseCorrelator(transport);
                duplexBridge = NetworkBridgeFactory.createBridge(config, localTransport, remoteBridgeTransport);
                duplexBridge.setBrokerService(broker.getBrokerService());
                // now turn duplex off this side
                info.setDuplexConnection(false);
                duplexBridge.setCreatedByDuplex(true);
                duplexBridge.duplexStart(this, brokerInfo, info);
                LOG.info(""Created Duplex Bridge back to "" + info.getBrokerName());
                return null;
            } catch (TransportDisposedIOException e) {
                LOG.warn(""Duplex Bridge back to "" + info.getBrokerName() + "" was correctly stopped before it was correctly started."");
                return null;
            } catch (Exception e) {
                LOG.error(""Creating duplex network bridge"", e);
            }
        }
        // We only expect to get one broker info command per connection
        if (this.brokerInfo != null) {
            LOG.warn(""Unexpected extra broker info command received: "" + info);
        }
        this.brokerInfo = info;
        broker.addBroker(this, info);
        networkConnection = true;
        List<TransportConnectionState> connectionStates = listConnectionStates();
        for (TransportConnectionState cs : connectionStates) {
            cs.getContext().setNetworkConnection(true);
        }
        return null;
    }


=> broker.addBroker(this, info)

""info"" object seems to become very big in the case of a lot of brokers with a lot of network connections between them . (That's our case !)

Why is it now necessary (since 5.4) for a ""transport connector side"" broker to export already established peer connections to each new ""initator side (network connector)"" broker ?

Eric-AWL","15/Dec/10 08:03;eric-awl;TransportConnection.java 

BrokerInfo info = connector.getBrokerInfo().copy();
info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());
dispatchAsync(info);


I think it is useful for Openwire v6 ConnectionControl (connectedBrokers). I don't find that ActiveMQ internal process need to know that broker A is connected to B that is connected to C, that is connected to D, that is connected to A .........

info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos()) => Don't we need to break the BrokerInfo recursivity here, and only keep the first level of peerBrokers before sending it to the network connector side ????

We have a lot of brokers that are all connected together in the two ways with not duplex network connection.

Eric-AWL","15/Dec/10 13:08;gtully;yea, at a minimum there should be duplicate detection, only add one that is not already present.

If this is the root of your problem, it should be easy to create a test case that trys to serialize X brokerInfos, this should blow the boolean output stream.

Also, I think the propagation of peer broker infos should be configurable, it is used to let the clients know about the list of alternative brokers, so it should only be gathered if necessary. https://issues.apache.org/jira/browse/AMQ-2632

We need to get some test cases that can demonstrate this problem and can validate and protect the changes when it is fixed.","15/Dec/10 16:47;eric-awl;If I add an algorithm that 
- adds only the first level of peerbrokers in  TransportConnection.start() instead of ""info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());""
- detects that a peerbroker = current broker in TransportConnection.processBrokerInfo(....) before ""broker.addBroker(this, info);""

Is it always compatible with ""Automatic cluster update and rebalance"" new 5.4 feature ?

(If it is the case, I will try to create specific test case too).

Eric-AWL","15/Dec/10 17:19;gtully;not sure on the first part, the first level restriction, I think that should be configurable because it is topology dependent.

great, patches with tests are always most welcome. There are a few update rebalance feature tests in activemq-core that will protect that feature with your changes. ","16/Dec/10 15:42;eric-awl;mmmhhh.

I just added this into openwire/v6/BrokerInfoMarshaller.java

    public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs) throws IOException {
        super.tightUnmarshal(wireFormat, o, dataIn, bs);

        BrokerInfo info = (BrokerInfo)o;
        info.setBrokerId((org.apache.activemq.command.BrokerId) tightUnmarsalCachedObject(wireFormat, dataIn, bs));
        info.setBrokerURL(tightUnmarshalString(dataIn, bs));

        if (bs.readBoolean()) {
            short size = dataIn.readShort();
            org.apache.activemq.command.BrokerInfo value[] = new org.apache.activemq.command.BrokerInfo[size];
            for( int i=0; i < size; i++ ) {


                System.out.println(""Nouveau sous-niveau : i = "" + (i+1) +  ""/(size = "" + size + "")"");

                value[i] = (org.apache.activemq.command.BrokerInfo) tightUnmarsalNestedObject(wireFormat,dataIn, bs);

                System.out.println(""Fin du sous-niveau : i = "" + (i+1) +  ""/(size = "" + size + "")"");
            }
            info.setPeerBrokerInfos(value);
        }
        else {
            info.setPeerBrokerInfos(null);
        }

/* Eric Vincent remplacement 3 lignes a la place de la ligne suivante */
        String brokerName = tightUnmarshalString(dataIn, bs);
        System.out.println(""BrokerInfo / BrokerName = "" + brokerName);
        info.setBrokerName(brokerName);

/* Eric Vincent
        info.setBrokerName(tightUnmarshalString(dataIn, bs));
*/
        info.setSlaveBroker(bs.readBoolean());
        info.setMasterBroker(bs.readBoolean());
        info.setFaultTolerantConfiguration(bs.readBoolean());
        info.setDuplexConnection(bs.readBoolean());
        info.setNetworkConnection(bs.readBoolean());
        info.setConnectionId(tightUnmarshalLong(wireFormat, dataIn, bs));
        info.setBrokerUploadUrl(tightUnmarshalString(dataIn, bs));
        info.setNetworkProperties(tightUnmarshalString(dataIn, bs));

    }

And you will find in the log file I put into this thread, what I get with no more than 9 embedded brokers (4 sibBusModule, 1 busSupervisor, 2 servers) on 4 servers (td0sib[01,02][s,v] that are connected togethers with different network of brokers or direct connections.

I think that the current algorithm (without any level constraint) is not good at all for ActiveMQ global scalability.

I will try to change something, but I don't know exactly why it is necessary that each broker knows the global connection hierarchy beyond the first level... And when there are loops, I don't know what could happen ....

Eric-AWL

","16/Dec/10 15:45;eric-awl;the result of the launch of an embedded broker (sibBusModule-TestDeCharge-td0sib01s) 

when ""busModule is alive"", the jms connect to the embedded broker is OK ","17/Dec/10 09:16;eric-awl;I forgot to say that all these brokers are not in the same network of brokers.

SIBBusModules brokers have similar activemq.xml configurations
Serveur brokers have similar activemq.xml configurations
SibBusSupervisor broker has a specific activemq.xml configuration.

","17/Dec/10 09:21;eric-awl;3 activemq.xml attached.","17/Dec/10 09:39;eric-awl;If this important change was made only to provide the ""automatic dynamic failover"" capability, it seems that a new concept (failover brokers with a specific discovery process) should be implemented instead of using standard network of brokers implementation....

Perhaps, it should be better to add a parameter in network of brokers definition, that specify that a network of brokers is dedicated for failover capability, and use a ""ConcurrentHashMap<String, BrokerInfo[]> peerBrokers"" in brokerInfo structure (String = the name of the network of broker) instead of a simple peerBrokers[] array ????

The problem is then completely different....

bsm.log shows us that on a small environment, we can receive a very big ""BrokerInfo"" message with doubles and potential loops. Our production environment is far more complex than this.  I'm quite convinced that it's why we get this ""ArrayOutOfBoundsException"" issue. (We have more than 262000 boolean values to code in the same BrokerInfo structure).

Unfortunately, I will be forced to indicate to production environment that we can not use the 5.4 version. It's a big problem for us, since I already added a patch for duplex network of brokers in 5.3.2 that is now integrated in 5.4 .

Eric-AWL","17/Dec/10 13:06;eric-awl;Is this an acceptable workaround, if I add in TransportConnection.java the condition below :


BrokerInfo info = connector.getBrokerInfo().copy();

if (this.connector.isUpdateClusterClients())
              info.setPeerBrokerInfos(this.broker.getPeerBrokerInfos());

dispatchAsync(info);

and tests it with Maven Tests to verify regressions ?

By this way, if the transport connector is not used for automatic failover purpose (this is the default), it will not export its own peer brokers.

Since I don't use this 5.4 new failover function, I think it will resolve our problem on our complex network of brokers architecture (with exchanges of too big brokerInfo objects), without changing anything for those who now want to use it ...

Eric-AWL","17/Dec/10 13:46;gtully;yes, I think the behavior should be conditional on isUpdateClusterClients, the other place that that condition should be checked is in org.apache.activemq.broker.TransportConnector#getConnectionControl() before the peer brokers are added to the connectedBrokers string, such that the info is only passed to clients if needed.

See previous comment and related issue ref: https://issues.apache.org/jira/browse/AMQ-3077?focusedCommentId=12971673&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12971673

A patch, validated with mvn clean test in activemq-core would be great.

When that feature is enabled, we need to weed out duplicates from the list to ensure the list does not grow in cyclic networks. ","17/Dec/10 14:39;eric-awl;Ok. 

I just changed the 2 places by adding the condition (isUpdateClusterClients()) and did a small test with my own traces. There are no longer a hierarchy of brokerInfo daughter structures, just the connected broker brokerInfo structure brokerName is written on standard output.

I will ask Jean-Marcel to patch our ""big qualify environment"" to validate that there is no longer ArrayOutOfBoundsException .

If maven tests are OK with these 2 small changes, do you consider that these 2 additional conditions will be integrated into future versions without any needs to program a specific new test to demonstrate anymore the problem ?","17/Dec/10 15:49;gtully;a test is the only way to protect your changes into the future. So I think a test is necessary. Think of it as an insurance policy to protect your use case, worth the premium of time that it takes to write.","17/Dec/10 15:55;eric-awl;What is the simplest way to simulate a complex network of brokers situation in a small test ? (one JVM that launches X embedded brokers with one transport connector and the corresponding multicast network connector ?)

Is there an existing JUnit test that I can use as an initial pattern ?","17/Dec/10 18:46;gtully;something like org.apache.activemq.usecases.ThreeBrokerQueueNetworkTest is what you need. There are a bunch of tests that extend org.apache.activemq.JmsMultipleBrokersTestSupport to do that sort of thing.","20/Dec/10 13:23;eric-awl;Patch (TransportConnection.java + TransportConnector.java) + test (20 brokers with specific stop/start)","20/Dec/10 13:27;eric-awl;The patch consists in adding 2 conditions (isUpdateClusterClient()) on the BrokerInfo structure sent.

The test consists in
- starting 20 brokers with a transport connector and a network connector in a way all brokers are connected to the 19 other ones.
- stopping the 10 first ones
- restarting the 10 first ones.

Without the patch, the ""arrayOutOfBoundsException"" is raised during the 10 first ones are restarted  (loop ?).

This patch is just a workaround to be compatible with 5.3 version usage, and not a final solution of the identified problem

Eric-AWL","23/Dec/10 11:03;eric-awl;Hi Gary

Do you have some news for me about this problem after I provided a patch and a JUnit Test ? 

Thank you
Eric-AWL","05/Jan/11 08:02;eric-awl;Hi Gary

I wish you an happy new year. How can we progress together on this particular subject ? We use this patch on our test environment, and don't get anymore exceptions.

Eric-AWL","05/Jan/11 10:09;gtully;hny to you too. next step is to review your changes and test, then integrate them. I will hopefully get some time to do this in the next few days.","12/Jan/11 16:34;eric-awl;Hi Gary

No news ?

Eric-AWL","12/Jan/11 16:56;gtully;I was able to reproduce the issue from your test, thanks. I am working on the fix. Part of the problem is that the peer broker info is duplicated on each networked broker. The other issue is that the peerBrokerInfo needs to be cleared before a list of peer brokers is created for propagation to a client or to a peer, as the second level information is not relevant at the moment.
Some of my tests are showing blocking with duplex network connector start and I want to get to the bottom of that before progressing further.","12/Jan/11 17:31;eric-awl;Thank you for your information. I think this will be difficult to fully resolve since automatic failover cluster group concept is ambitious in architecture that is complex as ours  (with loops and a lot of connected brokers in duplex and non duplex).

Don't you think a specific new ""dedicated failover network of brokers"" (with discover mechanism) concept different from ""duplex/non duplex network of brokers"" used for scalability and role isolation, wouldn't be more easier to manage and program (instead of propagating the full network of brokers topology to each broker and associate them all, a role as potential failover broker)  ? So, failover and scalability/isolation problems would be totally distinguished.

All my brokers connected in my different network of brokers, have not the same role. So, in my architecture with a lot of brokers, even if I wanted to use failover, it should be good for me that I could decide by a dedicated discovery rule, what brokers in the global network of brokers, can be chosen as failover broker,and this, for each specific client to broker connection.

Eric-AWL","12/Jan/11 17:50;gtully;I agree. There is a bunch of relevant configuration around the cluster update feature, filters etc and it is configurable per transport connector. Also, the fact that currently the entire topology is propagated is wrong, part of the fix will limit the information to a single level.","13/Jan/11 14:26;gtully;fix in r1058577

Fixed issue with duplication and size of collected peer broker info that was propagated around a network.
In a network a peer is the other end of a network bridge, such that a consumer can connect to it to get a chance at the same destinations. It is not a real peer ( as in a two way association) unless the network is duplex or there is another bridge in the opposite direction.
This is relevant for https://issues.apache.org/jira/browse/AMQ-2632","13/Jan/11 14:28;gtully;RE: Link as part of AMQ-2632: These fixes ensure that transport connector config (setRebalanceClusterClients, setUpdateClusterClients) is respected for cluster updates.
Also of note is the fact that the cluster members respect the oneway nature of a network connector (demand forwarding bridge). ","13/Jan/11 15:50;eric-awl;Hi Gary

Thank you very much.

I don't fully understand. Do you mean, that there is a risk that problems appear with network of brokers with Duplex connections ?

Eric-AWL","13/Jan/11 15:54;gtully;no, what do u not understand?","13/Jan/11 16:23;eric-awl;We use ActiveMQ brokers with complex configuration (now we have around 50 brokers in production on 2 sites for a french electricity provider smart-meter project. Our final goal is between 100 and 1000 brokers on several sites, connected by several different network of brokers).

In some cases, we want to use duplex configuration : when there is an identified ""client broker"" that connects to an ""applicative service provider broker"" (example an ""SMS gateway"" that sends SMS to SMS operator and asynchronously send SMS corresponding notifications to client application) 

And in some other cases, we want to use two single half-duplex configurations (when the two brokers are simultaneously client and provider for some parts of a global applicative service).

My original test only showed that 20 brokers with 2 half-duplex configurations didn't work. The original test didn't try with duplex connections : a loop in peers configuration was created with 2 half-duplex connections, and this loop was the easier way to generate such exception for the test.

In production environment now, we only use 2 half-duplex connections everywhere (for our 50 brokers) with 5.3.2 version. 

We want to be able to use duplex connections, but a bug was discovered with duplex connections and ""not straight"" network outages (we corrected this bug together some months ago). So we looked for a stable 5.4 version ...

We won't use at all failover mechanism since (and to resume), all application has its own embedded broker.

Thank you.
Eric-AWL","13/Jan/11 16:55;gtully;Try a test with duplex connections to be sure, but I think you will be fine now.","14/Jan/11 08:32;eric-awl;Does the 5.5-SNAPSHOT (download page) compiled today (January 14th), include the correction ?","14/Jan/11 09:58;gtully;yes.","30/Jan/11 03:46;johnkidd;we are seeing this issue in production with 5.4.2. We have a network of brokers consisting of about 20 broker instances. What is the side effect of this issue? Lost data? Brokers dropped out of the broker network permanently?

Thanks for any comments.","14/Mar/11 15:06;ratman;Hi guys,
I have the same problem using AMQ 5.4.2 on my production environment.
Is this problem critical? What are the side effects?
I can't use AMQ RC 5.5 in production.
Any suggestions?

Thanks","15/Mar/11 08:02;eric-awl;Hi

The problem could appear if you have a loop in your network of brokers topology. If it is not the case, it is likely that you won't be impacted at all.

Eric-AWL",,,,,,,,,,,,,,,
Equals method return wrong result for TopicSession / QueueSession,AMQ-2213,12483738,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,atooni,atooni,21/Apr/09 07:17,07/Mar/11 22:49,30/Jan/20 16:55,07/Mar/11 22:49,5.2.0,,,,,,,5.5.0,,,,,,,0,"The equals method return false even when it is executed on the same object for the specialized classes of Session (TopicSession, QueueSession). If those objects are held within a List, the contains method would return false even if the object in question is already in the list. 

This is a minor issue as the cleanups are normally done on the connection level and users shouldn't need to keep track of open sessions for a later cleanup.
 

",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Apr/09 07:18;atooni;SessionEqualsTest.java;https://issues.apache.org/jira/secure/attachment/12461469/SessionEqualsTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-03-07 22:49:58.843,,,false,,,,,,,,,,,,,,,,,14658,,,Mon Mar 07 22:49:58 UTC 2011,,,,,,,,"0|i0akr3:",59635,,,,,,,,,,,,,,,,,,,"21/Apr/09 07:18;atooni;Attached a JUnit test showing the error. ","07/Mar/11 22:49;tabish;Fixed in trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Statistics plugin sample hanging when switching to http transport protocol,AMQ-3026,12483863,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jymen,jymen,09/Nov/10 18:24,05/Mar/11 17:20,30/Jan/20 16:55,05/Mar/11 17:20,5.4.1,,,,,,,5.5.0,,,Transport,,,,0,"When running using HTTP transport connector the provided sample ActiveMQ stat sample hangs on the :
MapMessage reply = (MapMessage) consumer.receive(); 

to reproduce : 
just use the activeMQ provided sample statistics plugin sample copied below :

      ActiveMQSession session = broker.getSession() ;
      Queue replyTo = session.createTemporaryQueue();
      MessageConsumer consumer = session.createConsumer(replyTo);

      Queue testQueue = session.createQueue(""TEST.FOO"");
      MessageProducer producer = session.createProducer(null);

      String queueName = ""ActiveMQ.Statistics.Destination."" + testQueue.getQueueName() ;
      Queue query = session.createQueue(queueName);

      Message msg = session.createMessage();

      producer.send(testQueue, msg) ;
      msg.setJMSReplyTo(replyTo);
      producer.send(query, msg);
      MapMessage reply = (MapMessage) consumer.receive();
      assertNotNull(reply);
      assertTrue(reply.getMapNames().hasMoreElements());

      for (Enumeration e = reply.getMapNames();e.hasMoreElements();) {
          String name = e.nextElement().toString();
          System.err.println(name + ""="" + reply.getObject(name));
      }

1) Check that it works  correclty using an ActiveMQ TCPIP based session.  ===> OK
2) just replace the ActiveMQ TCPIP based session by an HTTP transport session.  ===> KO

The sample will remain unresponsive on the : MapMessage reply = (MapMessage) consumer.receive(); instruction then.


",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3202,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-05 17:20:30.382,,,false,,,,,,,,,,,,,,,,,46500,,,Sat Mar 05 17:20:49 UTC 2011,,,,,,,,"0|i0ak9r:",59557,,,,,,,,,,,,,,,,,,,"05/Mar/11 17:20;tabish;Root cause is the stats plugin sending an empty map message.","05/Mar/11 17:20;tabish;Fixed by AMQ-3202",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Producer started before consumer leads to a ""javax.jms.JMSException: Unmatched acknowledege"" (repro available)",AMQ-2673,12483660,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,fredmoore,fredmoore,26/Mar/10 09:54,02/Mar/11 19:51,30/Jan/20 16:55,02/Mar/11 19:51,5.3.0,5.3.1,,,,,,5.5.0,,,,,,,0,"When a Producer is started before a Consumer we get a ""javax.jms.JMSException: Unmatched acknowledege"".

The same application runs fine when a Producer is started after a Consumer.

Attached you will find full repro instruction code and scripts.",windows xp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/10 09:55;fredmoore;activeMQTest_UnmatchedAcknowledge.zip;https://issues.apache.org/jira/secure/attachment/12461633/activeMQTest_UnmatchedAcknowledge.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-03-02 19:51:20.191,,,false,,,,,,,,,,,,,,,,,46499,,,Wed Mar 02 19:51:20 UTC 2011,,,,,,,,"0|i0akhr:",59593,,,,,,,,,,,,,,,,,,,"26/Mar/10 09:55;fredmoore;Attached you will find full repro instruction code and scripts.
","02/Mar/11 19:51;tabish;Ran the supplied test against the 5.5 SNAPSHOT, no unmatched ack exceptions were produced.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connecting to broker using discovery protocol fails,AMQ-2981,12483499,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,justayogi,justayogi,15/Oct/10 12:55,02/Mar/11 12:35,30/Jan/20 16:55,02/Mar/11 12:35,5.4.0,5.4.1,,,,,,5.5.0,,,Transport,,,,1,"steps to reproduce

1. have a broker running on a port say '12345' and group say 'test' using activemq-core version 5.4.0 or 5.4.1
2.  use url 
discovery:(multicast://default?group=test)?reconnectDelay=1000&maxReconnectAttempts=30&useExponentialBackOff=false 
to connect to the broker
3. the following exception occurs



Caused by: javax.jms.JMSException: Invalid connect parameters: {reconnectDelay=1000, maxReconnectAttempts=30, useExponentialBackOff=false}
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1298)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1382)
	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at org.springframework.jms.connection.SingleConnectionFactory$SharedConnectionInvocationHandler.invoke(SingleConnectionFactory.java:550)
	at $Proxy34.createSession(Unknown Source)
	at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:457)
	... 38 more
Caused by: java.io.IOException: Invalid connect parameters: {reconnectDelay=1000, maxReconnectAttempts=30, useExponentialBackOff=false}
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:45)
	at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:594)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:86)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1276)
	... 48 more
Caused by: java.lang.IllegalArgumentException: Invalid connect parameters: {reconnectDelay=1000, maxReconnectAttempts=30, useExponentialBackOff=false}
	at org.apache.activemq.transport.TransportFactory.doCompositeConnect(TransportFactory.java:159)
	at org.apache.activemq.transport.TransportFactory.compositeConnect(TransportFactory.java:93)
	at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:844)
	at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:135)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)


4. downgrading to amq 5.3.2 solves the problem

NOTE: a new functionality has been added to 5.4.0 

ref : http://activemq.apache.org/discovery-transport-reference.html

Applying parameters to discovered transports
From 5.4, transport parameters in the URI will also be applied to discovered transports. Therefore, transport parameters may also include parameters for the discovered transport. For example, adding the connectionTimeout parameter to the URI will apply the parameter to every discovered TCP transport, even though this parameter is not a Discovery transport option.


I think the above change has caused the problem






","embedded activemq in tomcat
spring jms for connection pooling and connections",justayogi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-28 17:01:09.83,,,false,,,,,,,,,,,,,,,,,14654,,,Wed Mar 02 12:35:05 UTC 2011,,,,,,,,"0|i0akbr:",59566,,,,,,,,,,,,,,,,,,,"28/Feb/11 17:01;dejanb;Using the following URI

discovery:(multicast://default?group=test&reconnectDelay=1000&maxReconnectAttempts=30&useExponentialBackOff=false

with reconnection params in the inner URI works. We need to change the docs for this","02/Mar/11 12:26;dejanb;After a bit more investigation, it seems that this is regression of https://issues.apache.org/jira/browse/AMQ-2849","02/Mar/11 12:35;dejanb;Fixed with svn revision 1076192",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation References Advisory Messages which are not valid in xsd,AMQ-2223,12483713,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,userx,userx,22/Apr/09 19:43,27/Feb/11 22:03,30/Jan/20 16:55,27/Feb/11 22:03,5.2.0,,,,,,,5.5.0,,,Broker,Documentation,,,0,"The [online documentation|http://activemq.apache.org/advisory-message.html] for Advisory Messages states that in ActiveMQ 5.2 the following new Advisory topics can be specified:
* advisoryForSlowConsumers
* advisdoryForFastProducers
* advisoryForDiscardingMessages
* advisoryForDelivery
* advisoryForConsumed
* advisoryWhenFull

When using a validating xml parser, as is used when configuring with spring via Fuse ESB 4.0.0.4, none of these properties can be specified on the policyEntry element, as they are not present in the XSD.  It seems that these should be added to the [existing 5.2 xsd|http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd] and corresponding reference documentation.","Fuse ESB 4.0.0.4, osgi",userx,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-27 22:03:23.175,,,false,,,,,,,,,,,,,,,,,46509,,,Sun Feb 27 22:03:23 UTC 2011,,,,,,,,"0|i0akqv:",59634,,,,,,,,,,,,,,,,,,,"27/Feb/11 22:03;tabish;These values are now contained in the xsd.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing documentation: http://activemq.apache.org/producer-flow-control.html,AMQ-2633,12483692,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,scoopex,scoopex,02/Mar/10 14:11,25/Feb/11 23:47,30/Jan/20 16:55,25/Feb/11 23:47,5.3.0,,,,,,,5.5.0,,,Broker,,,,0,"
According to http://activemq.apache.org/producer-flow-control.html resource usage can be limited 
in ActiveMQ by using the follwing configuration options:
-----
<systemUsage>
       <systemUsage sendFailIfNoSpaceAfterTimeout=""3000"">
         <memoryUsage>
           <memoryUsage limit=""700 mb""/>
         </memoryUsage>
         <storeUsage>
           <storeUsage limit=""1 gb"" name=""foo""/>
         </storeUsage>
         <tempUsage>
           <tempUsage limit=""1 gb""/>
         </tempUsage>
       </systemUsage>
</systemUsage>
-----

Can you add documentation about:
- what is limited in detail
- what is ""name"" needed for
- what the producer/consumer sees it the limits are reached
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-25 23:47:04.293,,,false,,,,,,,,,,,,,,,,,46498,,,Fri Feb 25 23:47:04 UTC 2011,,,,,,,,"0|i0akk7:",59604,,,,,,,,,,,,,,,,,,,"25/Feb/11 23:47;tabish;The flow control documentation has been updated considerably since this was opened. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compressed text message received by consumer uncompressed,AMQ-2929,12483860,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mwc_tonesoft,mwc_tonesoft,22/Sep/10 00:23,25/Feb/11 22:34,30/Jan/20 16:55,25/Feb/11 22:34,5.3.2,,,,,,,5.5.0,,,Broker,,,,1,"I have a queue setup to send and consume compressed text messages.  This is done via Spring setting ActiveMQConnectionFactory.useCompression to true.  If the consumer connects to this queue before the first message is arrives, everything works great.

If the messages are sent to this queue before the consumer connects, those early messages will cause ZipException ""unknown compression method"" when consumed by the belated consumer. Debugger shows that the ActiveMQTextMessage.content already contains the uncompressed text (with 4 leading length bytes) when ActiveMQTextMessage.getText() is called.

If I set useCompression to false, early messages are consumed with no problems.  Please look into this.

I notice that after ActiveMQTextMessage.getText() decompress the message, it does not set compressed to false. Not sure if that is the cause.
",ActiveMQ 5.3.2 / Camel 2.2.0,violatohr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/10 00:17;mwc_tonesoft;ActiveMQConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461870/ActiveMQConsumerTest.java","23/Sep/10 00:17;mwc_tonesoft;ActiveMQConsumerTest.xml;https://issues.apache.org/jira/secure/attachment/12461871/ActiveMQConsumerTest.xml","14/Oct/10 22:19;mwc_tonesoft;ActiveMQProducerTest.java;https://issues.apache.org/jira/secure/attachment/12461869/ActiveMQProducerTest.java","14/Oct/10 22:19;mwc_tonesoft;ActiveMQProducerTest.xml;https://issues.apache.org/jira/secure/attachment/12461821/ActiveMQProducerTest.xml",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2010-09-22 18:47:52.663,,,false,,,,,,,,,,,,,,,,,14692,,,Fri Feb 25 22:34:17 UTC 2011,,,,,,,,"0|i0akdb:",59573,,,,,,,,,,,,,,,,,,,"22/Sep/10 10:13;mwc_tonesoft;Here is how the connection factory defined:

    <bean id=""jmsXmlFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory""
          destroy-method=""stop"">
        <property name=""connectionFactory"">
            <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
                <property name=""brokerURL"" value=""${brokerConnectionURL}""/>
                <property name=""userName"" value=""${activemq.username}""/>
                <property name=""password"" value=""${activemq.password}""/>
                <property name=""clientIDPrefix"" value=""${processUniqueName}Xml-${serverId}-${pid}""/>
                <property name=""transformer"">
                    <bean class=""org.apache.activemq.util.xstream.XStreamMessageTransformer""/>
                </property>
                <property name=""useCompression"" value=""true""/>
            </bean>
        </property>
    </bean>
","22/Sep/10 10:20;mwc_tonesoft;Another observation is that while the message is enqueued with no consumer, using JConsole [browseMessages] button on that queue shows the decompressed message text. I would expect it to be unreadable compressed binary.","22/Sep/10 16:51;mwc_tonesoft;Debugger shows the mistake came off the wire. When the client reads the message from the wire, ActiveMQTextMessageMarshaller created the ActiveMQTextMessage with command.Message.compressed == true and Message.content contains decompressed text.

Therefore, there two ActiveMQ broker bugs:

1) The message queued with no consumer should not be decompressed.

2) When the message is decompressed, the compressed flag should be set to false before sending the message to the belated consumer.
","22/Sep/10 18:42;mwc_tonesoft;Indeed adding the following line between line 88 and 89 of ActiveMQTextMessage.java fixed the second bug and offer a temporary workaround for the problem as a whole:

diff ActiveMQTextMessage.java patch/ActiveMQTextMessage.java 
88a89
>                     setCompressed(false);

The first bug mentioned above needs to be fixed, i.e. the broker must not call ActiveMQTextMessage.getText() to avoid decompressing the message when no consumer is available when the message is enqueued.
","22/Sep/10 18:47;tabish;Can you provide a unit test or sample that demonstrates the issue, it would help to ensure the problem gets fixed and stays fixed.","23/Sep/10 00:17;mwc_tonesoft;Attached the test source program and its Spring xml. A producer is needed that uses the same jmsFactory defined in this XML to pump some messages (compressed) to the ""test.registration"" queue before running the test program. No message will be retrieved due to the ZipException.","24/Sep/10 19:30;tabish;Perhaps you could create a JUnit test case that reproduces this?  Or at least provide the source for  your producer?","14/Oct/10 22:19;mwc_tonesoft;The producer code you asked for. Please fix the broker.","09/Nov/10 01:56;mwc_tonesoft;Latest findings
============
An unconsumed message in a queue is decompressed when a JMX client code calls ""browse()"" on that Queue's MBean. Below is a stack trace captured by Eclipse (sorry about not having full class names).

""ActiveMQMonitorModule ... line: 86"" is where our code calls the ""browse"" method of the Queue's MBean. This led to ""ActiveMQTextMessage.getText() line: 83"", which decompressed the message, allocating large amount of memory, and possibly killing the broker altogether.

Another side effect is that the message is permanently decompressed in the queue, and due to the other bug mentioned in my 9/22 comment, the consumer receives a message that is decompressed but with the wrong (isCompressed() == true) result.

Our work-around is to call the MBean's ""browseMessages()"" with the patch for AMQ-3023. However, if you use JConsole to browse the unconsumed messages, it too will trigger the decompression of messages (possibly killing the broker due to out of memory). A nasty booby trap.

One possible fix is for OpenTypeSupport.TextMessageOpenTypeFactory.getFields(Object) to check for m.isCompressed(), and if true not to call m.getText().  See line 367 of OpenTypeSupport.java.

{code}
Thread [SelfMonitor] (Evaluating)	
	InflaterInputStream(InputStream) line: 91 [local variables unavailable]
	ActiveMQTextMessage.getText() line: 83 [local variables unavailable]	
	OpenTypeSupport$TextMessageOpenTypeFactory.getFields(Object) line: 367	
	OpenTypeSupport.convert(Message) line: 397	
	QueueView(DestinationView).browse(String) line: 151	
	QueueView(DestinationView).browse() line: 132	
	GeneratedMethodAccessor43.invoke(Object, Object[]) line: not available	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	
	Method.invoke(Object, Object...) line: 597	
	StandardMBeanIntrospector.invokeM2(Method, Object, Object[], Object) line: 93	
	StandardMBeanIntrospector.invokeM2(Object, Object, Object[], Object) line: 27	
	StandardMBeanIntrospector(MBeanIntrospector<M>).invokeM(M, Object, Object[], Object) line: 208	
	PerInterface<M>.invoke(Object, String, Object[], String[], Object) line: 120	
	StandardMBeanSupport(MBeanSupport<M>).invoke(String, Object[], String[]) line: 262	
	AnnotatedMBean(StandardMBean).invoke(String, Object[], String[]) line: 391	
	DefaultMBeanServerInterceptor.invoke(ObjectName, String, Object[], String[]) line: 836	
	JmxMBeanServer.invoke(ObjectName, String, Object[], String[]) line: 761	
	ActiveMQMonitorModule$1QueueValueAccessor.getValue() line: 86	
	ActiveMQMonitorModule$1QueueValueAccessor.getValue() line: 67	
	BaseModuleAttribute<D>.getCurrentValue() line: 106	
	ActiveMQMonitorModule(BaseMonitorModule).getCurrentModuleData() line: 105	
	MonitorData.populateModuleData(MonitorModule) line: 195	
	MonitorGenerator.process() line: 135	
	BaseRouteBuilder$1.run() line: 81	
	BaseRouteBuilder$2.run() line: 176	
	TimerThread.mainLoop() line: 512	
	TimerThread.run() line: 462	
{code}","25/Feb/11 22:34;tabish;TextMessage class now clears the compressed flag when its body is uncompressed to avoid receiving a message in an invalid state.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport always re-connects to the first configured transport instead of the original transport speficied in the connection url,AMQ-2944,12483836,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,rarciere,rarciere,24/Sep/10 15:35,25/Feb/11 18:49,30/Jan/20 16:55,25/Feb/11 18:49,5.3.1,,,,,,,5.5.0,,,,,,,0,"I am using a single broker configured to accept both tcp and ssl connections using the configuration below

<transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
       <transportConnector name=""ssl"" uri=""ssl://0.0.0.0:61617""/>
</transportConnectors>

The clients are configured to use the failover transport over ssl to connect to a single broker (e.g. URL: failover:ssl://Host:61616).  Upon startup the client correctly connects to the broker on port 61617 via ssl.  I then simulate a network outage and the transport is interrupted and waits for the connection to become available.  After a short amount of time the Broker detects inactivity on the connection and then drops the connection (viewed via JMX and Jconsole).  When the network connection is restored, the client reconnects to broker on port 61616 using tcp instead of ssl on port 61617 (not good if you require ssl encryption).

It appears that the ordering of the transportConnectors in the activemq.xml file affects which transport is used upon resumption of an interrupted failover transport.  It turns out that upon reconnection the first defined transport will always be used regardless of what transport was specified in the original client connection url.  Changing the ordering to the following fixes the problem and upon reconnection the ssl transport will be used.  However, the reverse issue will occur for clients that originally connection via tcp transport where upon reconnection they will connect via ssl transport instead of tcp.

<transportConnectors>
       <transportConnector name=""ssl"" uri=""ssl://0.0.0.0:61617""/>
       <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
</transportConnectors>",,bsnyder,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Sep/10 18:56;rarciere;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461874/activemq.xml",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-27 17:56:26.322,,,false,,,,,,,,,,,,,,,,,46511,,,Fri Feb 25 18:49:05 UTC 2011,,,,,,,,"0|i0akd3:",59572,,,,,,,,,,,,,,,,,,,"27/Sep/10 17:56;tabish;Have you tried with the v5.4.1 release of ActiveMQ, there were some changes in the FailoverTransport that might have resolved your issue.","27/Sep/10 18:34;rarciere;I tested with version 5.4.1 and the issue is still present.  Other versions that I tested with and which exhibit the issue are 5.3.1, 5.4.0 & 5.4.1.","27/Sep/10 18:50;tabish;Can you attach you full broker config.  (activemq.xml)","27/Sep/10 18:56;rarciere;My Activemq.xml configuration file","27/Sep/10 21:25;tabish;The code is working as designed, the first transport in the config file is reported to the client upon connection and that value updates the FailoverTransport.  ","04/Oct/10 14:38;rarciere;If the design is to use the first transport in the configuration file (which probably should be documented), then that poses a problem in environments where you require clients to connect via tcp or ssl exclusively (based on each clients connection requirements).  My main concern is that clients that require ssl encryption always connect via ssl because of the security implications.  My workaround has been to put the ssl connection first in the config file which I can live with, but that forces other clients on local network or vpn to reconnect when transport is interrupted via ssl instead of tcp which still works, but is less then optimum.

Wouldn't it make more sense to have clients only reconnect on transports specified in the configured failover transport URI's on the current connection, or am I missing something?","25/Feb/11 18:49;tabish;This should be resolved with the changes for updating the cluster client's and not using the broker infos to populate the uri's for the failover transport.  

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
An expired message that is consumed and resent with an updated expiration never expires again.,AMQ-3153,12496459,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,stirlingc,stirlingc,23/Jan/11 21:03,24/Feb/11 21:02,30/Jan/20 16:55,24/Feb/11 21:02,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"Symptom
========
We have a use case where a producer sends a message to a queue with an expiration.  When the message expires to the DLQ, a consumer on the DLQ receives the message, modifies it, and resends it to the original queue with an updated expiration.

When the expired message is resent, it is given a new JMS message ID, so is, for all intents and purposes, a new message.  However, althought the resent message has an updated expiration, it never expires to the DLQ.

Cause
=====
When a message expires, an ""originalExpiration"" property is added to the message by RegionBroker.stampAsExpired:

    private boolean stampAsExpired(Message message) throws IOException {
        boolean stamped=false;
        if (message.getProperty(ORIGINAL_EXPIRATION) == null) {
            long expiration=message.getExpiration();     
            message.setProperty(ORIGINAL_EXPIRATION,new Long(expiration));
            stamped = true;
        }
        return stamped;
    }

When the consumer receives and resends the expired message, ActiveMQSession gives the message a new ID and updates its expiration:

    protected void send(ActiveMQMessageProducer producer, ActiveMQDestination destination, Message message, int deliveryMode, int priority, long timeToLive,
                        MemoryUsage producerWindow, int sendTimeout) throws JMSException {
..
            long expiration = 0L;
            if (!producer.getDisableMessageTimestamp()) {
                long timeStamp = System.currentTimeMillis();
                message.setJMSTimestamp(timeStamp);
                if (timeToLive > 0) {
                    expiration = timeToLive + timeStamp;
                }
            }
            message.setJMSExpiration(expiration);
...

            // Set the message id.
            if (msg == message) {
                msg.setMessageId(new MessageId(producer.getProducerInfo().getProducerId(), sequenceNumber));
            } else {
                msg.setMessageId(new MessageId(producer.getProducerInfo().getProducerId(), sequenceNumber));
                message.setJMSMessageID(msg.getMessageId().toString());
            }
...

At this point the resent message has a new ID and a new expiration, so it should be allowed to reexpire.  However, the resent message still carries the originalExpiration property, which makes RegionBroker report the message has not expired (even though it may have):

    @Override
    public boolean isExpired(MessageReference messageReference) {
        boolean expired = false;
        if (messageReference.isExpired()) {
            try {
                // prevent duplicate expiry processing
                Message message = messageReference.getMessage();
                synchronized (message) {
                    expired = stampAsExpired(message);
                }
            } catch (IOException e) {
                LOG.warn(""unexpected exception on message expiry determination for: "" + messageReference, e);
            }
        }
        return expired;
    }

Since the broker is not reporting the message as expired, the expired message processing in Queue bypasses the message (from Queue.doBrowse()):

                                if (broker.isExpired(node)) {
                                    LOG.debug(""expiring from messages: "" + node);
                                    messageExpired(connectionContext, createMessageReference(node.getMessage()));
                                }
                                messages.remove();

Solution
=======
Whenever a message is sent to a broker from a message producer, it should have its originalExpiration property cleared.  I've provided a patch in ActiveMQSession to do this, but I'm not familiar enough with the workflow to know if this is the appropriate place --- I'm specifically unhappy with the need to case the javax.jms.Message to an ActiveMQMessage in order to clear the readonly properties.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/11 21:06;stirlingc;AMQ3513.patch;https://issues.apache.org/jira/secure/attachment/12469103/AMQ3513.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-24 12:15:54.612,,,false,,,,,,,,,,,,,,,,,14691,,,Thu Feb 24 21:02:06 UTC 2011,,,,Patch Available,,,,"0|i0agwv:",59013,,,,,,,,,,,,,,,,,,,"23/Jan/11 21:06;stirlingc;Patch that clears the originalExpiration property when a message is re-sent and a unit test that fails with AMQ 5.4.2 and passes once the patch is applied.","24/Jan/11 12:15;gtully;patch looks good and it is great to have a testcase :-)

One thought, I wonder if it makes sense to have the originalExpiration property omitted from a message copy. There is by default a copy of a message before sending by a session.
So I am thinking it may be better to remove that property towards the end of:
org.apache.activemq.command.Message#copy

In org.apache.activemq.broker.region.RegionBroker#sendToDeadLetterQueue the message is stamped after a copy and there is no further copy when it is sent to the DQL.

It may be worth a try.
","24/Feb/11 21:01;tabish;Agree with Gary on this one, the Message class copy method is a good place to remove the original expiration property as it really only makes sense when message is on the DLQ.  I've added the supplied unit test along with that fix, tests passing fine now.","24/Feb/11 21:02;tabish;Fix in trunk, test added, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduled message CRON strings not parsed correctly,AMQ-3036,12483878,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ngehring,ngehring,15/Nov/10 10:21,16/Feb/11 21:39,30/Jan/20 16:55,16/Feb/11 21:39,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"I am trying to send a scheduled message using a AMQ_SCHEDULED_CRON string but it  is being scheduled for really bizarre times!

This is caused by errors in the org.apache.activemq.broker.scheduler.CronParser.getNextScheduledTime(..) - patch attached including junits.",Windows XP 32 bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Nov/10 10:22;ngehring;activemq-core.patch;https://issues.apache.org/jira/secure/attachment/12461887/activemq-core.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-02-16 21:39:34.581,,,false,,,,,,,,,,,,,,,,,14687,,,Wed Feb 16 21:39:34 UTC 2011,,,,Patch Available,,,,"0|i0ak93:",59554,,,,,,,,,,,,,,,,,,,"15/Nov/10 10:22;ngehring;patch file","16/Feb/11 21:39;tabish;Verified the issue, patches applied.  Many thanks for the unit tests.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple Cron Scheduled Messages don't fire every minute as configured,AMQ-3000,12483794,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tb0ne,tb0ne,26/Oct/10 20:01,15/Feb/11 23:47,30/Jan/20 16:55,15/Feb/11 23:47,5.4.1,,,,,,,5.5.0,,,Broker,,,,0,"I ran into a scenario where I have multiple Scheduled Messages with a cron string set to fire every minute that are created at different times.  However, only one is firing every minute (cycles 0 to 9).  I will attach a test Case that could be incorporated into org.apache.activemq.broker.scheduler.JmsSchedulerTest",Ubuntu Lucid and Windows 2k8,moczarski,tb0ne,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/10 20:05;tb0ne;JmsCronSchedulerTest.java;https://issues.apache.org/jira/secure/attachment/12461847/JmsCronSchedulerTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-02-15 23:47:20.628,,,false,,,,,,,,,,,,,,,,,14685,,,Tue Feb 15 23:47:20 UTC 2011,,,,,,,,"0|i0akbj:",59565,,,,,,,,,,,,,,,,,,,"26/Oct/10 20:05;tb0ne;This is a standalone JUnit test.  The test method in this could be incorporated into activemq-core/src/test/java/org/apache/activemq/broker/scheduler/JmsSchedulerTest.java without modification.","15/Feb/11 23:47;tabish;Fixed in trunk.  Thanks for the great test.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"KahaDB error: ""Could not locate data file""",AMQ-3120,12494857,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dcheckoway,dcheckoway,06/Jan/11 16:46,14/Feb/11 13:20,30/Jan/20 16:55,14/Feb/11 13:20,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"I'm using an embedded broker (version 5.4.2) with persistence enabled.  We're pumping hundreds of millions of messages per day through this thing.  Every once in a while, all of a sudden the KahaDB directory starts growing uncontrollably, and these errors start spewing out in the log over and over...

--------------------------
ERROR; Jan 5, 2011 16:37:57 PM; tid:BrokerService[localhost] Task; AbstractStoreCursor - Failed to fill batch
java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:148)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1679)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        ... 10 more
ERROR; Jan 5, 2011 16:37:57 PM; tid:BrokerService[localhost] Task; Queue - Failed to page in more queue messages
java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:151)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1679)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:148)
        ... 9 more
Caused by: java.io.IOException: Could not locate data file /usr/local/embedded/activemq-data/localhost/KahaDB/db-28098.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        ... 10 more
--------------------------

It doesn't happen consistently, but it has happened numerous times.  The only way to ""fix"" it is to kill the app, blow away the KahaDB data directory, and restart (ugh).

Unfortunately this issue is not reproduceable.

Here's the embedded broker config, fwiw:
--------------------------
  <broker xmlns=""http://activemq.apache.org/schema/core""
          id=""embeddedActivemqBroker""
          useJmx=""false""
          persistent=""true""
          dataDirectory=""/usr/local/embedded/activemq-data""
          schedulerSupport=""false""
          advisorySupport=""false""
          enableStatistics=""true"">
    <destinationPolicy>
      <policyMap>
        <policyEntries>
          <policyEntry queue="">"" producerFlowControl=""false"" memoryLimit=""20mb""/>
        </policyEntries>
      </policyMap>
    </destinationPolicy>
  </broker>
-------------------------- ","linux: CentOS 5.5
happens on both dual- and quad-cpu boxes, 4gb ram

java version ""1.6.0_21""
Java(TM) SE Runtime Environment (build 1.6.0_21-b06)
Java HotSpot(TM) 64-Bit Server VM (build 17.0-b16, mixed mode)",alisenberg,dcheckoway,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3122,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-20 16:21:05.471,,,false,,,,,,,,,,,,,,,,,14684,,,Mon Feb 14 13:20:24 UTC 2011,,,,,,,,"0|i0ak33:",59527,,,,,,,,,,,,,,,,,,,"20/Jan/11 16:21;redvortex;Hello,

We're experiencing the very same issue and I'm also running ActiveMQ 5.4.2. We also have a high quantity of messages, at least 30,000 messages per hours sometimes much more (2x, 3x) than that. We have a mix of very large (fews megs) and very small (few bytes) messages.

What happens: a kaha db missing log (probably deleted too early by kahadb or something else) then messages start accumulating and my consumers are unable to dequeue them.

This issue is really major, if not blocker. This is new since we upgraded to 5.4.2, we never had this problem before with version 5.3.x. I'm unable to reproduce it and it happens randomly, under heavy load or not.

We're running CentOS 4.6, 32 bits.

I found a temporary work around by adding this parameter to the kahadb config, restarting the broker, wait until all the queued messages are consumed, then removing the parameter and restarting the broker again.

{noformat}
<persistenceAdapter>
            <kahaDB directory=""${activemq.base}/data/kahadb"" ignoreMissingJournalfiles=""true""/>
</persistenceAdapter>
{noformat}

When you restart the broker with this configuration you will see this and the normal processing continues:

{noformat}
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | KahaDB is version 3
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | Recovering from the journal ...
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | Recovery replayed 1 operations from the journal in 0.045 seconds.
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | Some journal files are missing: [4311]
INFO   | jvm 1    | 2011/01/20 10:05:20 |  INFO | Detected missing/corrupt journal files.  Dropped 1 messages from the index in 0.028 seconds.
{noformat}

This workaround allows me to at least not lose all the DB like I had to do until today (delete the kahadb folder and restart).

Here is what starts showing over and over again in the wrapper.log when the issue appears:

{noformat}
INFO   | jvm 1    | 2011/01/20 07:31:00 | ERROR | Looking for key 4311 but not found in fileMap: {3944=db-3944.log number = 3944 , length = 33760316, 406
7=db-4067.log number = 4067 , length = 33590177, 3947=db-3947.log number = 3947 , length = 33677680, 3948=db-3948.log number = 3948 , length = 33596726, 
4068=db-4068.log number = 4068 , length = 33755827, 4075=db-4075.log number = 4075 , length = 34048968, 4322=db-4322.log number = 4322 , length = 3004262
2, 4076=db-4076.log number = 4076 , length = 33734622, 4320=db-4320.log number = 4320 , length = 33622170, 4321=db-4321.log number = 4321 , length = 3360
7934, 3943=db-3943.log number = 3943 , length = 33897766, 3961=db-3961.log number = 3961 , length = 33715187, 3960=db-3960.log number = 3960 , length = 3
3634841, 4021=db-4021.log number = 4021 , length = 33584217, 4022=db-4022.log number = 4022 , length = 33569989, 4090=db-4090.log number = 4090 , length 
= 33555654, 3955=db-3955.log number = 3955 , length = 33566643, 4030=db-4030.log number = 4030 , length = 33700887, 4091=db-4091.log number = 4091 , leng
th = 33928309, 4031=db-4031.log number = 4031 , length = 33554494, 3889=db-3889.log number = 3889 , length = 33664097, 3956=db-3956.log number = 3956 , l
ength = 33621892, 3890=db-3890.log number = 3890 , length = 33590196, 4035=db-4035.log number = 4035 , length = 33653742, 4034=db-4034.log number = 4034 
, length = 33852330, 3912=db-3912.log number = 3912 , length = 33554464, 3913=db-3913.log number = 3913 , length = 33587386, 4101=db-4101.log number = 41
01 , length = 34013592, 4039=db-4039.log number = 4039 , length = 34009512, 4100=db-4100.log number = 4100 , length = 33576394, 4038=db-4038.log number =
 4038 , length = 33564352, 4102=db-4102.log number = 4102 , length = 33630267, 3908=db-3908.log number = 3908 , length = 33660034, 3909=db-3909.log numbe
r = 3909 , length = 33570972, 4317=db-4317.log number = 4317 , length = 33554634, 4316=db-4316.log number = 4316 , length = 33554832, 4319=db-4319.log nu
mber = 4319 , length = 33560765, 3929=db-3929.log number = 3929 , length = 33773224, 4318=db-4318.log number = 4318 , length = 33606627, 3928=db-3928.log
 number = 3928 , length = 33575213, 4313=db-4313.log number = 4313 , length = 33666992, 3935=db-3935.log number = 3935 , length = 33716752, 4312=db-4312.
log number = 4312 , length = 33554827, 3934=db-3934.log number = 3934 , length = 33584253, 4315=db-4315.log number = 4315 , length = 33633620, 4314=db-43
14.log number = 4314 , length = 33676339}
INFO   | jvm 1    | 2011/01/20 07:31:00 | ERROR | Failed to fill batch
INFO   | jvm 1    | 2011/01/20 07:31:00 | java.io.IOException: Could not locate data file /usr/share/activemq/data/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.read(Journal.java:592)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:4
85)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.lang.Thread.run(Thread.java:619)
INFO   | jvm 1    | 2011/01/20 07:31:00 | ERROR | Failed to fill batch
INFO   | jvm 1    | 2011/01/20 07:31:00 | java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/share/activemq/data/kahadb/db-
4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.lang.Thread.run(Thread.java:619)
INFO   | jvm 1    | 2011/01/20 07:31:00 | Caused by: java.io.IOException: Could not locate data file /usr/share/activemq/data/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.read(Journal.java:592)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:4
85)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       ... 10 more
INFO   | jvm 1    | 2011/01/20 07:31:00 | ERROR | Failed to page in more queue messages 
INFO   | jvm 1    | 2011/01/20 07:31:00 | java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/sh
are/activemq/data/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at java.lang.Thread.run(Thread.java:619)
INFO   | jvm 1    | 2011/01/20 07:31:00 | Caused by: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/share/activemq/data
/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       ... 9 more
INFO   | jvm 1    | 2011/01/20 07:31:00 | Caused by: java.io.IOException: Could not locate data file /usr/share/activemq/data/kahadb/db-4311.log
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.journal.Journal.read(Journal.java:592)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:4
85)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
INFO   | jvm 1    | 2011/01/20 07:31:00 |       ... 10 more
{noformat}


","21/Jan/11 17:50;gtully;think this issue is resolved with the fix for https://issues.apache.org/jira/browse/AMQ-3122

the fix makes a checkpoint (with the index lock obtained) do a sync write to the journal. This ensures that the lastAppendLocation is up to date for a cleanup. Without the sync write, it is possible that another write is queued which rolls over the journal and creates another journal data file that can get cleaned up in error.
","21/Jan/11 19:09;redvortex;Thanks for the reply.

I definitely would like to have a patched-5.4.2 or even better, a 5.4.3 that would include more patches, if possible.

Unless, of course, 5.5 is to be released very soon, is there any date for 5.5, yet ?","21/Jan/11 20:21;dcheckoway;@Gary, AMQ-3122 talks about broker running out of disk space being a cause.  Can you clarify if that means actually running out of physical space on the disk, or hitting a systemUsage limit for storeUsage or something like that?  I can tell you definitively that our setup did NOT run out of physical disk space.  Whether it hit the storeUsage limit or not (it wasn't explicitly configured, so whatever is the default), that's another story...

Thanks for following up on this!","21/Jan/11 22:16;gtully;@Dan, it is the fix (code change) that helps rather than there being a match for the symptoms. Try out a 5.5-SNAPSHOT to validate: https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/","21/Jan/11 22:28;dcheckoway;@Gary, since I haven't been able to reproduce this issue in anything other than our production environment (in which I'm not too comfortable running a SNAPSHOT), I may have to wait for the official 5.5 release.  I can't reproduce it locally with 5.4.2, let alone a newer snapshot.  :-)

FWIW, it has been a couple of weeks (and a couple of billion messages!) since we've seen this error in production with 5.4.2.  It comes and goes at random.  One week we'll have a couple of our servers hit this issue, the next week it's all hunky dory.

Looking forward to 5.5.  Thanks!","23/Jan/11 14:04;dcheckoway;@Patrick,  I just wanted to say THANK YOU for the ignoreMissingJournalfiles=""true"" trick.  That saved us from losing about 350k messages today on one of our producer nodes.  Its embedded broker's KahaDB (5.4.2) started freaking out again with:

ERROR; Jan 23, 2011 13:22:33 PM; tid:BrokerService[localhost] Task; AbstractStoreCursor - Failed to fill batch
java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
ERROR; Jan 23, 2011 13:22:33 PM; tid:BrokerService[localhost] Task; AbstractStoreCursor - Failed to fill batch
java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        ... 10 more
ERROR; Jan 23, 2011 13:22:33 PM; tid:BrokerService[localhost] Task; Queue - Failed to page in more queue messages
java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
        ... 9 more
Caused by: java.io.IOException: Could not locate data file /usr/local/mycompany/activemq-data/db-2426.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:345)
        at org.apache.kahadb.journal.Journal.read(Journal.java:592)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)
        ... 10 more
ERROR; Jan 23, 2011 13:22:33 PM; tid:BrokerService[localhost] Task; Journal - Looking for key 2426 but not found in fileMap: {2443=db-2443.log number = 2443 , length = 33556647, 2442=db-2442.log number = 2442 , length = 33555394, 2441=db-2441.log number = 2441 , length = 33556656, 2440=db-2440.log number = 2440 , length = 33554618, 2444=db-2444.log number = 2444 , length = 31211881, 2435=db-2435.log number = 2435 , length = 33555525, 2434=db-2434.log number = 2434 , length = 33556971, 2433=db-2433.log number = 2433 , length = 33554878, 2432=db-2432.log number = 2432 , length = 33554516, 2439=db-2439.log number = 2439 , length = 33555167, 2438=db-2438.log number = 2438 , length = 33555794, 2437=db-2437.log number = 2437 , length = 33555470, 2436=db-2436.log number = 2436 , length = 33555079, 2335=db-2335.log number = 2335 , length = 33555466, 2334=db-2334.log number = 2334 , length = 33555013, 2333=db-2333.log number = 2333 , length = 33555566, 2336=db-2336.log number = 2336 , length = 33583503, 2337=db-2337.log number = 2337 , length = 33556154, 2338=db-2338.log number = 2338 , length = 33556881, 2339=db-2339.log number = 2339 , length = 33554898, 2340=db-2340.log number = 2340 , length = 33555842, 2341=db-2341.log number = 2341 , length = 33556432, 2342=db-2342.log number = 2342 , length = 33554605, 2429=db-2429.log number = 2429 , length = 33555998, 2428=db-2428.log number = 2428 , length = 33555914, 2431=db-2431.log number = 2431 , length = 33556386, 2430=db-2430.log number = 2430 , length = 33554851, 2427=db-2427.log number = 2427 , length = 33556238}

5.5 can't come quickly enough!  :-)
","24/Jan/11 13:08;gtully;resolving following user feedback on snapshots","31/Jan/11 09:53;dejanb;For anyone interested there's a 5.4.2-fuse-01-00 release, that contains this fix. You can download it from http://fusesource.com","07/Feb/11 19:28;lei;I'm new to fuse. Could someone help me, how can I find and download a specific release (5.4.2-fuse-01-00) on fusesource.com?

Thanks,
Lei","14/Feb/11 13:16;gtully;Unit test (org.apache.activemq.bugs.AMQ3120Test) shows intermittent failure, so the problem still exists.","14/Feb/11 13:20;gtully;fix committed in http://svn.apache.org/viewvc?rev=1070484&view=rev
interleaved checkpoint with journal add could cause inadvertent increment on the last update location, leaving current journal file as a gc candidate. resulting in the exception and hung destination.
Fix keeps lastUpdate independent of the current checkpoint.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
possible skipped Queue messages in memory limited configuration with fast consumers,AMQ-3167,12497051,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Jan/11 13:08,11/Feb/11 14:30,30/Jan/20 16:55,28/Jan/11 13:28,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"regression in test from https://issues.apache.org/jira/browse/AMQ-2413 required some investigation. Symptom was missing messages, turned out to be in the middle of the sequence. Issue with the priority kahadb cursors and setbatch. Set batch is invoked when the cursor memory is exhausted such that replay from the store can start at the correct point. If a call to setBatch was followed by a call to recover when there was still no memory space available, the cursor could skip the next pending message.",,artnaseef,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/11 16:48;artnaseef;AMQ3167Test.java;https://issues.apache.org/jira/secure/attachment/12470688/AMQ3167Test.java","11/Feb/11 14:13;artnaseef;patch.amq3167.activemq-5.4.2;https://issues.apache.org/jira/secure/attachment/12470859/patch.amq3167.activemq-5.4.2",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-02-09 16:48:23.646,,,false,,,,,,,,,,,,,,,,,14729,,,Fri Feb 11 14:30:24 UTC 2011,,,,,,,,"0|i0ajxb:",59501,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"28/Jan/11 13:28;gtully;fix in r1064660

URL: http://svn.apache.org/viewvc?rev=1064660&view=rev","09/Feb/11 16:48;artnaseef;Test use case which reproduces the problem consistently by using a small memory limit and short time delay between production and consumption.

A license header as been included; feel free to replace it as-needed.","09/Feb/11 16:53;artnaseef;In the process of creating a bug report for the test case attached above, this bug report appeared to capture the problem.  Trying to backport this fix to 5.4.2, there appears to be a number of changes on which this patch depends.  Any guidance on a shorter workaround until we can upgrade to 5.5 would be appreciated.

The test case attached represents a use pattern we need to support, but has been narrowed down to detect a lost message in the timeframe it takes to trigger this issue.","11/Feb/11 14:13;artnaseef;Patch against 5.4.2 that resolves this issue, created from a subset of the changes made on the trunk for this bug report.","11/Feb/11 14:30;gtully;committed your test case so we can protect your use case it into the future. thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can only have one duplex networkConnection per transportConnection,AMQ-3129,12495294,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,asussman,asussman,11/Jan/11 20:07,10/Feb/11 11:10,30/Jan/20 16:55,10/Feb/11 11:10,,,,,,,,5.5.0,,,,,,,0,"AMQ-2774 introduced an unintended restriction on the number of duplex networkConnections you
can make to the same port on a remote broker.   This causes issues in scenarios where you want
more than one duplex connection in order to have different settings for different kinds of destinations
(for example: different conduitSubscription settings for topics vs queues).

See:

http://activemq.2283324.n4.nabble.com/conduit-subscriptions-vs-full-duplex-on-network-connections-td3208138.html

and

AMQ-2774",,artnaseef,chaggstrom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-10 11:10:14.977,,,false,,,,,,,,,,,,,,,,,14722,,,Thu Feb 10 11:10:14 UTC 2011,,,,,,,,"0|i0ak1z:",59522,Regression,,,,,,,,,,,,,,,,,,"10/Feb/11 11:10;gtully;see http://svn.apache.org/viewvc?rev=1069339&view=rev rework of changes from AMQ-2774 that introduced the limitation",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of brokers : Multicast discovery stopped to work,AMQ-2774,12482573,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,eric-awl,eric-awl,11/Jun/10 15:30,10/Feb/11 10:59,30/Jan/20 16:55,28/Jul/10 10:47,5.2.0,,,,,,,5.4.0,,,,,,,1,"Hi everybody

I experiment a big problem with the multicast discovery algorithm, in a network of brokers topology.
In some conditions, a broker can't reestablish a distant connection even if the distant broker is restarted.

I have the log traces that would help to identify the origin of the problem.

When there is no discovery/connection error, I can see these 2 lines in the activemq log file

#08 Jun 2010 14:31:30,639  INFO  [Multicast Discovery Agent Notifier] org.apache.activemq.network.DiscoveryNetworkConnector
Establishing network connection between from vm://ACCLU-tpnocp04v to tcp://tpnocp09v-bus:13100?useLocalHost=false

#08 Jun 2010 14:31:30,692  INFO  [StartLocalBridge: localBroker=vm://ACCLU-tpnocp04v#26] org.apache.activemq.network.DemandForwardingBridge
Network connection between vm://ACCLU-tpnocp04v#26 and tcp://tpnocp09v-bus/10.18.126.28:13100(MOM-tpnocp09v) has been established.


When the connection is broken, I can see this line in the log.

#11 Jun 2010 12:37:32,585  INFO  [Multicast Discovery Agent Notifier] org.apache.activemq.network.DemandForwardingBridge
ACCLU-tpnocp04v bridge to MOM-tpnocp09v stopped


Then the current ACCLU-tpnocp04v broker tries to reestablish the connection :

#11 Jun 2010 12:37:34,475  INFO  [Multicast Discovery Agent Notifier] org.apache.activemq.network.DiscoveryNetworkConnector
Establishing network connection between from vm://ACCLU-tpnocp04v to tcp://tpnocp09v-bus:13100?useLocalHost=false

But, here, the second line of the log (""has been established"") doesn't appear in the log file !! I don't know exactly if the connection is up or not.

Then the connection is broken again (look at ""Unknown"" instead of ""MOM-tpnocp09v"".

#11 Jun 2010 13:33:58,655  WARN  [ActiveMQ Transport: tcp://tpnocp09v-bus/10.18.126.28:13100] org.apache.activemq.network.DemandForwardingBridge
Network connection between vm://ACCLU-tpnocp04v#58 and tcp://tpnocp09v-bus/10.18.126.28:13100 shutdown due to a remote error: java.net.SocketException: Connection reset
#11 Jun 2010 13:33:58,657  INFO  [NetworkBridge] org.apache.activemq.network.DemandForwardingBridge^M
ACCLU-tpnocp04v bridge to Unknown stopped

And, now, even if I restart the distant broker ( MOM-tpnocp09v ), no line (Establishing/Has been established) appears, and no network connection is reestablished between ACCLU-tpnocp04v and MOM-tpnocp09v. it seems that this ACCLU-tpnocp04v broker can no longer establish a connection with the MOM-tpnocp09v broker !!!

The production teams tell me that this problem seems not to be resolved in fuse-5.3.0.6 version.

Eric-AWL

",Linux,ciand7,s1ngle,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3129,,AMQ-3176,,,,,"22/Jul/10 13:36;eric-awl;AMQ2774.tar;https://issues.apache.org/jira/secure/attachment/12460748/AMQ2774.tar","17/Jun/10 07:18;eric-awl;JMAC-BEA-lastlog.log-20100315;https://issues.apache.org/jira/secure/attachment/12461743/JMAC-BEA-lastlog.log-20100315","27/Jul/10 14:48;eric-awl;SocketTstFactory.java;https://issues.apache.org/jira/secure/attachment/12461787/SocketTstFactory.java","28/Jul/10 08:42;eric-awl;activemq-all-5.3.2-eric.jar;https://issues.apache.org/jira/secure/attachment/12461790/activemq-all-5.3.2-eric.jar","27/Jul/10 15:25;s1ngle;activemq-bug-2774-tcpToSsl.log;https://issues.apache.org/jira/secure/attachment/12461788/activemq-bug-2774-tcpToSsl.log",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,2010-06-11 15:54:57.441,,,false,,,,,,,,,,,,,,,,,14631,,,Wed Jul 28 11:32:17 UTC 2010,,,,,,,,"0|i0b9ov:",63682,,,,,,,,,,,,,,,,,,,"11/Jun/10 15:54;gtully;There is a bunch more trace level logging in 5.3, if you can reproduce with TRACE level logging with 5.3.x and attach the log that may help. Ideally of course, if you can reproduce with a test case that would be great!","12/Jun/10 05:57;eric-awl;Hi Gary

I understand that more traces are needed. Unfortunately, this happens sometimes on our production system (30 servers on 2 sites). And you can see there is 3 days between the launch of the MOM-tpnocp09v and its first stop. 
Putting ""Trace"" level traces in these conditions will be very difficult. Because the volume of traces will be very heavy. 

But I will contact the production managers to see what can be done.

I suspect the ConcurrentHashMap<String,RemoteBrokerData> in the class MulticastDiscoveryAgent, is not correctly updated when the bridge is stopped in an ""Unknown"" state.

 Eric-AWL","13/Jun/10 07:30;eric-awl;Hi

I looked at MulticastDiscoveryAgent.java source. The ""doRecovery"" method is the only one that tells the connection must be reestablished. The indicator ""failed"" is put to false as soon as the recovery conditions are filled and even if the connection is not really reestablished (that seems to be my case) . As soon as ""failed"" indicator is false, the recovery and the reconnection (fireServiceAddEvent) can't be retried. Only ""serviceFailed"" method can put ""failed"" to true again.

Just by looking to this java source, it seems that a situation where the connection is not re-established, the indicator ""failed"" is false, the multicast heartbeat frames are received, is possible .... Only the call to ""serviceFailed"" can put the failed indicator to true (or delete the object entry in the hashmap). Is it possible that serviceFailed is not called although the connection is down ?

(I think that it should be safer that ""failed"" be an atomic boolean since I believe serviceFailed method could be called by another thread)

Eric-AWL","15/Jun/10 07:38;eric-awl;It seems that the ""... has been established"" trace can only be written if the remoteBrokerNameKnownLatch.await() condition is filled.

contdown is called into DemandForwardingBridge.serviceRemoteBrokerInfo
serviceRemoteBrokerInfo is called into DemandForwardingBridgeSupport.serviceRemoteCommand (only if disposed.get() is false).","17/Jun/10 07:18;eric-awl;A part of a stack trace which shows that ""Multicast Discovery Agent Notifier"" thread is blocked on the remoteBrokerNameKnownLatch.","17/Jun/10 07:33;eric-awl;We are in a full embedded broker configuration.

I attach a part of an old stack trace (I delete all our own threads and the queueThreads). I think this trace was done (in march) just when one of our embedded broker doesn't succeed to reconnect to another one.

This trace is not exactly the same as the explanation since processes are not exactly the one. But this stack trace shows that ""Multicast Discovery Agent Notifier"" is blocked on the remoteBrokerNameKnownLatch.await() into the ""bridge.start()"" call (DiscoveryNetworkConnector.onServiceAdd)

            localBroker.start();
            remoteBroker.start();
            if (configuration.isDuplex() && duplexInitiatingConnection == null) {
                // initiator side of duplex network
                remoteBrokerNameKnownLatch.await();
            }

Corresponding ""serviceFailed"" call, can not be called (no exception) until this latch is released, which can only be done if serviceRemoteBrokerInfo call is done, what can be impossible if distant embedded broker is failed.

            try {
                bridge.start();
            } catch (Exception e) {
                ServiceSupport.dispose(localTransport);
                ServiceSupport.dispose(remoteTransport);
                LOG.warn(""Could not start network bridge between: "" + localURIName + "" and: "" + uri + "" due to: "" + e);
                LOG.debug(""Start failure exception: "" + e, e);
                try {
                    discoveryAgent.serviceFailed(event);
                } catch (IOException e1) {
                    LOG.debug(""Discovery agent failure while handling failure event: "" + e1.getMessage(), e1);
                }
                return;
            }

While ""serviceFailed"" is not called and multicast frames are received, it seems impossible to try to reconnect to this distant broker even if it is shortly restarted ?

","06/Jul/10 09:33;eric-awl;I'm sure that I identified a Latch problem in Multicast Network Discovery mechanism on Duplex connection 

The multicast notifier thread is blocked. here the trace (on Fuse-5.3.0.5)

""Notifier-MulticastDiscoveryAgent-listener:DiscoveryNetworkConnector:NOCSupervisorP5-ADMIN-OUT-IN:BrokerService[SIBBusModule-NOCP5-tpnocp08s-bus]"" daemon prio=10 tid=0x0000000044ff2400 nid=0x1389 waiting on condition [0x0000000044c26000..0x0000000044c26b90] 
   java.lang.Thread.State: WAITING (parking) 
        at sun.misc.Unsafe.park(Native Method) 
        - parking to wait for  <0x00002aaab3dd66f0> (a java.util.concurrent.CountDownLatch$Sync) 
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158) 
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747) 
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:905) 
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1217) 
        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207) 
        at org.apache.activemq.network.DemandForwardingBridgeSupport.start(DemandForwardingBridgeSupport.java:231) 
        at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceAdd(DiscoveryNetworkConnector.java:114) 
        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent$2.run(MulticastDiscoveryAgent.java:484) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
        at java.lang.Thread.run(Thread.java:619) 

The problem appears when the network is quickly and alternatively on/off between the two components. 
The bridge is created in one direction, but the answer can not be received. 

The thread is blocked on the CountDownLatch. Even if multicast frames are received, the component can not establish a new network connection. 

Here are an corresponding activemq trace 

When it is OK : 
2010-06-22 22:56:24,500 [-tpnocp08s-bus]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SIBBusModule-NOCP5-tpnocp08s-bus to tcp://tpnocp11v-bus.vdm.priv.amm.noc:14101?useLocalHost=false 
2010-06-22 22:56:26,083 [nocp08s-bus#160] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusModule-NOCP5-tpnocp08s-bus#160 and tcp://tpnocp11v-bus.vdm.priv.amm.noc/10.18.126.30:14101(SIBBusSupervisor-tpnocp11v-bus) has been established. 

2010-06-22 22:57:34,807 [-tpnocp08s-bus]] INFO  DemandForwardingBridge         - SIBBusModule-NOCP5-tpnocp08s-bus bridge to SIBBusSupervisor-tpnocp11v-bus stopped 

2010-06-22 22:57:34,811 [-tpnocp08s-bus]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SIBBusModule-NOCP5-tpnocp08s-bus to tcp://tpnocp11v-bus.vdm.priv.amm.noc:14101?useLocalHost=false 
2010-06-22 22:57:39,064 [nocp08s-bus#162] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusModule-NOCP5-tpnocp08s-bus#162 and tcp://tpnocp11v-bus.vdm.priv.amm.noc/10.18.126.30:14101(SIBBusSupervisor-tpnocp11v-bus) has been established. 

2010-06-22 22:58:42,578 [-tpnocp08s-bus]] INFO  DemandForwardingBridge         - SIBBusModule-NOCP5-tpnocp08s-bus bridge to SIBBusSupervisor-tpnocp11v-bus stopped 

When it is KO : ""Unknown"" 

2010-06-22 22:58:42,648 [-tpnocp08s-bus]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SIBBusModule-NOCP5-tpnocp08s-bus to tcp://tpnocp11v-bus.vdm.priv.amm.noc:14101?useLocalHost=false 
2010-06-22 22:59:18,031 [18.126.30:14101] WARN  DemandForwardingBridge         - Network connection between vm://SIBBusModule-NOCP5-tpnocp08s-bus#164 and tcp://tpnocp11v-bus.vdm.priv.amm.noc/10.18.126.30:14101 shutdown due to a remote error: java.net.SocketException: Connection reset 
2010-06-22 22:59:18,033 [NetworkBridge  ] INFO  DemandForwardingBridge         - SIBBusModule-NOCP5-tpnocp08s-bus bridge to Unknown stopped 


Here is the other side corresponding activemq trace 

activemq-server.log:2010-06-22 22:55:44,295 [26.190.27:40517] INFO  TransportConnection            - Created Duplex Bridge back to SIBBusModule-NOCP5-tpnocp08s-bus 

activemq-server.log:2010-06-22 22:56:24,438 [26.190.27:40517] INFO  DemandForwardingBridge         - SIBBusSupervisor-tpnocp11v-bus bridge to SIBBusModule-NOCP5-tpnocp08s-bus stopped 

activemq-server.log:2010-06-22 22:56:26,135 [26.190.27:40518] INFO  TransportConnection            - Created Duplex Bridge back to SIBBusModule-NOCP5-tpnocp08s-bus 
activemq-server.log:2010-06-22 22:56:26,135 [ocp11v-bus#1770] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusSupervisor-tpnocp11v-bus#1770 and tcp:///10.26.190.27:40518(SIBBusModule-NOCP5-tpnocp08s-bus) has been established. 

activemq-server.log:2010-06-22 22:57:34,818 [26.190.27:40518] INFO  DemandForwardingBridge         - SIBBusSupervisor-tpnocp11v-bus bridge to SIBBusModule-NOCP5-tpnocp08s-bus stopped 

activemq-server.log:2010-06-22 22:57:39,153 [26.190.27:40519] INFO  TransportConnection            - Created Duplex Bridge back to SIBBusModule-NOCP5-tpnocp08s-bus 
activemq-server.log:2010-06-22 22:57:39,153 [ocp11v-bus#1806] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusSupervisor-tpnocp11v-bus#1806 and tcp:///10.26.190.27:40519(SIBBusModule-NOCP5-tpnocp08s-bus) has been established. 

activemq-server.log:2010-06-22 22:58:44,328 [26.190.27:40519] INFO  DemandForwardingBridge         - SIBBusSupervisor-tpnocp11v-bus bridge to SIBBusModule-NOCP5-tpnocp08s-bus stopped 
","06/Jul/10 11:10;eric-awl;What could happen if we add

         if (configuration.isDuplex() && duplexInitiatingConnection == null) {
                // initiator side of duplex network
                remoteBrokerNameKnownLatch.countDown();
            }

into the stop() method of DemandForwardingBridgeSupport class ?

","07/Jul/10 16:04;eric-awl;We put a no-Duplex Configuration instead of a Duplex Configuration and it seemed to work better.... But
today during a network problem (alternatively on/off) our process doesn't resist ....

We have 
- a thread dump which shows 85 StartLocalBridge Threads waiting for the same latch into the DemandForwardingBridgeSupport.StartLocalBridge method :

 protected void startLocalBridge() throws Exception {
        if (localBridgeStarted.compareAndSet(false, true)) {
            synchronized (this) {
                if (LOG.isTraceEnabled()) {
                    LOG.trace(configuration.getBrokerName() + "" starting local Bridge, localBroker="" + localBroker);
                }
                remoteBrokerNameKnownLatch.await();
                ...
}

- 960 CLOSE_WAIT
- a file descriptor limit

Will the transport.closeAsync=false flag be helpful here ?

Eric-AWL","11/Jul/10 08:25;eric-awl;If I resume my view of the problem

When the problem occurs
- Network links between 2 brokers, are quickly and alternatively on/off. In french, we say that the network is ""bagotting"" :-)
- The DemandForwardingBridgeSupport.stop() method is called before the start() method  (including sons threads start methods) is fully exectuted

Consequences
- With NO DUPLEX connection, network of brokers are re-established, but some threads are created and blocked on the RemoteBrokerNameKnownLatch latch. 
In this case, the latch is awaited in the startLocalBridge() method which is called by a dedicated thread. So, a major problem occured when ressources are consumed if this kind of network faults are frequent, and the number of network connections is important. 
- With DUPLEX connection,  the latch is awaited in the start() method itself.  The main network connector thread is concerned. So the network connector is completely blocked.

I currently try to
- add a RemoteBrokerNameLatch.countDown at the end of the stop() method
- test the disposed AtomicBoolean value to correctly break the starting process in start() for DUPLEX, and in startLocalBridge() for NO-DUPLEX.

I think it will be better for DUPLEX since network connector thread will be freed, but I don't know if the son thread will be correctly destroyed.

Eric-AWL ","21/Jul/10 09:33;eric-awl;Hi

I think I now have programmed a clean correction for this specific latch problem. And I can give you the sources. With these sources, the network connector is not ever blocked even if a network fault comes during the start'() process.

But, before giving you these sources, I have relative questions, with duplex TCP connections :

Imagine a brief network fault

On the network connector side of the DUPLEX connection, the fault is detected, the TCP bridge is closed. Socket.close() is executed, but the socket is in a CLOSE_WAIT state.
The ""transport connector side"" of the DUPLEX connection is not aware that the first connection is down while its InactivityMonitor Thread doesn't signal it.

Then, on the network connector side, the bridge wants to be built again, and the network is now ON. The ""transport connector side"" creates a second active bridge for the same DUPLEX connection.
So, the ""transport connector"" side temporarily sees 2 distant broker for the same one, while the InactivityMonitor thread doesn't signal the death of the first TCP connection.

Is this true ?

Eric-AWL
","21/Jul/10 11:20;gtully;Great if you have a fix.

to your question, that sounds true to me, but I would have thought that the second bridge creation attempt is considered distinct because it occurs on a new connection.","22/Jul/10 13:36;eric-awl;I propose you this patch in the tar file (for ActiveMQ 5.3.2 version)

2 modifications are brought :
- the RemoteBrokerNameKnownLatch is countdown at the end of the stop() to free the connector thread even if it doesn't receive the correct remote broker info. That can appear when network is successively and quickly on/off. In the case of a DUPLEX connection, the network connector was then totally blocked. In the case of a not duplex connection, some dead threads were up.
- the second modification tries to stop an old invalid duplex Transport Connection when a new Duplex Transport Connection is required by the same broker for the same transport Connector

I tried to realize a JUNIT test which simulates a lot of ""close socket"" even during bridge start process. It seems to work, but I didn't succeed in simulating the second modification. 
the JUNIT test include a ""tcpfaulty"" transport with two socket factories. In the future I will try to put SocketProxy code into the ServerSocketTstFactory.

This situation where a second duplex connection tried to be established before the first one was clearly dead, appeared in my own (not JUNIT) tests , when a brief networkl fault occured and when only the first modification was implemented.

All modifications are clearly indicated by 
// Eric-AWL AMW-2774 Beginning
// Eric-AWL AMW-2774 End

Sorry for the poor english. (I'm french)

Eric-AWL
","26/Jul/10 12:31;gtully;I applied just the test component of your patch to trunk, 5.4-SNAPSHOT and ran the test and it worked just fine without any mods to the src in main/java. Is this expected? Or do you only get intermittent failures with the test. I wonder if the issue is resolved already on trunk? Can you validate trunk?","26/Jul/10 12:52;eric-awl;Hi Gary

It's very difficult to simulate quick network faults. With my JUNIT test, I simulate close() immediately or some seconds later (with a random value). When the close() is done immediatly, I succeeded  in  validating DUPLEX network of brokers and that nothing was blocked in this situation with my patch :

2010-07-26 14:09:20,001 [ce[SpokeBroker]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SpokeBroker to tcpfaulty://localhost.localdomain:61617
2010-07-26 14:09:20,035 [ocalport=32972]] INFO  SocketTstFactory               - Trying to close client socket Socket[addr=localhost.localdomain/127.0.0.1,port=61617,localport=32972] immediatly
2010-07-26 14:09:20,036 [ocalport=32972]] INFO  SocketTstFactory               - Client socket Socket[addr=localhost.localdomain/127.0.0.1,port=61617,localport=32972] is closed.
2010-07-26 14:09:20,037 [127.0.0.1:61617] WARN  DemandForwardingBridge         - Network connection between vm://SpokeBroker#8 and tcpfaulty://localhost.localdomain/127.0.0.1:61617 shutdown due to a remote error: java.net.SocketException: Socket closed
2010-07-26 14:09:20,038 [NetworkBridge  ] INFO  DemandForwardingBridge         - SpokeBroker bridge to Unknown stopped

In this kind of situation (bridge to Unknown stopped), I experimented on 5.3.0-05 fuse production environment, that the network of connector thread was completely blocked on the latch, with Duplex connections.

I'm not sure that my JUNIT test demonstrates the problem on 5.3.0-05. It helped me to debug my own patch.

I don't try my JUNIT test on 5.3.0-5 fuse version. I'm going to verify that my JUNIT test sometimes shows the problem with the 5.3.0-5 core jar.

I can look at 5.4-snapshot source code to see if something is already changed about this latch on the trunk.

I will tell you my results.

Eric-AWL
","26/Jul/10 13:05;gtully;yea, I understand this is difficult to test but the effort is worth it to protect the changes. One thought that may help is the use of SockeProxy to simulate a network failure or slow network. There is an example usage in http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/BrokerQueueNetworkWithDisconnectTest.java?view=log - see the org.apache.activemq.usecases.BrokerQueueNetworkWithDisconnectTest#onSend use of socketProxy. This gave me a test case for a similar issue some time back so it may be worth a look, it is not unlike what you do in TcpFaulty but is very deterministic which may help.","26/Jul/10 13:42;eric-awl;Yes, I saw this JUNIT test, and I will try to adapt SocketProxy into the TCPFaultyServerSocketFactory, to simulate pause in the accept().

I can't imagine that this JUnit test doesn't work with 5.3.0-05-fuse, but we expiremented this latch situation with network faults regularly (stack traces was taken some hours after the frozen state was discovered of the network connector, and these traces always show the ""await"" on this latch with duplex connection).

Eric-AWL
","27/Jul/10 09:15;eric-awl;At first view, on the 5.4-SNAPSHOT, with the last modification, the remoteBrokerNameKnownLatch is not countdown in the stop() method of the DemandForwardingBridge. I don't think that the network connector freeze in DUPLEX connection, is resolved.

Eric-AWL","27/Jul/10 14:48;eric-awl;Hi Gary

You will find here a new version of the my own org.apache.activemq.transport.tcp.SocketTstFactory.java far more deterministic (no random)

In fact, in this one, the duplex network connection is forcely closed in my ""bagot thread"", after 0 ms, then 1 ms, then 2 ms, then ...., then 11 ms, then 31 ms, then 51 ms, then 71 ms, .....

With my patch on the 5.3.2, and my test server, the JUNIT test succeeds (I think always), With the 5.3.2 version, the JUNIT test doesn't succeed (I think never).

On my test server (a good one with 2 CPUs), it's when the connection is closed between 1 and 3 ms, after the connect() call that the network connector is frozen. If the close connection is done immediately, or after 3 ms, the network connector continues to live.

I can't test on 5.4-trunk since I don't have a SVN with HTTPS support on my test server.

I hope this will help you to test on 5.4 and to validate my patch.

Eric-AWL","27/Jul/10 14:57;eric-awl;I didn't receive any mail to signal that I just added a new attachment with a comment on this thread. This comment is just to signal this if necessary !!!

Sorry if you receive 2 mails. 
Eric-AWL","27/Jul/10 15:25;s1ngle;Logs that appears during the start operation on a DiscoveryNetworkConnector with TCP URI to the broker with SSL URI.
","27/Jul/10 15:26;s1ngle;I've encountered similar problem though in a different case.
Imho it is far more easily reproducible.
The case is when you try to add a DiscoveryNetworkConnector between the brokers with a TCP connection set to the broker that has SSL enabled [not TCP].

The operation is blocking [on a DemandForwardingBridgeSupport.start() -> remoteBrokerNameKnownLatch.await(); operation] and new threads are being created, all blocked on the same operation :
DiscoveryNetworkConnector.onServiceAdd()
DemandForwardingBridgeSupport.start()
CountDownLatch.await().

Here are the logs that appears during the situation described above:
https://issues.apache.org/activemq/secure/attachment/19504/activemq-bug-2774-tcpToSsl.log","27/Jul/10 15:37;eric-awl;Yes, with DUPLEX connection, the network connector thread is completely frozen into the start() call. With not Duplex connection, son threads are created and are blocked on the same latch, but the connector is not frozen.

The problem is the same. As we are far more worried by the DUPLEX problem, I choose to demonstrate the bug with DUPLEX connection.

If you have an environment test with source codes, perhaps you can use my patch (only 3 class to change) and tell us what happens on your configuration ???

I can provide you the activemq-all-5.3.2.jar with my patch.

Eric-AWL","28/Jul/10 08:40;s1ngle;	> I can provide you the activemq-all-5.3.2.jar with my patch.

Ok, please, because 

	> (only 3 class to change)

I can see 9 classes in  AMQ2774.tar and 1 class [SocketTstFactory.java] added separately.","28/Jul/10 08:42;eric-awl;The jar with the patch","28/Jul/10 08:49;eric-awl;in the tar file, there are 3 changes for ActiveMQ classes, 6 new test classes and one ressource file (that declares a new transport that simulate network faults)


Changes

- activemq-core/src/main/java/org/apache/activemq/broker/TransportConnection.java
- activemq-core/src/main/java/org/apache/activemq/network/DiscoveryNetworkConnector.java
- activemq-core/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java

test classes

- activemq-core/src/test/java/org/apache/activemq/transport/tcp/TcpFaultyTransportFactory.java
- activemq-core/src/test/java/org/apache/activemq/transport/tcp/TcpFaultyTransport.java
- activemq-core/src/test/java/org/apache/activemq/transport/tcp/TcpFaultyTransportServer.java
- activemq-core/src/test/java/org/apache/activemq/transport/tcp/ServerSocketTstFactory.java
- activemq-core/src/test/java/org/apache/activemq/transport/tcp/SocketTstFactory.java
- activemq-core/src/test/java/org/apache/activemq/usecases/MulticastDiscoveryOnFaultyNetworkTest.java

Test ressource
- activemq-core/src/test/resources/META-INF/services/org/apache/activemq/transport/tcpfaulty


Then, I send SocketTstFactory.java again to change the network faults generation algorithm.

Eric-AWL","28/Jul/10 10:19;s1ngle;Your solution passed all our JUNIT tests so it seems to get rid of the problem while not interfering current features.","28/Jul/10 10:47;gtully;patch applied with thanks to r980014
Great to have the test case and additional validation, that is a some what messy area of the code base.

Just for future reference, svn diff is a great way to produce a patch as it just captures the differences. Makes it alot eastier to apply a patch to trunk when it was created from a branch.
Can you cast an eye over the diffs in the commit log just to be sure to be sure it is all there. thanks again. ","28/Jul/10 11:32;eric-awl;All seems OK. And I think that ""tcpfaulty"" transport can be reused to verify a lot of things...

Be careful, I don't exactly know all consequences of my patch on cluster failover mechanisms (transportInterupted and transportResumed).

Atos Wordline works with ActiveMQ on a VERY VERY HUGE project in France (an ""electricity smart metering"" project). And this patch was very important for us.

I'm not in general development teams but in production teams. That's why I don't have a good SVN development environment.

Thank you
Eric-AWL (Atos Worldline).",,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport client gets corrupted connectedBrokers data ,AMQ-3124,12495009,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,asussman,asussman,08/Jan/11 01:59,01/Feb/11 12:44,30/Jan/20 16:55,11/Jan/11 10:30,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"When clients use the Failover transport, the broker will deliver a list of its own uri and also brokers it peers with to the client.  This happens on initial connection and, if configured, as brokers come in and out of the cluster.

The problem is that the entire URI is given, including query string information.  If the query string contains commas in it then the Failover client breaks it up into unusable client uris and will attempt to connect to them.  Also, in 5.4.2, this leads to the same failure that occurs in AMQ-3085.

Also, there doesn't seem to be a point in the client trying to use the same query string parameters that the server is using.

Attached patch strips the query string before sending uris to the client.

Example:

Broker1:

        <transportConnectors>
            <transportConnector name=""openwire+ssl"" uri=""ssl://0.0.0.0:61616?needClientAuth=true&amp;enabledCipherSuites=SSL_RSA_WITH_RC4_128_SHA,SSL_RSA_WITH_3DES_EDE_CBC_SHA,SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_DSS_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA"" />
        </transportConnectors>


With a client connecting to:  failover:(ssl://broker1:61616), you will see (extra debugging added by me):

[DEBUG] FailoverTransport - Failover add: u[0] is: ssl://broker1:61616
[DEBUG] FailoverTransport - Reconnect was triggered but transport is not started yet. Wait for start to connect the transport.
[DEBUG] FailoverTransport - Started.
[DEBUG] FailoverTransport - Waking up reconnect task
[DEBUG] FailoverTransport - urlList connectionList:[ssl://broker1:61616]
[DEBUG] FailoverTransport - Attempting connect to: ssl://broker1:61616
[DEBUG] FailoverTransport - Failover add: u[0] is: TLS_RSA_WITH_AES_256_CBC_SHA
[DEBUG] FailoverTransport - Failover add: u[1] is: TLS_DHE_DSS_WITH_AES_256_CBC_SHA
[DEBUG] FailoverTransport - Failover add: u[2] is: TLS_RSA_WITH_AES_128_CBC_SHA
[DEBUG] FailoverTransport - Failover add: u[3] is: TLS_DHE_RSA_WITH_AES_128_CBC_SHA
[DEBUG] FailoverTransport - Failover add: u[4] is: ssl://broker1:61616?needClientAuth=true&enabledCipherSuites=SSL_RSA_WITH_RC4_128_SHA
[DEBUG] FailoverTransport - Failover add: u[5] is: TLS_DHE_DSS_WITH_AES_128_CBC_SHA
[WARN] FailoverTransport - Transport (broker1/10.73.76.102:61616) failed to ssl://broker1:61616 , attempting to automatically reconnect due to: java.io.IOException: Unexpected error occured
[DEBUG] FailoverTransport - Transport failed with the following exception: <java.io.IOException: Unexpected error occured>java.io.IOException: Unexpected error occured
	at org.apache.activemq.transport.failover.FailoverTransport.add(FailoverTransport.java:614)
	at org.apache.activemq.transport.failover.FailoverTransport.updateURIs(FailoverTransport.java:1049)
	at org.apache.activemq.transport.failover.FailoverTransport.processNewTransports(FailoverTransport.java:285)
	at org.apache.activemq.transport.failover.FailoverTransport.handleConnectionControl(FailoverTransport.java:265)
	at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:177)
[DEBUG] FailoverTransport - urlList connectionList:[TLS_RSA_WITH_AES_256_CBC_SHA, ssl://broker1:61616]
[DEBUG] FailoverTransport - Attempting connect to: TLS_RSA_WITH_AES_256_CBC_SHA
[DEBUG] FailoverTransport - Connect fail to: TLS_RSA_WITH_AES_256_CBC_SHA, reason: java.io.IOException: Transport not scheme specified: [TLS_RSA_WITH_AES_256_CBC_SHA]
[DEBUG] FailoverTransport - Attempting connect to: ssl://broker1:61616
[DEBUG] FailoverTransport - Connection established
[INFO] FailoverTransport - Successfully reconnected to ssl://broker1:61616

Note that the stacktrace occurs for the same reason as AMQ-3085, but all the extra work attempting to connect to invalid uris is wasteful.  Also, the client has no need for the query string parameters of the server uris.",,artnaseef,asussman,chaggstrom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2632,,,,,,"08/Jan/11 02:01;asussman;amq-3124.patch;https://issues.apache.org/jira/secure/attachment/12467784/amq-3124.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-11 10:30:58.563,,,false,,,,,,,,,,,,,,,,,14704,,,Tue Jan 11 10:30:58 UTC 2011,,,,Patch Available,,,,"0|i0ak2f:",59524,,,,,,,,,,,,,,,,,,,"08/Jan/11 02:01;asussman;Proposed patch.  Strips query string from uris.","11/Jan/11 10:30;gtully;fix applied in r1057565
reused TransportConnetor.getPublishableConnectString() for the propagated uri in cluster update",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Active MQ lose messages which were published on topic,AMQ-3156,12496681,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ghoshea,ghoshea,25/Jan/11 14:45,27/Jan/11 14:08,30/Jan/20 16:55,27/Jan/11 14:08,5.2.0,,,,,,,,,,,,,,0,"We use Spring framework with Active MQ. We publish messages to a topic.
We have one consumer. The publisher published message with attributes.
The consumer filters messages by selector on those attributes.
Once in a while a message does not reach the consumer. There are no errors in logs. No disconnection are seen in logs.

Spring configuration on publisher side:

	<bean id=""connectionFactory"" class=""com.icap.dealfeed.common.jms.FailoverableCachingConnectionFactory"">
		<!--  starting with empty impl, later the real impl will be injected -->
		<property name=""targetConnectionFactory"">
			<bean class=""com.icap.dealfeed.common.jms.ConnectionFactoryEmptyImpl"">
			</bean>
		</property>
		<property name=""sessionCacheSize""      value=""5""/>
	</bean>


Spring beans on consumer side:

	<bean id=""rangeUpdateMessageListenerContainer""
                 class=""org.springframework.jms.listener.DefaultMessageListenerContainer"">
		<property name=""connectionFactory""     ref=""connectionFactory"" />
		<!-- Using the CACHE_NONE so Application Resilience will work -->
		<property name=""cacheLevelName""      value=""CACHE_NONE""/>
		<property name=""destinationName""     value=""${jmsRangeUpdateTopicName}""/>
		<property name=""pubSubDomain""        value=""true""/>
		<property name=""messageListener""       ref=""rangeUpdatesMessageListener""/>
		<property name=""exceptionListener""     ref=""rangeUpdatesMessageListener""/>
		<!-- Because its topic there should be no concurrentConsumers, so both following values are 1-->
		<property name=""concurrentConsumers""    value=""1""/>
		<property name=""maxConcurrentConsumers"" value=""1""/>
		<!--  starting on purpose with dummy selector -->
		<property name=""messageSelector""     value=""dummy = 123""/>
		<property name=""autoStartup""         value=""false""/>
	</bean>


	<bean id=""connectionFactory"" class=""org.springframework.jms.connection.CachingConnectionFactory"">

		<property name=""targetConnectionFactory"" ref=""emptyImplConnectionFactory""/>
		<property name=""sessionCacheSize""      value=""5""/>
	</bean>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/11 16:24;ghoshea;activemq.log;https://issues.apache.org/jira/secure/attachment/12469294/activemq.log","25/Jan/11 14:48;ghoshea;activemq.xml;https://issues.apache.org/jira/secure/attachment/12469282/activemq.xml",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-01-25 18:26:11.107,,,false,,,,,,,,,,,,,,,,,74724,,,Thu Jan 27 14:08:26 UTC 2011,,,,,,,,"0|i0tsrr:",171970,,,,,,,,,,,,,,,,,,,"25/Jan/11 14:48;ghoshea;activemq.xml","25/Jan/11 16:24;ghoshea;This log was created when reproducing the bug in dev environment","25/Jan/11 18:26;gtully;with cache none, a new consumer is created for each receive, leaving no consumer for some duration. When there is no consumer, topic messages are dropped.
Use a durable consumer or CACHE_CONSUMER, with a single consumer with default prefetch, it makes sense to cache it.","27/Jan/11 14:08;ghoshea;There are 2 issues here:
1.
When configuring org.springframework.jms.listener.DefaultMessageListenerContainer with cache none, a new consumer is created for each receive, leaving no consumer for some duration. When there is no consumer, topic messages are dropped.
Using CACHE_CONSUMER solves this issue.

2.
This below exception in activeMQ log:
INFO   | jvm 1    | 2011/01/27 11:35:56 | java.net.SocketException: Software caused connection abort: recv failed
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at java.net.SocketInputStream.socketRead0(Native Method)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at java.net.SocketInputStream.read(SocketInputStream.java:129)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at java.io.DataInputStream.readInt(DataInputStream.java:370)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:210)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:202)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
INFO   | jvm 1    | 2011/01/27 11:35:56 | 	at java.lang.Thread.run(Thread.java:619)

This exception is because we have applicative keep alive that creates connection and session each 2 seconds and than close them.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ checkpoint worker makes unnecessary repeated calls to Journal.getFileMap(), leading to excessive memory usage",AMQ-3162,12496743,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,ccondit,ccondit,25/Jan/11 23:05,26/Jan/11 10:42,30/Jan/20 16:55,26/Jan/11 10:42,5.4.2,,,,,,,5.5.0,,,,,,,0,"During its cleanup run (default every 30 seconds), MessageDatabase.checkpointUpdate() attempts to determine which data files are safe to delete. It calls Journal.getFileMap() repeatedly within a loop to determine if the file is referenced in memory. Journal.getFileMap() creates a new TreeMap from the underlying map. Unfortunately, as the number of data files grows on a busy broker, this can be called hundreds or even thousands of times, leading to excessive run time, memory churn, and overall poor performance (observed in our environment).

The attached patch simply moves the call to getFileMap() outside the loop so that it runs in O(gcCandidates.size) vs. O(gcCandidates.size * fileMap.size).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/11 23:06;ccondit;avoid-getfilemap.patch;https://issues.apache.org/jira/secure/attachment/12469355/avoid-getfilemap.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-26 10:42:16.587,,,false,,,,,,,,,,,,,,,,,14708,,,Wed Jan 26 10:42:16 UTC 2011,,,,Patch Available,,,,"0|i0ajxz:",59504,,,,,,,,,,,,,,,,,,,"26/Jan/11 10:42;gtully;variant of patch applied in r1063669, with thanks :-)

URL: http://svn.apache.org/viewvc?rev=1063669&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recovery after out of disk space (when space freed up) needs manual intervention,AMQ-3122,12494944,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Jan/11 14:08,21/Jan/11 17:50,30/Jan/20 16:55,07/Jan/11 15:00,5.4.1,5.4.2,,,,,,5.5.0,,,Message Store,,,,0,"When broker runs out of disk space, the journal excepts and the send fails with an exception as expected. The default IO exception handler ignores the exception. (aside: it is possible to install an exception handler that shuts down the broker: http://activemq.apache.org/configurable-ioexception-handling.html)

On restart, the last journal file that failed a write is left with 0 size, this impedes restart recovery as it cannot be parsed.
{code}ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.io.EOFException
java.io.EOFException
	at java.io.RandomAccessFile.readInt(RandomAccessFile.java:725)
	at org.apache.kahadb.journal.DataFileAccessor.readLocationDetails(DataFileAccessor.java:115)
	at org.apache.kahadb.journal.Journal.getNextLocation(Journal.java:498)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:395)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:280)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:321)
	at org.apache.activemq.store.kahadb.MessageDatabase.start(MessageDatabase.java:182)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:183)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469){code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14702,,,Fri Jan 07 15:00:41 UTC 2011,,,,,,,,"0|i0ak2v:",59526,,,,,,,,,,,,,,,,,,,"07/Jan/11 14:59;gtully;There is also an exception variant of the form:{code}java.io.EOFException
	at java.io.RandomAccessFile.readInt(RandomAccessFile.java:725)
	at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:83)
	at org.apache.kahadb.journal.Journal.read(Journal.java:601)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:484)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:438)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:315)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:357)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:222)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:180)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:186)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:485){code}","07/Jan/11 15:00;gtully;resolved in r#1056327
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ's Activator not discovering other bundles with extensions.,AMQ-3130,12495295,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,11/Jan/11 20:12,11/Jan/11 20:21,30/Jan/20 16:55,11/Jan/11 20:21,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14781,,,Tue Jan 11 20:21:59 UTC 2011,,,,,,,,"0|i0ak1r:",59521,,,,,,,,,,,,,,,,,,,"11/Jan/11 20:21;chirino;fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
updateClusterFilter/ClientsOnRemove broken when running JMX broker,AMQ-3125,12495011,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,asussman,asussman,08/Jan/11 02:30,10/Jan/11 15:44,30/Jan/20 16:55,10/Jan/11 15:44,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"The transportConnector settings ""updateClusterFilter"" and ""updateClusterClientsOnRemove"" are not propagated to JMX managed connectors when they are created from the non-JMX managed connectos.  So, even if they are set in the XML, they don't actually work at runtime.",,artnaseef,asussman,chaggstrom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/11 02:31;asussman;amq-3125.patch;https://issues.apache.org/jira/secure/attachment/12467787/amq-3125.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-10 15:44:23.289,,,false,,,,,,,,,,,,,,,,,14703,,,Mon Jan 10 15:44:23 UTC 2011,,,,Patch Available,,,,"0|i0ak27:",59523,,,,,,,,,,,,,,,,,,,"08/Jan/11 02:31;asussman;Simple patch to add these fields to the the JMX connection creator.","10/Jan/11 15:44;gtully;thanks for the patch. Applied in r1057244",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proxy connector stop sending messages after failover,AMQ-3119,12494843,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,06/Jan/11 13:39,10/Jan/11 13:32,30/Jan/20 16:55,10/Jan/11 13:32,5.4.2,,,,,,,5.5.0,,,,,,,0,"If the proxy connector is connected to the remote broker using failover transport like 

{code}
          <proxyConnector bind=""tcp://localhost:51618"" remote=""failover:(tcp://localhost:61616)"" 
                proxyToLocalBroker=""true""        
          />
{code}

and the connection to the remote broker is stopped and started again, the consumer listening to the proxy port will stop receiving messages.

However, if openwire cache is disabled on the consumer side, everything works as expected

{code}tcp://localhost:51618?wireFormat.cacheEnabled=false{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14780,,,Mon Jan 10 13:32:07 UTC 2011,,,,,,,,"0|i0ak3b:",59528,,,,,,,,,,,,,,,,,,,"10/Jan/11 13:32;dejanb;Fixed with svn revision 1057186",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Conflicting documentation for OpenWire,AMQ-1988,12482157,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jgomes,,29/Oct/08 00:02,07/Jan/11 03:21,30/Jan/20 16:55,17/Aug/10 22:03,5.0.0,5.1.0,5.2.0,,,,,5.4.1,,,Documentation,Transport,,,0,"The documentation for the OpenWire defaults is in conflict.  I am attempting to set the default settings in the Apache NMS C# client according to the standards, but the documentation is conflicting.   Here are the two links to the conflicting documentation:

[http://activemq.apache.org/openwire-version-2-specification.html]
[http://activemq.apache.org/configuring-wire-formats.html]

Specifically, the conflicts are regarding the default settings for cacheEnabled, tightEncodingEnabled, and cacheSize.  It would be clear as to what the defaults are, and what defaults the NMS client should set.
",NMS 1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-17 22:03:50.975,,,false,,,,,,,,,,,,,,,,,75137,,,Tue Aug 17 22:03:50 UTC 2010,,,,,,,,"0|i0rpjj:",159782,,,,,,,,,,,,,,,,,,,"17/Aug/10 22:03;tabish;Updated the Wiki pages to reflect that the Openwire v2 page is out of date, and direct the user to see the Configuring Wireformats page for the current default settings.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ Build Fails on protobuf,AMQ-2257,12482793,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jgomes,,18/May/09 22:25,07/Jan/11 03:21,30/Jan/20 16:55,14/Jul/10 18:27,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"When compiling ActiveMQ in a clean environment, the Maven script fails to download the protobuf jar files.  In order to reproduce this, your local Maven repository needs to be deleted and ActiveMQ built from scratch.  I use the following command-line when I build, but it is not necessary to reproduce the problem:

mvn -Dtest=false clean install

Attached is a patch to the pom.xml file that adds the required repository path to correctly download the protobuf jar file.","Windows XP, JDK 1.6.12, Maven 2.1.0",jmsignup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/May/09 22:26;protobuf-fix.patch;https://issues.apache.org/jira/secure/attachment/12461515/protobuf-fix.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-05-19 09:41:04.172,,,false,,,,,,,,,,,,,,,,,75009,,,Wed Jul 14 18:27:05 UTC 2010,,,,Patch Available,,,,"0|i0s27r:",161835,Regression,,,,,,,,,,,,,,,,,,"19/May/09 09:41;dejanb;A modified patch applied. Thanks.","19/May/09 16:55;semog;Modification patch looks great.  Thanks for the help!","13/Jul/10 19:14;jmsignup;After downloading ActiveMQ trunk, I've been unable to build because of the missing apache-protobuf dependency.  I've look around for the apache-protbuf snapshot and haven't been able to find it anywhere.  From the previous resolution and posts around the net, it looks like it was hosted on this server last year,
    https://repository.apache.org/content/repositories/snapshots/
However, I cannot find apache-protobuf on this or any other maven repository.  Any help would be appreciated.  Thanks!","14/Jul/10 07:25;dejanb;I just triggered a new build of protobuf module. You can find snapshots here: 

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/protobuf/activemq-protobuf/1.1-SNAPSHOT/

Please let us know if it works for you","14/Jul/10 18:26;jmsignup;Thank you for the very prompt response.  I verified that the files are now on repository.apache.org.  

Unfortunately, I'm now having trouble connecting to repository.apache.org.  I've tried importing the site certificate to a keystore without any success.  Adding -Djavax.net.debug=ssl:handshake:data to MAVEN_OPTS reveals that the certificate is correctly being retrieved, but I'm still getting a connection timed out exception.  I've checked that the proxy configuration is correct too.  Any other hints?  

I'm resolving this issue as the activemq-protobuf 1.1 snapshot is now available and I'm just having issues connecting to the server. ","14/Jul/10 18:27;jmsignup;Resolved as activemq-protobuf 1.1 snapshot is now available here,
https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/protobuf/activemq-protobuf/1.1-SNAPSHOT/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplication of Camel routes in activemq.xml and applicationContext.xml for Camel web app.,AMQ-2203,12483493,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jgomes,,09/Apr/09 19:05,07/Jan/11 03:21,30/Jan/20 16:55,06/Sep/10 13:29,5.3.0,,,,,,,5.4.1,,,,,,,2,"It appears that there are now duplicate configuration points for Camel routes.  In the *activemq.xml* configuration file, the following configuration exists:


{noformat}
    <!--
    ** Lets deploy some Enterprise Integration Patterns inside the ActiveMQ Message Broker
    ** For more details see
    **
    ** http://activemq.apache.org/enterprise-integration-patterns.html
    -->
    <camelContext id=""camel"" xmlns=""http://camel.apache.org/schema/spring"">

        <!-- You can use a <package> element for each root package to search for Java routes -->
        <package>org.foo.bar</package>

        <!-- You can use Spring XML syntax to define the routes here using the <route> element -->
        <route>
            <from uri=""activemq:example.A""/>
            <to uri=""activemq:example.B""/>
        </route>
    </camelContext>

    <!--
    ** Lets configure some Camel endpoints
    **
    ** http://activemq.apache.org/camel/components.html
    -->

    <!-- configure the camel activemq component to use the current broker -->
    <bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"" >
        <property name=""connectionFactory"">
          <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
            <property name=""brokerURL"" value=""vm://localhost?create=false&amp;waitForStart=10000"" />
            <property name=""userName"" value=""${activemq.username}""/>
            <property name=""password"" value=""${activemq.password}""/>
          </bean>
        </property>
    </bean>
{noformat}

This is duplicated in the *webapps\camel\WEB-INF\applicationContext.xml* file:

{noformat}
  <camelContext xmlns=""http://camel.apache.org/schema/spring"">
    <route>
        <from uri=""activemq:example.A""/>
        <to uri=""activemq:example.B""/>
    </route>
  </camelContext>

  <!-- configure the camel activemq component to use the current broker -->
  <bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"" >
    <property name=""exposeAllQueues"" value=""true""/>
      <property name=""connectionFactory"">
        <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
          <property name=""brokerURL"" value=""vm://localhost?create=false&amp;waitForStart=10000"" />
          <property name=""userName"" value=""${activemq.username}""/>
          <property name=""password"" value=""${activemq.password}""/>
        </bean>
      </property>
  </bean>
{noformat}

The net effect of this is that when the broker is launched, there will be two consumers routing messages from example.A to example.B.  At best, this causes unnecessary overhead.  If a user edits the *activemq.xml* file to remove the route information, they think they have removed this camel route.  However, when the broker is restarted, the route still exists, only now with a single consumer routing the messages.  To truly remove the route, the user must also edit the *applicationContext.xml*.

If the configuration of Camel routes is now being handled in the *applicationContext.xml* file, then the obsolete configuration should be removed from *activemq.xml* and documentation should be updated.  In any case, the duplication of Camel routes in a default configuration should be eliminated.",,ckesselh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-06 13:29:45.527,,,false,,,,,,,,,,,,,,,,,14796,,,Mon Sep 06 13:29:45 UTC 2010,,,,,,,,"0|i0ba6f:",63761,,,,,,,,,,,,,,,,,,,"06/Sep/10 13:29;dejanb;Fixed with svn revision 993024.

web console application context now imports conf/camel.xml

Thanks for spotting this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
reportInterval property ignored by DiscardingDLQBrokerPlugin,AMQ-3115,12494706,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/Jan/11 10:21,05/Jan/11 10:28,30/Jan/20 16:55,05/Jan/11 10:28,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"I have a project where I'm trying to use a BrokerService with the
DiscardingDLQBrokerPlugin in code, and I don't want/need the log messages
created for the number of discarded messages.

Eg:

broker_serv = new BrokerService();
plugins[] = new BrokerPlugin[1];
ddlq_plugin = new DiscardingDLQBrokerPlugin();
...
ddlq_plugin.setDropAll(true);
ddlq_plugin.setReportInterval(0);
plugins[0] = ddlq_plugin;

broker_serv.setPlugins(plugins);
broker_serv.start();

Yet, in the DiscardingDLQBrokerPlugin the installPlugin() method doesn't
pass its reportInterval to the DiscardingDLQBroker it creates. So the
DiscardingDLQBroker uses its default reportingInterval of 1000, and no
matter what I do with ddlq_plugin.setReportInterval(x) the reporting
interval is always 1000.

see http://activemq.2283324.n4.nabble.com/Bug-with-DiscardingDLQBrokerPlugin-reportInterval-Not-Used-td3174509.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14778,,,Wed Jan 05 10:28:40 UTC 2011,,,,,,,,"0|i0ak3j:",59529,,,,,,,,,,,,,,,,,,,"05/Jan/11 10:28;gtully;suggested fix from user email applied in r1055395, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSBridgeConnectors does not work with IBM MQ and ActiveMQ 5.4.0,AMQ-2963,12483906,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,r_v_rajeev,r_v_rajeev,07/Oct/10 06:52,04/Jan/11 15:51,30/Jan/20 16:55,04/Jan/11 13:03,5.3.0,5.3.1,5.3.2,5.4.0,5.4.1,,,5.5.0,,,Connector,,,,2,"We are trying to create a bridge with IBM Websphere Queue and ActiveMQ queue. We have defined a broker in activemq.xml with following jmsBridgeConnectors information:

<jmsBridgeConnectors>
    <jmsQueueConnector
      outboundQueueConnectionFactory=""#remoteFactory"">
      <inboundQueueBridges>
        <inboundQueueBridge inboundQueueName=""IBM.TO.ACTIVEMQ"" localQueueName=""IBM.TO.ACTIVEMQ""/>
      </inboundQueueBridges>
   </jmsQueueConnector>
</jmsBridgeConnectors>

We are getting below error with activemq 5.4.0 and it works fine with version 5.2.0:

com.ibm.msg.client.jms.DetailedInvalidDestinationException: JMSCMQ0005: The destination name '://IBM.TO.ACTIVEMQ' was not valid. The destination name specified does not conform to published destination syntax. Correct the specified destination name and try again.
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
        at com.ibm.msg.client.commonservices.j2se.NLSServices.createException(NLSServices.java:313)
        at com.ibm.msg.client.commonservices.nls.NLSServices.createException(NLSServices.java:388)
        at com.ibm.msg.client.wmq.common.internal.WMQDestinationURIParser.setUri(WMQDestinationURIParser.java:524)
        at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3148)
        at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3104)
        at com.ibm.msg.client.wmq.factories.WMQFactoryFactory.createProviderDestination(WMQFactoryFactory.java:444)
        at com.ibm.msg.client.jms.admin.JmsDestinationImpl.setProviderDestination(JmsDestinationImpl.java:333)
        at com.ibm.msg.client.jms.admin.JmsDestinationImpl.initialise(JmsDestinationImpl.java:231)
        at com.ibm.msg.client.jms.admin.JmsDestinationImpl.<init>(JmsDestinationImpl.java:196)
        at com.ibm.msg.client.jms.admin.JmsJndiDestinationImpl.<init>(JmsJndiDestinationImpl.java:129)
        at com.ibm.mq.jms.MQDestination.<init>(MQDestination.java:186)
        at com.ibm.msg.client.wmq.factories.admin.WMQJmsFactory.createDestination(WMQJmsFactory.java:125)
        at com.ibm.msg.client.jms.internal.JmsMessageImpl.providerDestToJmsDest(JmsMessageImpl.java:2111)
        at com.ibm.msg.client.jms.internal.JmsMessageImpl.getJMSDestination(JmsMessageImpl.java:686)
        at com.ibm.jms.JMSMessage.getJMSDestination(JMSMessage.java:605)
        at org.apache.activemq.ActiveMQMessageTransformation.copyProperties(ActiveMQMessageTransformation.java:206)
        at org.apache.activemq.ActiveMQMessageTransformation.transformMessage(ActiveMQMessageTransformation.java:188)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1720)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)
        at org.apache.activemq.ActiveMQQueueSender.send(ActiveMQQueueSender.java:111)
        at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:80)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:129)
        at com.ibm.mq.jms.MQMessageConsumer$FacadeMessageListener.onMessage(MQMessageConsumer.java:399)
        at com.ibm.msg.client.jms.internal.JmsMessageConsumerImpl$JmsProviderMessageListener.onMessage(JmsMessageConsumerImpl.java:904)
        at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.honourNoLocal(WMQAsyncConsumerShadow.java:550)
        at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.consumer(WMQAsyncConsumerShadow.java:384)
        at com.ibm.mq.jmqi.remote.internal.RemoteAsyncConsume.driveConsumer(RemoteAsyncConsume.java:1478)
        at com.ibm.mq.jmqi.remote.internal.RemoteDispatchThread.run(RemoteDispatchThread.java:385)
        at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.runTask(WorkQueueItem.java:209)
        at com.ibm.msg.client.commonservices.workqueue.SimpleWorkQueueItem.runItem(SimpleWorkQueueItem.java:100)
        at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.run(WorkQueueItem.java:224)
        at com.ibm.msg.client.commonservices.workqueue.WorkQueueManager.runWorkQueueItem(WorkQueueManager.java:298)
        at com.ibm.msg.client.commonservices.j2se.workqueue.WorkQueueManagerImplementation$ThreadPoolWorker.run(WorkQueueManagerImplementation.java:1220)

I looked at the code for class ActiveMQsession has a method send which was modified after v 5.2.0 and below lines of code were moved before transforming the IBM JMS Message to Active MQ message:
            message.setJMSDestination(destination);
            message.setJMSDeliveryMode(deliveryMode);
            long expiration = 0L;
            if (!producer.getDisableMessageTimestamp()) {
                long timeStamp = System.currentTimeMillis();
                message.setJMSTimestamp(timeStamp);
                if (timeToLive > 0) {
                    expiration = timeToLive + timeStamp;
                }
            }
            message.setJMSExpiration(expiration);
            message.setJMSPriority(priority);
            message.setJMSRedelivered(false);

Now code sets the ActiveMQDestination as the JMS destination to IBM Message before transformation and we are getting above error when JMS properties are getting copied from IBM Message to ActiveMQMessage inside ActiveMQMessageTransformation.","Operating System - Windows XP Professional 
Tomcat v6.0.28 
IBM Websphere MQ v7.0.1.2 
ActiveMQ 5.4.0",pchandler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-22 19:32:41.312,,,false,,,,,,,,,,,,,,,,,14782,,,Tue Jan 04 15:51:53 UTC 2011,,,,,,,,"0|i0akcf:",59569,,,,,,,,,,,,,,,,,,,"22/Dec/10 19:32;pchandler;Help, Hit the same issue:

        <jmsBridgeConnectors> 
            <jmsQueueConnector name=""LargeCompanytoActiveMQBridge"" 
                               outboundQueueConnectionFactory=""#remoteFactory"" >
                <inboundQueueBridges>
                    <inboundQueueBridge inboundQueueName=""QUEUE1"" />
                </inboundQueueBridges>
            </jmsQueueConnector>
        </jmsBridgeConnectors>

    <bean id=""remoteFactory"" class=""com.ibm.mq.jms.MQQueueConnectionFactory""> 
        <property name=""transportType"" value=""1""/> 
        <property name=""hostName"" value=""HostName""/> 
        <property name=""port"" value=""port#""/> 
        <property name=""queueManager"" value=""queue.manager.1""/> 
        <property name=""channel"" value=""CHANNEL1""/> 
    </bean>

When I send data to QUEUE1 on Websphere MQ I get this error in ActiveMQ.
2010-12-22 13:56:43,634 | INFO  | JMS Connector LargeCompanytoActiveMQBridge Started | org.apache.activemq.network.jms.JmsConnector | main
// ...
2010-12-22 13:56:59,820 | ERROR | failed to forward message on attempt: 1 reason: com.ibm.msg.client.jms.DetailedInvalidDestinationException: JMSCMQ0005: The destination name '://QUEUE1' was not valid. The destination name specified does not conform to published destination syntax. Correct the specified destination name and try again. message: 
  JMSMessage class: jms_text
  JMSType:          null
  JMSDeliveryMode:  2
  JMSExpiration:    0
  JMSPriority:      4
  JMSMessageID:     ID:414d512071756575652e6d616e6167657835114d06a30020
  JMSTimestamp:     1293044219816
  JMSCorrelationID: null
  JMSDestination:   <ERROR>
  JMSReplyTo:       null
  JMSRedelivered:   false
    JMSXAppID: amqsput                     
    JMSXDeliveryCount: 1
    JMSXUserID: mqm         
    JMS_IBM_Character_Set: UTF-8
    JMS_IBM_Encoding: 273
    JMS_IBM_Format: MQSTR   
    JMS_IBM_MsgType: 8
    JMS_IBM_PutApplType: 6
    JMS_IBM_PutDate: 20101222
    JMS_IBM_PutTime: 18565978
test | org.apache.activemq.network.jms.DestinationBridge | DispatchThread: 1
com.ibm.msg.client.jms.DetailedInvalidDestinationException: JMSCMQ0005: The destination name '://QUEUE1' was not valid. The destination name specified does not conform to published destination syntax. Correct the specified destination name and try again.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.ibm.msg.client.commonservices.j2se.NLSServices.createException(NLSServices.java:313)
	at com.ibm.msg.client.commonservices.nls.NLSServices.createException(NLSServices.java:388)
	at com.ibm.msg.client.wmq.common.internal.WMQDestinationURIParser.setUri(WMQDestinationURIParser.java:524)
	at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3148)
	at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3104)
	at com.ibm.msg.client.wmq.factories.WMQFactoryFactory.createProviderDestination(WMQFactoryFactory.java:444)
	at com.ibm.msg.client.jms.admin.JmsDestinationImpl.setProviderDestination(JmsDestinationImpl.java:333)
	at com.ibm.msg.client.jms.admin.JmsDestinationImpl.initialise(JmsDestinationImpl.java:231)
	at com.ibm.msg.client.jms.admin.JmsDestinationImpl.<init>(JmsDestinationImpl.java:196)
	at com.ibm.msg.client.jms.admin.JmsJndiDestinationImpl.<init>(JmsJndiDestinationImpl.java:129)
	at com.ibm.mq.jms.MQDestination.<init>(MQDestination.java:191)
	at com.ibm.msg.client.wmq.factories.admin.WMQJmsFactory.createDestination(WMQJmsFactory.java:125)
	at com.ibm.msg.client.jms.internal.JmsMessageImpl.providerDestToJmsDest(JmsMessageImpl.java:2111)
	at com.ibm.msg.client.jms.internal.JmsMessageImpl.getJMSDestination(JmsMessageImpl.java:686)
	at com.ibm.jms.JMSMessage.getJMSDestination(JMSMessage.java:605)
	at org.apache.activemq.ActiveMQMessageTransformation.copyProperties(ActiveMQMessageTransformation.java:206)
	at org.apache.activemq.ActiveMQMessageTransformation.transformMessage(ActiveMQMessageTransformation.java:188)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1720)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)
	at org.apache.activemq.ActiveMQQueueSender.send(ActiveMQQueueSender.java:111)
	at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:80)
	at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:129)
	at com.ibm.mq.jms.MQMessageConsumer$FacadeMessageListener.onMessage(MQMessageConsumer.java:399)
	at com.ibm.msg.client.jms.internal.JmsMessageConsumerImpl$JmsProviderMessageListener.onMessage(JmsMessageConsumerImpl.java:904)
	at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.honourNoLocal(WMQAsyncConsumerShadow.java:551)
	at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.consumer(WMQAsyncConsumerShadow.java:385)
	at com.ibm.mq.jmqi.remote.internal.RemoteAsyncConsume.driveConsumer(RemoteAsyncConsume.java:1523)
	at com.ibm.mq.jmqi.remote.internal.RemoteDispatchThread.run(RemoteDispatchThread.java:394)
	at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.runTask(WorkQueueItem.java:209)
	at com.ibm.msg.client.commonservices.workqueue.SimpleWorkQueueItem.runItem(SimpleWorkQueueItem.java:100)
	at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.run(WorkQueueItem.java:224)
	at com.ibm.msg.client.commonservices.workqueue.WorkQueueManager.runWorkQueueItem(WorkQueueManager.java:298)
	at com.ibm.msg.client.commonservices.j2se.workqueue.WorkQueueManagerImplementation$ThreadPoolWorker.run(WorkQueueManagerImplementation.java:1220)","04/Jan/11 12:20;gtully;https://issues.apache.org/jira/browse/AMQ-2029 introduced this problem. Not sure what the use case is as the message is being bridged or transformed. Wonder if the destination is really one of the necessary properties that 2029 needs.","04/Jan/11 13:03;gtully;reverted part of fix for https://issues.apache.org/jira/browse/AMQ-2029 as destination name format is provider specific so it is only applicable to the transformed message.
r1055021","04/Jan/11 15:51;pchandler;Thanks for the fix :-) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
non-amq messages don't get JMS* header properties set on them when sent.,AMQ-2029,12482768,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,10/Dec/08 00:30,04/Jan/11 12:22,30/Jan/20 16:55,10/Dec/08 07:15,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"JMS 1.1 spec section 3.4.11 lists properties that should be set from sending a message:

JMSDestination, JMSDeliveryMode, JMSExpiration, JMSPriority, JMSMessageID, JMSTimestamp and presumably JMSRedelivered.  These are getting set on the amq-message copy rather than the original message in ActiveMQSession.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2963,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-04 12:22:07.765,,,false,,,,,,,,,,,,,,,,,14784,,,Tue Jan 04 12:22:07 UTC 2011,,,,,,,,"0|i0b9u7:",63706,,,,,,,,,,,,,,,,,,,"10/Dec/08 07:15;djencks;Rev 725019.  Set the properties on the message before transforming it to an amq message.  Add some tests to make sure they are present after sending.","04/Jan/11 12:22;gtully;David, can you recall the use case for this change. Wonder if destination name, the format being provider dependent, is one of the necessary properties in your use case. see: AMQ-2963",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker policyEntry DurableTopicPrefetch is ignored by default because of connection.optimizedMessageDispatch,AMQ-3095,12493544,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Dec/10 18:29,17/Dec/10 18:37,30/Jan/20 16:55,17/Dec/10 18:37,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"By default optimizedMessageDispatch is enabled, which means the prefetch for a durable sub will be 1000, but the broker is checking just for the default value 100 to determine if it will override. The broker needs to check for both 100 and 1000 or optimizedMessageDispatch=false needs to be used on a connection factory.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14779,,,Fri Dec 17 18:37:38 UTC 2010,,,,,,,,"0|i0ak53:",59536,,,,,,,,,,,,,,,,,,,"17/Dec/10 18:37;gtully;resolved in r1050463",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Polling consumer (prefetch size = 0) fails to reconnect,AMQ-2612,12483480,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pagrus,pagrus,17/Feb/10 10:31,16/Dec/10 23:42,30/Jan/20 16:55,02/Sep/10 20:13,5.3.0,,,,,,,5.4.1,,,Broker,JMS client,,,3,"Scenario:
1. Configure polling consumer (prefetch=0), with onMessage()-style processing, e.g. with Spring's DefaultMessageListenerContainer.
2. Restart broker.
3. Notice consumer does not consumer messages anymore.

In client application this may show up during short network interruptions as reconnect message in logs/console + processing stoppage.

See http://old.nabble.com/ActiveMQ-reconnect-issue-with-consumer.prefetchSize%3D0-td27574923.html for more context.",Reproduced on Windows XP 32 bit and Fedora 12 64bit.,javier,koma,pagrus,thomas.demande,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2877,,,,,,,,,"17/Feb/10 10:40;pagrus;AMQ-2612-test.patch;https://issues.apache.org/jira/secure/attachment/12461621/AMQ-2612-test.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-02 20:13:16.215,,,false,,,,,,,,,,,,,,,,,74873,,,Thu Dec 16 23:42:31 UTC 2010,,,,,,,,"0|i0rpin:",159778,,,,,,,,,,,,,,,,,,,"17/Feb/10 10:40;pagrus;Attaching an activemq-core patch with test that reproduces the issue.","02/Sep/10 20:13;tabish;This issue should be resolved by AMQ-2877","02/Sep/10 20:13;tabish;Fix for AMQ-2877 should resolve this issue as well.","16/Dec/10 23:42;mcheung610;still doesn't work if i specify my broker url to failover:(tcp://host:61616?jms.prefetchPolicy.queuePrefetch=1,tcp://s2hb-pmt-stg-svc4:61616?jms.prefetchPolicy.queuePrefetch=1)?randomize=false

When I start my consumer, it doesn't consume any messages. In the activemq web console, it show zero consumers. But it works if i put queuePrefetch=""1"" property in the activemq.xml.

 <destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""1mb"">
                  <dispatchPolicy>
                    <roundRobinDispatchPolicy />
                  </dispatchPolicy>
                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
                  <subscriptionRecoveryPolicy>
                    <noSubscriptionRecoveryPolicy />
                  </subscriptionRecoveryPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""1mb"" queuePrefetch=""1"">
                  <deadLetterStrategy>
                    <individualDeadLetterStrategy
                            queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />
                  </deadLetterStrategy>
                  <dispatchPolicy>
                    <roundRobinDispatchPolicy />
                  </dispatchPolicy>
                  <subscriptionRecoveryPolicy>
                    <noSubscriptionRecoveryPolicy />
                  </subscriptionRecoveryPolicy>
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBoundsException on FailoverTransport.updateURIs after: already known: java.net.UnknownHostException,AMQ-3085,12493319,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Dec/10 12:18,15/Dec/10 12:22,30/Jan/20 16:55,15/Dec/10 12:22,5.4.1,,,,,,,5.5.0,,,JMS client,,,,0,"broker returned hosts that are not resolvable on the client can throw the update logic in the failover transport off. Disabling update works around this (updateURIsSupported=false on the failover uri). It should be possible to disable the sending on the broker side also.
symptom:
{code}2010-12-10 07:48:16,574 [ActiveMQ Transport: tcp://xx:61616] DEBUG  failover.FailoverTransport:228 - Transport failed with the following exception:
java.io.IOException: Unexpected error occured
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:208) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at java.lang.Thread.run(Thread.java:619) [na:1.6.0_12]
Caused by: java.lang.IndexOutOfBoundsException: Index: 12, Size: 11
	at java.util.concurrent.CopyOnWriteArrayList.add(CopyOnWriteArrayList.java:409) ~[na:1.6.0_12]
	at org.apache.activemq.transport.failover.FailoverTransport.add(FailoverTransport.java:613) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport.updateURIs(FailoverTransport.java:1046) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport.processNewTransports(FailoverTransport.java:285) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport.handleConnectionControl(FailoverTransport.java:265) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:177) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	... 1 common frames omitted{code}",,chaggstrom,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14766,,,Wed Dec 15 12:22:08 UTC 2010,,,,,,,,"0|i0ak67:",59541,,,,,,,,,,,,,,,,,,,"15/Dec/10 12:22;gtully;fix committed in r1049521",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerService leaks threads when scheduler or jmx are enabled,AMQ-3033,12483956,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,bimargulies@gmail.com,bimargulies@gmail.com,12/Nov/10 19:15,14/Dec/10 14:28,30/Jan/20 16:55,14/Dec/10 14:28,5.4.1,,,,,,,5.5.0,,,Broker,,,,0,"If I launch the broker with the below, *without* the first two lines, and call brokerService.stop(), I have 13 more threads after than I had when I started. This in spite of the code I see in the BrokerService class that claims to shut down the scheduler (and the scheduler is one of the threads). 

{code}
           brokerService.setSchedulerSupport(false);
            brokerService.setUseJmx(false);
            brokerService.setPersistenceAdapter(new MemoryPersistenceAdapter());
            brokerService.setPersistent(false);
            brokerService.setUseShutdownHook(true);
            brokerService.setUseLoggingForShutdownErrors(false);
            brokerService.setSchedulerSupport(false);
            bindAddress = ""tcp://localhost:"" + getBrokerPort();
            tcpTransport = brokerService.addConnector(bindAddress);
            brokerService.setDataDirectory(dataDirectory.getAbsolutePath());
            brokerService.start();
{code}",,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-14 14:28:36.928,,,false,,,,,,,,,,,,,,,,,14763,,,Tue Dec 14 14:28:36 UTC 2010,,,,,,,,"0|i0ak9b:",59555,,,,,,,,,,,,,,,,,,,"14/Dec/10 14:28;gtully;double init of timer left a dangling ref. r1049105",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscriptions are not removed from mbean,AMQ-3081,12492964,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,10/Dec/10 18:12,10/Dec/10 18:15,30/Jan/20 16:55,10/Dec/10 18:15,5.4.2,,,,,,,5.5.0,,,,,,,0,This is related to https://issues.apache.org/jira/browse/AMQ-3013 ... Subscription mbeans are not actually removed from the context.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3013,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14777,,,Fri Dec 10 18:15:58 UTC 2010,,,,,,,,"0|i0ak6n:",59543,,,,,,,,,,,,,,,,,,,"10/Dec/10 18:15;dejanb;Fixed with svn revision 1044465",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with removing durable subscribers from the BrokerView,AMQ-3013,12483847,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,03/Nov/10 15:05,10/Dec/10 18:13,30/Jan/20 16:55,03/Nov/10 15:08,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,"There's a general problem with durable subscribers and respective mbeans. There are two methods on BrokerView:

- getDurableTopicSubscribers() - which should return only active subs
- getInactiveDurableTopicSubscribers() - which should return only inactive (offline) subs

So when we create durable topic subscriber it should be shown in active subs. When we close that session, it should go to the ""inactive"" list and finally when we unsubscribe, it should be completely removed.

Also, the web console should be show both active and ""offline"" subs in separate lists.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14759,,,Wed Nov 03 15:08:09 UTC 2010,,,,,,,,"0|i0b9nr:",63677,,,,,,,,,,,,,,,,,,,"03/Nov/10 15:08;dejanb;Fixed with svn revision 1030490",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error creating tables on Oracle jdbc store ,AMQ-3068,12491876,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,preben,preben,02/Dec/10 13:40,10/Dec/10 16:17,30/Jan/20 16:55,10/Dec/10 16:17,5.4.1,,,,,,,5.5.0,,,Broker,,,,0,"There seems to be an error when using Oracle 10.3. as jdbc store with fuse messagebroker version 5.4.1

I have confirmed that it works with messagebroker version 5.3.1

For detail see : http://fusesource.com/forums/thread.jspa?threadID=2429

/Preben","Windows, oracle 10.3.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-10 16:17:24.191,,,false,,,,,,,,,,,,,,,,,46501,,,Fri Dec 10 16:17:24 UTC 2010,,,,,,,,"0|i0ak7j:",59547,,,,,,,,,,,,,,,,,,,"10/Dec/10 16:17;gtully;resolved in http://svn.apache.org/viewvc?rev=1038758&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javascript client does not establish session properly.,AMQ-3015,12483850,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,pschwamb,pschwamb,04/Nov/10 15:23,10/Dec/10 15:58,30/Jan/20 16:55,10/Dec/10 15:58,5.4.1,,,,,,,5.5.0,,,,,,,0,"In some configurations, the javascript client (amq.js) is not loaded from the same container that hosts the activemq broker.  For example, we have a Rails app and ActiveMQ both sitting behind apache, and the amq.js file is served directly by apache.

In these kinds of configurations, when the javascript client first calls amq.init(), there is no JSESSIONID.  Both the POST to establish the subscription and the GET to start polling are delivered asynchronously, both without a JSESSIONID, and thus they each end up with different JSESSIONIDS, and the poll never returns any messages (as that session has no subscription).

This small patch adds support for a callback mechanism that will allow clients to sign up using a callback mechanism that ensures that the JESSIONID is established properly before attempting to make a subscription, like this:

{code:javascript:title=myclient.js|borderStyle=solid}
amq.init({ 
    uri: '/amq',
    sessionInitializedCallback: function() { 
        amq.addListener(""display"", ""topic://sensors"", onMessage);       
    } 
});
{code}

The patch is also backwards compatible, so existing code should still work (albeit with the same existing problem).",,alexdean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Nov/10 15:47;pschwamb;amq_session.patch;https://issues.apache.org/jira/secure/attachment/12461829/amq_session.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-12-10 15:58:00.791,,,false,,,,,,,,,,,,,,,,,14747,,,Fri Dec 10 15:58:00 UTC 2010,,,,Patch Available,,,,"0|i0aka7:",59559,,,,,,,,,,,,,,,,,,,"10/Dec/10 15:58;dejanb;Fixed with svn revision 1044412. It will be available in 5.5.0 version. Sorry we missed this earlier.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
updateURIsSupported option on Failover transport should be documented,AMQ-3079,12492892,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,austinmills,austinmills,09/Dec/10 23:25,09/Dec/10 23:47,30/Jan/20 16:55,09/Dec/10 23:47,,,,,,,,,,,Documentation,,,,0,"There is an option, updateURIsSupported, on the Failover Transport which tells the client not to update its list of broker URIs. It's currently undocumented, but has been useful for a least a couple of users, see AMQ-2632 and http://activemq.2283324.n4.nabble.com/Problems-with-Store-and-Forward-network-and-Failover-transport-td3077313.html. 

Here's some suggested text (this would go in the table under Transport Options):

updateURIsSupported, default: true. Description: Whether the client should accept updates to its list of URIs from the broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-09 23:47:26.652,,,false,,,,,,,,,,,,,,,,,74735,,,Thu Dec 09 23:47:26 UTC 2010,,,,,,,,"0|i0s2xj:",161951,,,,,,,,,,,,,,,,,,,"09/Dec/10 23:47;tabish;Fixed, changes will be reflected once the site is updated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException thrown in PriorityNetworkDispatchPolicy,AMQ-3071,12492622,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Dec/10 14:59,07/Dec/10 15:01,30/Jan/20 16:55,07/Dec/10 15:01,5.4.2,,,,,,,5.5.0,,,Broker,,,,0,"{code}Caused by: java.util.ConcurrentModificationException
at java.util.AbstractList$Itr.checkForComodification(Unknown Source)
at java.util.AbstractList$Itr.next(Unknown Source)
at org.apache.activemq.broker.region.policy.PriorityNetworkDispatchPolicy.dispatch(PriorityNetworkDispatchPolicy.java:50)
at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:588)
at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:446)
at org.apache.activemq.broker.region.Topic.send(Topic.java:387)
at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:187)
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)
at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:303)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181){code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14774,,,Tue Dec 07 15:01:24 UTC 2010,,,,,,,,"0|i0agxr:",59017,,,,,,,,,,,,,,,,,,,"07/Dec/10 15:01;gtully;noddy remove while iterating without using iterator.remove.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemory exception possible when using ByteMessage-s due to JVM bug,AMQ-2919,12483806,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Sep/10 11:36,03/Dec/10 09:42,30/Jan/20 16:55,15/Sep/10 11:39,5.4.0,,,,,,,5.4.1,,,,,,,0,Due to following  http://bugs.sun.com/view_bug.do?bug_id=4797189 the custom deflator is not closed when used with DeflaterOutputStream. A workaround is to explicitly close it.,,eric-awl,timg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-26 10:46:29.576,,,false,,,,,,,,,,,,,,,,,14841,,,Fri Dec 03 09:42:13 UTC 2010,,,,,,,,"0|i0ba27:",63742,,,,,,,,,,,,,,,,,,,"15/Sep/10 11:39;dejanb;Fixed with svn revision 997290","26/Oct/10 10:46;timg;We are experiencing a problem in 5.4.1 (with Spring 3.0.4) which appears to be related to this fix. No problems with 5.4.0 and the same configuration.

It looks like ActiveMQBytesMessage.storeContent closes the DeflaterStream prematurely, leaving initializeWriting with nothing to close.

Error log:
{noformat}
Caused by: java.lang.NullPointerException: Deflater has been closed
	at java.util.zip.Deflater.ensureOpen(Deflater.java:427)
	at java.util.zip.Deflater.deflate(Deflater.java:305)
	at java.util.zip.DeflaterOutputStream.deflate(DeflaterOutputStream.java:159)
	at java.util.zip.DeflaterOutputStream.finish(DeflaterOutputStream.java:134)
	at java.util.zip.DeflaterOutputStream.close(DeflaterOutputStream.java:146)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.apache.activemq.command.ActiveMQBytesMessage$1.close(ActiveMQBytesMessage.java:808)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.apache.activemq.command.ActiveMQBytesMessage.storeContent(ActiveMQBytesMessage.java:124)
	at org.apache.activemq.command.ActiveMQBytesMessage.reset(ActiveMQBytesMessage.java:765)
	...
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:565)
	at org.springframework.jms.core.JmsTemplate$3.doInJms(JmsTemplate.java:536)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:466)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:534)
{noformat}
	
","28/Oct/10 11:51;dejanb;Hi Tim,

any chance you can create a test case that demonstrates the issue?

Thanks,
Dejan","03/Dec/10 09:42;timg;It looks like this has been raised again here, with a suggested patch: AMQ-3062",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQBlobMessage.copy(..) does not copy the name attribute,AMQ-3067,12491859,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,norman,norman,02/Dec/10 08:34,02/Dec/10 12:44,30/Jan/20 16:55,02/Dec/10 12:44,5.3.0,5.3.1,5.3.2,5.4.0,5.4.1,,,5.5.0,,,,,,,0,When using ActiveMQBlobMessage the name attribute is not copied when calling copy(...). As the default of activemq is to copy on send it get lost.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/10 08:38;norman;AMQ-3067.diff;https://issues.apache.org/jira/secure/attachment/12465115/AMQ-3067.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-12-02 12:44:50.402,,,false,,,,,,,,,,,,,,,,,14770,,,Thu Dec 02 12:44:50 UTC 2010,,,,,,,,"0|i0ak7r:",59548,,,,,,,,,,,,,,,,,,,"02/Dec/10 08:38;norman;Trivial fix for the issue","02/Dec/10 12:44;gtully;patch committed in r1041351 - additional test added also which will protect it.
thanks,
Gary.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception when Redelivery ack is processed by topic subscription,AMQ-3056,12483913,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Nov/10 14:36,26/Nov/10 14:47,30/Jan/20 16:55,26/Nov/10 14:47,5.4.1,,,,,,,5.5.0,,,Broker,,,,0,"2010-11-12 17:46:24,124 | WARN  | Async error occurred: javax.jms.JMSException: Invalid acknowledgment: MessageAck {commandId = 29455, responseRequired = false, ackType = 3, consumerId =ID:X-2506-1289583778418-0:0:1:1, firstMessageId =ID:X-51821-634249796434830099-1:5:1:3:313195, lastMessageId = ID:X-51821-634249796434830099-1:5:1:3:313195, destination = topic://help.Publish.Instance1, transactionId = null, messageCount = 1} | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///Y:2508
javax.jms.JMSException: Invalid acknowledgment: MessageAck {commandId = 29455, responseRequired = false, ackType = 3, consumerId = ID:X-2506-1289583778418-0:0:1:1, firstMessageId = ID:X09-51821-634249796434830099-1:5:1:3:313195, lastMessageId = ID:X09-51821-634249796434830099-1:5:1:3:313195, destination = topic://help.Publish.Instance1, transactionId = null, messageCount = 1}
        at org.apache.activemq.broker.region.TopicSubscription.acknowledge(TopicSubscription.java:286)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:383)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:544)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:200)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:469)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:214)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
        at java.lang.Thread.run(Thread.java:619)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14773,,,Fri Nov 26 14:47:39 UTC 2010,,,,,,,,"0|i0agy7:",59019,,,,,,,,,,,,,,,,,,,"26/Nov/10 14:47;gtully;r1039392
the redeliveryAck (type=3) is handled and ignored by the topic sub, suppressing the default exception behaviour which can clog the logs..",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in SimpleAuthenticationBroker,AMQ-3052,12483904,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,24/Nov/10 16:02,24/Nov/10 16:05,30/Jan/20 16:55,24/Nov/10 16:05,5.4.1,,,,,,,5.4.2,,,,,,,0,"When the addConnection() fails after the successful auth check, we need to remove security context.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14739,,,Wed Nov 24 16:05:23 UTC 2010,,,,,,,,"0|i0b9vj:",63712,,,,,,,,,,,,,,,,,,,"24/Nov/10 16:05;dejanb;Fixed with svn revision 1038658",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ standalone script doesn't return with 0 when stop is called.,AMQ-3050,12483896,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,alexjfisher,alexjfisher,23/Nov/10 15:36,24/Nov/10 09:41,30/Jan/20 16:55,24/Nov/10 09:41,5.4.1,,,,,,,5.4.2,,,,,,,0,"I was testing to see if the ./bin/activemq script was LSB compatible (I want to integrate activemq into a pacemaker setup).

When calling ./bin/activemq stop, the script should return 0 on success.

The problem is in the invokeJar function.  In the 'stop' case , the value of RET is set in the context of a forked process.
The proposed fix, is identical to how RET is handled in the other 2 cases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/10 15:38;alexjfisher;activemq-return-value.patch;https://issues.apache.org/jira/secure/attachment/12461892/activemq-return-value.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-11-24 09:41:53.084,,,false,,,,,,,,,,,,,,,,,14755,,,Wed Nov 24 09:41:53 UTC 2010,,,,Patch Available,,,,"0|i0b9tb:",63702,,,,,,,,,,,,,,,,,,,"23/Nov/10 15:38;alexjfisher;Patch correcting issue.","24/Nov/10 09:41;dejanb;Fixed with svn revision 1038539. Thanks for the patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid messages in the pending queue of durable subscriptions.,AMQ-2695,12483900,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,akos.baraz,akos.baraz,13/Apr/10 09:45,23/Nov/10 19:39,30/Jan/20 16:55,23/Nov/10 19:39,5.3.1,,,,,,,5.4.2,,,Broker,,,,0,"Invalid messages appear in the pending queue of the durable subscriptions (with message selector) right after broker restart. These invalid messages are blocking the delivery of the newly produced ones.
As I see all messages appear in the pending queue what are produced on the topic (ever!!!) even if does not fulfills the selector.

Please, check my test case!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/10 07:53;akos.baraz;SubscriptionSelectorTest.java;https://issues.apache.org/jira/secure/attachment/12461733/SubscriptionSelectorTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-06-14 11:41:29.448,,,false,,,,,,,,,,,,,,,,,14738,,,Tue Nov 23 19:39:00 UTC 2010,,,,,,,,"0|i0b9vz:",63714,,,,,,,,,,,,,,,,,,,"14/Jun/10 11:41;dejanb;Fixed with svn revision 954412

The problem was that KahaDB store didn't return a valid message count for the durable subscriber with selector (after the restart)","23/Nov/10 19:03;gtully;The existing solution can be improved from a performance perspective using the changes in https://issues.apache.org/activemq/browse/AMQ-2985.
The index, via acklocations contains all of the matched messages so the selectors need not be rerun to determine the available message count etc.","23/Nov/10 19:39;gtully;r1038296, re implemented getMessageCount to use the just the index and remove the need to re run the selector.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing messages in durable subscription with selector and KahaDB,AMQ-2985,12483454,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,18/Oct/10 09:22,23/Nov/10 19:22,30/Jan/20 16:55,23/Nov/10 19:22,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,"With a selector and reconnecting durable sub, some messages appear missing as if they were acked in error.",,jijwang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-11-12 19:17:59.927,,,false,,,,,,,,,,,,,,,,,14737,,,Tue Nov 23 19:22:10 UTC 2010,,,,,,,,"0|i0b9tr:",63704,,,,,,,,,,,,,,,,,,,"18/Oct/10 09:29;gtully;resolved in r1023704 ","19/Oct/10 12:23;gtully;TODO: A jdbc variant of the test would be a nice addition.","21/Oct/10 11:01;gtully;jdbc variant of test complete. (showed up issue with cleanup task not respecting priority) resolved in r1025939","10/Nov/10 13:43;gtully;found another variant of the test that fails","10/Nov/10 16:46;gtully;Issue sorted in r1033581 new test now enabled. detail in svn record","12/Nov/10 19:17;jijwang;I just tried on Nov 12th SNAPSHOT build. It now will receive the same message more than once. For example, I have some durable message sent out every 20 minutes. A client may receive accumulated durable message 3-7 when it first reconnects. Then the client disconnected. After more than 20 minutes, it reconnected second time and received message 8. It then disconnected again. After another 20 more minutes, it reconnected the third time, but this time, it received message 3-9. So message 3-8 were delivered with duplicate.

I have the following configuration for AMQ broker:
<destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic="">"" producerFlowControl=""false"" memoryLimit=""1mb"">
                  <pendingSubscriberPolicy>
                    <fileCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""false"" memoryLimit=""1mb"">
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy> 
 ...
        <systemUsage>
            <systemUsage sendFailIfNoSpaceAfterTimeout=""3000"">
                <memoryUsage>
                    <memoryUsage limit=""20 mb""/>
                </memoryUsage>
            </systemUsage>
        </systemUsage>


","12/Nov/10 21:07;gtully;thanks for the feedback. Do you think you could reproduce your scenario with some variation of http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/DurableSubscriptionOfflineTest.java?view=markup - a test case would be a great help.","13/Nov/10 02:00;jijwang;Gary:

Please see some broker configuration in my previous post. In our test case, each client did a durable subscription with selector using sql like criteria, for example: (bs LIKE '%!10!%') OR (bs LIKE '%!20!%') .... OR (bs LIKE '%!100!%') The TopicConnection is nonTransactioned and with Session.AUTO_ACKNOWLEDGE. The message is sent with a possible string property of 'bs'. Its value could be something like !20!30!40!. The message was sent every 20 minutes. Then the client connects and reconnects from time to time.

 
","23/Nov/10 15:25;gtully;It is possible to receive duplicates when the messageOrdercursor reverts back to the start when there are no new messages. 
With priority in the mix, the last ack location needs to include priority such that it can reset just the correct cursors.","23/Nov/10 19:22;gtully;r1038276 - ackLocations are created on message send, such that subs can ack at their will, due to unmatched or out of order due to priority. subscription acks hold priority along with the last ack, such that the order cursors can be correctly chosen after a restart or reset. This ensures that duplicates are not dispatched as the current position is now ack aware rather than shared across priority.
This brings kahaDb more in line with JDBC w.r.t priority and durable subs. Tests now work with both stores.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 initialReconnectDelay on failover transport is not being honored ,AMQ-3049,12483542,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,23/Nov/10 09:58,23/Nov/10 10:22,30/Jan/20 16:55,23/Nov/10 10:22,5.4.1,,,,,,,5.4.2,,,,,,,0,"It's honored only when useExponentialBackOff is set to false, so the url like

failover:(tcp://localhost:61616,tcp://localhost:61618)?initialReconnectDelay=10000&randomize=false&updateURIsSupported=false

will ignore it",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14775,,,Tue Nov 23 10:22:30 UTC 2010,,,,,,,,"0|i0b9un:",63708,,,,,,,,,,,,,,,,,,,"23/Nov/10 10:22;dejanb;fixed with svn revision 1038036",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot import broker config using entities anymore,AMQ-3039,12483883,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,janstey,janstey,15/Nov/10 18:41,15/Nov/10 18:46,30/Jan/20 16:55,15/Nov/10 18:46,5.4.1,,,,,,,5.4.2,,,,,,,0,"We used to be able to import broker config using entities as follows:

{code}
<!DOCTYPE activemq [
<!ENTITY network-connectors SYSTEM ""/etc/activemq/network-connectors.xml""> 
]>
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd""> 
  
  <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""${activemq.brokername}"" useJmx=""true"" populateJMSXUserID=""true"" dataDirectory=""${activemq.base}/data""> 
 
    <managementContext> 
        <managementContext createConnector=""false""/> 
    </managementContext> 

    &network-connectors;

...
{code}

Now, since the Spring 3 upgrade, you get something like this error:

{code}
Caused by: org.xml.sax.SAXParseException: Element type ""beans"" must be declared.
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement(XMLDTDValidator.java:1929)
        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement(XMLDTDValidator.java:764)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1363)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$ContentDriver.scanRootElementHook(XMLDocumentScannerImpl.java:1318)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3103)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:235)
        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)
        at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
        ... 42 more
{code}

This is caused by validation being turned on by default in Spring 3 (it was off in Spring 2.x). Have test case coming soon.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74745,,,Mon Nov 15 18:46:00 UTC 2010,,,,,,,,"0|i0rplr:",159792,,,,,,,,,,,,,,,,,,,"15/Nov/10 18:46;janstey;Seems this is already fixed in AMQ-2939.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception when try to browse ActiveMQBlobMessage via JMX,AMQ-3029,12483874,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,norman,norman,12/Nov/10 08:47,15/Nov/10 13:21,30/Jan/20 16:55,15/Nov/10 13:21,5.3.1,5.3.2,5.4.0,5.4.1,,,,5.4.2,,,JMX,,,,0,"Unable to browse ActiveMQBlobMessages via JMX

WARN  09:39:13,383 | org.apache.activemq.broker.jmx.DestinationViewMBean | excep
tion browsing destination
javax.management.openmbean.OpenDataException: Cannot create a CompositeData for
type: org.apache.activemq.command.ActiveMQBlobMessage
        at org.apache.activemq.broker.jmx.OpenTypeSupport.convert(OpenTypeSuppor
t.java:481)
        at org.apache.activemq.broker.jmx.DestinationView.browse(DestinationView
.java:157)
        at org.apache.activemq.broker.jmx.DestinationView.browse(DestinationView
.java:138)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMB
eanIntrospector.java:93)
        at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMB
eanIntrospector.java:27)
        at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.j
ava:208)
        at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:120)
        at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:262)
        at javax.management.StandardMBean.invoke(StandardMBean.java:391)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultM
BeanServerInterceptor.java:836)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:761
)
        at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnecti
onImpl.java:1426)
        at javax.management.remote.rmi.RMIConnectionImpl.access$200(RMIConnectio
nImpl.java:72)
        at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run
(RMIConnectionImpl.java:1264)
        at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(R
MIConnectionImpl.java:1359)
        at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImp
l.java:788)
        at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)
        at sun.rmi.transport.Transport$1.run(Transport.java:159)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:5
35)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTranspor
t.java:790)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport
.java:649)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExec
utor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor
.java:908)
        at java.lang.Thread.run(Thread.java:619)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/10 12:12;norman;ACTIVEMQ-3029-with-test.diff;https://issues.apache.org/jira/secure/attachment/12461884/ACTIVEMQ-3029-with-test.diff","12/Nov/10 09:01;norman;ACTIVEMQ-3029.diff;https://issues.apache.org/jira/secure/attachment/12461883/ACTIVEMQ-3029.diff",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-11-12 11:09:36.505,,,false,,,,,,,,,,,,,,,,,14732,,,Mon Nov 15 13:21:58 UTC 2010,,,,,,,,"0|i0b9wf:",63716,,,,,,,,,,,,,,,,,,,"12/Nov/10 09:01;norman;This patch fix the issues","12/Nov/10 11:09;gtully;can you include a simple junit test? it will protect your fix into the future.","12/Nov/10 12:12;norman;include a testcase, I thought the fix is so trivial that I don't need one.. But I see your point ;)","15/Nov/10 13:21;gtully;patch and test applied in r1035264, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq script ignores ACTIVEMQ_SSL_OPTS from environment,AMQ-3035,12483884,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Nov/10 10:20,15/Nov/10 10:28,30/Jan/20 16:55,15/Nov/10 10:28,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,We should re-enable setting ssl properties using SSL_OPTS environment variable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14756,,,Mon Nov 15 10:28:13 UTC 2010,,,,,,,,"0|i0b9tz:",63705,,,,,,,,,,,,,,,,,,,"15/Nov/10 10:28;dejanb;Fixed with svn revision 1035211",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Seeing inflight messages that are not consumed when jmsPriority is enabled and have intermittent durable consumer,AMQ-2980,12483867,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Oct/10 12:23,10/Nov/10 17:46,30/Jan/20 16:55,10/Nov/10 17:46,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,"With reconnecting durable subs or with small prefetch, out of order priority messages and missing messages can occur. Issues with the kahaDB topic store, message delete and ordered cursor sync and replay.

Topic store sd.orderIndex need an exclusive lock and replay from the last ack needs to take ordered cursors into account. Batch replay also needs to maintain ordered cursor state between batches.

JDBC store also has some issues in the batch regard.",,jjordan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14758,,,Wed Nov 10 17:46:02 UTC 2010,,,,,,,,"0|i0b9wv:",63718,,,,,,,,,,,,,,,,,,,"15/Oct/10 12:31;gtully;Fix for KahaDB and test case in r1022890

JDBC store needs some work also.","21/Oct/10 11:00;gtully;fix for jdbc in r1025939","04/Nov/10 13:19;gtully;Further tests and improvements in r1030928 - additional rows in ack table to track last ack location per priority such that the store can be traversed in both directions to retrieve messages.","10/Nov/10 13:29;gtully;reopening pending finding root cause of some duplicate dispatch on durable reconnect","10/Nov/10 17:46;gtully;final piece in r1033607, contention over activation and dispatch resulted in the occasional dups on reconnect. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ child instances create their PID file in the parent's data directory and refer to the parent's configuration files when started,AMQ-3025,12483858,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,lintongalloway,lintongalloway,09/Nov/10 08:19,09/Nov/10 08:33,30/Jan/20 16:55,09/Nov/10 08:33,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,"ActiveMQ child instances create their PID file in the parent's data directory and refer to the parent's configuration files when started. 

Please see below for the diff of the bin/activemq script:

87a88,91
> if [ -z ""$ACTIVEMQ_BASE"" ] ; then
>   ACTIVEMQ_BASE=""$ACTIVEMQ_HOME""
> fi
> 
89c93
< ACTIVEMQ_CONFIG_DIR=""$ACTIVEMQ_HOME/conf""
---
> ACTIVEMQ_CONFIG_DIR=""$ACTIVEMQ_BASE/conf""
93c97
<   ACTIVEMQ_DATA_DIR=""$ACTIVEMQ_HOME/data""
---
>   ACTIVEMQ_DATA_DIR=""$ACTIVEMQ_BASE/data""
283,286d286
< 
< if [ -z ""$ACTIVEMQ_BASE"" ] ; then
<   ACTIVEMQ_BASE=""$ACTIVEMQ_HOME""
< fi
",unix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74747,,,Tue Nov 09 08:33:03 UTC 2010,,,,Patch Available,,,,"0|i0rplj:",159791,,,,,,,,,,,,,,,,,,,"09/Nov/10 08:33;lintongalloway;This one appears to be fixed against the trunk and should be available in the next release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message is lost while browsing composite queues over the network,AMQ-3020,12483517,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,05/Nov/10 14:56,08/Nov/10 17:52,30/Jan/20 16:55,08/Nov/10 17:52,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14750,,,Mon Nov 08 17:52:36 UTC 2010,,,,,,,,"0|i0b9x3:",63719,,,,,,,,,,,,,,,,,,,"08/Nov/10 17:52;dejanb;Fixed with svn revision 1032647

The problem is that browsers are propagated through the network and with a full-mesh configuration and statically included destination, that could lead to duplicate message delivery attempts. Those attempts are rejected by the kahadb store (with ""Duplicate message add attempt rejected."", and store and cursor goes out of the sync).

The solution is to suppress propagation of browser subscriptions over the network as they generally doesn't make much sense.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"For ""duplex"" network connection,  after restart one ActiveMQ,  message is missing.",AMQ-2764,12483855,12483840,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,qingyi,qingyi,04/Jun/10 18:33,05/Nov/10 23:04,30/Jan/20 16:55,27/Aug/10 11:58,5.3.1,,,,,,,5.4.1,5.4.2,,Broker,,,,0,"I have two AMQ setup.  And they use duplex network connection between.   After I restart one ActiveMQ which initiates the connection,  half of the message are missing.    In order to avoid this problem,  I have restart the other ActiveMQ.   And this  happens when I use ""staticallyIncludedDestinations"" or ""dynamicallyIncludedDestinations"" config in broker.

1 SETUP:
a) SCA server has a network connector to remote server114.  In order to repeat this problem, you have to use ""staticallyIncludedDestinations"".

<networkConnector name=""SCA"" uri=""static://(https://192.168.3.114:61617)"" duplex=""true"">
               <staticallyIncludedDestinations>
                              <queue physicalName=""R""/>
               </staticallyIncludedDestinations>
</networkConnector>

b) SCA server has a java code consumer listening on queue R:

c)  Remote server114 is listening on 61617, see config below;
<transportConnectors> 
           <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/> 
           <transportConnector name=""https"" uri=""https://0.0.0.0:61617?needClientAuth=true""/> 
</transportConnectors> 
(See attached picture ""Remote-Console1.jpg"".)

2. Restart activemq on SCA server and restart consumer application listening on queue R on SCA too.  Remote server114 activemq admin console shows there are two consumers on R. 
(See attached picture ""Remote-Console2.jpg"")

3 Start a producer on remote server114 to send 10 messages to R.  On SCA server, consumer on R  only receives 5 messages.
(See attached picture ""SCA-consumer1.JPG"")

4. On remote server114 activemq admin console, these 10 messages are divided by these two consumers.
(See attached picture ""Remote-Console3.jpg"")


","Windows2k3,  AMQ 5.3.1, ",slewis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/10 18:34;qingyi;Remote-Console1.JPG;https://issues.apache.org/jira/secure/attachment/12461725/Remote-Console1.JPG","04/Jun/10 18:34;qingyi;Remote-Console2.JPG;https://issues.apache.org/jira/secure/attachment/12461726/Remote-Console2.JPG","04/Jun/10 18:34;qingyi;Remote-Console3.JPG;https://issues.apache.org/jira/secure/attachment/12461727/Remote-Console3.JPG","04/Jun/10 18:35;qingyi;SCA-consumer1.JPG;https://issues.apache.org/jira/secure/attachment/12461728/SCA-consumer1.JPG","24/Aug/10 20:58;slewis;test-case.txt;https://issues.apache.org/jira/secure/attachment/12461681/test-case.txt","23/Aug/10 20:48;slewis;test-case.txt;https://issues.apache.org/jira/secure/attachment/12461674/test-case.txt",,,,,,6.0,,,,,,,,,,,,,,,,,,,,2010-07-12 13:47:25.368,,,false,,,,,,,,,,,,,,,,,14842,,,Wed Oct 06 13:44:44 UTC 2010,,,,,,,,"0|i0b9zb:",63729,,,,,,,,,,,,,,,,,,,"12/Jul/10 13:47;lcurry;Steps to reproduce the issue
----------------------------------
To reproduce this issue I installed apache-activemq-5.3.2 in two separate locations. The scenario simulates a hub and spoke architecture in which the hub (Broker1) will be connected (via a networkConnector) to Broker2. The network connector uses ""http"" rather than ""tcp"" for connection between brokers. This is a requirement for customer because customer  broker connection must traverse distinct networks. Note the problem does not seem to occur when ""tcp"" is used. The networkConnector also defines a ""staticallyIncludedDestination"".

The problem happens when Broker1 is shutdown and restarted. After that, the networkConnector (store and forward)
mechanism seems to break. Messages that should be available to a consumer in queue on Broker1 are not sent to consumer
and appear to be lost.  

The actual config details are given below. Also attached are the activemq.xml files for Broker1 and Broker2.

1)	Update activemq.xml for Broker1.
The changes to the default configuration for Broker1 include the following: 
•	Change the broker name from localhost to Broker1
•	Add networkConnector to Broker2.

    <broker xmlns=""http://activemq.apache.org/schema/core"" useJmx=""true"" brokerName=""BROKER1"" dataDirectory=""${activemq.base}
/data"" destroyApplicationContextOnStop=""true"" >

...
...
      <networkConnectors>
              <networkConnector name=""SCA"" uri=""static://(http://localhost:61617)"" duplex=""true"">
                      <staticallyIncludedDestinations>
                      <queue physicalName=""R""/>
                      </staticallyIncludedDestinations>
              </networkConnector>
      </networkConnectors>


2)	Update the activemq.xml for Broker2
The changes to the default configuration for Broker2 include the following:
•	Change the broker name from localhost to Broker2
•	Change the default transport connector (tcp) to listen on 61618 (to avoid conflict with Broker1's tcp port)
•	Add an transport connector (http) for port 61617. This is the port that will be connected to by Broker1.

    <broker xmlns=""http://activemq.apache.org/schema/core"" useJmx=""true"" brokerName=""BROKER2"" dataDirectory=""${activemq.base}
/data"" destroyApplicationContextOnStop=""true"">
...
...
       <transportConnectors>
           <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61618""/>
           <transportConnector name=""http"" uri=""http://0.0.0.0:61617""/>
       </transportConnectors>



3)	Start Broker2 using the activemq.bat script in Broker2's installation /bin directory.
4)	Start Broker1 using the activemq.bat script in Broker1's installation /bin directory.


5)	Run simple producer/consumer scenarios.
a)	Run consumer against 61616 (Broker1).
 Go to Broker1's example directory:
E.g.
C:\Progress\apache-activemq-5.3.2\example
Run the following:

	ant consumer -Durl=tcp://localhost:61616 -Dmax=100 -Dsubject=R
The above command will connect to Broker1 and listen for 100 messages on queue R on Broker1

b)	Next in another window - same directory - run the following:
	ant producer -Durl=tcp://localhost:61616 -Dmax=10 -Dsubject=R
The above command will connect to Broker1 and send 10 messages to queue R on Broker1

You should see the consumer will receive the 10 messages.
c)	Next, Run producer to send messages to Broker2:
	ant producer -Durl=tcp://localhost:61618 -Dmax=10 -Dsubject=R
Because of the networkConnector set up for queue R between Broker1->Broker2, the consumer (that was already running and connected to Broker1) should also receive these 10 messages that were sent to queue R on Broker2.

6)	Shutdown Broker1 and restart.

7)	Run step 5 again. You will see when you run the producer the second time (step 5c) that not all the messages get to the consumer connected to queue R on Broker1. Only every other message arrive at consumer. 

You can shutdown Broker1 and repeat step 5 over and over and each time you will see fewer and fewer messages arrive at consumer connected to queue R on Broker1.  Where do these messages go?

Information from jconsole
-------------------------------
While running this test case, start jconsole and attach to each of the brokers.
On Broker2 open the MBeans tab and expand activemq->BROKER2->Subscription->Non-Durable->Queue->R->NC_BROKER1_inbound_BROKER2
This will show the subscription created on Broker2 by the networkConnector.
Each time you shutdown Broker1 and restart, jconsole will show a new Subscription created in Broker2.
","23/Aug/10 20:48;slewis;I've put together a test case (attached test-case.txt) similar to the NetworkReconnectTest that specifically goes through the steps in Lowry's description but I can't seem to reproduce this on trunk.  Have you tried this on the 5.4 release or on the latest snapshot?","24/Aug/10 13:03;qingyi;I just tested with AMQ5.4.0 release,  the problem still exists.  I looked at your activemq config in your test case.  I think you have broker1 and broker2 reversed based on Lowry's description.   There is one little typo in Lowry's comment.   In his first step ""1) Update activemq.xml for Broker1."",  it should be ""Add networkConnector to Broker1"", not  ""Add networkConnector to Broker2."".","24/Aug/10 20:58;slewis;Thanks for that, have re-worked the test case and it does reproduce the issue now, have attached an update.","25/Aug/10 11:46;gtully;it looks like due to http being async the bridge does not get torn down when the remote broker shutsdown as is the case with a tcp connection. With tcp there is always an outstanding read that will fail. It looks like the failed read is is being retried in the http case.
It may be a case of configuring retry semantics for http client but I think it may need some duplicate detection of network connectors based on name or something. need to research it a bit.
","27/Aug/10 11:58;gtully;fix in r990107

InactivityMonitor added to http transport by default. May be disabled via query parameters useInactivityMonitor=false for clients and transport.useInactivityMonitor=false on the broker side.
The default 30second timeout can be configured via url query params:
{code}""http://localhost:61617?transport.readCheckTime=4000&amp;transport.initialDelayTime=4000""{code} For a duplex network connector, these are applied to the target broker http listener so that they apply to the return network connector transport connection.
test case included, was a great help, thanks.","06/Oct/10 13:44;dejanb;An additional fix that enables transport options to persist connector restart has been committed with svn revision 1005033 and will be available in 5.5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bridge reconnection stops because of race in SimpleDiscoveryAgent,AMQ-1855,12483857,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,mlukica,mlukica,11/Jul/08 13:30,04/Nov/10 20:13,30/Jan/20 16:55,31/Aug/09 09:05,4.1.2,,,,,,,5.3.0,,,Connector,,,,0,"I believe there is a race condition in SimpleDiscoveryAgent which can cause subsequent bridge restart to fail, without starting new thread that should restart a bridge. As a consequence, network bridge is never restarted.

Following scenario leads to this:
1. bridge is disconnected (e.g. local error: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long)
2. bridge is disposed in separate thread in DemandForwardingBridge.serviceLocalException
3. SimpleDiscoveryAgent.serviceFailed is called which starts up another thread which calls DiscoveryNetworkConnector.onServiceAdd which tries to restart bridge
4. bridge startup can cause javax.jms.InvalidClientIDException: Broker: some_broker2 - Client: NC_some_broker1_inboundlocalhost already connected (this one is caused by race condition with thread disposing the bridge, since given client subscription should be removed by thread disposing the bridge (step 2)
5. this causes invocation of DemandForwardingBridge.serviceLocalException (this call can be made asynchronously, while previous bridge startup is still in progress)

As a consequence, multiple threads can end up calling SimpleDiscoveryAgent.serviceFailed simultaneously.

serviceFailed will call DiscoveryNetworkConnector.onServiceAdd which will try to reconnect bridge. Reconnect logic is guarded by 
if( event.failed.compareAndSet(false, true) ) 

which tries to ensure that only a single thread is reconnecting bridge at some point.
{code}
    public void serviceFailed(DiscoveryEvent devent) throws IOException {
    	
        final SimpleDiscoveryEvent event = (SimpleDiscoveryEvent) devent;
        if( event.failed.compareAndSet(false, true) ) {
        	
			listener.onServiceRemove(event);
	    	Thread thread = new Thread() {
	    		public void run() {
	
	
	    			// We detect a failed connection attempt because the service fails right
	    			// away.
	    			if( event.connectTime + minConnectTime > System.currentTimeMillis()  ) {
	    				
	    				event.connectFailures++;
	    				
	    				if( maxReconnectAttempts>0 &&  event.connectFailures >= maxReconnectAttempts ) {
	    					// Don' try to re-connect
	    					return;
	    				}
	    				
		                synchronized(sleepMutex){
		                    try{
		                    	if( !running.get() )
		                    		return;
		                    	
		                        sleepMutex.wait(event.reconnectDelay);
		                    }catch(InterruptedException ie){
                                Thread.currentThread().interrupt();
		                       return;
		                    }
		                }
	
		                if (!useExponentialBackOff) {
		                    event.reconnectDelay = initialReconnectDelay;
		                } else {
		                    // Exponential increment of reconnect delay.
		                    event.reconnectDelay*=backOffMultiplier;
		                    if(event.reconnectDelay>maxReconnectDelay)
		                        event.reconnectDelay=maxReconnectDelay;
		                }
		                
	    			} else {
	    				event.connectFailures = 0;
	                    event.reconnectDelay = initialReconnectDelay;
	    			}
	    			                    			
	            	if( !running.get() )
	            		return;
	            	
	    			event.connectTime = System.currentTimeMillis();
	    			event.failed.set(false);
	    			
	    			listener.onServiceAdd(event);
	    		}
	    	};
	    	thread.setDaemon(true);
	    	thread.start();
        }
    }
{code}

Prior to calling DiscoveryNetworkConnector.onServiceAdd, event.failed is set to false (T1), and it's possible for some other thread (T2) to enter block guarded by if( event.failed.compareAndSet(false, true) ) , while reconnect process has already begun by first thread. T2 can satisfy condition: if( event.connectTime + minConnectTime > System.currentTimeMillis()  )  and will enter 
sleepMutex.wait(event.reconnectDelay), but still holding event.failed == true (causing all other calls to serviceFailed not to start thread that will reconnect bridge).

If first thread (T1) fails to reconnect bridge (e.g because of InvalidClientIDException described in step 4), it will not schedule new thread to restart broker (and call DiscoveryNetworkConnector.onServiceRemove, and cleanup DiscoveryNetworkConnector.bridges) because of event.failed == true, and T2 still waiting (default 5 sec). When T2 wakes up from wait, it will try to restart broker and fail because of following condition in DiscoveryNetworkConnector:
{code}
            if (    bridges.containsKey(uri) 
                    || localURI.equals(uri) 
                    || (connectionFilter!=null && !connectionFilter.connectTo(uri))
                    )
                return;
{code}

bridges.containsKey(uri) will be true (thread T1 added it while unsuccessfully trying to reconnect bridge), and T2 will return from DiscoveryNetworkConnector.onServiceAdd and will not start bridge. 
No additional attempt to reconnect bridge will be made, since T2 held event.failed == true, effectively ignoring SimpleDiscoveryAgent.serviceFailed calls from other threads processing local or remote bridge exceptions.

End result:
- DiscoveryNetworkConnector.bridges contains bridge that is disposed and prevents all other attempts to restart bridge (onServiceAdd always returns because bridges.containsKey(uri) == true) 
- SimpleDiscoveryAgent doesn't try to reconnect the bridge (T2 was a last attempt which returned without restarting the bridge - SimpleDiscoveryAgent.serviceFailed is not called again, since bridge is not started

I think that synchronization of threads processing bridge exceptions and entering SimpleDiscoveryAgent.serviceFailed should be verified and/or improved.
Also, InvalidClientIDException is relatively common (at least on multicore machines, e.g. Solaris T2000), maybe ConduitBridge.serviceLocalException (which starts another thread doing ServiceSupport.dispose(DemandForwardingBridgeSupport.this)), should be changed to wait a bit for bridge disposal to finish (e.g. sleep for some time) and then try to restart a bridge - waiting for a second more to restart a bridge is better then not to start it at all

I've seen this problem in 4.1.0 and 4.1.2, but I think it can occur in 5.1 and 5.2 trunk (SimpleDiscoveryAgent.serviceFailed and DiscoveryNetworkConnector.onServiceAdd are more or less the same, just using ASYNC_TASKS to execute asynchronous calls, instead of starting new threads directly.",,bdarfler,john.greeley,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3016,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-08-27 14:27:54.801,,,false,,,,,,,,,,,,,,,,,84586,,,Mon Aug 31 09:05:45 UTC 2009,,,,,,,,"0|i0ku1j:",119685,,,,,,,,,,,,,,,,,,,"27/Aug/09 14:27;gtully;the enhancements in http://svn.apache.org/viewvc?rev=805361&view=rev can help configure a faster timeout on a discovered network connector. ","31/Aug/09 09:05;gtully;though I could not reproduce, the changes in revision http://svn.apache.org/viewcvs?view=rev&rev=808890 will fix this issue for both the simple discovery and multicast discovery providers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message groups with small prefetch,AMQ-2952,12483838,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,30/Sep/10 14:55,29/Oct/10 18:30,30/Jan/20 16:55,30/Sep/10 15:10,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,Closing and starting message groups with a lot of consumers and a small prefetch could result in messages being dispatched to wrong consumers. The problem is that message group logic is done before we detecting weather the consumer is full or not. ,,rjanney,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-29 18:29:09.814,,,false,,,,,,,,,,,,,,,,,14830,,,Fri Oct 29 18:29:09 UTC 2010,,,,,,,,"0|i0ba0f:",63734,,,,,,,,,,,,,,,,,,,"30/Sep/10 15:10;dejanb;Fixed with svn commit 1003096, by doing message group operations only if consumer is not full","29/Oct/10 18:29;rjanney;We ran into this issue with one of our 5.4.1 AMQ instances in production.  We found that once all consumers are full, the remaining messages are all assigned to a single consumer.  When we reproduced this issue in test & stepped through the Queue class in AMQ, we found that this happens because the group logic is done before the full detection.

For example, we had 15 consumers with a prefetch size of 1 and a backlog of 1000 messages.  Each consumer had at least 1 message assigned to it & some had a few more than that (possibly finished processing the first message before all consumers were full).  Once all 15 consumers were full, the remaining 980 or so messages were assigned to the same consumer :(  This lead to a significant performance problem where we had all the work waiting on a single thread and the other 14 threads idle doing nothing.

We were able to work around this problem by setting the pre-fetch to 100 for our 15 consumers.   This allowed the messages to be dispatched in a  round-robin fashion for the first 1500 messages in the queue.

The fix above to only do group operations on non-full consumers should also resolve the effect we observed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kahadb LockFile.lock() leaks file descriptors if tryLock() returns an IOException,AMQ-3007,12483828,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,marcuss,marcuss,28/Oct/10 22:45,29/Oct/10 08:00,30/Jan/20 16:55,29/Oct/10 08:00,5.3.2,5.4.0,5.4.1,,,,,5.4.2,,,Message Store,,,,0,"The slave will output these messages:

INFO | Database /mnt/activemqdata/lock is locked... waiting 10 seconds for the database to be unlocked ......

After awhile, the messages change to:

INFO | Database /mnt/activemqdata/lock is locked... waiting 10 seconds for the database to be unlocked. Reason: java.io.FileNotFoundException: /mnt/activemq/lock (Too many open files) ....

Upon inspection of LockFile.lock(), OverlappingFileLockException is the only exception caught.  In the event tryLock() throws IOException, as it does in
my case, the readFile isn't cleaned up and the caller (which catches IOExceptions), just iterates again.

Since javadoc says FileChannel.tryLock() throws an IOException, and the caller in this case, and MessageDatabase expects to catch IOExceptions, it
would seem like adding this to the code in LockFile.lock() should fix this issue.

catch (IOException e)
{
    reason = e;
}


","Ubuntu Linux, activemq 5.3.2, master slave configuration with kahadb configured directory on a smb mount.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-29 08:00:11.776,,,false,,,,,,,,,,,,,,,,,14740,,,Fri Oct 29 08:00:11 UTC 2010,,,,,,,,"0|i0b9of:",63680,,,,,,,,,,,,,,,,,,,"29/Oct/10 08:00;gtully;fix applied with thanks to r1028637.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX bug - javax.management.InstanceNotFoundException,AMQ-2513,12483801,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,daroo,daroo,25/Nov/09 20:59,28/Oct/10 11:20,30/Jan/20 16:55,08/Dec/09 11:23,5.3.1,,,,,,,5.3.1,5.4.0,,JMX,,,,0,"How to reproduce:

1) start broker
2) start sending/receiving messages to/from a queue
3) the queue will show up in MBeans tree
4) kill the broker (e.g. end process on windows)
5) stat broker again
6) you can find your queue in Broker->Queues attribute, but not as a separate node on MBeans tree (see screenshot)
7) (optional) start sending/receiving messages to/from a queue
8) open web console. following exception will be thrown:

2009-11-25 21:47:45,525 | ERROR | /admin/queues.jsp;jsessionid=yjy1i2uuahpk | org.mortbay.log | btpool0-1
javax.el.ELException: java.lang.reflect.UndeclaredThrowableException
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:266)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:984)
	at org.apache.jsp.queues_jsp._jspx_meth_c_forEach_0(org.apache.jsp.queues_jsp:141)
	at org.apache.jsp.queues_jsp._jspService(org.apache.jsp.queues_jsp:101)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)
Caused by: java.lang.reflect.UndeclaredThrowableException
	at $Proxy4.getName(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:261)
	... 39 more
Caused by: javax.management.InstanceNotFoundException: org.apache.activemq:BrokerName=localhost,Type=Queue,Destination=dee.q
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1094)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:662)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638)
	at javax.management.MBeanServerInvocationHandler.invoke(MBeanServerInvocationHandler.java:263)
	... 45 more


I'm using latest 5.3.1-SNAPSHOT",,daroo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Nov/09 21:32;daroo;AMQ2513Test.java;https://issues.apache.org/jira/secure/attachment/12461364/AMQ2513Test.java","25/Nov/09 21:00;daroo;activemq.log;https://issues.apache.org/jira/secure/attachment/12461381/activemq.log","25/Nov/09 21:02;daroo;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461427/activemq.xml","25/Nov/09 20:59;daroo;jconsole.jpg;https://issues.apache.org/jira/secure/attachment/12461380/jconsole.jpg",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2009-12-08 11:23:12.398,,,false,,,,,,,,,,,,,,,,,74912,,,Thu Oct 28 11:20:22 UTC 2010,,,,,,,,"0|i0rq1j:",159863,,,,,,,,,,,,,,,,,,,"30/Nov/09 21:32;daroo;It seems that this happens only when <managementContext createConnector=""false""/>

Simple unit test attached which shows the error when createConnector=""false""","08/Dec/09 11:23;dejanb;Fixed with svn revision 888333. Thanks for the test case.","26/Oct/10 17:40;vadimos;I am seeing this issue with 

    <managementContext>
       <managementContext connectorPort=""1063"" jmxDomainName=""org.apache.activemq""/>
    </managementContext>

specified on 5.3.2 broker/client
I noticed that the fix has not been applied to 5.3.2 (by looking at the code)

Same bug?","28/Oct/10 11:20;dejanb;According to this

https://fisheye6.atlassian.com/browse/activemq/tags/activemq-parent-5.3.2/activemq-core/src/main/java/org/apache/activemq/broker/BrokerService.java?r=HEAD#l471

the fix should be there.

If it's a new bug, can you try reproduce it against trunk and create a test case (variant of https://fisheye6.atlassian.com/browse/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/bugs/AMQ2513Test.java?r=HEAD)?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ fails to start if no DNS resolution for hostname is available,AMQ-2965,12483809,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,bsnyder,bsnyder,bsnyder,07/Oct/10 20:18,28/Oct/10 00:02,30/Jan/20 16:55,28/Oct/10 00:02,5.3.0,5.3.1,5.3.2,5.4.0,5.4.1,,,5.4.2,,,Broker,,,,0,"ActiveMQ is installed on a physical server with two ethernet interfaces -- the first is a 10.x.x.x network and used only for external traffic , the second interface is a 172.x.x.x network and is used only for internal (intra-cluster node) communication. ActiveMQ is configured to listen only on the 172.x.x.x interface. External DNS resolution exists but internal DNS resolution does not. While each host has a unique name, none of these names are resolvable. Under these circumstances, ActiveMQ fails to start up successfully. Below are the exceptions and stack trace: 

{panel}
2010-06-09 16:48:45,714 | ERROR | Failed to resolve localhost | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:46,092 | INFO | Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter@47c297a3 | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:46,928 | INFO | JMX consoles can connect to service:jmx:rmi://localhost:11616/jndi/rmi://localhost:1616/jmxrmi | org.apache.activemq.broker.jmx.ManagementContext | JMX connector 
2010-06-09 16:48:47,036 | INFO | ActiveMQ 5.3.2 JMS Message Broker (Q01M0003) is starting | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:47,036 | INFO | For help or more information please see: http://activemq.apache.org/ | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:47,280 | WARN | could not generate unique stub | org.apache.activemq.util.IdGenerator | WrapperSimpleAppMain 
java.net.UnknownHostException: Q01M0003: Q01M0003 
        at java.net.InetAddress.getLocalHost(Unknown Source) 
        at org.apache.activemq.util.IdGenerator.&amp;lt;clinit&amp;gt;(IdGenerator.java:52) 
        at org.apache.activemq.broker.region.RegionBroker.&amp;lt;clinit&amp;gt;(RegionBroker.java:75) 
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734) 
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728) 
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688) 
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706) 
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469) 
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409) 
        at java.security.AccessController.doPrivileged(Native Method) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380) 
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264) 
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) 
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429) 
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728) 
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380) 
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&amp;lt;init&amp;gt;(ResourceXmlApplicationContext.java:64) 
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&amp;lt;init&amp;gt;(ResourceXmlApplicationContext.java:52) 
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96) 
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52) 
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71) 
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54) 
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115) 
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251) 
        at org.apache.activemq.console.Main.main(Main.java:107) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240) 
        at java.lang.Thread.run(Unknown Source) 
2010-06-09 16:48:47,407 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Transport Connector could not be registered in JMX: Q01M0003: Q01M0003 | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
java.io.IOException: Transport Connector could not be registered in JMX: Q01M0003: Q01M0003 
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27) 
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1585) 
        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2006) 
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1959) 
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:491) 
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409) 
        at java.security.AccessController.doPrivileged(Native Method) 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380) 
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264) 
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) 
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) 
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429) 
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728) 
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380) 
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&amp;lt;init&amp;gt;(ResourceXmlApplicationContext.java:64) 
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&amp;lt;init&amp;gt;(ResourceXmlApplicationContext.java:52) 
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96) 
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52) 
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71) 
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54) 
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115) 
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136) 
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251) 
        at org.apache.activemq.console.Main.main(Main.java:107) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
        at java.lang.reflect.Method.invoke(Unknown Source) 
        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240) 
        at java.lang.Thread.run(Unknown Source) 
Caused by: java.net.UnknownHostException: Q01M0003: Q01M0003 
        at java.net.InetAddress.getLocalHost(Unknown Source) 
        at org.apache.activemq.transport.tcp.TcpTransportServer.resolveHostName(TcpTransportServer.java:336) 
        at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:142) 
        at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:60) 
        at org.apache.activemq.transport.TransportFactory.bind(TransportFactory.java:131) 
        at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:305) 
        at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:137) 
        at org.apache.activemq.broker.TransportConnector.asManagedConnector(TransportConnector.java:100) 
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1580) 
        ... 47 more 
2010-06-09 16:48:47,409 | INFO | ActiveMQ Message Broker (Q01M0003, null) is shutting down | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
2010-06-09 16:48:47,410 | INFO | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | WrapperSimpleAppMain 
2010-06-09 16:48:47,535 | INFO | ActiveMQ JMS Message Broker (Q01M0003, null) stopped | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain 
{panel}

This problem can be worked around by adding an entry to the /etc/hosts file for each machine. Unfortunately this presents quite a maintenance nightmare in a very large environment. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/10 23:54;bsnyder;AMQ-2965-patch.txt;https://issues.apache.org/jira/secure/attachment/12461815/AMQ-2965-patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14745,,,Thu Oct 28 00:02:12 UTC 2010,,,,,,,,"0|i0b9rz:",63696,,,,,,,,,,,,,,,,,,,"07/Oct/10 20:24;bsnyder;Attaching a patch that solves the problem that is caused by the lack of name resolution. ","28/Oct/10 00:02;bsnyder;Fixed via revision 1028143 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sticky KahaDB log files due to concurrent consumer with local transaction,AMQ-2983,12483802,12483957,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,moczarski,moczarski,17/Oct/10 20:13,27/Oct/10 14:11,30/Jan/20 16:55,27/Oct/10 09:16,5.4.1,,,,,,,5.4.2,,,Message Store,,,,1,"Concurrent consumer with local transactional session and session.receive() leads to KahaDB log files which won't be deleted even if there are no messages which are referred by the log file.

Please, see the attached test case. If only one consumer is configured it seems to work, but with more than one concurrent consumer the test fails.","Ubuntu 10.04, Java 1.6 
Mac OS X 10.5, Java 1.6.0_20",tranchida,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/10 20:17;moczarski;AMQ2983Test.patch;https://issues.apache.org/jira/secure/attachment/12461824/AMQ2983Test.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-10-27 09:16:18.397,,,false,,,,,,,,,,,,,,,,,14752,,,Wed Oct 27 09:16:18 UTC 2010,,,,,,,,"0|i0b9qn:",63690,,,,,,,,,,,,,,,,,,,"27/Oct/10 09:16;dejanb;Fixed with svn revision 1027863. Thanks for the test case",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sticky KahaDB log files due to local transaction rollback,AMQ-2982,12483803,12483957,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,moczarski,moczarski,17/Oct/10 19:25,27/Oct/10 14:11,30/Jan/20 16:55,26/Oct/10 10:34,5.4.1,,,,,,,5.4.2,,,Message Store,,,,1,On a rollback of a local transaction the transaction won't be removed from the inflight transaction list of the KahaDB MessageDatabase. This leads to KahaDB log files which won't be deleted even if there are no messages which are referred by the log file.,"Ubuntu 10.04, Java 1.6
Mac OS X 10.5, Java 1.6.0_20",tranchida,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Oct/10 19:49;moczarski;AMQ2982Fix.patch;https://issues.apache.org/jira/secure/attachment/12461823/AMQ2982Fix.patch","17/Oct/10 19:49;moczarski;AMQ2982Test.patch;https://issues.apache.org/jira/secure/attachment/12461822/AMQ2982Test.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-10-26 10:34:57.9,,,false,,,,,,,,,,,,,,,,,14742,,,Tue Oct 26 10:34:57 UTC 2010,,,,Patch Available,,,,"0|i0b9qv:",63691,,,,,,,,,,,,,,,,,,,"17/Oct/10 19:49;moczarski;Test case and fix are attached. I would be glad if someone could review if the patch makes sense.","26/Oct/10 10:34;dejanb;Fixed with svn revision 1027453. Thanks for the patch!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer transport factory mapping localhost incorrectly to loopback,AMQ-2999,12483798,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,petri.riipinen,petri.riipinen,26/Oct/10 10:35,27/Oct/10 06:47,30/Jan/20 16:55,26/Oct/10 11:04,5.3.2,5.4.0,5.4.1,,,,,5.4.2,,,,,,,0,"Issue described in the first posting of that thread: http://activemq.2283324.n4.nabble.com/Problem-with-simple-peer-configuration-my-config-or-AMQ-issue-td3013268.html#a3013268

Reply from Gary Tully explains the problem: ""That looks like a bug in the peer transport factory. I uses localhost:0 as the tcp transport url, but localhost maps to the 
loopback address since 5.3[1] so the connection is refused. The peer transport factory should use the wildcard address, 0.0.0.0""","Windows XP 32-bit, SUN JDK 1.6 update 21",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-26 11:04:18.866,,,false,,,,,,,,,,,,,,,,,14845,,,Wed Oct 27 06:47:12 UTC 2010,,,,,,,,"0|i0b9r3:",63692,,,,,,,,,,,,,,,,,,,"26/Oct/10 11:04;gtully;resolved in 1027461, wildcard address is now used for the tcp transport. If necessary we can make this configurable.","27/Oct/10 06:47;petri.riipinen;Tested on 27/Oct/10 by original reporter and works now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fire advisory events when destinations are created/delete via JMX,AMQ-2970,12483539,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,11/Oct/10 16:48,22/Oct/10 08:57,30/Jan/20 16:55,22/Oct/10 08:57,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,Currently these operations don't trigger advisory events.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-21 18:19:25.207,,,false,,,,,,,,,,,,,,,,,14847,,,Fri Oct 22 08:57:51 UTC 2010,,,,,,,,"0|i0b9pj:",63685,Regression,,,,,,,,,,,,,,,,,,"11/Oct/10 16:51;dejanb;Fixed with svn revision 1021425","21/Oct/10 18:19;gtully;There was a regression but the fix need anther pair of eyes.. see the comment with the test and fix: r1026092","22/Oct/10 08:57;dejanb;refactored with svn revision 1026254",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Virtual topic interceptor process advisory messages,AMQ-2993,12483528,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,21/Oct/10 09:25,21/Oct/10 09:37,30/Jan/20 16:55,21/Oct/10 09:37,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,This can cause all sorts of trouble (including forwarding ConsumerInfo to the consumer) in networked environment.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14836,,,Thu Oct 21 09:37:12 UTC 2010,,,,,,,,"0|i0b9s7:",63697,,,,,,,,,,,,,,,,,,,"21/Oct/10 09:37;dejanb;Fixed in svn revision 1025905",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StorePercentUsage is not refreshed when retrieved over JMX,AMQ-2986,12483506,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,18/Oct/10 13:37,18/Oct/10 13:40,30/Jan/20 16:55,18/Oct/10 13:40,5.4.1,,,,,,,5.4.2,,,,,,,0,"Even if the usage is calculated appropriately, the value displayed in JConsole is cached and not calculated on every call, so you can get impression that it's not updated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14839,,,Mon Oct 18 13:40:06 UTC 2010,,,,,,,,"0|i0b9rj:",63694,,,,,,,,,,,,,,,,,,,"18/Oct/10 13:40;dejanb;fixed with svn revision 1023795",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP over Websockets do not work in Chrome,AMQ-2972,12483502,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,bergamot,bergamot,12/Oct/10 07:52,18/Oct/10 07:15,30/Jan/20 16:55,13/Oct/10 08:52,5.4.1,,,,,,,5.4.2,,,Transport,,,,0,"The STOMP over Websocket support does not work with both client libraries referenced from the ActiveMQ Websockets page
( http://activemq.apache.org/websockets.html ).
On the ActiveMQ side, the following error appears:

 INFO | Started SelectChannelConnector@0.0.0.0:8161
ERROR | handle failed?
java.lang.IllegalArgumentException: !utf8
        at org.eclipse.jetty.util.Utf8StringBuilder.append(Utf8StringBuilder.java:112)
        at org.eclipse.jetty.websocket.WebSocketParser.parseNext(WebSocketParser.java:147)
        at org.eclipse.jetty.websocket.WebSocketConnection.handle(WebSocketConnection.java:75)
        at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:252)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
        at java.lang.Thread.run(Unknown Source)
","Windows XP, Chrome 6.0.472.63",bergamot,julian.cable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-13 08:52:22.735,,,false,,,,,,,,,,,,,,,,,14833,,,Mon Oct 18 07:15:12 UTC 2010,,,,,,,,"0|i0b9xr:",63722,,,,,,,,,,,,,,,,,,,"12/Oct/10 08:58;bergamot;I've managed to solve the issue by upgrading the jetty components to version 7.1.6
So, in lib/web, I updated jetty-all-server-7.0.1.v20091125.jar to jetty-all-server-7.1.6.v20100715.jar
and jetty-websocket-7.0.1.v20091125.jar to jetty-websocket-7.1.6.v20100715.jar.

Probably the websocket specification has changed between jetty releases.

Also, some extra documentation on how to use the client libraries specifically for ActiveMQ would be handy.
It took some time for me to find out that the destination should be in the form ""/topic/test.topic"" or ""/queue/test.queue"".","13/Oct/10 08:52;dejanb;fixed with svn revision 1022029. Thanks for digging this out.","16/Oct/10 03:16;julian.cable;Using apache-activemq-5.4.0-fuse-00-00

I tried updating the jetty jars and got:

ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load type: org.eclipse.jetty.security.HashLoginService. Reason: java.lang.ClassNotFoundException: org.eclipse.jetty.security.HashLoginService; nested exception is java.lang.ClassNotFoundException: org.eclipse.jetty.security.HashLoginService

I tried adding jetty-security-7.1.6.v20100715.jar but that didn't help.","18/Oct/10 07:15;bergamot;The jetty-all-server jar is an aggregate jar that contains org.eclipse.jetty.security.HashLoginService. Maybe your classpath is non-standard or there's a difference between ActiveMQ 5.4.1 and Fuse 5.4.0?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New shell scripts doesn't work well with multiple broker instances,AMQ-2975,12483484,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,14/Oct/10 09:46,14/Oct/10 12:06,30/Jan/20 16:55,14/Oct/10 12:06,5.4.1,,,,,,,5.4.2,,,,,,,0,"1) Create the instances:

$ cd /home/phil/apache-activemq-5.4.1

$ bin/activemq create broker1
$ bin/activemq setup ~/.activemqrc-instance-broker1
$ ln -s activemq bin/activemq-instance-broker1

$ bin/activemq create broker2
$ bin/activemq setup ~/.activemqrc-instance-broker2
$ ln -s activemq bin/activemq-instance-broker2

2) set unique ports for the instances in their conf/activemq.xml and conf/jetty.xml files as shown below:

$ grep 16  broker[12]/conf/*.xml
broker1/conf/activemq.xml:            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
broker1/conf/jetty.xml:                    <property name=""port"" value=""8161"" />
broker2/conf/activemq.xml:            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61626""/>
broker2/conf/jetty.xml:                    <property name=""port"" value=""8162"" />

When I try to start both brokers, I get a ""Process with pid XXX is already running"" message.  This is due to the pid file being created in $ACTIVEMQ_HOME/data rather than the instance's $ACTIVEMQ_BASE/data directory",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14835,,,Thu Oct 14 12:06:26 UTC 2010,,,,,,,,"0|i0b9o7:",63679,,,,,,,,,,,,,,,,,,,"14/Oct/10 12:06;dejanb;Fixed with svn revision 1022475",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removing composite subscription clears all dispatched messages,AMQ-2973,12483474,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,12/Oct/10 13:22,12/Oct/10 13:31,30/Jan/20 16:55,12/Oct/10 13:31,5.4.1,,,,,,,5.4.2,,,,,,,0,"When removing subscription on a composite destination, the removal of the first destination dispatched messages will clear the list, so subsequent destinations won't redeliver their messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14831,,,Tue Oct 12 13:31:17 UTC 2010,,,,,,,,"0|i0b9yv:",63727,,,,,,,,,,,,,,,,,,,"12/Oct/10 13:31;dejanb;fixed with svn revision 1021768",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduler not honoring activemq.store.dir property,AMQ-2959,12483461,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dkulp,dkulp,05/Oct/10 14:03,08/Oct/10 15:24,30/Jan/20 16:55,08/Oct/10 15:23,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,"I tried updating CXF to use 5.4.1 (from 5.3.1) and the test suite is leaving activemq-data all over the place.   The contents of that dir are:

activemq-data/localhost/scheduler/
db-1.log  scheduleDB.data  scheduleDB.redo

It looks like the scheduler is not honoring the activemq.store.dir system propert that we set to have the activemq data stuck into a directory in target (from maven) that used to work fine for the CXF tests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-05 14:17:56.503,,,false,,,,,,,,,,,,,,,,,14844,,,Fri Oct 08 15:23:54 UTC 2010,,,,,,,,"0|i0b9zr:",63731,,,,,,,,,,,,,,,,,,,"05/Oct/10 14:17;gtully;The property should be: org.apache.activemq.default.directory.prefix
The real difference is that with 5.4.1 the schedular is on by default so a store is created on every broker start. Hence it is now more visible.

Think the real fix is to disable the schedular by default. Ensure the relevant tests have it enabled and update the doc at http://activemq.apache.org/delay-and-schedule-message-delivery.html","08/Oct/10 14:51;gtully;tie these together, another issue makes the change more explicit.","08/Oct/10 15:23;gtully;r1005858",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Have Schedular support disabled by default,AMQ-2967,12483447,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Oct/10 14:47,08/Oct/10 15:23,30/Jan/20 16:55,08/Oct/10 15:23,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,"This feature should be enabled by config, as it creates a new store and some threads at startup, they should only be created when required.

related: https://issues.apache.org/activemq/browse/AMQ-2959",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2959,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14753,,,Fri Oct 08 15:23:34 UTC 2010,,,,,,,,"0|i0b9wn:",63717,,,,,,,,,,,,,,,,,,,"08/Oct/10 15:23;gtully;resolved in r1005858",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceAdapter logs confusing Exception upon pool connection disposal,AMQ-2902,12483456,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,hennejg,hennejg,07/Sep/10 11:34,08/Oct/10 12:58,30/Jan/20 16:55,08/Oct/10 12:58,5.4.0,,,,,,,5.4.2,,,JCA Container,,,,2,"After upgrading to 5.4.0 we see many exceptions of the following kind being logged with level INFO:
{quote}
2010-09-07 13:23:25,824 INFO  [org.apache.activemq.broker.TransportConnection.Transport] Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://caa.embedded?waitForStart=300000&async=false#13) disposed.
org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://caa.embedded?waitForStart=300000&async=false#13) disposed.
	at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)
	at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
	at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)
	at org.apache.activemq.ra.ActiveMQManagedConnection.destroy(ActiveMQManagedConnection.java:207)
	at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.doDestroy(InternalManagedConnectionPool.java:650)
	at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.removeTimedOut(InternalManagedConnectionPool.java:481)
	at org.jboss.resource.connectionmanager.IdleRemover$IdleRemoverRunnable.run(IdleRemover.java:164)
	at java.lang.Thread.run(Thread.java:619)
{quote}
I suppose that the cause for the message is actually harmless - hence the INFO level - but the messages are confusing and annoying nonetheless.",AMQ 5.4.0 ResourceAdapter running with an embedded broker within JBoss 4.2.3,basti1302,hennejg,rjtokenlanring,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-08 05:15:12.952,,,false,,,,,,,,,,,,,,,,,14843,,,Fri Oct 08 12:58:23 UTC 2010,,,,,,,,"0|i0b9yf:",63725,,,,,,,,,,,,,,,,,,,"08/Sep/10 05:15;davsclaus;I have been told that this is harmless and have been fixed on trunk.","22/Sep/10 09:31;rjtokenlanring;Also with 5.4.1 release (on JBoss 4.2.3.GA) this issue is present:

2010-09-22 11:29:31,458 INFO  [org.apache.activemq.broker.TransportConnection.Transport] Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#37) disposed.
org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#37) disposed.
        at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)
        at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
        at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
        at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)
        at org.apache.activemq.ra.ActiveMQManagedConnection.destroy(ActiveMQManagedConnection.java:207)
        at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.doDestroy(InternalManagedConnectionPool.java:650)
        at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.removeTimedOut(InternalManagedConnectionPool.java:481)
        at org.jboss.resource.connectionmanager.IdleRemover$IdleRemoverRunnable.run(IdleRemover.java:164)
        at java.lang.Thread.run(Thread.java:619)

But this affects the broker? This could bring to errors or broker faults?","01/Oct/10 08:19;basti1302;I too see that issue in the current 5.4.1  release. This has nothing to do with JBoss. It is reproducible in an ordinary Java application (see below). Claus, who told you that is fixed in the trunk? From looking at the sources in the trunk I have the impression that the related code has not changed (but I'm guessing a bit here and could be wrong). The small test below reproduces the problem. Note that the exception gets logged less frequently if you start and stop the connection before closing it (enable the two commented lines). But it still occurs. It occurs every time if you do not start and stop the connection.


{code:title=AMQ2902.java|borderStyle=solid}
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;

import org.apache.activemq.ActiveMQConnectionFactory;

public class AMQ2902
{
  public static void main(String[] arguments) throws JMSException
  {
    ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(
        ""vm://localhost?broker.persistent=false"");
    Connection connection = connectionFactory.createConnection();
    // connection.start();
    // connection.stop();
    connection.close();
  }
}
{code} 

Kind regards,

  Bastian","01/Oct/10 08:29;basti1302;The obvious workaround is to configure log4j to not show INFO level messages from the logger in question.


{noformat} 
  <logger name=""org.apache.activemq.broker.TransportConnection.Transport"">
    <level value=""warn"" />
  </logger>
{noformat} 


However, a possible (very simplistic) fix would be to change {{TRANSPORTLOG.info(""Transport failed: "" + e, e);}} into {{TRANSPORTLOG.info(""Transport failed: "" + e);}}  in {{org.apache.activemq.broker.TransportConnection}}. Since it is only a logging on info, the stack trace is probably not of interest anyway, right?

Patch:

{noformat} 
### Eclipse Workspace Patch 1.0
#P activemq-core
Index: src/main/java/org/apache/activemq/broker/TransportConnection.java
===================================================================
--- src/main/java/org/apache/activemq/broker/TransportConnection.java	(revision 1003422)
+++ src/main/java/org/apache/activemq/broker/TransportConnection.java	(working copy)
@@ -233,7 +233,7 @@
         if (!stopping.get()) {
             transportException.set(e);
             if (TRANSPORTLOG.isInfoEnabled()) {
-                TRANSPORTLOG.info(""Transport failed: "" + e, e);
+                TRANSPORTLOG.info(""Transport failed: "" + e);
             }
             stopAsync();
         }
{noformat} 
","08/Oct/10 12:58;gtully;resolved in r1005094",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Null messages occurring when using VM transport, topics and multiple consumers",AMQ-2966,12483459,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Oct/10 10:48,08/Oct/10 11:01,30/Jan/20 16:55,08/Oct/10 11:01,5.4.0,5.4.1,,,,,,5.4.2,,,Broker,,,,0,"introduced by fix for https://issues.apache.org/activemq/browse/AMQ-2103

contention on marshaling message received over vm transport for the first time causes potential null. With multiple topic consumers there is contention as the message has not been unmarshalled on dispatch to the topic due to the vm transport being used.
moving the set to null out of the beforeMarahallMessage removes the potential sync window that causes the problem. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14846,,,Fri Oct 08 11:01:48 UTC 2010,,,,,,,,"0|i0b9z3:",63728,Regression,,,,,,,,,,,,,,,,,,"08/Oct/10 11:01;gtully;resolved in r1005773",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
logging.properties are not found automatically by start-script,AMQ-2451,12483640,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,scoopex,scoopex,14/Oct/09 16:02,06/Oct/10 13:05,30/Jan/20 16:55,06/Oct/10 13:05,5.3.0,,,,,,,5.4.2,,,Broker,,,,0,"The ""logging.properties"" file was found automatically in version 5.4.2 - now i have
to chdir to ""conf"" to find the file automatically.

----
activemq@host:~> bin/activemq-admin start
GNARF                                        
Java Runtime: IBM Corporation 1.6.0 /usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre
  Heap sizes: current=4096k  free=3055k  max=524288k                       
    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Dsun.boot.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Djava.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64:/usr/lib -Djava.home=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre -Djava.ext.dirs=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/ext -Duser.dir=/opt/apache-activemq-5.3.0 _j2se_j9=1119744 -Xdump -Djava.class.path=. -Xmx512M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote -Dactivemq.classpath=/opt/apache-activemq/conf; -Dactivemq.home=/opt/apache-activemq -Dactivemq.base=/opt/apache-activemq -Djava.class.path=/opt/apache-activemq/bin/run.jar -Dsun.java.command=/opt/apache-activemq/bin/run.jar start -Dsun.java.launcher=SUN_STANDARD -Dsun.java.launcher.pid=32694 _port_library _org.apache.harmony.vmi.portlib                                                        
ACTIVEMQ_HOME: /opt/apache-activemq                                                                                                                                                                  
ACTIVEMQ_BASE: /opt/apache-activemq                                                                                                                                                                  
Loading message broker from: xbean:activemq.xml                                                                                                                                                      
 INFO | Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter@42da42da                                                                                                
 INFO | Replayed 1 operations from the journal in 0.015 seconds.                                                                                                                                     
 INFO | ActiveMQ 5.3.0 JMS Message Broker (localhost) is starting                                                                                                                                    
 INFO | For help or more information please see: http://activemq.apache.org/                                                                                                                         
java.io.FileNotFoundException: logging.properties (No such file or directory)                                                                                                                        
        at java.io.FileInputStream.<init>(FileInputStream.java:112)                                                                                                                                  
        at java.io.FileInputStream.<init>(FileInputStream.java:72)                                                                                                                                   
        at java.util.logging.LogManager.readConfiguration(LogManager.java:464)                                                                                                                       
        at java.util.logging.LogManager$3.run(LogManager.java:226)                                                                                                                                   
        at java.security.AccessController.doPrivileged(AccessController.java:202)                                                                                                                    
        at java.util.logging.LogManager.<clinit>(LogManager.java:212)                                                                                                                                
        at java.lang.J9VMInternals.initializeImpl(Native Method)                                                                                                                                     
        at java.lang.J9VMInternals.initialize(J9VMInternals.java:200)                                                                                                                                
        at java.util.logging.Logger.getLoggerWithRes(Logger.java:342)                                                                                                                                
        at java.util.logging.Logger.getLogger(Logger.java:372)                                                                                                                                       
        at com.sun.jmx.remote.util.ClassLogger.<init>(ClassLogger.java:49)                                                                                                                           
        at javax.management.NotificationBroadcasterSupport.<clinit>(NotificationBroadcasterSupport.java:346)                                                                                         
        at java.lang.J9VMInternals.initializeImpl(Native Method)                                                                                                                                     
        at java.lang.J9VMInternals.initialize(J9VMInternals.java:200)                                                                                                                                
        at javax.management.MBeanServerDelegate.<init>(MBeanServerDelegate.java:69)                                                                                                                  
        at com.sun.jmx.mbeanserver.MBeanServerDelegateImpl.<init>(MBeanServerDelegateImpl.java:94)                                                                                                   
        at com.sun.jmx.mbeanserver.JmxMBeanServer.newMBeanServerDelegate(JmxMBeanServer.java:1338)                                                                                                   
        at javax.management.MBeanServerBuilder.newMBeanServerDelegate(MBeanServerBuilder.java:60)                                                                                                    
        at javax.management.MBeanServerFactory.newMBeanServer(MBeanServerFactory.java:313)                                                                                                           
        at javax.management.MBeanServerFactory.createMBeanServer(MBeanServerFactory.java:224)                                                                                                        
        at javax.management.MBeanServerFactory.createMBeanServer(MBeanServerFactory.java:185)                                                                                                        
        at java.lang.management.ManagementFactory.getPlatformMBeanServer(ManagementFactory.java:298)                                                                                                 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)                                                                                                                               
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)                                                                                                             
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)                                                                                                     
        at java.lang.reflect.Method.invoke(Method.java:599)                                                                                                                                          
        at org.apache.activemq.broker.jmx.ManagementContext.findTigerMBeanServer(ManagementContext.java:349)                                                                                         
        at org.apache.activemq.broker.jmx.ManagementContext.findMBeanServer(ManagementContext.java:319)                                                                                              
        at org.apache.activemq.broker.jmx.ManagementContext.getMBeanServer(ManagementContext.java:169)                                                                                               
        at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:292)                                                                                                
        at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:54)                                                                                                       
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.registerDestination(ManagedRegionBroker.java:245)                                                                                      
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.register(ManagedRegionBroker.java:151)                                                                                                 
        at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:57)                                                                                           
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)                                                                                                  
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:268)                                                                                                      
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)                                                                                                             
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)                                                                                                             
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:153)                                                                                                       
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)                                                                                                             
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)                                                                                               
        at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)                                                                                                            
        at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:178)                                                                                                               
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:100)                                                                                                    
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)                                                                                                            
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)                                                                                                                      
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)                                                                                                                      
        at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1668)                                                                                                                 
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:452)                                                                                                                    
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:56)                                                                                               
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)                                              
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)                                                 
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)                                                    
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)                                                           
        at java.security.AccessController.doPrivileged(AccessController.java:224)                                                                                                                    
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)                                                      
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)                                                                                   
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)                                                                
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)                                                                                     
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)                                                                                       
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)                                                                                       
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)                                                        
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)                                                       
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)                                                                               
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)                                                                               
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)                                                                               
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
        at java.lang.reflect.Method.invoke(Method.java:599)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
 
",,scoopex,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74939,,,Wed Oct 06 13:05:30 UTC 2010,,,,,,,,"0|i0rpmv:",159797,,,,,,,,,,,,,,,,,,,"11/Nov/09 17:54;scoopex;See also new initscript : AMQ-2453","06/Oct/10 13:05;scoopex;Solved with new init script iof activemq 5.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA transactions not rolled back when on connection close,AMQ-2950,12483841,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,29/Sep/10 13:09,29/Sep/10 13:11,30/Jan/20 16:55,29/Sep/10 13:11,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,We should roll them back the same way we do for local transactions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14736,,,Wed Sep 29 13:11:43 UTC 2010,,,,,,,,"0|i0b9vr:",63713,,,,,,,,,,,,,,,,,,,"29/Sep/10 13:11;dejanb;fixed with svn revision 1002604",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ Console requires Jasypt bundle which is not part of the ActiveMQ features,AMQ-2938,12483949,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jb@nanthrax.net,jb@nanthrax.net,23/Sep/10 15:55,24/Sep/10 14:51,30/Jan/20 16:55,24/Sep/10 14:51,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,"ActiveMQ Console OSGi bundle now requires org.jasypt.encryption.pbe package (defined in import package statement).

Unfortunately the ActiveMQ feature doesn't provide the jasypt bundle.

So, when you install and start ActiveMQ feature, you get:

java.lang.Exception: Could not start bundle mvn:org.apache.activemq/activemq-console/5.4.1 in feature(s) : Unresolved constraint in bundle org.apache.activemq.activemq-console [44]: Unable to resolve 44.0: missing requirement [44.0] package; (
package=org.jasypt.encryption.pbe) - [44.0] package; (package=org.jasypt.encryption.pbe)

I'm gonna submit a patch to provide a clean ActiveMQ feature.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/10 07:07;jb@nanthrax.net;AMQ-2938-5.4.1-tag.patch;https://issues.apache.org/jira/secure/attachment/12461909/AMQ-2938-5.4.1-tag.patch","24/Sep/10 06:49;jb@nanthrax.net;AMQ-2938-trunk.patch;https://issues.apache.org/jira/secure/attachment/12461908/AMQ-2938-trunk.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-09-24 14:51:05.591,,,false,,,,,,,,,,,,,,,,,14834,,,Fri Sep 24 14:51:05 UTC 2010,,,,,,,,"0|i0ba0v:",63736,,,,,,,,,,,,,,,,,,,"24/Sep/10 06:49;jb@nanthrax.net;Patch on trunk.","24/Sep/10 07:07;jb@nanthrax.net;Patch based on the 5.4.1 tag.","24/Sep/10 14:51;dejanb;Fixed on trunk with svn revision 1000891",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't configure an inactivity monitor for https transport,AMQ-2942,12483823,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,slewis,slewis,23/Sep/10 19:34,23/Sep/10 20:47,30/Jan/20 16:55,23/Sep/10 20:47,5.4.1,,,,,,,5.4.2,,,Transport,,,,0,"Well, you can however the configuration isn't applied.  This patch sorts that out.  Note that I couldn't automate a test for this as I had to manually kill off one of the brokers to get the behavior to manifest itself, as described [here|http://fusesource.com/issues/browse/MB-733].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/10 19:35;slewis;AMQ-2942.txt;https://issues.apache.org/jira/secure/attachment/12461860/AMQ-2942.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-23 20:47:48.283,,,false,,,,,,,,,,,,,,,,,14811,,,Thu Sep 23 20:47:48 UTC 2010,,,,Patch Available,,,,"0|i0ba1j:",63739,,,,,,,,,,,,,,,,,,,"23/Sep/10 20:47;tabish;Patch applied in trunk.  Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Associated advisory topics aren't cleaned up when a topic/queue is deleted via AdminView,AMQ-2915,12483530,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,slewis,slewis,13/Sep/10 17:38,13/Sep/10 19:11,30/Jan/20 16:55,13/Sep/10 19:11,5.4.0,,,,,,,5.4.1,,,Broker,,,,0,"Basically when you create a queue/topic and connect either a producer or consumer to that queue/topic advisory topics are created; if you later delete the queue/topic the advisory topics aren't cleaned up.  This could become a problem for folks that tend to create and destroy queues/topics often for whatever reason.  Patch fixes this and adds a test for topics and queues.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/10 17:39;slewis;AMQ-2915.txt;https://issues.apache.org/jira/secure/attachment/12461858/AMQ-2915.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-13 19:11:35.216,,,false,,,,,,,,,,,,,,,,,14810,,,Mon Sep 13 19:11:35 UTC 2010,,,,Patch Available,,,,"0|i0ba3r:",63749,,,,,,,,,,,,,,,,,,,"13/Sep/10 19:11;tabish;Patch applied, tests all passing.  Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Angosso,AMQ-2802,12483525,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,angosso_net,angosso_net,26/Jun/10 11:14,11/Sep/10 22:41,30/Jan/20 16:55,26/Jun/10 11:26,5.3.0,,,,,,,5.4.1,,,Connector,,,,0,"For sites running on a port other than 80 RewriteCond %{HTTP_HOST} !^www\.angosso\.net [www.angosso.net/]% RewriteCond %{HTTP_HOST} !^Angosso^% RewriteCond %{SERVER_PORT} !^80% RewriteRule ^/(.*) http://www.angosso.net:80%{ANGOSSO_NET} /8080% [L,R] RewriteRule ^FR-news\.html http://www.angosso.net/news/index.html [P] RewriteRule ^http://www\.remotesite\.net/(.*)$mirroran_user /mirror/of/remotesite/$http://www.angosso.net/index.html -->patchfile resolve--> Parent Directory /* $Id$Angosso.net/index.html/ */ incubation public void outputConfigurationHeader(IThreadContext threadContext, IHTTPOutput out, ConfigParams parameters, ArrayList tabsArray) throws LCFException, IOException { tabsArray.add(""Angosso Siteweb Inc.""); tabsArray.add(""http://www.angosso.net/""); out.print( ""<script type=\""text/javascript\"">\n""+ ""<!--\n""+ ""\n""+ ""function checkConfig()\n""+ ""{\n""+ "" if (editconnection.angosso.netserverport.value != \""\"" && !isInteger(editconnection.angosso.netserverport.value))\n""+ "" return true;\n""+ ""function checkConfigForSave()\n""+ public String[www.angosso.net/index.html/] getForcedAcls() { return orderedTokens; } } } ",Linux & Apache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,648000,648000,,0%,648000,648000,,,,,,,,,,,,,"26/Jun/10 11:25;angosso_net;build.xml;https://issues.apache.org/jira/secure/attachment/12461753/build.xml","26/Jun/10 11:24;angosso_net;ldap-client-api-0.1.jar;https://issues.apache.org/jira/secure/attachment/12461752/ldap-client-api-0.1.jar","26/Jun/10 11:17;angosso_net;mod_jk.so;https://issues.apache.org/jira/secure/attachment/12461750/mod_jk.so","26/Jun/10 11:17;angosso_net;web.xml;https://issues.apache.org/jira/secure/attachment/12461751/web.xml",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74795,,,2010-06-26 11:14:18.0,,,,Patch Available,,,,"0|i0rpiv:",159779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Seeing messages getting ""stuck"" on brokers w/o application consumers",AMQ-2906,12483520,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cvelo,cvelo,08/Sep/10 22:05,10/Sep/10 20:12,30/Jan/20 16:55,10/Sep/10 20:12,5.4.0,,,,,,,,,,Broker,,,,0,"Seeing messages moved around between brokers and occasionally getting ""stuck"" on brokers w/o application 
consumers on it (even though the broker might have an ActiveMQ consumer attached to it).  I can still see messages
getting Enqueued and Dequeued on the broker containing the ""stuck"" messages, but the ""stuck"" messages never
move (have some messages that have been on the queue for 1hour+).

Current setup:
• 3 Producers
• 3 brokers
• 3 Application consumers (which are using ActiveMQ connection pooling)

• 2 application consumers --> broker1
• 1 application consumer --> broker2
• broker3 <-- 0 application consumers

----

This is what the networkConnector string looks like in the activemq.xml file on the server side:
(note: line breaks are for readability - in practice it is a single line w/o the ""\"" at the end of each line)

{code}
        <networkConnector name=""ActiveMQ Cluster"" uri=""static:(tcp://broker1:61616,tcp://broker2:61616,tcp://broker3:61616)"" \
          conduitSubscriptions=""true"" dynamicOnly=""true"" decreaseNetworkConsumerPriority=""false"" \
          suppressDuplicateQueueSubscriptions=""true"" duplex=""false"" networkTTL=""5""/>
{code}

----

This is what the broker.url string looks like in on the client side:
(note: line breaks are for readability - in practice it is a single line w/o the ""\"" at the end of each line)

{code}
amq.publisher.broker.url=failover\:tcp\://broker1\:61616?wireFormat.maxInactivityDuration=0&daemon=true,\
                                                              tcp\://broker2\:61616?wireFormat.maxInactivityDuration=0&daemon=true,\
                                                              tcp\://broker3\:61616?wireFormat.maxInactivityDuration=0&daemon=true
{code}

----

+To reproduce:+
* start up multiple Producers, sending messages to the 3 brokers
* start up only 2 consumers connected to 2 of the 3 brokers.

----

It would be nice if there was a maxQueueTimeout parameter that could
be set by the user, so that if a message has been on a queue for over 
a certain amount of time, it would be automatically routed to another broker.","CentOS 5.2 (2.6.18-128.1.10.el5.xs5.5.0.51xen), ActiveMQ server 5.4.0, ActiveMQ client 5.2.0 (w/ connection pooling)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/10 22:06;cvelo;activemq_broker1.xml;https://issues.apache.org/jira/secure/attachment/12461852/activemq_broker1.xml",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74765,,,Fri Sep 10 20:11:59 UTC 2010,,,,,,,,"0|i0tsyf:",172000,,,,,,,,,,,,,,,,,,,"10/Sep/10 20:11;cvelo;Closing this ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leaks with XA Transactions (case of read-only transactions),AMQ-2556,12483514,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,daniel.santos,daniel.santos,04/Jan/10 14:01,09/Sep/10 12:27,30/Jan/20 16:55,01/Apr/10 23:27,5.1.0,5.2.0,5.3.0,,,,,5.4.0,,,Broker,JMS client,,,1,"Some transaction related information are not released in case of read-only transactions (where not messages have been consumed or produced) by broker and client, that causes an OutOfMemory after running some time.

Fields that hold these ""transaction related information"" are (at least) :
- {{org.apache.activemq.state.ConnectionState.transactions}}
- {{org.apache.activemq.TransactionContext.ENDED_XA_TRANSACTION_CONTEXTS}}

After serach, it seems that the case of read-only XA transactions (that terminates at prepare time) has been missed in some code like :
- {{org.apache.activemq.broker.TransportConnection}} that puts TransactionState in {{org.apache.activemq.state.ConnectionState.transactions}} at the beginning, release them at commit (or rollback) time *but not at prepare time where result is {{XAResource.XA_RDONLY}}*
- {{org.apache.activemq.TransactionContext}} that do the same mistake via ENDED_XA_TRANSACTION_CONTEXTS in prepare()

_Note that the case of read-only transactions seems correctly done by {{org.apache.activemq.transaction.XATransaction}} (very interesting comment here http://fisheye6.atlassian.com/browse/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/transaction/XATransaction.java?r=809940#l175)_
","ActiveMQ 5.3.0
Atomikos Transactions Essentials 3.5.8
Spring 2.5.6
Oracle 11g (thin driver version 11.1.0.7.0)
",tkrah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/10 14:20;daniel.santos;XAConsumer.zip;https://issues.apache.org/jira/secure/attachment/12461579/XAConsumer.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-03-31 12:42:50.497,,,false,,,,,,,,,,,,,,,,,14817,,,Thu Sep 09 12:27:35 UTC 2010,,,,,,,,"0|i0ba6n:",63762,,,,,,,,,,,,,,,,,,,"04/Jan/10 14:20;daniel.santos;TO REPRODUCE :
1- Launch a broker
2- Launch this ready to use app (consumer in a XA transaction, implemented as a Spring's MessageListenner. The config is taken from atomikos http://www.atomikos.com/Documentation/SpringIntegration)

No producer nor another XAResource is needed to show the problem

Simply use a debugger, (j)visualvm, jmap/jhat or another memory profiler tool to see grow up indefinitly (at each receiveTimeout unit of time : 3s) the number of TransactionContext instances on client and TransactionState instances on broker","31/Mar/10 12:42;tkrah;5.3.1 is still affected.
Using Spring 3.0.1, Atomikos 3.6.0 and Springs Message Listener i can see this too. 
The ActiveMQXASession and ActiveMQTopicSubscriber Instances are growing also until OOM.

Looking the ActiveMQMessageConsumer in calls to close this is done:

new Synchronization() {
                    public void afterCommit() throws Exception {
                        doClose();
                    }

                    public void afterRollback() throws Exception {
                        doClose();
                    }
                });

But what about not being commited or rollbacked at all in case of XA_RDONLY - doClose will never be called - don't know if this does matter for this memory leak but it seems inconsistent that resource cleanup is only done fpr commit + rollback.
","01/Apr/10 23:27;gtully;thanks for the great test case, issue resolved on trunk in r930135
state on the client, broker and failover transport needed to be reclaimed on prepare readonly.","19/May/10 09:26;mcarpella;Is the fix-version 5.4.0 correct, i.e. fix is not included in 5.3.2?","19/May/10 10:09;gtully;afraid so, 5.4 will be out by the end of the summer. It was rolled into a [fuse release|http://repo.fusesource.com/maven2/org/apache/activemq/apache-activemq/5.3.1-fuse-01-00/] so u can get it there in the mean time, if a 5.4-SNAPSHOT does not work for you. ","27/May/10 13:23;mlayer;Even with the fix (r930135), is it not still possible that {{TransactionContexts}} remain indefinitely in {{TransactionContext.ENDED_XA_TRANSACTION_CONTEXTS}}? {{syncSendPacketWithInterruptionHandling}} could throw a {{JMSException}} before the context is removed from the Map, if I am not mistaken.","09/Sep/10 12:27;gtully;marc, think r995397 will resolve the possibility of dangling refs in ENDED_XA_TRANSACTION_CONTEXTS if prepare fails with an exception and rollback is not subsequently called, as it need not be.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception thrown during commit leads to message loss,AMQ-2880,12483508,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,slewis,slewis,26/Aug/10 12:36,08/Sep/10 16:37,30/Jan/20 16:55,08/Sep/10 16:31,5.4.0,,,,,,,5.4.1,,,Broker,,,,0,"In cases where JDBC persistence is used and the database server is under a fair bit of load it's sometimes possible for table/row locks to time out, which means you'll see exceptions such as:

java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1693)
at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1108)
at org.apache.commons.dbcp.DelegatingStatement.executeBatch(DelegatingStatement.java:297)
at org.apache.commons.dbcp.DelegatingStatement.executeBatch(DelegatingStatement.java:297)
at org.apache.activemq.store.jdbc.TransactionContext.executeBatch(TransactionContext.java:98)
at org.apache.activemq.store.jdbc.TransactionContext.executeBatch(TransactionContext.java:80)
at org.apache.activemq.store.jdbc.TransactionContext.commit(TransactionContext.java:161)
at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.commitTransaction(JDBCPersistenceAdapter.java:504)
at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:109)
at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:220)
at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:73)
at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:176)
at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:430)
at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
at java.lang.Thread.run(Thread.java:636)

In this case the connection to the database is fine and what we should do is retry the transaction as it's a temporary failure condition.  Instead what happens is the broker moves to the next message in the queue, leaving the current message in the database.  The message won't show up in the web console and cannot be consumed by any consumers until the broker is restarted.

Attached is a test case that simulates the error condition in a controlled fashion by using a subclassed JDBCPersistenceAdapter that will throw an exception in commitTransaction as necessary.  So the producer sends 10 messages and then the consumer tries to consume them, during this time the persistence adapter will throw an exception during commitTransaction.  Then the condition is cleared and the consumer can consume all 10 messages, however the consumer only consumes 9 messages, the 1st message in the sequence is still in the database.  Hopefully the logging makes this clear.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/10 20:48;slewis;patch_for_xa_transaction.txt;https://issues.apache.org/jira/secure/attachment/12461842/patch_for_xa_transaction.txt","26/Aug/10 19:37;slewis;test-case.txt;https://issues.apache.org/jira/secure/attachment/12461775/test-case.txt","26/Aug/10 12:37;slewis;test-case.txt;https://issues.apache.org/jira/secure/attachment/12461774/test-case.txt","07/Sep/10 20:48;slewis;xa-test-case.txt;https://issues.apache.org/jira/secure/attachment/12461841/xa-test-case.txt",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2010-08-30 13:03:19.464,,,false,,,,,,,,,,,,,,,,,14716,,,Wed Sep 08 16:31:15 UTC 2010,,,,,,,,"0|i0b9sn:",63699,,,,,,,,,,,,,,,,,,,"26/Aug/10 15:15;slewis;Just a note to simulate the real lock timeout exception using MySQL you can just lock some rows in the table, for example:

start transaction;
select id from activemq_msgs limit 10 for update;

then try and consume some messages.  ActiveMQ will get block and then get a lock timeout when it hits these locked rows.  Then release the lock with:

commit;

after consuming all of the messages in the queue that you can you'll see those locked rows are still in the table and hadn't been consumed.","26/Aug/10 19:37;slewis;This shows the problem better, as each time a new consumer is created to receive a message from the queue a message is lost.","30/Aug/10 13:03;gtully;https://issues.apache.org/activemq/browse/AMQ-2551 - can result from the checkpoint thread, the fix to this issue ensures that there are no adverse effects to it occurring save the failure of the current operation.","31/Aug/10 15:31;gtully;resolved in r991218

a jms transaction rollback was needed in the even of a store failure on an ack. in addition test case needed maxredeliveries > numMessages to ensure replayed messages were not sent to dlq.
fix an test from patch applied with thanks.","07/Sep/10 16:13;slewis;This problem also occurs with XA transactions (like in the example stack trace) so we need a similar fix for this scenario.","07/Sep/10 17:33;slewis;This should take care of XA transactions.","07/Sep/10 20:48;slewis;Here's a test for XATransaction.  I'm finding however that catching the exception within commit and calling rollback() from there doesn't seem to fix the issue.  Instead it seems like the message is effectively lost, as when the dummy persistent store throws it's exception the message is out of the database, I wouldn't have expected that.  Also to properly rollback in the client I had to call XAResource.start() for some reason, also a bit unexpected.  Anyway, am also attaching the changes I had done to XATransaction.java.","08/Sep/10 16:31;gtully;r995119 
new xa test variant from patch applied. thanks for the work on this one. XA case is now sorted.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JobSchedulerStore is not started unless a message requesting delayed delivery is added to the queue or a job list request is done in the admin console,AMQ-2897,12483509,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,seime,seime,06/Sep/10 14:05,08/Sep/10 12:45,30/Jan/20 16:55,08/Sep/10 12:45,5.4.0,,,,,,,5.4.1,,,Broker,,,,0,"Problem: Job scheduler does not get started after broker restart.

1) Fire up the broker (using default config (bin/activemq console)
2) Start the client app (I'm using Mule)
3) Post a message to the queue with AMQ_SCHEDULED_DELAY set to some value (10000ms)
4) Shut down the broker
5) Fire up the broker again

Expected behavior: The broker would start the job scheduler and fire off the job waiting
Actual behavior: The job scheduler starts when 

1) a new message is posted to the queue with the AMQ_SCHEDULED_DELAY set
2) I click on the ""Scheduled"" link in the admin ui

","Ubuntu 10.04, Java1.6u20 64bit",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/10 14:07;seime;activemq.log.1;https://issues.apache.org/jira/secure/attachment/12461817/activemq.log.1","06/Sep/10 14:07;seime;activemq.log.2;https://issues.apache.org/jira/secure/attachment/12461818/activemq.log.2",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-09-08 12:45:39.142,,,false,,,,,,,,,,,,,,,,,14803,,,Wed Sep 08 12:45:39 UTC 2010,,,,,,,,"0|i0ba1z:",63741,,,,,,,,,,,,,,,,,,,"06/Sep/10 14:07;seime;Log file using DEBUG level. The .2 is the result of the first broker start, and the .1 is the result of the second startup.","08/Sep/10 12:45;dejanb;Fixed with svn revision 995016.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ObjectMessage is [still] being serialized and de-serialized when using setObjectMessageSerializationDefered and setCopyMessageOnSend in local vm:// scenario,AMQ-2622,12483504,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,bob.deremer,bob.deremer,22/Feb/10 16:21,08/Sep/10 11:25,30/Jan/20 16:55,08/Sep/10 11:25,5.3.0,,,,,,,5.4.1,,,,,,,0,"I have outlined the problem in the following forum link: 

http://old.nabble.com/URGENT-QUESTION:-AMQ-5.3.0-bug-or-configuration-error------ObjectMessage-is--still--being-serialized-when-using-setObjectMessageSerializationDefered-and-setCopyMessageOnSend-td27654579.html

I have not created a JUnit test that demonstrates this, but here are the basic steps to reproduce this:
* create an embedded broker with no persistence, dedicatedTaskRunner = false, and optimizedDispatch = true
* create the ActiveMQConnectionFactory and set the setObjectMessageSerializationDefered = TRUE and setCopyMessageOnSend = FALSE
* create your connection from the factory
* create a producer and [MessageListener] consumer against a Queue
* create your own custom java object that implements Externalizable - this is important, because you will be able to set a breakpoint in the readExternal and writeExternal methods to see the 2 locations on the AMQ code where the message is copied - causing a serialization/de-serialization
* create a new ObjectMessage and send it from the producer to the consumer

The message will get serialized in ActiveMQConnection.java on this line [msg = msg.copy();] - see the linked forum issue for the code snippet and line numbers. 

NOTE: you will need to continue stepping the code through the complete dispatch process because it will go through a de-serialization phase as well when the call to getObject is called in the onMessage of the MessageListener.

Please let me know if I can provide any more details - OR, if I'm not setting something properly to keep the ObjectMessage from being serialized.

Thanks,
Bob","Windows Server 2008 R2, 64-bit, binary download of ActiveMQ 5.3.0, Java 1.6.0_17 (64-bit), Eclipse 3.5 (64-bit), tomcat 6.0 (64-bit)",bob.deremer,slewis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/10 21:16;slewis;unit-test.txt;https://issues.apache.org/jira/secure/attachment/12461627/unit-test.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-02-22 21:16:21.931,,,false,,,,,,,,,,,,,,,,,14809,,,Wed Sep 08 11:25:52 UTC 2010,,,,,,,,"0|i0ba8f:",63770,,,,,,,,,,,,,,,,,,,"22/Feb/10 21:16;slewis;Here's a unit test patch that shows the problem, am currently looking into a fix for this also.","24/Mar/10 13:52;gtully;resolved in r927054

ObjectMessage.copy is now respects setObjectMessageSerializationDefered","02/Jun/10 23:03;thammoud;Hi, I tested this fix and encountered a case where this mechanism does not seem to work properly. Here is the scenario we have:

A server that has a producer. The producer communicates with the local broker using the vm://. There are local consumers that listen on the topic being published to in the same VM. All consumers that are local in the same VM work as advertised without any serialization thanks to this fix. 

Here is the problem:

Remote consumers communicate to the broker using TCP for the same topic. When the producer sends the message to the destination, it is being sent over the vm:// and ObjectMessage has content set to null and a valid object. The broker then tries to send the message to the remote client with null contents causing errors.

It seems that perhaps, ObjectMessage should override getContent() to detect this situation. i.e if object != null and content is null, then serialize first and then return the content. I am sure you have a better solution to this issue. Thanks.","08/Sep/10 11:04;gtully;when a deferred serializable message is marshaled it needs to serialize, as described in the case of a vm non serialized message to a topic with multiple consumers, some of which don't use vm: transport and as a result need marshaling.
Query ordering? if the non vm: consumer is dispatched to before the vm: consumer, will it negate the non serialization for the vm consumer?","08/Sep/10 11:25;gtully;resolved in r994990

the issue of ordering disappears as each consumer gets its own copy, so an objects write operation will be called but reads will happen in unserialised copies. The serialisation is now called before marshalling which will only be invoked for non vm transports. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failover: protocol doesn't work within a static:() URI in a networkConnector,AMQ-2904,12483501,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Sep/10 14:12,07/Sep/10 14:43,30/Jan/20 16:55,07/Sep/10 14:43,5.4.0,,,,,,,5.4.1,,,Transport,,,,0,"Am configuring a networkConnector, and want it to do failover against two brokers. Xml config snippit:{code}
<networkConnectors>
            <networkConnector  uri=""static:(failover:(tcp://${activemq01.master.networkconnector.ip}:${activemq01.master.openwire.port},tcp://${activemq01.slave.networkconnector.ip}:${activemq01.slave.openwire.port})?randomize=true)""
                duplex=""true""
                networkTTL=""2""/>
        </networkConnectors>{code}
Problem is, the failoer doesn't work 

When activemq02 connects to activemq01, we see the following on activemq01:
{code}
INFO | Connector openwire Started
 INFO | ActiveMQ JMS Message Broker (activemq01, ID:Ade's-52856-1283520722984-0:0) started
 INFO | Connector vm://activemq01 Started
 INFO | Created Duplex Bridge back to activemq02
 INFO | Network connection between vm://activemq01#0 and tcp:///127.0.0.1:52864(activemq02) has been established.{code}
All good! If I take activemq01 down, then on reconnect, we don't see the duplex bridge get created. This is the output from activemq01.{code}

INFO | Recovery replayed 1 operations from the journal in 0.036 seconds.
 INFO | ActiveMQ 5.4.0-fuse-00-00 JMS Message Broker (activemq01) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | Scheduler using directory: activemq-data/scheduler
 INFO | Listening for connections at: tcp://0.0.0.0:61626
 INFO | Connector openwire Started
 INFO | ActiveMQ JMS Message Broker (activemq01, ID:Ade's-52922-1283520881264-0:0) started{code}
Note that there's no mention of a Duplex bridge. The output from the activemq02 broker says:
{code}
Transport (/127.0.0.1:61616) failed to tcp://127.0.0.1:61616 , attempting to automatically reconnect due to: java.io.EOFException
 INFO | Outbound transport to activemq01 interrupted.
 INFO | Network connection between vm://activemq02#0 and tcp://127.0.0.1:61626(activemq01) has been established.
 INFO | Outbound transport to activemq01 resumed
 INFO | Successfully reconnected to tcp://127.0.0.1:61626
 WARN | Unexpected extra broker info command received: BrokerInfo {commandId = 19, responseRequired = false, brokerId = ID:Ade's-52922-1283520881264-0:0, brokerURL = tcp://0.0.0.0:61626, slaveBroker = false, masterBroker = false, faultTolerantConfiguration = false, networkConnection = false, duplexConnection = false, peerBrokerInfos = [], brokerName = activemq01, connectionId = 0, brokerUploadUrl = null, networkProperties = null}{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14801,,,Tue Sep 07 14:43:19 UTC 2010,,,,,,,,"0|i0ba87:",63769,Regression,,,,,,,,,,,,,,,,,,"07/Sep/10 14:21;gtully;Issue is related to interruption processing in the failover transport for an activemq client connection with active consumers. A network connector, just listening for consumer advisories does not need this feature. The interruption processing and replay of consumers in pull mode pending interruption processing completion should be limited to JMS consumer connections.","07/Sep/10 14:42;gtully;AMQ-2579 introduced the new failover transport behavior that causes this issue. It should have been confined to activemq jms client consumer connections","07/Sep/10 14:43;gtully;resolve in r993382",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSX Properties not returned from message.propertyExists() and message.getPropertyNames(),AMQ-2840,12483498,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,andriyhnativ,andriyhnativ,20/Jul/10 14:57,07/Sep/10 12:34,30/Jan/20 16:55,30/Aug/10 15:46,5.4.0,,,,,,,5.4.1,,,Broker,,,,1,"Methods propertyExists() and getPropertyNames() defined in the class org.apache.activemq.command.ActiveMQMessage (activemq-core) return only custom properties. The JMSX properties (like JMSXDeliveryCount) are not being returned. This problem exists not only for a new version of ActiveMQ (5.4), but also for 5.3 (and probably for others as well).",,andriyhnativ,rodos77,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/10 15:00;andriyhnativ;patch.txt;https://issues.apache.org/jira/secure/attachment/12461771/patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-03 20:07:27.631,,,false,,,,,,,,,,,,,,,,,14794,,,Tue Sep 07 12:34:42 UTC 2010,,,,,,,,"0|i0ba5j:",63757,Regression,,,,,,,,,,,,,,,,,,"20/Jul/10 15:00;andriyhnativ;The patch","03/Aug/10 20:07;rodos77;Any way this fix can be included in 5.4.0?  This seems like a glaring omission of very basic functionality and the fix looks simple enough.","09/Aug/10 09:14;gtully;patch applied in r983564 with thanks. added a test to keep the changes safe!","19/Aug/10 04:55;genspring;Hi, this patch broke the jms spec:

-----------------------------------------------------------------------------------------------
/**Returns an Enumeration of all the property names. 
** Note that *JMS standard header fields are not considered properties and are not returned in this enumeration*. 
**/
Enumeration getPropertyNames()  throws JMSException
----------------------------------------------------------------------------------------------------

So that this change is preventing the tck from passing.    Could you please fix this ?  
","19/Aug/10 09:02;gtully;pending spec compliance issue - part of this patch needs to be reverted.","19/Aug/10 09:07;gtully;reverted the non jms spec compliant part of the patch in r987090","19/Aug/10 14:50;genspring;I found that the version of trunk is 5.5-SNAPSHOT.    Are you planing to release a 5.4.1 to fix this ?

In my opinion,  a 5.4.1 with fix should be released ASAP because the user's JMS code based on the wrong implementation will not be portable.
","19/Aug/10 14:52;rodos77;Guys, let's read the JMS spec carefully:

The spec says that the following are standard header fields (starting with ""JMS"" prefix):
JMSDestination
JMSDeliveryMode
JMSExpiration
JMSPriority
JMSMessageID
JMSTimestamp
JMSCorrelationID
JMSReplyTo
JMSType
JMSRedelivered

However, the following are NOT header fields but are JMS Defined *_Properties_* (starting with ""JMSX"" prefix):
JMSXUserID
JMSXAppID
JMSXDeliveryCount
JMSXGroupID
JMSXGroupSeq
JMSXProducerTXID
JMSXConsumerTXID
JMSXRcvTimestamp
JMSXState

Of these, it looks like AMQ supports 3: JMSXDeliveryCount, JMSXGroupID and JMSXGroupSeq.  Now, the ActiveMQMessage class puts both the JMS header fields and the JMSX message properties into the same JMS_PROPERTY_SETERS map, so i agree, returning the whole map is wrong, but the JMSX properties MUST still be returned.

So I think the proper solution is to replace the (reverted) line:
{code}
result.addAll(new Vector<String>(JMS_PROPERTY_SETERS.keySet()));
{code}
with something like:
{code}
for (String propName : JMS_PROPERTY_SETERS.keySet()) {
    if (propName.startsWith(""JMSX"")) {
        propsVector.add(propName);
    }
}
{code}
","19/Aug/10 15:34;gtully;Eugene, that seems correct, have made is so JMSX props are returned. r987193

Shawn, will this pass the tck?

As to a 5.4.1 asap, I agree it is a portability issue, but one few people are likely to encounter. Lets see what others think.","20/Aug/10 02:45;kevan;In Geronimo, we've been lining up our next 2.2.x release to be based on 5.4.0. With the limited time between this regression and release, we weren't able to nail down the cause of this problem (we had made connector/transaction manager updates around the same time, which could have had some impact on our JMS tests).

So, I, for one, would be interested in a 5.4.1 release ""soon"".","20/Aug/10 07:46;genspring;Gary,  #987193  bring the same TCK Failures.    Could you revert them ?","20/Aug/10 09:57;gtully;I reverted the changes so the TCK will pass. I added a new method, getAllPropertyNames() that returns all the properties, JMS standard props and JMSX extension props, so folks who want this non standard behavior can have it in an explicitly non portable way.

My bad on this late change, not sure it would have been avoided if I validated against the spec though, I would have taken Eugene's interpretation.

What is the expected drop date for Geronimo, it makes sense to cut a new release for the next 2.2.x release. Think it may also makes sense to wait some time to ensure there are no other must fix issues.
","20/Aug/10 13:21;kevan;Shawn, thanks for running those tests!

We're also waiting for an Axis release. But I'm hoping for a mid-September release. So, a 5.4.1 in 2-3 weeks should work. ","30/Aug/10 15:46;gtully;resolving this. It may make sense to validate tck again, just to be sure to be sure.","07/Sep/10 12:34;rickmcguire;The axis2 release we're waiting on for the Geronimo release has finally gone to a vote.  We're going to be needed the 5.4.1 release shortly too.  The snapshot version has been looking good with the TCK. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
grep option is not POSIX compliant,AMQ-2898,12483486,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,joeseeder,joeseeder,06/Sep/10 15:56,07/Sep/10 08:57,30/Jan/20 16:55,07/Sep/10 08:57,5.4.0,,,,,,,5.4.1,,,,,,,0,"in the bin/activemq script use of -q option on standard grep is not working :

$./activemq status
grep: illegal option -- q
Usage: grep -hblcnsviw pattern file . . .
ERROR: There are syntax errors in '/etc/default/activemq'


after changing script to use ggrep which is the GNU grep in Solaris script no longer reported this issue

there can be 2 solutions:

use of POSIX compliant grep options or
detection of grep version and trying to use ggrep ","SunOS 5.10 Generic_142901-06 i86pc i386 i86pc
PATH=/usr/sfw/bin:/usr/ccs/bin:/usr/local/bin:/usr/postgres/8.3/bin/64:/usr/apache2/bin/:/usr/bin",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-07 08:57:23.377,,,false,,,,,,,,,,,,,,,,,14806,,,Tue Sep 07 08:57:23 UTC 2010,,,,,,,,"0|i0ba33:",63746,,,,,,,,,,,,,,,,,,,"07/Sep/10 08:57;dejanb;Fixed with svn revision 993286. Thanks.

Using stdout redirection to /dev/null instead of -q seems to be the easiest solution",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover and prefetch=0 can result in hung consumers if the MessagePull command is lost,AMQ-2877,12483483,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Aug/10 10:13,02/Sep/10 20:13,30/Jan/20 16:55,25/Aug/10 10:17,5.4.0,,,,,,,5.4.1,,,JMS client,,,,0,"With prefetch=0,  a consumer that has no messages sends an async message to the broker to have it dispatch a single message and waits for the dispatch to ocurr. prefetch=0 makes the consumer a pull consumer, in that it has to ask for a message each time.

there is a possibility that failover occurs just after the send of the messagePull command such that the consumer  is blocked waiting for a message but a failover connection or broker does not know about the outstanding pull command. The connection state tracker is the normal mechanism for command replay after failover. This needs to be extended to track messagePull commands, keeping one outstanding reference for each consumer/destination pair that can be replayed after failover.
It makes sense to reuse the messageCache for this. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14822,,,Wed Aug 25 10:17:09 UTC 2010,,,,,,,,"0|i0ba5b:",63756,,,,,,,,,,,,,,,,,,,"25/Aug/10 10:17;gtully;resolve in 988974

having a timeout on the wait for pull may also be sensible, lets see.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updating broker-config.xml for rar deployer,AMQ-2895,12483477,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rjtokenlanring,rjtokenlanring,02/Sep/10 12:01,02/Sep/10 15:02,30/Jan/20 16:55,02/Sep/10 15:02,5.4.0,,,,,,,5.4.1,,,Documentation,,,,0,"The default broker-config.xml file is no more valid since xml schema validation introduced into 5.4.0 release.
Please find attached the corrected version. Also the default persistence manager was updated to KahaDB (is the default since 5.3 release).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/10 12:02;rjtokenlanring;broker-config.xml;https://issues.apache.org/jira/secure/attachment/12461798/broker-config.xml",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-02 15:02:58.41,,,false,,,,,,,,,,,,,,,,,14807,,,Thu Sep 02 15:02:58 UTC 2010,,,,Patch Available,,,,"0|i0ba9b:",63774,,,,,,,,,,,,,,,,,,,"02/Sep/10 15:02;gtully;fixed in r991961, thanks for the feedback.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't use maven-eclipse-plugin on trunk,AMQ-2896,12483478,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,janstey,janstey,janstey,02/Sep/10 13:54,02/Sep/10 13:58,30/Jan/20 16:55,02/Sep/10 13:58,,,,,,,,5.4.1,6.0.0,,,,,,0,"When I run mvn eclipse:eclipse, I get the following error:

{code}
Caused by: org.apache.maven.artifact.resolver.ArtifactResolutionException: Failed to resolve artifact, possibly due to a repository list that is not appropriately equipped for this artifact's metadata.
  org.apache.maven.plugins:maven-eclipse-plugin:pom:2.8-SNAPSHOT

from the specified remote repositories:
  apache.snapshots (https://repository.apache.org/content/repositories/snapshots/),
  central (http://repo1.maven.org/maven2)


	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:221)
	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:90)
	at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:558)
	... 24 more

{code}

Fixing this shortly...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14814,,,Thu Sep 02 13:57:53 UTC 2010,,,,,,,,"0|i0aldb:",59735,,,,,,,,,,,,,,,,,,,"02/Sep/10 13:57;janstey;Fixed in rev 991936.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent  DLQ messages are NOT persisting in the DB,AMQ-2756,12483472,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,kseelam,kseelam,01/Jun/10 21:30,02/Sep/10 07:55,30/Jan/20 16:55,02/Sep/10 07:55,5.3.1,5.3.2,,,,,,5.4.0,,,Broker,,,,1,"We are using ActiveMQ 5.3.2  and defined persistence adaptor as below:
 
  <persistenceAdapter>
                <jdbcPersistenceAdapter dataSource=""#mysql-ds""/>
        </persistenceAdapter>

Once the producer sends persistent messages, they are  persisting FINE in the 'activemq_msgs' table in the DB (verified by select statement). We also see the messages thru the Web console.

While Consuming, after 6 failure read attempts;
 When we check the web Console; the messages are moved from our Queue to  ""ActiveMQ.DLQ""  queue.
BUT when we check the DB, the messages are NOT exist in the 'activemq_msgs' table. They are removed completely.  We expect those need to be exist with the  container name ""queue://ActiveMQ.DLQ"".

Since the DLQ messages are not persisted in DB,  We are loosing them for Broker restart.

This happens in 5.4-SNAPSHOT & 5.3.1 & 5.3.2 releases.
This works as expected in 5.3.0,  i mean, the DLQ messages are persisting in the permanent DB storage.

see this:
http://old.nabble.com/Dead-letter-queue-not-being-created-td28576004.html

Thank you,
Krishna. ","Windows Xp, Linux 2.6.18 (Red Hat 4.1.2-46)",mlayer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jun/10 21:33;kseelam;TestDLQ.java;https://issues.apache.org/jira/secure/attachment/12461713/TestDLQ.java","01/Jun/10 21:33;kseelam;activemq_mysql.xml;https://issues.apache.org/jira/secure/attachment/12461714/activemq_mysql.xml",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-09-02 02:45:57.516,,,false,,,,,,,,,,,,,,,,,74813,,,Thu Sep 02 07:55:42 UTC 2010,,,,,,,,"0|i0rq13:",159861,,,,,,,,,,,,,,,,,,,"01/Jun/10 21:33;kseelam;test class, broker activemq_mysql.xml files added","02/Sep/10 02:45;michaelbeausoleil;Where can I download version 5.4.1 so I can get this fix?  

If version 5.4.1 is not available yet can you tell me how to get this fix in the 5.3.2 or 5.4.0 version as we are currently using the 5.3.2 version and this will be causing us some headaches.


Thanks.","02/Sep/10 07:54;gtully;Note the workaround: disable the audit for the JDBC persistence adapter. Full fix is in 5.4.0","02/Sep/10 07:55;gtully;This issue is resolved by the duplicate AMQ-2800",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBCMessageStore message audit suppresses composite destination and DLQ messages as duplicates,AMQ-2800,12483473,12482853,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Jun/10 14:15,02/Sep/10 07:54,30/Jan/20 16:55,08/Jul/10 14:41,5.3.1,,,,,,,5.4.0,,,Message Store,,,,0,"With the audit enabled, messages send to composite destinations are suppressed as duplicates so the will not survive a restart. In addition, persistent DLQ messages are suppressed (depending on the audit depth).
Disabling the audit on the persistence adapter works around this issue. It is ok to disable the audit. The audit is needed to close a small window where duplicate message sends can occur with the non transactional use of the failover: transport. It can happen if a send is in progress when a failover reconnection occurs back o the same broker (as if there was a temp network partition) and the send reply is not received. A non transactional client will resend the message which needs to be suppressed by the audit. Disabling the audit leaves the possibility of having a duplicate message in the database that will not be dispatched.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2756,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74796,,,Thu Jul 08 14:41:47 UTC 2010,,,,,,,,"0|i0rqjb:",159943,,,,,,,,,,,,,,,,,,,"08/Jul/10 14:41;gtully;resolved in r961783

Ack removal from store needs to take destination into account as the same message id exists for multiple destinations when composite destinations are in use. The ack needs to be specific as it could (this bug) remove the wrong message.
added test for this case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EOFException if stomp+nio after ActiveMQ has sent the first bytes message,AMQ-2883,12483468,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,mjustin,mjustin,29/Aug/10 11:21,01/Sep/10 14:25,30/Jan/20 16:55,30/Aug/10 15:48,5.4.0,,,,,,,5.4.1,,,Transport,,,,0,"Starting broker with C:\Java\apache-activemq-5.4.0\bin\activemq-admin.bat start xbean:activemq-stomp.xml

The Stomp client sends a number of binary messages but receives only the first one, the broker log on the console looks like this:

Java Runtime: Sun Microsystems Inc. 1.6.0_07 C:\Program Files\Java\jdk1.6.0_07\j
re
  Heap sizes: current=5056k  free=4360k  max=520256k
    JVM args: -Dcom.sun.management.jmxremote -Xmx512M -Dorg.apache.activemq.UseD
edicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dact
ivemq.classpath=C:\Java\apache-activemq-5.4.0\bin\../conf; -Dactivemq.home=C:\Ja
va\apache-activemq-5.4.0\bin\.. -Dactivemq.base=C:\Java\apache-activemq-5.4.0\bi
n\..
ACTIVEMQ_HOME: C:\Java\apache-activemq-5.4.0\bin\..
ACTIVEMQ_BASE: C:\Java\apache-activemq-5.4.0\bin\..
Loading message broker from: xbean:activemq-stomp.xml
 INFO | PListStore:C:\Java\apache-activemq-5.4.0\bin\..\data\localhost\tmp_stora
ge started
 INFO | Using Persistence Adapter: KahaDBPersistenceAdapter[C:\Java\apache-activ
emq-5.4.0\bin\..\data\kahadb]
 INFO | ActiveMQ 5.4.0 JMS Message Broker (localhost) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | Scheduler using directory: activemq-data\scheduler
 INFO | Listening for connections at: stomp://mj-PC:61612?transport.closeAsync=f
alse
 INFO | Connector stomp Started
 INFO | Listening for connections at: stomp+nio://mj-PC:61613?transport.closeAsy
nc=false
 INFO | Connector stomp+nio Started
 INFO | ActiveMQ JMS Message Broker (localhost, ID:mj-PC-49520-1283080154792-0:0
) started
 INFO | Logging to org.slf4j.impl.JCLLoggerAdapter(org.eclipse.jetty.util.log) v
ia org.eclipse.jetty.util.log.Slf4jLog
 INFO | jetty-7.0.1.v20091125
 INFO | ActiveMQ WebConsole initialized.
 INFO | Initializing Spring FrameworkServlet 'dispatcher'
 INFO | ActiveMQ Console at http://0.0.0.0:8161/admin
 INFO | Initializing Spring root WebApplicationContext
 INFO | Connector vm://localhost Started
 INFO | Camel Console at http://0.0.0.0:8161/camel
 INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo
 INFO | RESTful file access application at http://0.0.0.0:8161/fileserver
 INFO | Started SelectChannelConnector@0.0.0.0:8161
 INFO | Transport failed: java.io.EOFException
java.io.EOFException
        at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(Sto
mpNIOTransport.java:106)
        at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(Stom
pNIOTransport.java:51)
        at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(Stom
pNIOTransport.java:80)
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(Selector
Selection.java:94)
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker
.java:119)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExec
utor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor
.java:907)
        at java.lang.Thread.run(Thread.java:619)

The Stomp client log is:

TCoreIndyTests.TestBytesMessages
send:
CONNECT



received:
CONNECTED
session:ID:mj-PC-49520-1283080154792-5:0


send:
SUBSCRIBE
destination:/queue/HabariSpeedTest
ack:auto
id:{E4BD9658-B92E-4C57-AD9F-F5357BA66FC2}



send:
SEND
destination:/queue/HabariSpeedTest
content-length:4
correlation-id:{5B735F2D-349E-4A8A-B2AE-6493A1569F88}

☺☻♥1

send:
SEND
destination:/queue/HabariSpeedTest
content-length:4
correlation-id:{5B735F2D-349E-4A8A-B2AE-6493A1569F88}

☺☻♥2

send:

(more messages, ten total)

received:
MESSAGE
message-id:ID:mj-PC-49520-1283080154792-5:0:-1:1:1
destination:/queue/HabariSpeedTest
timestamp:1283080192048
expires:0
subscription:{E4BD9658-B92E-4C57-AD9F-F5357BA66FC2}
content-length:4
priority:0
correlation-id:{5B735F2D-349E-4A8A-B2AE-6493A1569F88}

☺☻♥1

Received 1 messages
Elapsed: 10000 msec (limit: 10000 msec) - giving up
send:
DISCONNECT



Not sure if this is related but I also see an error in the startup log on later restarts. I reinstalled the broker and the message disappears.

 INFO | jetty-7.0.1.v20091125
 INFO | ActiveMQ WebConsole initialized.
 INFO | Initializing Spring FrameworkServlet 'dispatcher'
 INFO | ActiveMQ Console at http://0.0.0.0:8161/admin
 INFO | Initializing Spring root WebApplicationContext
ERROR | Could not accept connection : java.nio.channels.ClosedSelectorException  <------------------
 INFO | Connector vm://localhost Started
 INFO | Camel Console at http://0.0.0.0:8161/camel
 INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo
 INFO | RESTful file access application at http://0.0.0.0:8161/fileserver
 INFO | Started SelectChannelConnector@0.0.0.0:8161",Windows Vista,daniel.peters,tpurcell@chariotsolutions.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-29 19:13:16.496,,,false,,,,,,,,,,,,,,,,,14791,,,Wed Sep 01 14:25:43 UTC 2010,,,,,,,,"0|i0ba7b:",63765,,,,,,,,,,,,,,,,,,,"29/Aug/10 19:13;tabish;Would be helpful if you could create a unit test that reproduces this error, take a look at the StompTest.java for some sample to work from.","30/Aug/10 11:38;daniel.peters;I just updated our server from 5.3.2 to 5.4.0 and I get the same error with Stomp:
2010-08-30 12:43:11,681 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ NIO Worker
java.io.EOFException
        at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:106)
        at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:51)
        at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:80)
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)

We had to switch back to 5.3.2 because we have alot stomp clients. :(

It doesnt work without NIO either:
2010-08-30 12:55:15,536 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///192.168.2.89:37025
java.io.EOFException
        at java.io.DataInputStream.readByte(DataInputStream.java:250)
        at org.apache.activemq.transport.stomp.StompWireFormat.readLine(StompWireFormat.java:146)
        at org.apache.activemq.transport.stomp.StompWireFormat.parseAction(StompWireFormat.java:162)
        at org.apache.activemq.transport.stomp.StompWireFormat.unmarshal(StompWireFormat.java:92)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:226)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:218)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
        at java.lang.Thread.run(Thread.java:619)
","30/Aug/10 15:48;tabish;Fixed in trunk.  ","31/Aug/10 14:27;nuvan;Daniel,
We had the same problem and because we have lots of Stomp Clients (a couple of hundred), we implemented a workaround with StompConnect.

Since ActiveMQ 5.4.0 solves a lot of issues (and brings camel 2.4) in 5.3.2 that had impact in our applications we have upgraded our instances use StompConnect instead of somp(+nio) transport connector.
To implement this solution, you just need the StompConnect jar (available at Codehaus) in your class path, and use the following Spring configuration outside of your broker context:

<bean id=""myFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
      <property name=""brokerURL"" value=""tcp://localhost:61616""/
      <property name=""userName"" value=""username""/>
      <property name=""password"" value=""password""/>
</bean>

    
<bean id=""stompConnector"" class=""org.codehaus.stomp.jms.StompConnect"" init-method=""start""> 
      <property name=""connectionFactory"" ref=""myFactory""/> 
      <property name=""uri""               value=""tcp://localhost:61612""/>
</bean>

This way you comment your stomp+nio transport connector and leave the forward to your desired ip/port. (this example assumes a user named ""user"" and password ""password"". Also assumes that your Stomp messages are heading to localhost:61612 and that the openwire transport connector listens in localhost:61616)

Hope this helps. 
Best regards,
Nuno Valente.","01/Sep/10 14:25;daniel.peters;@Timothy:
Thanks for the fast fix! Could you maybe backport this fix to a 5.4 branch? I think alot users that rely on Stomp would appriciate it .

@Nuno:
good idea too, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404 status for Broker Instance's admin console - ACTIVEMQ_HOME and ACTIVEMQ_BASE appear not to be set correctly,AMQ-2881,12483458,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,phil.pickett@springsource.com,phil.pickett@springsource.com,27/Aug/10 20:04,31/Aug/10 13:29,30/Jan/20 16:55,31/Aug/10 13:29,5.4.0,,,,,,,5.4.1,,,,,,,0,"In a new AMQ 5.4 installation, I am using a command like ""bin/activemq create Broker2"" to create a new instance.  There are problems bringing up the admin and other consoles for the new instance due to what seem to be problems in the scripts related to $ACTIVEMQ_HOME and $ACTIVEMQ_BASE.

I've been able to get this working by changing references to ${activemq.base} to ${activemq.home} for the webapps in the conf/jetty.xml.  It seems to me that the webapps are probably not instance-specific so I believe this makes sense.  I left the directory set to ${activemq.base} for the jetty-realm.properties file thinking these properties are probably instance-specific.

I also modified the bin/activemq script to set the ACTIVEMQ_CLASSPATH to ""${ACTIVEMQ_BASE}/conf:${ACTIVEMQ_HOME}/conf;${ACTIVEMQ_CLASSPATH}"" so that instance-specific config files are picked up before the more generic config files.

With these changes in place I am able to create multiple broker instances, set unique openwire and jetty ports in the instance's conf/activemq.xml and conf/jetty.xml, start the instances, and open their administrative consoles.

My modified bin/activemq and conf/jetty.xml files are attached along with the differences to the 5.4 version.
",,phil.pickett@springsource.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/10 18:05;phil.pickett@springsource.com;AMQ-2881.patch;https://issues.apache.org/jira/secure/attachment/12461782/AMQ-2881.patch","27/Aug/10 20:06;phil.pickett@springsource.com;activemq;https://issues.apache.org/jira/secure/attachment/12461778/activemq","27/Aug/10 20:06;phil.pickett@springsource.com;activemq.diffs;https://issues.apache.org/jira/secure/attachment/12461776/activemq.diffs","27/Aug/10 20:06;phil.pickett@springsource.com;jetty.xml;https://issues.apache.org/jira/secure/attachment/12461779/jetty.xml","27/Aug/10 20:06;phil.pickett@springsource.com;jetty.xml.diffs;https://issues.apache.org/jira/secure/attachment/12461777/jetty.xml.diffs",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,2010-08-31 13:29:30.568,,,false,,,,,,,,,,,,,,,,,14798,,,Tue Aug 31 13:29:30 UTC 2010,,,,Patch Available,,,,"0|i0ba73:",63764,,,,,,,,,,,,,,,,,,,"30/Aug/10 18:05;phil.pickett@springsource.com;Attaching patch for bin/activemq, bin/activemq.bat, and conf/jetty.xml","31/Aug/10 13:29;dejanb;A bit modified patch committed with svn revision 991184. Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jetty-realm.properties (No such file or directory) when starting new broker instance,AMQ-2882,12483448,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,phil.pickett@springsource.com,phil.pickett@springsource.com,27/Aug/10 20:23,30/Aug/10 13:13,30/Jan/20 16:55,30/Aug/10 13:13,5.4.0,,,,,,,5.4.1,,,,,,,0,"The following exception is seen after creating and starting a new broker instance.  I believe the conf/jetty-real.properties file should be among the files copied from the $ACTIVEMQ_HOME/conf directory to the instance's conf directory.  A patch is attached.

java.io.FileNotFoundException: /home/phil/untouchedAMQ/apache-activemq-5.4.0/BadBroker/conf/jetty-realm.properties (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at org.eclipse.jetty.util.resource.FileResource.getInputStream(FileResource.java:274)
	at org.eclipse.jetty.security.HashLoginService.loadUsers(HashLoginService.java:145)
	at org.eclipse.jetty.security.MappedLoginService.doStart(MappedLoginService.java:115)
	at org.eclipse.jetty.security.HashLoginService.doStart(HashLoginService.java:186)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:316)
	at org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:231)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:137)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
",,phil.pickett@springsource.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/10 20:24;phil.pickett@springsource.com;CreateCommand.patch;https://issues.apache.org/jira/secure/attachment/12461780/CreateCommand.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-30 13:13:55.216,,,false,,,,,,,,,,,,,,,,,14787,,,Mon Aug 30 13:13:55 UTC 2010,,,,Patch Available,,,,"0|i0ba5r:",63758,,,,,,,,,,,,,,,,,,,"30/Aug/10 13:13;dejanb;Fixed with svn revision 990793. Thanks for the patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Message received from Queue before its expiration and acknowledged after it, is put to deadletter queue in error",AMQ-2876,12481834,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,24/Aug/10 09:47,24/Aug/10 09:55,30/Jan/20 16:55,24/Aug/10 09:55,5.3.2,5.4.0,,,,,,5.4.1,,,Broker,,,,0,"message expiry processing in queue subscription when an standard ack is received will process the expired message even though the message has been processed by the consumer. This processing will place the message in the DLQ by default. End result, consumer has the message and DLQ has the message. Because this message was acked before it expired as seen by the consumer but after expiry as seen by the broker, it should not be sent to the DLQ. This holds for expiry checking that is done on receipt of an ACK.

If the reply is lost for some time, and the broker expires the inflight message, the ack will be ignored with a warn and normal expiry processing will ensue. In this case, the broker gets to expire the message completely before the consumer gets to reply.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14788,,,Tue Aug 24 09:55:01 UTC 2010,,,,,,,,"0|i0ba7r:",63767,,,,,,,,,,,,,,,,,,,"24/Aug/10 09:55;gtully;fixes in r988455

when processing the ack, the message will no longer be expired as it has been delivered ok. 
If asnyc message expiry processing has already expired the message, then the ack will be ignored and a warning will be issued in the log for that message ack. The act of processing the ack will not result in expiry otherwise.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Need to update the ""Example Configuration using NetworkConnector properties"" in networks-of-brokers.html due to the change made to resolve AMQ-2598 ",AMQ-2873,12481628,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gsaffell,gsaffell,20/Aug/10 14:10,20/Aug/10 15:50,30/Jan/20 16:55,20/Aug/10 15:50,5.4.0,,,,,,,5.4.1,,,Documentation,,,,0,"On http://activemq.apache.org/networks-of-brokers.html, there are several examples showing ""uri=""static://(tcp://..."" Per AMQ-2598, they should be ""uri=""static:(tcp://..."" (remove the ""//"" immediately following ""static:"").",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-20 15:50:27.878,,,false,,,,,,,,,,,,,,,,,74769,,,Fri Aug 20 15:50:27 UTC 2010,,,,,,,,"0|i0rpjb:",159781,,,,,,,,,,,,,,,,,,,"20/Aug/10 15:50;gtully;done: https://cwiki.apache.org/confluence/display/ACTIVEMQ/Networks+of+Brokers
two refs to composite urls with // removed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contention between concurrent connection start and new session creation - start can find partially created session,AMQ-2872,12482018,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Aug/10 09:17,19/Aug/10 10:10,30/Jan/20 16:55,19/Aug/10 10:10,5.4.0,,,,,,,5.4.1,,,JMS client,,,,0,"{code}Exception in thread ""Thread-20"" java.lang.NullPointerException
	at org.apache.activemq.ActiveMQSession.start(ActiveMQSession.java:1637)
	at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:508)
	at org.springframework.jms.connection.SingleConnectionFactory$SharedConnectionInvocationHandler.invoke(SingleConnectionFactory.java:514)
	at $Proxy5.start(Unknown Source)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:464)
	at org.springframework.jms.core.JmsTemplate.receiveSelected(JmsTemplate.java:708)
	at org.springframework.jms.core.JmsTemplate.receive(JmsTemplate.java:686)
	at com.iona.cpi.failure.http.HttpLoadTest$Receiver.run(HttpLoadTest.java:90)
	at java.lang.Thread.run(Thread.java:613){code}

Issue is async connection start and session creation. The partially created session is added to the connection too soon.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14819,,,Thu Aug 19 10:10:59 UTC 2010,,,,,,,,"0|i0ba8v:",63772,,,,,,,,,,,,,,,,,,,"19/Aug/10 10:10;gtully;fix in r987113",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Starting the broker in a path with a space fails,AMQ-2869,12481868,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,13/Aug/10 13:45,13/Aug/10 20:07,30/Jan/20 16:55,13/Aug/10 13:47,5.4.0,,,,,,,5.4.0,,,,,,,0,"The root of the problem is Jetty issue described here

http://jira.codehaus.org/browse/JETTY-1063

We can workaround the issue, by making sure to escape urls in our classpath",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-13 18:05:46.277,,,false,,,,,,,,,,,,,,,,,74770,,,Fri Aug 13 20:07:17 UTC 2010,,,,,,,,"0|i0rqnb:",159961,,,,,,,,,,,,,,,,,,,"13/Aug/10 13:47;dejanb;Fixed with svn revision 985198","13/Aug/10 18:05;semog;I'm not an ActiveMQ Java developer, but I can see how the fix put in place will resolve the problem.  However, I did a quick code search, and I came across the call to toURL() in the file ClassLoaderSPIConnectionFactory.java (lines 60 and 67).  Do these calls also need the toURI() pre-treatment added?","13/Aug/10 20:07;dejanb;Hi Jim,

this class is part ofnthe performance test plugin (which is on its own ready for an update), so it's not part of the distribution and shouldn't affect this issue.

Cheers",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueueBrowser in transacted session fails,AMQ-2712,12482327,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dnawrocki,dnawrocki,23/Apr/10 16:38,09/Aug/10 21:00,30/Jan/20 16:55,09/Aug/10 21:00,5.3.1,,,,,,,5.4.0,,,JMS client,,,,0,"A QueueBrowser cannot be used on a transacted session.  During the call to destroyConsumer(), the call:

            if (session.getTransacted()) {
                session.commit();
            }

will fail and the consumer will not be closed.

Additionally, when calling nextElement(), the ackLater() method (called by beforeMessageIsConsumed(), called by receiveNoWait(), called by nextElement()) will throw a JMSException.

The latter issue may be related to https://issues.apache.org/activemq/browse/AMQ-2659, but the former is not.

The workaround is to always use non-transacted QueueBrowsers and manually handle any issues if you try to consume a message found in the QueueBrowser.",,nedenom@hotmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Apr/10 16:43;dnawrocki;JmsTransactedQueueBrowserTest.java;https://issues.apache.org/jira/secure/attachment/12461680/JmsTransactedQueueBrowserTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-09 21:00:54.53,,,false,,,,,,,,,,,,,,,,,74834,,,Mon Aug 09 21:00:54 UTC 2010,,,,,,,,"0|i0rq27:",159866,,,,,,,,,,,,,,,,,,,"23/Apr/10 16:43;dnawrocki;Unit test for the failure.","09/Aug/10 21:00;tabish;Fixed the issues in the provided test (transacted producers didn't have a session.commit) and ran against trunk, all tests pass.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB NPE can occur using random index removes,AMQ-2863,12482315,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,09/Aug/10 15:02,09/Aug/10 16:25,30/Jan/20 16:55,09/Aug/10 16:25,,,,,,,,5.4.0,,,Broker,,,,0,"Stack trace looks like:
{code}
java.lang.NullPointerException
	at org.apache.kahadb.index.BTreeNode.getRightLeaf(BTreeNode.java:239)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:314)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:292)
	at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-09 15:04:32.159,,,false,,,,,,,,,,,,,,,,,74773,,,Mon Aug 09 16:25:23 UTC 2010,,,,,,,,"0|i0rqof:",159966,,,,,,,,,,,,,,,,,,,"09/Aug/10 15:04;gtully;another variant of the stack trace:{code}java.lang.NullPointerException
        at org.apache.kahadb.index.BTreeNode.getRightLeaf(BTreeNode.java:239)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:309)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
        at org.apache.activemq.store.kahadb.MessageDatabase.removeAckLocation(MessageDatabase.java:1314)
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:891)
        at org.apache.activemq.store.kahadb.MessageDatabase.access$700(MessageDatabase.java:82)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.execute(MessageDatabase.java:757)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:755)
        at org.apache.activemq.store.kahadb.MessageDatabase$11.visit(MessageDatabase.java:700)
        at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:692)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:644)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:316)
        at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:466)
        at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:230)
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:255)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:459)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:303)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:205)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:187)
        at java.lang.Thread.run(Thread.java:619){code}","09/Aug/10 16:25;chirino;fixed in rev 983672",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception sending to an ActiveMQ queue from JBoss in an XA Transaction,AMQ-2676,12483095,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,edwin@finalist.com,edwin@finalist.com,26/Mar/10 13:53,09/Aug/10 15:56,30/Jan/20 16:55,09/Aug/10 15:56,5.3.0,,,,,,,5.4.0,,,Connector,,,,0,"We are trying to use an inbound and outbound queue on a remote ActiveMQ instance using XA transactions.
Receiving seems to work ok, but when we send a message, the ActiveMQ RA gives an exception saying that the session is not 'enlisted to a distributed transaction'.

If we use JBoss Messaging, there is no exception, but the thread on this forum http://community.jboss.org/thread/149573 gives me the impression that JBMQ just works without the transaction in that situation, without throwing an exception.

To work around a classcastexception on the QueueConnectionFactory we use a patched version of the activemq-rar-adapter (see also https://issues.apache.org/activemq/browse/AMQ-2670).

his is the test application & configuration.

To set it up, a regular JBoss 5.1.0-GA can be used (compiled for java 6).

Changes in configuration:
- unzipped activemq-rar (5.3.0), with the new class I wrote as a 'hack'.
The ra.xml is attached to this message, as is the replacement for the jar 

 jbossts-properties.xml - Has the ActiveMQProvider registered for XA recovery purposes

 activemq-jms-ds.xml, must be placed in the deploy folder

Test application:

I commented out the persistence stuff, that is not related to the issue.
The application deploys a MDB and a SLSB. For running the test, you need an ActiveMQ instance on localhost :61616 (default)
To get the error, you can call the SLSB directly (see Test.java, put jboss-all-client.jar on the cp and the ejbjar).
The helloWorld method sends to ActiveMQ.
The sendJBoss method uses a JBoss Messaging Queue (this doesn't give the Exception, but I'm not sure that this means it actually runs in a XA transaction)

To deploy the JBoss queue, you need to add this fragment to the 'deploy/messaging/destinations-service.xml':
  <mbean code=""org.jboss.jms.server.destination.QueueService""
     name=""jboss.messaging.destination:service=Queue,name=DemoQueue""
     xmbean-dd=""xmdesc/Queue-xmbean.xml"">
     <depends optional-attribute-name=""ServerPeer"">jboss.messaging:service=ServerPeer</depends>
     <depends>jboss.messaging:service=PostOffice</depends>
  </mbean>

The rar_performance.ear is the compiled testcase.
To rebuild, unzip the 'simple_ejb_testcase' and perform a mvn install in te 'simple_mdb' folder and in the 'simple_mdb_ear' folder (there is no parent pom.xml).

The exception:
11:56:28,851 ERROR [STDERR] javax.jms.JMSException: Session's XAResource has not been enlisted in a distributed transaction.
11:56:28,852 ERROR [STDERR]     at org.apache.activemq.ActiveMQXASession.doStartTransaction(ActiveMQXASession.java:109)
11:56:28,852 ERROR [STDERR]     at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1636)
11:56:28,852 ERROR [STDERR]     at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
11:56:28,852 ERROR [STDERR]     at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
11:56:28,852 ERROR [STDERR]     at gts.ise.refdata.domain.complexinstrument.HelloBean.helloWorld(HelloBean.java:46)
11:56:28,852 ERROR [STDERR]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:56:28,852 ERROR [STDERR]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
11:56:28,852 ERROR [STDERR]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
11:56:28,852 ERROR [STDERR]     at java.lang.reflect.Method.invoke(Method.java:597)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/10 13:55;edwin@finalist.com;activemq-jms-ds.xml;https://issues.apache.org/jira/secure/attachment/12461636/activemq-jms-ds.xml","26/Mar/10 13:55;edwin@finalist.com;activemq-ra-5.3.0.jar;https://issues.apache.org/jira/secure/attachment/12461635/activemq-ra-5.3.0.jar","26/Mar/10 13:55;edwin@finalist.com;jbossts-properties.xml;https://issues.apache.org/jira/secure/attachment/12461637/jbossts-properties.xml","26/Mar/10 13:56;edwin@finalist.com;ra.xml;https://issues.apache.org/jira/secure/attachment/12461638/ra.xml","26/Mar/10 13:56;edwin@finalist.com;rar_performance.ear;https://issues.apache.org/jira/secure/attachment/12461639/rar_performance.ear","26/Mar/10 13:56;edwin@finalist.com;simpl_ejb_testcase.zip;https://issues.apache.org/jira/secure/attachment/12461640/simpl_ejb_testcase.zip",,,,,,6.0,,,,,,,,,,,,,,,,,,,,2010-03-26 16:29:09.908,,,false,,,,,,,,,,,,,,,,,74850,,,Mon Aug 09 15:56:06 UTC 2010,,,,,,,,"0|i0rqaf:",159903,,,,,,,,,,,,,,,,,,,"26/Mar/10 13:59;edwin@finalist.com;Test code (client calling a remote session bean):

public class Test {

   public static void main(String arg[]) throws NamingException {
      Hashtable<String, String> props = new Hashtable<String, String>();

      props.put(""java.naming.factory.initial"", ""org.jnp.interfaces.NamingContextFactory"");
      props.put(""java.naming.factory.url.pkgs"",""org.jboss.naming:org.jnp.interfaces"");
      props.put(""java.naming.provider.url"",""localhost:1099"");
      InitialContext context = new InitialContext(props);
      HelloRemote remote = (HelloRemote) context.lookup(""/rar_performance/HelloBean/remote"");

      remote.helloWorld();
   }
}","26/Mar/10 16:29;gtully;with the vanilla 5.3.1 rar, this works fine for me. The rar connection factory is enlisted in the XA transaction. It must be the mods to the rar to support the transaction recovery processing that is problematic.","29/Mar/10 07:26;edwin@finalist.com;Yes, it looks like I was too focused on getting the integration with the recovery manager working.
We should probably remove those changes and find another way to get that part working.","09/Aug/10 15:56;gtully;https://issues.apache.org/activemq/browse/AMQ-2670 sorts this issue out. Please reopen if this is not the case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SocketException: Broken pipe should be logged as warning not debug,AMQ-2119,12482496,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,sherriff,sherriff,17/Feb/09 10:24,09/Aug/10 11:07,30/Jan/20 16:55,09/Aug/10 11:07,5.2.0,,,,,,,5.4.0,,,Broker,,,,0,"Network problems are imho important. Can they be logged at WARN instead of debug? 

2009-02-17 08:57:43,241 DEBUG [broker.TransportConnection.Transport] Transport failed: java.net.SocketException: Broken pipe
java.net.SocketException: Broken pipe
        at java.net.SocketOutputStream.socketWrite0(Native Method)
        at java.net.SocketOutputStream.socketWrite(Unknown Source)
        at java.net.SocketOutputStream.write(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
        at java.io.DataOutputStream.flush(Unknown Source)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:167)
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:233)
        at org.apache.activemq.transport.InactivityMonitor$3.run(InactivityMonitor.java:135)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source) ",red hat ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-09 11:07:24.731,,,false,,,,,,,,,,,,,,,,,75068,,,Mon Aug 09 11:07:24 UTC 2010,,,,,,,,"0|i0rq7z:",159892,,,,,,,,,,,,,,,,,,,"09/Aug/10 11:07;gtully;resolved in r983584 - now at INFO level",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Active MQ Transport connector does not appear to honor use LocalHost option,AMQ-2122,12481759,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,aremuzzi,aremuzzi,17/Feb/09 15:35,09/Aug/10 09:43,30/Jan/20 16:55,09/Aug/10 09:43,5.2.0,,,,,,,5.4.0,,,Broker,,,,0,"Config and stack trace attached 

using below config activemq broker fails to start as it is unable to resolve IP to domain name.

using transport connector syntax from here 

http://activemq.apache.org/tcp-transport-reference.html


<!-- 
   Licensed to the Apache Software Foundation (ASF) under one or more 
   contributor license agreements.  See the NOTICE file distributed with 
   this work for additional information regarding copyright ownership. 
   The ASF licenses this file to You under the Apache License, Version 2.0 
   (the ""License""); you may not use this file except in compliance with 
   the License.  You may obtain a copy of the License at 

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software 
   distributed under the License is distributed on an ""AS IS"" BASIS, 
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
   See the License for the specific language governing permissions and 
   limitations under the License. 
--> 
<!-- START SNIPPET: example --> 
<beans 
 xmlns=""http://www.springframework.org/schema/beans"" 
 xmlns:amq=""http://activemq.apache.org/schema/core"" 
 xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
 xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
 http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
 http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd""> 

   <!-- Allows us to use system properties as variables in this configuration file --> 
   <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""> 
        <property name=""locations""> 
           <value>file:///${activemq.base}/conf/credentials.properties</value> 
        </property> 
   </bean> 

   <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.base}/data""> 

       <!-- Destination specific policies using destination names or wildcards --> 
       <destinationPolicy> 
           <policyMap> 
               <policyEntries> 
                   <policyEntry queue="">"" memoryLimit=""5mb""/> 
                   <policyEntry topic="">"" memoryLimit=""5mb""> 
                     <!-- you can add other policies too such as these 
                       <dispatchPolicy> 
                           <strictOrderDispatchPolicy/> 
                       </dispatchPolicy> 
                       <subscriptionRecoveryPolicy> 
                           <lastImageSubscriptionRecoveryPolicy/> 
                       </subscriptionRecoveryPolicy> 
                     --> 
                   </policyEntry> 
               </policyEntries> 
           </policyMap> 
       </destinationPolicy> 

       <!-- Use the following to configure how ActiveMQ is exposed in JMX --> 
       <managementContext> 
           <managementContext createConnector=""false""/> 
       </managementContext> 

       <!-- The store and forward broker networks ActiveMQ will listen to --> 
       <networkConnectors> 
           <!-- by default just auto discover the other brokers --> 
        <!--   <networkConnector name=""default-nc"" uri=""multicast://default""/> --> 
           <!-- Example of a static configuration: 
           <networkConnector name=""host1 and host2"" uri=""static://(tcp://host1:61616,tcp://host2:61616)""/> 
           --> 
       </networkConnectors> 

       <persistenceAdapter> 
           <amqPersistenceAdapter syncOnWrite=""false"" directory=""${activemq.base}/data"" maxFileLength=""20 mb""/> 
       </persistenceAdapter> 

       <!-- Use the following if you wish to configure the journal with JDBC --> 
       <!-- 
       <persistenceAdapter> 
           <journaledJDBC dataDirectory=""${activemq.base}/data"" dataSource=""#postgres-ds""/> 
       </persistenceAdapter> 
       --> 

       <!-- Or if you want to use pure JDBC without a journal --> 
       <!-- 
       <persistenceAdapter> 
           <jdbcPersistenceAdapter dataSource=""#postgres-ds""/> 
       </persistenceAdapter> 
       --> 

       <sslContext> 
           <sslContext keyStore=""file:${activemq.base}/conf/broker.ks"" keyStorePassword=""password"" trustStore=""file:${activemq.base}/conf/broker.ts"" trustStorePassword=""password""/> 
       </sslContext> 

       <!--  The maximum about of space the broker will use before slowing down producers --> 
       <systemUsage> 
           <systemUsage> 
               <memoryUsage> 
                   <memoryUsage limit=""20 mb""/> 
               </memoryUsage> 
               <storeUsage> 
                   <storeUsage limit=""1 gb"" name=""foo""/> 
               </storeUsage> 
               <tempUsage> 
                   <tempUsage limit=""100 mb""/> 
               </tempUsage> 
           </systemUsage> 
       </systemUsage> 


       <!-- The transport connectors ActiveMQ will listen to --> 
       <transportConnectors> 
           <transportConnector name=""openwire"" uri=""tcp://192.168.98.101:61616?useLocalHost=true"" /> 
       <!--    <transportConnector name=""openwire"" uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/> 
           <transportConnector name=""ssl"" uri=""ssl://localhost:61617""/> 
           <transportConnector name=""stomp"" uri=""stomp://localhost:61613""/> 
           <transportConnector name=""xmpp"" uri=""xmpp://localhost:61222""/> --> 
       </transportConnectors> 

   </broker> 

   <!-- 
   ** Lets deploy some Enterprise Integration Patterns inside the ActiveMQ Message Broker 
   ** For more details see 
   ** 
   ** http://activemq.apache.org/enterprise-integration-patterns.html
   --> 
   <camelContext id=""camel"" xmlns=""http://activemq.apache.org/camel/schema/spring""> 

       <!-- You can use a <package> element for each root package to search for Java routes --> 
       <package>org.foo.bar</package> 

       <!-- You can use Spring XML syntax to define the routes here using the <route> element --> 
       <route> 
           <from uri=""activemq:example.A""/> 
           <to uri=""activemq:example.B""/> 
       </route> 
   </camelContext> 

   <!-- 
   ** Lets configure some Camel endpoints 
   ** 
   ** http://activemq.apache.org/camel/components.html
   --> 

   <!-- configure the camel activemq component to use the current broker --> 
   <bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"" > 
       <property name=""connectionFactory""> 
         <bean class=""org.apache.activemq.ActiveMQConnectionFactory""> 
           <property name=""brokerURL"" value=""vm://localhost?create=false&waitForStart=10000"" /> 
           <property name=""userName"" value=""${activemq.username}""/> 
           <property name=""password"" value=""${activemq.password}""/> 
         </bean> 
       </property> 
   </bean> 



   <!-- Uncomment to create a command agent to respond to message based admin commands on the ActiveMQ.Agent topic --> 
   <!-- 
   <commandAgent xmlns=""http://activemq.apache.org/schema/core"" brokerUrl=""vm://localhost"" username=""${activemq.username}"" password=""${activemq.password}""/> 
   --> 


   <!-- An embedded servlet engine for serving up the Admin console --> 
   <jetty xmlns=""http://mortbay.com/schemas/jetty/1.0""> 
       <connectors> 
           <nioConnector port=""8161""/> 
       </connectors> 

       <handlers> 
           <webAppContext contextPath=""/admin"" resourceBase=""${activemq.base}/webapps/admin"" logUrlOnStart=""true""/> 
           <webAppContext contextPath=""/demo"" resourceBase=""${activemq.base}/webapps/demo"" logUrlOnStart=""true""/> 
           <webAppContext contextPath=""/fileserver"" resourceBase=""${activemq.base}/webapps/fileserver"" logUrlOnStart=""true""/> 
       </handlers> 
   </jetty> 

   <!--  This xbean configuration file supports all the standard spring xml configuration options --> 

   <!-- Postgres DataSource Sample Setup --> 
   <!-- 
   <bean id=""postgres-ds"" class=""org.postgresql.ds.PGPoolingDataSource""> 
     <property name=""serverName"" value=""localhost""/> 
     <property name=""databaseName"" value=""activemq""/> 
     <property name=""portNumber"" value=""0""/> 
     <property name=""user"" value=""activemq""/> 
     <property name=""password"" value=""activemq""/> 
     <property name=""dataSourceName"" value=""postgres""/> 
     <property name=""initialConnections"" value=""1""/> 
     <property name=""maxConnections"" value=""10""/> 
   </bean> 
   --> 

   <!-- MySql DataSource Sample Setup --> 
   <!-- 
   <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close""> 
     <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/> 
     <property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/> 
     <property name=""username"" value=""activemq""/> 
     <property name=""password"" value=""activemq""/> 
     <property name=""maxActive"" value=""200""/> 
     <property name=""poolPreparedStatements"" value=""true""/> 
   </bean> 
   --> 

   <!-- Oracle DataSource Sample Setup --> 
   <!-- 
   <bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close""> 
     <property name=""driverClassName"" value=""oracle.jdbc.driver.OracleDriver""/> 
     <property name=""url"" value=""jdbc:oracle:thin:@localhost:1521:AMQDB""/> 
     <property name=""username"" value=""scott""/> 
     <property name=""password"" value=""tiger""/> 
     <property name=""maxActive"" value=""200""/> 
     <property name=""poolPreparedStatements"" value=""true""/> 
   </bean> 
   --> 

   <!-- Embedded Derby DataSource Sample Setup --> 
   <!-- 
   <bean id=""derby-ds"" class=""org.apache.derby.jdbc.EmbeddedDataSource""> 
     <property name=""databaseName"" value=""derbydb""/> 
     <property name=""createDatabase"" value=""create""/> 
   </bean> 
   --> 

</beans> 
<!-- END SNIPPET: example --> 



2009-01-27 16:42:43,439 [erSimpleAppMain] INFO  DefaultCamelContext            - JMX enabled. Using InstrumentationLifecycleStrategy. 
2009-01-27 16:42:43,558 [erSimpleAppMain] ERROR BrokerService                  - Failed to resolve localhost 
2009-01-27 16:42:44,592 [erSimpleAppMain] INFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(/opt/activemq/data) 
2009-01-27 16:42:44,709 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - AMQStore starting using directory: /opt/activemq/data 
2009-01-27 16:42:44,988 [erSimpleAppMain] INFO  KahaStore                      - Kaha Store using data directory /opt/activemq/data/kr-store/state 
2009-01-27 16:42:45,473 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Active data files: [] 
2009-01-27 16:42:45,726 [erSimpleAppMain] INFO  BrokerService                  - ActiveMQ 5.2.0 JMS Message Broker (localhost) is starting 
2009-01-27 16:42:45,726 [erSimpleAppMain] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2009-01-27 16:42:45,820 [erSimpleAppMain] INFO  KahaStore                      - Kaha Store using data directory /opt/activemq/data/kr-store/data 
2009-01-27 16:42:46,126 [erSimpleAppMain] ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Transport Connector could not be registered in JMX: Failed to bind to server socket: tcp://192.168.98.101:61616?useLocalHost=true due to: java.net.UnknownHostException: test_host.test_domain: test_host.test_domain 
java.io.IOException: Transport Connector could not be registered in JMX: Failed to bind to server socket: tcp://192.168.98.101:61616?useLocalHost=true due to: java.net.UnknownHostException: test_host.test_domain: test_host.test_domain 
       at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27) 
       at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1434) 
       at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1893) 
       at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1844) 
       at org.apache.activemq.broker.BrokerService.start(BrokerService.java:480) 
       at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52) 
       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368) 
       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334) 
       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473) 
       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409) 
       at java.security.AccessController.doPrivileged(Native Method) 
       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380) 
       at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264) 
       at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) 
       at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261) 
       at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) 
       at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) 
       at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429) 
       at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729) 
       at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381) 
       at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64) 
       at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52) 
       at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96) 
       at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52) 
       at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71) 
       at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54) 
       at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115) 
       at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74) 
       at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
       at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129) 
       at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) 
       at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79) 
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
       at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
       at java.lang.reflect.Method.invoke(Unknown Source) 
       at org.apache.activemq.console.Main.runTaskClass(Main.java:225) 
       at org.apache.activemq.console.Main.main(Main.java:106) 
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
       at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 
       at java.lang.reflect.Method.invoke(Unknown Source) 
       at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240) 
       at java.lang.Thread.run(Unknown Source) 
Caused by: java.io.IOException: Failed to bind to server socket: tcp://192.168.98.101:61616?useLocalHost=true due to: java.net.UnknownHostException: test_host.test_domain: test_host.test_domain 
       at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33) 
       at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:141) 
       at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:60) 
       at org.apache.activemq.transport.TransportFactory.bind(TransportFactory.java:131) 
       at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:293) 
       at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:135) 
       at org.apache.activemq.broker.TransportConnector.asManagedConnector(TransportConnector.java:98) 
       at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1428) 
       ... 42 more 
Caused by: java.net.UnknownHostException: test_host.test_domain: test_host.test_domain 
       at java.net.InetAddress.getLocalHost(Unknown Source) 
       at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:133) 
       ... 48 more 
2009-01-27 16:42:46,129 [erSimpleAppMain] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, null) is shutting down 
2009-01-27 16:42:46,129 [erSimpleAppMain] INFO  TransportConnector             - Connector openwire Stopped 
2009-01-27 16:42:46,204 [erSimpleAppMain] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, null) stopped 


",RHEL linux Ver 5 ,aremuzzi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-06 14:06:50.288,,,false,,,,,,,,,,,,,,,,,75066,,,Mon Aug 09 09:43:53 UTC 2010,,,,,,,,"0|i0rq7b:",159889,,,,,,,,,,,,,,,,,,,"06/Aug/10 14:06;gtully;host name resolution is up to the OS, what do you expect here, where do you think the bug is?","06/Aug/10 15:21;aremuzzi;I am expecting that the ""use loclahost"" options switch stops AMQ from trying to resolve the host name via DNS . 

For example machine has a host name of myhost . There is no DNS record for this host name . Thus attempts to resolve will fail. However the transport connector can be configured with an IP making the host name ( ands is resolvability ) irrelevant. ","09/Aug/10 09:43;gtully;see resolution of https://issues.apache.org/activemq/browse/AMQ-2776 which is similar. The local host name resolution is now conditional on useLocalHost  which now defaults to false which should avoid your issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection refused when using shortname in activemqurl,AMQ-2776,12482393,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,viola.lu,viola.lu,13/Jun/10 11:04,09/Aug/10 09:41,30/Jan/20 16:55,09/Aug/10 09:41,5.3.2,5.4.0,,,,,,5.4.0,,,Connector,,,,1,"1. On server suse10sp268, start activemq , then run activemq-admin.bat browse --amqurl tcp://suse10sp268:61616 TEST.FOO , got excecption Caused by: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused: connect
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:286)
at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:185)
at org.apache.activemq.ra.ActiveMQConnectionSupport.makeConnection(ActiveMQConnectionSupport.java:79)
at org.apache.activemq.ra.ActiveMQConnectionSupport.makeConnection(ActiveMQConnectionSupport.java:61)
at org.apache.activemq.ra.ActiveMQManagedConnectionFactory.createManagedConnection(ActiveMQManagedConnectionFactory.java:169)
... 42 more
Caused by: java.net.ConnectException: Connection refused: connect
at java.net.PlainSocketImpl.socketConnect(Native Method)
at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)
at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)
at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
at java.net.Socket.connect(Socket.java:519)
at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:483)
at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:446)
at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:266)

This  happened also when got error starting activemq-ra module in geronimo
https://issues.apache.org/jira/browse/GERONIMO-5371",Suse 10 Sp2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/10 01:51;xuhaihong;activemq-2776.patch;https://issues.apache.org/jira/secure/attachment/12461755/activemq-2776.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-06-14 10:20:05.927,,,false,,,,,,,,,,,,,,,,,74805,,,Mon Aug 09 09:41:08 UTC 2010,,,,,,,,"0|i0rqpb:",159970,,,,,,,,,,,,,,,,,,,"14/Jun/10 10:20;gtully;Is this a case of https://issues.apache.org/activemq/browse/AMQ-2094 - does the broker transportConnector use localhost?","21/Jun/10 07:38;viola.lu;This case is different from amq-2094 case. activemq.sh can bind connector with full/short server host name.

1. Server suse10sp268, i add its ip map into /etc/hosts
9.186.10.68     suse10sp268.site suse10sp268
2.Edit its acitvemq.xml with :
<transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://suse10sp268:61616""/>
</transportConnectors>

3. Start activemq
 INFO | ActiveMQ 5.3.2 JMS Message Broker (share) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | Kaha Store using data directory /share/kr-store/data
 INFO | Listening for connections at: tcp://suse10sp268.site:61616
 INFO | Connector openwire Started
 INFO | ActiveMQ JMS Message Broker (share, ID:suse10sp268-49309-1277133128502-0:0) started
 INFO | Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
 INFO | jetty-6.1.9
 INFO | ActiveMQ WebConsole initialized.

4. Then i run 
activemq-admin.sh browse --amqurl tcp://suse10sp268:61616 TEST.FOO, it will report error,
ERROR: java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
        at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:130)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
ERROR: java.lang.Exception: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
java.lang.Exception: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
        at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:131)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: javax.jms.JMSException: Could not connect to broker URL: tcp://suse10sp268:61616. Reason: java.net.ConnectException: Connection refused
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:286)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:230)
        at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:178)
        at org.apache.activemq.console.filter.AmqMessagesQueryFilter.createConnection(AmqMessagesQueryFilter.java:123)
        at org.apache.activemq.console.filter.AmqMessagesQueryFilter.queryMessages(AmqMessagesQueryFilter.java:87)
        at org.apache.activemq.console.filter.AmqMessagesQueryFilter.query(AmqMessagesQueryFilter.java:72)
        at org.apache.activemq.console.filter.WildcardTransformFilter.query(WildcardTransformFilter.java:60)
        at org.apache.activemq.console.util.AmqMessagesUtil.getMessages(AmqMessagesUtil.java:51)
        at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:117)
        ... 10 more
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)
        at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)
        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
        at java.net.Socket.connect(Socket.java:519)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:436)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:402)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:266)
        ... 18 more


 but if i run 
activemq-admin.sh browse --amqurl tcp://suse10sp268.site:61616 TEST.FOO, no error, there is just one difference between two command: server host name, the former is short host name suse10sp268, the latter is full host name: sus10sp268.site
 tcp://suse10sp268:61616 
 tcp://suse10sp268.site:61616



","21/Jun/10 08:58;viola.lu;if transportConnector is 0.0.0.0, amqurl start log is: 
INFO | Listening for connections at: tcp://suse10sp268:61616 
if i run : 
activemq-admin.sh browse --amqurl tcp://suse10sp268:61616 TEST.FOO, it will work. 

if transportConnector is suse10sp268, start log is 
INFO | Listening for connections at: tcp://suse10sp268.site:61616 
if i run 
activemq-admin.sh browse --amqurl tcp://suse10sp268:61616 TEST.FOO, it doesn't work, but ""activemq-admin.sh browse --amqurl tcp://suse10sp268.site:61616 TEST.FOO"" will work. ","30/Jun/10 01:51;xuhaihong;I try to investigate the problem a bit. Before TCPTransport tries to connect the remote server, it would first call the resolveHost method to check whether the target remote host is the local machine, also it will check a boolean tag useLocalHost. From the comments in the codes, it said in Mac, there is a problem while trying to connect the local machine with its hostname. But, I am not sure whether it is a good choice in other platforms, usually the hostname is corresponding to the actual IP. Since the user configures the target server with hostname, it means that the actual IP is expected to connect to, because the server is only binding to actual IP, not the localhost (127.0.0.1) interface. 
I attached a patch, it just initialize the useLocalHost depending on the OS platform.","27/Jul/10 09:39;eric-awl;In 5.3.2

With two distinct brokers on the same server with a single interface, and without localhost usage.

I experiment the same problem of connection refused on a multicast network connector connection. Only ""0.0.0.0"" seems to work as IP address of the transport connector

""name"" of the current host, with or without domain extension, with useLocalHost=true or useLocalHost=false doesn't work. 

It works in 5.3.0-5 fuse.

I don't know if using the virtual hostname associated to another interface in the /etc/hosts file, works. We must have this functionality in production environment to isolate flows for security reasons.

Eric-AWL","28/Jul/10 07:59;eric-awl;With multicast discovery, I think I found the problem

My transport connector was in 5.3.0

      <transportConnector name=""TestDeCharge-DEFAULT-IN""
                          uri=""tcp://td0sib01s.priv.atos.fr:61616?useLocalHost=false""
                          discoveryUri=""multicast://default?group=TestDeCharge-DEFAULT""/>

In 5.3.0, the corresponding multicast frame is

09:59:02.870809 IP td0sib01s.priv.atos.fr.6155 > 239.255.2.3.6155: UDP, length 102
        0x0000:  4500 0082 0000 4000 0111 959b 0a18 e7b5  E.....@.........
        0x0010:  efff 0203 180b 180b 006e e44f 5465 7374  .........n.OTest
        0x0020:  4465 4368 6172 6765 2d44 4546 4155 4c54  DeCharge-DEFAULT
        0x0030:  2e41 6374 6976 654d 512d 342e 616c 6976  .ActiveMQ-4.aliv
        0x0040:  652e 256c 6f63 616c 686f 7374 2574 6370  e.%localhost%tcp
        0x0050:  3a2f 2f74 6430 7369 6230 3173 2e70 7269  ://td0sib01s.pri
        0x0060:  762e 6174 6f73 2e66 723a 3631 3631 363f  v.atos.fr:61616?
        0x0070:  7573 654c 6f63 616c 486f 7374 3d66 616c  useLocalHost=fal
        0x0080:  7365                                     se

In 5.3.2, the corresponding multicast frame is

[root@td0sib01s ~]# tcpdump -s 200 -c 4 src host td0sib01s and ip multicast -X
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on eth0, link-type EN10MB (Ethernet), capture size 200 bytes
09:51:30.818735 IP td0sib01s.priv.atos.fr.6155 > 239.255.2.3.6155: UDP, length 83
        0x0000:  4500 006f 0000 4000 0111 95ae 0a18 e7b5  E..o..@.........
        0x0010:  efff 0203 180b 180b 005b e43c 5465 7374  .........[.<Test
        0x0020:  4465 4368 6172 6765 2d44 4546 4155 4c54  DeCharge-DEFAULT
        0x0030:  2e41 6374 6976 654d 512d 342e 616c 6976  .ActiveMQ-4.aliv
        0x0040:  652e 256c 6f63 616c 686f 7374 2574 6370  e.%localhost%tcp
        0x0050:  3a2f 2f74 6430 7369 6230 3173 2e70 7269  ://td0sib01s.pri
        0x0060:  762e 6174 6f73 2e66 723a 3631 3631 36    v.atos.fr:61616

without ""?useLocalHost=false""

A broker that is present on the same server wants to connect with useLocalHost=true => localhost and not ""address"".

it fails to connect.

Eric-AWL","29/Jul/10 10:45;gtully;the parameters supplied to the TransportConnector are stripped of before being broadcast because many of the server side options are not applicable to the connection initiator (client side)
If you want a client to connect using useLocalHost=true, then that option needs to be specified on the brokerURL (connection factory) or on the networkConnector broker url. The parameters are then applied to all discovered urls.","30/Jul/10 01:29;xuhaihong;Hi, Gary
    So for the initial purpose for this JIRA, do you mean that useLocal=false should be used ? I am just wondering that why ActiveQM assume to use localhost to connect the server if both client and server are the same machine, it is for performance ? But sometimes, the borker might not listen on 0.0.0.0, which means that client could not connect to the server via localhost.
     Thanks !","09/Aug/10 09:40;gtully;yes, and that will be the default value in 5.4. see: https://issues.apache.org/activemq/browse/AMQ-2771
the useLocalHost flag is really a hack for macosx (at some stage) that should always have been disabled by default.

Also, the patch attached that makes the use of InetAddress.getLocalHost().getHostName() conditional on useLocalHost being set has been applied for 5.4 (r983565) which avoids one unnecessary resolution.","09/Aug/10 09:41;gtully;variant of patch applied that makes localhost resolution conditional on useLocalHost which now defaults to false.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
m2eclipse fails to update maven project configuration,AMQ-2856,12482351,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,norman,norman,02/Aug/10 06:02,09/Aug/10 09:08,30/Jan/20 16:55,09/Aug/10 09:08,,,,,,,,5.4.0,,,,,,,0,"If you try to ""Update Project Configuration"" via m2eclipse plugin you see the following error:

[ERROR] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.osgi:org.osgi.core:jar -> duplicate declaration of version (?) @ org.apache.activemq:apache-activemq:5.4-SNAPSHOT, /home/maurer/workspace2/activemq-trunk/assembly/pom.xml

This is caused because the dependecy of org.osgi.core is specified two times (with different qualifiers). m2eclipse is really strict on that.","ubuntu 10.4, java6, eclipse 3.4, m2eclipse  0.10.2.20100623-1649",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Aug/10 06:02;norman;activemq-assembly-pom.diff;https://issues.apache.org/jira/secure/attachment/12461791/activemq-assembly-pom.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-09 09:08:28.636,,,false,,,,,,,,,,,,,,,,,38758,,,Mon Aug 09 09:08:28 UTC 2010,,,,Patch Available,,,,"0|i0rqon:",159967,,,,,,,,,,,,,,,,,,,"02/Aug/10 06:02;norman;This patch fix the issue","09/Aug/10 09:08;dejanb;OSGi dependency removed altogether as it's not included in the distro anymore.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.jms.JMSException: Could not correlate acknowledgment with dispatched message thrown on failover,AMQ-2125,12482501,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,teamhiro,teamhiro,18/Feb/09 12:17,06/Aug/10 14:31,30/Jan/20 16:55,06/Aug/10 14:31,5.2.0,,,,,,,5.4.0,,,Broker,,,,0,"When failing over to a new broker we see this exception. Although the exception is thrown no messages seem to be lost.

This can be reproduced using the following unit test and this setup:
1. Create two activemq's using the same datasource.
2. Run the test
3. Kill the first active mq before the test completes (after you see the first Recieved Message... in the system out)
4. See the exception thrown in the second activemq log

import org.apache.activemq.ActiveMQConnectionFactory;

import javax.jms.*;
import static javax.jms.Session.AUTO_ACKNOWLEDGE;
import static javax.jms.Session.SESSION_TRANSACTED;

import junit.framework.TestCase;

import java.util.concurrent.atomic.AtomicInteger;

public class BrokerTest extends TestCase {

    public void testFoo() throws Exception {
        ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""failover:(tcp://localhost:61616,tcp://localhost:61617)"");

        Connection connection = connectionFactory.createConnection();
        connection.start();

        Session producerSession = connection.createSession(false, AUTO_ACKNOWLEDGE);

        MessageProducer producer = producerSession.createProducer(producerSession.createQueue(""testQueue""));

        for (int i = 0; i < 100; i++) {
            System.out.println(""Sending messages"");
            producer.send(producerSession.createTextMessage(""Hello""));
        }

        final AtomicInteger atomicInteger = new AtomicInteger(0);

        final Session consumerSession = connection.createSession(true, SESSION_TRANSACTED);
        MessageConsumer messageConsumer = consumerSession.createConsumer(consumerSession.createQueue(""testQueue""));
        messageConsumer.setMessageListener(new MessageListener() {



            public void onMessage(Message message) {
                try {
                    System.out.println(""Received Message"" + message);
                    Thread.sleep(1000);
                    atomicInteger.addAndGet(1);
                    System.out.println(atomicInteger.get());
                    consumerSession.commit();
                } catch (Exception e) {
                    throw new RuntimeException(""Oh dear"", e);
                }
            }
        });

        Thread.sleep(2 * 60 * 1000);

        assertEquals(100, atomicInteger.get());
    }

}

",MacOS 10.5 and Solaris 10,donv,teamhiro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-02-19 15:28:44.554,,,false,,,,,,,,,,,,,,,,,75064,,,Fri Aug 06 14:31:48 UTC 2010,,,,,,,,"0|i0rq2n:",159868,,,,,,,,,,,,,,,,,,,"19/Feb/09 15:28;gtully;This exception is expected on failover if a transaction was in progress at the point of failover. 
The failover transport on the client side has a state tracker for commands and transactions that have been sent so that it can recreate its state on the failover broker. In the case of a transaction commit that is out standing, the message acks will be replayed as part of the commit, the transaction will be replayed but the messages will not be present (as dispatched messages to a consumer ) on the failover broker, they will still be in the store as the original tx will have rolledback when the connection was dropped. These messages will be subsequently be redelivered. The exception occurs when the message corresponding to the ack cannot be found as pending in the broker but it can be safely ignored.

Just to be sure this is what is occurring, is it possible to provide a log of both brokers with full logging enabled.","19/Nov/09 08:36;fredrikj;In activemq 5.2 and probably 5.3 this message is logged at loglevel ERROR. It would perhaps make sense to reduce it to loglevel WARN? From Gary's description it appears to be harmless when using failover connections.","06/Aug/10 14:31;gtully;log message at warn level in 5.4
r982990",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent test failure - QueueConsumerPriorityTest,AMQ-2073,12482498,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,djencks,djencks,18/Jan/09 07:22,06/Aug/10 14:12,30/Jan/20 16:55,06/Aug/10 14:12,5.3.0,,,,,,,5.4.0,,,Broker,,,,0,"Only info I have is surefilre report

  <testcase time=""2.255"" name=""testQueueConsumerPriority"">
    <failure type=""junit.framework.AssertionFailedError"">junit.framework.AssertionFailedError
        at junit.framework.Assert.fail(Assert.java:47)
        at junit.framework.Assert.assertTrue(Assert.java:20)
        at junit.framework.Assert.assertNotNull(Assert.java:220)
        at junit.framework.Assert.assertNotNull(Assert.java:213)
        at org.apache.activemq.QueueConsumerPriorityTest.testQueueConsumerPriority(QueueConsumerPriorityTest.java:82)
</failure>",osx 10.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-06 14:12:45.584,,,false,,,,,,,,,,,,,,,,,75090,,,Fri Aug 06 14:12:45 UTC 2010,,,,,,,,"0|i0rq7r:",159891,,,,,,,,,,,,,,,,,,,"06/Aug/10 14:12;gtully;seems sorted on trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intemittent test failure - JmsDurableTopicSlowReceiveTest,AMQ-2077,12482395,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,djencks,djencks,19/Jan/09 01:56,06/Aug/10 14:02,30/Jan/20 16:55,06/Aug/10 14:02,5.3.0,,,,,,,5.4.0,,,Broker,,,,0,"surefire report...

  <testcase time=""52.623"" name=""testSlowReceiver"">
    <failure type=""junit.framework.AssertionFailedError"" message=""Messages received out of order expected:&amp;lt;101&amp;gt; but was:&amp;lt;100&amp;gt;"">junit.framework.AssertionFailedError: Messages received out of order expected:&amp;101&amp; but was:&amp;100&amp;
        at junit.framework.Assert.fail(Assert.java:47)
        at junit.framework.Assert.failNotEquals(Assert.java:282)
        at junit.framework.Assert.assertEquals(Assert.java:64)
        at junit.framework.Assert.assertEquals(Assert.java:201)
        at org.apache.activemq.bugs.JmsDurableTopicSlowReceiveTest.testSlowReceiver(JmsDurableTopicSlowReceiveTest.java:170)
</failure>
  </testcase>",osx 10.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-06 14:02:50.551,,,false,,,,,,,,,,,,,,,,,75087,,,Fri Aug 06 14:02:50 UTC 2010,,,,,,,,"0|i0rqp3:",159969,,,,,,,,,,,,,,,,,,,"06/Aug/10 14:02;gtully;looks better on trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redelivery on a failure doesn't respect the initialRedeliveryDelay on the first attempt.,AMQ-1847,12482521,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,vguna,vguna,07/Jul/08 09:58,06/Aug/10 08:16,30/Jan/20 16:55,06/Aug/10 08:16,5.1.0,,,,,,,5.4.0,,,Broker,,,,3,"Hi.

I'm using ActiveMQ 5.1 together with Spring's DefaultMessageListenerContainer to enable MDPs. I'm using the redeliveryPolicy to enable redelivery on failures during consumption of a message. ActiveMQ configuration looks like this:

    <camelContext id=""camel"" xmlns=""http://activemq.apache.org/camel/schema/spring"">

        <route errorHandlerRef=""deadLetterErrorHandler"">
                <from uri=""activemq:NEW"" />
        </route>
    </camelContext>


<bean id=""deadLetterErrorHandler"" class=""org.apache.camel.builder.DeadLetterChannelBuilder"">
    <property name=""redeliveryPolicy"" ref=""redeliveryPolicyConfig""/>
</bean>

<bean id=""redeliveryPolicyConfig"" class=""org.apache.camel.processor.RedeliveryPolicy"">
    <property name=""maximumRedeliveries"" value=""4""/>
    <property name=""initialRedeliveryDelay"" value=""30000""/>
    <property name=""useExponentialBackOff"" value=""true""/>
    <property name=""backOffMultiplier"" value=""2"" />
</bean>


Now if a failure occurs, the configured delay isn't used on the first redelivery attempt. Instead redelivery takes place immediately after the failure occured. This sounds odd to me, since the property is even called initialRedeliveryDelay :). I know that maybe this was caused due to the following issue:

https://issues.apache.org/activemq/browse/AMQ-1032

In my opinion immediately redelivery isn't very useful in most cases. If a failure occurs, it won't be fixed some ms later :). So my suggestion is (in respect to AMQ-1032) to have two options:

initialRedeliveryDelay
redeliveryDelay

So both configurations would be possible. For AMQ-1032 just configure initialRedeliveryDelay to 0. Otherwise just take the redeliveryDelay as initialRedeliveryDelay to get what I want :).

Does this make sense?
","Linux, ActiveMQ 5.1, Spring 2.5.x with transacted DefaultMessageListenerContainer",john.greeley,vadimos,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1032,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-07-08 15:37:03.498,,,false,,,,,,,,,,,,,,,,,84751,,,Fri Aug 06 08:16:22 UTC 2010,,,,,,,,"0|i0rq33:",159870,,,,,,,,,,,,,,,,,,,"08/Jul/08 15:37;davsclaus;I have just tried an unit test and it sleeps for 30 seconds.
[                          main] RedeliveryPolicy               DEBUG Sleeping for: 30000 millis until attempting redelivery

And then on the 2nd
[                          main] RedeliveryPolicy               DEBUG Sleeping for: 60000 millis until attempting redelivery

Your route doesn't do anything with the received message from activemq:NEW. How do you actually trigger the failure and the redelivery?","08/Jul/08 15:50;davsclaus;I have tried with a jms example and it works in the unit tests in the source code.

Are you sure you have Camel 1.4-SNAPSHOT in ActiveMQ where you run your project?","08/Jul/08 16:19;davsclaus;Hi Claus.

Meanwhile I've realized that the problem is a misunderstanding on my side what camel is supposed to do.
I thought I can configure the redelivery behavior of ActiveMQ within the camelContext as part of the acivemq.xml configuration on a per destination basis. What I haven't mentioned is, that my listener/consumer for the queue isn't configured within camel or activemq but in a separate spring baked application. What I now have realized is, that I have to consume a message via camel to get it's routing/mediation support (including redelivery
features) - now it's crystal clear to me (or not?). So I configured redeliveryPolicy on a ActiveMQConnectionFactory on my spring baked application and the settings are working fine now.

Sorry for mixing things up.

Thanks for you help.

Regards,
Veit
","08/Jul/08 17:55;vguna;Hi.

Sorry for reopening but the redeliveryDelay problem still exists. But it seems no camel problem then because I'm not using camel anymore, instead the redeliveryPolicy on the AQConnectionFactory.

So, should that be moved to the AQM project then? There I'm using AMQ 5.1.0 (Camel 1.3).
","09/Jul/08 03:58;davsclaus;Hi Veit

Yes please open a ticket on the ActiveMQ project if its solely an ActiveMQ problem.
http://issues.apache.org/activemq/browse/AMQ","09/Jul/08 04:00;davsclaus;Veit. I managed to move the issue from Camel to ActiveMQ project.","09/Jul/08 04:00;davsclaus;Veit. Can you add your new configuration etc. for the ActiveMQ that demonstrates the problem? I am sure the ActiveMQ comitters want to see your configuration file and what the problem is you have.","09/Jul/08 06:44;vguna;Thanks Claus.

Sure, here's my applicationContext.xml:

<?xml version=""1.0"" encoding=""UTF-8""?>
<beans 
	xmlns=""http://www.springframework.org/schema/beans"" 
	xmlns:amq=""http://activemq.apache.org/schema/core""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd"">
	
	<!--  ActiveMQ destinations to use  -->
	<bean id=""destination"" class=""org.apache.activemq.command.ActiveMQQueue"" autowire=""constructor"">
		<constructor-arg value=""NEW"" />
	</bean>

	<bean id=""jmsFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
		<property name=""brokerURL"">
			<value>discovery:multicast://test</value>
		</property>
		<property name=""redeliveryPolicy"">
			<ref local=""redeliveryPolicy"" />
		</property>
	</bean>
	<bean id=""redeliveryPolicy"" class=""org.apache.activemq.RedeliveryPolicy"">
		<property name=""initialRedeliveryDelay"" value=""10000"" />
		<property name=""maximumRedeliveries"" value=""4"" />
		<property name=""useExponentialBackOff"" value=""true"" />
		<property name=""backOffMultiplier"" value=""2"" />
	</bean>
		
	<!-- Spring JMS Template -->
	<bean id=""myJmsTemplate"" class=""org.springframework.jms.core.JmsTemplate"">
		<property name=""connectionFactory"">
			<!-- lets wrap in a pool to avoid creating a connection per send -->
			<bean class=""org.springframework.jms.connection.SingleConnectionFactory"">
				<property name=""targetConnectionFactory"">
					<ref local=""jmsFactory"" />
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id=""consumerJmsTemplate"" class=""org.springframework.jms.core.JmsTemplate"">
		<property name=""connectionFactory"" ref=""jmsFactory""/>
	</bean>
	

	<!-- and this is the message listener container -->
	<bean id=""jmsContainer"" class=""org.springframework.jms.listener.DefaultMessageListenerContainer"">
		<property name=""connectionFactory"" ref=""jmsFactory""/>
		<property name=""destination"" ref=""destination""/>
		<property name=""messageListener"" ref=""messageListener"" />
		<property name=""concurrentConsumers"" value=""100"" />
		<property name=""maxMessagesPerTask"" value=""1"" />
		<property name=""sessionTransacted"" value=""true"" />		
	</bean>
	<!-- this is the Message Driven POJO (MDP) -->
	<bean id=""messageListener"" class=""com.foo.bar.jms.Consumer"" />	
	
</beans>


The messageListener will create a RuntimeException on the onMessage method to produce an error. The first redelivery attempt occurs immediately, without respect to the initialRedeliveryDelay.
","09/Jul/08 08:26;tsigelnik;Redelivery policy doesn't work with Spring's org.springframework.jms.listener.DefaultMessageListenerContainer at all

That happens, because DefaultMessageListenerContainer closes the consumer, session and connection, and do the reconnect if message listener throws exception, and of course previous delivery timepoint is empty in the new consumer.

It happens, because DefaultMessageListenerContainer doesn't know what a cause of JMSException. Maybe it was disconnection... and ConnectionFactory haven't reconnection logic...

I wrote my own simple MessageListenerContainer, that doesn't do reconnection if JMSException is thrown, because ActiveMQConnectionFactory has reconnection logic
","09/Jul/08 08:37;vguna;I'm sorry to correct you, but it IS working with the above configuration. All parameters I change within the redeliveryPolicy bean definition affecting the redelivery within the sping bean! The only thing that doesn't work correctly (or needs enhancement) is the initial redelivery.","09/Jul/08 09:42;tsigelnik;I don't know how do you reach that, but if I use DefaultMessageListenerContainer  all redeliveries happens immediately, not first only.

If any Execption in MessageListener happens it always closes the connnection

{code:title=DefaultMessageListenerContainer.java}
private class AsyncMessageListenerInvoker implements SchedulingAwareRunnable {

....

    catch (Throwable ex) {
    clearResources();

...


    }

...
}


private void clearResources() {
    if (sharedConnectionEnabled()) {
    synchronized (sharedConnectionMonitor) {
	JmsUtils.closeMessageConsumer(this.consumer);
	JmsUtils.closeSession(this.session);
        }
    }
    else {
	JmsUtils.closeMessageConsumer(this.consumer);
	JmsUtils.closeSession(this.session);
    }
	this.consumer = null;
	this.session = null;
}


{code}","09/Jul/08 10:01;vguna;I don't know. Perhaps configuration, ActiveMQ 5.1.0 or Spring 2.5.5. Perhaps someone fixed/enhanced something :).
","17/Jul/08 07:14;vguna;@Dima:

Now, I can confirm your findings! After I set the jmsTransactionManager in my config (not just sessionTransacted=true like before) I encounter immediate redelivery without delay/backoffs, too:

	<bean id=""jmsContainer"" class=""org.springframework.jms.listener.DefaultMessageListenerContainer"">
		<property name=""connectionFactory"" ref=""jmsFactory""/>
		<property name=""destination"" ref=""destination""/>
		<property name=""messageListener"" ref=""messageListener"" />
		<property name=""concurrentConsumers"" value=""2"" />
		<property name=""maxMessagesPerTask"" value=""1"" />
		<property name=""sessionTransacted"" value=""true"" />
		<property name=""transactionManager"" ref=""jmsTransActionManager"" />			
	</bean>

After I set this, the MesageListener also checks connections actively - which is very noisy. So in the end: is this all expected behavior? I'm a bit confused...

","25/Jun/09 09:34;gtully;transactions change redelivery semantics for a consumer. I think you are seeing expected behavior if the session is transacted considering https://issues.apache.org/activemq/browse/AMQ-1032

If this is not the case, a complete Junit tests case with a listener that throws an exception would help. There are a bunch of spring test cases in the activemq-core module that you could use as a template","20/Jul/09 13:28;gtully;resolving pending junit test case that can show otherwise.","05/Aug/10 15:42;gtully;additional clarification. There is indeed an immediate retry with the redelivery flag set, this allows an app to immediately deal with a redelivered message (one having the redelivered flag set) if it needs to. For subsequent redeliveries the delay semantics kick in. This was implemented in https://issues.apache.org/activemq/browse/AMQ-1032
hence this is working as designed","06/Aug/10 08:14;gtully;Fix implemented in r982903

initialRedeliveryDelay is not respected, set it to 0 to have immediate redelivery. Additional deliveryDelay (default  = 1000) which controls subsequent redelivery delay if initialRedeliveryDelay==0","06/Aug/10 08:15;gtully;going to fix this, make it configurable","06/Aug/10 08:16;gtully;done",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite destinations doesn't update CursorMemoryUsage appropriately ,AMQ-2861,12481867,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,04/Aug/10 16:14,04/Aug/10 16:16,30/Jan/20 16:55,04/Aug/10 16:16,5.3.2,,,,,,,5.4.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74774,,,Wed Aug 04 16:16:47 UTC 2010,,,,,,,,"0|i0rqnz:",159964,,,,,,,,,,,,,,,,,,,"04/Aug/10 16:16;dejanb;Fixed with svn revision 982317",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker connection string does not allow both failover and compression,AMQ-2828,12482602,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jrobens,jrobens,15/Jul/10 10:43,27/Jul/10 12:56,30/Jan/20 16:55,27/Jul/10 12:56,5.3.0,,,,,,,,,,Connector,,,,0,"This works (spring resources.groovy in grails): 


_jmsConnectionFactory(ActiveMQConnectionFactory) {
        brokerURL = tcp://localhost:61616?jms.useCompression=true
      }


So does this: 
_jmsConnectionFactory(ActiveMQConnectionFactory) {
        brokerURL = failover:(tcp://localhost:61616)
  }


But this doesn't 
_jmsConnectionFactory(ActiveMQConnectionFactory) {
        brokerURL = failover:(tcp://localhost:61616?jms.useCompression=true)
  }


Error message is: 
195562 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Connect fail to: tcp://localhost:61616?jms.useCompression=true, reason: java.lang.IllegalArgumentException: Invalid connect parameters: {jms.useCompression=true}

Had a look at the code and it does seem to say this by default.


","apache camel, grails 1.3.2 - server is spring 2.5.6. activemq-all-5.3.0.jar activemq-pool5.3-SNAPSHOT.jar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-15 12:59:15.092,,,false,,,,,,,,,,,,,,,,,74782,,,Tue Jul 27 12:56:51 UTC 2010,,,,,,,,"0|i0tswn:",171992,,,,,,,,,,,,,,,,,,,"15/Jul/10 12:59;gtully;what about: failover:(tcp://localhost:61616)?jms.useCompression=true ?","15/Jul/10 13:02;jrobens;Gary - yes tried that too.","15/Jul/10 13:30;gtully;Can u validate against a trunk (5.4-SNAPSHOT) see the reference to the test in https://issues.apache.org/activemq/browse/AMQ-2823?focusedCommentId=60611&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_60611","27/Jul/10 12:56;jrobens;Gary 

Sorry - you are correct. The syntax outside the brackets works.

Thanks

John",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscribers receives nothing when reconnecting with a prefetch size less than the number of messages that don't match a message selector,AMQ-2580,12482587,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,philliph,philliph,22/Jan/10 14:46,23/Jul/10 15:39,30/Jan/20 16:55,23/Jul/10 15:39,5.3.0,,,,,,,5.4.0,,,Selector,,,,3,"1. Create a connection factory with a message prefetch size of PREFETCH_SIZE.
2. Create a durable subscriber to a Topic with a message selector of ""a=X"". 
3. Disconnect.
4. More than PREFETCH_SIZE messages are then put onto the Topic with a string property ""a=Y"".
5. Just one message is put onto the Topic with string property ""a=X"".
6. The durable subscriber connects again but it does not get the message with string property ""a=X"". In fact, it gets nothing.

It appears that upon reconnecting, the message selector is not respected when retrieving the message from storage.

I've got a unit test to demonstrate this plus a proposed fix.

{code}
### Eclipse Workspace Patch 1.0
#P activemq
Index: activemq-core/src/main/java/org/apache/activemq/store/kahadaptor/KahaTopicReferenceStore.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/store/kahadaptor/KahaTopicReferenceStore.java       (revision 900353)
+++ activemq-core/src/main/java/org/apache/activemq/store/kahadaptor/KahaTopicReferenceStore.java       (working copy)
@@ -306,7 +306,7 @@
                                 count++;
                                 container.setBatchEntry(msg.getMessageId(), entry);
                             } else {
-                                break;
+                                //break;
                             }
                         } else {
                             container.reset();
Index: activemq-core/src/main/java/org/apache/activemq/store/amq/RecoveryListenerAdapter.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/store/amq/RecoveryListenerAdapter.java      (revision 900353)
+++ activemq-core/src/main/java/org/apache/activemq/store/amq/RecoveryListenerAdapter.java      (working copy)
@@ -46,10 +46,11 @@
     
     public boolean recoverMessage(Message message) throws Exception {
         if (listener.hasSpace()) {
-            listener.recoverMessage(message);
-            lastRecovered = message.getMessageId();
-            count++;
-            return true;
+            if (listener.recoverMessage(message)) {
+                lastRecovered = message.getMessageId();
+                count++;
+                return true;
+            }
         }
         return false;
     }
Index: activemq-pool/src/test/java/org/apache/activemq/pool/PrefetchTest.java
===================================================================
--- activemq-pool/src/test/java/org/apache/activemq/pool/PrefetchTest.java      (revision 0)
+++ activemq-pool/src/test/java/org/apache/activemq/pool/PrefetchTest.java      (revision 0)
@@ -0,0 +1,174 @@
+package org.apache.activemq.pool;
+
+import java.io.File;
+
+import javax.jms.JMSException;
+import javax.jms.MessageConsumer;
+import javax.jms.MessageProducer;
+import javax.jms.Session;
+import javax.jms.TextMessage;
+import javax.jms.Topic;
+import javax.jms.TopicConnection;
+import javax.jms.TopicSession;
+
+import junit.framework.TestCase;
+
+import org.apache.activemq.ActiveMQConnectionFactory;
+import org.apache.activemq.ActiveMQPrefetchPolicy;
+import org.apache.activemq.broker.BrokerService;
+import org.apache.activemq.store.PersistenceAdapter;
+
+public class PrefetchTest extends TestCase {
+
+       private static final String TOPIC_NAME = ""topicName"";
+       private static final String CLIENT_ID = ""client_id"";
+       private static final String textOfSelectedMsg = ""good_message"";
+
+       protected TopicConnection connection;
+
+       private Topic topic;
+       private Session session;
+       private MessageProducer producer;
+       private PooledConnectionFactory connectionFactory;
+       private TopicConnection topicConnection;
+       private String bindAddress;
+       private BrokerService service;
+
+       protected void setUp() throws Exception {
+               bindAddress = ""tcp://localhost:61616"";
+               super.setUp();
+               initDurableBroker();
+               initConnectionFactory();
+               initTopic();
+
+       }
+
+       protected void tearDown() throws Exception {
+           shutdownClient();
+               connectionFactory.stop();
+               service.stop();
+               super.tearDown();
+       }
+
+       private void initConnection() throws JMSException {
+           System.out.println(""Initializing connection"");
+               connection = (TopicConnection) connectionFactory.createConnection(); 
+               connection.start();
+       }
+
+    public void testTopicIsDurableSmokeTest() throws Exception {
+        
+       initClient();
+       MessageConsumer consumer = createMessageConsumer();
+       System.out.println(""Consuming message"");
+       assertNull(consumer.receive(1));
+       shutdownClient();
+       consumer.close();
+    
+       sendMessages();
+       shutdownClient();
+    
+       initClient();
+       consumer = createMessageConsumer();
+    
+       System.out.println(""Consuming message"");
+       TextMessage answer1 = (TextMessage)consumer.receive(1000);
+       assertNotNull(answer1);
+    
+       consumer.close();
+    }
+    
+    private MessageConsumer createMessageConsumer() throws JMSException {
+        System.out.println(""creating durable subscriber"");
+       return session.createDurableSubscriber(topic, 
+               TOPIC_NAME, 
+               ""name='value'"", 
+               false);
+    }
+
+       private void initClient() throws JMSException {
+           System.out.println(""Initializing client"");
+           
+               initConnection();
+       initSession();
+       }
+
+       private void shutdownClient()
+                       throws JMSException {
+           System.out.println(""Closing session and connection"");
+        session.close();
+        connection.close();
+        session = null;
+        connection = null;
+       }
+
+       private void sendMessages()
+                       throws JMSException {
+           initConnection();
+
+               initSession();
+
+               System.out.println(""Creating producer"");
+               producer = session.createProducer(topic);
+
+               sendMessageThatFailsSelection();
+        
+               sendMessage(textOfSelectedMsg, ""value"");
+       }
+
+       private void initSession() throws JMSException {
+           System.out.println(""Initializing session"");
+               session = connection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
+       }
+
+       private void sendMessageThatFailsSelection() throws JMSException {
+               for (int i = 0 ; i < 5 ; i++) {
+                       String textOfNotSelectedMsg = ""Msg_"" + i;
+                       sendMessage(textOfNotSelectedMsg, ""not_value"");
+                       System.out.println(""#"");
+               }
+       }
+
+       private void sendMessage(
+                       String msgText,
+                       String propertyValue) throws JMSException {
+           System.out.println(""Creating message: "" + msgText);
+               TextMessage messageToSelect = session.createTextMessage(msgText);
+        messageToSelect.setStringProperty(""name"", propertyValue);
+        System.out.println(""Sending message"");
+               producer.send(messageToSelect);
+       }
+
+       protected void initConnectionFactory() {
+               ActiveMQConnectionFactory activeMqConnectionFactory = createActiveMqConnectionFactory();
+               connectionFactory = new PooledConnectionFactory(activeMqConnectionFactory);
+       }
+
+
+       private ActiveMQConnectionFactory createActiveMqConnectionFactory() {
+               ActiveMQConnectionFactory activeMqConnectionFactory = new ActiveMQConnectionFactory();
+        ActiveMQPrefetchPolicy prefetchPolicy = new ActiveMQPrefetchPolicy();
+        prefetchPolicy.setDurableTopicPrefetch(2);
+               activeMqConnectionFactory.setPrefetchPolicy(prefetchPolicy );
+        activeMqConnectionFactory.setClientID(CLIENT_ID);
+               return activeMqConnectionFactory;
+       }
+
+       private void initDurableBroker() throws Exception {
+               service = new BrokerService();
+               PersistenceAdapter persistenceAdaptor = service.getPersistenceAdapter();
+               File file = new File(""phills_durable_dir"");
+               persistenceAdaptor.setDirectory(file);
+               service.setTransportConnectorURIs(new String[] { bindAddress } );
+               service.setPersistent(true);
+               service.setUseJmx(true);
+               service.start();
+
+       }
+
+       private void initTopic() throws JMSException {
+               topicConnection = (TopicConnection) connectionFactory.createConnection();
+               TopicSession topicSession = topicConnection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
+               topic = topicSession.createTopic(TOPIC_NAME);
+       }
+}
{code}","phillip:~ henryp$ uname -a
Darwin phillip.fritz.box 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386 i386
phillip:~ henryp$ java -version
java version ""1.5.0_20""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_20-b02-315)
Java HotSpot(TM) Client VM (build 1.5.0_20-141, mixed mode, sharing)",cgsmithe,cpa199,daggerrz,wangyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/10 10:46;philliph;selector_patch_and_test.zip;https://issues.apache.org/jira/secure/attachment/12461599/selector_patch_and_test.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-01-25 16:09:16.542,,,false,,,,,,,,,,,,,,,,,74885,,,Fri Jul 23 15:39:27 UTC 2010,,,,Patch Available,,,,"0|i0rq3b:",159871,,,,,,,,,,,,,,,,,,,"23/Jan/10 10:46;philliph;A test to demonstrate the problem and a proposed patch.","25/Jan/10 16:09;gtully;thanks for the test and the patch. 
I wonder does your test work with the jdbc or kahadb store? If it does that would help validate the changes","26/Jan/10 14:40;wangyin;It seems the patch is only for kaha store.
I use the jdbc store and have not found any solution yet.
So I have to give up using the message selector.

","19/May/10 08:59;cpa199;Is there any plan to resolve this issue? This is a causing us problems too.","19/May/10 10:14;gtully;please vote for this issue so we can gauge interest. I will try to get to this for 5.4","23/Jul/10 15:39;gtully;resolved in 967134 - patch was great, test case was great, thanks. completed the impl for JDBC and kahaDB",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak when using ConnectionConsumer and a Persistent Broker,AMQ-2838,12482729,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rodos77,rodos77,19/Jul/10 22:10,20/Jul/10 00:13,30/Jan/20 16:55,20/Jul/10 00:13,5.3.1,,,,,,,5.4.0,,,Broker,,,,0,"I found a memory leak in ActiveMQ when using an embedded broker with persistence (enabled by default) and using the connection to create a ConnectionConsumer.  The memory leak occurs after performing the following steps:

1. acquire a Connection (ActiveMQConnection) from a ConnectionFactory (ActiveMQConnectionFactory)
2. use the Connection to create a ConnectionConsumer
3. close the ConnectionConsumer
4. close the Connection
5. repeat steps 1 and 4 from above

The memory leak is in org.apache.activemq.thread.Scheduler.  After the last connection is closed, the embedded broker is shutdown.  When this happens all AMQ threads are killed except for the ""ActiveMQ Scheduler"" thread.  This is a Timer that contains a queue of scheduled tasks.  If no brokers are running, this queue should be empty.  In fact if persistence is turned off on the broker, the queue is correctly emptied after the last connection is closed.  However, with persistence on, the queue does not get emptied completely.

The memory leak is directly proportional to the number of ConnectionConsumers that are created on the connection.  That is, the more ConnectionConsumers are created, the more tasks will remain on the Scheduler's task queue after the connection is closed.

In our test environment, we create many ConnectionConsumer objects for each test and run many such tests.  The memory leak accumulates quickly and we soon get an OutOfMemoryException.

I'm attaching a junit test that illustrates the problem.  The NUM_OF_CYCLES and NUM_OF_CONNECTION_CONSUMERS constants can be increased to see how the memory leak grows with increased number of iterations and ConnectionConsumer objects created, respectively.  Also, persistence can be turned off on the broker url to see that the test succeeds in that case (i.e. no RAM leak).",,rodos77,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jul/10 22:12;rodos77;ConnectionConsumerMemoryLeakTest.java;https://issues.apache.org/jira/secure/attachment/12461770/ConnectionConsumerMemoryLeakTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-07-20 00:13:12.901,,,false,,,,,,,,,,,,,,,,,74777,,,Tue Jul 20 00:13:12 UTC 2010,,,,,,,,"0|i0rq3r:",159873,,,,,,,,,,,,,,,,,,,"20/Jul/10 00:13;rajdavies;The use of static classes (like Scheduler) is no longer used in ActiveMQ to prevent problems like this",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in broker when subscribing to a topic using TCP connector + nolocal,AMQ-1876,12482738,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,piepera,piepera,05/Aug/08 18:34,19/Jul/10 21:21,30/Jan/20 16:55,19/Jul/10 21:21,5.1.0,5.2.0,,,,,,5.4.0,,,Broker,,,,0,"I'm encountering what appears to be a memory leak in the BrokerService. The symptom is that the BrokerService's memory usage increases with each message that is sent to a topic. The memory usage increases proportionally with the size of the message, as though each message is being stored permanently in memory.

I've included an example which continuously sends messages around 1 megabyte in size to a topic with a single subscriber. If you run the included BrokerMemoryLeak.java, you should see the following output:

Memory Usage:     0     Memory Percent:   0     Send count: 0     
Memory Usage:     16016576    Memory Percent:   23    Send count: 16    
Memory Usage:     38039368    Memory Percent:   56    Send count: 38    
Memory Usage:     61063196    Memory Percent:   90    Send count: 61    
Memory Usage:     68070448    Memory Percent:   101   Send count: 68    
Memory Usage:     68070448    Memory Percent:   101   Send count: 68    

BrokerService's memory usage climbs steadily until the memory percent hits 100. Then, messages stop being sent. There are several ways to make the bug stop happening:
  * Switch from using a Topic to a Queue
  * Switch the Broker address to 'vm://foo', so it's not using TCP
  * Set the third argument in the 'createConsumer' call to false. (the noLocal argument)
  * Don't register the MessageListener

",Spring 2.5.4,piepera,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Aug/08 18:34;piepera;ASF.LICENSE.NOT.GRANTED--BrokerMemoryLeak.java;https://issues.apache.org/jira/secure/attachment/12461172/ASF.LICENSE.NOT.GRANTED--BrokerMemoryLeak.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-07-19 21:21:25.145,,,false,,,,,,,,,,,,,,,,,84743,,,Mon Jul 19 21:21:25 UTC 2010,,,,,,,,"0|i0rq3z:",159874,,,,,,,,,,,,,,,,,,,"19/Jul/10 21:21;tabish;I've run the provided test case along with a unit test I created based off the sample with the latest 5.4 sample and cannot reproduce the reported behaviour.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB configuration of properties archiveDataLogs & directoryArchive,AMQ-2830,12482614,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,sougandhgm,sougandhgm,16/Jul/10 10:28,16/Jul/10 10:57,30/Jan/20 16:55,16/Jul/10 10:57,5.3.2,,,,,,,5.4.0,,,Broker,,,,0,"  Test Config:
  <persistenceAdapter>
            <kahaDB directory=""${activemq.base}/data/kahadb"" 
		journalMaxFileLength=""32mb"" 
		archiveDataLogs=""true""
		directoryArchive=""${activemq.base}/archivedmsgs""
		maxAsyncJobs=""10000""
		databaseLockedWaitDelay=""10000""/>
        </persistenceAdapter>


Unable to configure archiveDataLogs=""true"", directoryArchive=""${activemq.base}/archivedmsgs"", databaseLockedWaitDelay=""10000""
Throws similar errors for all the mentioned attributes.
Keeps throwing th below error.

0_20\jre
  Heap sizes: current=15872k  free=14582k  max=506816k
    JVM args: -Dcom.sun.management.jmxremote -Xmx512M -Dorg.apache.activemq.UseD
edicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dact
ivemq.classpath=C:\Program Files (x86)\apache-activemq-5.3.2\bin\../conf; -Dacti
vemq.home=C:\Program Files (x86)\apache-activemq-5.3.2\bin\.. -Dactivemq.base=C:
\Program Files (x86)\apache-activemq-5.3.2\bin\..
ACTIVEMQ_HOME: C:\Program Files (x86)\apache-activemq-5.3.2\bin\..
ACTIVEMQ_BASE: C:\Program Files (x86)\apache-activemq-5.3.2\bin\..
Loading message broker from: xbean:file:C:/Program%20Files%20(x86)/apache-active
mq-5.3.2/conf/activemq-stomp1.xml
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.spr
ingframework.beans.factory.BeanCreationException: Error creating bean with name
'org.apache.activemq.xbean.XBeanBrokerService#0' defined in URL [file:C:/Program
 Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Cannot create inne
r bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenc
eAdapter] while setting bean property 'persistenceAdapter'; nested exception is
org.springframework.beans.factory.BeanCreationException: Error creating bean wit
h name '(inner bean)#1' defined in URL [file:C:/Program Files (x86)/apache-activ
emq-5.3.2/conf/activemq-stomp1.xml]: Error setting property values; nested excep
tion is org.springframework.beans.NotWritablePropertyException: Invalid property
 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.KahaDBPersis
tenceAdapter]: Bean property 'directoryArchive' is not writable or has an invali
d setter method. Does the parameter type of the setter match the return type of
the getter?
java.lang.RuntimeException: Failed to execute start task. Reason: org.springfram
ework.beans.factory.BeanCreationException: Error creating bean with name 'org.ap
ache.activemq.xbean.XBeanBrokerService#0' defined in URL [file:C:/Program Files
(x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Cannot create inner bean
'(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapte
r] while setting bean property 'persistenceAdapter'; nested exception is org.spr
ingframework.beans.factory.BeanCreationException: Error creating bean with name
'(inner bean)#1' defined in URL [file:C:/Program Files (x86)/apache-activemq-5.3
.2/conf/activemq-stomp1.xml]: Error setting property values; nested exception is
 org.springframework.beans.NotWritablePropertyException: Invalid property 'direc
toryArchive' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAd
apter]: Bean property 'directoryArchive' is not writable or has an invalid sette
r method. Does the parameter type of the setter match the return type of the get
ter?
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand
.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.ja
va:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creati
ng bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in UR
L [file:C:/Program Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]:
Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahad
b.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; ne
sted exception is org.springframework.beans.factory.BeanCreationException: Error
 creating bean with name '(inner bean)#1' defined in URL [file:C:/Program Files
(x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting property va
lues; nested exception is org.springframework.beans.NotWritablePropertyException
: Invalid property 'directoryArchive' of bean class [org.apache.activemq.store.k
ahadb.KahaDBPersistenceAdapter]: Bean property 'directoryArchive' is not writabl
e or has an invalid setter method. Does the parameter type of the setter match t
he return type of the getter?
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveInnerBean(BeanDefinitionValueResolver.java:230)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getOb
ject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistr
y.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBe
an(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.
preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finish
BeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refres
h(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(
ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(
ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext
(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBroker
Factory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.j
ava:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.j
ava:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCom
mand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:91)
        ... 10 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creati
ng bean with name '(inner bean)#1' defined in URL [file:C:/Program Files (x86)/a
pache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting property values; n
ested exception is org.springframework.beans.NotWritablePropertyException: Inval
id property 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.K
ahaDBPersistenceAdapter]: Bean property 'directoryArchive' is not writable or ha
s an invalid setter method. Does the parameter type of the setter match the retu
rn type of the getter?
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveInnerBean(BeanDefinitionValueResolver.java:219)
        ... 33 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid prope
rty 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.KahaDBPer
sistenceAdapter]: Bean property 'directoryArchive' is not writable or has an inv
alid setter method. Does the parameter type of the setter match the return type
of the getter?
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrappe
rImpl.java:801)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrappe
rImpl.java:651)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(
AbstractPropertyAccessor.java:78)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(
AbstractPropertyAccessor.java:59)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
        ... 39 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationExcept
ion: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService
#0' defined in URL [file:C:/Program Files (x86)/apache-activemq-5.3.2/conf/activ
emq-stomp1.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.act
ivemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persis
tenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreatio
nException: Error creating bean with name '(inner bean)#1' defined in URL [file:
C:/Program Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error se
tting property values; nested exception is org.springframework.beans.NotWritable
PropertyException: Invalid property 'directoryArchive' of bean class [org.apache
.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'directoryArchiv
e' is not writable or has an invalid setter method. Does the parameter type of t
he setter match the return type of the getter?
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Er
ror creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' def
ined in URL [file:C:/Program Files (x86)/apache-activemq-5.3.2/conf/activemq-sto
mp1.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.s
tore.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAd
apter'; nested exception is org.springframework.beans.factory.BeanCreationExcept
ion: Error creating bean with name '(inner bean)#1' defined in URL [file:C:/Prog
ram Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting p
roperty values; nested exception is org.springframework.beans.NotWritablePropert
yException: Invalid property 'directoryArchive' of bean class [org.apache.active
mq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'directoryArchive' is n
ot writable or has an invalid setter method. Does the parameter type of the sett
er match the return type of the getter?
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand
.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.ja
va:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creati
ng bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in UR
L [file:C:/Program Files (x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]:
Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahad
b.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; ne
sted exception is org.springframework.beans.factory.BeanCreationException: Error
 creating bean with name '(inner bean)#1' defined in URL [file:C:/Program Files
(x86)/apache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting property va
lues; nested exception is org.springframework.beans.NotWritablePropertyException
: Invalid property 'directoryArchive' of bean class [org.apache.activemq.store.k
ahadb.KahaDBPersistenceAdapter]: Bean property 'directoryArchive' is not writabl
e or has an invalid setter method. Does the parameter type of the setter match t
he return type of the getter?
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveInnerBean(BeanDefinitionValueResolver.java:230)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getOb
ject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistr
y.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBe
an(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.
preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finish
BeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refres
h(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(
ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(
ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext
(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBroker
Factory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.j
ava:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.j
ava:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCom
mand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:91)
        ... 10 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creati
ng bean with name '(inner bean)#1' defined in URL [file:C:/Program Files (x86)/a
pache-activemq-5.3.2/conf/activemq-stomp1.xml]: Error setting property values; n
ested exception is org.springframework.beans.NotWritablePropertyException: Inval
id property 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.K
ahaDBPersistenceAdapter]: Bean property 'directoryArchive' is not writable or ha
s an invalid setter method. Does the parameter type of the setter match the retu
rn type of the getter?
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveInnerBean(BeanDefinitionValueResolver.java:219)
        ... 33 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid prope
rty 'directoryArchive' of bean class [org.apache.activemq.store.kahadb.KahaDBPer
sistenceAdapter]: Bean property 'directoryArchive' is not writable or has an inv
alid setter method. Does the parameter type of the setter match the return type
of the getter?
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrappe
rImpl.java:801)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrappe
rImpl.java:651)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(
AbstractPropertyAccessor.java:78)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(
AbstractPropertyAccessor.java:59)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)
        ... 39 more
C:\Program Files (x86)\apache-activemq-5.3.2\bin>","Windows 7,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-16 10:57:49.054,,,false,,,,,,,,,,,,,,,,,74781,,,Fri Jul 16 10:57:49 UTC 2010,,,,,,,,"0|i0rqqv:",159977,,,,,,,,,,,,,,,,,,,"16/Jul/10 10:57;gtully;These attributes are exposed in version 5.4 - try a 5.4-SNAPSHOT -  I updated the doc page to indicate same",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of Brokers: NIO-Transport: Members die after some hours,AMQ-2811,12482764,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dialsc,dialsc,06/Jul/10 13:26,15/Jul/10 10:19,30/Jan/20 16:55,15/Jul/10 10:19,5.3.1,,,,,,,5.4.0,,,Broker,,,,0,"i have a network of brokers configured with four nodes where each node knows the other three nodes through the networkConnector config. two of these four nodes are currently down/unavailable. the other two nodes are working for about four hours then they die. in the log file i see a lot of entries like this one:

2010-07-05 00:53:01,741 | ERROR | Could not stop service: tcp://null:0. Reason: java.lang.NullPointerException | org.apache.activemq.transport.nio.NIOTransport | Simple Discovery Agent: java.util.concurrent.ThreadPoolExecutor$Worker@f782b1
java.lang.NullPointerException
        at org.apache.activemq.transport.nio.NIOTransport.doStop(NIOTransport.java:152)
        at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
        at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:500)
        at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:121)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
        at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:91)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
        at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
        at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceAdd(DiscoveryNetworkConnector.java:134)
        at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent$1.run(SimpleDiscoveryAgent.java:164)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619 ","RedHat Linux, Java 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-15 10:19:16.021,,,false,,,,,,,,,,,,,,,,,74789,,,Thu Jul 15 10:19:16 UTC 2010,,,,,,,,"0|i0rqs7:",159983,,,,,,,,,,,,,,,,,,,"15/Jul/10 10:19;gtully;fix for NPE in r964367",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"potential hang with failover, transactions and slow thread creation with outstanding commit - close blocks pending dispatch  FailoverConsumerOutstandingCommitTest intermittent failure",AMQ-2693,12482799,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,12/Apr/10 13:58,13/Jul/10 09:32,30/Jan/20 16:55,12/Apr/10 14:04,5.3.0,5.3.1,,,,,,5.4.0,,,Broker,,,,0,"potential dead lock pending dispatch that is blocked by an outstanding commit after failover.

Log indicates:{code}
WARN  ActiveMQConnection             - dispatch paused, waiting for outstanding dispatch interruption processing (x) to complete..
{code}


Thread Dump:{code}
Full thread dump Java HotSpot(TM) Server VM (14.0-b16 mixed mode):
...
""ActiveMQ Transport: tcp:///127.0.0.1:49284"" daemon prio=3 tid=0x0068f800 nid=0x32 runnable [0x56ffe000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
	at java.io.DataOutputStream.flush(DataOutputStream.java:106)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:168)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:243)
	- locked <0x5c2daab0> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x5c2da520> (a java.lang.Object)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1205)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:790)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:750)
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:647)
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:592)
	- locked <0x5c2db3a0> (a java.lang.Object)
	- locked <0x5c2db3a8> (a java.lang.Object)
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:158)
	at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1548)
	at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1500)
	- locked <0x5c2db500> (a java.util.ArrayList)
	- locked <0x5c2db518> (a java.lang.Object)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1585)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1219)
	- locked <0x5c2db520> (a org.apache.activemq.broker.region.Queue$3)
	at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1406)
	at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:377)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:279)
	- locked <0x5c2db590> (a java.lang.Object)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:380)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:89)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:533)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
	- locked <0x5c2dab30> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
	at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" prio=3 tid=0x007c9000 nid=0x2e waiting on condition [0x569fe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x5c2b1950> (a java.util.concurrent.CountDownLatch$Sync)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:947)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1239)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:253)
	at org.apache.activemq.ActiveMQConnection.waitForTransportInterruptionProcessing(ActiveMQConnection.java:2248)
	at org.apache.activemq.ActiveMQConnection$2.processMessageDispatch(ActiveMQConnection.java:1679)
	at org.apache.activemq.command.MessageDispatch.visit(MessageDispatch.java:108)
	at org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1676)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:168)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
	- locked <0x5c2db138> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
	at java.lang.Thread.run(Thread.java:619)


""ActiveMQ Session Task"" prio=3 tid=0x0076f000 nid=0x25 waiting on condition [0x55ffe000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x5c2e3cd0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1262)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:666)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:299)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:558)
	at org.apache.activemq.transport.failover.FailoverConsumerOutstandingCommitTest$2.onMessage(FailoverConsumerOutstandingCommitTest.java:155)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1204)
	- locked <0x5c2c6088> (a java.lang.Object)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)


""ActiveMQ Scheduler"" daemon prio=3 tid=0x006e4c00 nid=0xf waiting for monitor entry [0x573ff000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.ActiveMQMessageConsumer.clearMessagesInProgress(ActiveMQMessageConsumer.java:661)
	- waiting to lock <0x5c2c6088> (a java.lang.Object)
	at org.apache.activemq.ActiveMQSession$2.run(ActiveMQSession.java:654)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)

""main"" prio=3 tid=0x00030800 nid=0x2 waiting for monitor entry [0x7eb7d000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.MessageDispatchChannel.stop(MessageDispatchChannel.java:115)
	- waiting to lock <0x5c2c6088> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageConsumer.stop(ActiveMQMessageConsumer.java:1312)
	at org.apache.activemq.ActiveMQSession.stop(ActiveMQSession.java:1643)
	at org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:544)
	- locked <0x5c2ae5d8> (a java.util.concurrent.CopyOnWriteArrayList)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:597)
	at org.apache.activemq.transport.failover.FailoverConsumerOutstandingCommitTest.doTestFailoverConsumerDups(FailoverConsumerOutstandingCommitTest.java:185)
	at org.apache.activemq.transport.failover.FailoverConsumerOutstandingCommitTest.testFailoverConsumerDups(FailoverConsumerOutstandingCommitTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:165)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:289)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1005)
{code}",loaded machine where thread creation is slow,justinpitts@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-13 08:34:13.939,,,false,,,,,,,,,,,,,,,,,74842,,,Tue Jul 13 09:32:03 UTC 2010,,,,,,,,"0|i0rq47:",159875,,,,,,,,,,,,,,,,,,,"12/Apr/10 14:04;gtully;resolved r933240  
prefetch=0|1 is a workaround for this issue as is this fix.","13/Jul/10 08:34;eric-awl;Problem seems to be localized here 

When it works Ok : 

 09:11:02,704 [ActiveMQ Task  ] DEBUG AbstractRegion                 - localhost removing consumer: ID:td0sib01s.priv.atos.fr-53632-1279005032084-2:3:2:1 for destination: queue://FailoverWithOutstandingCommit 

2010-07-13 09:11:02,705 [127.0.0.1:61616] WARN  FailoverTransport              - Transport failed to tcp://localhost:61616 , attempting to automatically reconnect due to: java.io.EOFException 
2010-07-13 09:11:02,705 [ActiveMQ Task  ] DEBUG Queue                          - remove sub: QueueSubscription: consumer=ID:td0sib01s.priv.atos.fr-53632-1279005032084-2:3:2:1, destinations=1, dispatched=1, delivered=0, pending=0, lastDeliveredSeqId: 0, dequeues: 0, dispatched: 1, inflight: 1 
2010-07-13 09:11:02,705 [127.0.0.1:61616] DEBUG FailoverTransport              - Transport failed with the following exception: 
java.io.EOFException 
        at java.io.DataInputStream.readInt(DataInputStream.java:375) 
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269) 
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:211) 
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186) 
        at java.lang.Thread.run(Thread.java:619) 
2010-07-13 09:11:02,705 [127.0.0.1:61616] DEBUG ActiveMQConnection             - transport interrupted, dispatchers: 1 


2010-07-13 09:11:02,706 [iveMQ Scheduler] DEBUG ActiveMQMessageConsumer        - ID:td0sib01s.priv.atos.fr-53632-1279005032084-2:3:2:1 clearing dispatched list (0) on transport interrupt 


2010-07-13 09:11:02,706 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[tcp://localhost:61616] 
2010-07-13 09:11:02,706 [ActiveMQ Task  ] DEBUG Queue                          - FailoverWithOutstandingCommit toPageIn: 0, Inflight: 0, pagedInMessages.size 1, enqueueSize: 1 
2010-07-13 09:11:02,706 [ActiveMQ Task  ] DEBUG FailoverTransport              - Attempting connect to: tcp://localhost:61616 

2010-07-13 09:11:02,707 [ActiveMQ Task  ] DEBUG AbstractRegion                 - localhost removing consumer: ID:td0sib01s.priv.atos.fr-53632-1279005032084-2:3:-1:1 for destination: topic://ActiveMQ.Advisory.TempQueue,topic://ActiveMQ.Advisory.TempTopic 
..... 


When it blocks 

2010-07-13 09:00:35,721 [ActiveMQ Task  ] DEBUG AbstractRegion                 - localhost removing consumer: ID:td0sib02s.priv.atos.fr-59537-1279004433513-2:0:-1:1 for destination: topic://ActiveMQ.Advisory.TempQueue,topic://ActiveMQ.Advisory.TempTopic 
... 
2010-07-13 09:00:35,722 [ActiveMQ Task  ] DEBUG AbstractRegion                 - localhost removing consumer: ID:td0sib02s.priv.atos.fr-59537-1279004433513-2:0:2:1 for destination: queue://FailoverWithOutstandingCommit 


2010-07-13 09:00:35,722 [ActiveMQ Task  ] DEBUG Queue                          - remove sub: QueueSubscription: consumer=ID:td0sib02s.priv.atos.fr-59537-1279004433513-2:0:2:1, destinations=1, dispatched=11, delivered=1, pending=0, lastDeliveredSeqId: 0, dequeues: 0, dispatched: 11, inflight: 11 
2010-07-13 09:00:35,723 [127.0.0.1:61616] WARN  FailoverTransport              - Transport failed to tcp://localhost:61616 , attempting to automatically reconnect due to: java.io.EOFException 
2010-07-13 09:00:35,724 [127.0.0.1:61616] DEBUG FailoverTransport              - Transport failed with the following exception: 

2010-07-13 09:00:35,724 [127.0.0.1:61616] DEBUG FailoverTransport              - Transport failed with the following exception: 
java.io.EOFException 
        at java.io.DataInputStream.readInt(DataInputStream.java:375) 
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269) 
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:211) 
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186) 
        at java.lang.Thread.run(Thread.java:619) 
2010-07-13 09:00:35,724 [BrokerService  ] DEBUG Queue                          - FailoverWithOutstandingCommit toPageIn: 0, Inflight: 0, pagedInMessages.size 20, enqueueSize: 20 
2010-07-13 09:00:35,725 [127.0.0.1:61616] DEBUG ActiveMQConnection             - transport interrupted, dispatchers: 1 
... 
2010-07-13 09:01:05,907 [127.0.0.1:61616] WARN  ActiveMQConnection             - dispatch paused, waiting for outstanding dispatch interruption processing (1) to complete.. 
.... 


It's the way messageConsumers (and corresponding sessions) are cleared that impacts the ""transportInterruptionProcessingComplete""  countdown latch value 

Eric-AWL 

","13/Jul/10 09:32;gtully;Are you seeing this failure on trunk or on the 5.3.2 branch? do you need to reopen this issue?

TRACE level debug will also help a little here. Any outstanding connection/consumer/producer is replayed by the ConnectionStateTracker and this is visible with TRACE.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp+nio transport fails sending byte messages with NULL chars,AMQ-2822,12482728,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,12/Jul/10 09:51,12/Jul/10 13:58,30/Jan/20 16:55,12/Jul/10 13:58,5.3.0,,,,,,,5.4.0,,,Broker,,,,0,"The problem is that routine for parsing commands doesn't take Content-length header into account, but only searches for the next NULL character.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74784,,,Mon Jul 12 13:58:22 UTC 2010,,,,,,,,"0|i0rq8v:",159896,,,,,,,,,,,,,,,,,,,"12/Jul/10 13:58;dejanb;Fixed with svn revision 963282",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ startup fails during Startup due to NullPointerException in KahaDB,AMQ-2757,12482804,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tschoeftner,tschoeftner,02/Jun/10 11:29,12/Jul/10 11:20,30/Jan/20 16:55,12/Jul/10 11:20,5.2.0,5.3.0,5.3.1,,,,,5.4.0,,,Message Store,,,,0,"During a long-time test run several message consumers listening to peristent queues crashed.
The queues were filling up rapidly, so that KahaDB allocated 3GB of disk space (max. limit 10GB) after 5hours (approx 800k messages).
At that point the broker was extremely slow and non-responsive to new messages.
JConsole showed that 1GB of RAM was used and most effort was necessary for garbage collection.
Although the max memory usage limit is configured to 1GB, AMQ should rather allocate disc space for messages to queues without containers.

AMQ shutdown took extremely long (several limits).
The subsequent AMQ restart keeps failing with the following exception:
java.lang.NullPointerException
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:109)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:120)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:223)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:220)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:252)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:464)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:268)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:178)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:101)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1713)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:473)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
...

The problem is reproducible also reproducible with recent nightly builds of AMQ/Fuse 5.4.0.


-Tom","Red Hat Enterprise Linux, Kernel V2.6.18",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jun/10 11:35;tschoeftner;activemq.log;https://issues.apache.org/jira/secure/attachment/12461715/activemq.log","02/Jun/10 11:35;tschoeftner;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461717/activemq.xml","02/Jun/10 11:40;tschoeftner;wrapper.conf;https://issues.apache.org/jira/secure/attachment/12461718/wrapper.conf","02/Jun/10 11:35;tschoeftner;wrapper.log;https://issues.apache.org/jira/secure/attachment/12461716/wrapper.log",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2010-06-22 00:00:07.603,,,false,,,,,,,,,,,,,,,,,74812,,,Tue Jun 22 00:00:07 UTC 2010,,,,,,,,"0|i0rq8f:",159894,,,,,,,,,,,,,,,,,,,"02/Jun/10 11:35;tschoeftner;Attachd AMQ / wrapper logs and amq config","02/Jun/10 11:40;tschoeftner;attached wrapper config","10/Jun/10 05:27;tschoeftner;The problem is related to the VMQueueCursor being active.
If the queues are switched back to the default queue cursor, AMQ starts up smoothly.
However, the behaviour is strange as AMQ is nowhere near it's memory limits when it crashes.","22/Jun/10 00:00;chirino;Just committed a fix that should resolved the issue reported here.  

Fixed in rev 956741 on trunk.  Try it out in a subsequent snapshot.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The activeMQ port supports low and medium strength ciphers ,AMQ-2384,12482807,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,schandrashekar,schandrashekar,11/Sep/09 05:42,12/Jul/10 09:33,30/Jan/20 16:55,01/Apr/10 16:57,5.2.0,,,,,,,5.4.0,,,Connector,,,,0,"On running a Tenable nessus scan against the machine where ActiveMQ is running, we see that the port 61616 , the TCP connector port accepts Low and Medium strength ciphers by default. This may be a security risk and therefore we need a way to specify which ciphers to support.",We are running the ActiveMQ 5.2.0  over a SLES 11 64 bit  machine. In the configuration file activemq.xml there is no way to specify the supported ciphers. ,phil.pickett@springsource.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Mar/10 17:26;phil.pickett@springsource.com;SSLEnableCiphers.patch;https://issues.apache.org/jira/secure/attachment/12461641/SSLEnableCiphers.patch","17/Sep/09 15:14;gtully;setSslSocketOptions.patch;https://issues.apache.org/jira/secure/attachment/12461530/setSslSocketOptions.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-09-14 14:43:23.778,,,false,,,,,,,,,,,,,,,,,74962,,,Mon Jul 12 09:33:03 UTC 2010,,,,,,,,"0|i0rq4f:",159876,Regression,,,,,,,,,,,,,,,,,,"14/Sep/09 14:43;gtully;if introspection support can deal with a string[], uri parameters of the form ""socket.xxx"" could do it on the server url to set the enabled cipher suites on an ssl socket. Configuration of the tls layer could also achieve this.","16/Sep/09 11:26;schandrashekar;Ya.. i tried specifying the ciphers as a uri parameter ""socket.enabledCipherSuites"" , by using comma separated strings , seems like this does not work. I dont think the introspection support can deal with String[].  We want to do this at the application level rather than at the system level so configuring the tls layer is not a good alternative. I feel we need to provide a tag for specifying the ciphers under the <TransportConnector> , but not sure if its the right way to do this. ","17/Sep/09 15:14;gtully;this is a patch that makes an effort to get setting ssl options via ?transport.XX options but there is a problem with permissions on it atm","23/Mar/10 12:03;phil.pickett@springsource.com;Is this the correct way to set the SSL enabledCipherSuites with this patch applied?

        <transportConnectors>
            <transportConnector name=""openwire"" uri=""ssl://0.0.0.0:61616?transport.enabledCipherSuites=SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA""/>
        </transportConnectors>","23/Mar/10 14:02;gtully;The patch just allows list values to be passed as arguments, from the test in the patch, it looks like {code}return ""ssl://localhost:0?transport.enabledCipherSuites=das,ras""{code} is what is expected.

The values are passed to http://java.sun.com/j2se/1.5.0/docs/api/javax/net/ssl/SSLSocket.html#setEnabledCipherSuites(java.lang.String[]) so they need to match whatever is returned from http://java.sun.com/j2se/1.5.0/docs/api/javax/net/ssl/SSLSocket.html#getEnabledCipherSuites()

What are you seeing?
","23/Mar/10 15:42;phil.pickett@springsource.com;Gary - That was operator error on my part.  I assumed this was setup with a default of ""das,ras"" but was also configurable in the activemq.xml.  I should have known better since I didn't see anything in the patch to allow that.  I think I picked up exactly what was expected in my scan.  I'll rebuild after setting my preferred cipher suites and check again.","23/Mar/10 17:47;phil.pickett@springsource.com;Actually, I looked at the test case and modified my transport connector config in what I thought was the way to enable the ciphers I wanted with:

<transportConnector name=""openwire"" uri=""ssl://0.0.0.0:61616?transport.enabledCipherSuites=SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA""/>

It looks to me when running an SSL scan that this is not being set.  When I run a PCI scan against a similarly configured Tomcat instance I see the weak ciphers are disabled.","25/Mar/10 15:57;phil.pickett@springsource.com;Gary - Have I enabled the CipherSuites correctly with the URI shown above?  It seems to match the test case.  Thanks, Phil","25/Mar/10 16:47;gtully;Phil, recall that I never got this patch to work completely, I got some weird permissions errors. The main bit of the patch was to allow lists to be set as properties. It may need some more work and some more tests. It was only intended as  place holder for a 'good start' to a solution.
Gary.","30/Mar/10 17:25;phil.pickett@springsource.com;Gary, I've added a couple mods to the SslTransportServer.java class and created a new 5.3-based patch (SSLEnableCiphers.patch) containing these along your changes.  With the resulting activemq-core-5.3.0.jar and transportConnect:

            <transportConnector name=""openwire"" uri=""ssl://0.0.0.0:61616?transport.enabledCipherSuites=SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA""/>

I am able to disable low ciphers.","30/Mar/10 17:27;phil.pickett@springsource.com;ActiveMQ 5.3 based patch to implement transport's enabledCipherSuites option.

My activemq.xml is standard for 5.3 with the following additions:

        <amq:sslContext>
            <amq:sslContext
                protocol=""SSLv3""
                keyStore=""file:${activemq.base}/SSL/broker.ks"" keyStorePassword=""changeit""
                trustStore=""file:${activemq.base}/SSL/client.ts"" trustStorePassword=""changeit""/>
        </amq:sslContext>

-- and --

        <transportConnectors>
            <transportConnector name=""openwire"" uri=""ssl://0.0.0.0:61616?transport.enabledCipherSuites=SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA""/>
        </transportConnectors>

My goal was to disable low ciphers as documented here for Tomcat:

http://www.cpug.org/forums/check-point-utm-1-appliances/11716-pci-vulnerability-assessment-report-utm-1-total-security-570-a.html

To test this, I used the ssl-cipher-check.pl script from http://www.unspecific.com/ssl/.  With the above transport URI (and without the enabledCipherSuites option and the patch) the script returns 22 total ciphers and 10 WEAK ciphers.  With the patch and the option, the script returns 6 ciphers found.  See output below.

Phil

[phil@fedora12 perl]$ ./ssl-cipher-check.pl localhost 61616
Testing localhost:61616
   SSLv3:RC4-MD5 - ENABLED - STRONG 128 bits 
   SSLv3:EDH-RSA-DES-CBC3-SHA - ENABLED - STRONG 168 bits 
** SSLv3:EDH-RSA-DES-CBC-SHA - ENABLED - WEAK 56 bits **
   SSLv3:DHE-RSA-AES128-SHA - ENABLED - STRONG 128 bits 
   SSLv3:DES-CBC3-SHA - ENABLED - STRONG 168 bits 
   SSLv3:RC4-SHA - ENABLED - STRONG 128 bits 
** SSLv3:EXP-EDH-RSA-DES-CBC-SHA - ENABLED - WEAK 40 bits **
** SSLv3:DES-CBC-SHA - ENABLED - WEAK 56 bits **
** SSLv3:EXP-RC4-MD5 - ENABLED - WEAK 40 bits **
** SSLv3:EXP-DES-CBC-SHA - ENABLED - WEAK 40 bits **
   SSLv3:AES128-SHA - ENABLED - STRONG 128 bits 

   TLSv1:RC4-MD5 - ENABLED - STRONG 128 bits 
   TLSv1:EDH-RSA-DES-CBC3-SHA - ENABLED - STRONG 168 bits 
** TLSv1:EDH-RSA-DES-CBC-SHA - ENABLED - WEAK 56 bits **
   TLSv1:DHE-RSA-AES128-SHA - ENABLED - STRONG 128 bits 
   TLSv1:DES-CBC3-SHA - ENABLED - STRONG 168 bits 
   TLSv1:RC4-SHA - ENABLED - STRONG 128 bits 
** TLSv1:EXP-EDH-RSA-DES-CBC-SHA - ENABLED - WEAK 40 bits **
** TLSv1:DES-CBC-SHA - ENABLED - WEAK 56 bits **
** TLSv1:EXP-RC4-MD5 - ENABLED - WEAK 40 bits **
** TLSv1:EXP-DES-CBC-SHA - ENABLED - WEAK 40 bits **
   TLSv1:AES128-SHA - ENABLED - STRONG 128 bits 


WARNING: Self Signed Certificate
*WARNING* 10 WEAK Ciphers Enabled.
Total Ciphers Enabled: 22
[phil@fedora12 perl]$ ./ssl-cipher-check.pl localhost 61616
Testing localhost:61616
   SSLv3:RC4-MD5 - ENABLED - STRONG 128 bits 
   SSLv3:EDH-RSA-DES-CBC3-SHA - ENABLED - STRONG 168 bits 
   SSLv3:RC4-SHA - ENABLED - STRONG 128 bits 

   TLSv1:RC4-MD5 - ENABLED - STRONG 128 bits 
   TLSv1:EDH-RSA-DES-CBC3-SHA - ENABLED - STRONG 168 bits 
   TLSv1:RC4-SHA - ENABLED - STRONG 128 bits 


WARNING: Self Signed Certificate
Total Ciphers Enabled: 6
","31/Mar/10 03:36;schandrashekar;Phil,

So will this fix be available with 5.4.0 ?","31/Mar/10 16:59;gtully;applied some changes in r929618 to support this so that it will make 5.4

Phil, I did not apply your patch directly but went back to why the introspector was not working and there was a simple fix to ensure we did not reference the internal tls impl class for reflection. With that change, it is possible to set arbitrary options on SSLServerSocket via transportOptions and with the properties editor to pass a string array argument.

I added some test that demonstrate. Thanks for your work on this and the patch, it helped :-)","01/Apr/10 16:34;djencks;The change introduces a pretty hard dependency on spring classes, otherwise unnecessary to run amq (geronimo is running amq under aries bluerpint).  Geronimo has some code that produces a StringArrayEditor, I'll look into porting it.","01/Apr/10 16:57;djencks;Adapted geronimo code for StringArrayEditor in rev 930041.","09/Jul/10 23:29;mwc_tonesoft;David and Gary,

I need to backport this fix to 5.3.2, but I can only see IntrospectionSupport.java and StringArrayEditor.java changes in the trunk. The SslTransportServer.java change attached by Phil (SSLEnableCiphers.patch) is not in the trunk.

What are the changes beside those former two?

Thanks

--Michael","12/Jul/10 09:33;gtully;There are no more changes required. That is it, http://fisheye6.atlassian.com/changelog/activemq?cs=929618 and 930041
Note the test  /activemq/trunk/activemq-core/src/test/java/org/apache/activemq/transport/tcp/SslBrokerServiceTest.java  that will show that it works.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
it's possible to cause a deadlock in ActiveMQ 5.2 using the client,AMQ-2332,12482320,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,zakalwe,zakalwe,27/Jul/09 22:28,11/Jul/10 23:46,30/Jan/20 16:55,11/Jul/10 17:59,5.2.0,,,,,,,5.4.0,,,Broker,,,,0,"Hi,

We have found a deadlock in ActiveMQ 5.2. It's possible that we may be causing it by a multi-threading problem in the client, we are currently looking into this. However, I feel that this is still a bug in the broker since it shouldn't be possible to deadlock the broker by incorrect use of the client.

The situation is that we have two clients connected to the broker, one over TCP using the Java library, and one connecting over SSL (our own implementation, this may also be involved in creating the problem) using the NMS library in .NET. 

The Java client connects fine and subscribes to some topics and queues and starts sending messages to the topics. The NMS client connects and attempts to connect to some of the same topics, as well as creating a temporary queue. As it is doing this initial setup stuff it hangs and goes no further. From this point I don't think any more messages get delivered on the topic, and Java clients trying to send messages to it hang on the producers send() call indefinitely.

The deadlock appears to occur because a thread is stuck actually writing data back to the NMS client (the bottom stack trace below), another thread (originating from the Java client) is trying to acquire the write lock so that it too can write to the client (middle stack trace) while still owning a lock on the list of consumers of a topic, meanwhile a third thread (this one origination from the NMS client again) is trying to get that lock on the list of consumers in order to add to it (top stack trace). For some reason the first thread trying to write to the NMS client never finishes, even when the NMS client is killed, and so the lock is never released and everything involving that topic grinds to a halt. 

I have looked but haven't been able to find anybody else reporting this issue.

I enabled JMX as well as debug mode and got the following stack traces from jconsole, and tracked down the locks involved in the deadlock using a debugger:


Name: ActiveMQ Transport: ssl:///10.247.39.150:59759
State: BLOCKED on java.util.concurrent.CopyOnWriteArrayList@509c6c30 owned by: ActiveMQ Transport: tcp:///192.168.32.73:45666
Stack trace: 
org.apache.activemq.broker.region.Topic.addSubscription(Topic.java:147)
org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:275)
org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:108)
org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:375)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
org.apache.activemq.security.AuthorizationBroker.addConsumer(AuthorizationBroker.java:138)
org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:541)
org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:104)
org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
java.lang.Thread.run(Thread.java:595)


CopyOnWriteArrayList@509c6c30 lock acquired at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:49) below:

Name: ActiveMQ Transport: tcp:///192.168.32.73:45666
State: BLOCKED on java.lang.Object@58c1c2f1 owned by: TempQueue:  c34c73c1-d2e9-41f3-89a6-82f2c59ca62b:1
Stack trace: 
org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:39)
org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1207)
org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:793)
org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:752)
org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:427)
org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:90)
org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:49)
org.apache.activemq.broker.region.Topic.dispatch(Topic.java:580)
org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:427)
org.apache.activemq.broker.region.Topic.send(Topic.java:365)
org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:350)
org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:437)
org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:184)
org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:450)
org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
java.lang.Thread.run(Thread.java:595)


Object@58c1c2f1 lock acquired at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40) below:

Name: TempQueue:  c34c73c1-d2e9-41f3-89a6-82f2c59ca62b:1
State: RUNNABLE
Total blocked: 55  Total waited: 11
Stack trace: 
java.net.SocketOutputStream.socketWrite0(Native Method)
java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
java.net.SocketOutputStream.write(SocketOutputStream.java:136)
com.sun.net.ssl.internal.ssl.OutputRecord.writeBuffer(OutputRecord.java:295)
com.sun.net.ssl.internal.ssl.OutputRecord.write(OutputRecord.java:284)
com.sun.net.ssl.internal.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:727)
com.sun.net.ssl.internal.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:715)
com.sun.net.ssl.internal.ssl.AppOutputStream.write(AppOutputStream.java:59)
org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
java.io.DataOutputStream.flush(DataOutputStream.java:106)
org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:167)
org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:233)
org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83)
org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:100)
org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1207)
org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:793)
org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:752)
org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:640)
org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:588)
org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:150)
org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1266)
org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1223)
org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1308)
org.apache.activemq.broker.region.Queue.iterate(Queue.java:1011)
org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

Let me know if I can do anything else to help.

--
Mats Henrikson
Software Engineer
SunGard Kiodex
",,npfistner,zakalwe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-11 17:59:23.344,,,false,,,,,,,,,,,,,,,,,74978,,,Sun Jul 11 23:46:19 UTC 2010,,,,,,,,"0|i0rq1z:",159865,,,,,,,,,,,,,,,,,,,"27/Jul/09 22:43;zakalwe;Versions for the broker:

ActiveMQ 5.2 release

java version ""1.5.0_14""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_14-b03)
Java HotSpot(TM) 64-Bit Server VM (build 1.5.0_14-b03, mixed mode)

The Java client is using the jar out of the broker package.

The broker and Java client are running on some RedHat Linux 64 bit.

The NMS client is version 1.2 I believe, and runs on Windows XP.","03/Aug/09 14:45;zakalwe;I believe that the most likely cause was a non-optimal SSL implementation we tried to write for the NMS C# client; we have since stopped using the SSL implementation and now use IKVM to run the Java client on .NET and the deadlocks have stopped.

I have not seen the SSL implementation we did myself, but looking at the stack trace it looks like it might be possible to recreate it by not reading the complete SSL response. I don't know enough about how Java and C# does network communication to say why the socket never timed out, even after the C# client was killed.","11/Jul/10 17:59;rajdavies;Socket timeouts are OS specific  - but you can set the property on the transport used by the broker - see http://activemq.apache.org/tcp-transport-reference.html","11/Jul/10 23:46;zakalwe;This has been resolved as Fixed, was it really? Because the last comment on the ticket reads to me like it was just closed saying I should adjust my socket timeout.

I also don't think this has anything to do with socket timeouts - as long as the client stays connected the deadlock will persist (and it may even persist after the client has disconnected...)

Anyway, just wondering if it was ""Fixed"" or if it should be marked ""Wont do""...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If tmp message store fills up, broker can deadlock due to while producers wait on disk space and consumers wait on acks",AMQ-2475,12482818,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,martinmurphy,martinmurphy,03/Nov/09 10:02,11/Jul/10 17:53,30/Jan/20 16:55,11/Jul/10 17:53,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,Message Store,Transport,,0,"I will attach a simple project that shows this. In the test the tmp space is set to 32 MB and two threads are created. One thread will constantly produce 1KB messages and the other consumes these, but sleeps for 100ms, note that producer flow control is turned off as well. The goal here is to ensure that the producers block while the consumers read the rest of the messages from the broker and catch up, this in turn frees up the disk space and allows the producer to send more messages. This config means that you can bound the broker based on disk space rather than memory usage.

Unfortunately in this test using topics while the broker is reading in the message from the producer it has to lock the matched list it is adding it to. This is an abstract from the Topic's point of view and doesn't realize that the file may block based on the file system. 
{code}
    public void add(MessageReference node) throws Exception { //... snip ...
            if (maximumPendingMessages != 0) {
                synchronized (matchedListMutex) {   // We have this mutex
                    matched.addMessageLast(node); // ends up waiting for space
                    // NOTE - be careful about the slaveBroker!
                    if (maximumPendingMessages > 0) {
{code}
Meanwhile the consumer is sending acknowledgements for the 10 messages it just read in (the configured prefetch) from the same topic, but since they also modify the same list in the topic this waits as well on the mutex held to service the producer:
{code}
    private void dispatchMatched() throws IOException {       
        synchronized (matchedListMutex) {  // never gets passed here.
            if (!matched.isEmpty() && !isFull()) {
{code}
This is a fairly classic deadlock. The trick is now how to resolve this given the fact that the topic isn't aware that it's list may need to wait for the file system to clean up.
","Tested on Windows XP with JDK 1.60_13, but fairly sure it will be an issue on all platforms",mcooper,rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Nov/09 20:04;dominict;Queue.java;https://issues.apache.org/jira/secure/attachment/12461480/Queue.java","08/Nov/09 20:01;dominict;Queue.patchfile.txt;https://issues.apache.org/jira/secure/attachment/12461477/Queue.patchfile.txt","08/Nov/09 20:04;dominict;Topic.java;https://issues.apache.org/jira/secure/attachment/12461479/Topic.java","08/Nov/09 20:01;dominict;Topic.patchfile.txt;https://issues.apache.org/jira/secure/attachment/12461476/Topic.patchfile.txt","08/Nov/09 20:04;dominict;TopicSubscription.java;https://issues.apache.org/jira/secure/attachment/12461482/TopicSubscription.java","08/Nov/09 20:01;dominict;TopicSubscription.patchfile.txt;https://issues.apache.org/jira/secure/attachment/12461478/TopicSubscription.patchfile.txt","07/Nov/09 15:19;dominict;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461377/activemq.xml","03/Nov/09 20:41;martinmurphy;hangtest.zip;https://issues.apache.org/jira/secure/attachment/12461475/hangtest.zip",,,,8.0,,,,,,,,,,,,,,,,,,,,2009-11-07 15:11:13.932,,,false,,,,,,,,,,,,,,,,,74928,,,Sun Jul 11 17:53:17 UTC 2010,,,,,,,,"0|i0rq4n:",159877,,,,,,,,,,,,,,,,,,,"03/Nov/09 20:41;martinmurphy;Oops, didn't realize that the test never attached properly last time","07/Nov/09 15:11;dominict;I had an investigate into attempted to patch this locally in activemq-core, on a fusesource 5.3.0.4 (MacOSX 10.6.1).

I've run the following tests on the patch, will I'll attach: (the patch diffs, the patched .java and the broker xml I used in testing):

The test cases I've run overnight and this morning/afternoon are:

- Virtual Topic (  VirtualTopic.iplayer  -> Consumer.A.VirtualTopic.iplayer)
- 3 x Producer, 4,000,000 messages each onto Virtual Topic (12million in total)
- 1 x Consumer
- 100mb tmp_store limit

- Virtual Topic (  VirtualTopic.iplayer  -> Consumer.A.VirtualTopic.iplayer)
- 6 x Producer, 2,000,000 messages each onto Virtual Topic (12million in total)
- 1 x Consumer
- 512mb tmp_store limit

The tmp_storage was definitely limiting ok, and niether the broker, producer or consumer blocked:

du -sh of the tmp_storage area:
{code}
dominic-tootells-macbook-pro:data dominict$ du -sh *
 96M	journal
 48K	kr-store
  0B	lock
512M	tmp-test-broker

dominic-tootells-macbook-pro:data dominict$ du -sh *
 96M	journal
 48K	kr-store
  0B	lock
483M	tmp-test-broker

dominic-tootells-macbook-pro:data dominict$ du -sh *
 96M	journal
 48K	kr-store
  0B	lock
490M	tmp-test-broker

dominic-tootells-macbook-pro:data dominict$ du -sh *
 64M	journal
 48K	kr-store
  0B	lock
 38M	tmp-test-broker

dominic-tootells-macbook-pro:data dominict$ 

{code}


I've also run the junit provided by Martin; this ran ok too; with no blockage.

I shall attach the potential patches.  I haven't run any other tests against the patches; to see if they potentially cause any other unforeseen issues (i.e. normal persistent queue - will do this later on)

cheers
/dom



","07/Nov/09 15:15;dominict;all in package org.apache.activemq.broker.region


TopicSubscription.patchfile.txt      (Changes to TopicSubscription.java)
Topic.patchfile.txt                          (Changes to Topic.java)
Queue.patchfile.txt                       (Changes to Queue.java)


","07/Nov/09 15:17;dominict;The patched java files:

Queue.java
Topic.java
TopicSubscription.java

","07/Nov/09 15:19;dominict;activemq.xml test broker configuration I was using to test the scenario","08/Nov/09 20:00;dominict;I've ran some more tests on the patch I uploaded yesterday, and come across a small issue with  sendFailIfNoSpace=""true"".  The ResourceAllocationException would only be thrown if the producer noticed the out of space condition before the message was added to the cursor.  However, there was a slight chance space would be available when producer 1 checked, but this space was then eaten by producer 2.  Producer 1 would then be within the waiting for space loop; and not send a ResourceAllocationException.  

I have added checks within the waiting for space loop, to check if a ResourceAllocationException should be thrown if sendFailIfNoSpace=""true"".   

I shall update the patches attached yesterday, to reflect this.

apologies,
/dom

I'm also currently running the test against a normal persistent queue; to make sure all is ok with that; I'll comment back once the run has finished.","09/Nov/09 09:03;dominict;Test for a normal persistent queue ran ok:

- 1 consumer
- 5 * producer
- 10,000,000 * 1k messages

hope this helps,
/dom","13/Nov/09 19:46;rajdavies;I applied the patch to trunk - but got some JUnit test failures -  org.apache.activemq.broker.BrokerTest is the main one (a few JUnit tests are derived from this one).
Going to try resolve the dead lock differently.
I'm not clear if you are experiencing the same problem with Queues ?","17/Nov/09 11:54;dominict;I wasn't experiencing the same issue with queue's, just topics (non persistent when they overflowed to tmp_storage)

What test was failing in the org.apache.activemq.broker.BrokerTest? out of interest.
/dom","17/Nov/09 12:00;rajdavies;the failing tests were org.apache.activemq.broker.BrokerTest (a few are derived from this - so causes multiple failures) and org.apache.activemq.bugs.AMQ2314Test","17/Nov/09 13:36;dominict;Thanks for the info Rob,

I'll give it a run through here, and see what I come up with here.

I was running on a fusesource 5.3.0.4 broker.  I've recently updated this to the fusesource 5.3.0.5 broker which included that AMQ2314Test (http://fusesource.com/wiki/display/ProdInfo/FUSE+Message+Broker+v5.3+Release+Notes).  I'll run a test suite on a base source distro and a 5.3.0.5 with above patches and see what I get out of it.

If I get chance I'll grab a trunk and test on that too (most likely an evening this week I'm guessing though) and see if I spot anything.  

Thanks for commenting back.
/dom","17/Nov/09 15:48;rajdavies;dead lock fixed by svn revision 881313 and 881340","20/Jan/10 18:20;gtully;also on 5.3.1 branch","17/Jun/10 06:10;mcooper;I am still able to consistently see this deadlock behavior on our system with both version 5.3.0 and 5.3.2.  The patch loops in the TopicSubscription add method while holding the matchedListMutex until thePendingMessageCursor ""matched"" is not full.  The code then attempts to call addMessageLast on the ""matched"" instance assuming that the matchedListMutex will prevent any additional threads from taking that space.  This assumption is wrong, because I have found that when using a filePendingMessageCursor, the addMessageLast method will end up calling systemUsage.getTempUsage().waitForSpace() which for whatever reason can be full when it is called and without the ability to reduce in size due to monitors already held earlier in the stack.  Therefore, the code loops infinitely and the system is deadlocked.

To workaround this issue, I switched to using vm cursors, which don't rely on this shared pool of temp file storage, and haven't seen the deadlock.

I am new to this project and still trying to understand the code completely, but this is what I have found.  I think the looping that is happening to wait for space is happening to early in the stack.  The matchedListMutex does not seem to lock out other threads that use temp storage.  I'm not sure what the correct fix is, but without a significant reworking of the code, the best I can think to do would be to have the addMessageLast method throw some kind of exception or have a return value if space is not available, so the calling method can again release its the matchedListMutext by calling wait, and try again.  And addMessageLast wold also not call waitForSpace with an infinite timeout, but instead specify a small timeout.","17/Jun/10 07:46;rajdavies;Hi Michael  - thx for the analysis - is this something you can reproduce on your system easily ?","17/Jun/10 08:25;rajdavies;Fixed by SVN revision 955504","17/Jun/10 16:25;mcooper;Rob, wow, quick response!  I reviewed the change carefully, and it looks good for the most part.  A couple potential issues though:

In FilePendingMessageCursor:

- Why did you add a ""throws Exception"" clause to original and try versions of the method?  Doesn't seem to be used.
- The end of the tryAddMessageLast method returns false.  I think this should probably be true instead, because if the caller passes an expired message, it will now loop forever retrying to add it.

In TopicSubscription:

While the fix you made is probably the safest fix, I think the ideal fix would not have to even make a check for  matched.isFull() since the tryAddMessageLast method should return false if it is full and cannot add the message.  However, this requires implementing tryAddMessageLast in all implementations of PendingMessageCursor.

Also, the fix version of the bug may need to be updated.","18/Jun/10 19:27;mcooper;Just reopening the issue to make sure the last code review doesn't get missed.  Ignore what I said about the ""throws Exception"" part, as I realize it was part of another change.  My biggest concern is over the ""return false"" which could introduce an infinite loop for expired messages.","11/Jul/10 17:53;rajdavies;Thanks Michael  - resolved by SVN revision 963118",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq process does not exit after stop() and other stop related issue,AMQ-2070,12482679,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yinghe0101,yinghe0101,16/Jan/09 18:41,11/Jul/10 16:34,30/Jan/20 16:55,11/Jul/10 16:34,5.2.0,,,,,,,5.4.0,,,Broker,,,,3,"There are a few issues to stop activemq
1. using jconsole and call broker.stop(), the java process of activemq will not quit, the root cause is when jetty is configured using xbean in activemq.xml, the broker.stop() does not stop jetty server so the java process will not quit, however the web admin will not work after broker.stop() and will display jsp exceptions.
2. the current activemq-console code which activemq-admin is using to do stop broker is calling terminateJVM and does not handle exceptions thrown
3. we have a use case when we stop a broker, we don't want any pending messages stuck in the broker, because it requires us to restart the broker immediately to not to lose those pending messages.It will be a problem if in real world we cannot restart it right away and those pending messages are critical. 
The solution we thought is as follows:
What we want is to use the current network of brokers forwarding mechanism to forward those pending messages to other broker which has a related consumer, then stop the broker completely and we don't need to restart the stopped broker right away. for example, we have a network of two brokers, A, and B, the client(producer/consumer) is using failover://(tcp:brokerA:port1, tcp:brokerB:port1), then when we want to stop A and it has 10 pending messages, we want stop A's transport that the client is connecting to, so client will failover to broker B, then 10 pending messages will be forwarded to broker B, then we can stop the broker A completely.

To address the above issues, attached are two patches, one for activemq-core and one for activemq-console, both patches are based on tags/activemq-5.2.0 please review them and I will appreciate if it can be applied to trunk. If you have any question regarding these changes, please let me know. Thank you.

With the patches:

Here is a sample usage:
./activemq-admin stopGracefully --connectorName ssl --queueName test*? --timeout 120 --pollInterval 20 --jmxurl service:jmx:rmi:///jndi/rmi://localhost:3616/jmxrmi

this command will stop connector ssl, and it will check queues starting with test (queueName takes regex) to make sure they have no pending messages then stop the broker. It will check the queuesize every 20 seconds and timeout in 120 seconds. If after timeout, there are still pending messages in the queues, it will not stop the broker and it will need manual check to stop the broker properly.

ADDED: 
1. the patches fix more issues for stopping the broker. if broker starts as master and waitForslave, stop will not let the java quit the process. Also if slave is started first and use failover to talk to the master, you can also stop it before it establish the connection with the master.

2. added to use localProcessId to get jmxurl, that way, activemq-admin can access jmx as a local jconsole, without jmxuser and jmxpassword, while remote jconsole still needs authentication when it is turned on. for this you need -Dcom.sun.management.jmxremote when starting activemq

There is a known issue of jmx rmi is two ports, one can be configured and the other is using random ports when a remote jconsole connects. this is not acceptable in a firewall environment. If concerned, please check my other post http://www.nabble.com/JMX-remote-managmentContext-and-firewall-to21969017.html you can use a custom agent to be able to configure two fixed ports.
",windows xp and solaris,john.greeley,rajdavies,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Apr/10 17:50;yinghe0101;AMQ-2070-5.3.1.patch;https://issues.apache.org/jira/secure/attachment/12461614/AMQ-2070-5.3.1.patch","20/Feb/09 15:22;yinghe0101;StopGracefullyCommand.java;https://issues.apache.org/jira/secure/attachment/12461299/StopGracefullyCommand.java","20/Feb/09 15:22;yinghe0101;patchActiveMQConsole5.2.0;https://issues.apache.org/jira/secure/attachment/12461254/patchActiveMQConsole5.2.0","20/Feb/09 15:21;yinghe0101;patchActiveMQCore5.2.0;https://issues.apache.org/jira/secure/attachment/12461276/patchActiveMQCore5.2.0",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2009-09-10 09:32:25.643,,,false,,,,,,,,,,,,,,,,,75092,,,Sun Jul 11 16:34:02 UTC 2010,,,,Patch Available,,,,"0|i0rq6n:",159886,,,,,,,,,,,,,,,,,,,"16/Jan/09 18:42;yinghe0101;activemq-core patch","16/Jan/09 18:43;yinghe0101;activemq-console patch","16/Jan/09 18:44;yinghe0101;this class belong to activemq-console org.apache.activemq.console.command package","13/Feb/09 15:44;yinghe0101;added --localProcessId to use <pid> to connect to jmx","13/Feb/09 15:46;yinghe0101;add --localProcessId to use pid to connect to jmx","20/Feb/09 15:21;yinghe0101;updated fix more stopping issue","20/Feb/09 15:22;yinghe0101;updated fix more stop issue","10/Sep/09 09:32;rajdavies;Nice patch! 
Any chance you can update against the latest in trunk ?
Also - not sure about introducing dependency on jetty into activemq-core package - maybe better to derive a class in activemq-optional ?","10/Sep/09 13:21;rajdavies;Fixed by revision 813422 and revision 813424","08/Apr/10 17:50;yinghe0101;It seems that last time when the patch is applied, a line of code is merged incorrectly. AMQ-2070-5.3.1.patch will fix that and make stopGracefully work properly","11/Jul/10 16:34;rajdavies;Fixed by SVN revision 963104",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
apr_version and apu_version issues (apr) in configure file,AMQ-2682,12482825,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jamauld,jamauld,01/Apr/10 16:29,09/Jul/10 23:01,30/Jan/20 16:55,09/Jul/10 23:01,,,,,,,,5.4.0,,,CMS (C++ client),,,,0,"I was having difficulty running ./configure to set up ActiveMQ.  I am running Red Hat Linux Enterprise 5 at Sandia National Labs.

There were two problems.  First, the apr version I had on my machine, after installing apache web server 2.2, was version 1.4.2.  The variable APR_VER_REGEXES was set up so 1.3.* was expected, and 1.4.* was not.  The documentaion indicates that version 1.4.2 should be sufficiently advanced.

Second, the apr util version I had was 1.3.9.  When I changed APR_VER_REGEXES to expect 1.4.*, it started reporting that I had the wrong apr util version, even though I still had APU_VER_REGEXES set to expect 1.3.*

It turned out that there was an incorrect line, which worked okay if apr and apr util had the same version.  The original line was:
    if test `expr $apr_version : $apu_wanted_regex` -ne 0; then
the corrected line is
    if test `expr $apu_version : $apu_wanted_regex` -ne 0; then

notice that the apr version (apr_version) was being compared to the apr util expected regular expression (apu_wanted_regex).  I fixed it by changing apr_version in the line to apu_version.


","Red Hat Enterprise 5, after installation of apache 2.2 (http-2.2.15)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-09 23:01:16.972,,,false,,,,,,,,,,,,,,,,,74847,,,Fri Jul 09 23:01:43 UTC 2010,,,,,,,,"0|i0rqkf:",159948,,,,,,,,,,,,,,,,,,,"09/Jul/10 23:01;tabish;This is really an ActiveMQ-CPP issue.","09/Jul/10 23:01;tabish;This was resolved in the ActiveMQ-CPP 3.2.0 release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
alwaysSessionAsync is documented incorrectly on the wiki,AMQ-2689,12483109,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bdarfler,bdarfler,07/Apr/10 20:25,09/Jul/10 22:56,30/Jan/20 16:55,09/Jul/10 22:56,,,,,,,,5.4.0,,,Documentation,,,,0,"After reading through ActiveMQ in Action and talking with bsnyder It appears that 

http://activemq.apache.org/connection-configuration-uri.html

and

http://activemq.apache.org/version-5-performance-tuning.html

have the wrongdefinition for alwaysSessionAsync. 

They say that by setting it to true a separate thread would NOT be used but the OPPOSITE is true.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-08 02:03:06.694,,,false,,,,,,,,,,,,,,,,,74844,,,Fri Jul 09 22:56:29 UTC 2010,,,,,,,,"0|i0rqbr:",159909,,,,,,,,,,,,,,,,,,,"08/Apr/10 02:03;tjsnell;I updated both pages.","04/Jun/10 20:36;bdarfler;This is also incorrect on http://activemq.apache.org/performance-tuning.html","09/Jul/10 22:56;tabish;Updated the incorrect page.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"'Zombie' messages created in KahaDB after failover, with warning 'Duplicate message add attempt rejected.'",AMQ-2803,12483932,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,adrian.trenaman,adrian.trenaman,28/Jun/10 11:00,08/Jul/10 14:38,30/Jan/20 16:55,08/Jul/10 14:38,5.3.2,,,,,,,5.4.0,,,Message Store,,,,0,"Am doing some failover testing of ActiveMQ, sending 10,000 messages to the broker with a live consumer; the producer and consumer are transactional, and the broker is configured to use KahaDB. On failover of the broker, I see log warnings like this: 

{code}
 WARN | Duplicate message add attempt rejected. Message id: ID:Ade's-54024-1277715585703-0:29:1:1:240
 WARN | Duplicate message add attempt rejected. Message id: ID:Ade's-54024-1277715585703-0:24:1:1:241
 WARN | Duplicate message add attempt rejected. Message id: ID:Ade's-54024-1277715585703-0:23:1:1:242
 WARN | Duplicate message add attempt rejected. Message id: ID:Ade's-54024-1277715585703-0:0:1:1:237
{code}

When the test has run its course, I discover that there are no messages lost - all my messages have gone through successfully. However, I notice that there are in fact a number of 'zombie' messages on the queue: by 'zombie' I mean that the messages are in the store, and the JMX queueSize says they're there. However, if you browse the queue you don't see them, and, if you have a consumer on the queue, you won't receive them either. 

Looking into the code, in {{org.apache.activemq.store.kahadb.MessageDatabase}} you can see the following very interesting comments concerning the log warning:

{code}
               // If the message ID as indexed, then the broker asked us to store a DUP
                // message.  Bad BOY!  Don't do it, and log a warning.
                LOG.warn(""Duplicate message add attempt rejected. Message id: ""+command.getMessageId());
                // TODO: consider just rolling back the tx.
                sd.messageIdIndex.put(tx, command.getMessageId(), previous);
{code} 

So. It seems to me that while we're detecting the condition of the broker trying to reinsert a message that's already in the KahaDB correctly, we're not handling this case very well. The outcome is that while we do not get any message loss, we do get worrying warning messages *and* we get erroneous reporting of the queueSize in JMX which will mislead and create the perception of undelivered messages.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-06-28 11:14:13.073,,,false,,,,,,,,,,,,,,,,,74794,,,Thu Jul 08 14:38:26 UTC 2010,,,,,,,,"0|i0rqjj:",159944,,,,,,,,,,,,,,,,,,,"28/Jun/10 11:14;gtully;https://issues.apache.org/activemq/browse/AMQ-2542 will address this by implementing duplicate suppression at the transport when a failover occurs. This will ensure that the store does not get duplicates in the normal failover case.
","28/Jun/10 11:30;adrian.trenaman;As an alternative, I've tried the same test using the {{<amqPersistenceAdapter>}} instead, with the configuration below. 

{code:xml}
		<persistenceAdapter>
			<!-- <kahaDB directory=""${activemq-broker.dataDirectory}"" /> -->
			<amqPersistenceAdapter directory=""${activemq-broker.dataDirectory}"" syncOnWrite=""true"" maxFileLength=""32mb""/>
		</persistenceAdapter>
{code}

Using this adapter instead of KahaDB, I find that I don't get the warning message. However, I *do* get the same 'zombie' messages in JMX: the queueSize suggests that there are messages to be delivered (for example, in two failover tests I ended up with a JMX {{QueueSize}} of '3' and '1' respectively after failover), when in fact all messages were delivered successfully. Nicely, the {{<amqPersistenceAdapter>}} is better behaved in that if I restart the broker then the {{QueueSize}} is reported correctly again. ","28/Jun/10 11:46;adrian.trenaman;Thanks Gary for the note. 

Any idea when the fix for AMQ-2542 will go live? Is it currently on trunk at Apache? ","28/Jun/10 11:56;gtully;I am working on it atm, so should have some completion by the end of the week. Any tests you can provide to validate will be appreciated... there a a bunch of tests that assert duplicate suppression and ordering but non that tie it together with the queue sizes  and jmx.
You can access the brokerview and pull out the relevant stats from junit test if u want to verify them.","28/Jun/10 13:36;adrian.trenaman;Cool. I'll see if I can put together a unit test for this - alternatively, get in touch with me off-line and I can give you a non-Junit test-case.
","08/Jul/10 14:38;gtully;resolved in r961783",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven dependency:tree for ActiveMQ 5.3.0 seems to show conflicts about geronimo-j2ee-management jars,AMQ-2603,12482870,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,callain_conceptum,callain_conceptum,12/Feb/10 13:19,06/Jul/10 09:56,30/Jan/20 16:55,06/Jul/10 09:56,5.3.0,,,,,,,5.4.0,,,,,,,1,"My original post on http://old.nabble.com/Question-about-ActiveMQ-5.3.0-maven-dependencies-td27556755.html#a27561913 was:

When I run maven for a dependency:tree of activemq-core-5.3.0, I get this: 

[INFO] \- org.apache.activemq:activemq-core:jar:5.3.0:compile 
[INFO]    +- commons-logging:commons-logging-api:jar:1.1:compile 
[INFO]    +- org.apache.geronimo.specs:geronimo-jms_1.1_spec:jar:1.1.1:compile 
[INFO]    +- org.apache.activemq:activeio-core:jar:3.1.2:compile 
[INFO]    |  +- org.apache.geronimo.specs:geronimo-j2ee-management_1.1_spec:jar:1.0.1:compile 
[INFO]    |  \- commons-logging:commons-logging:jar:1.1:compile 
[INFO]    |     +- log4j:log4j:jar:1.2.12:compile 
[INFO]    |     +- logkit:logkit:jar:1.0.1:compile 
[INFO]    |     +- avalon-framework:avalon-framework:jar:4.1.3:compile 
[INFO]    |     \- javax.servlet:servlet-api:jar:2.3:compile 
[INFO]    +- org.apache.activemq:kahadb:jar:5.3.0:compile 
[INFO]    +- org.apache.activemq.protobuf:activemq-protobuf:jar:1.0:compile 
[INFO]    +- org.apache.geronimo.specs:geronimo-j2ee-management_1.0_spec:jar:1.0:compile 
[INFO]    +- org.springframework:spring-context:jar:2.5.6:compile 
[INFO]    |  +- aopalliance:aopalliance:jar:1.0:compile 
[INFO]    |  +- org.springframework:spring-beans:jar:2.5.6:compile 
[INFO]    |  \- org.springframework:spring-core:jar:2.5.6:compile 
[INFO]    \- commons-net:commons-net:jar:2.0:compile 

Now, I am wondering about the two jars: 

geronimo-j2ee-management_1.0_spec:jar:1.0 
geronimo-j2ee-management_1.1_spec:jar:1.0.1 

Don't they overlap/conflict? 

Answer on the forum from Gary Tully:

This is still the situation on trunk. Can you raise a jira issue to track 
this? 
We should exclude the activeio transitive dependency or update to the 1.0.1 
version for activemq. 

I have not seen any report of the jars clashing or causing problems, either 
they are compatible or the activeio management dependency is not called on 
at runtime if a journaled persistence adapter is used. 

So there we are. Thanks.
",,callain_conceptum,fjaouen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-05 15:21:52.652,,,false,,,,,,,,,,,,,,,,,74878,,,Tue Jul 06 09:56:51 UTC 2010,,,,,,,,"0|i0rq5r:",159882,,,,,,,,,,,,,,,,,,,"05/Jul/10 15:21;fjaouen;The problem is always there with version 5.3.2.

Does someone could give an answer about which version we could excluded ?

[INFO] |  +- org.apache.activemq:activemq-core:jar:5.3.2:compile
[INFO] |  |  +- org.apache.activemq:activeio-core:jar:3.1.2:compile
[INFO] |  |  |  \- org.apache.geronimo.specs:geronimo-j2ee-management_1.1_spec:jar:1.0.1:compile
[INFO] |  |  +- org.apache.activemq:kahadb:jar:5.3.2:compile
[INFO] |  |  +- org.apache.activemq.protobuf:activemq-protobuf:jar:1.0:compile
[INFO] |  |  +- org.osgi:org.osgi.core:jar:4.1.0:compile
[INFO] |  |  +- org.springframework.osgi:spring-osgi-core:jar:1.2.1:compile
[INFO] |  |  |  \- org.springframework.osgi:spring-osgi-io:jar:1.2.1:compile
[INFO] |  |  +- org.apache.geronimo.specs:geronimo-j2ee-management_1.0_spec:jar:1.0:compile
[INFO] |  |  \- commons-net:commons-net:jar:2.0:compile
[INFO] |  \- org.springframework:spring-core:jar:2.5.6:compile
","06/Jul/10 09:56;gtully;upgraded to org.apache.geronimo.specs:geronimo-j2ee-management_1.1_spec:1.0.1 in r960857",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adapt Rest and Ajax servlets to Jetty 7 continuation design,AMQ-2728,12482895,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,11/May/10 12:36,29/Jun/10 13:18,30/Jan/20 16:55,29/Jun/10 13:18,5.3.2,,,,,,,5.4.0,,,,,,,0,"There is a change in how continuations work in Jetty 7 (over previously used Jetty 6), so appropriate servlets must be refactored.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74826,,,Tue Jun 29 13:18:24 UTC 2010,,,,,,,,"0|i0rqtr:",159990,,,,,,,,,,,,,,,,,,,"29/Jun/10 13:18;dejanb;Fixed with svn revision 958932",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad Javadoc on PooledConnectionFactory suggests we should not use PooledConnectionFactory for consumers!,AMQ-2806,12483930,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,adrian.trenaman,adrian.trenaman,29/Jun/10 09:42,29/Jun/10 10:48,30/Jan/20 16:55,29/Jun/10 10:48,,,,,,,,5.4.0,,,,,,,0,"See: http://activemq.apache.org/maven/activemq-core/apidocs/org/apache/activemq/pool/PooledConnectionFactory.html. This note concerning jencks is now out of date, and the ongoing recommendation seems to be to use activemq-pool. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-06-29 10:48:02.96,,,false,,,,,,,,,,,,,,,,,74791,,,Tue Jun 29 10:48:02 UTC 2010,,,,,,,,"0|i0rqjr:",159945,,,,,,,,,,,,,,,,,,,"29/Jun/10 10:48;gtully;r958921

add ref to activemq-camel (which needs some updates) and activemq spring  and prefetch and explain why pool does not pool consumers.
For message consumption, spring MLC with default concurrentConsumers=1 does the right thing and with concurrentConsumers>1 can run into the issues related to prefetch. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Erroneous link to CMS from an ActiveMQ doc page,AMQ-2805,12482892,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gbirchmeier,gbirchmeier,28/Jun/10 19:44,28/Jun/10 20:00,30/Jan/20 16:55,28/Jun/10 20:00,,,,,,,,,,,Documentation,,,,0,"The page http://activemq.apache.org/javadocs.html links to the bad URL http://activemq.apache.org/cms/html/.

It should instead point to http://activemq.apache.org/cms/.

The page served by the erroneous URL looks like it's actually the target of a bad redirect within the CMS sub-pages.  You'll notice that any of the relative URL links keep returning the same page (as they are all bad URLs), whereas the page returned by the correct URL contains correct links for those pages.

See related issue https://issues.apache.org/activemq/browse/AMQCPP-299",web page documentation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-06-28 20:00:10.745,,,false,,,,,,,,,,,,,,,,,74792,,,Mon Jun 28 20:00:10 UTC 2010,,,,,,,,"0|i182uf:",255263,,,,,,,,,,,,,,,,,,,"28/Jun/10 20:00;tabish;Fixed, should be fine once the site refreshes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue with JMSAppender using Activemq ,AMQ-2495,12482938,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jeffreyyin,jeffreyyin,16/Nov/09 13:49,23/Jun/10 12:03,30/Jan/20 16:55,23/Jun/10 12:03,5.3.0,,,,,,,5.4.0,,,JMS client,,,,3,"Tried to use JMSAppender with Activemq 5.3.0. The program stucked at line: 

topicSession = topicConnection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE); 

Even the default example (Log4jJMSAppenderExample.java) comes with the activemq 5.3 has the same problem. 

 Below is the output when I run the default example with the log4j.debug flag on:

After start the activemq server, I tried to run the jmsappender example comes with activemq version 5.3. The program hangs, below is the debug info: 

C:\apache\apache-activemq-5.3.0\example>ant log4j-jms 
Buildfile: build.xml 

init: 

compile: 

log4j-jms: 
     [echo] Running a Log4j JMS Appender example 
     [java] log4j: Trying to find [log4j-jms.properties] using context classloader sun.misc.Launcher$AppClassLoader@11b86e7. 
     [java] log4j: Using URL [file:/C:/apache/apache-activemq-5.3.0/example/target/classes/log4j-jms.properties] for automatic log4j configuration. 
     [java] log4j: Reading configuration from URL file:/C:/apache/apache-activemq-5.3.0/example/target/classes/log4j-jms.properties 
     [java] log4j: Parsing for [root] with value=[INFO, stdout, jms]. 
     [java] log4j: Level token is [INFO]. 
     [java] log4j: Category root set to INFO 
     [java] log4j: Parsing appender named ""stdout"". 
     [java] log4j: Parsing layout options for ""stdout"". 
     [java] log4j: Setting property [conversionPattern] to [%d %-5p %c - %m%n]. 
     [java] log4j: End of parsing for ""stdout"". 
     [java] log4j: Parsed ""stdout"" options. 
     [java] log4j: Parsing appender named ""jms"". 
     [java] log4j: Setting property [initialContextFactoryName] to [org.apache.activemq.jndi.ActiveMQInitialContextFactory]. 
     [java] log4j: Setting property [topicBindingName] to [logTopic]. 
     [java] log4j: Setting property [topicConnectionFactoryBindingName] to [ConnectionFactory]. 
     [java] log4j: Setting property [providerURL] to [tcp://localhost:61616]. 
     [java] log4j: Getting initial context. 
     [java] log4j: Looking up [ConnectionFactory] 
     [java] log4j: About to create TopicConnection. 
     [java] log4j: Creating TopicSession, non-transactional, in AUTO_ACKNOWLEDGE mode. 

No error or exception showed, the program just hangs over here.","jdk1.6, log4j 1.2.15, activemq 5.3.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-11-18 15:07:38.492,,,false,,,,,,,,,,,,,,,,,74919,,,Wed Jun 23 12:03:12 UTC 2010,,,,,,,,"0|i0ku1r:",119686,,,,,,,,,,,,,,,,,,,"18/Nov/09 15:07;dejanb;Just did some research on the topic. The problem is that 5.3.0 added some logging in the BrokerInfo class which is used during connection init, so log4j and amq lock each other.

Some possible solutions:

* avoid using logs in during connection init
* see is JmsAppender can be improved to handle this kind of situations

More research will be done to find the best solution and workaround.

","22/Mar/10 17:01;gtully;I think the solution to this issue is contained in the conversation, note the last two comments.

http://old.nabble.com/Log4J-ActiveMQ-JMS-Appender-tt18840199.html#a27567206
","23/Jun/10 12:03;gtully;fix http://svn.apache.org/viewvc?rev=926165&view=rev resolved this.

This removes the logger from BrokerInfo which clashes with the logger init from ActiveMQConnection, which allows log4j to initialise
stack trace from client before the exception{code}
log4j-jms:
     [echo] Running a Log4j JMS Appender example
     [java] starting
     [java] 2010-06-23 12:53:34
     [java] Full thread dump Java HotSpot(TM) Server VM (16.3-b01 mixed mode):
     [java] 
     [java] ""InactivityMonitor WriteCheck"" daemon prio=10 tid=0x089d9400 nid=0x5549 in Object.wait() [0xa895c000]
     [java]    java.lang.Thread.State: TIMED_WAITING (on object monitor)
     [java] 	at java.lang.Object.wait(Native Method)
     [java] 	- waiting on <0xb2436458> (a java.util.TaskQueue)
     [java] 	at java.util.TimerThread.mainLoop(Timer.java:509)
     [java] 	- locked <0xb2436458> (a java.util.TaskQueue)
     [java] 	at java.util.TimerThread.run(Timer.java:462)
     [java] 
     [java] ""InactivityMonitor ReadCheck"" daemon prio=10 tid=0x08888400 nid=0x5548 in Object.wait() [0xa89ad000]
     [java]    java.lang.Thread.State: TIMED_WAITING (on object monitor)
     [java] 	at java.lang.Object.wait(Native Method)
     [java] 	- waiting on <0xb2435fe8> (a java.util.TaskQueue)
     [java] 	at java.util.TimerThread.mainLoop(Timer.java:509)
     [java] 	- locked <0xb2435fe8> (a java.util.TaskQueue)
     [java] 	at java.util.TimerThread.run(Timer.java:462)
     [java] 
     [java] ""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" prio=10 tid=0xa88b1c00 nid=0x5545 in Object.wait() [0xa89fe000]
     [java]    java.lang.Thread.State: RUNNABLE
     [java] 	at org.apache.log4j.LogManager.getLoggerRepository(LogManager.java:174)
     [java] 	at org.apache.log4j.LogManager.getLogger(LogManager.java:199)
     [java] 	at org.apache.log4j.Logger.getLogger(Logger.java:105)
     [java] 	at org.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:283)
     [java] 	at org.apache.commons.logging.impl.Log4JLogger.<init>(Log4JLogger.java:108)
     [java] 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
     [java] 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
     [java] 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
     [java] 	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.newInstance(LogFactoryImpl.java:605)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:333)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:307)
     [java] 	at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:645)
     [java] 	at org.apache.activemq.command.BrokerInfo.<clinit>(BrokerInfo.java:37)
     [java] 	at org.apache.activemq.openwire.v5.BrokerInfoMarshaller.createObject(BrokerInfoMarshaller.java:55)
     [java] 	at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:358)
     [java] 	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:276)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:211)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)
     [java] 	at java.lang.Thread.run(Thread.java:619)
     [java] 
     [java] ""Low Memory Detector"" daemon prio=10 tid=0x08896c00 nid=0x5540 runnable [0x00000000]
     [java]    java.lang.Thread.State: RUNNABLE
     [java] 
     [java] ""CompilerThread1"" daemon prio=10 tid=0x08895000 nid=0x553f waiting on condition [0x00000000]
     [java]    java.lang.Thread.State: RUNNABLE
     [java] 
     [java] ""CompilerThread0"" daemon prio=10 tid=0x08893000 nid=0x553e waiting on condition [0x00000000]
     [java]    java.lang.Thread.State: RUNNABLE
     [java] 
     [java] ""Signal Dispatcher"" daemon prio=10 tid=0x08891800 nid=0x553d waiting on condition [0x00000000]
     [java]    java.lang.Thread.State: RUNNABLE
     [java] 
     [java] ""Finalizer"" daemon prio=10 tid=0x0887cc00 nid=0x553c in Object.wait() [0xa917c000]
     [java]    java.lang.Thread.State: WAITING (on object monitor)
     [java] 	at java.lang.Object.wait(Native Method)
     [java] 	- waiting on <0xb1860b10> (a java.lang.ref.ReferenceQueue$Lock)
     [java] 	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
     [java] 	- locked <0xb1860b10> (a java.lang.ref.ReferenceQueue$Lock)
     [java] 	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
     [java] 	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)
     [java] 
     [java] ""Reference Handler"" daemon prio=10 tid=0x0887b400 nid=0x553b in Object.wait() [0xa91cd000]
     [java]    java.lang.Thread.State: WAITING (on object monitor)
     [java] 	at java.lang.Object.wait(Native Method)
     [java] 	- waiting on <0xb1860a18> (a java.lang.ref.Reference$Lock)
     [java] 	at java.lang.Object.wait(Object.java:485)
     [java] 	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
     [java] 	- locked <0xb1860a18> (a java.lang.ref.Reference$Lock)
     [java] 
     [java] ""main"" prio=10 tid=0x087fe000 nid=0x5535 waiting on condition [0xb6b56000]
     [java]    java.lang.Thread.State: WAITING (parking)
     [java] 	at sun.misc.Unsafe.park(Native Method)
     [java] 	- parking to wait for  <0xb241a4e8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
     [java] 	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
     [java] 	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
     [java] 	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)
     [java] 	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
     [java] 	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
     [java] 	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1262)
     [java] 	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1368)
     [java] 	- locked <0xb23dad48> (a java.lang.Object)
     [java] 	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:303)
     [java] 	at org.apache.activemq.ActiveMQConnection.createTopicSession(ActiveMQConnection.java:1065)
     [java] 	at org.apache.log4j.net.JMSAppender.activateOptions(JMSAppender.java:217)
     [java] 	at org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:257)
     [java] 	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:133)
     [java] 	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:97)
     [java] 	at org.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:689)
     [java] 	at org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:647)
     [java] 	at org.apache.log4j.PropertyConfigurator.configureRootCategory(PropertyConfigurator.java:544)
     [java] 	- locked <0xb1ea1260> (a org.apache.log4j.spi.RootLogger)
     [java] 	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:440)
     [java] 	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:476)
     [java] 	at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:471)
     [java] 	at org.apache.log4j.LogManager.<clinit>(LogManager.java:125)
     [java] 	at org.apache.log4j.Logger.getLogger(Logger.java:105)
     [java] 	at org.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:283)
     [java] 	at org.apache.commons.logging.impl.Log4JLogger.<init>(Log4JLogger.java:108)
     [java] 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
     [java] 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
     [java] 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
     [java] 	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.createLogFromClass(LogFactoryImpl.java:1040)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.discoverLogImplementation(LogFactoryImpl.java:838)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.newInstance(LogFactoryImpl.java:601)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:333)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:307)
     [java] 	at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:645)
     [java] 	at org.apache.activemq.ActiveMQPrefetchPolicy.<clinit>(ActiveMQPrefetchPolicy.java:38)
     [java] 	at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:90)
     [java] 	at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:131)
     [java] 	at Log4jJMSAppenderExample.<init>(Unknown Source)
     [java] 	at Log4jJMSAppenderExample.main(Unknown Source)
     [java] 
     [java] ""VM Thread"" prio=10 tid=0x08878c00 nid=0x553a runnable 
     [java] 
     [java] ""GC task thread#0 (ParallelGC)"" prio=10 tid=0x08805000 nid=0x5536 runnable 
     [java] 
     [java] ""GC task thread#1 (ParallelGC)"" prio=10 tid=0x08806800 nid=0x5537 runnable 
     [java] 
     [java] ""VM Periodic Task Thread"" prio=10 tid=0x08898c00 nid=0x5541 waiting on condition 
     [java] 
     [java] JNI global references: 774
     [java] 
     [java] Heap
     [java]  PSYoungGen      total 18816K, used 13407K [0xb1860000, 0xb2d50000, 0xb39b0000)
     [java]   eden space 16192K, 82% used [0xb1860000,0xb2577c88,0xb2830000)
     [java]   from space 2624K, 0% used [0xb2ac0000,0xb2ac0000,0xb2d50000)
     [java]   to   space 2624K, 0% used [0xb2830000,0xb2830000,0xb2ac0000)
     [java]  PSOldGen        total 43008K, used 0K [0xad5b0000, 0xaffb0000, 0xb1860000)
     [java]   object space 43008K, 0% used [0xad5b0000,0xad5b0000,0xaffb0000)
     [java]  PSPermGen       total 16384K, used 4430K [0xa95b0000, 0xaa5b0000, 0xad5b0000)
     [java]   object space 16384K, 27% used [0xa95b0000,0xa9a03b10,0xaa5b0000)
     [java] 
     [java] log4j:ERROR Error while activating options for appender named [jms].
     [java] javax.jms.JMSException: Channel was inactive for too long: localhost/127.0.0.1:61616
     [java] 	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
     [java] 	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1273)
     [java] 	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1368)
     [java] 	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:303)
     [java] 	at org.apache.activemq.ActiveMQConnection.createTopicSession(ActiveMQConnection.java:1065)
     [java] 	at org.apache.log4j.net.JMSAppender.activateOptions(JMSAppender.java:217)
     [java] 	at org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:257)
     [java] 	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:133)
     [java] 	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:97)
     [java] 	at org.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:689)
     [java] 	at org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:647)
     [java] 	at org.apache.log4j.PropertyConfigurator.configureRootCategory(PropertyConfigurator.java:544)
     [java] 	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:440)
     [java] 	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:476)
     [java] 	at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:471)
     [java] 	at org.apache.log4j.LogManager.<clinit>(LogManager.java:125)
     [java] 	at org.apache.log4j.Logger.getLogger(Logger.java:105)
     [java] 	at org.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:283)
     [java] 	at org.apache.commons.logging.impl.Log4JLogger.<init>(Log4JLogger.java:108)
     [java] 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
     [java] 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
     [java] 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
     [java] 	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.createLogFromClass(LogFactoryImpl.java:1040)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.discoverLogImplementation(LogFactoryImpl.java:838)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.newInstance(LogFactoryImpl.java:601)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:333)
     [java] 	at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:307)
     [java] 	at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:645)
     [java] 	at org.apache.activemq.ActiveMQPrefetchPolicy.<clinit>(ActiveMQPrefetchPolicy.java:38)
     [java] 	at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:90)
     [java] 	at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:131)
     [java] 	at Log4jJMSAppenderExample.<init>(Unknown Source)
     [java] 	at Log4jJMSAppenderExample.main(Unknown Source)
     [java] Caused by: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: localhost/127.0.0.1:61616
     [java] 	at org.apache.activemq.transport.InactivityMonitor$4.run(InactivityMonitor.java:174)
     [java] 	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
     [java] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
     [java] 	at java.lang.Thread.run(Thread.java:619)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Directory Traversal Vulnerability,AMQ-2788,12482941,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,22/Jun/10 07:32,22/Jun/10 07:36,30/Jan/20 16:55,22/Jun/10 07:32,5.3.1,5.3.2,,,,,,5.4.0,,,,,,,0,"Due to vulnerability in Jetty's ResourceHandler (http://jira.codehaus.org/browse/JETTY-1004), ActiveMQ installations on Windows are prone to this vulnerability. For example you can see the README file by entering the following url: http://localhost:8161/\../\../README.txt

This is solved by moving to 7.x Jetty version on trunk and upcoming 5.4.0 release.

People affected with this issue should either upgrade manually to Jetty 6.1.17 or remove resource handler declaration by commenting out or deleting the following snippet from jetty.xml:

                   <bean class=""org.mortbay.jetty.handler.ContextHandler"">
                       <property name=""contextPath"" value=""/""/>
                       <property name=""handler"">
                           <bean class=""org.mortbay.jetty.handler.ResourceHandler"">
                               <property name=""welcomeFiles"">
                                   <list>
                                       <value>index.html</value>
                                   </list>
                               </property>
                               <property name=""resourceBase"" value=""${activemq.base}/webapps/static/""/>
                           </bean> 
                       </property>
                   </bean>",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74801,,,2010-06-22 07:32:10.0,,,,,,,,"0|i0rquv:",159995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of Brokers becomes overwhelmed with Advisory Messages on Temporary Queues,AMQ-2782,12482969,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,17/Jun/10 08:33,17/Jun/10 14:57,30/Jan/20 16:55,17/Jun/10 14:57,5.3.2,,,,,,,5.4.0,,,Broker,,,,0,,,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74803,,,Thu Jun 17 14:57:14 UTC 2010,,,,,,,,"0|i0rq6v:",159887,,,,,,,,,,,,,,,,,,,"17/Jun/10 14:57;dejanb;Fixed with svn revision 955621",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ failed to start after server crash,AMQ-2672,12482971,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,ruralhunter,ruralhunter,26/Mar/10 03:02,17/Jun/10 11:57,30/Jan/20 16:55,17/May/10 13:33,5.3.0,5.3.1,,,,,,5.4.0,,,Message Store,,,,0,"I'm using kahadb as storage. I have seen this several times, for both 5.3.0 and 5.3.1. If there are many messages in queues and ActiveMQ is not stopped in a correct manner, such as server crash or reboot accidentally, then ActiveMQ can not be started. I have to delete all files in data directory to make it start-able. But this kind of operation causes data loss. Is there anyway to fix that? Here is the log when it fails to start:
2010-03-23 21:28:19,187 | INFO  | ActiveMQ 5.3.1 JMS Message Broker (datacenter) is starting | org.apache.activemq.broker.BrokerService | main
2010-03-23 21:28:19,187 | INFO  | For help or more information please see: http://activemq.apache.org/ | org.apache.activemq.broker.BrokerService | main
2010-03-23 21:28:19,937 | INFO  | Kaha Store using data directory D:\Application\apache-activemq-5.3.1\bin\..\data\datacenter\tmp_storage | org.apache.activemq.kaha.impl.KahaStore | main
2010-03-23 21:28:21,687 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException | org.apache.activemq.broker.BrokerService | main
java.lang.NullPointerException
        at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:109)
        at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:120)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:222)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:219)
        at org.apache.activemq.broker.region.Queue.initialize(Queue.java:251)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
        at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:464)
        at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:268)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:153)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
        at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)
        at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:178)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:100)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
        at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1707)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
2010-03-23 21:28:21,781 | INFO  | ActiveMQ Message Broker (datacenter, null) is shutting down | org.apache.activemq.broker.BrokerService | main
2010-03-23 21:28:21,781 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | main
2010-03-23 21:28:22,843 | INFO  | ActiveMQ JMS Message Broker (datacenter, null) stopped | org.apache.activemq.broker.BrokerService | main",Windows 2003,rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-03-29 14:16:30.644,,,false,,,,,,,,,,,,,,,,,74852,,,Thu Jun 17 11:57:59 UTC 2010,,,,,,,,"0|i0rq73:",159888,,,,,,,,,,,,,,,,,,,"26/Mar/10 03:09;ruralhunter;I uploaded the data folder here in case it's needed for investigation: http://rapidshare.com/files/368221874/data.zip.html","29/Mar/10 14:16;rajdavies;I could successfully read the files with trunk - do you have the same problem with 5.4-SNAPSHOT ? ","30/Mar/10 00:57;ruralhunter;I tried 5.4 snapshot. It did start successfully but looks the web admin didn't work. I could see there was no error in log but the port 8161 was just not opened. How can I verify?","30/Mar/10 08:16;dejanb;Hi,

that's strange. Can you verify that you have configured web console and included jetty.xml in your configuration file. Also, can you post startup log, where should be relevant entries about starting the web server and console application.","30/Mar/10 14:47;ruralhunter;This is the startup log:
2010-03-29 23:41:00,062 | INFO  | ActiveMQ JMS Message Broker (datacenter, ID:xuxulike-bca7e5-3933-1269877226406-0:0) stopped | org.apache.activemq.broker.BrokerService | ActiveMQ ShutdownHook
2010-03-29 23:43:37,281 | INFO  | PListStore:D:\Application\apache-activemq-5.4-SNAPSHOT\bin\..\data\datacenter\tmp_storage started | org.apache.activemq.store.kahadb.plist.PListStore | main
2010-03-29 23:43:37,390 | INFO  | Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter@186d484 | org.apache.activemq.broker.BrokerService | main
2010-03-29 23:43:38,562 | INFO  | Replayed 1 operations from the journal in 0.031 seconds. | org.apache.activemq.store.kahadb.MessageDatabase | main
2010-03-29 23:43:38,625 | INFO  | ActiveMQ 5.4-SNAPSHOT JMS Message Broker (datacenter) is starting | org.apache.activemq.broker.BrokerService | main
2010-03-29 23:43:38,625 | INFO  | For help or more information please see: http://activemq.apache.org/ | org.apache.activemq.broker.BrokerService | main
2010-03-29 23:43:39,062 | INFO  | Scheduler using directory: activemq-data\scheduler | org.apache.activemq.broker.scheduler.SchedulerBroker | main
2010-03-29 23:43:39,812 | INFO  | Listening for connections at: tcp://xuxulike-bca7e5:62616 | org.apache.activemq.transport.TransportServerThreadSupport | main
2010-03-29 23:43:39,812 | INFO  | Connector openwire Started | org.apache.activemq.broker.TransportConnector | main
2010-03-29 23:43:39,828 | INFO  | ActiveMQ JMS Message Broker (datacenter, ID:xuxulike-bca7e5-1307-1269877418875-0:0) started | org.apache.activemq.broker.BrokerService | main
2010-03-29 23:43:40,000 | INFO  | Logging to org.slf4j.impl.JCLLoggerAdapter(org.eclipse.jetty.util.log) via org.eclipse.jetty.util.log.Slf4jLog | org.eclipse.jetty.util.log | main
2010-03-29 23:43:40,000 | INFO  | jetty-7.0.1.v20091125 | org.eclipse.jetty.util.log | main
2010-03-29 23:43:41,796 | INFO  | ActiveMQ WebConsole initialized. | org.apache.activemq.web.WebConsoleStarter | main
2010-03-29 23:43:42,578 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main
2010-03-29 23:43:43,046 | INFO  | ActiveMQ Console at http://0.0.0.0:8161/admin | org.eclipse.jetty.util.log | main
2010-03-29 23:43:43,687 | INFO  | Initializing Spring root WebApplicationContext | /camel | main
2010-03-29 23:44:40,875 | INFO  | Slow KahaDB access: cleanup took 1688 | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
2010-03-29 23:45:15,312 | INFO  | Slow KahaDB access: cleanup took 797 | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
2010-03-29 23:45:26,578 | INFO  | Slow KahaDB access: cleanup took 1610 | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker

The log looks fine for me but I can not even telnet to port 8161. I didn't configure anything for web console and I cann jetty is in conf:
<!-- 
        Enable web consoles, REST and Ajax APIs and demos
        Take a look at activemq-jetty.xml for more details 
    -->
    <import resource=""jetty.xml""/>","31/Mar/10 08:07;dejanb;Hi Rural,

I think you hit a Camel webapp configuration problem introduced lately. You can try the latest snapshot which contains the fix or a workaround documented here: http://cwiki.apache.org/confluence/display/ACTIVEMQ/Web+Console

Please let me know if it works for you.","01/Apr/10 15:09;ruralhunter;I tried the latest snapshot without any modification. Simply download and startup. This time http service on 8161 is open but it's still in error:
HTTP ERROR: 503

Problem accessing /admin/. Reason:

    Service Unavailable

Powered by Jetty://

This is what I can see in the log:
2010-04-01 21:24:20,609 | INFO  | jetty-7.0.1.v20091125 | org.eclipse.jetty.util.log | main
2010-04-01 21:24:21,187 | INFO  | ActiveMQ WebConsole initialized. | org.apache.activemq.web.WebConsoleStarter | main
2010-04-01 21:24:21,593 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main
2010-04-01 21:24:21,937 | INFO  | ActiveMQ Console at http://0.0.0.0:8161/admin | org.eclipse.jetty.util.log | main
2010-04-01 21:24:22,171 | INFO  | Initializing Spring root WebApplicationContext | /camel | main
2010-04-01 21:24:24,484 | ERROR | Context initialization failed | org.springframework.web.context.ContextLoader | main
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activemq' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot create inner bean 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' of type [org.apache.activemq.ActiveMQConnectionFactory] while setting bean property 'connectionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:281)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:272)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:196)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1468)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	... 60 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1012)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:857)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
	... 64 more
2010-04-01 21:24:24,656 | ERROR | Failed startup of context WebAppContext@1b88122@1b88122/camel,file:/D:/apache-activemq-5.4-SNAPSHOT/webapps/camel/ | org.eclipse.jetty.util.log | main
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activemq' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot create inner bean 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' of type [org.apache.activemq.ActiveMQConnectionFactory] while setting bean property 'connectionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:281)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:272)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:196)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1468)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	... 60 more
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1012)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:857)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
	... 64 more
2010-04-01 21:24:24,875 | ERROR | Nested in org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activemq' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot create inner bean 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' of type [org.apache.activemq.ActiveMQConnectionFactory] while setting bean property 'connectionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.ActiveMQConnectionFactory#1e6978d' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?: | org.eclipse.jetty.util.log | main
org.springframework.beans.NotWritablePropertyException: Invalid property 'useSingleConnection' of bean class [org.apache.activemq.ActiveMQConnectionFactory]: Bean property 'useSingleConnection' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1012)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:857)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1308)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:272)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:196)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1468)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:562)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:871)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:423)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
2010-04-01 21:24:25,343 | INFO  | ActiveMQ Web Demos at http://0.0.0.0:8161/demo | org.eclipse.jetty.util.log | main
2010-04-01 21:24:25,437 | INFO  | RESTful file access application at http://0.0.0.0:8161/fileserver | org.eclipse.jetty.util.log | main
2010-04-01 21:24:25,484 | INFO  | Started SelectChannelConnector@0.0.0.0:8161 | org.eclipse.jetty.util.log | main
2010-04-01 21:24:45,921 | WARN  | Committed before 503 null | org.eclipse.jetty.util.log | qtp30964613-18","02/Apr/10 09:15;dejanb;Hi,

it's fixed in svn revision 930197. I managed to mess the simple patch. You can try the next snapshot, or apply the aforementioned workaround on the current one. Sorry about that.","02/Apr/10 11:51;ruralhunter;Sorry I tried the latest snapshot and it's still not working. same as the last build","02/Apr/10 13:07;dejanb;It's the built before the fix made in. I started another build, should be finished soon","18/Apr/10 15:41;ruralhunter;I confirm it's fixed in latest snapshot.","17/Jun/10 08:47;kiorsak;I have unwillingly and unsuspectedly reproduced exactly same issue today... then googled out this page
nice to see it has been fixed already...

but when is 5.4 coming out?

or is it maybe fixed in latest FUSE sub-releases??

thank you!
","17/Jun/10 11:57;gtully;Hi Oleg, can u also verify that the current 5.4-SNAPSHOT resolves the restart for you?

We aim to have 5.4 complete by the end of July.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException during createDurableSubscriber(),AMQ-2781,12482983,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,kevan,kevan,16/Jun/10 14:43,16/Jun/10 16:38,30/Jan/20 16:55,16/Jun/10 15:14,5.4.0,,,,,,,5.4.0,,,,,,,0,"During testing, ran into the following NullPointerException:

06-15-2010 21:06:44:  ERROR: javax.jms.JMSException: java.lang.NullPointerException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1286)
	at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1873)
	at org.apache.activemq.ActiveMQMessageConsumer.(ActiveMQMessageConsumer.java:249)
	at org.apache.activemq.ActiveMQTopicSubscriber.(ActiveMQTopicSubscriber.java:117)
	at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1275)
	at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1220)
	at org.apache.activemq.ra.ManagedSessionProxy.createDurableSubscriber(ManagedSessionProxy.java:175)
	at org.apache.activemq.ActiveMQTopicSession.createDurableSubscriber(ActiveMQTopicSession.java:147)
        ...
Caused by: java.lang.NullPointerException
	at org.apache.activemq.broker.region.Topic.deleteSubscription(Topic.java:168)
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:86)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:407)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:91)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:543)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:217)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
	at java.lang.Thread.run(Thread.java:619)

Fix seems pretty straightforward.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/10 14:46;kevan;AMQ-2781.patch;https://issues.apache.org/jira/secure/attachment/12461742/AMQ-2781.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-06-16 15:14:18.063,,,false,,,,,,,,,,,,,,,,,74804,,,Wed Jun 16 16:38:17 UTC 2010,,,,,,,,"0|i0rr7b:",160051,,,,,,,,,,,,,,,,,,,"16/Jun/10 14:46;kevan;Not yet tested, but seems to be an obvious fix...","16/Jun/10 15:14;rajdavies;Fixed by SVN revision 955039","16/Jun/10 16:38;kevan;thanks. sorry i didn't notice your updates
...
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"After failover, messages will not be delivered to MessageEndpoint",AMQ-2765,12482973,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,kevan,kevan,04/Jun/10 22:22,16/Jun/10 14:54,30/Jan/20 16:55,15/Jun/10 17:21,5.3.2,5.4.0,,,,,,5.4.0,,,Transport,,,,0,"After a failover from one broker to another, message delivery to MessageEndpoints stops. 

Standalone messaging clients seem to work fine, but RA delivery does. I see this behavior in Geronimo and have built a JUnit test which seems to show the problem, also.",,kevan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/10 22:29;kevan;AMQ-2765.patch;https://issues.apache.org/jira/secure/attachment/12461729/AMQ-2765.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-06-04 22:35:22.26,,,false,,,,,,,,,,,,,,,,,74811,,,Wed Jun 16 14:54:07 UTC 2010,,,,,,,,"0|i0rr6v:",160049,,,,,,,,,,,,,,,,,,,"04/Jun/10 22:29;kevan;This test will create two brokers in a shared filesystem/Master-Slave configuration. A connection is established to the master broker. The master broker is then stopped. The client reconnects to the slave. However, no messages will be delivered to the MessageEndpoint.","04/Jun/10 22:35;bsnyder;This issue looks similar to AMQ-2743 that is filed against 5.3.1 that did not exist in 5.3.0. ","06/Jun/10 16:50;kevan;Interesting. Thanks Bruce.

By the way, you need to clear out the message log (e.g. 'rm -rf activemq-data/'), if you're running this test multiple times. Otherwise, an undelivered message in the message log is delivered to the client (prior to the failover). Is there a programatic way to clear the log during Junit setup?","07/Jun/10 13:42;kevan;I ran my test on 5.3.0 and 5.3.1. I see the same behavior that Bruce describes. Works on 5.3.0. Does not work on 5.3.1.","15/Jun/10 17:21;gtully;resolved in r954972
same issue as https://issues.apache.org/activemq/browse/AMQ-2772 just that the fix needed a rework such that connectionConsumers can have their prefetch reinstated.

There may be a need to do some interruption processing on the RA connection consumers, in the same way that a regular consumer needs to deal with the duplicate checker. We can cross that bridge when we come to it. For the moment, the connectionConsumers just allow immediate redelivery without doing any additional work","15/Jun/10 17:24;gtully;btw, thanks for the good test.","16/Jun/10 14:54;kevan;Works great. Thanks Gary!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB lock timeout should be configurable.,AMQ-2738,12483935,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,adrian.trenaman,adrian.trenaman,18/May/10 17:21,16/Jun/10 10:19,30/Jan/20 16:55,16/Jun/10 10:19,5.3.2,,,,,,,5.4.0,,,Broker,,,,0,"The timeout for KahaDB acquiring a lock on the file store is 10seconds - surely this should be configurable! The AMQ Persistence Adaptor store was pretty much immediate in it's take up on failover from master to slave; with the hard-coded 10 second delay in KahaDB it can take too long to failover.

Thoughts? ",,adrian.trenaman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-06-16 10:19:46.82,,,false,,,,,,,,,,,,,,,,,74821,,,Wed Jun 16 10:19:46 UTC 2010,,,,,,,,"0|i0rq1b:",159862,,,,,,,,,,,,,,,,,,,"16/Jun/10 10:19;rajdavies;Fixed by SVN revision 955179 - added property databaseLockedWaitDelay on to KahaDBPersistenceAdapter with a default of 10000 ms",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topics hold consumers for unsubscribed durable subscriptions.,AMQ-2769,12483036,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,akos.baraz,akos.baraz,09/Jun/10 08:32,11/Jun/10 14:47,30/Jan/20 16:55,11/Jun/10 14:47,5.3.2,,,,,,,5.4.0,,,Broker,,,,0,"Session.unsubscribe (or broker.removeSubscription) does not remove the consumer from the topic's consumer list.
Please check my junit test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/10 08:32;akos.baraz;UnsubscribeTest.java;https://issues.apache.org/jira/secure/attachment/12461734/UnsubscribeTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-06-11 14:47:35.328,,,false,,,,,,,,,,,,,,,,,74808,,,Fri Jun 11 14:47:35 UTC 2010,,,,,,,,"0|i0rq9r:",159900,,,,,,,,,,,,,,,,,,,"11/Jun/10 14:47;dejanb;Fixed with svn revision 953708",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnectionConsumer will break failover,AMQ-2772,12483134,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,siim_kaalep,siim_kaalep,10/Jun/10 08:42,11/Jun/10 13:44,30/Jan/20 16:55,11/Jun/10 13:44,5.3.2,,,,,,,5.4.0,,,Connector,,,,0,"ActiveMQConnection.transportInterupted assumes that
dispatchers.size() == all session's consumers + one advisoryConsumer

But ActiveMQConnectionConsumer also registers itself as dispatcher in constructor.

On failover attempt connection will remain in waiting state. 
Logging ""dispatch paused, waiting for outstanding dispatch interruption processing (1) to complete..""

ActiveMQConnectionConsumer is used in ActiveMQ resource adapter in ActiveMQEndpointWorker.


Robust fix:
{noformat} 
Index: trunk/activemq-core/src/main/java/org/apache/activemq/ActiveMQConnection.java
===================================================================
--- trunk/activemq-core/src/main/java/org/apache/activemq/ActiveMQConnection.java
+++ trunk/activemq-core/src/main/java/org/apache/activemq/ActiveMQConnection.java
@@ -1840,7 +1840,7 @@
 	}
 
     public void transportInterupted() {
-        transportInterruptionProcessingComplete = new CountDownLatch(dispatchers.size() - (advisoryConsumer != null ? 1:0));
+        transportInterruptionProcessingComplete = new CountDownLatch(dispatchers.size() - (advisoryConsumer != null ? 1:0) - connectionConsumers.size());
         if (LOG.isDebugEnabled()) {
             LOG.debug(""transport interrupted, dispatchers: "" + transportInterruptionProcessingComplete.getCount());
         }
{noformat} ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-06-11 13:44:19.699,,,false,,,,,,,,,,,,,,,,,74806,,,Fri Jun 11 13:44:19 UTC 2010,,,,,,,,"0|i0rqcf:",159912,,,,,,,,,,,,,,,,,,,"11/Jun/10 13:44;gtully;patch applied to r953696 with an additional test case. We may need some additional MDB tests that validate transaction semantics in the event of failover and no redelivery but the existing rollback logic with a timeout should suffice.
In any event, this change will prevent the block with was just plain wrong. nice catch, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed durable subscription re-activation when keepDurableSubsActive=false,AMQ-2663,12483150,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,akos.baraz,akos.baraz,24/Mar/10 09:31,09/Jun/10 10:34,30/Jan/20 16:55,09/Jun/10 10:34,5.3.1,,,,,,,5.4.0,,,Broker,,,,0,If i set keepDurableSubsActive=false then i won't get the messages after re(!)-activation. I've figured out that the DurableTopicSubscription.deactivate() invokes StoreDurableSubscriberCursor.remove() what is removes the TopicStorePrefetch from the topic. Up to this point everyting is fine. But when the durable subscription becomes active the StoreDurableSubscriberCursor.add won't be called. So DurableTopicSubscription.activate() does not put the cursor back. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/10 07:38;akos.baraz;DurableSubscriptionReactivationTest.java;https://issues.apache.org/jira/secure/attachment/12461732/DurableSubscriptionReactivationTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-06-09 07:27:24.592,,,false,,,,,,,,,,,,,,,,,74856,,,Wed Jun 09 10:34:44 UTC 2010,,,,,,,,"0|i0rqcn:",159913,,,,,,,,,,,,,,,,,,,"24/Mar/10 09:34;akos.baraz;Here is a testcase. If i set setKeepDurableSubsActive(true) then the test is passed.","09/Jun/10 07:27;dejanb;Hi, can you grant ASF license to the test, so we can include the test in the project.","09/Jun/10 07:38;akos.baraz;Granted. Thanks!","09/Jun/10 10:34;dejanb;Fixed with svn revision 952946. Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Durable Subs repeated drain and reconnect, skipping messages with kahaDB",AMQ-2755,12483246,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Jun/10 17:27,01/Jun/10 17:28,30/Jan/20 16:55,01/Jun/10 17:28,5.3.2,,,,,,,5.4.0,,,Broker,,,,0,"With kahaDB as the default store some of the durable tests fail. The issue is the next message sequence gets out of sync when a durable sub is repeatedly drained such that an new message can be incorrectly seen as an ack. A consumer can miss a message as a result.

Tests that fail: org.apache.activemq.usecases.DurableConsumerCloseAndReconnectTest.testCreateDurableConsumerCloseThenReconnect
 org.apache.activemq.network.SimpleNetworkTest.testDurableStoreAndForwardReconnect
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74814,,,Tue Jun 01 17:28:51 UTC 2010,,,,,,,,"0|i0rqmf:",159957,Unit Test Broken,,,,,,,,,,,,,,,,,,"01/Jun/10 17:28;gtully;resolved in r950171",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring && DefaultMessageListenerContainer && JmsTemplate && maxMessagesPerTask == 1 && Network of Brokers && maxConcurrentConsumer > 1 == Crumple,AMQ-2754,12483249,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,31/May/10 12:10,31/May/10 14:08,30/Jan/20 16:55,31/May/10 14:08,5.3.1,,,,,,,5.4.0,,,Broker,,,,0,"Using test case from http://mail-archives.apache.org/mod_mbox/activemq-users/201005.mbox/%3Cg2v4e6f67721005071419u5ca08751h569775ee4e682c5e@mail.gmail.com%3E

problem seems to be with conduit subscription removal, it is not taking account of dependent subscriptions. Test case was great. thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74815,,,Mon May 31 14:08:53 UTC 2010,,,,,,,,"0|i0rqfj:",159926,,,,,,,,,,,,,,,,,,,"31/May/10 14:08;gtully;fix committed in r949742",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message is delivered to DLQ in store and forward mode if two brokers clock is not in sync,AMQ-2752,12483256,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,qingyi,qingyi,26/May/10 20:23,27/May/10 19:55,30/Jan/20 16:55,27/May/10 15:24,5.3.1,,,,,,,5.4.0,,,Broker,,,,0,"I have two ActiveMQ running on two separated machines.  They use duplex network connector between them.    I am using camel InOut Pattern to send message cross these two brokers.    The InOut request timeout is 20 seconds.    If these two broker machines' clock is NOT in sync, at least the destination broker clock is more than 20 seconds ahead of the sender broker's clock,   when the message gets on destination broker side,  it is being delivered to DLQ right away.    I am not sure if there is a way to avoid this problem.  Or it just works as designed.","Windows 2003 Server,  ActiveMQ 5.3.1,  Camel 2.2.0 and Jboss 4.2.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-27 08:30:44.624,,,false,,,,,,,,,,,,,,,,,74816,,,Thu May 27 19:55:48 UTC 2010,,,,,,,,"0|i0rqh3:",159933,,,,,,,,,,,,,,,,,,,"27/May/10 08:30;gtully;it is working as designed. 
The feature that helps work around this issue is http://activemq.apache.org/timestampplugin.html but if possible, use some OS level protocol to keep the system clocks in sync on each of the machines.","27/May/10 14:27;qingyi;I did tried ""timestampplugin"",  but it didn't solve the problem in this case.   I think it is because the plugin is mainly for the leg between jms client and broker.    My case is the leg between two brokers.     Yeah, we are seeking OS level protocol to keep clocks in sync to resolve this issue.","27/May/10 15:06;gtully;ah, you may need to provide your own variant of the timestamp broker plugin, it is quite simple. Currently, it does not work if a message has come from a network which is your use case. not sure why that is, I think that should be made optional. In the code it has{code}if (message.getTimestamp() > 0
            && (message.getBrokerPath() == null || message.getBrokerPath().length == 0)) {
            // timestamp not been disabled and has not passed through a network{code}. which ensures it does not work for your use case atm.","27/May/10 15:24;gtully;in r948858, added processNetworkMessages attribute (default false) to TimeStampBrokerPlugin to allow it to modify network messages. ","27/May/10 19:55;qingyi;Tested with r948858,  it works now.  Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Embedded broker not shutting down cleanly because of lingering threads,AMQ-2568,12483264,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,fredmoore,fredmoore,14/Jan/10 15:35,21/May/10 02:20,30/Jan/20 16:55,20/May/10 12:03,5.3.0,,,,,,,5.4.0,,,Broker,JMX,,,0,"See also this thread: http://mail-archives.apache.org/mod_mbox/activemq-users/201001.mbox/%3C4E50CAAD-0600-46FB-B5D0-B623C21A362D@gmail.com%3E

See also this bug: http://issues.apache.org/activemq/browse/AMQ-1214

========================

we have a 5.3.0 embedded broker that refuses to shutdown cleanly because of lingering threads. A long time (dozens of seconds) after broker stop() is called,  these threads are still active:

* [ActiveMQ Scheduler] (Daemon) Group: main
* [Timer-0] (Daemon) Group: main

We discovered that [ActiveMQ Scheduler] can be closed adding this snippet to our code:

Scheduler scheduler = Scheduler.getInstance();
scheduler.shutdown();

After doing this the other lingering thread -- ""[Timer-0]"" -- did not go away, but at least we discovered that this timer is JMX related: if we disable JMX connector the timer disappear.",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-01-15 19:59:39.966,,,false,,,,,,,,,,,,,,,,,74889,,,Fri May 21 02:20:22 UTC 2010,,,,,,,,"0|i0rqgn:",159931,,,,,,,,,,,,,,,,,,,"15/Jan/10 19:59;rajdavies;There are a lot of references to the Scheuler - safer to defer this to 6.0","20/May/10 12:03;rajdavies;Fixed by SVN revision 946600","21/May/10 02:20;candy.chiu.ad;Is this related to the ""ActiveMQ Data File Writer"" thread not being cleaned up?  This thread is keeping the Java VM from exiting even after I called Scheduler.getInstance().shutdown().",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak & huge thread count in broker,AMQ-2706,12483291,12483633,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,kalamaks,kalamaks,22/Apr/10 14:15,20/May/10 11:02,30/Jan/20 16:55,07/May/10 15:52,5.3.1,,,,,,,5.4.0,,,,,,,0,"I'm using request/replay pattern where client on BrokerA  creates message and start listening response from temporary-queue, consumer listening on BrokerB, after getting message it sends respond back to the temporary queue.
After getting message back, client on BrokerA removes temporary queue and closes session and closes connection
Now if I take a look to the jmx then everythink is OK on BrokerA side. No hangig tmp queues no too many threads. On BrokerB every message lives hanging temporary queue and thread. Even if I shut down BrokerA there are still hanging tmp queue on brokerB and one extra thread.
Now if I send 10k messages from BrokerA there is 10K temporary quest and 10K threads on brokerA

Example setup:

| Broker A  <NetworkConnector duplex=true> | ----->  |  Broker B |


","Linux ubuntu/Java HotSpot(TM) 64-Bit Server VM (build 14.1-b02, mixed mode)",kalamaks,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Apr/10 14:23;kalamaks;memtest.zip;https://issues.apache.org/jira/secure/attachment/12461677/memtest.zip","22/Apr/10 14:17;kalamaks;snapshot6.png;https://issues.apache.org/jira/secure/attachment/12461675/snapshot6.png","22/Apr/10 14:17;kalamaks;snapshot7.png;https://issues.apache.org/jira/secure/attachment/12461676/snapshot7.png",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2010-05-07 15:52:25.123,,,false,,,,,,,,,,,,,,,,,74836,,,Fri May 07 18:47:36 UTC 2010,,,,,,,,"0|i0rpuv:",159833,,,,,,,,,,,,,,,,,,,"22/Apr/10 14:17;kalamaks;JMX consle","22/Apr/10 14:23;kalamaks;there is 2 classes (Client = BrokerA  and Server = BrokerB ) for reproducing a problem","07/May/10 15:52;dejanb;Fixed with svn revision 942131.

The problem was with destination infos not being propagated to the remote broker, so temp destination were kept lingering.

However, I think your solution with new temp queue for every message is not optimal, and you should use one temp queue and correlation id. See http://activemq.apache.org/how-should-i-implement-request-response-with-jms.html for more info","07/May/10 18:47;kalamaks;tnx Dejan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contradictory documentation on default dispatchAsync value,AMQ-2739,12483271,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,scotte,scotte,19/May/10 00:39,19/May/10 15:47,30/Jan/20 16:55,19/May/10 08:36,,,,,,,,5.4.0,,,Documentation,,,,0,"The page http://activemq.apache.org/consumer-dispatch-async.html states:

""The default setting is dispatchAsync=true""

However, the page http://activemq.apache.org/destination-options.html shows:

consumer.dispatchAsync	 false (Default Value)

Which is the actual default setting?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-19 08:36:20.992,,,false,,,,,,,,,,,,,,,,,74820,,,Wed May 19 15:47:41 UTC 2010,,,,,,,,"0|i0rr8n:",160057,,,,,,,,,,,,,,,,,,,"19/May/10 08:36;gtully;default is true, fixed that wiki page. thanks.","19/May/10 15:47;scotte;Thank you!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression: Inactivity monitor does not time out stale connections.,AMQ-2511,12483284,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,25/Nov/09 17:22,14/May/10 08:41,30/Jan/20 16:55,14/May/10 08:41,5.3.0,,,,,,,5.3.2,5.4.0,,Broker,,,,0,"The fix @ AMQ-2088 cause a the Inactivity Monitor to regress.

Now when a socket is waiting to read the next message, or is in the middle of receiving the next message it sets a flag that disable the inactivity monitor from timing out the connection. The problem is that if the connection gets hung, then it won't time out since the flag is set.

I think a better approach would be for the wireformat to expose a counter which is incremented as data is read.

That way between inactivity check intervals the inactivity monitor can check to see if that value has changed since it's last check.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-14 08:41:33.603,,,false,,,,,,,,,,,,,,,,,74914,,,Fri May 14 08:41:33 UTC 2010,,,,,,,,"0|i0rqhz:",159937,Regression,,,,,,,,,,,,,,,,,,"25/Nov/09 20:57;chirino;fix applied to 5.4 branch in rev 884267.
need to back port to 5.3 branch.","14/May/10 08:41;gtully;fix is also on 5.3 branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FTP Blob send should fail if file store fails,AMQ-2732,12483282,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,13/May/10 15:33,13/May/10 15:41,30/Jan/20 16:55,13/May/10 15:41,5.3.2,,,,,,,5.4.0,,,,,,,0,Currently we don't check whether storing a file on the server succeeds or not.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74823,,,Thu May 13 15:41:18 UTC 2010,,,,,,,,"0|i0rqhj:",159935,,,,,,,,,,,,,,,,,,,"13/May/10 15:41;dejanb;Resolved with svn revision 943916. Incidentally I refactored FTP related tests to be better organized and to properly set write access on the test ftp server. More changes to come.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dot-separated prefetch configuration variable rejected by failover transport URI,AMQ-2729,12483939,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,adrian.trenaman,adrian.trenaman,12/May/10 12:26,13/May/10 10:12,30/Jan/20 16:55,13/May/10 10:12,5.3.2,,,,,,,5.4.0,,,Connector,,,,0,"If you set the queue prefetch policy on a failover connection string, you get an exception saying that the policy is not a valid configuration option.

{code}
failover://(tcp://localhost:61616?jms.prefetchPolicy.queuePrefetch=1)
{code}

To test, simply modify the URL in the example/build.xml file from an installation of ActiveMQ, and then run the producer using 'ant producer'. I think that this may be related to the fact that the variable in question - 'jms.prefetchPolicy.queuePrefetch' - has dots (periods) in the name. 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-12 12:39:33.042,,,false,,,,,,,,,,,,,,,,,74825,,,Thu May 13 10:12:15 UTC 2010,,,,,,,,"0|i0rqjz:",159946,,,,,,,,,,,,,,,,,,,"12/May/10 12:39;dejanb;Hi Adrian,

jms.* properties must be specified on the outer url's. In this case

{code}
failover://(tcp://localhost:61616)?jms.prefetchPolicy.queuePrefetch=1
{code}

should work.","12/May/10 12:43;adrian.trenaman;Thanks Dejan for the super-quick response on this! I'm afraid I'd already tried moving the param to the outside of the failover brackets, and unfortunately this doesn't work :( Error is: 

{code}
     [java] Caught: javax.jms.JMSException: 
      Could not create Transport. Reason: java.lang.IllegalArgumentException: 
       Invalid connect parameters: {jms.prefetchPolicy.queuePrefetch=1}
{code}","12/May/10 12:54;dejanb;I just tested it more ... my original test was on the trunk and it seems that it works there. Just tried it on 5.3.0 and it gives me the exception you experienced. I'm trying to locate the issue that fixed it.","12/May/10 15:44;gtully;{code}failover:(...) {code} i.e: without the two forward slashes (//) will have the url treated as a composite which may help, but there is obviously an issue between trunk and 5.3.2","12/May/10 15:59;gtully;relevant test where the composite url is used : http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/transport/failover/FailoverUriTest.java?view=markup","12/May/10 19:17;dejanb;Gary, you're right 

{code}
failover:(tcp://localhost:61616)?jms.prefetchPolicy.queuePrefetch=1
{code}

works just fine on 5.3.x as well. Will check FailoverUriTest with // and try to figure out why it doesn't work on 5.3.x.","13/May/10 10:12;dejanb;Fixed with svn revision 943860.

It turned out that URISupport.parseQuery() didn't handle this case well. Added appropriate tests to FailoverUriTest as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify Apache Camel version of the pom,AMQ-2501,12483287,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,njiang,cmoulliard,cmoulliard,18/Nov/09 13:38,11/May/10 17:08,30/Jan/20 16:55,10/Dec/09 15:38,5.3.0,,,,,,,5.3.2,5.4.0,,,,,,0,"The current pom of the activemq project uses 2.0 as camel version.

The issue is that when we deploy activemq-camel 5.3.0 top of servicemix 4.1.0-SNAPSHOT, we have a classloading issue because activemq-camel bundle cannot import org.apache.camel.component.jms package from Camel 2.1.SNAPSHOT

May I propose to change version or add a version range in the MANIFEST file generated for activemq-camel :

The current is :

{code}
Import-Package: META-INF.services.org.apache.camel,javax.jms;version=""
 [1.1,1.2)"",org.apache.activemq;version=""[5.3,5.4)"",org.apache.activem
 q.advisory;version=""[5.3,5.4)"",org.apache.activemq.camel;version=""[5.
 3,5.4)"",org.apache.activemq.camel.component;version=""[5.3,5.4)"",org.a
 pache.activemq.camel.converter;version=""[5.3,5.4)"",org.apache.activem
 q.command;version=""[5.3,5.4)"",org.apache.activemq.kaha.impl.async;ver
 sion=""[5.3,5.4)"",org.apache.activemq.management;version=""[5.3,5.4)"",o
 rg.apache.activemq.spring;version=""[5.3,5.4)"",org.apache.activemq.tra
 nsport;version=""[5.3,5.4)"",org.apache.activemq.util;version=""[5.3,5.4
 )"",org.apache.camel;resolution:=optional;version=""[2.0,2.1)"",org.apac
 he.camel.component.jms;resolution:=optional;version=""[2.0,2.1)"",org.a
 pache.camel.impl;resolution:=optional;version=""[2.0,2.1)"",org.apache.
 camel.util;resolution:=optional;version=""[2.0,2.1)"",org.apache.common
 s.logging,org.apache.xbean.spring.context.v2;resolution:=optional,org
 .springframework.beans.factory;resolution:=optional;version=""[2.5,2.6
 )"",org.springframework.beans.factory.xml;resolution:=optional;version
 =""[2.5,2.6)"",org.springframework.jms.connection;resolution:=optional;
 version=""[2.5,2.6)"",org.springframework.transaction;resolution:=optio
 nal;version=""[2.5,2.6)""
{code}",,cmoulliard,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/09 13:59;cmoulliard;MANIFEST.MF;https://issues.apache.org/jira/secure/attachment/12461481/MANIFEST.MF",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-12-04 10:33:13.019,,,false,,,,,,,,,,,,,,,,,74917,,,Tue May 11 17:05:05 UTC 2010,,,,,,,,"0|i0rpzb:",159853,,,,,,,,,,,,,,,,,,,"18/Nov/09 13:59;cmoulliard;Here is a MANIFEST file modified for activemq-camel 5.3.0 allowing to use camel from release 2.0 to 2.1","04/Dec/09 10:33;thewinch;Did this solve the issue?
I use the same configuration as you, and I patched activemq-camel 5.3.0 to include your modified header. But when I instanciate a bundle that uses the activemq-camel component, I get the following error:

karaf@root> Exception in thread ""SpringOsgiExtenderThread-83"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'camel': Invocation o
f init method failed; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Error loading class [org.apache.activemq.camel.component.ActiveM
QComponent] for bean with name 'activemq' defined in URL [bundle://213.1:0/META-INF/spring/camel-context.xml]: problem with class file or dependent class; nested exceptio
n is java.lang.NoClassDefFoundError: org.apache.activemq.camel.component.ActiveMQComponent not found from bundle [DiVA :: Context :: Temperature Reader (eu.diva.tis.conte
xt.sensors.temperature-reader)]
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:308)
        at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:947)
        at org.springframework.context.support.AbstractApplicationContext.registerListeners(AbstractApplicationContext.java:701)
        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.access$1500(AbstractDelegatedExecutionApplicationContext.java:69)
        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$4.run(AbstractDelegatedExecutionApplicationContext.java:351)
        at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)
        at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.completeRefresh(AbstractDelegatedExecutionApplicationContext.java:320)
        at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor$CompleteRefreshTask.run(DependencyWaiterApplicationC
ontextExecutor.java:136)
        at java.lang.Thread.run(Thread.java:619)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Error loading class [org.apache.activemq.camel.component.ActiveMQComponent] for bean with name
'activemq' defined in URL [bundle://213.1:0/META-INF/spring/camel-context.xml]: problem with class file or dependent class; nested exception is java.lang.NoClassDefFoundE
rror: org.apache.activemq.camel.component.ActiveMQComponent not found from bundle [DiVA :: Context :: Temperature Reader (eu.diva.tis.context.sensors.temperature-reader)]

        at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1144)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)
        at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:222)
        at org.springframework.context.support.AbstractApplicationContext.getBeanNamesForType(AbstractApplicationContext.java:937)
        at org.apache.camel.spring.CamelContextFactoryBean.getBeanForType(CamelContextFactoryBean.java:539)
        at org.apache.camel.spring.CamelContextFactoryBean.afterPropertiesSet(CamelContextFactoryBean.java:185)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        ... 18 more
Caused by: java.lang.NoClassDefFoundError: org.apache.activemq.camel.component.ActiveMQComponent not found from bundle [DiVA :: Context :: Temperature Reader (eu.diva.tis
.context.sensors.temperature-reader)]
        at org.springframework.osgi.util.BundleDelegatingClassLoader.findClass(BundleDelegatingClassLoader.java:112)
        at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:156)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)
        at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)
        at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)
        ... 26 more
Caused by: java.lang.NoClassDefFoundError: org/apache/camel/component/jms/JmsComponent
        at java.lang.ClassLoader.defineClass1(Native Method)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:616)
        at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1787)
        at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:682)
        at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:60)
        at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1650)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at org.apache.felix.framework.ModuleImpl.getClassByDelegation(ModuleImpl.java:598)
        at org.apache.felix.framework.searchpolicy.R4Wire.getClass(R4Wire.java:108)
        at org.apache.felix.framework.ModuleImpl.searchImports(ModuleImpl.java:1364)
        at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:677)
        at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:60)
        at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1650)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at org.apache.felix.framework.ModuleImpl.getClassByDelegation(ModuleImpl.java:598)
        at org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1487)
        at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:897)
        at org.springframework.osgi.util.BundleDelegatingClassLoader.findClass(BundleDelegatingClassLoader.java:99)
        ... 31 more
Caused by: java.lang.ClassNotFoundException: org.apache.camel.component.jms.JmsComponent
        at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:738)
        at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:60)
        at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1650)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:316)
        ... 49 more

My bundle's dependencies are:
Import-Package = com.espertech.esper.client;version=""3.1"",eu.diva.factoryinstdiva,eu.diva.osgi.component,eu.diva.tis.api.alert,eu.diva.tis.api.context,eu.diva.tis.api.dom
ain,eu.diva.tis.context.sensors.temperature,eu.diva.tis.context.sensors.temperature.factory,eu.diva.tis.wildcat.osgi,javax.jms,net.sf.cglib.reflect,org.apache.activemq.camel.component,org.apache.camel;version=""2.1.0.SNAPSHOT"",org.apache.camel.builder;version=""2.1.0.SNAPSHOT"",org.apache.camel.model;version=""2.1.0.SNAPSHOT"",org.apache.camel.osgi,org.osgi.service.log,org.ow2.wildcat;version=""2.1"",org.slf4j;version=""1.5""

And I have camel-jms[2.1.0-SNAPSHOT] installed with the modified activemq-camel and activemq 5.3.0.","10/Dec/09 15:33;njiang;I changed import package org.apache.camel* version to [2,3). 
So we will make activemq-camel component happy with a larger range of camel :)","10/Dec/09 15:38;njiang;@Vincent,, 
The Mainfest file of Charles can resolve your issue of using camel-2.1-SNAPSHOT with activemq-camel 5.3.0, 
Please make sure you load you patched version of activemq-camel into the OSGi platform.
","11/Dec/09 08:34;thewinch;I was in fact using a messed up version of Camel 2.1-SNAPSHOT. I can confirm that your patch solves the issue.","11/Dec/09 08:51;njiang;@Vincent,

Thanks for you confirmation.
If you have time , please verify my fix of Activemq-Camel  5.4-SNAPSHOT :)","31/Mar/10 11:10;njiang;Also merged the this patch into ActiveMq 5.3 branch, it should be a part of ActiveMQ 5.3.2.","11/May/10 17:05;gtully;this made the 5.3.2 release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
network of brokers distributes messages to brokers with 0 consumers with dynamicOnly=true set,AMQ-2135,12483286,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dhoffman,dhoffman,21/Feb/09 01:47,10/May/10 16:22,30/Jan/20 16:55,10/May/10 16:22,5.2.0,,,,,,,5.3.1,,,Broker,,,,4,"using only the example code, the 5.2.0 release can be made to distribute messages to brokers with no consumers, which remain at those brokers and are never consumed, unless a consumer later connects specifically to those brokers.
this bug is not reproducible in 5.1.0.

to reproduce:
run 3 brokers.  connect a consumer to brokers 1 and 2.  connect a producer to broker 1.  not all messages produced will be received by the 2 consumers.  note that the specific brokers connected to matters for the 3-broker case.  for example, on my machine, if the producer connects to broker 2 instead of broker 1, all messages are received.  you may need to try various combinations of consumer/producer connections to reproduce the problem, but this specific setup breaks reliably for me.

this problem becomes more pronounced and easier to reproduce as the number of brokers increases.

specific configuration used to reproduce:

3 broker config xml files:
testamq1.xml
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

  <broker brokerName=""b1"" xmlns=""http://activemq.apache.org/schema/core"" useJmx=""false"" advisorySupport=""true"">

    <persistenceAdapter>
      <amqPersistenceAdapter directory=""activemq-data1"" maxFileLength=""32mb""/>
    </persistenceAdapter>

    <transportConnectors>
      <transportConnector uri=""tcp://localhost:61616""/>
    </transportConnectors>

    <networkConnectors>
      <networkConnector uri=""static://(tcp://localhost:61617,tcp://localhost:61618)"" dynamicOnly=""true"" networkTTL=""5""/>
    </networkConnectors>

  </broker>
</beans>

testamq2.xml
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

  <broker brokerName=""b2"" xmlns=""http://activemq.apache.org/schema/core"" useJmx=""false"" advisorySupport=""true"">

    <persistenceAdapter>
      <amqPersistenceAdapter directory=""activemq-data2"" maxFileLength=""32mb""/>
    </persistenceAdapter>

    <transportConnectors>
      <transportConnector uri=""tcp://localhost:61617""/>
    </transportConnectors>

    <networkConnectors>
      <networkConnector uri=""static://(tcp://localhost:61616,tcp://localhost:61618)"" dynamicOnly=""true"" networkTTL=""5""/>
    </networkConnectors>

  </broker>
</beans>

testamq3.xml
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

  <broker brokerName=""b3"" xmlns=""http://activemq.apache.org/schema/core"" useJmx=""false"" advisorySupport=""true"">


    <persistenceAdapter>
      <amqPersistenceAdapter directory=""activemq-data3"" maxFileLength=""32mb""/>
    </persistenceAdapter>

    <transportConnectors>
      <transportConnector uri=""tcp://localhost:61618""/>
    </transportConnectors>

    <networkConnectors>
      <networkConnector uri=""static://(tcp://localhost:61616,tcp://localhost:61617)"" dynamicOnly=""true"" networkTTL=""5""/>
    </networkConnectors>

  </broker>
</beans>


run 3 brokers:
bin/activemq xbean:testamq1.xml
bin/activemq xbean:testamq2.xml
bin/activemq xbean:testamq3.xml

run 2 consumers (from examples directory):
ant consumer -Durl=""failover:(tcp://localhost:61616)"" -Dsubject=""test.queue"" -Dmax=100 -DsleepTime=3
ant consumer -Durl=""failover:(tcp://localhost:61617)"" -Dsubject=""test.queue"" -Dmax=100 -DsleepTime=3

run 1 producer (from examples directory) with 10 messages:
ant producer -Durl=""failover:(tcp://localhost:61616)"" -Dsubject=""test.queue"" -Dmax=10

consumers will not receive all messages.",linux (centos 4.6) using ActiveMQ 5.2.0 binary distribution,danellisuk,garthpatil,rwitcher,thrasher,tpounds,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Feb/10 20:40;yinghe0101;AMQ-2135-022010.patch;https://issues.apache.org/jira/secure/attachment/12461609/AMQ-2135-022010.patch","18/Mar/09 17:47;yinghe0101;AMQ-2135-Patch-03182009.patch;https://issues.apache.org/jira/secure/attachment/12461409/AMQ-2135-Patch-03182009.patch","09/Mar/09 17:00;seanoc;AMQ-2135-UnitTest.patch;https://issues.apache.org/jira/secure/attachment/12461386/AMQ-2135-UnitTest.patch","05/Feb/10 20:40;yinghe0101;AMQ2135Test.java;https://issues.apache.org/jira/secure/attachment/12461608/AMQ2135Test.java","03/Mar/09 19:16;garthpatil;testamq1.log;https://issues.apache.org/jira/secure/attachment/12461256/testamq1.log","03/Mar/09 19:16;garthpatil;testamq2.log;https://issues.apache.org/jira/secure/attachment/12461357/testamq2.log","03/Mar/09 19:16;garthpatil;testamq3.log;https://issues.apache.org/jira/secure/attachment/12461289/testamq3.log",,,,,7.0,,,,,,,,,,,,,,,,,,,,2009-03-03 16:50:10.31,,,false,,,,,,,,,,,,,,,,,75060,,,Mon May 10 16:22:25 UTC 2010,,,,,,,,"0|i0s1f3:",161706,,,,,,,,,,,,,,,,,,,"03/Mar/09 16:50;gtully;in the scenario you describe above, can you see messages on broker 3(61618  - with no consumers) in the JMX or WebConsole?","03/Mar/09 18:43;echuta86;I have run the same tests and came to the same issue. Using JMX, you can see that the queueSize is n, where n is the number of undelivered messages.

I've also noticed that the undelivered messages will stay on the broker. If you set a consumer to hit the broker with the undelivered message, the messages will be delivered.","03/Mar/09 19:16;garthpatil;Attached 3 log files from running the example provided in the initial issue (with log4j.logger.org.apache.activemq=TRACE). The result of the test is that the first consumer (connected to 61616) consumes 5 messages, the second consumer (connected to 61617) consumes 2 messages, and 3 messages are orphaned on the 3rd broker (61618).

This seems to be a rather critical bug, given that a simple use case for a network of brokers does not function properly.","05/Mar/09 01:19;echuta86;I have traced through the source code on 5.2 and pin-pointed the following behavior:

org.apache.activemq.broker.region.Queue @ doDispatch(List<QueueMessageReference) 
there is a line of code that checks whether a subscription can be selected for the message based on the message's brokerPath (hops, visited before, etc). This path can potentially fill up to ""n"". (where n=# of brokers in the network). At that point, it will run through all the subscriptions in the list and not be assigned to any queue and the message gets orphaned on that broker.

I have run the same test and traced through the source code on 5.1 at the same block of code and observed that the brokerPath for a message will never be more than 1. (n=1)
","09/Mar/09 17:00;seanoc;Unit test which reproduces the problem","09/Mar/09 17:53;tpounds;I would like to mention that I have seen something similar with the following configuration:

[producer] -> [broker 1] -> [broker 2] -> consumer

I noticed that I get a small number of messages delivered to broker 2 when the active consumer is closed.  I suspect this has something to do with the preftech limit on the URI which results in one last batch of messages to be dispatched to the broker even though the consumer has been closed. I'm not sure if this is a race condition or not but the scenario mentioned above can be reproduced by producing 1000 messages or so and randomly stopping the consumer on broker 2.","16/Mar/09 22:37;yinghe0101;I am able to reproduce this when I connect , stop and connect consumers many times. It might be the consumer is not removed cleanly on all the brokers when it disconnected.","18/Mar/09 17:47;yinghe0101;this AMQ-2135-Patch-03182009.patch fixes the issue. Junit test is passed, test 4 brokers, with producer rotate on each one. 

Note: ConduitBridge.java has change for AMQ-2104, please ignore that. I generate mine on 5.2.0 tag version. Also subscriptionMapByRemoteId is not used by this bridge so i override the parent method to get rid of putting consumer into it. It will never be removed. 

Please review this and apply to trunk once considering this is a valid fix.","29/Apr/09 23:53;garthpatil;The AMQ-2135-Patch-03182009.patch reliably passes the JUnit test case for low MESSAGE_COUNT numbers (e.g. less than 100), but reliably fails the test case when MESSAGE_COUNT is large. I am using 1000 for MESSAGE_COUNT, and it has never passed.","05/Feb/10 20:40;yinghe0101;hi, the old AMQ-2135-UnitTest.patch has a Thread.sleep(1000) so after the producer produce, wait for 1s, then it starts to check how many messages are consumed and apparently when the message number increases, it needs to give more time for the consumer to consume the messages.

I made a patch on today's trunk r906983

Attached are the AMQ2135Test.java which demonstrate the problem with the trunk code. You will see the test will never quit because it will never consume all the messages produced.
and apply AMQ-2135-022010.patch it will fix the issue. ","15/Mar/10 16:06;yinghe0101;try suppressDuplicateQueueSubscriptions=""true"" on the networkConnector in the conf, this issue seems fixed from 5.3 see http://activemq.apache.org/networks-of-brokers.html by default this attribute is false so you will still experience stuck message on a network of broker bridged by multicast","06/May/10 08:30;gtully;ying,
can you clarify where you are with this issue. Do we have a test case that fails on 5.2 and works on 5.3.0|5.3.1 or do we still need to apply your patches? I would like to commit the  test case if that is the case and close this.","10/May/10 16:09;yinghe0101;hi, gary,
it is fixed from 5.3 on. The only thing the user need to add is suppressDuplicateQueueSubscriptions=""true"" on the networkConnector in the conf if they are using a network of brokers in a certain way. that fixed the issue i saw. No need to apply my patches. thanks","10/May/10 16:22;gtully;making resolved post Ying's comment on the resolution. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak when there are network connector retries to an unavailable broker,AMQ-2448,12483296,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,alexjfisher,alexjfisher,13/Oct/09 13:15,06/May/10 06:44,30/Jan/20 16:55,24/Mar/10 12:03,5.3.0,,,,,,,5.4.0,,,Broker,,,,2,"I've discovered a reproducible memory leak.  After discussion on IRC, it is believed to be related to my network of brokers configuration.
I have a total of 4 brokers configured on 4 hosts (activemq1,2,3,4).
activemq1 and activemq2 are a shared filesystem master slave pair.  activemq3 and activemq4 are setup in a similar way as a master/slave pair.
Only one of activemq1 and 2 will be active at a time, likewise only one of activemq3 and 4.

Both activemq1 and activemq2 have a config with the following networkConnector.
<networkConnectors>
                <networkConnector
                        uri=""static://(tcp://activemq3:61616,tcp://activemq4:61616)""
                        name=""Connection to 3 and 4""
                        networkTTL=""5""
                        dynamicOnly=""true""/>
</networkConnectors>

The broker will only be able to connect to either 3 or 4 as only one can be running at a time.
For obvious reasons, connecting to the slave will fail, but the connection attempt will be retried every 30 seconds by default (more often on initial startup due to backoff algorithm).
It is believed that the continuous reconnect attempts are the source of the memory leak.",Debian Linux 5.0 amd64 with included Sun Java 6 JRE,alexjfisher,mlukica,nbryant,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/10 12:54;gtully;AMQ-2448.workingVMtest.patch;https://issues.apache.org/jira/secure/attachment/12461613/AMQ-2448.workingVMtest.patch","13/Oct/09 13:18;alexjfisher;activemq1.xml;https://issues.apache.org/jira/secure/attachment/12461563/activemq1.xml","13/Oct/09 13:18;alexjfisher;activemq2.xml;https://issues.apache.org/jira/secure/attachment/12461562/activemq2.xml","13/Oct/09 13:18;alexjfisher;activemq3.xml;https://issues.apache.org/jira/secure/attachment/12461564/activemq3.xml","13/Oct/09 13:18;alexjfisher;activemq4.xml;https://issues.apache.org/jira/secure/attachment/12461565/activemq4.xml",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,2009-10-13 15:35:33.405,,,false,,,,,,,,,,,,,,,,,74940,,,Fri Apr 09 13:35:29 UTC 2010,,,,,,,,"0|i0rpzj:",159854,Regression,,,,,,,,,,,,,,,,,,"13/Oct/09 13:26;alexjfisher;The following comes from a Java Heap dump I did after about 12 hours of operation.  No messages were sent in this time.  The dumpfile used was over 500MB so I'm not attaching it.
I could start fresh and generate and attach a dump after 10 minutes or so if this would help.

Instance Counts for All Classes (excluding platform)
7343 instances of class [Lorg.apache.activemq.command.ActiveMQDestination;
5499 instances of class org.apache.activemq.transport.MutexTransport
5499 instances of class org.apache.activemq.transport.ResponseCorrelator
5499 instances of class org.apache.activemq.util.IntSequenceGenerator
3838 instances of class org.apache.activemq.management.CountStatisticImpl
3668 instances of class [Lorg.apache.activemq.command.DataStructure;
3667 instances of class org.apache.activemq.thread.Valve
3666 instances of class [Lorg.apache.activemq.command.BrokerId;
1843 instances of class org.apache.activemq.command.WireFormatInfo
1836 instances of class org.apache.activemq.util.LongSequenceGenerator
1835 instances of class org.apache.activemq.util.IdGenerator
1834 instances of class org.apache.activemq.openwire.OpenWireFormat
1834 instances of class org.apache.activemq.thread.DedicatedTaskRunner
1834 instances of class org.apache.activemq.thread.DedicatedTaskRunner$1
1834 instances of class org.apache.activemq.util.DataByteArrayInputStream
1834 instances of class org.apache.activemq.util.DataByteArrayOutputStream
1833 instances of class org.apache.activemq.broker.SingleTransportConnectionStateRegister
1833 instances of class org.apache.activemq.broker.TransportConnection
1833 instances of class org.apache.activemq.broker.TransportConnection$1
1833 instances of class org.apache.activemq.broker.region.ConnectionStatistics
1833 instances of class org.apache.activemq.network.ConduitBridge
1833 instances of class org.apache.activemq.network.DemandForwardingBridgeSupport$1
1833 instances of class org.apache.activemq.network.DemandForwardingBridgeSupport$2
1833 instances of class org.apache.activemq.network.DiscoveryNetworkConnector$1
1833 instances of class org.apache.activemq.transport.InactivityMonitor
1833 instances of class org.apache.activemq.transport.InactivityMonitor$1
1833 instances of class org.apache.activemq.transport.InactivityMonitor$2
1833 instances of class org.apache.activemq.transport.WireFormatNegotiator
1833 instances of class org.apache.activemq.transport.tcp.TcpTransport
1833 instances of class org.apache.activemq.transport.vm.VMTransport
1833 instances of class org.apache.activemq.transport.vm.VMTransportServer$1
569 instances of class org.apache.activemq.transport.TransportDisposedIOException
445 instances of class org.mortbay.util.StringMap$Node
374 instances of class org.springframework.beans.GenericTypeAwarePropertyDescriptor
289 instances of class org.mortbay.io.BufferCache$CachedBuffer
179 instances of class org.apache.log4j.CategoryKey
152 instances of class [Lorg.mortbay.util.StringMap$Node;
130 instances of class org.mortbay.jetty.servlet.ServletHandler$CachedChain
113 instances of class org.apache.commons.logging.impl.Log4JLogger
113 instances of class org.apache.log4j.Logger
111 instances of class org.mortbay.io.ByteArrayBuffer
107 instances of class org.apache.activemq.util.ByteSequence
97 instances of class org.apache.activemq.transport.tcp.TcpBufferedInputStream
97 instances of class org.apache.activemq.transport.tcp.TcpBufferedOutputStream
85 instances of class $Proxy3
66 instances of class org.apache.log4j.ProvisionNode
63 instances of class org.apache.jasper.compiler.JspUtil$ValidAttribute
57 instances of class org.springframework.beans.MutablePropertyValues
57 instances of class org.springframework.beans.factory.config.ConstructorArgumentValues
57 instances of class org.springframework.beans.factory.support.MethodOverrides
56 instances of class org.springframework.beans.PropertyValue
55 instances of class org.apache.jasper.compiler.SmapStratum$LineInfo
51 instances of class org.apache.activemq.command.BrokerInfo
49 instances of class org.apache.activemq.command.ActiveMQTopic

-SNIP-","13/Oct/09 15:35;gtully;resolved in r824807
A failed network bridge remained in a bridge list, resolved by reusing an existing list of bridges that is correctly managed.","13/Oct/09 16:03;gtully;problem introduced by https://issues.apache.org/activemq/browse/AMQ-2298","10/Feb/10 09:04;srodrigu85;Hi,
I'm encountering the exact same behavior in both 5.3 branch and development trunk.
I created a simple network of brokers with all the same configuration:
<networkConnector name=""HA Queue"" uri=""static:(tcp://broker1:61616,tcp://broker2:61616,tcp://broker3:61616)?useExponentialBackOff=false"" userName=""system"" password=""manager"" duplex=""true"" />
The disables exponential back off allows me to reproduce the memory leak faster.
I stop activemq in 2 out of the 3 brokers and get a memory leak: there is nearly one thread created per second. After a while, the activeMQ will just crash.

Here is the start of the dump heat, after only 20min of running:

--start--
org.apache.activemq.command.ActiveMQDestination[]	5003
org.apache.activemq.transport.ResponseCorrelator	3750
org.apache.activemq.util.IntSequenceGenerator 3750
org.apache.activemq.transport.MutexTransport 3750
org.apache.activemq.management.CountStatisticImpl 2548
org.apache.activemq.command.DataStructure[] 2512
org.apache.activemq.thread.Valve 2504
org.apache.activemq.command.BrokerId[] 2500
org.apache.activemq.util.DataByteArrayOutputStream 1269
org.apache.activemq.util.DataByteArrayInputStream 1266
org.apache.activemq.thread.DedicatedTaskRunner$1 1259
org.apache.activemq.thread.DedicatedTaskRunner 1259
org.apache.activemq.openwire.OpenWireFormat 1256
org.apache.activemq.util.LongSequenceGenerator 1254
org.apache.activemq.util.IdGenerator 1253
org.apache.activemq.command.WireFormatInfo 1251
org.apache.activemq.broker.TransportConnection 1250
org.apache.activemq.transport.WireFormatNegotiator 1250
org.apache.activemq.transport.InactivityMonitor$2 1250
org.apache.activemq.transport.vm.VMTransportServer$1 1250
org.apache.activemq.broker.TransportConnection$1 1250
org.apache.activemq.transport.InactivityMonitor$1 1250
org.apache.activemq.network.DemandForwardingBridgeSupport$2 1250
org.apache.activemq.transport.InactivityMonitor 1250
org.apache.activemq.transport.tcp.TcpTransport	 1250
org.apache.activemq.broker.region.ConnectionStatistics 1250
org.apache.activemq.network.DurableConduitBridge 1250
org.apache.activemq.network.DiscoveryNetworkConnector$1 1250
org.apache.activemq.network.DemandForwardingBridgeSupport$1 1250
org.apache.activemq.transport.vm.VMTransport 1250
org.apache.activemq.broker.SingleTransportConnectionStateRegister	 1249
org.apache.log4j.CategoryKey 194

","11/Feb/10 02:39;srodrigu85;A little update:
I've picked up the latest release from FUSE and this memory leak is not present.
It seems they merged the patch provided in this issue. So maybe another check in done after this resolution is the culprit of bringing back this memory leak?","12/Feb/10 14:43;gtully;think http://issues.apache.org/activemq/browse/AMQ-2530 may be the difference.

Can you validate with the latest trunk snapshot.

btw: Sebastien, what patch do you refer to above?","21/Feb/10 15:02;srodrigu85;Sorry Gary, I didnt see this answer.
I'll check tomorrow if the behavior is still the same in the trunk, but when I reopened it, both the 5.3.1 and the latest trunk version still had the issue.

Concerning the patch, I was just saying that looking at the FUSE Message Broker 5.3.0.5's release notes, I can see they have applied the same patch as the one provided in this issue.
The problem is definitely not present in the FUSE Message BRoker, so it should be fairly simple to see the differences.
Easy way of reproducing the problem is to set up a network of brokers with some hostnames that are not reachable or dont have an ActiveMQ broker running on them. There will be a linear creation of threads (nearly 1 per second).
","03/Mar/10 12:40;gtully;did u get a chance to validate? All the fixes in fuse go via trunk at apache so the same changes should be present.","04/Mar/10 01:25;srodrigu85;I didnt get a chance to revalidate the bug.

the very basic scenario that demonstrated the case was to run a broker in the network of broker configuration, put two or more hostnames that cannot be resolved, and in order to accelerate the leak, remove the backoffmultiplier.

<networkConnector name=""HA Queue"" uri=""static:(tcp://wrongHostname1:61617,tcp://wrongHostname2:61618)?useExponentialBackOff=false"" userName=""system"" password=""manager"" duplex=""true"" />

I'll give a try with the latest version of the trunk over the weekend, sorry that i took some delay on this matter.","17/Mar/10 15:21;dejanb;The problem with leaking threads was caused by camel web app and activemq component explicitly set. Changing the config a bit makes broker behaves well in this use-case. Will resolve this issue and create camel-related issue.","17/Mar/10 16:23;nbryant;I'm experiencing this issue without using Camel. Configuration is an embedded ActiveMQ with producers connecting via the VM transport and a network of brokers over TCP. Works fine with FUSE MQ 5.3.0.x as noted by another user above, but does not work with 5.3.1-snap

I see your applicationContext changes seem to atfect the VM transport, are you just disabling the VM transport for Camel as a workaround?","17/Mar/10 16:32;dejanb;Hi Nathan,

can you provide a test case or describe how to reproduce the problem?

Cheers,
Dejan","23/Mar/10 21:58;rmoquin;FYI, I'm seeing this issue with Fuse 5.3.0.4 in Servicemix 3.4.0.4 (this isn't using any specific components though, just simply starting up Servicemix with the certain ActiveMQ configuration).  When there is a network connector that cannot connect to a certain host, then eventually an OutOfMemoryError will occur.  If I swap out the activemq jars that came with Servicemix, for the 5.3.0.5 ones.. it appears that the the memory issue is gone.","24/Mar/10 12:03;gtully;This seems to be resolved in 5.3.1 - i monitored a over a few hours, a broker with {code}<networkConnectors>
 <networkConnector name=""HA Queue"" uri=""static:(tcp://wrongHostname1:61617,tcp://wrongHostname2:61618)?useExponentialBackOff=false"" userName=""system"" password=""manager"" duplex=""true"" />
</networkConnectors>{code} and it is stable.","24/Mar/10 12:54;gtully;This patch contains a test case that attempts to reproduce but demonstrates that it works. An existing vm connection does not seem to effect the thread count while a networkConnector is failing to connect. It may provide the basis to produce a better test. For the moment it demonstrates that this issue is resolved.","09/Apr/10 13:35;dejanb;The root cause of this issue is now committed with svn revision 932403 and all config workarounds are removed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate messages delivery after restart for topics with network of brokers + kahaDB,AMQ-2720,12483299,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,05/May/10 11:20,05/May/10 13:38,30/Jan/20 16:55,05/May/10 13:38,5.3.1,,,,,,,5.4.0,,,Broker,,,,0,"After restart, a network connector with default dynamicOnly=false will auto bridge any topic with durable subscribers. KahaDB is reporting all topics as durable through the list of destinations that it returns, the result being a duplicated durable (and phantom) consumer on the bridge.
Disabling auto durable topic bridging with ddynamicOnly=true will work around this issue.

problem:
getDestinations in kahaDB persistence adapter should only return a list of destinations that include topics with durable subs.",,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74829,,,Wed May 05 13:38:23 UTC 2010,,,,,,,,"0|i0rq3j:",159872,,,,,,,,,,,,,,,,,,,"05/May/10 13:38;gtully;resolved in r941281",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transport connector throws SSL exception when network connector is configured to failover over ssl transport,AMQ-2715,12483416,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Apr/10 13:11,28/Apr/10 16:13,30/Jan/20 16:55,28/Apr/10 16:13,5.3.1,,,,,,,5.4.0,,,Transport,,,,0,"The reconnect thread in the failover transport is not SslContext aware so it does not propagate the brokers credentials.

A network connector url of the form static:(failover:(ssl://localhost:62616))) does not work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74831,,,Wed Apr 28 16:13:37 UTC 2010,,,,,,,,"0|i0rq8n:",159895,,,,,,,,,,,,,,,,,,,"28/Apr/10 16:13;gtully;resolved in r938998",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Master/slave out of sync with multiple consumers of a VirtualTopic on the same broker,AMQ-2183,12483418,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,yinghe0101,yinghe0101,25/Mar/09 19:18,27/Apr/10 08:28,30/Jan/20 16:55,27/Apr/10 08:28,5.2.0,,,,,,,5.4.0,,,Broker,,,,1,"1. producer of VirtualTopic.testTopic publish message to brokerA
2. consumer 1 on brokerB with ""Consumer.A.VirtualTopic.testTopic
    consumer 2 on brokerB with ""Consumer.A2.VirtualTopic.testTopic
3. brokerA and brokerB are bridged.

Result: you will get 
ERROR MasterBroker - Slave Failed
javax.jms.JMSException: Slave broker out of sync with master - Message: ID:yhe-1337-1236273055924-0:16:1:1:738 on queue does not exist among pending(0) for subscription: ID:yhe-3603-1236271682179-0:13:1:1

Reason:
In TransactionBroker.java there is a ActiveMQMessageAudit and it will be configured if the broker is a slave. ActiveMQMessageAudit is using the messageId alone to check whether the message is a duplicate. The message for consumer2 will be ignored as duplicate and not saved to the message store because consumer1's same message arrives early.
",solaris 10,carloc,gtully,john.greeley,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/09 21:18;yinghe0101;AMQ-2183.patch;https://issues.apache.org/jira/secure/attachment/12461454/AMQ-2183.patch","26/Mar/09 21:18;yinghe0101;ActiveMQMessageAuditWithDestination.java;https://issues.apache.org/jira/secure/attachment/12461455/ActiveMQMessageAuditWithDestination.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-07-22 09:43:56.871,,,false,,,,,,,,,,,,,,,,,75037,,,Tue Apr 27 08:28:26 UTC 2010,,,,Patch Available,,,,"0|i0rpzz:",159856,,,,,,,,,,,,,,,,,,,"25/Mar/09 19:23;yinghe0101;Attached patch fix the issue. I create this new children ActiveMQMessageAuditWithDestination.java because it will be used only in TransactionBroker.java for a slave. Other code use is using the original ActiveMQMessageAudit.java

Please review and refactor when you see fit. Thanks","22/Jul/09 09:43;gtully;I added a test case to try and understand this issue and reproduce but I am missing some information. In a pure master slave setup, how can you have a producer connected to brokerA and consumers connected to brokerB at the same time?

Can you modify the test case: activemq-core/src/test/java/org/apache/activemq/bugs/AMQ2183Test.java to demonstrate the problem?","22/Jul/09 13:07;yinghe0101;hi, Gary,

we have a setup of 4 master/slave broker pair( totally 8 brokers), each pair is a pure master/slave. All masters are multicast discovered and bridged. However only the master's url are exposed to the client, we only use slave for data replication. 
in my previous comments, brokerA and brokerB all refers to a master in a network of brokers. hope this clears things. I will see whether i have time after work to modify the test.","01/Sep/09 09:51;gtully;pushing this out to 5.4 pending a test case that can demonstrate the problem. Don't think this can block the 5.3 release, downgrade to major. ","27/Apr/10 08:28;dejanb;Fixed with svn revision 938353.

The order of TransactionBroker and CompositeDestinationBroker interceptor should be enough to fix this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
More flexible osgi import version ranges,AMQ-2637,12483419,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,05/Mar/10 19:44,26/Apr/10 10:26,30/Jan/20 16:55,05/Mar/10 19:45,5.3.0,,,,,,,5.3.2,5.4.0,,,,,,0,"In geronimo we need a little wider version ranges in the osgi import-package headers.  For now I'm going to use a bnd pattern [==,+)  that goes from the current minor import version to the next major version.  I'm also including configuration that will work with the next maven-bundle-plugin so that implemented packages have a smaller version range [==,=+) that goes to the next minor version (this is what is used everywhere now).

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74862,,,Fri Mar 05 19:45:33 UTC 2010,,,,,,,,"0|i0rr8v:",160058,,,,,,,,,,,,,,,,,,,"05/Mar/10 19:45;djencks;rev 919561",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-protobuf: AltJavaGenerator generates syntactically incorrect Java for nested Messages,AMQ-2707,12483423,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,richard.barnett,richard.barnett,23/Apr/10 03:11,23/Apr/10 12:48,30/Jan/20 16:55,23/Apr/10 12:48,,,,,,,,,,,,,,,0,"I built activemq-protobuf from http://svn.apache.org/repos/asf/activemq/activemq-protobuf/trunk/ (r817001).
I changed the configuration of the activemq-protobuf plugin in the activemq-protobuf-test pom.xml to use type {{alt}}.
The plugin generates invalid Java for .proto files defining nested messages.

An example:

{code:title=Simple.proto}
package foo;

message Outer {
  message Inner {
    required string x = 1;
  }
  required Inner inner = 1;
}
{code}

generates code including a method {{Simple.Outer.OuterBean.readExternal}}:

{code:title=Simple.java}
public void readExternal(java.io.DataInput in) throws java.io.IOException {
  assert frozen==null : org.apache.activemq.protobuf.MessageBufferSupport.FORZEN_ERROR_MESSAGE;
  bean = this;
  frozen = null;
  if( in.readBoolean() ) {
    Outer.Inner.Outer.InnerBean o = new Outer.Inner.Outer.InnerBean();
    o.readExternal(in);
    f_inner = o;
  } else {
    f_inner = null;
  }
}
{code}

which fails to compile; it should refer to {{Outer.Inner.InnerBean}} rather than {{Outer.Inner.Outer.InnerBean}}.

I'm attaching a zip containing a patch which I've tested with 4 levels of nesting, & some test .proto files.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Apr/10 03:15;richard.barnett;AMQ-2707.zip;https://issues.apache.org/jira/secure/attachment/12461679/AMQ-2707.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-04-23 12:48:35.928,,,false,,,,,,,,,,,,,,,,,74835,,,Fri Apr 23 12:48:35 UTC 2010,,,,Patch Available,,,,"0|i182tz:",255261,,,,,,,,,,,,,,,,,,,"23/Apr/10 03:15;richard.barnett;Zip contains:
- Patch to AltJavaGenerator to handle nested messages
- Simple.proto & Test.proto used for testing","23/Apr/10 12:48;chirino;Awesome.  Thanks!  patch applied in rev 937273",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
purge in jconsole failed,AMQ-2323,12483196,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,yinghe0101,yinghe0101,09/Jul/09 17:40,22/Apr/10 12:31,30/Jan/20 16:55,22/Apr/10 12:31,,,,,,,,5.4.0,,,,,,,1,using queue purge in jconsole will create infinite loop because incorrect Statistics whole loop,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jul/09 17:42;yinghe0101;AMQ-2323.patch;https://issues.apache.org/jira/secure/attachment/12461553/AMQ-2323.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-07-10 08:30:05.798,,,false,,,,,,,,,,,,,,,,,74982,,,Thu Apr 22 12:31:21 UTC 2010,,,,Patch Available,,,,"0|i0rq9j:",159899,,,,,,,,,,,,,,,,,,,"10/Jul/09 08:30;gtully;do you have any test code that can reproduce this issue? Wonder what causes the stats to become invalid?","10/Jul/09 13:14;yinghe0101;hi, usually if you do resetStatistics in jconsole, later the queueSize will be unreliable. then purge will cause issue most of the time. It happened a while ago for us. I remembered if you don't do resetStatistics, it will also happen very often if you do purge in jconsole when the broker is actively serving msgs.","21/Apr/10 14:38;tranchida;This issue can be reproduce easly sending message to a duplicate composite destination.
In the test case, 100 messages are really in the queue but the queueSize indicate 200.
Purge cause infinite loop.

{code}
public class SendDuplicateMessage {

    public static void main(String[] args) {

        ActiveMQConnectionFactory cf = new ActiveMQConnectionFactory(""smx"", ""smx"", ""tcp://localhost:50910"");
        PooledConnectionFactory pool = new PooledConnectionFactory();
        pool.setConnectionFactory(cf);
        pool.start();

        JmsTemplate jt = new JmsTemplate(pool);

        StringBuffer text = new StringBuffer();
        for (int n=0; n<1000; n++) {
            text.append(""0123456789"");
        }

        final String body = text.toString();

        for (int i=0; i<100; i++) {
            final String messageNo = ""message #"" + i;
            System.out.println(messageNo);
            jt.send(""testQueue,testQueue"", new MessageCreator() {
                public Message createMessage(Session session) throws JMSException {
                    TextMessage m = session.createTextMessage();
                    m.setText(body);
                    m.setStringProperty(""info"", messageNo);
                    return m;
                }
            });
        }
        pool.stop();
    }

}

{code}","22/Apr/10 12:31;dejanb;Resolved with svn revisions 936798 and 936811. These are two separated issues. 936798 solves the purge problem when message count doesn't match queue stats. Giampaolo's test reveal the other issue and that is duplicate destinations in composite which causes this mismatch. 936811 solves this by preventing that duplicate messages are sent in this case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non durable TopicSubscriptions can get duplicate messages in a network of brokers ring - suppression works in the stores and for durables,AMQ-2704,12483424,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Apr/10 14:01,21/Apr/10 16:48,30/Jan/20 16:55,21/Apr/10 16:48,5.3.1,,,,,,,5.4.0,,,,,,,0,"With a ring topology some duplicates are inevitable, Brokers A,B,C,D - producer on A, consumer on C, paths A-B-C and A-D-C are identical. When the subscription is backed by a store, the store traps/suppresses the duplicate. A regular Topic sub does not have such suppression as it does not use a message cursor, just regular direct dispatch.
A regular topic sub needs some duplicate suppression in line with the PolicyEntry enableAudit.",,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74837,,,Wed Apr 21 16:48:23 UTC 2010,,,,,,,,"0|i0rq07:",159857,,,,,,,,,,,,,,,,,,,"21/Apr/10 16:48;gtully;resolved in r936390

TopicSubscription now respects the PolicyEntry.enableAudit (enabled once a matching policy entry is found) which allows duplicates to be suppressed in the same way as the message stores and cursors suppress duplicates.
A topic sub in a ring network will not now get duplicate messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot delete Queue via JMX or admin console,AMQ-1998,12483435,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,shbehna@gmail.com,shbehna@gmail.com,08/Nov/08 02:39,16/Apr/10 19:46,30/Jan/20 16:55,19/Aug/09 16:39,5.1.0,5.2.0,,,,,,5.3.1,,,Broker,,,,2,"When I delete a queue via JMX and the admin console and restart the broker, the queue is still present. 

Here are the precise steps to reproduce the problem : 

1. Start the broker
2. Started jconsole 
3. With the Broker MBean, create a queue named ""JMX.queue"" (addQueue operation)
4. With this queue's MBean, send a text message (sendTextMessage operation)
5. With the Broker MBean, remove the queue (removeQueue operation). The queue's MBean is also deleted. 
6. Restart the broker. 
7. When reconnecting with JConsole, the queue's MBean is still present. 

This is also the case with the Web admin console. 

I'm using the default config of the 5.1.0 distribution. ","Windows XP SP2
JDK 1.5.0_11",donv,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/May/09 14:02;yinghe0101;AMQ-1998.patch;https://issues.apache.org/jira/secure/attachment/12461509/AMQ-1998.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-11-10 11:16:47.034,,,false,,,,,,,,,,,,,,,,,75133,,,Wed Aug 19 16:39:09 UTC 2009,,,,,,,,"0|i0tslr:",171943,,,,,,,,,,,,,,,,,,,"08/Nov/08 02:44;shbehna@gmail.com;I also reproduced this problem with ActiveMQ 5.2.0 RC3 (with the default config). ","10/Nov/08 11:16;gtully;this may be as designed as there are still some persistent messages in the Queue.

There is a purge operation on the QueueMBean, if you purge the Queue before deleting it, the Queue should disappear. ","10/Nov/08 14:03;shbehna@gmail.com;I've tried to purge the queue with the purge operation in JConsole before deleting the queue. The queue still shows up after a broker restart. 

I've also tried to do the same procedure without step 4 (sending a message to the queue). In that case, the queue does not show up after the broker restart. 

BTW : Is there a way to delete queues other than JMX ?","01/May/09 13:29;yinghe0101;this is a serious issue because if you have multiple consumer of a virtual topic and you try to remove the queue Consumer.*.VirtualTopic.topic and the broker did not really remove it and after restart, they are coming back. all those assumed removed queues will pile up message from the virtual topic. eventually the broker will stop function.
","05/May/09 14:02;yinghe0101;if you are using the default persistenceAdapter, the AMQ-1998.patch will fix the removeQueue command issued from jconsole.

Beware that this command is per broker, which means that it will not propagate to other broker in a network of brokers or to the slave if there is one for this broker.","19/Aug/09 16:39;rajdavies;Fixed by SVN revision 805873",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Bridges starting successful without a connection and never connect then,AMQ-2624,12483431,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jschmied,jschmied,23/Feb/10 19:25,16/Apr/10 16:35,30/Jan/20 16:55,16/Apr/10 16:34,5.3.0,,,,,,,5.4.0,,,Broker,,,,0,"When the JMS Bridges get a start() command and the foreign endpoint is down, the bridge prints a stacktrace and goes on. The bridge never connects.

2010-02-23 18:17:27,437 ERROR JmsQueueConnector    init              - Failed to initialize the JMSConnector
oracle.jms.AQjmsException: I/O Exception: The Network Adapter could not establish the connection
	at oracle.jms.AQjmsDBConnMgr.checkForSecurityException(AQjmsDBConnMgr.java:934)
	at oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:609)
	at oracle.jms.AQjmsDBConnMgr.<init>(AQjmsDBConnMgr.java:243)
	at oracle.jms.AQjmsConnection.<init>(AQjmsConnection.java:185)
	at oracle.jms.AQjmsQueueConnectionFactory.createQueueConnection(AQjmsQueueConnectionFactory.java:224)
	at org.apache.activemq.network.jms.JmsQueueConnector.initializeForeignQueueConnection(JmsQueueConnector.java:225)
	at org.apache.activemq.network.jms.JmsQueueConnector.init(JmsQueueConnector.java:55)
	at org.apache.activemq.network.jms.JmsConnector.start(JmsConnector.java:117)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1941)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:471)
	at org.test.EmbeddedBroker.main(EmbeddedBroker.java:48)
Caused by: java.sql.SQLRecoverableException: I/O Exception: The Network Adapter could not establish the connection
	at oracle.jdbc.driver.SQLStateMapping.newSQLException(SQLStateMapping.java:101)
	at oracle.jdbc.driver.DatabaseError.newSQLException(DatabaseError.java:112)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:173)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:229)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:458)
	at oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:411)
	at oracle.jdbc.driver.PhysicalConnection.<init>(PhysicalConnection.java:490)
	at oracle.jdbc.driver.T4CConnection.<init>(T4CConnection.java:202)
	at oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:33)
	at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:465)
	at java.sql.DriverManager.getConnection(DriverManager.java:582)
	at java.sql.DriverManager.getConnection(DriverManager.java:207)
	at oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:575)
	... 9 more
2010-02-23 18:17:27,453 INFO  JmsConnector         start             - JMS Connector Connector:0 Started

in JMSQueueConnector.java:

   @Override
	public boolean init() {
        boolean result = super.init();
        if (result) {
            try {
                initializeForeignQueueConnection();
                initializeLocalQueueConnection();
                initializeInboundJmsMessageConvertor();
                initializeOutboundJmsMessageConvertor();
                initializeInboundQueueBridges();
                initializeOutboundQueueBridges();
            } catch (Exception e) {
                LOG.error(""Failed to initialize the JMSConnector"", e);
            }
        }
        return result;
    }

I need a solution for this and I would not mind to do some work on it.

Should the DestinationBridge get a maintainance thread to keep care of reconnecting later? Should we have a callback to inform the client about a failing bridge (case of embedded broker)?

Please give me some suggestions how a fix could look like and I fix it.

Thanks 

juergen

",dosn't mater,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2455,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-16 16:34:20.407,,,false,,,,,,,,,,,,,,,,,74868,,,Fri Apr 16 16:35:11 UTC 2010,,,,,,,,"0|i0rqj3:",159942,,,,,,,,,,,,,,,,,,,"16/Apr/10 16:34;gtully;This should be resolved by https://issues.apache.org/activemq/browse/AMQ-2455","16/Apr/10 16:35;gtully;fix implemented by this issue: https://issues.apache.org/activemq/browse/AMQ-2455",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable Subscriptions have messages replayed (duplicate messages) after network broker restart,AMQ-2691,12483281,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Apr/10 10:32,09/Apr/10 10:41,30/Jan/20 16:55,09/Apr/10 10:37,5.3.0,5.3.1,,,,,,5.4.0,,,Broker,,,,0,"Durable subs in a network of brokers can experience duplicate deliveries when a broker restarts.

The problem lies in duplicate suppression and missing durable acks. Give two brokers, each networked together and with a durable consumer on each. A message produced to One gets delivered locally and forwarded to the other broker where it gets delivered. The redelivery back to the originator is suppressed by a filter that sees the broker path bread crumb. However this suppressed message is not acked so the broker on restart sees an outstanding durable message for the networked broker and recovers the topic subscription, delivering duplicates.

differences in the store implementation, a store per durable sub or a shared sub store mean the issue surfaces differently.
",,mpaladin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74843,,,Fri Apr 09 10:41:37 UTC 2010,,,,,,,,"0|i0rpz3:",159852,,,,,,,,,,,,,,,,,,,"09/Apr/10 10:37;gtully;resolved in r932342

ensuring suppressed durable deliveries are acked allows the message to be removed such that it does not get redelivered on recovery (startup)","09/Apr/10 10:41;gtully;Note: also change the use/effect of network connector dynamicOnly  - this flag had little effect but is now re-commissioned to indicate whether durable subs should be auto bridged (default) or whether they should be dynamic only. There is no change to the default behavior.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect character encoding/decoding when using websocket/stomp transport,AMQ-2684,12483273,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,bluemilk,bluemilk,03/Apr/10 14:51,06/Apr/10 11:04,30/Jan/20 16:55,06/Apr/10 11:04,5.4.0,,,,,,,5.4.0,,,Transport,,,,0,"Non ANSI-characters sent over the websocket/stomp transport are not encoded/decoded correctly. In my case client and server are using UTF-8 for character encoding. 

Changing StompSocket.onMessage(byte frame, String data) to
{noformat}
  public void onMessage(byte frame, String data) {}
       try {
            protocolConverter.onStompCommand((StompFrame)wireFormat.unmarshal(new ByteSequence(data.getBytes(""UTF-8""))));
       } catch (Exception e) {
            onException(IOExceptionSupport.create(e));
       }
   }
{noformat}

and StompFrame.toString() to

{noformat}
  public String toString() {
        StringBuffer buffer = new StringBuffer();
        buffer.append(getAction());
        buffer.append(""\n"");
        Map headers = getHeaders();
        for (Iterator iter = headers.entrySet().iterator(); iter.hasNext();) {
            Map.Entry entry = (Map.Entry)iter.next();
            buffer.append(entry.getKey());
            buffer.append("":"");
            buffer.append(entry.getValue());
            buffer.append(""\n"");
        }
        buffer.append(""\n"");
        if (getContent() != null) {
            try {
                buffer.append(new String(getContent(), ""UTF-8""));
            } catch (Throwable e) {
                buffer.append(Arrays.toString(getContent()));
            }
        }
        return buffer.toString();
    }
{noformat}

solved the problem for me. The changes are minor, I only specified the encoding when reading bytes arrays. 

Maybe there should be a way to configure the encoding to be used...","Windows 7 64bit
Java 1.6.0_18",bluemilk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Apr/10 14:57;bluemilk;StompFrame.java;https://issues.apache.org/jira/secure/attachment/12461650/StompFrame.java","03/Apr/10 14:57;bluemilk;StompSocket.java;https://issues.apache.org/jira/secure/attachment/12461649/StompSocket.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-04-06 08:19:48.956,,,false,,,,,,,,,,,,,,,,,74846,,,Tue Apr 06 11:04:40 UTC 2010,,,,,,,,"0|i0rpyn:",159850,,,,,,,,,,,,,,,,,,,"06/Apr/10 08:19;dejanb;Fixed with svn revision 931047. Thanks.","06/Apr/10 10:52;bluemilk;I guess character encoding should also be specified for the StompFrame.getBody() method to keep everything consistent.

 StompFrame.java
{noformat}
    public String getBody() {
        try {
            return new String(content, ""UTF-8"");
        } catch (Throwable e) {			
            return Arrays.toString(getContent());
        }
    }
{noformat}
","06/Apr/10 11:04;dejanb;Good spot. Fixed in svn revision 931089",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.activemq.pool.ConnectionPool should not set ""started"" flag if start() throws an exception",AMQ-2677,12483268,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,ariekenb,ariekenb,27/Mar/10 15:57,31/Mar/10 11:52,30/Jan/20 16:55,31/Mar/10 11:52,5.3.1,,,,,,,5.4.0,,,Broker,,,,0,"If org.apache.activemq.pool.ConnectionPool.start throws a JMSException, the ""started"" flag in ConnectionPool should not be set to true.  If start() throws an exception, the underlying ActiveMQConnection object will not be started.  Since started=true, any subsequent calls to ConnectionPool.start will do nothing, and a non-started connection may be used by the pool.

I ran into this problem when using Camel to consume messages - see the attached test program for an example.  This test program does the following:

1. Starts a bean consuming from queue test.queue using Camel.  The URL used by Camel to connect to ActiveMQ is:

failover:(tcp://127.0.0.1:61616)?timeout=1000&initialReconnectDelay=1000&maxReconnectDelay=1000&useExponentialBackOff=false

The test program uses the default behavior of Camel's ActiveMQComponent which creates a PooledConnectionFactory.

2. Waits 10 seconds, then starts an ActiveMQ broker on port 61616.  During this wait time, Camel's connection to the broker fails every second and it is continually retrying.

3. Sends 10 messages to the queue ""test.queue"".

The call to ConnectionPool.start by camel throws an exception after blocking for 1 second since timeout=1000 is set in the URL.  However the ""started"" flag is set to true, so subsequent calls to ConnectionPool.start by Camel on connection retries do not restart the ActiveMQConnection.

So, after step 3 in the test the Camel consumer appears to be connected to the broker, but it does not receive any messages and I get the following warning:

2010-03-27 09:47:02,994 [ActiveMQ Transport: tcp:///127.0.0.1:61616] WARN  org.apache.activemq.ActiveMQSessionExecutor - Received a message on a connection which is not yet started. Have you forgotten to call Connection.start()?

I am attaching a patch to org.apache.activemq.pool.ConnectionPool that does not set started=true if start throws an exception.  This fixes my test program - now each connection retry by camel actually attempts to start the ActiveMQConnection.","Ubuntu Linux 9.10, Sun JDK 1.6.0_15",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/10 15:59;ariekenb;connection_pool_start.patch;https://issues.apache.org/jira/secure/attachment/12461607/connection_pool_start.patch","27/Mar/10 15:58;ariekenb;jmstest.zip;https://issues.apache.org/jira/secure/attachment/12461606/jmstest.zip",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-03-31 11:52:36.703,,,false,,,,,,,,,,,,,,,,,74849,,,Wed Mar 31 11:52:36 UTC 2010,,,,Patch Available,,,,"0|i0rqhb:",159934,,,,,,,,,,,,,,,,,,,"27/Mar/10 15:58;ariekenb;Test program showing issue.","27/Mar/10 15:59;ariekenb;Attaching patch.","31/Mar/10 11:52;dejanb;This should be fixed with svn revision 929488. I also added modified test to system tests. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCast Exception in JBoss when using XA ,AMQ-2670,12483181,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,edwin@finalist.com,edwin@finalist.com,25/Mar/10 11:33,30/Mar/10 14:23,30/Jan/20 16:55,30/Mar/10 14:03,5.3.0,,,,,,,5.4.0,,,Connector,,,,0,"When deploying the rar under JBoss, the connectionfactory bound in de JNDI tree is always of type 'ActiveMQConnectionFactory'., while it should be ActiveMQXAConnectionFactory (which implements XAConnectionFactory).

I attached a new class that creates the correct type of factory, and this can be configured in the ra.xml (also attached).
",activemq-rar-5.3.0.rar deployed in jboss-5.1.0-GA,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2656,,"25/Mar/10 11:35;edwin@finalist.com;ActiveMQXAManagedConnectionFactory.java;https://issues.apache.org/jira/secure/attachment/12461662/ActiveMQXAManagedConnectionFactory.java","25/Mar/10 11:35;edwin@finalist.com;ra.xml;https://issues.apache.org/jira/secure/attachment/12461661/ra.xml",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-03-25 12:07:06.301,,,false,,,,,,,,,,,,,,,,,74853,,,Tue Mar 30 14:05:32 UTC 2010,,,,Patch Available,,,,"0|i0rqdb:",159916,,,,,,,,,,,,,,,,,,,"25/Mar/10 11:36;edwin@finalist.com;Note, for recovery to work (and for the original error to occur), a configuration in jbossts-properties.xml must be added, like this:
	<property name=""com.arjuna.ats.jta.recovery.XAResourceRecovery.ACTIVEMQ""
       value=""org.jboss.jms.server.recovery.MessagingXAResourceRecovery;java:/ActiveMQJMSProvider""/>
","25/Mar/10 12:07;gtully;can you post an ejb or mdb descriptor that uses this. This looks like a use case where the RAR provides the connection factory but not the recovery contract, is that correct? With the RAR contract, the XAResource would normally be accessed via the javax.resource.spi.ResourceAdapter#getXAResources

With the new class, the RAR can be bypassed w.r.t to recovery, or just used as an easy way to deploy ActiveMQ to jboss. Am I missing something?","25/Mar/10 12:42;edwin@finalist.com;An mdb:
@MessageDriven(mappedName = ""jms/SimpleMDB"", messageListenerInterface = javax.jms.MessageListener.class, activationConfig = {
        @ActivationConfigProperty(propertyName = ""destination"", propertyValue = ""queue.test""),
        @ActivationConfigProperty(propertyName = ""destinationType"", propertyValue = ""javax.jms.Queue""),
        @ActivationConfigProperty(propertyName = ""subscriptionDurability"", propertyValue = ""NonDurable""),
        @ActivationConfigProperty(propertyName = ""maximumRedeliveries"", propertyValue = ""0"") })
@ResourceAdapter(value = ""activemq-rar-5.3.0.rar"")
public class SimpleMDB implements MessageListener {
...
}

But it is not related to the MDB. The problem is that the connectionfactory is not the XA variant. This is deployed in a -ds.xml ike this:
<connection-factories>

   <tx-connection-factory>
      <jndi-name>activemq/QueueConnectionFactory</jndi-name>
      <xa-transaction/>
      <track-connection-by-tx/>
      <rar-name>activemq-rar-5.3.0.rar</rar-name>
      <connection-definition>javax.jms.QueueConnectionFactory</connection-definition>
      <ServerUrl>tcp://localhost:61616</ServerUrl>
      <min-pool-size>10</min-pool-size>
      <max-pool-size>200</max-pool-size>
      <blocking-timeout-millis>30000</blocking-timeout-millis>
      <idle-timeout-minutes>3</idle-timeout-minutes>
   </tx-connection-factory>

   <mbean code=""org.jboss.jms.jndi.JMSProviderLoader""
          name=""activemq:service=JMSProviderLoader,name=ActiveMQJMSProvider"">
      <attribute name=""ProviderName"">ActiveMQJMSProvider</attribute>
      <attribute name=""ProviderAdapterClass"">org.jboss.jms.jndi.JNDIProviderAdapter</attribute>
      <attribute name=""FactoryRef"">java:/activemq/QueueConnectionFactory</attribute>
      <attribute name=""QueueFactoryRef"">java:/activemq/QueueConnectionFactory</attribute>
      <attribute name=""TopicFactoryRef"">java:/activemq/QueueConnectionFactory</attribute>
   </mbean>
   
...
/>

This will result in a call to ActiveMQManagedConnectionFactory.createConnectionFactory during startup of JBoss (as configured in the ra.xml). But that will always create a ActiveMQConnectionFactory and never the ActiveMQXAConnectionFactory. 
And therefore, a ConnectionFactory instance is always bound in the JNDI and not an XAConnectionFactory.
So, it is not a bypass for the rar (it is still needed).

I see in the sources for ActiveMQXAConnectionFactory that all work is handled by the superclass (ActiveMQConnectionFactory), so it is only in JBoss actually performing the cast on the connectionfactory that causes a problem.","25/Mar/10 17:27;gtully;ok, I see how this will work but it is a bit of a hack, all be it, one that is of value.

I would expect some sort of generic RAR com.arjuna.ats.jta.recovery.XAResourceRecovery impl that is aware of a resource adapter in jndi and can make calls on javax.resource.spi.ResourceAdapter#getXAResources to do recovery.

It looks like no such thing exists in jboss or arjuna atm, Having an option to publish an XA connection factory in jndi looks like a reasonable workaround.","25/Mar/10 17:40;gtully;patch applied to trunk with thanks in r927520","26/Mar/10 17:03;gtully;this breaks regular XA, the RAR needs to handle the XAResource and an XAConnectionFactory should not be created.
We need another mechanism to integrate with the periodic recovery of jboss. Possibly implement their recovery interface or a wrapper to it.","29/Mar/10 10:11;gtully;Seems like the issue of of JCA XA recovery registration has come up in jboss land, and it is correctly seen as something that should be handled under the covers between JCA and the TransactionManager, but this has not been completed yet. See: https://jira.jboss.org/jira/browse/JBJCA-39

There may be some way to workaround this with JMS apis in the short term, but the real solution is to let the appserver work though registering the XA resource from JCA with the underlying transaction services of the container.
","30/Mar/10 13:54;gtully;Using JMS apis for out of band recovery will work, there is one relevant jboss fix .w.r.t restarted the broker service that may also help https://jira.jboss.org/jira/browse/JBMESSAGING-1608

Background: The RAR should not create or use an XA connection factory, XA interaction is managed by the RAR implementation in response to calls from the appserver in accordance with the JCA transaction contract.
The appserver should also negotiate with the RAR to facilitate recovery using the JCA spi and that is what will be addressed by https://jira.jboss.org/jira/browse/JBJCA-39.

In the mean time, using the JMS api to deal with recovery is a necessary and a reasonable workaround.

Recovery is configured in the transaction manager properties using a resource wrapper from jboss messaging. In jboss 5.0.1_GA, the relevant addition to the transaction manager properties file: *conf/jbossjta-properties.xml* is:
{code}    <properties depends=""arjuna"" name=""jta"">
        <!--
        Support subtransactions in the JTA layer?
        Default is NO.
      -->
        <property name=""com.arjuna.ats.jta.supportSubtransactions"" value=""NO""/>
        <property name=""com.arjuna.ats.jta.jtaTMImplementation"" value=""com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionManagerImple""/>
        <!--
                        com.arjuna.ats.internal.jta.transaction.jts.TransactionManagerImple
                        -->
        <property name=""com.arjuna.ats.jta.jtaUTImplementation"" value=""com.arjuna.ats.internal.jta.transaction.arjunacore.UserTransactionImple""/>
        <!--
                        com.arjuna.ats.internal.jta.transaction.jts.UserTransactionImple
                        -->
       <!-- recovery for ActiveMQ XA pending automated RAR recovery https://jira.jboss.org/jira/browse/JBJCA-39 -->
       <property name=""com.arjuna.ats.jta.recovery.XAResourceRecovery.ActiveMQ"" value=""org.jboss.jms.server.recovery.MessagingXAResourceRecovery;java:/ActiveMQRAR""/>

    </properties>{code} Note this is a modification to the *jta* configuration, _not_ the recovery manager.


The JNDI name referenced needs to be provided by the ActiveMQ RAR *-ds.xml"" descriptor using a JMSProviderLoader. The addition is as follows:{code}   <mbean code=""org.jboss.jms.jndi.JMSProviderLoader""
          name=""activemq:service=JMSProviderLoader,name=ActiveMQRAR"">
      <attribute name=""ProviderName"">ActiveMQRAR</attribute>
      <attribute name=""ProviderAdapterClass"">org.jboss.jms.jndi.JNDIProviderAdapter</attribute>
      <attribute name=""Properties"">xa=true
       java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory
       java.naming.provider.url=tcp://localhost:61616
</attribute>
      <attribute name=""QueueFactoryRef"">ConnectionFactory</attribute>
      <attribute name=""TopicFactoryRef"">ConnectionFactory</attribute>
      <attribute name=""FactoryRef"">ConnectionFactory</attribute>
   </mbean>{code}

This depends on https://issues.apache.org/activemq/browse/AMQ-2656 to allow the ActiveMQ initial context to return an XA connection factory. Note the property, xa=true in the ""Properties"" attribute which ensures that an XAConnectionFactory is created.","30/Mar/10 14:03;gtully;r929145
removed the XA version of the managed connection factory and added some additional logging to the transaction broker so it is easy to verify when recovery is configured. To see it, add the following to the log4j config: {code}log4j.logger.org.apache.activemq.broker.TransactionBroker=DEBUG{code} and a message will be output on every call to recover outstanding XA prepared transactions.","30/Mar/10 14:05;gtully;Add dependency link to https://issues.apache.org/activemq/browse/AMQ-2656 as this needs ActiveMQ initial context to return an XA capable connection factory for out of band recovery using JMS api",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave in shared filesystem master/slave setup reports Slave=false in JMX,AMQ-2669,12483086,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,25/Mar/10 10:06,25/Mar/10 10:09,30/Jan/20 16:55,25/Mar/10 10:09,5.3.0,5.3.1,,,,,,5.4.0,,,,,,,0,"If you set up a shared filesystem master/slave, start the master, start the slave and then point JConsole at the slave the ""Slave"" attribute of the broker mbean is set to ""False"", same as the master. So it's not as straightforward as it should be to figure out via JMX whether or not an instance of the broker is a slave or not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74854,,,Thu Mar 25 10:09:49 UTC 2010,,,,,,,,"0|i0rqsf:",159984,,,,,,,,,,,,,,,,,,,"25/Mar/10 10:09;dejanb;Fixed with svn revision 927324",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Failed to page in more queue messages""",AMQ-2512,12483251,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,daroo,daroo,25/Nov/09 20:26,10/Mar/10 14:46,30/Jan/20 16:55,25/Jan/10 22:17,5.3.1,,,,,,,5.3.1,5.4.0,,,,,,1,"Following exception occurs quite often at the moment when cursor percent usage is over 100% and suddenly drops down below 100%:

2009-11-25 21:16:00,287 | INFO  | Slow KahaDB access: cleanup took 547 | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
2009-11-25 21:16:27,832 | INFO  | Slow KahaDB access: Journal append took: 0 ms, Index update took 891 ms | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///192.168.1.4:57697
2009-11-25 21:16:30,324 | INFO  | Slow KahaDB access: Journal append took: 0 ms, Index update took 1172 ms | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///192.168.1.4:57697
2009-11-25 21:16:31,283 | ERROR | Failed to page in more queue messages  | org.apache.activemq.broker.region.Queue | Queue:dee.q
java.lang.NullPointerException
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:260)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:103)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:120)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$2.execute(KahaDBStore.java:194)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$2.execute(KahaDBStore.java:190)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:751)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.getMessageCount(KahaDBStore.java:189)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.getStoreSize(QueueStorePrefetch.java:63)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.remove(AbstractStoreCursor.java:189)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.remove(StoreQueueCursor.java:141)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1370)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1505)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1176)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)


Additional side effect is that broker stops dispatching messages out of the queue (see queue size and consumer count on screenshot from jconsole)


Sometimes this exception is also followed by:

2009-11-25 20:45:00,783 | WARN  | Async error occurred: java.lang.ClassCastException: java.lang.String cannot be cast to org.apache.kahadb.journal.Location | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///192.168.1.4:57516
java.lang.ClassCastException: java.lang.String cannot be cast to org.apache.kahadb.journal.Location
	at org.apache.kahadb.journal.Location.compareTo(Location.java:29)
	at java.util.Arrays.binarySearch0(Arrays.java:2001)
	at java.util.Arrays.binarySearch(Arrays.java:1943)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:234)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:240)
	at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:240)
	at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
	at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:873)
	at org.apache.activemq.store.kahadb.MessageDatabase.access$700(MessageDatabase.java:82)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.execute(MessageDatabase.java:757)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:755)
	at org.apache.activemq.store.kahadb.MessageDatabase$11.visit(MessageDatabase.java:700)
	at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:692)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:644)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeMessage(KahaDBStore.java:153)
	at org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:602)
	at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1235)
	at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:60)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:250)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:369)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:449)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:619)

I'm using latest 5.3.1-SNAPSHOT",,daroo,ksunilsingh,rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Nov/09 22:06;daroo;KahaDbNPE.java;https://issues.apache.org/jira/secure/attachment/12461450/KahaDbNPE.java","26/Nov/09 22:55;daroo;activemq-cant-startup.log;https://issues.apache.org/jira/secure/attachment/12461535/activemq-cant-startup.log","25/Nov/09 20:31;daroo;activemq.log;https://issues.apache.org/jira/secure/attachment/12461378/activemq.log","25/Nov/09 20:32;daroo;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461379/activemq.xml","25/Nov/09 20:29;daroo;jconsole.jpg;https://issues.apache.org/jira/secure/attachment/12461484/jconsole.jpg",,,,,,,5.0,,,,,,,,,,,,,,,,,,,,2009-11-26 10:46:02.033,,,false,,,,,,,,,,,,,,,,,74913,,,Wed Mar 10 14:46:16 UTC 2010,,,,,,,,"0|i0rr5z:",160045,,,,,,,,,,,,,,,,,,,"26/Nov/09 10:46;gtully;code inspection may get to the bottom of this but a test case would help. Can you attach your test code or describe what consumers and producers are present at the time?","26/Nov/09 22:20;daroo;My test client code attached. Starting from 30000-50000 messages delivery is much slower. Above situation usually happens at the end of processing (between 80 000 and 100 000 message received). ","26/Nov/09 22:53;daroo;Once I also got following exception when I've killed my client app (during processing) and then shutdown broker and tried to start it up (I had to delete all kahaDB data files to fix this):

2009-11-26 23:38:58,264 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException | org.apache.activemq.broker.BrokerService | main
java.lang.NullPointerException
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:109)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:120)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$2.execute(KahaDBStore.java:194)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$2.execute(KahaDBStore.java:190)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:751)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.getMessageCount(KahaDBStore.java:189)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:226)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:460)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:268)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:153)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:178)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:100)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1690)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:458)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:56)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)

Full log file attached. Could it happened because of enableJournalDiskSyncs=""false"" setting?","01/Dec/09 21:09;daroo;One more observation: using different type of cursor than store based (which is default I guess) seems to improve dispatch behavior - no more exceptions, hangs and slow downs.

<pendingQueuePolicy>
    <fileQueueCursor/>
</pendingQueuePolicy>

However I think store based cursor should also work fine and  that's why I'm leaving this issue still open.","20/Jan/10 17:45;rajdavies;I have a test case that failed - but have made some improvements - plus reduced prefetch to 10 for consumers - would like verification if this is still an issue on the next 5.4-SNAPSHOT build - anyone ?

SVN revision 901300","25/Jan/10 22:17;rajdavies;I'm marking this as fixed - please re-open if not the case","10/Mar/10 14:46;daroo;works fine",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stomp+nio leaking file descriptor on client drop,AMQ-2440,12482130,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,tuler,tuler,05/Oct/09 13:51,10/Mar/10 12:50,30/Jan/20 16:55,10/Mar/10 12:50,5.3.0,,,,,,,5.3.1,5.4.0,,Transport,,,,1,"The bug is observed on code checkout from https://svn.apache.org/repos/asf/activemq/tags/activemq-5.3.0
A server is initiated with stomp+nio transport on port 61612.

A client connects. A SelectorWorker is created on SelectorManager:68.
If the client drops the connection an exception is received at StompNIOTransport:91.
""java.io.IOException: An existing connection was forcibly closed by the remote host"".
But selector are not cleaned up. It works with stomp transport. But not with stomp+nio.

What I see in the end is an increasing number of ""connections"" if the JVM.
",Windows XP,donv,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/09 21:18;tuler;AMQ-2440-1.txt;https://issues.apache.org/jira/secure/attachment/12461362/AMQ-2440-1.txt","06/Oct/09 12:42;tuler;StompDropTestConsumer.java;https://issues.apache.org/jira/secure/attachment/12461374/StompDropTestConsumer.java","06/Oct/09 12:42;tuler;StompDropTestServer.java;https://issues.apache.org/jira/secure/attachment/12461368/StompDropTestServer.java",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2009-10-06 10:15:24.922,,,false,,,,,,,,,,,,,,,,,74946,,,Wed Mar 10 12:50:49 UTC 2010,,,,,,,,"0|i0rq1r:",159864,,,,,,,,,,,,,,,,,,,"05/Oct/09 21:18;tuler;This is my first shot at fixing it.

Some of the issues I found:

1) SelectorWorker calls Selector.open(), but the selector is never ever closed. I'm closing at SelectorManager.onWorkerEmptyEvent. Not sure if that's the correct spot.

2) StompNIOTransport.serviceRead was not calling selection.close on IOException. NIOTransport does call selection.close on channel.read == -1 but not on IOException.

3) DataInputStream not being closed at StompNIOTransport.serviceRead

I'm still getting some side effects. The exception below happened once on a client disconnect. Seems like a race condition at SelectorWorker.

Exception in thread ""NIO Transport Thread"" java.nio.channels.ClosedSelectorException
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:66)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.activemq.transport.nio.SelectorWorker.run(SelectorWorker.java:76)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
","06/Oct/09 10:15;dejanb;I'm failing to reproduce this problem. Can you provide your testing code (in any language that you have it)? Thanks","06/Oct/09 12:41;tuler;- Start a server with a single stomp+nio transport. StompDropTestServer.java attached.

- Now you need a way to see the TCP ports opened by the server process. netstat will do, but I'm using ""Process Explorer"" [1] on Windows XP. Choose the process on the list, go to properties page, TCP/IP tab.

- For the client I'm using the gozirra library, which is a java stomp client [2]. I think StompConnection from ActiveMQ would lead to the same issue. But my application already uses gozirra. Create a client, StompDropTestConsumer.java attached.
No matter if the client calls disconnect or not, the server TCP ports will still be opened when the client terminates (and won't be reused).

[1] http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx
[2] http://www.germane-software.com/software/Java/Gozirra/
","06/Oct/09 12:42;tuler;The client requires gozirra client from http://www.germane-software.com/software/Java/Gozirra/","06/Oct/09 19:30;tuler;Another thing that disturbs me is that TcpTransport.closeStreams is never called.
The only call is commented out at TcpTransport.doStop.","10/Mar/10 12:50;dejanb;This is now fixed on trunk and 5.3 branch. It's tested manually using StompLoadTest in activemq-systest subproject, which opens/closes a connection for every send/receive and simulates a real load on the broker. This test should be converted to the real system test, but that's the case for another issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Upgrade to apache 7 pom, use more standard release profile",AMQ-2638,12483234,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,05/Mar/10 22:44,05/Mar/10 22:45,30/Jan/20 16:55,05/Mar/10 22:45,5.4.0,,,,,,,5.4.0,,,,,,,0,"Apache 7 pom now has a working apache-release profile, so we can use more of it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74861,,,Fri Mar 05 22:45:15 UTC 2010,,,,,,,,"0|i0rr8f:",160056,,,,,,,,,,,,,,,,,,,"05/Mar/10 22:45;djencks;rev 919659",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in ActiveMQDestination (with patch),AMQ-2630,12483186,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jschmied,jschmied,26/Feb/10 19:21,03/Mar/10 10:46,30/Jan/20 16:55,03/Mar/10 10:16,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"The Oracle AQjmsDestination Object implements all the interfaces:

AQjmsDestination
 <-Queue<-Destination
 <-TemporaryQueue<-Queue<-Destination
 <-TemporaryTopicTopic<-Destination
 <-Topic<-Destination

The function ActiveMQDestination.transform fails to indicate the type of the Destination Object right, because it implements all Interfaces.

When the Object its a Topic in reality, the

        if (dest instanceof TemporaryQueue) {
            return new ActiveMQTempQueue(((TemporaryQueue)dest).getQueueName());
        }

thinks its a TemporaryQueue.

This causes the following stacktrace:
java.lang.NullPointerException
	at org.apache.activemq.command.ActiveMQDestination.setPhysicalName(ActiveMQDestination.java:208)
	at org.apache.activemq.command.ActiveMQTempDestination.setPhysicalName(ActiveMQTempDestination.java:63)
	at org.apache.activemq.command.ActiveMQDestination.<init>(ActiveMQDestination.java:77)
	at org.apache.activemq.command.ActiveMQTempDestination.<init>(ActiveMQTempDestination.java:39)
	at org.apache.activemq.command.ActiveMQTempQueue.<init>(ActiveMQTempQueue.java:35)
	at org.apache.activemq.command.ActiveMQDestination.transform(ActiveMQDestination.java:121)
	at org.apache.activemq.command.ActiveMQMessage.setJMSDestination(ActiveMQMessage.java:222)
	at org.apache.activemq.network.jms.TopicBridge.sendMessage(TopicBridge.java:91)
	at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:146)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1088)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:127)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:197)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)


 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Feb/10 19:21;jschmied;Destination.patch;https://issues.apache.org/jira/secure/attachment/12461630/Destination.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-03-03 10:16:25.678,,,false,,,,,,,,,,,,,,,,,74864,,,Wed Mar 03 10:46:41 UTC 2010,,,,Patch Available,,,,"0|i0rqkn:",159949,,,,,,,,,,,,,,,,,,,"03/Mar/10 10:16;gtully;variant of patch added with test in r918381 thanks. Can you validate against your use case to ensure it still does what you want?","03/Mar/10 10:46;gtully;applied to 5.3.1 branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ and Spring 3.0,AMQ-2547,12483172,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,22/Dec/09 16:02,26/Feb/10 15:15,30/Jan/20 16:55,26/Feb/10 15:15,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,3,Make ActiveMQ work correctly with Spring 3.0,,amarcute,blagerweij@gmail.com,mdirkse,prademak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-12-24 04:04:49.676,,,false,,,,,,,,,,,,,,,,,74899,,,Fri Feb 26 15:15:42 UTC 2010,,,,,,,,"0|i0rpvz:",159838,,,,,,,,,,,,,,,,,,,"24/Dec/09 04:04;amarcute;Please look at the thread for more details:

http://old.nabble.com/Upgrading-to-Spring-3.0.0-td26839497.html

","04/Jan/10 13:34;dejanb;There's seems to be some regressions in how Spring 3.0.0 works with XBean. There are two issues spotted with default configuration

1. <destinationPolicy> error - it seems that Spring 3.0.0 forces elements to be in order (alphabetical or probably as they are listed in xsd file). The simple workaround is to move <destinationPolicy/> element at the begging of the <broker> configuration section. I still need to investigate what causes this change.

2. Jetty XBean configuration  doesn't work with Spring 3.0.0 - The simple workaround is to use plain Spring configuration. The equivalent of current jetty.xml file would be

{code}
<beans
    xmlns=""http://www.springframework.org/schema/beans""
    xmlns:jetty=""http://mortbay.com/schemas/jetty/1.0""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"">
    
    <bean id=""Server""
      class=""org.mortbay.jetty.Server"" init-method=""start"" destroy-method=""stop"">
    <property name=""connectors"">
      <list>
        <bean id=""Connector"" class=""org.mortbay.jetty.nio.SelectChannelConnector"">
          <property name=""port"" value=""8161""/>
        </bean>
      </list>
    </property>

    <property name=""handler"">
      <bean id=""handlers""
           class=""org.mortbay.jetty.handler.HandlerCollection"">
        <property name=""handlers"">
          <list>
             <bean id=""contexts""
              class=""org.mortbay.jetty.handler.ContextHandlerCollection"">
               <property name=""handlers"">
                 <list>
                   <bean class=""org.mortbay.jetty.webapp.WebAppContext"">
                     <property name=""contextPath"" value=""/admin""/>
                     <property name=""resourceBase"" value=""${activemq.base}/webapps/admin""/>
                     <property name=""logUrlOnStart"" value=""true""/>
                   </bean>
                   <bean class=""org.mortbay.jetty.webapp.WebAppContext"">
                     <property name=""contextPath"" value=""/camel""/>
                     <property name=""resourceBase"" value=""${activemq.base}/webapps/camel""/>
                     <property name=""logUrlOnStart"" value=""true""/>
                   </bean>
                   <bean class=""org.mortbay.jetty.webapp.WebAppContext"">
                     <property name=""contextPath"" value=""/demo""/>
                     <property name=""resourceBase"" value=""${activemq.base}/webapps/demo""/>
                     <property name=""logUrlOnStart"" value=""true""/>
                   </bean>
                   <bean class=""org.mortbay.jetty.webapp.WebAppContext"">
                     <property name=""contextPath"" value=""/fileserver""/>
                     <property name=""resourceBase"" value=""${activemq.base}/webapps/fileserver""/>
                     <property name=""logUrlOnStart"" value=""true""/>
                   </bean>
                 </list>
               </property>
             </bean>
          </list>
        </property>
      </bean>
    </property>
</bean>
{code}

We plan to upgrade to Jetty 7 soon (so we can use their web socket implementation). They changed they XBean implementation and unfortunately it is not yet ready. I'm planning to help this happen soon, so we can upgrade to Jetty7 and Spring 3.0 simultaneously. ","18/Jan/10 10:05;amarcute;<tx:annotation-driven transaction-manager=""txManager"" /> is also not getting parsed by the parser even after including the correct name space and everything required.","26/Feb/10 15:15;dejanb;Fixed with svn revision 916651",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory for discarded should indicate the consumer id that missed the message to allow correlation of missed messages with DLQ for example,AMQ-2628,12482915,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Feb/10 11:36,25/Feb/10 11:44,30/Jan/20 16:55,25/Feb/10 11:44,5.3.0,,,,,,,5.4.0,,,Broker,,,,0,Messages are discarded and there an optional advisory but just the message header is present in the payload. It is not possible to determine the consumer that missed the message. A non durable topic subscription id is needed in there.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74865,,,Thu Feb 25 11:44:46 UTC 2010,,,,,,,,"0|i0rqsn:",159985,,,,,,,,,,,,,,,,,,,"25/Feb/10 11:44;gtully;issue resolved in r916255",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic Memory usage creep with constant pending message strategy and a file pending message cursor,AMQ-2626,12482794,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,24/Feb/10 12:50,24/Feb/10 15:01,30/Jan/20 16:55,24/Feb/10 12:56,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"Topic subs with pending messages, where prefetch is limited and consumer is slow  can lead to memory usage creep when the eviction policy kicks in and needs to spool messages from disk as the system usage limit has been reached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74866,,,Wed Feb 24 15:01:44 UTC 2010,,,,,,,,"0|i0rqsv:",159986,,,,,,,,,,,,,,,,,,,"24/Feb/10 12:56;gtully;resolved in r915770

ensured topic prefetch policy has effect for a subscription when not set by a consumer. added test for message eviction that demonstrated memory  or usage leak.
","24/Feb/10 15:01;gtully;A similar problem existed with the vmcursor PendingSubscriberMessageStoragePolicy - eviction causes a usage leak. Added a test and fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unexpected failure.     at org.apache.activemq.transport.failover.FailoverTransport.oneway,AMQ-2621,12483240,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmoulliard,cmoulliard,22/Feb/10 15:03,23/Feb/10 16:47,30/Jan/20 16:55,23/Feb/10 16:47,5.3.0,,,,,,,,,,,,,,0,"Hi,

When transport of activemq is defined as vm:// (in file /etc/activemq-broker.xml of Fuse 4.2) then the following error is generated when we use a camel-cxf route :

Error 

{code}
15:12:56,718 | ERROR | 0@qtp-28446306-0 | DefaultErrorHandler              | rg.apache.camel.processor.Logger  248 | Failed delivery for exchangeId: 8114851b-c94c-484c-9638-4710a407da6e. Exhausted after delivery attempt: 1 caught: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: Unexpected failure.
org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: Unexpected failure.
    at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:308)
    at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:168)
    at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:474)
    at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.send(JmsConfiguration.java:195)
    at org.apache.camel.component.jms.JmsProducer.doSend(JmsProducer.java:375)
    at org.apache.camel.component.jms.JmsProducer.processInOnly(JmsProducer.java:320)
    at org.apache.camel.component.jms.JmsProducer.process(JmsProducer.java:150)
    at org.apache.camel.processor.SendProcessor$1.doInProducer(SendProcessor.java:97)
    at org.apache.camel.processor.SendProcessor$1.doInProducer(SendProcessor.java:95)
    at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:146)
    at org.apache.camel.processor.SendProcessor.doProcess(SendProcessor.java:94)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:82)
    at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)
    at org.apache.camel.processor.DelegateProcessor.processNext(DelegateProcessor.java:53)
    at org.apache.camel.processor.DelegateProcessor.proceed(DelegateProcessor.java:82)
    at org.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:161)
    at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)
    at org.apache.camel.processor.RedeliveryErrorHandler.processExchange(RedeliveryErrorHandler.java:177)
    at org.apache.camel.processor.RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:143)
    at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:88)
    at org.apache.camel.processor.DefaultErrorHandler.process(DefaultErrorHandler.java:49)
    at org.apache.camel.processor.DefaultChannel.process(DefaultChannel.java:228)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:74)
    at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:66)
    at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48)
    at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:67)
    at org.apache.camel.component.cxf.CxfConsumer$1.invoke(CxfConsumer.java:91)
    at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
    at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106)
    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
    at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:109)
    at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:312)
    at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:276)
    at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:70)
    at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
    at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
    at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
    at org.mortbay.jetty.Server.handle(Server.java:326)
    at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
    at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:938)
    at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:755)
    at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
    at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
    at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: javax.jms.JMSException: Unexpected failure.
    at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
    at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1283)
    at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1367)
    at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:302)
    at org.apache.activemq.pool.SessionPool.createSession(SessionPool.java:117)
    at org.apache.activemq.pool.SessionPool.makeObject(SessionPool.java:85)
    at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
    at org.apache.activemq.pool.SessionPool.borrowSession(SessionPool.java:54)
    at org.apache.activemq.pool.ConnectionPool.createSession(ConnectionPool.java:108)
    at org.apache.activemq.pool.PooledConnection.createSession(PooledConnection.java:141)
    at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
    at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:462)
    ... 46 more
Caused by: java.io.IOException: Unexpected failure.
    at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:462)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
    at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
    at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:86)
    at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1261)
    ... 56 more
{code}

Route

{code}
   <bean id=""webservice"" class=""org.apache.camel.example.reportincident.internal.WebService"" />
    <bean id=""feedback"" class=""org.apache.camel.example.reportincident.internal.Feedback"" />

    <cxf:bus>
        <cxf:features>
            <cxf:logging />
            <wsa:addressing />
            <wsrm-mgr:reliableMessaging>
                <wsrm-policy:RMAssertion>
                    <wsrm-policy:BaseRetransmissionInterval    Milliseconds=""4000"" />
                    <wsrm-policy:AcknowledgementInterval Milliseconds=""2000"" />
                </wsrm-policy:RMAssertion>
                <wsrm-mgr:destinationPolicy>
                    <wsrm-mgr:acksPolicy intraMessageThreshold=""0"" />
                </wsrm-mgr:destinationPolicy>
            </wsrm-mgr:reliableMessaging>
        </cxf:features>
    </cxf:bus>

    <http:conduit name=""{http://reportincident.example.camel.apache.org}ReportIncidentEndpoint.http-conduit"">
        <http:client DecoupledEndpoint=""http://localhost:8080/cxf/camel-example/incident"" />
    </http:conduit>

    <!-- webservice endpoint -->
    <cxfcamel:cxfEndpoint
        id=""reportIncident""
        address=""http://localhost:8080/cxf/camel-example/incident""
        serviceClass=""org.apache.camel.example.reportincident.ReportIncidentEndpoint""
        xmlns:s=""http://reportincident.example.camel.apache.org"">

    </cxfcamel:cxfEndpoint>

    <osgi:reference id=""queuingservice"" interface=""org.apache.camel.Component"" />

    <camel:camelContext trace=""true""
        xmlns=""http://camel.apache.org/schema/osgi"">

        <camel:route>
            <camel:from uri=""cxf:bean:reportIncident"" />
            <camel:convertBodyTo type=""org.apache.camel.example.reportincident.InputReportIncident"" />
            <camel:to uri=""bean:webservice"" />
            <camel:inOnly uri=""queuingservice:queue:in"" />
            <camel:transform>
                <camel:method bean=""feedback"" method=""setOk"" />
            </camel:transform>

        </camel:route>
    </camel:camelContext>
{code} ",Fuse ESB 4.2.0-fuse-01-00 and ActiveMQ 5.3.0.fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74869,,,Tue Feb 23 16:47:22 UTC 2010,,,,,,,,"0|i0tsxr:",171997,,,,,,,,,,,,,,,,,,,"23/Feb/10 16:47;cmoulliard;The error reported is not at all in relation with activemq. Bad config in CXF WS-RM",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
filling a temporary queue and disconnecting does not free the queues Usage Manager memory limit,AMQ-2616,12481239,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,zakalwe,zakalwe,18/Feb/10 01:56,22/Feb/10 17:04,30/Jan/20 16:55,22/Feb/10 17:04,5.3.1,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"Starting a broker running the latest 5.3.1 snapshot with the simple attached configuration, then connecting a producer that sends messages to a temporary queue (without any consumer on it) until it hits the Usage Manager memory limit and gives this message:

{panel}
INFO  Topic - Usage Manager memory limit reached for temp-topic://ID:sts-chc-matsh-33157-1266457317460-0:0:1. Producers will be throttled to the rate at which messages are removed from this destination to prevent flooding it. See http://activemq.apache.org/producer-flow-control.html for more info
{panel}

If you then disconnect the producer you get a log message that the temporary queue is being removed, but if you connect another producer and try to produce to a new temporary queue no messages are accepted, and the broker just prints the ""Usage Manager memory limit reached"" message again. 

This is a denial of service since if you now connect a consumer on a new temporary queue no messages will be accepted for that temporary queue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Feb/10 01:57;zakalwe;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461622/activemq.xml",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-02-22 17:04:30.285,,,false,,,,,,,,,,,,,,,,,74870,,,Mon Feb 22 17:04:30 UTC 2010,,,,,,,,"0|i0rq7j:",159890,,,,,,,,,,,,,,,,,,,"18/Feb/10 02:13;zakalwe;A more realistic sequence of events is this:
# ConsumerA sends RequestB to QueueC, with a reply-to of TempQueueD.
# ProducerE receives RequestB and starts sending messages back to TempQueueD.
# ConsumerA runs out of memory and dies, the broker closes the connection.
# ProducerE continues sending messages to TempQueueD until the broker Usage Manager Memory Limit is reached. From this point no producer can send any messages to any temporary queues.
# The sysadmins discover something is wrong and kill ProducerE, the broker claims to free up the resources, however the problem remains.","22/Feb/10 17:04;rajdavies;Fixed in 5.3.1 by SVN  revision 912656 
and trunk by SVN revision 912652",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
memory leak in ConduitBridge (subscriptionMapByRemoteId),AMQ-2530,12483180,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mlukica,mlukica,13/Dec/09 11:00,22/Feb/10 06:52,30/Jan/20 16:55,22/Jan/10 06:50,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,"I believe there is a memory leak in ConduitBridge - looks like DemandSubscriptions are not removed from subscriptionMapByRemoteId when remote RemoveInfo is received.

removeDemandSubscription normally removes subscription from subscriptionMapByRemoteId in DemanForwardingBridgeSupport, but method is overriden in ConduitBridge and only removes subscription from subscriptionMapByLocalId.

Leak becomes more significant when consumers are connecting very often (i.e. few connections per second), and bridge connection is stable (lasts for couple of days without reconnecting). MessageConsumer's are not pooled and subscriptions are created and removed often (and forwarded via bridge).

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2596,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-01-22 06:50:23.966,,,false,,,,,,,,,,,,,,,,,74904,,,Fri Jan 22 06:50:23 UTC 2010,,,,,,,,"0|i0rqlz:",159955,,,,,,,,,,,,,,,,,,,"22/Jan/10 06:50;rajdavies;Fixed by SVN revision 902009",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Please publish SNAPSHOT sources jars in Maven repository,AMQ-2510,12483232,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,david_syer,david_syer,25/Nov/09 07:38,19/Feb/10 14:47,30/Jan/20 16:55,19/Feb/10 14:47,,,,,,,,5.3.1,5.4.0,,,,,,0,Please publish SNAPSHOT sources jars in Maven repository.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-11-25 09:46:58.179,,,false,,,,,,,,,,,,,,,,,74915,,,Fri Feb 19 14:47:34 UTC 2010,,,,,,,,"0|i0rqfz:",159928,,,,,,,,,,,,,,,,,,,"25/Nov/09 09:46;gtully;SNAPSHOTS are all in repo: https://repository.apache.org/content/repositories/snapshots/

eg: core jar at https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/activemq-core/
","25/Nov/09 09:49;gtully;ah, but I see the source jars are not there.. ok. sorry, some coffee needed.","01/Feb/10 15:30;kutzi;Could you please also try to publish the complete sources along the activemq-all jar?
For 5.3.0 only an almost empty sources jar was deployed:
https://repository.apache.org/content/repositories/releases/org/apache/activemq/activemq-all/5.3.0/","19/Feb/10 14:47;dejanb;Fixed with svn revision 911811.

The new profile 'deploy' has been created, which can be used to create source and javadoc jars, which can then be deployed to the repo. Generally, you'll use 

{code}mvn clean deploy -Pdeploy -Dtest=0{code}

to do this.

This has been done for both trunk and 5.3 branch (https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/) and Hudson jobs are created that should do this on daily basis.

http://hudson.zones.apache.org/hudson/job/ActiveMQ-Trunk-Deploy/
http://hudson.zones.apache.org/hudson/job/ActiveMQ-5.3-Deploy/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
expiry processing with file pending cursor and no consumers fills memory - causing producerFlowControll to kick in,AMQ-2610,12483225,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,16/Feb/10 13:05,19/Feb/10 09:37,30/Jan/20 16:55,19/Feb/10 09:37,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"The Memory usage limits are shared for a filependingmessagecursor and a queue. To have the cursor limit kick in first the usage portion needs to be reduced to below 70% as in: policy.setCursorMemoryHighWaterMark(50); for the destination.
This causes message references to be flushed to disk when the memory utilization reaches 50% ensuring that the memory usage limit for the queue of 70% is not met.

However, expiry processing with no consumers, needs to go directly to the cursor to examine messages (as none are paged in for dispatch) and this contract is problematic at the moment as there is no way to manage the message reference count via the cursor api for this use case. PageInList is promising but not complete.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/10 13:08;gtully;UnlimitedEnqueueTest.java;https://issues.apache.org/jira/secure/attachment/12461618/UnlimitedEnqueueTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74875,,,Fri Feb 19 09:37:35 UTC 2010,,,,,,,,"0|i0rqm7:",159956,,,,,,,,,,,,,,,,,,,"16/Feb/10 13:08;gtully;Test case that shows spooling and block issue when workaround of using  {code}policy.setExpireMessagesPeriod(0);{code} is omitted.","19/Feb/10 09:37;gtully;resolved in r911650 and 5.3 branch r911759

solution is to have pendingmessagecursor next  do an auto increment on what it returns to make the caller responsible for decrementing or holding on to the references. This allows a browser to peek at a reference and release it at will.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransportConnector] Connector vm://null should contain broker name,AMQ-2607,12483192,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Feb/10 19:42,18/Feb/10 14:27,30/Jan/20 16:55,15/Feb/10 19:45,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"the url I am using is

vm:(broker:(tcp://localhost:61616)/myBroker?persistent=false)

when to connector starts it says

2010-02-12 18:38:24,204 INFO [TransportConnector] Connector vm://null Started

instead of

2010-02-12 18:38:24,204 INFO [TransportConnector] Connector vm://myBroker Started

resolution: 
Hi,

class VMTransportFactory on method doCompositeConnect line 70

 if (brokerData.getPath() != null) {
               host = data.getPath();
           }

shouldn't it be

if (brokerData.getPath() != null) {
               host = brokerData.getPath();
           }

see: http://old.nabble.com/is-this-a-bug---tp27544304p27544304.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74877,,,Thu Feb 18 14:27:11 UTC 2010,,,,,,,,"0|i0rqdz:",159919,,,,,,,,,,,,,,,,,,,"15/Feb/10 19:45;gtully;applied fix in r910315","18/Feb/10 14:27;gtully;fix applied to 5.3 branch: r 911417",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stopping camel context with ActiveMQComponent does not close connections to ActiveMQ,AMQ-2611,12483228,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,ariekenb,ariekenb,14/Feb/10 16:18,17/Feb/10 14:21,30/Jan/20 16:55,17/Feb/10 14:21,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,"Stopping a camel context that uses an ActiveMQComponent does not appear to close connections to the ActiveMQBroker.  See the attached test case as an example.  It creates a camel context containing an ActiveMQ consumer and producer, sends a message, then destroys the context.  The test case does this in a loop so every 4 seconds the old camel context is destroyed and a new one is created.  Every second the test outputs the number of connections to the ActiveMQ broker.  This number continually grows over time.  After running for a few minutes I see output like this:


10:17:28,885 INFO  ActiveMQTest - num connections = 159
10:17:29,885 INFO  ActiveMQTest - num connections = 159
10:17:30,574 INFO  ActiveMQTest - creating context and sending message
10:17:30,574 INFO  DefaultCamelContext - Apache Camel 2.1.0-psc-01-00RC1 (CamelContext:camel-160) is starting
10:17:30,574 INFO  DefaultCamelContext - JMX enabled. Using DefaultManagedLifecycleStrategy.
10:17:30,744 INFO  DefaultCamelContext - Apache Camel 2.1.0-psc-01-00RC1 (CamelContext:camel-160) started
10:17:30,753 INFO  ActiveMQTest - consume message = message
10:17:30,885 INFO  ActiveMQTest - num connections = 160
10:17:31,885 INFO  ActiveMQTest - num connections = 160
10:17:32,747 INFO  ActiveMQTest - destroying context
10:17:32,747 INFO  DefaultCamelContext - Apache Camel 2.1.0-psc-01-00RC1 (CamelContext:camel-160) is stopping
10:17:32,755 INFO  DefaultInflightRepository - Shutting down with no inflight exchanges.
10:17:32,755 INFO  DefaultCamelContext - Apache Camel 2.1.0-psc-01-00RC1 (CamelContext:camel-160) stopped
10:17:32,886 INFO  ActiveMQTest - num connections = 160
10:17:33,885 INFO  ActiveMQTest - num connections = 160


Also if I do ""netstat -an | grep 61616"" I see the number of connections to the broker on TCP port 61616 is continually growing.","Ubuntu Linux 9.10, Sun JDK 1.6.0_15, Camel 2.1.0-psc-01-00RC1, ActiveMQ 5.3.0-psc-01-00RC1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/10 16:19;ariekenb;ActiveMQTest.java;https://issues.apache.org/jira/secure/attachment/12461610/ActiveMQTest.java","17/Feb/10 03:33;ariekenb;camel2469.patch;https://issues.apache.org/jira/secure/attachment/12461620/camel2469.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-02-15 09:37:15.202,,,false,,,,,,,,,,,,,,,,,74874,,,Wed Feb 17 14:21:48 UTC 2010,,,,,,,,"0|i0rqe7:",159920,,,,,,,,,,,,,,,,,,,"14/Feb/10 16:19;ariekenb;Example test case","14/Feb/10 18:07;ariekenb;Looking into the code, it looks like by default org.apache.activemq.camel.component.ActiveMQConfiguration.usePooledConnection = true, so ActiveMQConfiguration.createConnectionFactory creates an org.apache.activemq.pool.PooledConnectionFactory.  PooledConnectionFactory needs to have stop() called on it to close underlying connections.  Nothing in camel is doing this when the context is closed.

One possible workaround is to manually create a PooledConnectionFactory and pass it to ActiveMQComponent.setConnectionFactory.  Then you have to call stop() yourself on the PooledConnectionFactory to close connections when the camel context is stopped.

This seems to be a bad default.  If by default camel is going to create a PooledConnectionFactory for the user, shouldn't it clean it up when the context is closed?","15/Feb/10 09:37;davsclaus;Aaron good findings.

You could probably try to see if you can patch the AMQ component to be able to stop the connection factory when its stopped.
","17/Feb/10 03:33;ariekenb;Here is a patch against activemq trunk.

This fixes my test case and passes all unit tests for activemq-camel.","17/Feb/10 06:15;davsclaus;Aaron thanks for the patch. I have moved the ticket to AMQ as its a bug/issue with AMQ.","17/Feb/10 14:21;dejanb;Fixed with svn revision 910984. I modified your test and converted it to test case. Thanks for the patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""queue size "" metrics for topics not accurate",AMQ-2586,12483224,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,28/Jan/10 19:58,17/Feb/10 12:16,30/Jan/20 16:55,28/Jan/10 20:02,,,,,,,,5.3.1,5.4.0,,,,,,0,"The queue size metric for topics is currently not accurate.  It is also throwing off the broker total message count metric.  In the queue case this metric is always going up but never comes down.  Since there is no ""queue"" for topics it would be better if this metrics just reported 0.

An alternative solution would be to sum the number of messages in all the subscriptions attached to the topic.",,krm1312,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-02-17 00:46:58.184,,,false,,,,,,,,,,,,,,,,,74883,,,Wed Feb 17 12:16:22 UTC 2010,,,,,,,,"0|i0rpxb:",159844,,,,,,,,,,,,,,,,,,,"28/Jan/10 20:02;chirino;Fixed in trunk in rev 904243","17/Feb/10 00:46;krm1312;Would it be possible to backport this small fix to 5.3.1?  We're looking at upgrading from ActiveMQ 4.1 and we have monitoring that checks the broker's TotalMessageCount as an overall health check of the system.  We can check each queue, but the overall check is nice since any substantial backup across queues indicates a potential issue (in our application).","17/Feb/10 12:15;gtully;done. fix applied to 5.3 branch in r910942","17/Feb/10 12:16;gtully;update fixed version to 5.3.1 as fix merge to 5.3 branch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSXUserID not propogated to STOMP consumer ,AMQ-2490,12483200,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,jamesc,jamesc,13/Nov/09 13:51,08/Feb/10 10:47,30/Jan/20 16:55,03/Feb/10 14:43,5.3.0,,,,,,,5.3.1,5.4.0,,Transport,,,,0,"The userID from the ActiveMQ message object is not set on a STOMP frame.

Attached is a patch on the STOMP FrameTranslator to set a 'JMSXUserID' header if it present in the message.

Test cases showing the header being propogated from STOMP to both JMS and STOMP consumers properly","activemq-trunk, macosx/linux/ sun java 1.6.0",alsoloplan,markusschaber,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/09 13:53;jamesc;stomp-userid.diff;https://issues.apache.org/jira/secure/attachment/12461572/stomp-userid.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-02-03 14:43:22.932,,,false,,,,,,,,,,,,,,,,,74921,,,Mon Feb 08 10:47:26 UTC 2010,,,,Patch Available,,,,"0|i0rpwn:",159841,,,,,,,,,,,,,,,,,,,"03/Feb/10 14:43;tabish;Patch applied in SVN 906071.","08/Feb/10 10:18;alsoloplan;Is it possible to include this patch in the 5.3.1 release?
Sorry if this is a stupid question - i'm very new to the whole activemq thing and so i have very limited knowledge about activemq's release cycles and bugfix strategies.
I'm asking because i want to use ActiveMQ with the NMS Compact Framework Stomp client. Since i reckon that the devices are distributed to uncontrollable environment i depend on the fix to avoid the possibility of spoofing.","08/Feb/10 10:47;dejanb;Merged changes to 5.3 branch as well",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak in DefaultJDBCAdapter,AMQ-2563,12483189,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jimharter,jimharter,08/Jan/10 20:52,03/Feb/10 14:46,30/Jan/20 16:55,03/Feb/10 14:46,5.3.0,,,,,,,5.3.1,5.4.0,,Message Store,,,,1,"I was performing an endurance test on ActiveMQ 5.3.0.  My test consisted of a single queue with a number of producers and consumers.  The producers send very simple text messages and the consumers simply receive the message and do no other processing.  Using the OOTB configuration (which uses -Xmx512m) with JDBC persistence to an Oracle database, I found the system came to a halt at around 10.3 million messages.  Looking at the VM revealed a very full heap and tiny gains from garbage collection.  Restarting the broker allows the system to run again.

To determine the cause of the exhausted heap, I took a series of heap dumps over time.  My examination of the heaps showed that the number of live instances of TreeMap$Entry and Long were increasing linearly with the number of messages.  The Longs were owned by the TreeMap$Entry objects.  The TreeMap$Entry objects could be tracked back to the TreeSet<Long> instance from the lastRecoveredMessageIds field in DefaultJDBCAdapter.

The only method that uses lastRecoveredMessageIds is:
public void doRecoverNextMessages(TransactionContext c, ActiveMQDestination destination, long nextSeq,
            int maxReturned, JDBCMessageRecoveryListener listener) throws Exception

As the listener is called to recover a message, the id is added to this set.  The id is only removed from this set if it is encountered on future run of doRecoverNextMessages when it is added to the cleanupIds list.  The SQL that is executed at the beginning of the method filters messages based on having an id greater than nextSeq.  If nextSeq is always large enough, an id is never added to cleanupIds and consequently never removed from lastRecoveredMessageIds.

I saw that the use of lastRecoveredMessageIds was introduced with AMQ-1918.  Also, AMQ-2436 synchronizes the TreeSet, but that should have no effect on this issue.

Dejan mentioned some work done on JDBC persistence and a memory leak fix in association with AMQ-2519.  I have performed the same test on the latest snapshots of 5.3.1 and 5.4.  The same results were observed on those as well.  Also, work done for AMQ-2519 modified JDBCMessageStore, JDBCTopicMessageStore, and JDBCPersistenceAdapter.  I believe the issue is in DefaultJDBCAdapter.

To reproduce:
- Start a broker using JDBC persistence (sample configuration file will be attached)
- Start a number of producers and consumers using the same queue on that broker (sample WAR file will be attached.  Modify WEB-INF/applicationContext.xml to set the queue name and broker URL.  The war file currently uses TestQueue and tcp://localhost:61616, respectively.)
- Wait for about 20,000 messages to be processed (you can use less; it just gets easier in the heap dumps to see after about 20,000 messages.  29 bytes are retained per message that is processed)
- Look at the old generation size after a full garbage collection over time.  It grows slowly.
- Obtain a heap dump.  The heap dump will show a number of retained instances of TreeMap$Entry and Long.  (sample heap dump will be attached)",Java 1.6.0_07-b06 on Solaris (5.10) sparcv9,jimharter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/10 20:55;jimharter;AMQTest.war;https://issues.apache.org/jira/secure/attachment/12461588/AMQTest.war","08/Jan/10 20:55;jimharter;heap.zip;https://issues.apache.org/jira/secure/attachment/12461587/heap.zip","08/Jan/10 20:55;jimharter;jdbc-test.xml;https://issues.apache.org/jira/secure/attachment/12461586/jdbc-test.xml",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2010-01-10 11:25:01.673,,,false,,,,,,,,,,,,,,,,,74893,,,Wed Feb 03 14:46:58 UTC 2010,,,,,,,,"0|i0rpw7:",159839,,,,,,,,,,,,,,,,,,,"08/Jan/10 20:55;jimharter;Attaching sample broker configuration file, test web application to produce and consume messages, and a zip of a heap dump showing the memory leak","10/Jan/10 11:25;dejanb;Scheduled it for 5.3.1","03/Feb/10 14:46;dejanb;Resolved with svn revision 906054.

The problematic lastRecoveredMessageIds is removed completely. It was just a temp workaround for duplicate messages. Now we have it implemented when messages are added to the store, so there's no need for this check.

The commit also includes a fix for a cursor problem spotted during the test.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No sub-contexts for Queues / Topics created from jndi.properties,AMQ-2220,12483202,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,schup,schup,22/Apr/09 08:31,03/Feb/10 14:00,30/Jan/20 16:55,03/Feb/10 09:50,5.1.0,5.2.0,,,,,,5.4.0,,,,,,,0,"  new InitialContext().list(""queue"") 
should return the 2 Queues defined in the jndi.properties (see below) but thows ""javax.naming.NameNotFoundException: queue

jndi.properties:
{quote}
java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory
java.naming.provider.url = vm://localhost
queue.queue/testQueue=queue.TestQueue
queue.queue/testQueue2=queue.TestQueue2
{quote}

When the ReadOnlyContext is created nested contexts are not resolved.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Apr/09 08:33;schup;ReadOnlyContext.java.diff;https://issues.apache.org/jira/secure/attachment/12461491/ReadOnlyContext.java.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-02-03 09:50:53.855,,,false,,,,,,,,,,,,,,,,,75020,,,Wed Feb 03 09:50:53 UTC 2010,,,,Patch Available,,,,"0|i0rqen:",159922,,,,,,,,,,,,,,,,,,,"22/Apr/09 08:33;schup;Attachted Diff file to ReadOnlyContext.java trunk (5.2)","03/Feb/10 09:50;rajdavies;Fixed by SVN revisions 905958 and 906045",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Sender sometimes, involuntary, autocreates new, consumerless, TempQueue when trying to send to removed TempQueue.",AMQ-2571,12483233,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,nimos,nimos,15/Jan/10 21:45,03/Feb/10 08:04,30/Jan/20 16:55,03/Feb/10 08:04,4.1.1,,,,,,,5.4.0,,,Broker,,,,0,"Please see this post for discussion:
http://old.nabble.com/Problems-with-prefetch-and-TemporaryQueues-td27130529.html

I've tested this on 4.1.1, and briefly on 5.3.0 with the same result.

Scenario:
We have a server and a client. The client posts a message on the servers queue in order to subscribe to updates.
The server takes the reply address from the client and starts sending messages to a TempQueue created by the client.

When the client disconnects without notifying the server the following might happen:
1. The temporary queue is removed correctly when the client exits and closes its connection.

From here we have three scenarios:
2.a The server gets an exception the next time it tries to send a message to the TempQueue. This is wanted behaviour. It can then simply drop the ""subscription"".

2.b The server isn't notified in time and sends some messages before it gets the exception. Due to AutoCreateDestination being enabled one of these messages creates a new TempQueue with the same name as the one removed. It is of course missing a consumer.
But since the server gets the exception it will stop posting to the TempQueue. However, when the server closes its connection the TempQueue is not removed and is left lying around with no consumer.

2.c The server recreates the TempQueue in the same way as in 2.b, but here it never gets the exception for some reason. The server then has no idea that the client left and keeps pilling up messages on the TempQueue until the broker object hits its memory limit and everything connected to the broker halts.


I think there are three problems here:
1. The exception is not thrown every time.
2. When the TempQueue is recreated it is not removed when the server closes its connection. Also, the server gets an InvalidDestinationException if I, at server side, try to connect a consumer to the TempQueue. I guess this means that although the server is the initiator for the auto(re)creation it does not become the owner of the TempQueue. But who is then the owner? The broker itself?

3. Due to AutoCreateDestination being enabled by default for TempQueues, every post to a TempQueue could result in unknowingly creating a new TempQueue.


Suggestions
Setting AutoCreateDestination to false for TempQueues solves all three problems.
So exposing that option in an easily accessible way is important.

But even then, 1 and 2 should perhaps be examined separately.

I'll attach a JUnit test case for this. Unfortunately it is not 100% reliable in detecting the problem. One has to run it multiple times.
On my test setup it failed correctly 8 times out of 10 runs. You might be able to improve it.

Best Regards
Nimos","Ubuntu 9.10, P4 2.6 GHz HT, 3 GB RAM. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/10 21:49;nimos;TempQueueClosing.java;https://issues.apache.org/jira/secure/attachment/12461597/TempQueueClosing.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-01-21 19:21:12.223,,,false,,,,,,,,,,,,,,,,,14630,,,Wed Feb 03 08:04:35 UTC 2010,,,,,,,,"0|i0b9lz:",63669,,,,,,,,,,,,,,,,,,,"15/Jan/10 21:49;nimos;My attempt at writing a JUnit test for this.
I used JUnit 3 as it seemed to be the version used for the ActiveMQ in the source package.

Unfortunately since this seems to be a timing issue it might not be able to provoke the problem every time.
So it should be run multiple times to increase the chance of detecting the problem.

A warning might be in place, when it does succeed in provoking the error it will leave empty TempQueues lying around in the broker.

Regards
Nimos","21/Jan/10 19:21;rajdavies;I know this issue was raised on 4.x - but also found on 5.3.0 - but I have not been able to reproduce after many tries on trunk. 
Added a test case - org.apache.activemq.bugs.AMQ2571 by SVN revision 901832","22/Jan/10 10:21;nimos;I am still able to reproduce the problem on the 5.4 snapshot downloaded today from the ActiveMQ page:
http://activemq.apache.org/download.html
I ran the JUnit test case 10 times which resulted in 5 failures => 5 consumerless TempQueues lying around indefinetly (or actually until broker restart) in the broker. It might be that I have a slow computer, but the problem is there.

So I can't consider this fixed in the 5.4 version available at ActiveMQ homepage.

Best Regards
Simon","22/Jan/10 10:22;nimos;Fixed misspelling (Settings -> Setting).","26/Jan/10 23:21;rajdavies;luckily I have a slow laptop so have been able to validate it there","03/Feb/10 08:04;rajdavies;Fixed by SVN revision 905926",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InactivityMonitor Issues,AMQ-2196,12483247,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,marc2112,marc2112,03/Apr/09 18:30,02/Feb/10 20:24,30/Jan/20 16:55,02/Feb/10 20:24,,,,,,,,5.3.1,5.4.0,,,,,,0,"InactivityMonitor should not simply use the minimum of the local and remote maxInactivityDuration parameter

InactivityMonitor.java uses the following configuration
        readCheckTime = Math.min(localWireFormatInfo.getMaxInactivityDuration(), remoteWireFormatInfo.getMaxInactivityDuration());
        initialDelayTime =  Math.min(localWireFormatInfo.getMaxInactivityDurationInitalDelay(), remoteWireFormatInfo.getMaxInactivityDurationInitalDelay());

Because of this, I can't simply define a maxInactivityDuration on my JMS server.  I need to make sure that the clients specify a value that is greater then or equal to the server configured value.  

CMS doesn't yet supply this parameter when it makes an openwire connection so in my mixed Java/C++ application environment, I can't bump the inactivity timeout > 30s (the default).  Why should the server setting for how long to go before timing out a connection be influenced by what the client requests?  Client can always terminate the connection.

I suggest that this be changed to
        readCheckTime = localWireFormatInfo.getMaxInactivityDuration();
        initialDelayTime = localWireFormatInfo.getMaxInactivityDurationInitalDelay();


",,marc2112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-02-02 20:22:47.108,,,false,,,,,,,,,,,,,,,,,75029,,,Tue Feb 02 20:24:25 UTC 2010,,,,,,,,"0|i0rpy7:",159848,,,,,,,,,,,,,,,,,,,"02/Feb/10 20:22;tabish;The current version of ActiveMQ-CPP will send the inactivity durations correctly.","02/Feb/10 20:24;tabish;Added a configuration option to the inactivity monitor ""ignoreRemoteWireFormat"" which allows you to override the default behaviour in case you are stuck using an older ActiveMQ-CPP that doesn't send the inactivity duration values to the broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointer in MessageDatabase.java on restarting after ungraceful exit,AMQ-2589,12483185,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dave_stanley,dave_stanley,01/Feb/10 18:06,01/Feb/10 19:14,30/Jan/20 16:55,01/Feb/10 19:14,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"If I kill -9 the broker when the broker is heavily loaded with transactional consumers I see the following error when I try and restart the broker.


INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:2010/jmxrmi
INFO  BrokerService                  - Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter@4f3ba2
ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:876)
        at org.apache.activemq.store.kahadb.MessageDatabase.access$700(MessageDatabase.java:82)
        at org.apache.activemq.store.kahadb.MessageDatabase$RemoveOpperation.execute(MessageDatabase.java:1395)
        at org.apache.activemq.store.kahadb.MessageDatabase$16.execute(MessageDatabase.java:800)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:797)
        at org.apache.activemq.store.kahadb.MessageDatabase$11.visit(MessageDatabase.java:710)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:692)
        at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:393)
        at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:280)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:321)
        at org.apache.activemq.store.kahadb.MessageDatabase.start(MessageDatabase.java:182)
        at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:183)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:456)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:61)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
INFO  BrokerService                  - ActiveMQ Message Broker (adcmq-INT, null) is shutting down
INFO  TransportConnector             - Connector openwire Stopped
INFO  TransportConnector             - Connector ssl Stopped
INFO  BrokerService                  - ActiveMQ JMS Message Broker (adcmq-INT, null) stopped
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.lang.NullPointerException
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:876)
        at org.apache.activemq.store.kahadb.MessageDatabase.access$700(MessageDatabase.java:82)
        at org.apache.activemq.store.kahadb.MessageDatabase$RemoveOpperation.execute(MessageDatabase.java:1395)
        at org.apache.activemq.store.kahadb.MessageDatabase$16.execute(MessageDatabase.java:800)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:797)
        at org.apache.activemq.store.kahadb.MessageDatabase$11.visit(MessageDatabase.java:710)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:692)
        at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:393)
        at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:280)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:321)
        at org.apache.activemq.store.kahadb.MessageDatabase.start(MessageDatabase.java:182)
        at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:183)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:456)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:61)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        ... 30 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.lang.NullPointerException
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:876)
        at org.apache.activemq.store.kahadb.MessageDatabase.access$700(MessageDatabase.java:82)
        at org.apache.activemq.store.kahadb.MessageDatabase$RemoveOpperation.execute(MessageDatabase.java:1395)
        at org.apache.activemq.store.kahadb.MessageDatabase$16.execute(MessageDatabase.java:800)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:797)
        at org.apache.activemq.store.kahadb.MessageDatabase$11.visit(MessageDatabase.java:710)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:692)
        at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:393)
        at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:280)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:321)
        at org.apache.activemq.store.kahadb.MessageDatabase.start(MessageDatabase.java:182)
        at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:183)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:456)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:61)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
        ... 30 more
",5.3.0.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-02-01 19:14:25.576,,,false,,,,,,,,,,,,,,,,,74881,,,Mon Feb 01 19:14:25 UTC 2010,,,,,,,,"0|i0rprz:",159820,,,,,,,,,,,,,,,,,,,"01/Feb/10 19:14;gtully;resolved in r905349 on trunk and 5.3.1 branch r905376",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker async disconnect of connections while waiting for slave to connect can lead to hung failover transport,AMQ-2588,12483222,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,29/Jan/10 17:37,29/Jan/10 17:39,30/Jan/20 16:55,29/Jan/10 17:39,5.3.0,,,,,,,5.4.0,,,Broker,,,,0,"failover transport can miss an async exception or inactivity timeout exception while in the process of doing a reconnect and can signal reconnection complete in error, leading to a hang.
Some slight changes to AMQ2183Test which demonstrated intermittent hangs made it reliably reproducible and lead to the diagnosis. 
Test scenario is trying to connect to a broker that is waiting for a slave to connect to it. so a pure master slave setup. The failover will eventually hang thinking it has successfully reconnected but has missed an exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74882,,,Fri Jan 29 17:39:56 UTC 2010,,,,,,,,"0|i0rql3:",159951,,,,,,,,,,,,,,,,,,,"29/Jan/10 17:39;gtully;fixed in r904568",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zero Prefetch not working,AMQ-2567,12483209,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rudolf_janz,rudolf_janz,14/Jan/10 14:26,28/Jan/10 10:49,30/Jan/20 16:55,20/Jan/10 16:45,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"I have problems using the zero prefetch. The consumer starts prefetching messages after some receives. 
 
Our use case is, that we have a large computation which is split into smaller sub jobs. These jobs are sent via ActiveMQ to some processing nodes on different machines. The duration of jobs differs very much (10s to some minutes). The jobs are sent by decreasing estimated computation time. If one of the consumers which receives a large job prefetches some other jobs, these will be processed later. In the meantime the remaining consumers are idle, and the total computation time is much longer than necessary.
 
I have modified the existing ZeroPrefetchConsumerTest to test for the problem (I have removed the other test methods). 
 
Two consumers (C1  and C2) are instantiated. These messages are sent:
1,2,3,4,5,6,7,8,9
 
C1 reads 4 times, receives 1,2,3,4 -> this is correct
 
now C2 reads, it receives 8 not 5, which is the next message in the queue. The reason is, that C1 prefetched 5, 6, 7, that should not have happened.(sometimes C1 only prefetches 5,6)
 
The problem can be seen in the JMX Console as well, after a while, the first consumer has more than one dispatched message and the queue has an InflightCount of 3, although there are only two consumers!
 
The last version that we used was 4.1.1, that worked.","Unix/Windows, Java 1.6",kutzi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/10 11:42;rudolf_janz;PrefetchSubscription.java;https://issues.apache.org/jira/secure/attachment/12461596/PrefetchSubscription.java","15/Jan/10 11:42;rudolf_janz;ZeroPrefetchConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461595/ZeroPrefetchConsumerTest.java","14/Jan/10 14:29;rudolf_janz;ZeroPrefetchConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461594/ZeroPrefetchConsumerTest.java",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2010-01-14 17:42:54.106,,,false,,,,,,,,,,,,,,,,,74890,,,Thu Jan 28 10:49:07 UTC 2010,,,,,,,,"0|i0rpx3:",159843,,,,,,,,,,,,,,,,,,,"14/Jan/10 14:29;rudolf_janz;Extended the test case to send more than one messages and listen and receiving on two consumers.","14/Jan/10 16:28;rudolf_janz;Gary Tully wrote:
PrefetchSubscription and prefetchExtension on a deliveryAck in a transaction 
are areas that you need to look into to resolve this. Great that you have a 
simple junit test case.
---

You are right, prefetchExtension is the problem. I do not understand the reason for it. If I want prefetch 0, it should stay that way. Right now it is increased on each pull.

In acknowledge there is the following comment 
      if (context.isInTransaction()) {
              // extend prefetch window only if not a pulling consumer
                                if (getPrefetchSize() != 0) {
                                    prefetchExtension = Math.max(
                                            prefetchExtension, index );

In PrefetchSubscription::pullMessage it checks for prefetchSize 0 
        if (getPrefetchSize() == 0 && !isSlave()) {
            final long dispatchCounterBeforePull;
        	synchronized(this) {
        		prefetchExtension++;
        		dispatchCounterBeforePull = dispatchCounter;
        	}
","14/Jan/10 17:42;gtully;so the prefetchExtension is the mechanism by which a message is dispatched to a consumer with prefetch=0. Each receive() sends a pull if there are no messages which increments the prefetchExtension so another message is dispatched. With a prefetch of 0, you should only be able to get one message at a time.

I think a deliveredAck may be the problem, a delivered ack uses the prefetchextension to ensure that within a transaction it is possible to read past the prefetch limit. If prefetch=0, a pulling consumer, it should not do that. Check to see if you are getting an ack with ackType=0.

if so, either the logic with a standard ack needs to be duplicated with a deliveredAck or the delivery ack needs to be suppressed on the consumer. ","14/Jan/10 18:31;rudolf_janz;Ok, I unterstand now, what it is for.
Then I guess prefetchExtension should be reset to 0 again after the transaction? But it kept increasing.  

I will have a look at the Ack logic tomorrow.","15/Jan/10 11:40;rudolf_janz;So I added a printout in the client (Expecting/Read) and in the PrefetchSubscribtion for all Acks,
C1/2 are the consumer n is the number of acked messaged. This is how it happens

Expecting Msg1
Read Msg1
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 1
Expecting Msg2
C1: n:1 isDeliveredAck(Before): *2*  This is wrong it should be in the same state as before the message 1, should have been 
C1: n:1 isDeliveredAck(After): 2
Read Msg2
C1: n:1 isStandardAckXA(Before): 2
C1: n:1 isStandardAckXA(After): 2
Expecting Msg3
C1: n:1 isDeliveredAck(Before): 2
C1: n:1 isDeliveredAck(After): 2
Read Msg3
C1: n:1 isStandardAckXA(Before): 2
C1: n:1 isStandardAckXA(After): 2
Expecting Msg4
Read Msg4
C1: n:1 isDeliveredAck(Before): 3
C1: n:1 isDeliveredAck(After): 3
C1: n:1 isStandardAckXA(Before): 3
C1: n:1 isStandardAckXA(After): 3
Expecting Msg5
Read Msg8
C2: n:1 isDeliveredAck(Before): 1
C2: n:1 isDeliveredAck(After): 1
C2: n:1 isStandardAckXA(Before): 1
C2: n:1 isStandardAckXA(After): 1

I think the problem is in the standardAck, this should decrement prefetchIndex. But I guess I am forgetting something (I extended receiving two messages in the transaction in the test case) 

{code}
            if (ack.isStandardAck()) {
                   ...
                            if (context.isInTransaction()) {
                                // extend prefetch window only if not a pulling
                                // consumer
                                System.out.println(prefix+""isStandardAckXA(Before): "" +prefetchExtension);
//RJ                                if (getPrefetchSize() != 0) {
//RJ                                   prefetchExtension = Math.max(prefetchExtension, index );
//RJ                               }
//RJ do the same as in the non transacted case
                                prefetchExtension = Math.max(0,    prefetchExtension - index);
                                System.out.println(prefix+""isStandardAckXA(After): "" +prefetchExtension);
                            } else {
                                System.out.println(prefix+""isStandardAck(Before): "" +prefetchExtension);
                                prefetchExtension = Math.max(0,
}}
                                        prefetchExtension - index);
                                System.out.println(prefix+""isStandardAck(After): "" +prefetchExtension);
                            }
{code}


Expecting Msg1
Read Msg1
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 0
Expecting Msg2
Read Msg2
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 0
Expecting Msg3
Read Msg3
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 0
Expecting Msg4
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
Read Msg4
C1: n:1 isStandardAckXA(Before): 1
C1: n:1 isStandardAckXA(After): 0
Expecting Msg5
C2: n:1 isDeliveredAck(Before): 1
C2: n:1 isDeliveredAck(After): 1
Read Msg5
C2: n:1 isStandardAckXA(Before): 1
C2: n:1 isStandardAckXA(After): 0
Expecting Msg6
Read Msg6
Expecting Msg7
C1: n:1 isDeliveredAck(Before): 1
C1: n:1 isDeliveredAck(After): 1
Read Msg7
C1: n:1 isDeliveredAck(Before): 2
C1: n:1 isDeliveredAck(After): 2
C1: n:2 isStandardAckXA(Before): 2
C1: n:2 isStandardAckXA(After): 0
Expecting Msg8
Read Msg8
C2: n:1 isDeliveredAck(Before): 1
C2: n:1 isDeliveredAck(After): 1
C2: n:1 isStandardAckXA(Before): 1
C2: n:1 isStandardAckXA(After): 0

THis look ok to me now","15/Jan/10 11:42;rudolf_janz;Here is the extended TestCase and the Subscribtion class including the printouts","20/Jan/10 16:45;gtully;Thanks for the test case, debugging and fix. 
Fix with small modification applied to trunk in r901269 and 5.3.1 in r901271","27/Jan/10 17:28;kutzi;Was the fix already released as part of a snapshot release available at https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/ ?
Judging by the JAR file dates I would say no.

If not, when can I expect a snapshot release which includes the fix?","27/Jan/10 18:39;gtully;most of the artifacts are there but the release full tar or zip files still have not been updated for the 5.4-SNAPSHOT - need to check why hudson has not done it, it may be pending a full clean build. Some test failures were resolved today so it should be real soon.","28/Jan/10 08:24;kutzi;Seems like the MD5 and SHA signatures are redeployed every day, but the artifacts themselves (JARs, POMs) are still from January 15th","28/Jan/10 10:20;gtully;I kicked hudson into doing a redeploy of the artifacts and the full install tar files are now uploaded containing the build artifacts from the 27/01 which should have the fix for this issue.
","28/Jan/10 10:32;kutzi;Thanks.
Seems like new artifacts were only deployed for ActiveMQ 5.4.
Can you also do it for 5.3.1-SNAPSHOT, please?","28/Jan/10 10:49;gtully;done for 5.3.1-SNAPSHOT",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Unresolved constraint in bundle org.apache.activemq.activemq-core: package; (&(package=org.osgi.framework)(version>=1.4.0)(!(version>=1.5.0)))",AMQ-2550,12482904,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,njiang,cmoulliard,cmoulliard,23/Dec/09 15:12,25/Jan/10 16:43,30/Jan/20 16:55,29/Dec/09 05:02,,,,,,,,5.3.1,5.4.0,,,,,,0,"The bundle org.apache.activemq.activemq-core - version 5.4-SNAPSHOT cannot be installed on Apache Felix Karaf 1.2 due to unresolve constraint :

(&(package=org.osgi.framework)(version>=1.4.0)(!(version>=1.5.0)))

Felix 2.0.1 exports this package version : 

karaf@root> packages:exports  0
System Bundle (0): org.osgi.framework; version=1.5.0

BE CAREFUL ABOUT PROJECT SYNCHRONIZATION WITH KARAF, SMX4 and CAMEL for OSGI STUFFS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74897,,,2009-12-23 15:12:21.0,,,,,,,,"0|i0rqtz:",159991,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover with async rollback of message audit can lead to over eager duplicate suppression (auto acking) and apparent missing messages,AMQ-2573,12483190,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Jan/10 12:46,20/Jan/10 16:56,30/Jan/20 16:55,20/Jan/10 16:53,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"with multiple unordered message consumers on a connection and failover with default prefetch recovery processing can lead to incorrect duplicate detection.
Duplicates are expected as all unacked messages will be redelivered on recovery. An active consumer may have unconsumed messages which need to be rolled back in the message audit. currently this rollback is occurring at an indeterminate time w.r.t to future dispatch.
given consumer 1 has unconsumed messages 0-10, consumer 2 11-20 etc.. all need to be rolled back prior to recovery of consumer 3 which may get any message in the range 0 - 20 delivered to it. Currently, rollbacks are done on the next delivery. 
All audit rollbacks need to be complete before any new delivery occurs on a recovered connection.

The result of over eager duplicate suppression is missing messages as the duplicates are auto acked.
Symptom: missing messages from a consumer perspective. With debug logging on {code}log4j.logger.org.apache.activemq.ActiveMQMessageConsumer=DEBUG{code} it is possible to catch the duplicate suppression. If your missing messages are in this set, you may have this problem.

workaround is to reduce the prefetch or even use a pull consumer, prefetch=0 such that unconsumed messages do not back up in the consumers dispatch queue pending receive() calls. With async listeners where the consumers can keep up with dispatch, this will not be a problem,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74887,,,Wed Jan 20 16:53:17 UTC 2010,,,,,,,,"0|i0rqlj:",159953,,,,,,,,,,,,,,,,,,,"20/Jan/10 16:53;gtully;fix committed to trunk in r901273, to 5.3.1 in r901274",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rollback redelivery causes inflight count to get out of sync,AMQ-2566,12483191,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Jan/10 13:08,18/Jan/10 13:22,30/Jan/20 16:55,13/Jan/10 15:20,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"A negative inflight count can result from rollback redelivery as each rollback decremented the inflight count
With a 0 maxRedeliveryAttempts policy, the poisonAck was incrementing inflight.

poisinAck should manage the inflight as they are still present (inflight) in the consumer till they are acked via commit or a poisonAck.

adding some asserts to the existing DeadLetterTest junit demonstrates the problem.",any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74891,,,Mon Jan 18 13:22:24 UTC 2010,,,,,,,,"0|i0rqdr:",159918,,,,,,,,,,,,,,,,,,,"13/Jan/10 15:20;gtully;resolved in r898797","18/Jan/10 13:22;gtully;fix merged to 5.3.1 branch at r900391",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover reconnect with outstanding consumer transaction can result in javax.jms.JMSException: Unmatched acknowledege: MessageAck and lost ack,AMQ-2560,12483215,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Jan/10 00:07,18/Jan/10 13:19,30/Jan/20 16:55,18/Jan/10 13:19,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"It is possible to loose an ack after failover if an outstanding consumer transaction (and ack) is in progress during failover. If due to ordering or timing, an unexpected message is replayed to the consumer on recovery it will delivered (and correctly not suppressed as a duplicate). This will be acked with the outstanding messages but the ack will result in an exception {code}javax.jms.JMSException: Unmatched acknowledege: MessageAck...{code} as the original message will not have been re-dispatched. Essentially the ack is lost at this stage.
The message will stay dispatched/inflight til the consumer closes, at which point it can again be re-dispatched to another consumer. A broker restart will also see it re-dispatched. In the mean time, it can look orphaned for some time or will be visible in the jdbc store. It will also be visible via the inflight count on that consumer.

Resolution:
On a transport disconnect, a consumer should discard acked state along with delivered messages as the messages that are redelivered are not guaranteed to be the same. This was not being done for a transacted session. Replayed messages are more likely to be the same if the order of connection recovery is preserved, but this will not be sufficient. (the test case shows the problem because recovery order is dependent on hashmap order which is random when dealing with connection ids)
This needs to be done for both consumers that use receive() or message listeners (that are handled through dispatch)",,xbhanu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74895,,,Mon Jan 18 13:19:56 UTC 2010,,,,,,,,"0|i0rqf3:",159924,,,,,,,,,,,,,,,,,,,"18/Jan/10 13:19;gtully;changed merged to 5.3.1 branch at r900390",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timing issue on consumer close can lead to unconsumed messages being inadvertently marked as duplicates and not getting delivered  ,AMQ-2572,12483216,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,18/Jan/10 09:37,18/Jan/10 09:48,30/Jan/20 16:55,18/Jan/10 09:48,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"Intermittent failure of activemq-core/src/test/java/org/apache/activemq/bugs/AMQ2102Test.java on Linux. Tracking this failure down, the problem of the hung test was missing messages, part of the prefetch that were delivered while the consumer was closing. A timing issue between the audit rollback of  unconsumed messages and the delivery of messages meant that some messages were not rolledback on close.
The use case has consumers that connect, consume a batch of 10 messages in individual transactions and close. These operations complete before the prefetch(1000) messages haven been delivered so there was concurrent delivery and closure happing which sometimes resulted in the problem.

The fix is to ensure the consumer is removed from the session and closed prior to doing the audit rollback on unconsumed messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74888,,,Mon Jan 18 09:48:10 UTC 2010,,,,,,,,"0|i0rqc7:",159911,Unit Test Broken,,,,,,,,,,,,,,,,,,"18/Jan/10 09:48;gtully;resolved in r900317",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PurgeTest doe not close message producer,AMQ-1882,12483214,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,zhonghao,zhonghao,13/Aug/08 12:19,16/Jan/10 20:27,30/Jan/20 16:55,16/Jan/10 20:27,,,,,,,,5.4.0,,,Test Cases,,,,0,"As the code snippet [1] shows, PurgeTest.testPurge() doe not close message producer before leaving the method.

[1]http://www.google.com/codesearch?hl=en&q=lang:java+send+javax.jms.MessageProducer+show:FsSHqpp0HvE:q1E2Dv_MIx4:x48KcFcDtxM&sa=N&ct=rx&cd=5&cs_p=http://apache.osuosl.org/activemq/apache-activemq/4.1.1/apache-activemq-4.1.1-src.zip&cs_f=apache-activemq-4.1.1/src/activemq-core/src/test/java/org/apache/activemq/broker/jmx/PurgeTest.java&cs_p=http://apache.osuosl.org/activemq/apache-activemq/4.1.1/apache-activemq-4.1.1-src.zip&cs_f=apache-activemq-4.1.1/src/activemq-core/src/test/java/org/apache/activemq/broker/jmx/PurgeTest.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-01-16 20:27:58.923,,,false,,,,,,,,,,,,,,,,,95938,,,Sat Jan 16 20:27:58 UTC 2010,,,,,,,,"0|i0rqev:",159923,,,,,,,,,,,,,,,,,,,"16/Jan/10 20:27;tabish;Resolved in trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message Broker Hangs When Temp Store Fills,AMQ-2557,12483178,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,joef,joef,04/Jan/10 15:24,05/Jan/10 15:00,30/Jan/20 16:55,05/Jan/10 12:47,5.3.0,,,,,,,5.4.0,,,Broker,,,,0,"This is an exception test with the following set up. 

ProducerTool sends 200000 non-persistent messages to a Topic with the message size = 2000. 

The ConsumerTool that reads the messages from the Topic has a sleep time of 2 msec, thus creating a slow consumer scenario.   

Temp store = 300mb, Topic memoryLimit = 30mb, producerFlowControl = false. 

The consumer begins to receive messages and messages get written out to the temp store as expected, because the slow consumer cannot keep up with the message load and temp topic fills up. However, when the temp store eventually fills as well, the broker goes comatose. It no longer accepts clients connections and stops dispatching messages to the slow consumer.  You'd expect the broker to at least continue dispatching messages to the slow consumer while the producer is blocked awaiting the temp store to free up. If I double the temp store capacity, everyone is a happy camper. I'll attach a thread dump.



","AMQ 5.3, Open Suse 11.0, JVM 1.6.0_14-b08, KahaDB, default store cursor, temp storage set to 300mb.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/10 15:26;joef;amq.out;https://issues.apache.org/jira/secure/attachment/12461580/amq.out",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-01-05 11:54:36.937,,,false,,,,,,,,,,,,,,,,,74896,,,Tue Jan 05 15:00:36 UTC 2010,,,,,,,,"0|i0rqdj:",159917,Regression,,,,,,,,,,,,,,,,,,"05/Jan/10 11:54;gtully;Joe, does the test fail with trunk? Think this may be a duplicate of https://issues.apache.org/activemq/browse/AMQ-2475","05/Jan/10 12:45;joef;Gary, yep it does appear to be a duplicate of 2475 and the latest 5.4 SNAPSHOT works fine; however, the problem still exists with the latest (Dec 24) 5.3.1 SNAPSHOT.  Will it be applied to the next 5.3.1 SNAPSHOT? Or are  folks being advised to move from 5.3 to 5.4? Thanks, Joe","05/Jan/10 12:47;joef;Duplicate of AMQ-2475; however, 5.3.1 doesn't appear to have the fix","05/Jan/10 15:00;gtully;rob just merged that fix to the 5.3 branch r896063 so it will be in tonight's snapshot.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OOM due to message expiry processing with large numbers of messages in queue because of slow or absent consumers.,AMQ-2481,12483118,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Nov/09 14:38,29/Dec/09 00:33,30/Jan/20 16:55,10/Nov/09 17:00,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"when a large of messages in queue,and no consumer or the consumer is very
slow, the OOM problem occur, because :
in org.apache.activemq.broker.region.Queue,the 588 line is :
 doBrowse(true, browsedMessages, this.getMaxExpirePageSize());
,transform to :
doBrowse(false, browsedMessages, this.getMaxExpirePageSize());
 is ok.

from user list: http://old.nabble.com/Out-of-Memory-on-5.3-ts26064098.html#a26264779
Problem is messages get paged into memory with out any limiter.

*Note:*
disabling periodic expiry processing using a destination policy can work around this. set expireMessagesPeriod = 0
",,daroo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2552,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74926,,,Tue Nov 10 17:00:13 UTC 2009,,,,,,,,"0|i0rpuf:",159831,,,,,,,,,,,,,,,,,,,"10/Nov/09 17:00;gtully;fix in r834543",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SecurityException raised when broker tries to move expired message to DLQ,AMQ-2516,12482965,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,nsaboy,nsaboy,26/Nov/09 14:11,26/Dec/09 20:09,30/Jan/20 16:55,27/Nov/09 08:23,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"I have enabled authentication + authorization in my broker configuration file as follows:

<jaasAuthenticationPlugin configuration=""PropertiesLogin"" />

<authorizationPlugin>
<map>
<authorizationMap>
<authorizationEntries>
<authorizationEntry queue="">"" read=""users"" write=""users"" admin=""users""/>
<authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""users"" write=""users"" admin=""users""/>
</authorizationEntries>
</authorizationMap>
</map>
</authorizationPlugin>

If I send a message with a TTL into the queue (using provided sample configured with the right username and password) and then try to look after the message in the queue after it has expired using the Web Console, I got the following exception:

""Caught an exception sending to DLQ: Message ID:PC198829-1539-1259168148838-0:1:1:1:1 dropped=false locked=false
java.lang.SecurityException: User is not authenticated.""

This only occurs when the broker has to deal with the DLQ as I can successfully read/write in any queue.

It seems that the thread responsible for moving the message into the DLQ doesn't have the right to perform this action (username and password not propagated to its connexion context ? ).
","Windows XP SP2
Java JRE 1.6

Issue found on both FUSE Message Broker 5.3.0.3 & 5.3.0.5 (based on Apache ActiveMQ 5.3)",nsaboy,selikoff,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Nov/09 14:13;nsaboy;activemq.log;https://issues.apache.org/jira/secure/attachment/12461428/activemq.log","26/Nov/09 14:13;nsaboy;activemq_configuration.zip;https://issues.apache.org/jira/secure/attachment/12461430/activemq_configuration.zip","26/Nov/09 14:13;nsaboy;jmsproducer_sample.zip;https://issues.apache.org/jira/secure/attachment/12461429/jmsproducer_sample.zip",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2009-11-27 08:23:41.233,,,false,,,,,,,,,,,,,,,,,74911,,,Sat Dec 26 20:09:37 UTC 2009,,,,,,,,"0|i0rptz:",159829,,,,,,,,,,,,,,,,,,,"26/Nov/09 14:13;nsaboy;Find attached the ActiveMQ configuration, the log showing the security exception and a JMS sample to send a message with TTL into the queue.","27/Nov/09 08:23;gtully;resolved in r884778
thanks for the good description. send to dlq (when configured) now uses the brokers security context so that it is immune to authentication configuration.","23/Dec/09 23:55;selikoff;@ Concombre:  Did you find a work-around for ActiveMQ 5.3.0?  I'm also using the FUSE broker and am seeing this issue.","26/Dec/09 16:40;nsaboy;@Scott: No, no workaround sorry. This issue is not a blocking one for the project I am working on so we just deal with it ignoring the errors. But we plan to upgrade to a new FUSE Message Broker release with fix for this issue as soon as possible (when available).
","26/Dec/09 20:09;selikoff;@Concombre:  Since this is a one line fix, the easiest solution we found was to download the fuse source and rebuild it with maven.  It takes a bit of time for maven to automatically download all the required libraries the first time it runs, but after its done you get a full build with the solution in place.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Duplicate suppression lack of recovery with JDBCStore can result in ""hung"" queue afer failover of outstanding send or transaction.",AMQ-2540,12482380,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,18/Dec/09 13:00,21/Dec/09 12:50,30/Jan/20 16:55,21/Dec/09 12:50,5.3.0,,,,,,,5.3.1,5.4.0,,Message Store,,,,0,"during failover, when a commit or send reply is lost, such that the broker has completed the operation but the client does not see the reply, the operation and context will be replayed. This results in duplicate messages that should be suppressed. The AMQ reference store does this correctly but the audit check in the JDBCMessageStore does not do recovery so it is unaware of past events. 
Adding some replay capability to the audit resolves this as it can then suppress duplicated.
The audit depth should limit the replay depth.
{code}<jdbcPersistenceAdapter dataSource=""#...."" maxProducersToAudit=""10000""/>{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2473,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74900,,,Mon Dec 21 12:50:25 UTC 2009,,,,,,,,"0|i0rqov:",159968,,,,,,,,,,,,,,,,,,,"18/Dec/09 13:05;gtully;requires the resolution to https://issues.apache.org/activemq/browse/AMQ-2473","18/Dec/09 13:08;gtully;An aditional bit of sql dialect wizardy is required to make the query good for a really large table.","18/Dec/09 13:35;gtully;on the audit recovery query limit:
It needs to be maxConcurrentProducers * maxBatchSize * maxDestinations

but with jmstemplate, producers can change with every send, so the maxConcurrentProducers can be large and also the maxProducersToAudit value needs to be large. 
With interleaving there can be quite a collection of outstanding producers and transactions.","21/Dec/09 12:50;gtully;resolved through 891582,891622,892194,892242,892291,892729,892759

all on 5.3.1, thanks dejan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creating temporary destinations omits security checkings,AMQ-2539,12483167,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,17/Dec/09 16:15,17/Dec/09 16:28,30/Jan/20 16:55,17/Dec/09 16:28,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,Session.createTemporaryTopic() for example will successfully create a temporary topic even though it is not allowed by security policies.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74901,,,Thu Dec 17 16:28:18 UTC 2009,,,,,,,,"0|i0rps7:",159821,,,,,,,,,,,,,,,,,,,"17/Dec/09 16:28;dejanb;Fixed with svn version 891786",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker paging all available messages from store leading to resource exhaustion,AMQ-2532,12483136,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,fdelaporte,fdelaporte,14/Dec/09 14:41,14/Dec/09 17:20,30/Jan/20 16:55,14/Dec/09 17:20,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"There seems to be a regression (works fine in 5.2.0) related to the fix for the following:

https://issues.apache.org/activemq/browse/AMQ-2413

I think the intent of the original code was to prevent uncontrolled paging of pending messages. The doPageIn method is called in version 5.3.0 :
- each time a message is acked/committed
- each time the MemoryUsage is decreased

As a result, if you create a queue with, say, 1 000 000 messages in it, then start a consumer, the broker will try to page in all the messages from the store as consuming goes on (with default configuration values, 200 paged in messages for one consumed message minimum - I say minimum because if the MemoryUsage is decreased when you consume a message, then doPageIn is invoked again). Guaranteed OutOfMemoryError as in general consuming messages is slower than paging from store. I guess the same can occur when you have a fast producer and a slow consumer, without producer flow control.

I would say that in any case, the broker should never page in more messages than the maxPageSize attribute, plus the number of dispatched messages. More formally:

{code:java}
            int toPageIn = getMaxPageSize() - pagedInPendingDispatch.size();
{code}

And just to make sure we never get a negative value:

{code:java}
            int toPageIn = Math.max(0, getMaxPageSize() - pagedInPendingDispatch.size());
{code}

Note 1: this behavior is also exhibited by the background message expiration logic, that forces message pagination each time it is run. With big queues without consumers, by default you'll get 200 more messages paginated each time the expiration task is run. Eventually leading to broker resource exhaustion if no consumer comes into play in the near future with active producers queuing up messages.

Note 2: this may also be related to https://issues.apache.org/activemq/browse/AMQ-2468

Workarounds:
- setting lazyDispatch to true fixes the problem for message consuming only
- background expiration can be disabled by setting expireMessagesPeriod to -1

Cheers,
Fabrice",Java 1.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-12-14 16:23:49.818,,,false,,,,,,,,,,,,,,,,,74903,,,Mon Dec 14 17:20:09 UTC 2009,,,,,,,,"0|i0rr7r:",160053,Regression,,,,,,,,,,,,,,,,,,"14/Dec/09 16:23;gtully;I suspect that this is resolved on trunk via https://issues.apache.org/activemq/browse/AMQ-2468 and https://issues.apache.org/activemq/browse/AMQ-2481

Can you validate with a 5.3.1-SNAPSHOT of 5.4-SNAPSHOT","14/Dec/09 17:18;fdelaporte;Ah, yes indeed, this is fixed. Good news !

Strange it didn't strike me that I should try the latest snapshots before reporting ;)

Sorry for the noise.

Cheers,
Fabrice","14/Dec/09 17:20;fdelaporte;This is already fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Browsing Queues over network can cause a message delivered twice,AMQ-2529,12483081,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,11/Dec/09 16:08,14/Dec/09 09:08,30/Jan/20 16:55,14/Dec/09 09:08,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"When you browse a queue over the network, messages are not removed from the local broker, so they can be later consumer from both local and remote broker",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74905,,,Mon Dec 14 09:08:14 UTC 2009,,,,,,,,"0|i0rpsv:",159824,,,,,,,,,,,,,,,,,,,"14/Dec/09 09:08;dejanb;Fixed with svn revision 889677",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent JDBC store to persist the same message twice,AMQ-2519,12483087,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,01/Dec/09 17:16,10/Dec/09 10:11,30/Jan/20 16:55,01/Dec/09 17:29,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,The simple solution would be to check producer sequence id before saving a message in the database,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74910,,,Thu Dec 10 10:11:11 UTC 2009,,,,,,,,"0|i0rpsf:",159822,,,,,,,,,,,,,,,,,,,"01/Dec/09 17:29;dejanb;Fixed with svn revision 885841","10/Dec/09 10:11;dejanb;Implemented better (error free and configurable) solution in svn revision 889167",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent hang of AMQ2102Test with ibm jdk - demonstrated sync issue with message properties and  dlq processing for topics,AMQ-2527,12482581,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Dec/09 15:03,09/Dec/09 21:11,30/Jan/20 16:55,09/Dec/09 21:10,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"Stack traces of all threads when the test is hanging. Looks like the issue is with concurrent access to the message properties hashmap during message copy.

{code}
ActiveMQ Transport: tcp:///127.0.0.1:56744[1] where all
main:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos (AbstractQueuedSynchronizer.java:958)
  [4] java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos (AbstractQueuedSynchronizer.java:1,250)
  [5] java.util.concurrent.CountDownLatch.await (CountDownLatch.java:264)
  [6] org.apache.activemq.broker.TransportConnection.stop (TransportConnection.java:905)
  [7] org.apache.activemq.util.ServiceStopper.stop (ServiceStopper.java:41)
  [8] org.apache.activemq.broker.TransportConnector.stop (TransportConnector.java:281)
  [9] org.apache.activemq.util.ServiceStopper.stop (ServiceStopper.java:41)
  [10] org.apache.activemq.broker.BrokerService.stopAllConnectors (BrokerService.java:1,536)
  [11] org.apache.activemq.broker.BrokerService.stop (BrokerService.java:508)
  [12] org.apache.activemq.bugs.AMQ2021Test.tearDown (AMQ2021Test.java:94)
  [13] junit.framework.TestCase.runBare (TestCase.java:140)
  [14] junit.framework.TestResult$1.protect (TestResult.java:110)
  [15] junit.framework.TestResult.runProtected (TestResult.java:128)
  [16] junit.framework.TestResult.run (TestResult.java:113)
  [17] junit.framework.TestCase.run (TestCase.java:124)
  [18] junit.framework.TestSuite.runTest (TestSuite.java:232)
  [19] junit.framework.TestSuite.run (TestSuite.java:227)
  [20] org.junit.internal.runners.JUnit38ClassRunner.run (JUnit38ClassRunner.java:79)
  [21] org.apache.maven.surefire.junit4.JUnit4TestSet.execute (JUnit4TestSet.java:62)
  [22] org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet (AbstractDirectoryTestSuite.java:140)
  [23] org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute (AbstractDirectoryTestSuite.java:165)
  [24] org.apache.maven.surefire.Surefire.run (Surefire.java:107)
  [25] sun.reflect.NativeMethodAccessorImpl.invoke0 (native method)
  [26] sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39)
  [27] sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:37)
  [28] java.lang.reflect.Method.invoke (Method.java:599)
  [29] org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess (SurefireBooter.java:289)
  [30] org.apache.maven.surefire.booter.SurefireBooter.main (SurefireBooter.java:1,005)
JIT Compilation Thread:
Signal Dispatcher:
  [1] com.ibm.misc.SignalDispatcher.waitForSignal (native method)
  [2] com.ibm.misc.SignalDispatcher.run (SignalDispatcher.java:54)
Gc Slave Thread:
Gc Slave Thread:
Gc Slave Thread:
Finalizer thread:
ActiveMQ Scheduler:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.util.Timer$TimerImpl.run (Timer.java:230)
ActiveMQ Data File Writer:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:167)
  [3] org.apache.activemq.kaha.impl.async.NIODataFileAppender.processQueue (NIODataFileAppender.java:79)
  [4] org.apache.activemq.kaha.impl.async.DataFileAppender$2.run (DataFileAppender.java:234)
MemoryPoolMXBean notification dispatcher:
  [1] com.ibm.lang.management.MemoryNotificationThread.processNotificationLoop (native method)
  [2] com.ibm.lang.management.MemoryNotificationThread.run (MemoryNotificationThread.java:55)
OperatingSystemMXBean notification dispatcher:
  [1] com.ibm.lang.management.OperatingSystemNotificationThread.processNotificationLoop (native method)
  [2] com.ibm.lang.management.OperatingSystemNotificationThread.run (OperatingSystemNotificationThread.java:39)
RMI Scheduler(0):
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos (AbstractQueuedSynchronizer.java:1,974)
  [4] java.util.concurrent.DelayQueue.take (DelayQueue.java:175)
  [5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take (ScheduledThreadPoolExecutor.java:593)
  [6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take (ScheduledThreadPoolExecutor.java:586)
  [7] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:957)
  [8] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [9] java.lang.Thread.run (Thread.java:735)
RMI TCP Accept-1099:
  [1] java.net.PlainSocketImpl.socketAccept (native method)
  [2] java.net.PlainSocketImpl.accept (PlainSocketImpl.java:414)
  [3] java.net.ServerSocket.implAccept (ServerSocket.java:464)
  [4] java.net.ServerSocket.accept (ServerSocket.java:432)
  [5] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop (TCPTransport.java:381)
  [6] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run (TCPTransport.java:353)
  [7] java.lang.Thread.run (Thread.java:735)
RMI TCP Accept-0:
  [1] java.net.PlainSocketImpl.socketAccept (native method)
  [2] java.net.PlainSocketImpl.accept (PlainSocketImpl.java:414)
  [3] java.net.ServerSocket.implAccept (ServerSocket.java:464)
  [4] java.net.ServerSocket.accept (ServerSocket.java:432)
  [5] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop (TCPTransport.java:381)
  [6] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run (TCPTransport.java:353)
  [7] java.lang.Thread.run (Thread.java:735)
RMI Reaper:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.lang.ref.ReferenceQueue.remove (ReferenceQueue.java:107)
  [4] java.lang.ref.ReferenceQueue.remove (ReferenceQueue.java:79)
  [5] sun.rmi.transport.ObjectTable$Reaper.run (ObjectTable.java:350)
  [6] java.lang.Thread.run (Thread.java:735)
GC Daemon:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] sun.misc.GC$Daemon.run (GC.java:112)
RMI RenewClean-[10.65.4.113:56702]:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.lang.ref.ReferenceQueue.remove (ReferenceQueue.java:107)
  [4] sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run (DGCClient.java:528)
  [5] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp://localhost/127.0.0.1:61616:
  [1] java.net.SocketInputStream.socketRead0 (native method)
  [2] java.net.SocketInputStream.read (SocketInputStream.java:140)
  [3] org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill (TcpBufferedInputStream.java:50)
  [4] org.apache.activemq.transport.tcp.TcpBufferedInputStream.read (TcpBufferedInputStream.java:58)
  [5] java.io.DataInputStream.readInt (DataInputStream.java:381)
  [6] org.apache.activemq.openwire.OpenWireFormat.unmarshal (OpenWireFormat.java:272)
  [7] org.apache.activemq.transport.tcp.TcpTransport.readCommand (TcpTransport.java:210)
  [8] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:202)
  [9] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [10] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp://localhost/127.0.0.1:61616:
  [1] java.net.SocketInputStream.socketRead0 (native method)
  [2] java.net.SocketInputStream.read (SocketInputStream.java:140)
  [3] org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill (TcpBufferedInputStream.java:50)
  [4] org.apache.activemq.transport.tcp.TcpBufferedInputStream.read (TcpBufferedInputStream.java:58)
  [5] java.io.DataInputStream.readInt (DataInputStream.java:381)
  [6] org.apache.activemq.openwire.OpenWireFormat.unmarshal (OpenWireFormat.java:272)
  [7] org.apache.activemq.transport.tcp.TcpTransport.readCommand (TcpTransport.java:210)
  [8] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:202)
  [9] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [10] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp:///127.0.0.1:56744:
  [1] java.util.HashMap.putAllImpl (HashMap.java:679)
  [2] java.util.HashMap.<init> (HashMap.java:369)
  [3] org.apache.activemq.command.Message.copy (Message.java:120)
  [4] org.apache.activemq.command.ActiveMQMessage.copy (ActiveMQMessage.java:64)
  [5] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:57)
  [6] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:52)
  [7] org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue (RegionBroker.java:710)
  [8] org.apache.activemq.broker.region.PrefetchSubscription.sendToDLQ (PrefetchSubscription.java:462)
  [9] org.apache.activemq.broker.region.PrefetchSubscription.acknowledge (PrefetchSubscription.java:365)
  [10] org.apache.activemq.broker.region.AbstractRegion.acknowledge (AbstractRegion.java:369)
  [11] org.apache.activemq.broker.region.RegionBroker.acknowledge (RegionBroker.java:470)
  [12] org.apache.activemq.broker.TransactionBroker.acknowledge (TransactionBroker.java:195)
  [13] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [14] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [15] org.apache.activemq.broker.MutableBrokerFilter.acknowledge (MutableBrokerFilter.java:85)
  [16] org.apache.activemq.broker.TransportConnection.processMessageAck (TransportConnection.java:466)
  [17] org.apache.activemq.command.MessageAck.visit (MessageAck.java:205)
  [18] org.apache.activemq.broker.TransportConnection.service (TransportConnection.java:309)
  [19] org.apache.activemq.broker.TransportConnection$1.onCommand (TransportConnection.java:179)
  [20] org.apache.activemq.transport.TransportFilter.onCommand (TransportFilter.java:68)
  [21] org.apache.activemq.transport.WireFormatNegotiator.onCommand (WireFormatNegotiator.java:113)
  [22] org.apache.activemq.transport.InactivityMonitor.onCommand (InactivityMonitor.java:210)
  [23] org.apache.activemq.transport.TransportSupport.doConsume (TransportSupport.java:84)
  [24] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:203)
  [25] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [26] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp:///127.0.0.1:56733:
  [1] java.util.HashMap.putAllImpl (HashMap.java:679)
  [2] java.util.HashMap.<init> (HashMap.java:369)
  [3] org.apache.activemq.command.Message.copy (Message.java:120)
  [4] org.apache.activemq.command.ActiveMQMessage.copy (ActiveMQMessage.java:64)
  [5] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:57)
  [6] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:52)
  [7] org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue (RegionBroker.java:710)
  [8] org.apache.activemq.broker.region.PrefetchSubscription.sendToDLQ (PrefetchSubscription.java:462)
  [9] org.apache.activemq.broker.region.PrefetchSubscription.acknowledge (PrefetchSubscription.java:365)
  [10] org.apache.activemq.broker.region.AbstractRegion.acknowledge (AbstractRegion.java:369)
  [11] org.apache.activemq.broker.region.RegionBroker.acknowledge (RegionBroker.java:470)
  [12] org.apache.activemq.broker.TransactionBroker.acknowledge (TransactionBroker.java:195)
  [13] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [14] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [15] org.apache.activemq.broker.MutableBrokerFilter.acknowledge (MutableBrokerFilter.java:85)
  [16] org.apache.activemq.broker.TransportConnection.processMessageAck (TransportConnection.java:466)
  [17] org.apache.activemq.command.MessageAck.visit (MessageAck.java:205)
  [18] org.apache.activemq.broker.TransportConnection.service (TransportConnection.java:309)
  [19] org.apache.activemq.broker.TransportConnection$1.onCommand (TransportConnection.java:179)
  [20] org.apache.activemq.transport.TransportFilter.onCommand (TransportFilter.java:68)
  [21] org.apache.activemq.transport.WireFormatNegotiator.onCommand (WireFormatNegotiator.java:113)
  [22] org.apache.activemq.transport.InactivityMonitor.onCommand (InactivityMonitor.java:210)
  [23] org.apache.activemq.transport.TransportSupport.doConsume (TransportSupport.java:84)
  [24] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:203)
  [25] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [26] java.lang.Thread.run (Thread.java:735)
InactivityMonitor ReadCheck:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.util.Timer$TimerImpl.run (Timer.java:230)
InactivityMonitor WriteCheck:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.util.Timer$TimerImpl.run (Timer.java:230)
ActiveMQ Transport: tcp://localhost/127.0.0.1:61616:
  [1] java.net.SocketInputStream.socketRead0 (native method)
  [2] java.net.SocketInputStream.read (SocketInputStream.java:140)
  [3] org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill (TcpBufferedInputStream.java:50)
  [4] org.apache.activemq.transport.tcp.TcpBufferedInputStream.read (TcpBufferedInputStream.java:58)
  [5] java.io.DataInputStream.readInt (DataInputStream.java:381)
  [6] org.apache.activemq.openwire.OpenWireFormat.unmarshal (OpenWireFormat.java:272)
  [7] org.apache.activemq.transport.tcp.TcpTransport.readCommand (TcpTransport.java:210)
  [8] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:202)
  [9] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [10] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp:///127.0.0.1:56754:
  [1] org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending (PrefetchSubscription.java:582)
  [2] org.apache.activemq.broker.region.PrefetchSubscription.add (PrefetchSubscription.java:158)
  [3] org.apache.activemq.broker.region.DurableTopicSubscription.add (DurableTopicSubscription.java:199)
  [4] org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch (SimpleDispatchPolicy.java:49)
  [5] org.apache.activemq.broker.region.Topic.dispatch (Topic.java:588)
  [6] org.apache.activemq.broker.region.Topic.doMessageSend (Topic.java:442)
  [7] org.apache.activemq.broker.region.Topic.send (Topic.java:376)
  [8] org.apache.activemq.broker.region.AbstractRegion.send (AbstractRegion.java:354)
  [9] org.apache.activemq.broker.region.RegionBroker.send (RegionBroker.java:445)
  [10] org.apache.activemq.broker.TransactionBroker.send (TransactionBroker.java:227)
  [11] org.apache.activemq.broker.BrokerFilter.send (BrokerFilter.java:126)
  [12] org.apache.activemq.broker.CompositeDestinationBroker.send (CompositeDestinationBroker.java:95)
  [13] org.apache.activemq.broker.MutableBrokerFilter.send (MutableBrokerFilter.java:133)
  [14] org.apache.activemq.broker.TransportConnection.processMessage (TransportConnection.java:459)
  [15] org.apache.activemq.command.ActiveMQMessage.visit (ActiveMQMessage.java:631)
  [16] org.apache.activemq.broker.TransportConnection.service (TransportConnection.java:309)
  [17] org.apache.activemq.broker.TransportConnection$1.onCommand (TransportConnection.java:179)
  [18] org.apache.activemq.transport.TransportFilter.onCommand (TransportFilter.java:68)
  [19] org.apache.activemq.transport.WireFormatNegotiator.onCommand (WireFormatNegotiator.java:113)
  [20] org.apache.activemq.transport.InactivityMonitor.onCommand (InactivityMonitor.java:210)
  [21] org.apache.activemq.transport.TransportSupport.doConsume (TransportSupport.java:84)
  [22] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:203)
  [23] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [24] java.lang.Thread.run (Thread.java:735)
QueueThread:queue://ActiveMQ.DLQ:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.park (LockSupport.java:173)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (AbstractQueuedSynchronizer.java:1,936)
  [4] java.util.concurrent.LinkedBlockingQueue.take (LinkedBlockingQueue.java:369)
  [5] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:957)
  [6] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [7] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport Stopper: /127.0.0.1:56733:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.park (LockSupport.java:173)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt (AbstractQueuedSynchronizer.java:758)
  [4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (AbstractQueuedSynchronizer.java:789)
  [5] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (AbstractQueuedSynchronizer.java:1,125)
  [6] java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock (ReentrantReadWriteLock.java:818)
  [7] org.apache.activemq.broker.TransportConnection$3.run (TransportConnection.java:931)
InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@4700470:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill (SynchronousQueue.java:435)
  [4] java.util.concurrent.SynchronousQueue$TransferStack.transfer (SynchronousQueue.java:334)
  [5] java.util.concurrent.SynchronousQueue.poll (SynchronousQueue.java:885)
  [6] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:955)
  [7] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [8] java.lang.Thread.run (Thread.java:735)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Dec/09 15:08;gtully;AMQ-2527.patch.txt;https://issues.apache.org/jira/secure/attachment/12461346/AMQ-2527.patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74906,,,Wed Dec 09 21:11:14 UTC 2009,,,,,,,,"0|i0rpr3:",159816,,,,,,,,,,,,,,,,,,,"09/Dec/09 15:08;gtully;fix attached and a bunch of mods to tests and waitForSlave timeout addition that resolve a bunch of intermittent failures on slow machines. Thanks Peter Jones","09/Dec/09 21:10;gtully;resolved in r888974","09/Dec/09 21:11;gtully;issue introduced by changes for AMQ-1112",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent broker deadlock if jmxconnector start hangs ,AMQ-2525,12482152,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,08/Dec/09 12:20,08/Dec/09 12:27,30/Jan/20 16:55,08/Dec/09 12:27,5.3.1,,,,,,,5.3.1,5.4.0,,,,,,0,"This issue is discovered in camel-example-guice-jms module, where the test hangs due to the problem with starting connector. The JMXConnectorServer can deadlock when start() is called at the same with stop() or isActive() methods. The simple logic that will enable this condition is never met is enough to prevent broker to hang on startup.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74908,,,Tue Dec 08 12:27:31 UTC 2009,,,,,,,,"0|i0rptb:",159826,,,,,,,,,,,,,,,,,,,"08/Dec/09 12:27;dejanb;Fixed with svn revision 888367",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock on message expiration,AMQ-1788,12482057,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mlukica,mlukica,10/Jun/08 17:44,07/Dec/09 19:48,30/Jan/20 16:55,11/Jun/08 10:36,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"Detected deadlock in AMQ 5.1.0 between transport thread (removing consumer) and QueueThread (sending expired messages to DLQ): 

Name: VMTransport 
State: BLOCKED on java.lang.Object@7176e6 owned by: QueueThread:queue://some_queue 
Total blocked: 31  Total waited: 525 

Stack trace: 
at org.apache.activemq.broker.region.PrefetchSubscription.remove(PrefetchSubscription.java:463) 
at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:300) 
   - locked java.util.ArrayList@14aa305 
at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:313) 
   - locked java.lang.Object@da6a6b 
at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:400) 
at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:113) 
at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:222) 
at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:113) 
at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:120) 
at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:552) 
at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:64) 
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292) 
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180) 
at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104) 
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68) 
at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205) 
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) 
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43) 
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
java.lang.Thread.run(Thread.java:619) 

Name: QueueThread:queue://some_queue 
State: BLOCKED on java.lang.Object@da6a6b owned by: VMTransport 
Total blocked: 107  Total waited: 1.363 

Stack trace: 
at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:372) 
at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:336) 
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445) 
at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224) 
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:125) 
at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95) 
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:132) 
at org.apache.activemq.util.BrokerSupport.resend(BrokerSupport.java:56) 
at org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(RegionBroker.java:712) 
at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:257) 
at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:257) 
at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:257) 
at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:270) 
at org.apache.activemq.broker.region.RegionBroker.messageExpired(RegionBroker.java:679) 
at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:496) 
   - locked java.lang.Object@7176e6 
at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:144) 
at org.apache.activemq.broker.region.Queue.iterate(Queue.java:936) 
   - locked org.apache.activemq.broker.region.Queue$2@e02b5 
at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84) 
at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41) 
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
at java.lang.Thread.run(Thread.java:619)","Win XP, JVM 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-11 10:36:59.705,,,false,,,,,,,,,,,,,,,,,84771,,,Wed Jun 11 10:36:59 UTC 2008,,,,,,,,"0|i0tszr:",172006,,,,,,,,,,,,,,,,,,,"10/Jun/08 17:56;mlukica;Reposting stack traces without jira formatting:

{noformat}
Name: VMTransport 
State: BLOCKED on java.lang.Object@7176e6 owned by: QueueThread:queue://some_queue 
Total blocked: 31  Total waited: 525 

Stack trace: 
at org.apache.activemq.broker.region.PrefetchSubscription.remove(PrefetchSubscription.java:463) 
at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:300) 
   - locked java.util.ArrayList@14aa305 
at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:313) 
   - locked java.lang.Object@da6a6b 
at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:400) 
at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:113) 
at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:222) 
at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:113) 
at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:120) 
at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:552) 
at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:64) 
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292) 
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180) 
at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104) 
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68) 
at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205) 
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) 
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43) 
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
java.lang.Thread.run(Thread.java:619) 

Name: QueueThread:queue://some_queue 
State: BLOCKED on java.lang.Object@da6a6b owned by: VMTransport 
Total blocked: 107  Total waited: 1.363 

Stack trace: 
at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:372) 
at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:336) 
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445) 
at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224) 
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:125) 
at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95) 
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:132) 
at org.apache.activemq.util.BrokerSupport.resend(BrokerSupport.java:56) 
at org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(RegionBroker.java:712) 
at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:257) 
at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:257) 
at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:257) 
at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:270) 
at org.apache.activemq.broker.region.RegionBroker.messageExpired(RegionBroker.java:679) 
at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:496) 
   - locked java.lang.Object@7176e6 
at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:144) 
at org.apache.activemq.broker.region.Queue.iterate(Queue.java:936) 
   - locked org.apache.activemq.broker.region.Queue$2@e02b5 
at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84) 
at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41) 
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
at java.lang.Thread.run(Thread.java:619)
{noformat}","11/Jun/08 10:36;rajdavies;Fixed by SVN revision 666607",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
expired messages not moved to DLQ on trunk (5.2),AMQ-1796,12483174,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mlukica,mlukica,12/Jun/08 14:43,07/Dec/09 19:47,30/Jan/20 16:55,09/Jul/08 06:36,5.2.0,,,,,,,5.2.0,,,Broker,,,,0,"Expired messages (transient) are not moved to DLQ on trunk (667098).

Following tests are failing:
Running org.apache.activemq.broker.policy.IndividualDeadLetterTest
Tests run: 4, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 4.172 sec <<< FAILURE!
Running org.apache.activemq.broker.policy.MessageListenerDeadLetterTest
Tests run: 4, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 9.469 sec <<< FAILURE!
Running org.apache.activemq.broker.policy.DeadLetterTest
Tests run: 4, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 4.359 sec <<< FAILURE!
Running org.apache.activemq.camel.CamelJmsTest
Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 2.203 sec <<< FAILURE!
Running org.apache.activemq.broker.policy.IndividualDeadLetterViaXmlTest
Tests run: 4, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 4.734 sec <<< FAILURE!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-16 12:59:07.875,,,false,,,,,,,,,,,,,,,,,95907,,,Wed Jul 09 06:36:15 UTC 2008,,,,,,,,"0|i0tsxj:",171996,Regression,,,,,,,,,,,,,,,,,,"12/Jun/08 15:05;mlukica;Additional info:

After expiration on original queue:
- messages are removed from original queue (although not moved to DLQ)
- queue size is decremented
- DequeueCount is not incremented
- CursorMemoryUsage and MemoryPercentUsage are not decremented (statistics is not updated)","16/Jun/08 12:59;rajdavies;In 5.2 the Default Dead Letter strategy has changed - to not send to a DLQ non-persistent messages by default

Fixes to test cases etc in SVN revision 668146","03/Jul/08 11:28;gtully;seeing a classcast exception after these changes.
{code}
SEVERE: Failed to page in more queue messages
java.lang.ClassCastException: org.apache.activemq.command.ActiveMQBytesMessage
at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1045)
at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1037)
at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1117)
at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1196)
at org.apache.activemq.broker.region.Queue.iterate(Queue.java:951)
at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
at java.lang.Thread.run(Thread.java:595)
{code}
fix seems to be:
{code}
Index: src/main/java/org/apache/activemq/broker/region/Queue.java
===================================================================
--- src/main/java/org/apache/activemq/broker/region/Queue.java  (revision 673649)
+++ src/main/java/org/apache/activemq/broker/region/Queue.java  (working copy)
@@ -1114,7 +1114,7 @@
                                 result.add(ref);
                                 count++;
                             } else {
-                                messageExpired(createConnectionContext(), node);
+                                messageExpired(createConnectionContext(), createMessageReference(node.getMessage()));
                             }
                         }
                     } finally {

{code}","08/Jul/08 14:12;gtully;reopen till classcast exception is resolved, patch in the comment.","09/Jul/08 06:36;rajdavies;Resolved by SVN revision 675104",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
queue.send() throws ResourceAllocationException without checking usageManager when sendFailIfNoSpace is set,AMQ-1789,12481884,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mlukica,mlukica,10/Jun/08 17:51,07/Dec/09 19:40,30/Jan/20 16:55,11/Jun/08 10:59,4.1.2,,,,,,,5.1.0,,,Broker,,,,0,"org.apache.activemq.broker.region.Queue send(ConnectionContext, Message) method always throws ResourceAllocationException if sendFailIfNoSpace is set, producerFlowControl is enabled, message response is not required and network connection is not used to connect to broker. 

In this case thread execution ends up in following code block: 
{code}
            ... 
            } else { 
                if (usageManager.isSendFailIfNoSpace() ) { 
                    throw new javax.jms.ResourceAllocationException(""Usage Manager memory limit reached""); 
                } else { 
                    while( !usageManager.waitForSpace(1000) ) { 
                        if( context.getStopping().get() ) 
                            throw new IOException(""Connection closed, send aborted.""); 
                    } 
                } 
            } 
{code}

... usageManager is never checked for space prior to throwing ResourceAllocationException(""Usage Manager memory limit reached""), and no message can be sent to this queue, regardless of the usageManager set on queue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-11 10:59:07.13,,,false,,,,,,,,,,,,,,,,,84587,,,Mon Dec 07 19:40:58 UTC 2009,,,,,,,,"0|i0tsv3:",171985,,,,,,,,,,,,,,,,,,,"11/Jun/08 10:59;rajdavies;This is fixed in 5.1 - we are not planning patch releases for 4.x branches for apache - so an upgrade to 5.1 is recommended","07/Dec/09 19:40;mlukica;Switched to 5.3.0 and problem does not exist there.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Active MQ Blocks when sending and receiving messages and doesn't release resources even after queue is empty,AMQ-2500,12483169,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,matthias.strolz@movilitas.com,matthias.strolz@movilitas.com,18/Nov/09 13:25,24/Nov/09 16:19,30/Jan/20 16:55,24/Nov/09 16:19,5.2.0,,,,,,,5.3.0,,,,,,,0,"The following test-programm reads and writes messages into the same queue (testQueue). After Reading several messages the class starts two threads that are writing messages in the same queue. After writing several messages the producer hangs on:

producer.send()

and doesn't recover even if the reader continues reading messages from the queue. Even stopping the clients (via kill) doesn't change the broker's behaviour. In this state further connections opened from other clients hang on the same method call (producer.send()). The client's connections will remain open as you can see in the jconsole-screenshot, that has been taken after the producer in the example hung. Althogh the consumer may continue reading new producer can only continue writing messages into the queue after activeMQ has been restarted. 

The following two snippets show the difference between the first (127.0.0.1:49372) and the second (127.0.0.1:49385) message producer: The first producer works as expected and adds it's messages to the queue. The second producer stops with the following log-entry: 2009-11-13 09:41:45,639 [127.0.0.1:49385] DEBUG AbstractRegion                 - Adding consumer: ID:JoergsPC-49370-1258101701975-0:14:-1:1

...
2009-11-13 09:41:42,376 [eue://testQueue] DEBUG Queue                          - queue://testQueue - Recovery - Message pushed '21290107 - Message ID:JoergsPC-50687-1258047095293-0:2810:1:1:1 dropped=false locked=false' to subscription: 'QueueSubscription: consumer=ID:JoergsPC-49370-1258101701975-0:0:1:1, destinations=1, dispatched=197, delivered=0, pending=0'
2009-11-13 09:41:42,376 [eue://testQueue] DEBUG Queue                          - queue://testQueue - Recovery - Message pushed '31931917 - Message ID:JoergsPC-50687-1258047095293-0:2811:1:1:1 dropped=false locked=false' to subscription: 'QueueSubscription: consumer=ID:JoergsPC-49370-1258101701975-0:0:1:1, destinations=1, dispatched=198, delivered=0, pending=0'
2009-11-13 09:41:42,376 [eue://testQueue] DEBUG Queue                          - queue://testQueue - Recovery - Message pushed '10144386 - Message ID:JoergsPC-50687-1258047095293-0:2812:1:1:1 dropped=false locked=false' to subscription: 'QueueSubscription: consumer=ID:JoergsPC-49370-1258101701975-0:0:1:1, destinations=1, dispatched=199, delivered=0, pending=0'
2009-11-13 09:41:42,381 [127.0.0.1:49372] DEBUG WireFormatNegotiator           - Received WireFormat: WireFormatInfo { version=3, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2009-11-13 09:41:42,381 [127.0.0.1:49372] DEBUG WireFormatNegotiator           - Sending: WireFormatInfo { version=3, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2009-11-13 09:41:42,382 [127.0.0.1:49372] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:49372 before negotiation: OpenWireFormat{version=3, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2009-11-13 09:41:42,394 [127.0.0.1:49372] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:49372 after negotiation: OpenWireFormat{version=3, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
2009-11-13 09:41:42,395 [127.0.0.1:49372] DEBUG TransportConnection            - Setting up new connection: /127.0.0.1:49372
2009-11-13 09:41:42,409 [127.0.0.1:49372] DEBUG AbstractRegion                 - Adding consumer: ID:JoergsPC-49370-1258101701975-0:1:-1:1
2009-11-13 09:41:42,414 [127.0.0.1:49372] DEBUG AbstractRegion                 - Adding destination: topic://ActiveMQ.Advisory.Producer.Queue.testQueue
2009-11-13 09:41:42,416 [127.0.0.1:49372] DEBUG AMQMessageStore                - Journalled message add for: ID:JoergsPC-49370-1258101701975-0:1:1:1:1, at: offset = 10684963, file = 4, size = 270, type = 1
2009-11-13 09:41:42,416 [eue://testQueue] DEBUG AMQMessageStore                - Doing batch update... adding: 1 removing: 0 
2009-11-13 09:41:42,417 [eue://testQueue] DEBUG AMQMessageStore                - Batch update done.
2009-11-13 09:41:42,418 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 7, to: 8
2009-11-13 09:41:42,418 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 1, to: 2
2009-11-13 09:41:42,425 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 8, to: 9
2009-11-13 09:41:42,433 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 9, to: 10
2009-11-13 09:41:42,440 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 10, to: 11
2009-11-13 09:41:42,470 [127.0.0.1:49371] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:0:1:1
2009-11-13 09:41:42,474 [127.0.0.1:49371] DEBUG AMQMessageStore                - flush starting ...
2009-11-13 09:41:42,474 [127.0.0.1:49371] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:0:-1:1
2009-11-13 09:41:42,477 [127.0.0.1:49371] DEBUG TransportConnection            - Stopping connection: /127.0.0.1:49371
...


...
2009-11-13 09:41:45,319 [eue://testQueue] DEBUG Queue                          - queue://testQueue - Recovery - Message pushed '21569784 - Message ID:JoergsPC-50687-1258047095293-0:3422:1:1:1 dropped=false locked=false' to subscription: 'QueueSubscription: consumer=ID:JoergsPC-49370-1258101701975-0:13:1:1, destinations=1, dispatched=797, delivered=0, pending=0'
2009-11-13 09:41:45,320 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 181, to: 182
2009-11-13 09:41:45,327 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 182, to: 183
2009-11-13 09:41:45,331 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 183, to: 184
2009-11-13 09:41:45,332 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 45, to: 46
2009-11-13 09:41:45,338 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 184, to: 185
2009-11-13 09:41:45,344 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 185, to: 186
2009-11-13 09:41:45,349 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 186, to: 187
2009-11-13 09:41:45,356 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 187, to: 188
2009-11-13 09:41:45,356 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 46, to: 47
2009-11-13 09:41:45,442 [127.0.0.1:49384] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:13:1:1
2009-11-13 09:41:45,445 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 188, to: 189
2009-11-13 09:41:45,443 [127.0.0.1:49372] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:1:-1:1
2009-11-13 09:41:45,632 [127.0.0.1:49372] DEBUG TransportConnection            - Stopping connection: /127.0.0.1:49372
2009-11-13 09:41:45,632 [127.0.0.1:49372] DEBUG TcpTransport                   - Stopping transport tcp:///127.0.0.1:49372
2009-11-13 09:41:45,632 [127.0.0.1:49372] DEBUG TransportConnection            - Stopped transport: /127.0.0.1:49372
2009-11-13 09:41:45,632 [127.0.0.1:49372] DEBUG TransportConnection            - Connection Stopped: /127.0.0.1:49372
2009-11-13 09:41:45,636 [127.0.0.1:49385] DEBUG WireFormatNegotiator           - Sending: WireFormatInfo { version=3, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2009-11-13 09:41:45,638 [127.0.0.1:49385] DEBUG WireFormatNegotiator           - Received WireFormat: WireFormatInfo { version=3, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2009-11-13 09:41:45,638 [127.0.0.1:49385] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:49385 before negotiation: OpenWireFormat{version=3, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2009-11-13 09:41:45,638 [127.0.0.1:49385] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:49385 after negotiation: OpenWireFormat{version=3, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
2009-11-13 09:41:45,638 [127.0.0.1:49385] DEBUG TransportConnection            - Setting up new connection: /127.0.0.1:49385
2009-11-13 09:41:45,639 [127.0.0.1:49385] DEBUG AbstractRegion                 - Adding consumer: ID:JoergsPC-49370-1258101701975-0:14:-1:1
2009-11-13 09:41:45,641 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 189, to: 190
2009-11-13 09:41:45,647 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 190, to: 191
2009-11-13 09:41:45,653 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 191, to: 192
2009-11-13 09:41:45,653 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 47, to: 48
2009-11-13 09:41:45,658 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 192, to: 193
2009-11-13 09:41:45,663 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 193, to: 192
2009-11-13 09:41:45,663 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 192, to: 191
2009-11-13 09:41:45,663 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 48, to: 47
2009-11-13 09:41:45,663 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 191, to: 190
2009-11-13 09:41:45,664 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 190, to: 189
2009-11-13 09:41:45,664 [127.0.0.1:49384] DEBUG AMQMessageStore                - flush starting ...
2009-11-13 09:41:45,664 [127.0.0.1:49384] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:13:-1:1
2009-11-13 09:41:45,665 [127.0.0.1:49384] DEBUG TransportConnection            - Stopping connection: /127.0.0.1:49384
...


","JDK 1.6.0.x, Windows XP and Vista, ActiveMQ Default-configurations",matthias.strolz@movilitas.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/09 15:31;matthias.strolz@movilitas.com;DummyMessageConsumer.java;https://issues.apache.org/jira/secure/attachment/12461483/DummyMessageConsumer.java","18/Nov/09 13:29;matthias.strolz@movilitas.com;JMX-Screenshot.PNG;https://issues.apache.org/jira/secure/attachment/12461534/JMX-Screenshot.PNG",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-11-18 14:12:00.743,,,false,,,,,,,,,,,,,,,,,74918,,,Tue Nov 24 16:19:10 UTC 2009,,,,,,,,"0|i0s1ev:",161705,Regression,,,,,,,,,,,,,,,,,,"18/Nov/09 13:27;matthias.strolz@movilitas.com;This dummy implementation produces the problem described in the bug report.","18/Nov/09 14:12;gtully;can you verify if this problem exists with a current snapshot[1], If it does, a thread dump of the broker and the hung client would be helpful. 
[1] https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4-SNAPSHOT/","18/Nov/09 15:04;fredrikj;I failed to compile the attached test, there is a missing dependency on class AbstractConsumer.

Matthias can you reproduce it against the 5.3.0 release? I haven't seen any public discussion of plans to make a 5.2 bugfix release at this stage, so it is likely that you'll be urged to upgrade anyway, either to 5.3.0 or to 5.3.1 when it is released.","18/Nov/09 15:31;matthias.strolz@movilitas.com;I appended a version without internal dependency to AbstractConsumer","24/Nov/09 16:04;matthias.strolz@movilitas.com;I tested the behaviour on 5.3 and the 5.4 Snapshot. With both versions the broker recovers after several messages have been read from the queue.  So the error obviously doesn't occur anymore.","24/Nov/09 16:19;gtully;resolving based on comment from Matthias.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Could not correlate acknowledgment with dispatched message"" exception",AMQ-2489,12483130,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,daroo,daroo,12/Nov/09 21:02,24/Nov/09 12:21,30/Jan/20 16:55,23/Nov/09 18:44,5.1.0,5.3.0,5.4.0,,,,,5.3.1,5.4.0,,,,,,0,"This exception is thrown on broker side when two or more ASYNCH consumers acknowledges messages in not in order they received the messages.

See more on users list: http://old.nabble.com/%22Could-not-correlate-acknowledgment-with-dispatched-message%22-td26308220.html

Simple unit test attached.",,daroo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/09 21:05;daroo;JmsUnorderedAsynchAckTest.java;https://issues.apache.org/jira/secure/attachment/12461533/JmsUnorderedAsynchAckTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-11-20 16:20:50.952,,,false,,,,,,,,,,,,,,,,,74922,,,Tue Nov 24 12:21:34 UTC 2009,,,,,,,,"0|i0rr67:",160046,,,,,,,,,,,,,,,,,,,"20/Nov/09 16:20;gtully;thanks for the test case, The problem is a delivery ack that is not conditional on the consumer calling acknowledge and that combined with a prefetch=1 causes that pending delivery ack to be sent immediately, resulting in the broker error looking for a message that has already been acked.
However the messages are being acked individually just fine. 
The fix looks trivial enough, will commit once a full test run completes.","23/Nov/09 18:44;gtully;resolved in r883458 - delivery acks are only needed for unacked messages to update prefetch and expiry. When message is acked, they should be suppressed as they now are as they will result in this exception due to not found in the dispatch list.","24/Nov/09 12:21;daroo;I've verified and the issue seems to be fixed. Thanks a lot.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MemoryLeak in the ResourceAdapter (ManagedConnectionProxy),AMQ-2166,12483144,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,msiegenthaler,msiegenthaler,17/Mar/09 10:56,20/Nov/09 16:03,30/Jan/20 16:55,11/Sep/09 19:32,4.1.0,4.1.1,4.1.2,5.0.0,5.1.0,5.2.0,,5.3.0,,,JCA Container,,,,0,"The ActiveMQ JCA Resource Adapter leaks about 1Kb of memory when opening and closing sessions on the same connection. As soon as the connection is closed this memory is released, but it's a common use case to keep the connection for a very long time (ie aquire at startup and relase at shutdown).

The leak happens because the ManagedConnectionProxy holds a list of sessions that have been openend, but there's no code that removes a closed session from the list.
",,msiegenthaler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,600,,0%,600,600,,,,,,,,,,,,,"17/Mar/09 11:00;msiegenthaler;AMQ-2166.patch;https://issues.apache.org/jira/secure/attachment/12461408/AMQ-2166.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-09-11 19:32:11.205,,,false,,,,,,,,,,,,,,,,,75045,,,Fri Sep 11 19:32:11 UTC 2009,,,,Patch Available,,,,"0|i0tsl3:",171940,,,,,,,,,,,,,,,,,,,"17/Mar/09 11:00;msiegenthaler;Removes the session from the list held by the connection as soon as the session is closed.

I also synchronized access to the session-collection since there might be more than one thread calling #createSession().

Apply to activemq-ra.","11/Sep/09 19:32;djencks;I modified the synchronization in the patch slightly, applied in rev 813992.  Many thanks for the patch!  Glad to get this into 5.3.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MemoryUsage not properly accounted for when expiring messages to DLQ: can lead to hang.,AMQ-2487,12483091,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,cmacnaug,cmacnaug,12/Nov/09 07:45,19/Nov/09 10:36,30/Jan/20 16:55,19/Nov/09 10:36,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"Given the following broker destination policy
{code:xml} 
    <destinationPolicy>
      <policyMap>
        <policyEntries>
          <policyEntry topic="">"" producerFlowControl=""true""
            memoryLimit=""1mb"">
            <pendingSubscriberPolicy>
              <vmCursor />
            </pendingSubscriberPolicy>
          </policyEntry>
          <policyEntry queue="">"" producerFlowControl=""true""
            memoryLimit=""1mb"">
            <!--
              Use VM cursor for better latency For more information,
              see: http://activemq.apache.org/message-cursors.html
            -->
            <pendingQueuePolicy>
              <vmQueueCursor />
            </pendingQueuePolicy>
          </policyEntry>
        </policyEntries>
      </policyMap>
    </destinationPolicy>
{code}

If I send message to queue://TESTQ1 with an expiration of 1second, with an unreliable/slow receiver, the publisher eventually hangs sending to the queue. The underlying problem is that when the message is expired to the DLQ the MemoryUsage reference is left pointing the TESTQ1's memory limiter, instead of being reset to the DLQ limiter, and when it is added to the DLQ, TESTQ1's memory limiter is updated counteracting the decrement that is done by the TESTQ1 when the message is expired. ",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/09 07:48;cmacnaug;AMQ-2487patch.txt;https://issues.apache.org/jira/secure/attachment/12461447/AMQ-2487patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-11-12 10:44:49.744,,,false,,,,,,,,,,,,,,,,,74923,,,Thu Nov 19 10:36:55 UTC 2009,,,,Patch Available,,,,"0|i0rqkv:",159950,,,,,,,,,,,,,,,,,,,"12/Nov/09 07:48;cmacnaug;Patch file attached. It is worth investigating if there are other problematic scenarios where BrokerRegion.doResend might be using the wrong MemoryUsage","12/Nov/09 10:44;gtully;resolve in r835325, modified an existing test to verify.","12/Nov/09 17:03;gtully;moveMessages and other jmx operations seem to suffer from the same memory usage reuse issue. need to track those down and fix them before closing this.","19/Nov/09 10:36;gtully;resolved in r882096 - some more validation of memory usage and fix issue with storequeuecursor and browse effecting memory usage.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Warning about using default locking mechanism should be an info,AMQ-2493,12482568,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,pedron,pedron,14/Nov/09 02:29,16/Nov/09 10:18,30/Jan/20 16:55,16/Nov/09 10:18,5.3.0,,,,,,,5.3.1,5.4.0,,Message Store,,,,0,"The warning:
{code}
INFO  JDBCPersistenceAdapter         - Database lock driver override not found for : [apache_derby_embedded_jdbc_driver].  Will use default implementation.
{code}
can cause confusion and tends to suggest that there is something wrong while it is just informing that activemq will use the DefaultDatabaseLocker instead of a specific DB locker.  So it should be an ""INFO"" rather than a ""WARN"".",All supported OS,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/09 02:32;pedron;patch.txt;https://issues.apache.org/jira/secure/attachment/12461571/patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-11-16 10:18:13.056,,,false,,,,,,,,,,,,,,,,,74920,,,Mon Nov 16 10:18:13 UTC 2009,,,,Patch Available,,,,"0|i0rqqn:",159976,,,,,,,,,,,,,,,,,,,"14/Nov/09 02:30;pedron;patch attached.","16/Nov/09 10:18;gtully;patch applied with thanks to r880696",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB + Network of Brokers + Restart = Duplicate Messages that cannot be removed from the data store,AMQ-2439,12483096,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cmacnaug,chirino,chirino,02/Oct/09 16:27,13/Nov/09 16:13,30/Jan/20 16:55,13/Nov/09 03:04,,,,,,,,5.3.1,5.4.0,,Broker,Message Store,,,0,"Every time the broker is restarted, the same set of duplicate messages get redelivered to consumers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/09 02:59;cmacnaug;AMQ-2439patch.txt;https://issues.apache.org/jira/secure/attachment/12461334/AMQ-2439patch.txt","07/Oct/09 16:09;gtully;amq2439-patch.diff;https://issues.apache.org/jira/secure/attachment/12461445/amq2439-patch.diff",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-10-06 11:21:17.194,,,false,,,,,,,,,,,,,,,,,74947,,,Fri Nov 13 16:13:48 UTC 2009,,,,,,,,"0|i0rqbb:",159907,Regression,,,,,,,,,,,,,,,,,,"02/Oct/09 16:32;chirino;How to reproduce:
Start broker 1 with config:
{code:xml}
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
        <property name=""locations"">
            <value>file:${activemq.base}/conf/credentials.properties</value>
        </property>
    </bean>

    <broker xmlns=""http://activemq.apache.org/schema/core""  brokerName=""activemq1"" dataDirectory=""${activemq.base}/data"">
        <networkConnectors>
                <networkConnector
                        uri=""static://(tcp://localhost:61617)""
                        name=""Connection to 61617""
                        dynamicOnly=""true""/>

        </networkConnectors>
        <persistenceAdapter>
                <kahaDB directory=""${activemq.base}/data/kaha"" journalMaxFileLength=""32mb""/>
        </persistenceAdapter>
        <systemUsage>
          <systemUsage>
            <memoryUsage>
              <memoryUsage limit=""50 mb"" />
            </memoryUsage>
            <storeUsage>
              <storeUsage limit=""4 gb"" />
            </storeUsage>
            <tempUsage>
              <tempUsage limit=""200 mb"" />
            </tempUsage>
          </systemUsage>
        </systemUsage>
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>

    </broker>
        <jetty xmlns=""http://mortbay.com/schemas/jetty/1.0"">
        <connectors>
            <nioConnector port=""8161""/>
        </connectors>

        <handlers>
            <webAppContext contextPath=""/admin"" resourceBase=""${activemq.base}/webapps/admin"" logUrlOnStart=""true""/>
        </handlers>
    </jetty>

</beans>
{code}

and broker 2 with config:
{code:xml}
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
        <property name=""locations"">
            <value>file:${activemq.base}/conf/credentials.properties</value>
        </property>
    </bean>

    <broker xmlns=""http://activemq.apache.org/schema/core""  brokerName=""activemq2"" dataDirectory=""${activemq.base}/data"">
        <networkConnectors>
                <networkConnector
                        uri=""static://(tcp://localhost:61616)""
                        name=""Connection to 61616""
                        dynamicOnly=""true""/>

        </networkConnectors>
        <persistenceAdapter>
                <kahaDB directory=""${activemq.base}/data/kaha"" journalMaxFileLength=""32mb""/>
        </persistenceAdapter>
        <systemUsage>
          <systemUsage>
            <memoryUsage>
              <memoryUsage limit=""50 mb"" />
            </memoryUsage>
            <storeUsage>
              <storeUsage limit=""4 gb"" />
            </storeUsage>
            <tempUsage>
              <tempUsage limit=""200 mb"" />
            </tempUsage>
          </systemUsage>
        </systemUsage>
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61617""/>
        </transportConnectors>

    </broker>
        <jetty xmlns=""http://mortbay.com/schemas/jetty/1.0"">
        <connectors>
            <nioConnector port=""8162""/>
        </connectors>

        <handlers>
            <webAppContext contextPath=""/admin"" resourceBase=""${activemq.base}/webapps/admin"" logUrlOnStart=""true""/>
        </handlers>
    </jetty>

</beans>
{code}

Use the example producer and consumer in the distribution examples dir:
{code}
ant producer -Durl=tcp://localhost:61616  -Dtopic=false -Ddurable=true -Dmax=1000
{code}
{code}
ant consumer -Durl=tcp://localhost:61617 -Dtopic=false -Ddurable=true -Dmax=500
{code}

run the producer once.
run that consumer 2 times.
then restart the broker on port 61617
and run the consumer again.

The 3rd run of the consumer should get no messages but it receives multiple messages.  What's worse is that restarting the broker and consumer will result in the same duplicates getting delivered again.","02/Oct/09 16:36;chirino;I confirmed that KahaDB indexes were inconsistent on a restart and that is the reason the same duplicate message kept getting re-delivered.
I seems the reason the indexes were becoming inconsistent is because it was not being defensive when it add new messages.  If a duplicate message was added to kahadb it's two of it's btrees would no longer be consistent.","02/Oct/09 16:38;chirino;I will work on message store unit test to see if there are any other store which also are not being defensive about dup messages.

We still need to work out why the broker is tryping to store a dup message in the first place.","02/Oct/09 18:00;chirino;Rob want to take a crack at figuring out whats causing the dup on the network?","06/Oct/09 11:21;gtully;the dups are coming from ignored acks from the network bridge.
The network consumer with default prefetch is happy to take all of the messages and they are dispatched async. During the dispatch, the remove consumer is happy with its 500 messages and closes. The close propagates back to the network consumer but between the consumer remove operation and the disposing of the bridge a few messages are dispatched but cannot be acked.

Some logic in: org.apache.activemq.broker.region.AbstractRegion.acknowledge(ConsumerBrokerExchange, MessageAck) is happy to silently ignore the ack and the result is a resend.

The remove signal should terminate dispatch and await any outstanding ack but not hang forever. need to investigate a bit more to see if there is a solution.","07/Oct/09 16:09;gtully;patch that resolves the duplicate issue, worth a quick review (as I am just doing a test run atm) of the org.apache.activemq.network.DemandSubscription.waitForCompletion() implementation.
I pulled the existing logic for dealing with acks for no subscriptions in AbstractRegion that was the root cause. With the changes, any acks that don't have a sub should be considered an error and result in an exception.
will commit pending no issues showing up in my local test run.","07/Oct/09 17:46;gtully;resolved in r822811

async dispatch of messages by the bridge was resulting in acks to removed subs as the response to a remove advisory did not know about outstanding requests, the sub now waits till outstanding delivered messages have been acked such that it will not deliver duplicates.","07/Oct/09 18:38;chirino;applied my kahadb changes to the 5.3 branch.","08/Oct/09 10:02;gtully;dito. merged duplicate message fix to 5.3 branch: r822811","13/Nov/09 01:17;cmacnaug;Seeing the exception below in a 2 broker cluster with this fix which is causing the cluster network connection to be dropped. When an MessageDispatch that was sent async is sent through the bridge, it is sent oneway over the transport and then acked back to the local broker in the sending thread. The problem is that peer broker might concurrently be closing the subscription during the send, and the resulting ack now generates an IllegalStateException when the subscription isn't found. To fix, I'm adding tighter synchronization around subscription tear down to avoid this case. (See attached patch)

{code}
22:19:55 [REMOTE] BROKER1: 22:19:55 WARN  AbstractRegion: Ack for non existent subscription, ack:MessageAck {commandId = 8392, responseRequired = false, ackType = 4, 
consumerId = ID:nbcmacnaug1-3881-1257920362625-5:1:1:6, firstMessageId = null, lastMessageId = ID:nbcmacnaug1-3919-1257920382750-1:14:1:1:1236, 
destination = queue://QUEUE-Profile-6, transactionId = null, messageCount = 1} 
22:19:55 [REMOTE] BROKER1: 22:19:55 WARN  Service: Async error occurred: java.lang.IllegalArgumentException: The subscription does not exist: ID:nbcmacnaug1-3881-1257920362625-5:1:1:6 
22:19:55 [REMOTE] BROKER1: java.lang.IllegalArgumentException: The subscription does not exist: ID:nbcmacnaug1-3881-1257920362625-5:1:1:6 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:363) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:449) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:708) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:159) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1190) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:779) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:815) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) 
22:19:55 [REMOTE] BROKER1: 	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43) 
22:19:55 [REMOTE] BROKER1: 	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650) 
22:19:55 [REMOTE] BROKER1: 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) 
22:19:55 [REMOTE] BROKER1: 	at java.lang.Thread.run(Thread.java:595) 
{code}","13/Nov/09 02:59;cmacnaug;Patch for IllegalState Issue  (against revision 835714)","13/Nov/09 03:04;cmacnaug;Fixed IllegalStateException issue in revision 835715.","13/Nov/09 03:06;cmacnaug;Changing fix to 5.3.1/5.4.0","13/Nov/09 16:13;gtully;nice catch, looks good. that is the final bit of the puzzle. :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQSessionExecutor.taskRunner usage is very non-thread-safe,AMQ-2028,12483115,12483121,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,djencks,djencks,10/Dec/08 00:26,13/Nov/09 15:30,30/Jan/20 16:55,13/Nov/09 15:24,5.3.0,,,,,,,5.3.1,,,,,,,1,"cmon guys,

                    if (taskRunnerCreated.compareAndSet(false, true)) {
                        if (taskRunner == null) {
                            taskRunner = session.connection.getSessionTaskRunner().createTaskRunner(this,
                                    ""ActiveMQ Session: "" + session.getSessionId());
                        }
                    }
                    taskRunner.wakeup();


is not anywhere close to thread safe.

I'm seeing JmsClientAckTest and JmsRedeliveredTest failing due to this.",,wum,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/09 21:08;wum;ActiveMQSessionExecutor.patch;https://issues.apache.org/jira/secure/attachment/12461329/ActiveMQSessionExecutor.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-10-27 08:19:23.304,,,false,,,,,,,,,,,,,,,,,75116,,,Fri Nov 13 15:24:27 UTC 2009,,,,,,,,"0|i0s1en:",161704,Regression,,,,,,,,,,,,,,,,,,"10/Dec/08 07:16;djencks;Fixed in rev 725020.","27/Oct/09 08:19;wum;It seems to me that the ActiveMQSessionExecutor is still not very thread safe.

The problem is that in the stop() method the this.taskRunner is set to null without synchronization.

Hence in the wakeup() method within the synchronized block it could happen that this.taskRunner is set to null between 
creating new TaskRunner and assigning it to the local variable, if the stop() is called in parallel  - see below:

                        synchronized (this) {
                            if (this.taskRunner == null) {
                                this.taskRunner = session.connection.getSessionTaskRunner().createTaskRunner(this,
                                        ""ActiveMQ Session: "" + session.getSessionId());
                            }
                            ///////////////// here this.taskRunner can be set to null, if stop() is called  in between .... //////////////////////
                            taskRunner = this.taskRunner;
                        }
The result would be a NullPointerException in taskRunner.wakeup() two lines below.
","28/Oct/09 08:54;akuhtz;You should create a new issue or at least re-open this issue ....","09/Nov/09 21:08;wum;Attached a proposal for a thread safety patch.","09/Nov/09 21:11;wum;Reopened ...","13/Nov/09 15:24;gtully;fixed applied in r835874
left use of volatile but tidied up stop() logic and creation of new taskRunner if queue was stopped. This avoids the NPE. Came across this with useDedicatedTaskRunner=true system property, result was leaked threads due to this sync issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OOM due to build of of iterate executions during bulk message consumption - asyncWakeup called excessivly,AMQ-2483,12483121,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,11/Nov/09 09:29,13/Nov/09 15:30,30/Jan/20 16:55,13/Nov/09 15:29,5.3.0,,,,,,,5.3.1,,,Broker,,,,0,"when consuming a large of messages,the method:asyncWakeup() is invoked
crazily,so the executor has a great deal of  runnable that callback Queue.iterate(), but
Queue.iterate() is much slower than the increasing of runnable in the
executor. this result in OOM.

avoid to invoke the method:asyncWakeup()  frequently???

http://old.nabble.com/file/p26278228/oom.jpg

Context:  http://old.nabble.com/Out-of-Memory-on-5.3-tp26064098p26297020.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74925,,,Fri Nov 13 15:29:52 UTC 2009,,,,,,,,"0|i14c3b:",233422,,,,,,,,,,,,,,,,,,,"13/Nov/09 15:29;gtully;resolved in r835874
revert queue back to pooled/dedicated task runner where multiple wake up calls are consolidated. To ensure no  call is ignored, the queue tracks pending wakeupRequests and requests a repeat iteration till all requests are satisfied.
Run of unit tests with -DuseDedicatedTaskRunner=true threw up a few failures, one of which was: https://issues.apache.org/activemq/browse/AMQ-2028
I exposed useDedicatedTaskRunner on connection factory to allow explicit unit test verification and propagated broker.useDedicatedTaskRunner to make it more easily configurable. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"systemExitOnShutdown=""true"" causes broker shutdown to hang",AMQ-2486,12483055,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,11/Nov/09 15:41,13/Nov/09 11:37,30/Jan/20 16:55,12/Nov/09 11:36,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"To reproduce:

* add systemExitOnShutdown=""true"" to the <broker> tag
* start a broker
* try to stop the broker",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74924,,,Fri Nov 13 11:37:55 UTC 2009,,,,,,,,"0|i0rqan:",159904,,,,,,,,,,,,,,,,,,,"12/Nov/09 11:36;dejanb;Using Runtime.getRuntime().halt() instead of System.exit() as the later is not recommended to be used in shutdown hooks. There should be no problems with halt() as all resources are cleaned up before this call.","13/Nov/09 11:37;dejanb;Using halt() in shutdown hook will break this functionality, since it is intended to notify the embedding container (servicemix) of a shutdown. The shutdown hook is replaced with calling System.exit() from a separate thread during broker stop().",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Too many files open error, after no space left on device occurs; if producer carries on sending messages.",AMQ-2478,12481607,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dominict,dominict,05/Nov/09 13:51,12/Nov/09 11:31,30/Jan/20 16:55,05/Nov/09 16:32,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"The problem seem to be that open the persistence store (disk) has run out of space, if the producer keeps on sending messages to the broker the brokers end up eating up the file descriptors for the process (default 1024), and you get the error ""too many open files"".  The only way to fix this is a broker restart.

1) Producer is sending to the broker
2) Disk Space on the broker runs out
3) The producer gets the error:

[2009.11.02 23:05:30] [main] INFO  ProducerTool -  Sent Message:
[18973 : ^@^@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO...], took: 1ms
[2009.11.02 23:05:30] [main] WARN  ProducerTool -  Error sending
message:18974 : ^@^@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO...
javax.jms.JMSException: No space left on device
      at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
      at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1255)

4)  The broker gets the error:

{code}
DEBUG Service                        - Error occured while processing
async command: MessageAck {commandId = 53297, responseRequired =
false, ackType = 2, consumerId =
ID:dominic-tootells-macbook-pro.local-57138-1257203010059-0:0:-1:2,
firstMessageId =
ID:dominic-tootells-macbook-pro.local-57143-1257203033952-0:0:1:1:17751,
lastMessageId =
ID:dominic-tootells-macbook-pro.local-57143-1257203033952-0:0:1:1:17751,
destination = queue://iplayer, transactionId =
TX:ID:dominic-tootells-macbook-pro.local-57138-1257203010059-0:0:17751,
messageCount = 1}, exception: java.io.IOException: No space left on
device
java.io.IOException: No space left on device
       at java.io.RandomAccessFile.setLength(Native Method)
{code}

5) All is good if you spot this and go clear up some space quick
sharp; both the broker and the producer recover and can carry one.
However, if you don't notice and react quick enough, and the producer
keeps on sending messages to the broker, then broker ends up with the
error ""too many open files"":

{code}
Id = ID:dominic-tootells-macbook-pro.local-57143-1257203033952-0:0:1:1:35920,
lastMessageId =
ID:dominic-tootells-macbook-pro.local-57143-1257203033952-0:0:1:1:35920,
destination = queue://iplayer, transactionId =
TX:ID:dominic-tootells-macbook-pro.local-57138-1257203010059-0:0:52674,
messageCount = 1}, exception: java.io.FileNotFoundException:
/Volumes/SSD/data/journal/data-4 (Too many open files)
java.io.FileNotFoundException: /Volumes/SSD/data/journal/data-4 (Too
many open files)
       at java.io.RandomAccessFile.open(Native Method)
       at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)
       at org.apache.activemq.kaha.impl.async.DataFile.openRandomAccess
{code}


Trying the following combinations:

- no failover protocol
- no send sendFailIfNoSpace being sent to the producer
- recreating the producer connection after the error
- no consumer attached to the broker

In the end I attached JProfiler to the broker (via a small junit), and
noticed that upon the ""No space left on device"" error the number of
File objects and FileDescriptor objects would grow, and not shrink.
Upon looking at the below stack trace:

{code}
Caused by: java.io.IOException: No space left on device
       at java.io.RandomAccessFile.setLength(Native Method)
       at org.apache.activemq.kaha.impl.async.DataFile.openRandomAccessFile(DataFile.java:96)
       at org.apache.activemq.kaha.impl.async.AsyncDataManager.allocateLocation(AsyncDataManager.java:276)
       at org.apache.activemq.kaha.impl.async.DataFileAppender.storeItem(DataFileAppender.java:169)
       at org.apache.activemq.kaha.impl.async.AsyncDataManager.write(AsyncDataManager.java:647)
       at org.apache.activemq.store.amq.AMQPersistenceAdapter.writeCommand(AMQPersistenceAdapter.java:697)
       at org.apache.activemq.store.amq.AMQPersistenceAdapter.writeCommand(AMQPersistenceAdapter.java:693)
       at org.apache.activemq.store.amq.AMQMessageStore.addMessage(AMQMessageStore.java:106)
       at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:503)
       at org.apache.activemq.broker.region.Queue.send(Queue.java:480)
       at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
       at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:443)
       at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
       at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
       at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
       at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:455)
       at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
       at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
       at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
       at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
       at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
       at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
       at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
       at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
       at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
       at java.lang.Thread.run(Thread.java:637)
{code}

I took a look at:

org.apache.activemq.kaha.impl.async.DataFile.openRandomAccessFile(DataFile.java:96):

{code}
  public synchronized RandomAccessFile openRandomAccessFile(boolean
appender) throws IOException {
       RandomAccessFile rc = new RandomAccessFile(file, ""rw"");
       // When we start to write files size them up so that the OS has a chance
       // to allocate the file contigously.
       if (appender) {
           if (length < preferedSize) {
                       rc.setLength(preferedSize);
           }
       }
       return rc;
   }
{code}

  The problem is the rc.setLength(preferedSize);  without a try/catch
block to close the opened file incase of a IOException, that can
result from the setLength on empty filesystem.

  Changing the method to, contain a try/catch as follows, from my testing appears to fix the
issue (have tried on my local broker, and this works).

{code}
  public synchronized RandomAccessFile openRandomAccessFile(boolean
appender) throws IOException {
       RandomAccessFile rc = new RandomAccessFile(file, ""rw"");
       // When we start to write files size them up so that the OS has a chance
       // to allocate the file contigously.
       if (appender) {
           if (length < preferedSize) {
               try
               {
                       rc.setLength(preferedSize);
               }
               catch(IOException e)
               {
                       try
                       {
                               rc.close();
                       }
                       catch(Exception closeException){}
                       throw e;
               }

           }
       }
       return rc;
   }
{code}


I shall attach a junit for testing (it is hard coded to write to my small removal disk /Volumes/SSD/data), so this you will need to change.  I need somewhere where I could fill the disk up.  The Junit just does:

- Producer writes to a persistent queue until the disk space fills up and keeps on going.  After a while you see the ""too many open files"" exception.

I've looked at trunk

https://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/kaha/impl/async/DataFile.java

And this has the same code as the 5.3.0.4 so I'm guessing that would have the same issue.

I'll attach the junit, the patch diff and the patch file.
/dom

","MacOSX 10.6.1, fusesource broker 5.3.0.4.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Nov/09 13:56;dominict;DataFile.java;https://issues.apache.org/jira/secure/attachment/12461333/DataFile.java","05/Nov/09 13:56;dominict;TooManyFilesTest.java;https://issues.apache.org/jira/secure/attachment/12461331/TooManyFilesTest.java","05/Nov/09 13:56;dominict;patchfile.txt;https://issues.apache.org/jira/secure/attachment/12461332/patchfile.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2009-11-05 16:32:35.131,,,false,,,,,,,,,,,,,,,,,38748,,,Thu Nov 05 16:32:35 UTC 2009,,,,Patch Available,,,,"0|i0rqnj:",159962,,,,,,,,,,,,,,,,,,,"05/Nov/09 13:56;dominict;patchfile.txt
DataFile.java (which was the patch in)
TooManyFilesTest.java (JUnit)","05/Nov/09 16:32;gtully;patch applied with thanks in r833074 - left test case with the jira as it requires a small disk. Works ok with the new kahaDB also which is good.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Peer certificates not propagated when using stomp+ssl w/mutual authentication,AMQ-2449,12482669,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,dave_stanley,dave_stanley,13/Oct/09 18:52,12/Nov/09 11:31,30/Jan/20 16:55,14/Oct/09 05:10,5.3.0,,,,,,,5.3.1,5.4.0,,Transport,,,,0,"When using stomp+ssl w/mutual authentication the broker throws and ""Unable to authenticate transport without SSL certificate."", for example:

java.lang.SecurityException: Unable to authenticate transport without SSL certificate.
at org.apache.activemq.security.JaasCertificateAuthenticationBroker.addConnection(JaasCertificateAuthenticationBroker.java:75)
at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:89)
at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:686)
at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:86)
at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:134)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:78)
at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:135)
at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:491)
at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:187)
at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:67)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:104)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
at java.lang.Thread.run(Thread.java:636)

Problem is due to the peer certs not being set in the transport context for the stomp connection.",ActiveMQ 5.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Oct/09 18:54;dave_stanley;stomp_ssl_patch.txt;https://issues.apache.org/jira/secure/attachment/12461327/stomp_ssl_patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-10-14 05:10:22.713,,,false,,,,,,,,,,,,,,,,,38767,,,Wed Oct 14 05:10:22 UTC 2009,,,,Patch Available,,,,"0|i0rqrb:",159979,,,,,,,,,,,,,,,,,,,"13/Oct/09 18:54;dave_stanley;Patch w/unit test attached that should fix the problem (cut from trunk)

Also includes some cleanup fixes to the stomp unit tests.","14/Oct/09 05:10;rajdavies;Fix applied in SVN revision 825008",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS clients stalled in case of many messages on a different queue - JDBC persistence,AMQ-2470,12483077,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,29/Oct/09 14:05,12/Nov/09 11:31,30/Jan/20 16:55,29/Oct/09 17:09,5.3.0,,,,,,,5.3.1,5.4.0,,Message Store,,,,0,"With a large amount of messages in a Queue > 2M, the cleanup task takes a long time, maybe 20 minutes. Then it starts again immediately, which continually hogs the database as it locks out other users or other destinations.","direct JDBC persistence to external MySQL database, large amount of message on a queue. ",martinmurphy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74931,,,Thu Oct 29 17:09:23 UTC 2009,,,,,,,,"0|i0rpun:",159832,,,,,,,,,,,,,,,,,,,"29/Oct/09 17:09;gtully;cleanup task now has fixed delay period rather than fixed rate. The cleanupPeriod is now the delay between the end of task completion and the next run. This ensures it will not hog the db.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction isolation level should be configurable in jdbcpersistence adapter - TRANSACITON_READ_UNCOMMITTED blows on MySQL with binlog,AMQ-2463,12483082,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,23/Oct/09 15:07,12/Nov/09 11:31,30/Jan/20 16:55,23/Oct/09 16:12,5.3.0,,,,,,,5.3.1,5.4.0,,Message Store,,,,0,"http://mail-archives.apache.org/mod_mbox/activemq-dev/200901.mbox/%3C21527285.post@talk.nabble.com%3E

isolation level > READ_COMMITTED needed, like repeatable read for mysql clustered. http://bugs.mysql.com/bug.php?id=33210

An int property on the persistence adapter would make this fully configurable",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74935,,,Fri Oct 23 16:12:22 UTC 2009,,,,,,,,"0|i0rqb3:",159906,,,,,,,,,,,,,,,,,,,"23/Oct/09 16:12;gtully;resolve in r829105
new int property isolationLevel on jdbcpersistenceadapter allows default value to be overridden",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling purge on a large queue causes OutOfMemoryError in the broker.,AMQ-2468,12483103,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Oct/09 15:27,12/Nov/09 11:31,30/Jan/20 16:55,30/Oct/09 10:54,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"the problem is worse when there is a slow consumer and steady producer in the mix.
Problem is that purge forces a page in and a dispatch but the dispatch ends up appending to pagedInPending which is not limited and not bound by the usage metrics so it only appears as an OOM.
Fixing purge to not dispatch helps but the presence of a consumer incurs a dispatch on message sending so over time a steady producer will give the same behavior.
Purge is a special case that highlights the problem of no restriction on pagedInPending with a very slow consumer. If consumers can keep up, or if producer flow control is used, or lazyDispatch, this issue can be avoided.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74932,,,Fri Oct 30 10:54:48 UTC 2009,,,,,,,,"0|i0rqbz:",159910,Regression,,,,,,,,,,,,,,,,,,"30/Oct/09 10:54;gtully;resolved in r831258.
pagedInPendingDispatch is now limited to maxPageSize.  Now we bypass dispatch for jmx queue modifications like purge and remove matching messages so they are not limited by pending messages and can page through all available messages. 
Note: consumers with sparse selectors may now need to increase maxPageSize as ever increasing pagedInPendingDispatch was exceeding that limit in error",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException during startup of DiscoveryNetworkConnector when using an HTTP URL for an inactive remote broker.,AMQ-2472,12483072,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,stirlingc,stirlingc,01/Nov/09 20:40,12/Nov/09 11:31,30/Jan/20 16:55,02/Nov/09 09:03,5.3.0,,,,,,,5.3.1,5.4.0,,Connector,,,,0,"Symptom
========
When starting a statically-configured network of two AMQ brokers, each of which uses HTTP as their transport, if one of the brokers is not running when the other starts up, the following NPE appears in the logs:

2009-11-01 11:05:53,626 [AlarmPoint Node-main] INFO    -  - Using Persistence Adapter: MemoryPersistenceAdapter
2009-11-01 11:05:53,626 [AlarmPoint Node-main] INFO    -  - ActiveMQ 5.3.0 JMS Message Broker (localhost) is starting
2009-11-01 11:05:53,626 [AlarmPoint Node-main] INFO    -  - For help or more information please see: http://activemq.apache.org/
2009-11-01 11:05:53,829 [AlarmPoint Node-main] WARN    -  - 2009-11-01 11:05:53.445::INFO:  Logging to STDERR via org.mortbay.log.StdErrLog
2009-11-01 11:05:53,876 [AlarmPoint Node-main] WARN    -  - 2009-11-01 11:05:53.492::INFO:  jetty-6.1.9
2009-11-01 11:05:53,922 [AlarmPoint Node-main] WARN    -  - 2009-11-01 11:05:53.538::INFO:  Started SocketConnector@localhost:50000
2009-11-01 11:05:53,922 [AlarmPoint Node-main] INFO    -  - Connector http://localhost:50000 Started
2009-11-01 11:05:53,922 [AlarmPoint Node-main] INFO    -  - Establishing network connection from vm://localhost to http://192.168.168.44:50001
2009-11-01 11:05:53,938 [AlarmPoint Node-main] DEBUG   -  - binding to broker: localhost
2009-11-01 11:05:53,938 [AlarmPoint Node-main] INFO    -  - Connector vm://localhost Started
2009-11-01 11:05:57,954 [AlarmPoint Node-main] DEBUG   -  - Shutting down VM connectors for broker: localhost
2009-11-01 11:05:57,954 [ActiveMQ Transport Stopper: vm://localhost#0] DEBUG   -  - Stopping connection: vm://localhost#0
2009-11-01 11:05:57,954 [ActiveMQ Transport Stopper: vm://localhost#0] DEBUG   -  - Stopped transport: vm://localhost#0
2009-11-01 11:05:57,954 [ActiveMQ Transport Stopper: vm://localhost#0] DEBUG   -  - Connection Stopped: vm://localhost#0
2009-11-01 11:05:57,954 [AlarmPoint Node-main] INFO    -  - Connector vm://localhost Stopped
2009-11-01 11:05:57,954 [AlarmPoint Node-main] ERROR   -  - Could not stop service: HTTP Reader http://192.168.168.44:50001. Reason: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.transport.http.HttpClientTransport.doStop(HttpClientTransport.java:202)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
	at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:125)
	at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
	at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceAdd(DiscoveryNetworkConnector.java:134)
	at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent.start(SimpleDiscoveryAgent.java:77)
	at org.apache.activemq.network.DiscoveryNetworkConnector.handleStart(DiscoveryNetworkConnector.java:182)
	at org.apache.activemq.network.NetworkConnector$1.doStart(NetworkConnector.java:56)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.network.NetworkConnector.start(NetworkConnector.java:199)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1933)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:471)
	at com.invoqsystems.foundation.component.communication.MessageBusImpl.startJmsBroker(MessageBusImpl.java:602)
	at com.invoqsystems.foundation.component.communication.MessageBusImpl.start(MessageBusImpl.java:364)
	at com.invoqsystems.apex.component.communication.NodeMessageBusImpl.start(NodeMessageBusImpl.java:207)
	at com.invoqsystems.apex.component.node.manager.NodeManager.startMessagingServer(NodeManager.java:975)
	at com.invoqsystems.apex.component.node.manager.NodeManager.start(NodeManager.java:199)
	at com.invoqsystems.apex.AlarmPointNode.startNodeManager(AlarmPointNode.vaja:162)
	at com.invoqsystems.apex.AlarmPointNode.run(AlarmPointNode.java:62)
	at java.lang.Thread.run(Thread.java:595)

Reproduction
===========
Configure one broker to listen to http://localhost:50000 and the other broker to list to http://localhost:50001.  Network the brokers together using the SimpleDiscoveryAgent (static) configuration:

<broker brokerName=""broker1"" persistent=""false"" useJmx=""false"">  
    <networkConnectors>
      <networkConnector uri=""static:(http://localhost:50001)""/>
    </networkConnectors>

    <persistenceAdapter>
      <memoryPersistenceAdapter/>
    </persistenceAdapter>

   <transportConnectors>
      <transportConnector uri=""http://localhost:50000""/>    
   </transportConnectors>
</broker>

and the other broker as:

<broker brokerName=""broker2"" persistent=""false"" useJmx=""false"">  
    <networkConnectors>
      <networkConnector uri=""static:(http://localhost:50000)""/>
    </networkConnectors>

    <persistenceAdapter>
      <memoryPersistenceAdapter/>
    </persistenceAdapter>

   <transportConnectors>
      <transportConnector uri=""http://localhost:50001""/>    
   </transportConnectors>
</broker>

Start broker1, but do not start broker2.  Observe the stacktrace in broker1's logs.

Cause
======
During startup, the following code executes in DiscoveryNetworkConnector#onServiceAdd(DiscoveryEvent event):

            NetworkBridge bridge = createBridge(localTransport, remoteTransport, event);
            try {
                bridge.start();
                bridges.put(uri, bridge);
            } catch (Exception e) {
                ServiceSupport.dispose(localTransport);
                ServiceSupport.dispose(remoteTransport);
                LOG.warn(""Could not start network bridge between: "" + localURIName + "" and: "" + uri + "" due to: "" + e);

A bridge is created to connect broker1 to broker2 (http://localhost:50000 to http://localhost:50001), but since broker2 is not started, bridge.start() will throw a ""Connection refused"" exception.  In handling this exception, ServiceSupport.dispose(remoteTransport) is called, which eventually calls through to HttpClientTransport#doStop(ServiceStopper stopper):

    protected void doStop(ServiceStopper stopper) throws Exception {
            httpMethod.abort();
    }

The NPE is caused becuase httpMethod is null.

When bridge.start() is called, it will pass through to HttpClientTransport#doStart():

        LOG.trace(""HTTP GET consumer thread starting: "" + this);
        HttpClient httpClient = getReceiveHttpClient();
        URI remoteUrl = getRemoteUrl();

        HeadMethod httpMethod = new HeadMethod(remoteUrl.toString());
        configureMethod(httpMethod);

        int answer = httpClient.executeMethod(httpMethod);

The httpClient.executeMethod(httpMethod) throws the ""connection refused"" exception because the HEAD command cannot connect.  The httpMethod in doStart() is a local var, while the object-scope httpMethod is only set once the transport starts running,  which never occurs due to the HEAD failure.

Solution
=======
Check that httpMethod is not null before disposing in HttpClientTransport:

protected void doStop(ServiceStopper stopper) throws Exception {
   if(httpMethod != null)
   {
     httpMethod.abort();
   }
}","ActiveMQ 5.3.0 release (08/10/2009), Windows XP",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/09 20:46;stirlingc;patch.txt;https://issues.apache.org/jira/secure/attachment/12461330/patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-11-02 09:03:11.764,,,false,,,,,,,,,,,,,,,,,74930,,,Mon Nov 02 09:03:11 UTC 2009,,,,Patch Available,,,,"0|i0rq9z:",159901,,,,,,,,,,,,,,,,,,,"01/Nov/09 20:46;stirlingc;Patch with changes required to address this issue.  Unused imports have also been removed.","01/Nov/09 20:46;stirlingc;Patch with fix as well as cleanup of unused imports.","02/Nov/09 09:03;gtully;patch applied with thanks :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
help for activemq:bstat is acutally showing the help for activemq:query,AMQ-2447,12482976,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,ffang,ffang,13/Oct/09 03:28,12/Nov/09 11:31,30/Jan/20 16:55,14/Oct/09 05:14,5.2.0,,,,,,,5.3.1,5.4.0,,,,,,0,"the error comes from even though we already define specific helpFile field in BstatCommand, but this field can't be overriden in the method printHelp() in QueryCommand

add   printHelp() method for BstatCommand can fix it",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Oct/09 03:29;ffang;AMQ-2447.patch;https://issues.apache.org/jira/secure/attachment/12461474/AMQ-2447.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-10-14 05:14:47.576,,,false,,,,,,,,,,,,,,,,,74941,,,Wed Oct 14 05:14:47 UTC 2009,,,,,,,,"0|i0rqv3:",159996,,,,,,,,,,,,,,,,,,,"14/Oct/09 05:14;rajdavies;Fixed by SVN revision 825009",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fixes for StompTest and XmppTest failure with ibm jdk 6,AMQ-2442,12483106,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,06/Oct/09 11:55,12/Nov/09 11:31,30/Jan/20 16:55,06/Oct/09 11:57,5.2.0,,,,,,,5.3.1,5.4.0,,Test Cases,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74944,,,Tue Oct 06 11:57:30 UTC 2009,,,,,,,,"0|i0rquf:",159993,,,,,,,,,,,,,,,,,,,"06/Oct/09 11:57;dejanb;fixed with svn revision 822231",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New dependency on josql causes OSGi constraint violation on startup of activemq-console.,AMQ-2466,12482540,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,ccustine,ccustine,27/Oct/09 07:44,12/Nov/09 11:31,30/Jan/20 16:55,27/Oct/09 10:29,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,The addition of josql for the new admin commands in AMQ-2462 requires an import in admin-console.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Oct/09 07:49;ccustine;AMQ-2466.diff;https://issues.apache.org/jira/secure/attachment/12461375/AMQ-2466.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-10-27 10:29:04.222,,,false,,,,,,,,,,,,,,,,,74933,,,Tue Nov 03 10:52:56 UTC 2009,,,,,,,,"0|i0rqpz:",159973,,,,,,,,,,,,,,,,,,,"27/Oct/09 07:49;ccustine;For the time being, a simple optional import like the one in this patch would suffice if this is an optional command.  If this is going to be more of a core command, the resolution:=optional could be dropped and we will just have to add josql as a prerequisite system bundle in ServiceMix.","27/Oct/09 10:29;dejanb;Patch applied, thanks Chris. I think it will do for the moment, especially since the feature needs more work in future.","03/Nov/09 10:52;gtully;josql artifacts do not seem to be in central. Is fusesource our best bet for a repo atm.
see: http://mail-archives.apache.org/mod_mbox/activemq-users/200911.mbox/browser",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect configuration in activemq-througput.xml,AMQ-2433,12483102,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cmacnaug,cmacnaug,cmacnaug,30/Sep/09 17:38,12/Nov/09 11:31,30/Jan/20 16:55,05/Oct/09 07:39,5.3.0,5.4.0,,,,,,5.3.1,5.4.0,,Broker,,,,0,"{code:xml}
<policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""1mb"">
  <!--Incorrect:-->
  <pendingSubscriberPolicy>
    <vmCursor />
  </pendingSubscriberPolicy>
</policyEntry>
{code}
Should be:
{code:xml}
<policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""1mb"">
  <pendingQueuePolicy>
    <vmQueueCursor/>
  </pendingQueuePolicy>
</policyEntry>
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-10-05 07:39:33.366,,,false,,,,,,,,,,,,,,,,,74951,,,Mon Oct 05 07:39:33 UTC 2009,,,,,,,,"0|i0rqbj:",159908,,,,,,,,,,,,,,,,,,,"05/Oct/09 07:39;dejanb;This has been fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.camel.component.ActiveMQConfiguration uses the TCCL to load some classes which usually don't work in OSGi,AMQ-2398,12482961,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gnodet,gnodet,gnodet,18/Sep/09 07:26,12/Nov/09 11:31,30/Jan/20 16:55,18/Sep/09 07:56,,,,,,,,5.3.1,5.4.0,,,,,,0,"Actually, a classloader is given but not used if the TCCL is not set at all.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74959,,,2009-09-18 07:26:14.0,,,,,,,,"0|i0rqun:",159994,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tmp_storage is not clean up once a slow subscriber is disconnected.,AMQ-2314,12482905,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gseben,gseben,01/Jul/09 20:29,12/Nov/09 11:31,30/Jan/20 16:55,23/Oct/09 09:40,5.2.0,5.3.0,,,,,,5.3.1,5.4.0,,,,,,0,"With a producer sending messages to a topic with a slow subscriber, and messages accumulating under the tmp_storage, if the consumer is disconnected messages pushed to tmp_storage are not cleaned up by the broker.

I have a test case for this issue which I'll clean up and attach here.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-10-16 16:14:25.358,,,false,,,,,,,,,,,,,,,,,74986,,,Fri Oct 23 11:12:30 UTC 2009,,,,,,,,"0|i0rqrz:",159982,,,,,,,,,,,,,,,,,,,"16/Oct/09 16:14;gtully;just a hunch, but it looks like the order of super.clear() in org.apache.activemq.kaha.impl.container.ListContainerImpl.clear() could be the problem here. A test case would help of course. Think the super.clear whacks the index and the local doClear has nothing to do.","19/Oct/09 15:48;gtully;Giovani, do you have a test case or xml configuration that you use to reproduce this?","23/Oct/09 09:40;gtully;pending messages are now removed when a sub is removed allowing the temp store to be reclaimed. Issue with memory usage management for pending messages spooled to disk list and retrieved is also resolved. ","23/Oct/09 09:44;gtully;last thought, validate that the test case I used meets your requirements, see activemq-core/src/test/java/org/apache/activemq/bugs/AMQ2314Test.java 
The test verify the temp store usage increased and decreased as expected. Note, some temp store usage increase is expected, till an in use file is no longer referenced (the current write file cannot be removed), but long term use will be steady.","23/Oct/09 11:12;jamesc;Gary,

I looked at the logic in the test case and it makes sense for the problem we saw.

I'll try a snapshot build on monday and check the fix is ok.

cheers,

James",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageConsumer.receive(timeout) with prefetchSize=0 results in hang when broker goes down,AMQ-2465,12482292,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,drizzt321,drizzt321,26/Oct/09 19:14,26/Oct/09 19:20,30/Jan/20 16:55,26/Oct/09 19:20,5.3.0,,,,,,,5.3.0,,,JMS client,,,,0,"I'm doing some testing to verify that I detect and correctly handle when the broker goes down while consuming. I came across some strange behavior where the consumers recieve(timeout) call would hang and not throw an exception which prevented me from detecting any error, which means I couldn't back off and take appropriate actions. I traced down the call, and it seems that when the prefetch size is set to 0, there is a separate code path which is ActiveMQMessageConsumer:550 where it then calls the MessageDispatchChannel.dequeue(timeout) with a timeout of -1 which the comments indicate that will wait for the broker to push the message down the connection at which time it will be received. However, since I am stopping the broker, it seems that the sendPullCommand() from ActiveMQMessageConsumer:513 is getting sent, but there is a race condition with the MessageDispatchChannel.dequeue(timeout) and the code hitting the mutex.wait() in MessageDispatchChannel:75, which doesn't have a timeout and so the broker never notifies the client that there is a message or that it should unblock and the consumers sit there stuck. ","WinXP, Netbeans 6.7, JDK 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74934,,,Mon Oct 26 19:20:19 UTC 2009,,,,,,,,"0|i0tsvb:",171986,,,,,,,,,,,,,,,,,,,"26/Oct/09 19:20;drizzt321;Sorry, I had ActiveMQ 5.1 libraries loaded by accident, after doing several tests with ActiveMQ 5.3, it appears to work as expected. I receive the exception as expected. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"RAR on Weblogic: embedded broker fails to start with : org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from class path resource [broker-config.xml]; nested exception is java.io.FileNotFoundException: class ",AMQ-2212,12482135,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Apr/09 15:09,26/Oct/09 14:34,30/Jan/20 16:55,26/Oct/09 14:34,5.2.0,,,,,,,5.3.0,,,JCA Container,,,,0,"{code}<Apr 16, 2009 10:21:12 PM IST> <Warning> <Socket> <BEA-000402> <There are: 5 active sockets, but the maximum number of socket reader threads allowed by the configuration is: 4. You may want to alter your configuration.> 
<Apr 16, 2009 10:21:53 PM IST> <Warning> <netuix> <BEA-423420> <Redirect is executed in begin or refresh action. Redirect url is /console/console.portal?_nfpb=true&_pageLabel=HomePage1.> 
<Apr 16, 2009 10:23:25 PM IST> <Warning> <Connector> <BEA-190155> <Compliance checking/validation of the resource adapter /Users/gtully/j2ee/bea/user_projects/domains/base_domain/servers/AdminServer/upload/activemq-rar-5.3-SNAPSHOT.rar resulted in the following warnings:
The ra.xml <resourceadapter-class> class 'org.apache.activemq.ra.ActiveMQResourceAdapter' should implement java.io.Serializable but does not.> 
2009-04-16 22:23:26,074 [ (self-tuning)'] DEBUG ActiveMQResourceAdapter        - setting [password] property
2009-04-16 22:23:26,074 [ (self-tuning)'] DEBUG ActiveMQResourceAdapter        - setting [useInboundSession] to: false
2009-04-16 22:23:26,075 [ (self-tuning)'] DEBUG ActiveMQResourceAdapter        - setting [serverUrl] to: tcp://localhost:61616
2009-04-16 22:23:26,075 [ (self-tuning)'] DEBUG ActiveMQResourceAdapter        - setting [userName] to: defaultUser
<Apr 16, 2009 10:23:26 PM IST> <Warning> <WorkManager> <BEA-002919> <Unable to find a WorkManager with name activemq-rar-5.3-SNAPSHOT.rar. Dispatch policy activemq-rar-5.3-SNAPSHOT.rar will map to the default WorkManager for the application activemq-rar-5> 
2009-04-16 22:23:26,432 [ActiveMQ Broker] DEBUG XBeanBrokerFactory             - Now attempting to figure out the type of resource: broker-config.xml
2009-04-16 22:23:26,679 [ActiveMQ Broker] INFO  ResourceXmlApplicationContext  - Refreshing org.apache.xbean.spring.context.ResourceXmlApplicationContext@22886042: display name [org.apache.xbean.spring.context.ResourceXmlApplicationContext@22886042]; startup date [Thu Apr 16 22:23:26 IST 2009]; root of context hierarchy
2009-04-16 22:23:27,409 [ActiveMQ Broker] INFO  XBeanXmlBeanDefinitionReader   - Loading XML bean definitions from class path resource [broker-config.xml]
2009-04-16 22:23:27,416 [ActiveMQ Broker] WARN  ActiveMQResourceAdapter        - Could not start up embeded ActiveMQ Broker 'xbean:broker-config.xml': IOException parsing XML document from class path resource [broker-config.xml]; nested exception is java.io.FileNotFoundException: class path resource [broker-config.xml] cannot be opened because it does not exist
2009-04-16 22:23:27,450 [ActiveMQ Broker] DEBUG ActiveMQResourceAdapter        - Reason for: IOException parsing XML document from class path resource [broker-config.xml]; nested exception is java.io.FileNotFoundException: class path resource [broker-config.xml] cannot be opened because it does not exist
org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from class path resource [broker-config.xml]; nested exception is java.io.FileNotFoundException: class path resource [broker-config.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:349)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:310)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.loadBeanDefinitions(ResourceXmlApplicationContext.java:111)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.loadBeanDefinitions(ResourceXmlApplicationContext.java:104)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:123)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:423)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:353)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.ra.ActiveMQResourceAdapter$1.run(ActiveMQResourceAdapter.java:78)
Caused by: java.io.FileNotFoundException: class path resource [broker-config.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:142)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	... 13 more
2009-04-16 22:23:27,468 [ (self-tuning)'] DEBUG tiveMQManagedConnectionFactory - copying standard ResourceAdapter configuration properties
2009-04-16 22:23:27,468 [ (self-tuning)'] DEBUG tiveMQManagedConnectionFactory - setting [clientid] to: null
2009-04-16 22:23:27,468 [ (self-tuning)'] DEBUG tiveMQManagedConnectionFactory - setting [password] property
2009-04-16 22:23:27,468 [ (self-tuning)'] DEBUG tiveMQManagedConnectionFactory - setting [serverUrl] to: tcp://localhost:61616
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-06-26 17:46:59.892,,,false,,,,,,,,,,,,,,,,,75023,,,Mon Oct 26 14:34:41 UTC 2009,,,,,,,,"0|i0s0sf:",161604,,,,,,,,,,,,,,,,,,,"17/Apr/09 15:18;gtully;To use xbean to load an xml configuration, the spring dependencies need to be included in the RAR. spring-core and spring-context

The classloader used by the BrokerXBeanContext needs to provide access to the contents of the RAR. 
Setting the thread context class loader for the thread that starts the broker to the classoader that loads the ResourceAdapter makes this happen for weblogic 10 and works also on Jboss 5.

The default xml configuration file from the root of the RAR may not be sufficient. It is reasonable to update this config and leave it in the RAR or change the value of the BrokerXmlConfig property in the META-INF/ra.xml to point to an external location.

It is possible to use the weblogic console to deploy a plan.xml and contained/generated weblogic-ra.xml that will overide the BrokerXmlConfig to allow an external config file to be generated, without modifying the RAR at all.

{code}<?xml version='1.0' encoding='UTF-8'?>
<weblogic-connector xmlns=""http://www.bea.com/ns/weblogic/weblogic-connector"" 
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.bea.com/ns/weblogic/weblogic-connector http://www.bea.com/ns/weblogic/weblogic-connector/1.0/weblogic-connector.xsd"">
  <native-libdir></native-libdir>
  <jndi-name>ActiveMQ</jndi-name>
  <enable-access-outside-app>false</enable-access-outside-app>
  <enable-global-access-to-classes>false</enable-global-access-to-classes>
  <security></security>
  <properties>
    <property>
      <name>BrokerXmlConfig</name>
      <value>xbean:file:///tmp/broker-config.xml</value>
    </property>
  </properties>
  <admin-objects>
....
{code}","17/Apr/09 15:37;gtully;r766053
verified on jboss5 and weblogic10
Added log4j.properties to the rar so that info/errors appear on weblogic console now that log4j is configured for the RAR.
Reduced the complexity of the embedded broker-config and suppressed the use of shutdownHook as the RAR classes are not available to the shutdown handler. ActiveMQ is terminated by the RAR lifecycle just fine.","26/Jun/09 17:46;bsnyder;It would be great if you could update the [JBoss integration page|http://activemq.apache.org/integrating-apache-activemq-with-jboss.html] and the [Weblogic integration page|http://activemq.apache.org/weblogic-integration.html] with these details. ","26/Sep/09 17:29;hkusuma;don't forget to include spring-beans-x.x.x.jar (jboss integration)
","26/Oct/09 07:59;matvey;Sorry, the documentation is still out of date,with JBOSS 5.1.0 and ActiveMQ 5.3 it does not work in any combination:

I've tried different path combinations in ra.xml descriptor:
<config-property-value>xbean:file:///broker-config.xml</config-property-value>

creating symlinks, copies of this file etc etc... spring libraries are in server/default/deploy/activemq-ra.rar directory
broker-config.xml is also located there... no chance, it can not start ActiveMQ Broker in any combination. But what's really interesting: If I put any Camel config in broker-config.xml - it starts Camel ant makes several attempts to reach ActiveMQ Server... unsucessfully.","26/Oct/09 14:34;matvey;actually wit the following config you do not need to use xbean:file if your config is directly under RA directory:
Jboss 5.1.0 + ActiveMQ 5.3 + Camel 2.0 + Spring 2.5

params from  /META-INF/ra.xml (ActiveMQ Resource Adapter)
<config-property>
            <config-property-name>BrokerXmlConfig</config-property-name>
            <config-property-type>java.lang.String</config-property-type>
            <config-property-value>xbean:broker-config.xml</config-property-value>
</config-property> 


you just need to add xmlns to your broker definition (broker-config.xml file), in another case it will not start:

<broker xmlns=""http://activemq.apache.org/schema/core"" useJmx=""true"" useShutdownHook=""false"" id=""broker"" name=""bruce.broker""> 

that's it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition with prefetch set to 0 and receive timeouts,AMQ-2044,12482712,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,26/Dec/08 14:06,09/Oct/09 00:07,30/Jan/20 16:55,14/Jan/09 14:02,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-10-09 00:07:47.272,,,false,,,,,,,,,,,,,,,,,75107,,,Fri Oct 09 00:07:47 UTC 2009,,,,,,,,"0|i14ccv:",233465,,,,,,,,,,,,,,,,,,,"26/Dec/08 14:32;dejanb;Fixed with SVN revision 729498.","14/Jan/09 10:19;dejanb;The problem still can be reproduced in some cases","14/Jan/09 14:02;dejanb;Resolved in SVN revision 734364","09/Oct/09 00:07;callain_conceptum;Don't know if that will fix https://issues.apache.org/activemq/browse/AMQ-2446 as well. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sendAdvisoryIfNoConsumers makes messages unavailable for queue consumers,AMQ-2443,12483105,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,07/Oct/09 16:33,07/Oct/09 16:42,30/Jan/20 16:55,07/Oct/09 16:42,5.3.0,,,,,,,5.3.0,,,,,,,0,"If non-persistent message is sent to the sendAdvisoryIfNoConsumers advisory topic, it will not be sent to the queue subscriber if it connects later.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74943,,,Wed Oct 07 16:42:11 UTC 2009,,,,,,,,"0|i14clb:",233503,,,,,,,,,,,,,,,,,,,"07/Oct/09 16:42;dejanb;fixed in svn revision 822797",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC message recovery can skip a message if there's no space,AMQ-2437,12483098,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,02/Oct/09 14:33,02/Oct/09 17:51,30/Jan/20 16:55,02/Oct/09 17:51,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"During recovery of the message it is just skipped if there's no space, but the process goes on. If at some point space becomes available messages with bigger id will be recovered and these skipped messages will be left hanging in database.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74948,,,Fri Oct 02 17:51:16 UTC 2009,,,,,,,,"0|i14cin:",233491,,,,,,,,,,,,,,,,,,,"02/Oct/09 17:51;dejanb;Fixed with SVN revision 821106",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC synchronization problems under high load,AMQ-2436,12483093,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,02/Oct/09 10:12,02/Oct/09 10:43,30/Jan/20 16:55,02/Oct/09 10:43,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"It's possible to get exception like this

{code}
java.lang.NullPointerException
        at java.util.TreeMap.rotateLeft(TreeMap.java:1261)
        at java.util.TreeMap.fixAfterInsertion(TreeMap.java:1328)
        at java.util.TreeMap.put(TreeMap.java:483)
        at java.util.TreeSet.add(TreeSet.java:210)
        at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doRecoverNextMessages(DefaultJDBCAdapter.java:751)
        at org.apache.activemq.store.jdbc.JDBCMessageStore.recoverNextMessages(JDBCMessageStore.java:214)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:87)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:81)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:227)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:134)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1280)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1419)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1103)
        at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
        at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)
{code}

if you run multiple producers/consumers in high load environment using JDBC persistence.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74949,,,Fri Oct 02 10:43:49 UTC 2009,,,,,,,,"0|i14civ:",233492,,,,,,,,,,,,,,,,,,,"02/Oct/09 10:43;dejanb;Resolved with SVN revision 820955",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to upgrade felix bundle plugin to 2.0.1 to fix osgi metadata,AMQ-2432,12482532,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,ccustine,ccustine,30/Sep/09 02:32,30/Sep/09 09:19,30/Jan/20 16:55,30/Sep/09 09:19,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,Builds are currently using felix bundle plugin version 1.0 and there is great potential to generate bad osgi imports/exports.  I recommend upgrading to version 2.0.1 for improved flexibilty and more accurate metadata.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Sep/09 03:05;ccustine;amqosgi2.patch;https://issues.apache.org/jira/secure/attachment/12461432/amqosgi2.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-09-30 09:19:18.881,,,false,,,,,,,,,,,,,,,,,74952,,,Wed Sep 30 09:19:18 UTC 2009,,,,,,,,"0|i182qf:",255245,,,,,,,,,,,,,,,,,,,"30/Sep/09 02:37;ccustine;Attached a patch for root pom.xml.  This patch upgrades to bundle plugin 2.0.1 and sets a version policy that will generate imports and exports as [5.3,5.4), meaning you can upgrade minor versions within the 5.3 releases, but not 5.4 (which seemed suitable for ActiveMQ).","30/Sep/09 09:19;dejanb;Patch applied to trunk and merged to 5.3 branch. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default settings lead to paging and high latency for non persistent pub/sub,AMQ-2400,12483076,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,cmacnaug,cmacnaug,21/Sep/09 19:53,28/Sep/09 13:14,30/Jan/20 16:55,28/Sep/09 13:14,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"The current default config doesn't enable a memoryLimit or flow control for topics which consequently leads to high latency and lower throughput. 

I ended up tweaking the default config to limit destination sizes and enable flow control as follows:

<destinationPolicy>
 <policyMap>
   <policyEntries>
     <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""1mb"">                      
       <pendingSubscriberPolicy>
         <vmCursor/>
       </pendingSubscriberPolicy>
     </policyEntry>
     <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""1mb""/>
   </policyEntries>
 </policyMap>
</destinationPolicy>

The current default config was resulting in really high latencies in non persistent pub sub tests (> 2 minutes!). With the new settings throughput doubled and average latency dropped to 3 seconds. 

However, it seems like there is some resistance to enabling flow control by default: http://issues.apache.org/activemq/browse/AMQ-2318, as naïve users might erroneously interpret this as a hang. 

A possible compromise appropriate for the 5.3.0 release time frame would be to log a warning the first time flow control is triggered for a destination, to assist naive users in troubleshooting producer pauses. 

More long term, it might be worth introucing a more sophisticated mechanism for when we page to disk like only do so when there are no consumers connected. A policy similar to this is already being pursued in the amq 6.0 prototype.  
",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-09-28 13:14:47.051,,,false,,,,,,,,,,,,,,,,,74958,,,Mon Sep 28 13:14:47 UTC 2009,,,,,,,,"0|i14ci7:",233489,,,,,,,,,,,,,,,,,,,"28/Sep/09 13:14;dejanb;Now that we have producer flow control works nicely and log messages when the ""hang"" occurs, I included this change in the default config.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in StompSubscription when using client-individual ack mode,AMQ-2426,12483059,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,ervandew,ervandew,25/Sep/09 18:21,25/Sep/09 21:48,30/Jan/20 16:55,25/Sep/09 21:48,5.2.0,,,,,,,5.3.0,,,Transport,,,,0,"When using the stomp transport with the ack mode 'client-individual', the StompSubscription class fails to remove messages from the dispatchedMessage map due to a typo in the onStompMessageAck method.

The attached patch fixes the typo and the memory leak.
",,ervandew,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/09 18:22;ervandew;StompSubscription.java.patch;https://issues.apache.org/jira/secure/attachment/12461532/StompSubscription.java.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-09-25 21:48:52.537,,,false,,,,,,,,,,,,,,,,,74953,,,Fri Sep 25 21:48:52 UTC 2009,,,,Patch Available,,,,"0|i0s24n:",161821,,,,,,,,,,,,,,,,,,,"25/Sep/09 21:48;tabish;Verified and applied patch in trunk and back-ported to the 5.3 branch,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hangs in fan-in to DUPS_OK_ACKNOWLEDGE queue receivers,AMQ-2401,12482929,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmacnaug,cmacnaug,21/Sep/09 19:59,24/Sep/09 14:37,30/Jan/20 16:55,24/Sep/09 14:37,5.3.0,,,,,,,5.3.0,,,,,,,0,"While running performance tests I I was seeing hangs in several tests  involving dups ok queue receivers. My suspicion is that this is related to ""too lazy"" dups_ok acknowledgements. Changing the queue prefetchLimit to 100 caused this problem to go away. This needs more investigation, but it seems like we can get ourselves in to trouble if the queue size is smaller than the receiver's prefetchLimit, and this should be avoid. It is also possible that there is something more complicated happening in my tests. I haven't yet been able to reproduce this outside my performance test environment. 
","Running with the following config:

<destinationPolicy>
 <policyMap>
   <policyEntries>
     <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""1mb"">                      
       <pendingSubscriberPolicy>
         <vmCursor/>
       </pendingSubscriberPolicy>
     </policyEntry>
     <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""1mb""/>
   </policyEntries>
 </policyMap>
</destinationPolicy>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/09 20:55;chirino;AMQ-2401.patch;https://issues.apache.org/jira/secure/attachment/12461561/AMQ-2401.patch","22/Sep/09 02:50;cmacnaug;AMQ2401.txt;https://issues.apache.org/jira/secure/attachment/12461560/AMQ2401.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-09-23 19:45:04.784,,,false,,,,,,,,,,,,,,,,,74957,,,Thu Sep 24 14:37:28 UTC 2009,,,,,,,,"0|i14chz:",233488,,,,,,,,,,,,,,,,,,,"22/Sep/09 02:50;cmacnaug;Path file for Unit Test Reproducing the issue.","22/Sep/09 03:07;cmacnaug;The attached unit test can be used to demonstrate two issues. If you set PRODUCER_COUNT=1 and CONSUMER_COUNT=1, and change the producer message size to 1300 bytes. You can see that this will indeed produce a hang since the consumer's prefetch is 1000 and less than number fit into the queue. 

However, using the test as is unmodified (e.g. 50 producers, and a message size of 1024 doesn't result in a hang, but does result in a serious performance bottleneck. There is some sort of contention happening in the broker. This is the behavior that I was seeing in my original performance runs ... simply a sever slow down. ","22/Sep/09 21:02;cmacnaug;After some changes committed by Rob and Dejan in 5.4 trunk, the 50_1_1 usecase is better than before. However, setting the pending queue policy to vm results in the old buggy behavior, which is problematic for those thar don't wish to page messages to disk:

{code:title=Modify setup to include vm pending cursor,java}
entry.setPendingQueuePolicy(new VMPendingQueueMessageStoragePolicy());
{code}","23/Sep/09 19:45;chirino;I think the safest bet will be to change the client so that he acks more frequently at least in a queue dups ok case.","23/Sep/09 20:55;chirino;Attaching patch which changes the DUPS_OK queue consumer behavior to match that of AUTO_ACK.  The topic should still behave as before.","24/Sep/09 14:37;chirino;I added the test case to the build.. slightly modified so that it would exacerbate the DUPS_OK problem to get a quicker failure.
rev: 818496
The fix for the test case went in as rev: 818487",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mask bug in camel-web 2.0.0 regrding starting.stopping routes,AMQ-2393,12483041,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Sep/09 15:00,15/Sep/09 15:10,30/Jan/20 16:55,15/Sep/09 15:10,,,,,,,,5.3.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74961,,,Tue Sep 15 15:10:49 UTC 2009,,,,,,,,"0|i182rr:",255251,,,,,,,,,,,,,,,,,,,"15/Sep/09 15:10;dejanb;fixed in svn revision 815359",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In 5.1-SNAPSHOTs, duplicate messages sent after broker restart",AMQ-1596,12482860,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,ryarger,ryarger,22/Feb/08 18:33,13/Sep/09 10:43,30/Jan/20 16:55,13/Sep/09 10:43,5.1.0,,,,,,,5.3.0,,,,,,,0,"I am seeing duplicate messages delivered after bouncing the broker.
I have seen it happen in 5.1 SNAPSHOTS on 2/12 and 2/19.
It does not occur in 5.0.0.

I have persisted to both AMQ Store and to SQL Server.
It occurs for both.

Simple test flow:
1) Start the broker.
2) Start the consumer (running in Spring DefaultMessageListenerContainer)
3) Run the producer, which sends 5 new messages.
4) Messages are consumed.
Both the admin web app and jconsole show the messages as dequeued and a queue size of 0.
5) Bounce the broker.
6) The messages are resent to the consumer.

Spring's DefaultMessageListenerContainer is supposed to automatically acknowledge and commit the session transaction, 
but I have tried manual acks and commits as well.
I am still able to reproduce.

I have broken down my code to the simplest test case that can reproduce the issue.
I am including this code and my broker config file.

Have I configured something incorrectly or is there an issue in 5.1?
Thank you.
",Windows and Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/08 18:33;ryarger;ASF.LICENSE.NOT.GRANTED--AMQJiraTicket.zip;https://issues.apache.org/jira/secure/attachment/12460938/ASF.LICENSE.NOT.GRANTED--AMQJiraTicket.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84810,,,2008-02-22 18:33:18.0,,,,,,,,"0|i181yf:",255119,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalArgumentException-Subscripiton does not exist when client disconnects ,AMQ-1711,12483010,12482497,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,hoorner,hoorner,06/May/08 01:46,12/Sep/09 07:01,30/Jan/20 16:55,12/Sep/09 07:01,4.1.1,,,,,,,5.3.0,,,,,,,1,"When a client disconnects in a Network of Brokers configuration, it is possible for an IllegalArgumentException to be thrown from org.apache.activemq.broker.region.AbstractRegion.acknowlege() due to a race condition between message processing and disconnect subscription clean-up.  It is easily reproducable by putting two brokers in a Network of Brokers configuration (We will call them A and B).  If you publish message at a high rate to broker A (I found that if I published messages at the rate of 1 every 10ms this happened consistantly -- better hardware may require a high rate so I recommend pushing message as fast as possible), put a subscriber on broker B (my subscriber used selectors but I don't think that makes a difference), and kill the subscriber process (I don't know if a friendly disconnect behaves better), Broker A will throw an exception and disconnect broker B perminately from the NOB configuration.  All future connections to broker B will not received messages published to A.

I found that if I changed AbstractRegion.acknowledge to log the error, but not throw an exception that it solved the problem with seemly no ill effects.  ",,antoniogmc,mdasari,mlukica,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-05-06 13:56:37.355,,,false,,,,,,,,,,,,,,,,,84512,,,Tue May 06 13:56:37 UTC 2008,,,,,,,,"0|i0s1bz:",161692,,,,,,,,,,,,,,,,,,,"06/May/08 13:56;hudalla;I am experiencing the same problem during recovery of a previously failing broker. When I kill a broker that I am sending messages to continuously and then re-start the broker, I get the following stack trace during startup and the client cannot re-connect to the broker:

ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.act
ivemq.xbean.XBeanBrokerService' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception
is java.io.IOException: Recovery Failed: The subscription does not exist: ID:FE-Z2965-3182-1210069658579-1:567:-1:2
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.x
bean.XBeanBrokerService' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java
.io.IOException: Recovery Failed: The subscription does not exist: ID:FE-Z2965-3182-1210069658579-1:567:-1:2
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:71)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBean
BrokerService' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.io.IOExce
ption: Recovery Failed: The subscription does not exist: ID:FE-Z2965-3182-1210069658579-1:567:-1:2
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBean
Factory.java:1032)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFact
ory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:1
41)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactor
y.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        ... 10 more
Caused by: java.io.IOException: Recovery Failed: The subscription does not exist: ID:FE-Z2965-3182-1210069658579-1:567:-1:2
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:25)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:100)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
        at org.apache.activemq.broker.MutableBrokerFilter.start(MutableBrokerFilter.java:164)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableB
eanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBean
Factory.java:1029)
        ... 23 more
Caused by: java.lang.IllegalArgumentException: The subscription does not exist: ID:FE-Z2965-3182-1210069658579-1:567:-1:2
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:298)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:402)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:177)
        at org.apache.activemq.broker.TransactionBroker$1.recover(TransactionBroker.java:90)
        at org.apache.activemq.store.journal.JournalTransactionStore.recover(JournalTransactionStore.java:240)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:82)
        ... 30 more
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi

Kai",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"shutdownOnMasterFailure=""true"" is ignored when broker starting",AMQ-1813,12482676,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,tsigelnik,tsigelnik,20/Jun/08 09:37,11/Sep/09 18:49,30/Jan/20 16:55,11/Sep/09 18:49,5.1.0,,,,,,,5.3.0,,,Broker,,,,1,"If slave broker cannot connect to master when slave broker starting, slave broker doesn't stop starting and starts all connectors
I think it's a bad behavior. It must shutdown when shutdownOnMasterFailure=""true"" ",,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-07-15 15:19:37.353,,,false,,,,,,,,,,,,,,,,,84761,,,Fri Sep 11 18:49:49 UTC 2009,,,,,,,,"0|i0s2br:",161853,,,,,,,,,,,,,,,,,,,"15/Jul/08 15:19;yinghe0101;using tcp://master:61616 for masterConnectorURI and shutdownOnMasterFailure=""true"" , I got the same result.  I think this needs to be fixed too.

but using failover://(tcp://master:61616)?maxReconnectAttempts=3 as the masterConnectorURI , after 3 failed attemp, it will shut down the slave. so shutdownOnMasterFailure is not ignored in the failover protocol case.","15/Jul/08 15:47;tsigelnik;2ying 

Your logic behaviour is result of race condition. Broker is already started when limit of maxReconnectAttempts=3 is exceeded","11/Sep/09 18:49;rajdavies;Fixed by SVN revision 813980",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message acknowledgement failed to send back to the producing broker,AMQ-1844,12482636,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,silverhoof,silverhoof,08/Jul/08 12:07,11/Sep/09 18:25,30/Jan/20 16:55,11/Sep/09 18:25,5.0.0,,,,,,,5.3.0,,,Broker,,,,0,"Producer at broker A produces 2500 messages and send to a distributed queue.
Consumer at broker B have a message driven pojo configured to consume messages.
The consumer recieved 1000 messages from broker B and stalls.

We found that the 1000 messages received at broker B side are never removed from the queue at broker A (which the producer connected to).
That means broker B only get the prefetch size 1000 messages and never acknowledge the message received to broker A.

What is this problem?
","Two windows machine in one LAN. Each have one broker.
Broker A connected broker B via TCP using duplex (two way)  network connector to form a store&forward style network of brokers.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84598,,,Tue Jul 08 14:08:05 UTC 2008,,,,,,,,"0|i17kzb:",252368,,,,,,,,,,,,,,,,,,,"08/Jul/08 14:08;silverhoof;I upgraded to 5.1 and this problem gone.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid Topic Statistics,AMQ-1877,12483026,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tpounds,tpounds,06/Aug/08 23:45,11/Sep/09 18:23,30/Jan/20 16:55,11/Sep/09 18:23,5.0.0,,,,,,,5.3.0,,,Broker,,,,0,"I'm not sure if this affects 5.0.0 directly but I imagine it does since I'm seeing this in the 5.0.0.14-fuse release.

When I have a single topic subscriber and publisher on a freshly started AMQ broker and I send one message I see the following invalid statistics.
{noformat}
DequeueCount = 1
DispatchCount = 1
EnqueueCount = 1
QueueSize = 1
{noformat}

What I expect to see is:
{noformat}
DequeueCount = 1
DispatchCount = 1
EnqueueCount = 1
QueueSize = 0
{noformat}

I also noticed with one publisher and no subscribers and I send one message I see the following:
{noformat}
DequeueCount = 0
DispatchCount = 0
EnqueueCount = 1
QueueSize = 1
{noformat}

What I expect to see is:
{noformat}
DequeueCount = 0
DispatchCount = 0
EnqueueCount = 1
QueueSize = 0
{noformat}",Fuse Message Broker 5.0.0.14-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-09-11 18:23:52.747,,,false,,,,,,,,,,,,,,,,,84596,,,Fri Sep 11 18:23:52 UTC 2009,,,,,,,,"0|i17kz3:",252367,,,,,,,,,,,,,,,,,,,"02/Sep/08 19:28;tpounds;Fix expected seen vs. expected in description.","11/Sep/09 18:23;rajdavies;the size of the queue will be 1 until the message is acknowledged",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
populateJMSXUserID=true doesn't seem to do so,AMQ-1642,12483005,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,blackdog,blackdog,03/Apr/08 18:29,11/Sep/09 18:20,30/Jan/20 16:55,11/Sep/09 18:20,5.0.0,,,,,,,5.3.0,,,,,,,0,"i don't get JMSXUserID header on tcp or stomp, either when configured by xml or url

xml config was simply the populateJMSXUserID=true attribute added to the factory configuration  <broker> tag

and the url configure

Loading message broker from: broker:(tcp://localhost:61616,stomp://localhost:61613)?persistent=false&useJmx=true&populateJMSXUserID=true",linux ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-09-11 18:20:00.006,,,false,,,,,,,,,,,,,,,,,84626,,,Fri Sep 11 18:20:00 UTC 2009,,,,,,,,"0|i181zj:",255124,,,,,,,,,,,,,,,,,,,"11/Sep/09 18:20;rajdavies;This appears to work - let me know if it doesn't",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handling messages with a store-based message cursor will hang producers,AMQ-2002,12482634,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,lurga,lurga,14/Nov/08 03:25,11/Sep/09 18:10,30/Jan/20 16:55,11/Sep/09 18:09,5.1.0,5.2.0,,,,,,5.3.0,,,Message Store,,,,0,"When memory of the broker reaches its limit, the store-based cursor will page messages to temporary files or store them to a database ,thus the producer can send messages again. But if we set the destination policy with a low limit of memory, the producer will be hung because the store-based cursor will do nothing. 
I have attached a junit test case to show these diverse results.",AcitveMQ5.3-snapshot,npfistner,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/08 04:57;lurga;StoreBasedCursorTest.java;https://issues.apache.org/jira/secure/attachment/12461305/StoreBasedCursorTest.java","17/Nov/08 02:56;lurga;patch.txt;https://issues.apache.org/jira/secure/attachment/12461278/patch.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-09-11 18:09:46.809,,,false,,,,,,,,,,,,,,,,,75132,,,Fri Sep 11 18:09:46 UTC 2009,,,,,,,,"0|i0s21z:",161809,,,,,,,,,,,,,,,,,,,"14/Nov/08 04:57;lurga;test case","17/Nov/08 02:56;lurga;patch","11/Sep/09 18:09;rajdavies;Great patch! Applied in SVN revision 813962 and 813965",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Simple transaction causes broker transaction has not been started exception,AMQ-2383,12482485,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gnoremac,gnoremac,10/Sep/09 19:08,11/Sep/09 09:19,30/Jan/20 16:55,11/Sep/09 09:19,5.2.0,,,,,,,5.3.0,,,,,,,0,"When I run the attached test case I notice the following exception in the logs. 

javax.jms.JMSException: Transaction 'TX:ID:gr-gr-60307-1252609475470-2:1:1' has not been started.
	at org.apache.activemq.broker.TransactionBroker.getTransaction(TransactionBroker.java:270)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:190)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:456)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)","Os: Ubuntu 9.04
java version ""1.6.0_14""
Java(TM) SE Runtime Environment (build 1.6.0_14-b08)
Java HotSpot(TM) Server VM (build 14.0-b16, mixed mode)
ActiveMQ: 5.2.0",gnoremac,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Sep/09 19:09;gnoremac;ActiveMQTest.java;https://issues.apache.org/jira/secure/attachment/12461473/ActiveMQTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-09-11 09:19:04.893,,,false,,,,,,,,,,,,,,,,,74963,,,Fri Sep 11 09:19:04 UTC 2009,,,,,,,,"0|i0s1x3:",161787,,,,,,,,,,,,,,,,,,,"11/Sep/09 09:19;gtully;committed test in r813734
it works fine on trunk and there is no log message.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate message received when producing and consuming concurrently,AMQ-1936,12482682,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,johnnyboy,johnnyboy,15/Sep/08 22:28,10/Sep/09 23:05,30/Jan/20 16:55,07/Aug/09 10:33,5.1.0,,,,,,,5.3.0,,,Broker,,,,6,"Hello,

We are receiving duplicate messages when processing a moderate numbers of messages ( ~60,000 ), I have attached a JUNIT test which re-produces the issue on my machine with the broker configuration file used. Please note that It does take a few minutes to generate the test failure.

The test needs to be run with increased heap memory using the JMV option -Xmx512m

We initially found the issue using the IONA Fuse version 5.1.0.0 which would produce the same issue at 30,000 messages and without persistence storage. I later downloaded the ActiveMQ 5.1.0 version which would pass at 30,000 but fail at 60,000.

It is causing major issues for our project and hindering our application from going to production.

","Dell Precision with 2.13GHz dual core, 3.25 GB RAM running on Windows XP SP2. Test is running on JDK1.5.0_12.",dunc,dwsmith75,john.greeley,johnnyboy,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/08 22:28;johnnyboy;ASF.LICENSE.NOT.GRANTED--activemq-duplicate-msg-check.xml;https://issues.apache.org/jira/secure/attachment/12461188/ASF.LICENSE.NOT.GRANTED--activemq-duplicate-msg-check.xml","15/Sep/08 22:28;johnnyboy;ASF.LICENSE.NOT.GRANTED--log4j.xml;https://issues.apache.org/jira/secure/attachment/12461200/ASF.LICENSE.NOT.GRANTED--log4j.xml","23/Sep/08 06:27;johnnyboy;ActiveMQDuplicateMessageTest.java;https://issues.apache.org/jira/secure/attachment/12461133/ActiveMQDuplicateMessageTest.java",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-09-16 02:47:45.676,,,false,,,,,,,,,,,,,,,,,75167,,,Thu Sep 10 23:05:44 UTC 2009,,,,,,,,"0|i0s23r:",161817,Unit Test Broken,,,,,,,,,,,,,,,,,,"16/Sep/08 02:47;mitronox;Good work Johnny, I have also seen this duplicate problem occur with ActiveMQ, under a multi-threaded app.  When it happens, the queue size (from JConsole) goes into negative numbers.  A quick search revealed other people experiencing a similar problem as well:
    http://markmail.org/message/sjkbbpjo37754xfj
    http://www.mail-archive.com/activemq-users@geronimo.apache.org/msg04835.html
    http://www.nabble.com/5.2.0-release-schedule--td18356550.html
","23/Sep/08 05:38;rajdavies;Can you re-attach ActiveMQDuplicateMessageTest.java and click the grant asf option ?","23/Sep/08 06:27;johnnyboy;Hi Rob, Unit test re-attached with ASF grant. Thanks, Johnny","23/Sep/08 06:41;rajdavies;This looks resolved on trunk","29/Sep/08 21:30;johnnyboy;Hi Rob,

I've downloaded the 5.3 snapshot and re-run the test against it and it still has a duplicate message failure.

Snapshot was : apache-activemq-5.3-20080922.231550-14-bin.zip

Would you expect the fix to be included in this snapshot?

Cheers,
Johnny","09/Mar/09 22:13;dunc;Did either of you manage to work around this problem?

We are experiencing exactly the same thing. We first started noticing exceptions due to duplicate messages being processed (100% sure duplicates weren't being written to the queue) - we then tried what was mentioned above about JConsole and saw the queue with a negative count.

Were either of you able to confirm whether the issue was particularly to do with having multiple concurrent consumers on the queue?

Rob, did the unit test work on your environment (was wondering if I should try it)?

Duncan","23/May/09 06:13;rajdavies;Added test case - see activemq-core/src/test/java/org/apache/activemq/bugs/AMQ1936Test.java - as SVN revision 777803.
Cannot reproduce this issue on the current trunk","28/May/09 10:46;dejanb;This test hangs on some Linux machines (during CI). Needs some more investigation.","22/Jul/09 15:18;gtully;renabled this test on trunk to see what hudson throws up","07/Aug/09 10:33;gtully;this does look resolved. The test case has been running happily for a few days now and on a bunch of hardware via fuse tc.","10/Sep/09 23:05;dunc;Issue is definitely resolved.

I downloaded and ran the test on 5.2 and was able to replicate the problem. I then updated my jars from the latest 5.3 snapshot (20090908200340) and the test now runs successfully without error. Tested running it many times.

Thanks to all for your help on getting this resolved.

One question, does anyone know when 5.3 become an official release?

Thanks Duncan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerViewMBean.removeQueue does not clean up advisory topics,AMQ-2023,12482884,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,aaronriekenberg,aaronriekenberg,03/Dec/08 03:06,09/Sep/09 17:20,30/Jan/20 16:55,09/Sep/09 17:20,5.1.0,5.2.0,,,,,,5.3.0,,,Broker,,,,0,"Using BrokerViewMBean.removeQueue to remove a queue does not clean up advisory topics for the queue.

It appears to be possible to manually remove advisory topics for the queue after the queue has been deleted using removeTopic, but this should not be necessary according to the documentation: http://activemq.apache.org/how-do-i-purge-a-queue.html

Steps to reproduce (bug happens on 5.1.0 and 5.2.0):

1. Run TestSubscriber to create a queue named TestQueue.
2. Observe in JConsole that queue TestQueue and advisory topic ActiveMQ.Advisory.Consumer.Queue.TestQueue now exist.
3. In JConsole invoke removeQueue on the BrokerViewMBean with the parameter TestQueue.
4. Observe the queue TestQueue is removed, but the advisory topic ActiveMQ.Advisory.Consumer.Queue.TestQueue still exists.

This also happens when invoking BrokerViewMBean.removeQueue programatically.  There are no message sent over TestQueue in the steps above, but this also appears to happen after messages have been sent over the queue.","Windows XP JDK 1.5, Ubuntu 8.10 JDK 1.6",edwardsk2003,ghopper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Dec/08 03:06;aaronriekenberg;TestSubscriber.java;https://issues.apache.org/jira/secure/attachment/12461225/TestSubscriber.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-06-10 16:10:45.801,,,false,,,,,,,,,,,,,,,,,75119,,,Wed Sep 09 17:20:37 UTC 2009,,,,,,,,"0|i0s2a7:",161846,,,,,,,,,,,,,,,,,,,"10/Jun/09 16:10;edwardsk2003;We are using the mbean operation RemoveTopic to remove dynamically created topics when they are no longer needed.

If the dynamic topic is named ""TestTopic"" our current work around is to call RemoveTopic with the following:

  ""TestTopic""

  ActiveMQ.Advisory.Producer.Topic.TestTopic""

  ActiveMQ.Advisory.Consumer.Topic.TestTopic""


Our tests work as expected... will update if I find any negative side-effects","09/Sep/09 17:20;rajdavies;same problem as https://issues.apache.org/activemq/browse/AMQ-1255",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The pool is not being informed that invalid PooledSessions are being thrown away,AMQ-2249,12482881,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,henryp,henryp,12/May/09 22:38,09/Sep/09 17:16,30/Jan/20 16:55,09/Sep/09 17:16,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"PooledConnection.close() calls rollback() on the internal session. However, when the internal session is an instance of  ActiveMQXASession, this always results in a TransactionInProgressException being thrown (and subsequently caught). Unfortunately, in this path of execution, the session pool is not informed.

The sessionPool knows nothing about the session being discarded and ultimately, GenericObjectPool.borrowObject() blocks forever since _numActive is never decremented.

I think the pool should at least be told that the session has been invalidated (this is not a full fix but should at least stop any hanging threads). Below is a partial patch (I'll work on a full solution when I have time):
{code} 
Index: activemq-pool/src/main/java/org/apache/activemq/pool/PooledSession.java
===================================================================
--- activemq-pool/src/main/java/org/apache/activemq/pool/PooledSession.java     (revision 768326)
+++ activemq-pool/src/main/java/org/apache/activemq/pool/PooledSession.java     (working copy)
@@ -120,6 +120,7 @@
                         LOG.trace(""Ignoring exception as discarding session: "" + e1, e1);
                     }
                     session = null;
+                    sessionPool.invalidateSession(this);
                     return;
                 }
             }
Index: activemq-pool/src/main/java/org/apache/activemq/pool/SessionPool.java
===================================================================
--- activemq-pool/src/main/java/org/apache/activemq/pool/SessionPool.java       (revision 768326)
+++ activemq-pool/src/main/java/org/apache/activemq/pool/SessionPool.java       (working copy)
@@ -59,6 +59,14 @@
             throw JMSExceptionSupport.create(e);
         }
     }
+    
+    public void invalidateSession(PooledSession session) throws JMSException {
+       try {
+            getSessionPool().invalidateObject(session);
+        } catch (Exception e) {
+            throw JMSExceptionSupport.create(""Failed to invalidate session: "" + e, e);
+        }
+    }
 
     public void returnSession(PooledSession session) throws JMSException {
         // lets check if we are already closed
{code} ","Windows XP using ActiveMQ in conjunction with Jencks, Spring and JOTM.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-09-09 17:16:19.249,,,false,,,,,,,,,,,,,,,,,75013,,,Wed Sep 09 17:16:19 UTC 2009,,,,Patch Available,,,,"0|i14bzb:",233404,,,,,,,,,,,,,,,,,,,"09/Sep/09 17:16;rajdavies;patch applied in revision 813053",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
One evicted message out of two is delivered to the consumer,AMQ-2159,12482827,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yenki,yenki,12/Mar/09 14:39,09/Sep/09 13:50,30/Jan/20 16:55,09/Sep/09 13:50,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"A problem in message eviction seems to cause a strange behavior of message delivery. After a slow consumer consumed it's prefetched messages, it start receiving one message out of two that were produced. When stepping into the sources I noticed that one message evicted out of two is dispatched to the destination even if no message have been consumed during that time. The problem seems to be in the class 'TopicSubscription'. This is what I found:

- When a message is discarded dequeueCounter is incremented. 
- Then next time a message arrives it is evicted then dispatchMatched is called. 
- Because dequeueCounter have been called without any message dispatched, isFull() return false. 
- As a result it assumes there is an empty room in the prefetch and dispatch the message. 

The following example show what I expect against what I get when I produce 100 messages with a unique ID then consume 10 message and output the message ID. Prefetch size is 5. and constantPendingMessageLimitStrategy limit=""5""

Expected:
0, 1, 2, 3, 4, 95, 96, 97, 98, 99

What I really get
 0, 1, 2, 3, 4, 5, 7, 9, 11, 13

I made a test application and a unit test, I didn't found how to attach it to the issue.
","Windows Xp, Java 5, ActiveMQ 5.2",elihusmails,yenki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/09 16:52;yenki;testActiveMQ.zip;https://issues.apache.org/jira/secure/attachment/12461400/testActiveMQ.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-03-13 16:28:08.152,,,false,,,,,,,,,,,,,,,,,75048,,,Wed Sep 09 13:50:43 UTC 2009,,,,,,,,"0|i0s28n:",161839,,,,,,,,,,,,,,,,,,,"12/Mar/09 14:44;yenki;This is the test application & unit test
-You can start the application by executing class ""Application""
-You can run the unit test by running jUnit4 on ""TestMessageEviction""

","12/Mar/09 15:03;yenki;Fix activemq.xml","13/Mar/09 16:28;gtully;Yannick, thanks for the test case. Could you reattach (delete and attach again) it to the issue with a license grant. There is a check box on the Attach file page. Otherwise we can't include your test case. Thanks","13/Mar/09 16:52;yenki;Add the test with the granted license","13/Mar/09 20:33;elihusmails;I was tracking down a similar problem.  If you run this code in YourKit, capture a memory snapshot and look at the instance of ActiveMQMessageConsumer, you will see that the unconsumedMessages list size never decreases.","14/Mar/09 16:13;yenki;We also discovered this problem because we were running out of memory even if a Message Limit Strategy was activated.","09/Sep/09 13:50;rajdavies;Ran test case against 5.3 - works as expected",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
it makes no sense for activemq-admin to load SUNJMX env var from /etc/activemq.conf,AMQ-2368,12482778,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,zakalwe,zakalwe,27/Aug/09 21:37,09/Sep/09 13:30,30/Jan/20 16:55,09/Sep/09 13:30,5.2.0,5.3.0,,,,,,5.3.0,,,JMX,,,,0,"it doesn't make any sense for activemq-admin to load the SUNJMX env var from /etc/activemq.conf since if activemq-admin is run on the same system that the broker runs on in many cases the com.sun.management.jmxremote.port system property will be set in there. Since the activemq-admin script now tries to use the same port that the broker is already using the script now fails to run.

You could argue that there is no point for the activemq-script to even use the SUNJMX variable at all, since there is little point in enabling a JMX connector for the script.

However in the attached patch all I've done is to reset the SUNJMX var so that it doesn't use what is set in /etc/activemq.conf.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/09 21:38;zakalwe;activemq-admin_reset_SUNJMX.patch;https://issues.apache.org/jira/secure/attachment/12461369/activemq-admin_reset_SUNJMX.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-09-09 13:30:31.599,,,false,,,,,,,,,,,,,,,,,38771,,,Wed Sep 09 13:30:31 UTC 2009,,,,Patch Available,,,,"0|i182pr:",255242,,,,,,,,,,,,,,,,,,,"09/Sep/09 13:30;dejanb;Fixed with svn revision 812950. I also removed all activemq options such as dedicated task runner and we don't really need 512 MB to run this stuff",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue of a Virtual topic Messages not getting dequeued,AMQ-2264,12482658,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mprem74,mprem74,22/May/09 02:05,09/Sep/09 09:59,30/Jan/20 16:55,09/Sep/09 09:59,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"Have multiple consumers to queue (queue of a virtual topic) , Am using the spring DefaultMessageListnerContainer . Am running with a network of 2 brokers , networked using static url in network connector.
Web console shows the some consumers , even when the consumers are shut down , But Jconsole correctly shows 0 subscriptions.

I greatly appreciate your response . 

Caused by: java.lang.IllegalStateException: Trying to access an inactive page: 18432
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.lookupPage(HashIndex.java:347)
        at org.apache.activemq.kaha.impl.index.hash.HashPageInfo.begin(HashPageInfo.java:96)
        at org.apache.activemq.kaha.impl.index.hash.HashBin.getRetrievePage(HashBin.java:269)
        at org.apache.activemq.kaha.impl.index.hash.HashBin.getHashEntry(HashBin.java:244)
        at org.apache.activemq.kaha.impl.index.hash.HashBin.find(HashBin.java:111)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.get(HashIndex.java:294)
        at org.apache.activemq.kaha.impl.container.MapContainerImpl.get(MapContainerImpl.java:203)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStore.getMessageReference(KahaReferenceStore.java:151)
        at org.apache.activemq.store.amq.AMQMessageStore.getLocation(AMQMessageStore.java:460)
        at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:433)
        at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:120)
        at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:533)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:227)
        ... 10 more
ERROR Queue                          - Failed to page in more queue messages
java.lang.RuntimeException: java.lang.RuntimeException: java.lang.IllegalStateException: Trying to access an inactive page: 18432
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:103)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1179)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1308)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1011)
        at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
        at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-09-09 09:59:45.236,,,false,,,,,,,,,,,,,,,,,75006,,,Wed Sep 09 09:59:45 UTC 2009,,,,,,,,"0|i182lj:",255223,,,,,,,,,,,,,,,,,,,"26/May/09 18:08;mprem74;Bu suing VMQueue Cursor in destination policy for queues , Queue is getting De queued correctly , But I still see those exceptions in the logs.

 <policyEntry queue="">"" memoryLimit=""5mb"">
                        <pendingQueuePolicy>
                             <vmQueueCursor />
                        </pendingQueuePolicy>
                     </policyEntry>
                    <policyEntry topic="">"" memoryLimit=""5mb"">
","09/Sep/09 09:59;rajdavies;This should be fixed in 5.3 - but can we have a test case to confirm ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MirroredQueue cannot be cast to Queue when Purging Mirrored Queue,AMQ-1803,12482515,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,cdwiegand,cdwiegand,17/Jun/08 05:19,09/Sep/09 07:06,30/Jan/20 16:55,09/Sep/09 07:06,5.1.0,5.2.0,,,,,,5.3.0,,,Broker,,,,1,"We used MirroredQueues so that we can monitor what's going on using a simple Topic client we wrote. When we click 'Purge' on the queue in the web admin interface, we get a Java exception: org.apache.activemq.broker.region.virtual.MirroredQueue$1 cannot be cast to org.apache.activemq.broker.region.Queue. We are able to delete the queue, but then our listener classes do not auto-reconnect for up to 5 minutes (our own code for that to work around issues with ActiveMQ.Net bindings). ","Windows Server 2003 R2 fully patched as of 2008-06-13, Sun Java current version as of 2008-06-13. ActiveMQ 5.1.0 as released as of 2008-05-30.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-03-03 18:15:31.385,,,false,,,,,,,,,,,,,,,,,84764,,,Wed Sep 09 07:06:40 UTC 2009,,,,,,,,"0|i14c3z:",233425,,,,,,,,,,,,,,,,,,,"03/Mar/09 18:15;semog;HTTP ERROR: 500

org.apache.activemq.broker.region.virtual.MirroredQueue$1 cannot be cast to org.apache.activemq.broker.region.Queue

RequestURI=/admin/purgeDestination.action
Caused by:

java.lang.ClassCastException: org.apache.activemq.broker.region.virtual.MirroredQueue$1 cannot be cast to org.apache.activemq.broker.region.Queue
	at org.apache.activemq.web.LocalBrokerFacade.purgeQueue(LocalBrokerFacade.java:71)
	at org.apache.activemq.web.controller.PurgeDestination.purgeDestination(PurgeDestination.java:43)
	at org.apache.activemq.web.controller.PurgeDestination.handleRequest(PurgeDestination.java:37)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:875)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:809)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)
","09/Sep/09 07:06;rajdavies;Fixed by svn revision 812790",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
optimizeDispatch=true and UseDedicatedTaskRunner=false lead to deadlocked queues,AMQ-2356,12483083,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,zakalwe,zakalwe,17/Aug/09 22:51,04/Sep/09 14:26,30/Jan/20 16:55,04/Sep/09 14:26,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"We have an environment where we have a very large number of destinations. In an effort to reduce the number of threads I have set the options

-Dorg.apache.activemq.UseDedicatedTaskRunner=false

and 

<policyEntry queue="">"" optimizedDispatch=""true""/>

Unfortunately this very quickly leads to deadlocked queues.

My environment is:

ActiveMQ 5.2
Ubunty Jaunty kernel 2.6.28-14-generic #47-Ubuntu SMP (although only a single core on my system)
TCP transportConnector

To reproduce the bug (which I can do 100% of the time) I connect 5 consumers (AUTO_ACK) to 5 different queues. Then I start 5 producers and pair them up with a consumer on a queue, and they start sending PERSISTENT messages. I've set the producer to send 100 messages and disconnect, and the consumer to receive 100 messages and disconnect. The first pair usually gets through their 100 messages and disconnect, at which point all the other pairs have deadlocked at less than 30 messages each.

At this point I can connect jconsole and hit the Detect Deadlock button and it finds the 4 deadlocks for me. The 4 deadlocks all have the same stacktraces, one of which looks like this:

{panel}
Name: ActiveMQ Transport: tcp:///127.0.0.1:49307
State: BLOCKED on java.lang.Object@f8828 owned by: ActiveMQ Transport: tcp:///127.0.0.1:48031
Total blocked: 3  Total waited: 1

Stack trace: 
org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:576)
org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:150)
org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1266)
org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1230)
org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1308)
org.apache.activemq.broker.region.Queue.iterate(Queue.java:1011)
org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1146)
org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1141)
org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:474)
org.apache.activemq.broker.region.Queue.send(Queue.java:417)
org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:350)
org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:437)
org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
...SpecialAuthorizationBroker.send(DynamicAuthorizationBroker.java:156)
org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:450)
org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
java.lang.Thread.run(Thread.java:595)

----------------------------------------------------------------------------------

Name: ActiveMQ Transport: tcp:///127.0.0.1:48031
State: BLOCKED on org.apache.activemq.broker.region.Queue$2@102d82c owned by: ActiveMQ Transport: tcp:///127.0.0.1:49307
Total blocked: 3  Total waited: 0

Stack trace: 
org.apache.activemq.broker.region.Queue.iterate(Queue.java:951)
org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1146)
org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1073)
org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:51)
org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:238)
org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:456)
org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
java.lang.Thread.run(Thread.java:595)
{panel}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-08-18 09:44:47.849,,,false,,,,,,,,,,,,,,,,,74971,,,Fri Sep 04 14:26:01 UTC 2009,,,,,,,,"0|i14ckn:",233500,,,,,,,,,,,,,,,,,,,"18/Aug/09 09:44;gtully;have you tried to reproduce with a 5.3-SNAPSHOT?","18/Aug/09 14:36;zakalwe;I just downloaded the latest 5.3-SNAPSHOT dated Mon Aug 17 18:51:55 GMT+00:00 2009 and I can repro the deadlock.","24/Aug/09 14:35;dave_stanley;Have you tried with the nio transport?","24/Aug/09 16:24;zakalwe;Yes, but only in 5.2. Unfortunately I can't get the NIO transport to work at all, doing anything. I haven't had time yet to track down if I have misconfigured it or something. I have a task to investigate the NIO transport further and log a bug if I can't get that working either.","04/Sep/09 14:26;rajdavies;Fixed by SVN revision 811425",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"in managed environment, 2 connections/session, UserTransaction, transaction management gets confused",AMQ-2346,12482864,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,djencks,djencks,05/Aug/09 16:13,03/Sep/09 15:56,30/Jan/20 16:55,03/Sep/09 15:56,5.3.0,,,,,,,5.3.0,,,JCA Container,,,,0,"In geronimo we're seeing an intermittent tck problem that seems to relate to a situation where there are:
-- a BMT stateless session ejb
-- two connections (I think these get shared to the same ManagedConnection)
-- two sessions
-- tx control through UT
-- send a message in one tx
-- receive message in a tx that is rolled back
-- receive message in a tx that is committed

In a public test case I'm seeing that the session proxies get confused about whether there is an active transaction.  This doesn't happen all the time but with a few repititions it happens consistently.

See GERONIMO-4784",,john.greeley,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-08-31 14:42:06.602,,,false,,,,,,,,,,,,,,,,,74974,,,Thu Sep 03 15:56:04 UTC 2009,,,,,,,,"0|i0s29b:",161842,,,,,,,,,,,,,,,,,,,"19/Aug/09 17:10;djencks;I've found a way to reproduce the problem in activemq.  See activemq-ra/src/test/java/org/apache/activemq/ra/JmsXARollback2CxTransactionTest.java

The test testRepeatReceiveTwoThenRollback is currently renamed so it doesnt run.

rev 805881","31/Aug/09 14:42;gtully;David, not sure what the best plan of action is here.

I worked through the test case and the problem is that there are two sessions and two XAResources and only one of those sessions is associated with the active connection so only one of those sessions will behave as expected when a transaction is rolled back.
The test holds two connections and two XAResources and alternates the commit/rollback between them. I find that the second iteration of the test always fails.

There is an additional problem in that  the second session/connection has an outstanding transaction when it is closed, as a result of the outstanding transaction, the close is deferred till the transaction commits, which never happens, thus we see the problems with ""javax.jms.InvalidClientIDException: Broker: localhost - Client: org.apache.activemq.test.JmsResourceProvider already connected from vm://localhost#4 on subsequent tests. 

My first though was that these connections should be presenting the same XAResource (somethng with isSameRM == true), Essentially an XAResoruce for the Broker. But it looks like the intention is that an XAResource maps to a session. Maybe this is the crux of the problem.

When dealing with the two sessions and XAResources, my thinking was that the test should be driving 2PC, but this does not work because the broker only sees one transaction branch and fails on a second prepare.

So I am thinking that the correct solution is to have a shared XAResource for the ResourceAdapter and have sessions just track the association. Not sure yet what all the ramifications are. What do you think?
","31/Aug/09 16:35;gtully;looks like http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/TransactionContext.java?view=log#rev581242 is relevant. That static could be the shared state we need.","31/Aug/09 17:02;djencks;Making ENDED_XA_TRANSACTION_CONTEXTS static in TransactionContext makes the test pass for me.  This variable doesn't make any sense unless it's static, as otherwise the only possible TransactionContext in the list is ""this"".

I'm not thrilled with introducing a static, in an osgi environment it would be better to have a service, but it seems like the best solution in a non-osgi environment.

Unfortunately I'm seeing a new problem, apparently a race condition between closing a connection and starting a new connection and setting clientId.  Adding a Thread.sleep(10) to JmsTransactionTestSupport reconnect sidesteps this problem...

Tests run: 17, Failures: 0, Errors: 15, Skipped: 0, Time elapsed: 2.022 sec <<< FAILURE!
testReceiveTwoThenCloseConnection(org.apache.activemq.ra.JmsXARollback2CxTransactionTest)  Time elapsed: 1.124 sec  <<< ERROR!
javax.jms.InvalidClientIDException: Broker: localhost - Client: org.apache.activemq.test.JmsResourceProvider already connected from vm://localhost#8
	at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:216)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
	at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:77)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:89)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:686)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:134)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:651)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:676)
	at java.lang.Thread.run(Thread.java:613)
","03/Sep/09 15:56;gtully;static back in place and made the removeCommand sync in transport connection to kill race condition with starting a new connection with the same clientId.

revision: r811003",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unsubscribing a durable subscriber does not properly clean up undelivered messages,AMQ-2052,12482865,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,01/Jan/09 12:10,03/Sep/09 15:51,30/Jan/20 16:55,03/Sep/09 15:51,5.3.0,,,,,,,5.3.0,,,Message Store,,,,2,"Working on the tck I found a lot of messages like 
2008-12-25 11:37:08,567 ERROR [RecoveryListenerAdapter] Message id ID:pb.local-56923-1230232035140-2:13:1:1:1 could not be recovered from the data store - already dispatched
in the log.  I can reproduce this with the attached test case (It could probably be in a better module, but I started looking here.)

To see the error put a breakpoint at RecoveryListenerAdapter line 61 and run the test.  The required steps to reproduce seem to be:

1. create a durable subscriber on a topic.
2. send a message to the topic.
3. close the subscriber and unsubscribe.
4. create a new durable subscriber on the same topic.",,jet3723,john.greeley,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jan/09 12:15;djencks;AMQ-2052-test.patch;https://issues.apache.org/jira/secure/attachment/12461281/AMQ-2052-test.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-06-19 13:57:40.296,,,false,,,,,,,,,,,,,,,,,75101,,,Thu Sep 03 15:51:07 UTC 2009,,,,,,,,"0|i0tsof:",171955,,,,,,,,,,,,,,,,,,,"01/Jan/09 12:15;djencks;Test case to deomonstrate the problem.  Note that the test passes, you have to put a breakpoint to see the problem.","01/Jan/09 20:18;djencks;The actual problem causing this is confusion over when to use a file-system-safened ID.  Fixed in rev 730596.

I'm also changing the RecoveryListenerAdapter to throw an exception when it gets into this inconsistent state. Rev 730598.

I may try to simplify when and where the file system safening occurs.  I also plan to move the test case to a better location.","01/Jan/09 20:28;djencks;Code inspection shows there are still a lot more confusions about when to use a file system safened name.","01/Jan/09 21:44;djencks;I think rev 730614 is an OK fix.... still need the test case.","02/Jan/09 19:12;djencks;One more major file name problem... rev 730817.  Surprisingly this only caused 13 test failures.","19/Jun/09 13:57;jet3723;What is the work around after the store gets into this state? Is there one?","25/Jun/09 16:22;gtully;David, are you done with this or is there more work needed to get the tck passing?","03/Sep/09 15:51;djencks;I've fixed all the problems I can find related to this so I'm closing this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client deadlock after IllegalMonitorStateException on server,AMQ-1599,12483034,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jpkutner,jpkutner,25/Feb/08 17:34,29/Aug/09 06:22,30/Jan/20 16:55,29/Aug/09 06:22,4.1.1,,,,,,,5.3.0,,,Broker,,,,0,"The server threw an IllegalMonitorStateException from:
org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:386)

This resulted in the FutureResponse on the client never reveiving a result.  Thus, the CountDownLatch in org.apache.activeio.journal.active.BatchedWrite never received a 'countDown()'.  This results in a the remaining Threads to block at:
org.apache.activeio.journal.active.JournalImpl.write(JournalImpl.java:171)

Here is the stack trace and log from the server:

---

DEBUG - 21/2 08:56:41 - Checkpoint started. - org.apache.activemq.store.journal.JournalPersistenceAdapter 336
ERROR - 21/2 08:56:41 - Failed to checkpoint a message store: java.lang.IllegalMonitorStateException - org.apache.activemq.store.journal.JournalPersistenceAdapter 395
java.lang.IllegalMonitorStateException
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.waitFor(FutureTask.java:267)
	at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.get(FutureTask.java:117)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:386)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$2.iterate(JournalPersistenceAdapter.java:129)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:117)
	at org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:619)
DEBUG - 21/2 08:56:41 - Marking journal at: 2:7588766 - org.apache.activemq.store.journal.JournalPersistenceAdapter 402
ERROR - 21/2 08:56:41 - Failed to mark the Journal: java.io.IOException: Write failed: java.lang.IllegalMonitorStateException - org.apache.activemq.store.journal.JournalPersistenceAdapter 407
java.io.IOException: Write failed: java.lang.IllegalMonitorStateException
	at org.apache.activeio.journal.active.JournalImpl.write(JournalImpl.java:197)
	at org.apache.activeio.journal.active.JournalImpl.setMark(JournalImpl.java:345)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:403)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$2.iterate(JournalPersistenceAdapter.java:129)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:117)
	at org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.IllegalMonitorStateException
	at java.lang.Object.notify(Native Method)
	at org.apache.activeio.journal.active.BatchedWrite.append(BatchedWrite.java:85)
	at org.apache.activeio.journal.active.JournalImpl.addToPendingWriteBatch(JournalImpl.java:222)
	at org.apache.activeio.journal.active.JournalImpl.write(JournalImpl.java:180)
	... 9 more

---

Here are the stack traces of the threads that were waiting:

---

Name: ActiveMQ Transport: tcp:///192.149.134.237:36752
State: WAITING on edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch@3952621c
Total blocked: 1  Total waited: 1

Stack trace:
java.lang.Object.wait(Native Method)
java.lang.Object.wait(Object.java:485)
edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:179)
org.apache.activeio.journal.active.BatchedWrite.waitForForce(BatchedWrite.java:96)
org.apache.activeio.journal.active.JournalImpl.write(JournalImpl.java:188)
org.apache.activeio.journal.active.JournalImpl.write(JournalImpl.java:158)
org.apache.activemq.store.journal.JournalPersistenceAdapter.writeCommand(JournalPersistenceAdapter.java:596)
org.apache.activemq.store.journal.JournalTransactionStore.commit(JournalTransactionStore.java:178)
org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:68)
org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:154)
org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:94)
org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:94)
org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:94)
org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:104)
org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:424)
   - locked org.apache.activemq.broker.jmx.ManagedTransportConnection@1c22c954
org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:99)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
java.lang.Thread.run(Thread.java:619)

---

Name: ActiveMQ Transport: tcp:///192.149.134.238:37558
State: BLOCKED on org.apache.activeio.journal.active.JournalImpl@1b93c5f owned by: Persistence Adaptor Task
Total blocked: 2  Total waited: 0

Stack trace: 
org.apache.activeio.journal.active.JournalImpl.write(JournalImpl.java:171)
org.apache.activeio.journal.active.JournalImpl.write(JournalImpl.java:158)
org.apache.activemq.store.journal.JournalPersistenceAdapter.writeCommand(JournalPersistenceAdapter.java:596)
org.apache.activemq.store.journal.JournalMessageStore.addMessage(JournalMessageStore.java:95)
org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:333)
org.apache.activemq.broker.region.Queue.send(Queue.java:326)
org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:292)
org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:382)
org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:193)
org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:98)
org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:498)
org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:604)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
java.lang.Thread.run(Thread.java:619)

----

Name: pool-flow.seda.gov.nasa.core.common.bc.persistence-1.0-thread-1489
State: WAITING on edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar@131653cd
Total blocked: 1  Total waited: 4

Stack trace: 
java.lang.Object.wait(Native Method)
java.lang.Object.wait(Object.java:485)
edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar.await(CondVar.java:75)
edu.emory.mathcs.backport.java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:318)
org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:42)
org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:75)
org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1171)
org.apache.activemq.TransactionContext.commit(TransactionContext.java:260)
org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:464)
gov.nasa.core.common.bc.persistence.jms.JMSProducer.commit(JMSProducer.java:51)
gov.nasa.core.common.bc.persistence.jms.ESBProducerWrapper.send(ESBProducerWrapper.java:55)
gov.nasa.core.common.bc.persistence.PersistenceComponent.produceMessage(PersistenceComponent.java:180)
gov.nasa.core.common.bc.persistence.PersistenceComponent.onActive(PersistenceComponent.java:93)
gov.nasa.esb.framework.jbi.AbstractNASAComponent.onMessageExchange(AbstractNASAComponent.java:157)
org.apache.servicemix.jbi.messaging.DeliveryChannelImpl.processInBound(DeliveryChannelImpl.java:593)
org.apache.servicemix.jbi.nmr.flow.AbstractFlow.doRouting(AbstractFlow.java:174)
org.apache.servicemix.jbi.nmr.flow.seda.SedaFlow.doRouting(SedaFlow.java:176)
org.apache.servicemix.jbi.nmr.flow.seda.SedaQueue$1.run(SedaQueue.java:134)
edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
java.lang.Thread.run(Thread.java:619)","Solaris , Others",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84517,,,2008-02-25 17:34:23.0,,,,,,,,"0|i181xz:",255117,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
hung connection - blocked on InactivityMonitor flush and socket write AMQ2012Test,AMQ-2351,12482360,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Aug/09 15:35,28/Aug/09 09:44,30/Jan/20 16:55,28/Aug/09 09:44,5.3.0,,,,,,,5.3.0,,,Transport,,,,0,"{code}
Thread dumps of activemq trunk :: Nightly Solaris #329
Loading...
Process tree:
Click on an item in the tree to view thread dump.
PID: 6726 /opt/tools/pfm/jdk/bin/java
PID: 7579 /bin/sh
PID: 7580 /opt/tools/pfm/jdk/jre/bin/java
Process ID (PID): 6726

Process command line
/opt/tools/pfm/jdk/bin/java -XX:MaxPermSize=192m -Xmx768M -DmavenOneRepository=

Thread t@988: (state = IN_NATIVE)
 - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=194 (Compiled frame)
 - sun.nio.cs.StreamDecoder$CharsetSD.readBytes() @bci=135, line=411 (Compiled frame)
 - sun.nio.cs.StreamDecoder$CharsetSD.implRead(char[], int, int) @bci=112, line=453 (Compiled frame)
 - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=183 (Compiled frame)
 - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=167 (Interpreted frame)
 - java.io.BufferedReader.fill() @bci=145, line=136 (Interpreted frame)
 - java.io.BufferedReader.readLine(boolean) @bci=44, line=299 (Compiled frame)
 - java.io.BufferedReader.readLine() @bci=2, line=362 (Compiled frame)


Thread t@987: (state = IN_NATIVE)
 - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=194 (Compiled frame)
 - java.io.BufferedInputStream.read1(byte[], int, int) @bci=39, line=254 (Compiled frame)
 - java.io.BufferedInputStream.read(byte[], int, int) @bci=49, line=313 (Compiled frame)
 - sun.nio.cs.StreamDecoder$CharsetSD.readBytes() @bci=135, line=411 (Compiled frame)
 - sun.nio.cs.StreamDecoder$CharsetSD.implRead(char[], int, int) @bci=112, line=453 (Compiled frame)
 - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=183 (Compiled frame)
 - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=167 (Interpreted frame)
 - java.io.BufferedReader.fill() @bci=145, line=136 (Interpreted frame)
 - java.io.BufferedReader.readLine(boolean) @bci=44, line=299 (Compiled frame)
 - java.io.BufferedReader.readLine() @bci=2, line=362 (Compiled frame)


Thread t@986: (state = IN_NATIVE)
 - java.lang.UNIXProcess.waitForProcessExit(int) @bci=0 (Interpreted frame)
 - java.lang.UNIXProcess.waitForProcessExit(int) @bci=0 (Interpreted frame)
 - java.lang.UNIXProcess.access$900(java.lang.UNIXProcess, int) @bci=2, line=17 (Interpreted frame)
 - java.lang.UNIXProcess$2$1.run() @bci=17, line=86 (Interpreted frame)


Thread t@64: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - java.util.TimerThread.mainLoop() @bci=28, line=483 (Interpreted frame)
 - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)


Thread t@27: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@26: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@25: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@24: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@23: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)
 - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@15: (state = BLOCKED)


Thread t@14: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.ref.ReferenceQueue.remove(long) @bci=44, line=116 (Interpreted frame)
 - java.lang.ref.ReferenceQueue.remove() @bci=2, line=132 (Interpreted frame)
 - java.lang.ref.Finalizer$FinalizerThread.run() @bci=3, line=159 (Interpreted frame)


Thread t@13: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - java.lang.ref.Reference$ReferenceHandler.run() @bci=46, line=116 (Interpreted frame)


Thread t@1: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - java.lang.UNIXProcess.waitFor() @bci=8, line=115 (Interpreted frame)
 - org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.CommandLineUtils.executeCommandLine(org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.Commandline, java.io.InputStream, org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.StreamConsumer, org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.StreamConsumer, int) @bci=121, line=146 (Interpreted frame)
 - org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.CommandLineUtils.executeCommandLine(org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.Commandline, org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.StreamConsumer, org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.StreamConsumer, int) @bci=5, line=98 (Interpreted frame)
 - org.apache.maven.surefire.booter.SurefireBooter.fork(java.util.Properties, boolean, boolean) @bci=241, line=673 (Interpreted frame)
 - org.apache.maven.surefire.booter.SurefireBooter.forkSuite(java.lang.Object[], java.lang.Object, boolean, boolean, java.util.Properties) @bci=35, line=493 (Interpreted frame)
 - org.apache.maven.surefire.booter.SurefireBooter.runSuitesForkPerTestSet() @bci=168, line=412 (Interpreted frame)
 - org.apache.maven.surefire.booter.SurefireBooter.run() @bci=62, line=249 (Interpreted frame)
 - org.apache.maven.plugin.surefire.SurefirePlugin.execute() @bci=44, line=537 (Interpreted frame)
 - org.apache.maven.plugin.DefaultPluginManager.executeMojo(org.apache.maven.project.MavenProject, org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession) @bci=412, line=483 (Interpreted frame)
 - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(java.util.List, java.util.Stack, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject) @bci=503, line=678 (Interpreted frame)
 - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(java.lang.String, java.util.Stack, org.apache.maven.execution.MavenSession, java.util.Map, org.apache.maven.project.MavenProject, org.apache.maven.lifecycle.Lifecycle) @bci=28, line=540 (Interpreted frame)
 - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(java.lang.String, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject) @bci=50, line=519 (Interpreted frame)
 - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(java.lang.String, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, org.apache.maven.monitor.event.EventDispatcher, java.lang.String, org.apache.maven.execution.ReactorManager, long, java.lang.String) @bci=4, line=371 (Interpreted frame)
 - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(java.util.List, org.apache.maven.execution.ReactorManager, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, org.apache.maven.monitor.event.EventDispatcher) @bci=584, line=332 (Interpreted frame)
 - org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(org.apache.maven.execution.MavenSession, org.apache.maven.execution.ReactorManager, org.apache.maven.monitor.event.EventDispatcher) @bci=241, line=181 (Interpreted frame)
 - org.apache.maven.DefaultMaven.doExecute(org.apache.maven.execution.MavenExecutionRequest, org.apache.maven.monitor.event.EventDispatcher) @bci=474, line=356 (Interpreted frame)
 - org.apache.maven.DefaultMaven.execute(org.apache.maven.execution.MavenExecutionRequest) @bci=26, line=137 (Interpreted frame)
 - org.apache.maven.cli.MavenCli.main(java.lang.String[], org.codehaus.classworlds.ClassWorld) @bci=880, line=356 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) @bci=0 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=87, line=39 (Interpreted frame)
 - sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=6, line=25 (Interpreted frame)
 - java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) @bci=111, line=585 (Interpreted frame)
 - org.codehaus.classworlds.Launcher.launchEnhanced(java.lang.String[]) @bci=50, line=315 (Interpreted frame)
 - org.codehaus.classworlds.Launcher.launch(java.lang.String[]) @bci=2, line=255 (Interpreted frame)
 - org.codehaus.classworlds.Launcher.mainWithExitCode(java.lang.String[]) @bci=99, line=430 (Interpreted frame)
 - org.codehaus.classworlds.Launcher.main(java.lang.String[]) @bci=1, line=375 (Interpreted frame)



Process ID (PID): 7579

Process command line
/bin/sh -c cd /x1/TeamCity/buildAgent/work/754220c26babe87e/activemq-fuse-trunk

Failed to get thread dump for non-java process

Process ID (PID): 7580

Process command line
/opt/tools/pfm/jdk/jre/bin/java -Xmx512M -jar /x1/TeamCity/buildAgent/temp/buil

Thread t@3341: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@3340: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@3339: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@3338: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@3337: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@384: (state = IN_NATIVE)
 - java.net.SocketOutputStream.socketWrite0(java.io.FileDescriptor, byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketOutputStream.socketWrite(byte[], int, int) @bci=44, line=92 (Compiled frame)
 - java.io.DataOutputStream.flush() @bci=4, line=106 (Compiled frame)
 - org.apache.activemq.transport.InactivityMonitor$3.run() @bci=31, line=139 (Interpreted frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.runTask(java.lang.Runnable) @bci=44, line=650 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=28, line=675 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@343: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)
 - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@342: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)
 - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@326: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)
 - java.util.concurrent.ArrayBlockingQueue.take() @bci=20, line=341 (Compiled frame)
 - org.apache.activemq.transport.FutureResponse.getResult() @bci=4, line=40 (Compiled frame)
 - org.apache.activemq.ActiveMQConnection.syncSendPacket(org.apache.activemq.command.Command) @bci=20, line=1244 (Compiled frame)
 - org.apache.activemq.TransactionContext.commit() @bci=124, line=282 (Compiled frame)
 - org.apache.activemq.ActiveMQSession.commit() @bci=76, line=510 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Producer$1.onMessage(javax.jms.Message) @bci=132, line=358 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.dispatch(org.apache.activemq.command.MessageDispatch) @bci=245, line=1080 (Compiled frame)
 - org.apache.activemq.ActiveMQSessionExecutor.dispatch(org.apache.activemq.command.MessageDispatch) @bci=50, line=127 (Compiled frame)
 - org.apache.activemq.thread.PooledTaskRunner.runTask() @bci=65, line=122 (Compiled frame)
 - org.apache.activemq.thread.PooledTaskRunner$1.run() @bci=15, line=43 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.runTask(java.lang.Runnable) @bci=44, line=650 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=28, line=675 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@313: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)
 - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@312: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)
 - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@311: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)
 - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@308: (state = BLOCKED)
 - org.apache.activemq.transport.InactivityMonitor.oneway(java.lang.Object) @bci=6, line=224 (Compiled frame; information may be imprecise)
 - org.apache.activemq.transport.TransportFilter.oneway(java.lang.Object) @bci=5, line=83 (Compiled frame)
 - org.apache.activemq.transport.MutexTransport.oneway(java.lang.Object) @bci=12, line=40 (Compiled frame)
 - org.apache.activemq.broker.TransportConnection.dispatchSync(org.apache.activemq.command.Command) @bci=2, line=759 (Compiled frame)
 - org.apache.activemq.transport.TransportFilter.onCommand(java.lang.Object) @bci=5, line=68 (Compiled frame)
 - org.apache.activemq.transport.InactivityMonitor.onCommand(java.lang.Object) @bci=129, line=210 (Compiled frame)
 - org.apache.activemq.transport.TransportSupport.doConsume(java.lang.Object) @bci=16, line=84 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.doRun() @bci=7, line=203 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@307: (state = IN_NATIVE)
 - java.net.SocketOutputStream.socketWrite0(java.io.FileDescriptor, byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketOutputStream.socketWrite(byte[], int, int) @bci=44, line=92 (Compiled frame)
 - java.io.DataOutputStream.flush() @bci=4, line=106 (Compiled frame)
 - org.apache.activemq.transport.InactivityMonitor.onCommand(java.lang.Object) @bci=45, line=189 (Compiled frame)
 - org.apache.activemq.transport.TransportSupport.doConsume(java.lang.Object) @bci=16, line=84 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.doRun() @bci=7, line=203 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@295: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)
 - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@294: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@293: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@291: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@289: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@287: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@284: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@282: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@280: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@278: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@275: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@272: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@271: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@270: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@269: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@268: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@267: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@266: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@265: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@264: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@263: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@252: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@251: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@250: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@249: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@248: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@247: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer, javax.jms.MessageProducer) @bci=69, line=203 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@246: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@245: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@244: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@243: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)
 - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@242: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.TimerThread.mainLoop() @bci=201, line=509 (Compiled frame)
 - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)


Thread t@241: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.TimerThread.mainLoop() @bci=201, line=509 (Compiled frame)
 - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)


Thread t@239: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@237: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@233: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - java.lang.Object.wait() @bci=2, line=474 (Compiled frame)
 - org.apache.activemq.kaha.impl.async.DataFileAppender$2.run() @bci=4, line=227 (Interpreted frame)


Thread t@230: (state = IN_NATIVE)
 - java.net.PlainSocketImpl.socketAccept(java.net.SocketImpl) @bci=0 (Interpreted frame)
 - java.net.PlainSocketImpl.socketAccept(java.net.SocketImpl) @bci=0 (Interpreted frame)
 - java.net.PlainSocketImpl.accept(java.net.SocketImpl) @bci=7, line=384 (Interpreted frame)
 - java.net.ServerSocket.implAccept(java.net.Socket) @bci=50, line=450 (Interpreted frame)
 - java.net.ServerSocket.accept() @bci=48, line=421 (Interpreted frame)
 - org.apache.activemq.transport.tcp.TcpTransportServer.run() @bci=13, line=280 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@229: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)
 - org.apache.activemq.transport.tcp.TcpTransportServer$1.run() @bci=31, line=352 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@227: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.ref.ReferenceQueue.remove(long) @bci=44, line=116 (Interpreted frame)
 - java.lang.ref.ReferenceQueue.remove() @bci=2, line=132 (Interpreted frame)
 - sun.rmi.transport.ObjectTable$Reaper.run() @bci=3, line=336 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@225: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - java.lang.Object.wait() @bci=2, line=474 (Compiled frame)
 - org.apache.activemq.kaha.impl.async.DataFileAppender$2.run() @bci=4, line=227 (Interpreted frame)


Thread t@44: (state = BLOCKED)
 - java.lang.Thread.sleep(long) @bci=0 (Interpreted frame)
 - java.lang.Thread.sleep(long) @bci=0 (Interpreted frame)
 - sun.rmi.transport.DGCImpl$LeaseChecker.run() @bci=3, line=310 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@39: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.ref.ReferenceQueue.remove(long) @bci=44, line=116 (Interpreted frame)
 - sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run() @bci=95, line=501 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@32: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - sun.misc.GC$Daemon.run() @bci=51, line=100 (Interpreted frame)


Thread t@30: (state = IN_NATIVE)
 - java.net.PlainSocketImpl.socketAccept(java.net.SocketImpl) @bci=0 (Interpreted frame)
 - java.net.PlainSocketImpl.socketAccept(java.net.SocketImpl) @bci=0 (Interpreted frame)
 - java.net.PlainSocketImpl.accept(java.net.SocketImpl) @bci=7, line=384 (Interpreted frame)
 - java.net.ServerSocket.implAccept(java.net.Socket) @bci=50, line=450 (Interpreted frame)
 - java.net.ServerSocket.accept() @bci=48, line=421 (Interpreted frame)
 - sun.rmi.transport.tcp.TCPTransport.run() @bci=59, line=340 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@27: (state = IN_NATIVE)
Error occurred during stack walking:


Thread t@26: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - java.util.TimerThread.mainLoop() @bci=28, line=483 (Interpreted frame)
 - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)


Thread t@21: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.TimerThread.mainLoop() @bci=201, line=509 (Compiled frame)
 - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)


Thread t@15: (state = BLOCKED)


Thread t@14: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.ref.ReferenceQueue.remove(long) @bci=44, line=116 (Interpreted frame)
 - java.lang.ref.ReferenceQueue.remove() @bci=2, line=132 (Interpreted frame)
 - java.lang.ref.Finalizer$FinalizerThread.run() @bci=3, line=159 (Interpreted frame)


Thread t@13: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)
 - java.lang.Object.wait() @bci=2, line=474 (Compiled frame)
 - java.lang.ref.Reference$ReferenceHandler.run() @bci=46, line=116 (Interpreted frame)


Thread t@1: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)
 - java.util.concurrent.ArrayBlockingQueue.take() @bci=20, line=341 (Compiled frame)
 - org.apache.activemq.transport.FutureResponse.getResult() @bci=4, line=40 (Compiled frame)
 - org.apache.activemq.ActiveMQConnection.syncSendPacket(org.apache.activemq.command.Command) @bci=20, line=1244 (Compiled frame)
 - org.apache.activemq.TransactionContext.commit() @bci=124, line=282 (Compiled frame)
 - org.apache.activemq.ActiveMQSession.commit() @bci=76, line=510 (Compiled frame)
 - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages(javax.jms.Session, javax.jms.Destination, javax.jms.MessageConsumer) @bci=41, line=372 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages(javax.jms.Session, javax.jms.Destination) @bci=14, line=313 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages(javax.jms.Session) @bci=12, line=300 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages(org.apache.activemq.ActiveMQConnection) @bci=11, line=280 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages() @bci=24, line=262 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test$Producer.execute(java.lang.String[]) @bci=1, line=248 (Interpreted frame)
 - org.apache.activemq.bugs.AMQ2102Test.testMasterSlaveBug() @bci=70, line=487 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) @bci=0 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=87, line=39 (Interpreted frame)
 - sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=6, line=25 (Interpreted frame)
 - java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) @bci=111, line=585 (Interpreted frame)
 - junit.framework.TestCase.runTest() @bci=107, line=168 (Interpreted frame)
 - junit.framework.TestCase.runBare() @bci=7, line=134 (Interpreted frame)
 - org.apache.activemq.CombinationTestSupport.runBare() @bci=8, line=90 (Interpreted frame)
 - org.apache.activemq.CombinationTestSupport.runBare() @bci=53, line=96 (Interpreted frame)
 - junit.framework.TestResult$1.protect() @bci=4, line=110 (Interpreted frame)
 - junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable) @bci=1, line=128 (Interpreted frame)
 - junit.framework.TestResult.run(junit.framework.TestCase) @bci=18, line=113 (Interpreted frame)
 - junit.framework.TestCase.run(junit.framework.TestResult) @bci=2, line=124 (Interpreted frame)
 - junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult) @bci=2, line=232 (Interpreted frame)
 - junit.framework.TestSuite.run(junit.framework.TestResult) @bci=40, line=227 (Interpreted frame)
 - org.junit.internal.runners.JUnit38ClassRunner.run(org.junit.runner.notification.RunNotifier) @bci=21, line=81 (Interpreted frame)
 - org.apache.maven.surefire.junit4.JUnit4TestSet.execute(org.apache.maven.surefire.report.ReporterManager, java.lang.ClassLoader) @bci=30, line=62 (Interpreted frame)
 - org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(org.apache.maven.surefire.testset.SurefireTestSet, org.apache.maven.surefire.report.ReporterManager, java.lang.ClassLoader) @bci=43, line=140 (Interpreted frame)
 - org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(java.lang.String, org.apache.maven.surefire.report.ReporterManager, java.lang.ClassLoader) @bci=74, line=165 (Interpreted frame)
 - org.apache.maven.surefire.Surefire.run(java.util.List, java.lang.Object[], java.lang.String, java.lang.ClassLoader, java.lang.ClassLoader, java.util.Properties, java.lang.Boolean) @bci=92, line=107 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) @bci=0 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=87, line=39 (Interpreted frame)
 - sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=6, line=25 (Interpreted frame)
 - java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) @bci=111, line=585 (Interpreted frame)
 - org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(java.lang.String, java.util.Properties) @bci=361, line=289 (Interpreted frame)
 - org.apache.maven.surefire.booter.SurefireBooter.main(java.lang.String[]) @bci=717, line=1005 (Interpreted frame)
{code}",,john.greeley,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74972,,,Fri Aug 28 09:44:02 UTC 2009,,,,,,,,"0|i0s1rr:",161763,Unit Test Broken,,,,,,,,,,,,,,,,,,"07/Aug/09 15:37;gtully;looks like InactivityMonitor has two threads active on its underlying transport - one sending a keepalive and the other responding to a keep alive (both threads with flush() in the stack trace). These events need to be synchronized. Why exactly this can cause write to hang needs some more investigation.","07/Aug/09 16:27;gtully;seems odd that we reply to a keepalive, was introduced a good while back: http://svn.apache.org/viewvc?view=rev&revision=631965 
rational seems to be with very low inactivity durations, a reply would keep traffic running though the connection at very regular intervals - as fast as possible that is so to reduce inactivity timeouts.

it may make sense to make this capability optional as the norm is not to use very short inactivity durations.","28/Aug/09 09:44;gtully;made keepAliveResponseRequired optional and defaulted to false. The use case for requiring a response is extremely low inactivity timeouts, of the order of 100 miliseconds. If that requirement becomes a necessity again this can be revisited with some more state management or via some alternative solution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
File leak in KahaDB file lock - slave exhausts OS fd limit,AMQ-2366,12482852,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Aug/09 15:19,26/Aug/09 15:21,30/Jan/20 16:55,26/Aug/09 15:19,5.3.0,,,,,,,5.3.0,,,Message Store,,,,0,"If I follow the logs, the slave brokers emit this message for a while:
 
Database /opt/fusemq/data/dev-broker1/kahadb/lock is locked... waiting 10 seconds for the database to be unlocked. Reason: java.io.IOException: File '/opt/fusemq/data/dev-broker1/kahadb/lock' could
not be locked.
 
Then, it switches to
 
Database /opt/fusemq/data/dev-broker1/kahadb/lock is locked... waiting 10 seconds for the database to be unlocked. Reason: java.io.FileNotFoundException: /opt/fusemq/data/dev-broker1/kahadb/lock (Too many open files)

lsof shows loads of fds allocated to the slave broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74965,,,Wed Aug 26 15:21:19 UTC 2009,,,,,,,,"0|i17l7z:",252407,,,,,,,,,,,,,,,,,,,"26/Aug/09 15:19;gtully;fix applied to r808041","26/Aug/09 15:21;gtully;KahaDB persistence configured as follows:

<persistenceAdapter>
            <!-- Config for high throughput, default max file size is 32 MiB. -->
            <kahaDB
                directory=""${activemq.base}/data""
                indexWriteBatchSize=""1000""
                enableIndexWriteAsync=""true""
                enableJournalDiskSyncs=""false""
            />
  </persistenceAdapter>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
staticallyIncludedDestinations set in a Network of Brokers results in duplicate messages,AMQ-2359,12482582,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,19/Aug/09 15:16,20/Aug/09 10:17,30/Jan/20 16:55,20/Aug/09 10:17,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"When you include statically destinations with wildcards, such as

{code}<staticallyIncludedDestinations>
  <topic physicalName="">""/>
</staticallyIncludedDestinations>{code}

you will receive duplicate messages on the receive broker side. The problem is the reversed destination filter matching while adding an interest to the demandsubscription in the conduit bridge. It will not match that we already have a consumer for all destinations and will add another consumer for the particular destination.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74968,,,Thu Aug 20 10:17:34 UTC 2009,,,,,,,,"0|i14c9b:",233449,,,,,,,,,,,,,,,,,,,"20/Aug/09 10:17;dejanb;Fixed with SVN revision 806107",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some destination filters don't take destination type into account,AMQ-2360,12482536,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,20/Aug/09 08:01,20/Aug/09 10:14,30/Jan/20 16:55,20/Aug/09 10:14,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"Wildcard and prefix destination filters, will match queues and topics in the same path.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74967,,,Thu Aug 20 10:14:42 UTC 2009,,,,,,,,"0|i14can:",233455,,,,,,,,,,,,,,,,,,,"20/Aug/09 10:14;dejanb;Fixed with SVN revision 806105",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-book module fails to build,AMQ-2357,12482307,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,18/Aug/09 09:02,18/Aug/09 09:03,30/Jan/20 16:55,18/Aug/09 09:03,5.3.0,,,,,,,5.3.0,,,,,,,0,We need to upgrade to docbx plugin 2.0.9 as 2.0.3 is not available any more,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74970,,,Tue Aug 18 09:03:53 UTC 2009,,,,,,,,"0|i182q7:",255244,,,,,,,,,,,,,,,,,,,"18/Aug/09 09:03;dejanb;Resolved in SVN revision 805327",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long,AMQ-1863,12483079,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,dingratta,dingratta,21/Jul/08 14:20,14/Aug/09 13:10,30/Jan/20 16:55,14/Aug/08 17:45,4.0.2,,,,,,,5.1.0,,,Broker,,,,0,"I have web client which uses jetty configured through servicemix which intermittently throws an activemq.transport.InactivityIOException. The problem is reported in a solaris environment and I have been able to reproduce this issue with Redhat Linux AdvancedServer 2.1 after an extended period of no web client activity for about 2 days.

I have tried setting maxInactivityDuration = 0 (at the web client end) and have also tried applying the patch (changes to Transport.InactivityMonitor.java) mentioned in AMQ-1146 to 4.0.2 but the issue still occurs.

It appears that this issue has been ongoing as there are similar issues resolved in 5.1.

Is this issue resolved in 4.1 or must I upgrade to 5.1 to resolve this issue?

Below is exception message from the servicemix.log and the activemq.xml confguration file is attached.

15:25:19,414 | WARN  | btpool0-10922 | jetty                    | ervicemix.http.jetty.JCLLogger   93 | /ecli/: 
java.lang.Exception: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Channel was inactive for too long.; nested exception is org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.
	at org.apache.servicemix.http.processors.ConsumerProcessor.process(ConsumerProcessor.java:202)
	at org.apache.servicemix.http.HttpBridgeServlet.doPost(HttpBridgeServlet.java:71)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:615)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:688)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:443)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:356)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:179)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:615)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:149)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:123)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:141)
	at org.mortbay.jetty.Server.handle(Server.java:269)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:430)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:333)
	at org.mortbay.jetty.nio.HttpChannelEndPoint.run(HttpChannelEndPoint.java:270)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)
Caused by: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Channel was inactive for too long.; nested exception is org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.
	at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:194)
	at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:162)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:432)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:485)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:471)
	at org.apache.servicemix.components.jms.JmsSenderComponent.process(JmsSenderComponent.java:81)
	at org.apache.servicemix.components.util.OutBinding.onMessageExchange(OutBinding.java:49)
	at org.apache.servicemix.jbi.messaging.DeliveryChannelImpl.processInBound(DeliveryChannelImpl.java:624)
	at org.apache.servicemix.jbi.nmr.flow.AbstractFlow.doRouting(AbstractFlow.java:169)
	at org.apache.servicemix.jbi.nmr.flow.seda.SedaFlow.doRouting(SedaFlow.java:177)
	at org.apache.servicemix.jbi.nmr.flow.seda.SedaQueue$1.run(SedaQueue.java:227)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Channel was inactive for too long.
	at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1171)
	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:270)
	at org.apache.activemq.pool.SessionPool.createSession(SessionPool.java:112)
	at org.apache.activemq.pool.SessionPool.makeObject(SessionPool.java:80)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)
	at org.apache.activemq.pool.SessionPool.borrowSession(SessionPool.java:55)
	at org.apache.activemq.pool.ConnectionPool.createSession(ConnectionPool.java:70)
	at org.apache.activemq.pool.PooledConnection.createSession(PooledConnection.java:129)
	at org.springframework.jms.core.JmsTemplate.createSession(JmsTemplate.java:826)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:420)
	... 11 more
Caused by: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.
	at org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:101)
	at org.apache.activemq.transport.InactivityMonitor.access$000(InactivityMonitor.java:35)
	at org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:51)
	at edu.emory.mathcs.backport.java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:431)
	at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.runAndReset(FutureTask.java:198)
	at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:189)
	at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:213)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	... 1 more",RedHat Linux,xbhanu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jul/08 14:20;dingratta;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12461168/ASF.LICENSE.NOT.GRANTED--activemq.xml",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-08-14 17:45:07.525,,,false,,,,,,,,,,,,,,,,,84411,,,Fri Aug 14 12:52:56 UTC 2009,,,,,,,,"0|i0ku27:",119688,,,,,,,,,,,,,,,,,,,"14/Aug/08 17:45;rajdavies;This is fixed in 5.1","14/Aug/09 12:52;activemq_user;You told that the bug has been fixed in 5.1 version. I'm actually using the 5.2 version and it's still not working... 
Can you confirm that it's really fixed in 5.2 version please?

We are using Mule 2.2 
here is my activemq config  file:

<beans 
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:context=""http://www.springframework.org/schema/context""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd"">

  <amq:broker brokerName=""amqBroker"" useJmx=""true"" persistent=""true"">
    
    <amq:persistenceAdapter>
      <amq:kahaPersistenceAdapter directory=""activemq-data"" maxDataFileLength=""33554432"" />
    </amq:persistenceAdapter>
    
    <amq:transportConnectors>
      <amq:transportConnector  uri=""tcp://localhost:61616?jms.watchTopicAdvisories=false"" />
    </amq:transportConnectors>
  </amq:broker> 
  
</beans>


Here is the stack trace with activemq 4.1 :

Caused by: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.
 at org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:101)
 at org.apache.activemq.transport.InactivityMonitor.access$000(InactivityMonitor.java:35)
 at org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:51)
 at edu.emory.mathcs.backport.java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:442)
 at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.runAndReset(FutureTask.java:200)
 at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:151)
 at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:263)


Here is the stack trace with activemq 5.2 :

Caused by: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: localhost/127.0.0.1:61616
    at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:225)
    at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83)
    at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:100)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
    at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1214)


thanks a lot for your response.

  John
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.ArrayIndexOutOfBoundsException in org.apache.activemq.util.IntrospectionSupport.<clinit>(IntrospectionSupport.java:52),AMQ-2350,12482713,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Aug/09 13:09,07/Aug/09 13:17,30/Jan/20 16:55,07/Aug/09 13:17,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"The reading and setting of the PropertyEditorManager needs to be synchronized to protect against concurrent modification

{code}     [java] java.lang.ExceptionInInitializerError
     [java] at org.apache.activemq.ActiveMQConnectionFactory.setBrokerURL(ActiveMQConnectionFactory.java:362)
     [java] at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:132)
     [java] at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:128)
     [java] at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:124)
     [java] at org.apache.activemq.jndi.ActiveMQInitialContextFactory.createConnectionFactory(ActiveMQInitialContextFactory.java:201)
     [java] at org.apache.activemq.jndi.ActiveMQInitialContextFactory.createConnectionFactory(ActiveMQInitialContextFactory.java:140)
     [java] at org.apache.activemq.jndi.ActiveMQInitialContextFactory.getInitialContext(ActiveMQInitialContextFactory.java:65)
     [java] at javax.naming.spi.NamingManager.getInitialContext(NamingManager.java:667)
     [java] at javax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:288)
     [java] at javax.naming.InitialContext.init(InitialContext.java:223)
     [java] at javax.naming.InitialContext.<init>(InitialContext.java:197)
     [java] at org.spec.perfharness.jms.providers.JNDI.getInitialContext(JNDI.java:295)
     [java] at org.spec.perfharness.jms.providers.JNDI.lookupConnectionFactoryFromJNDI(JNDI.java:310)
     [java] at org.spec.perfharness.jms.providers.JNDI.lookupConnectionFactory(JNDI.java:218)
     [java] at org.spec.jms.agents.SPECWorkerThread.<init>(SPECWorkerThread.java:217)
     [java] at org.spec.jms.eventhandler.hq.HQ_InvoiceEH.<init>(HQ_InvoiceEH.java:42)
     [java] at org.spec.jms.agents.hq.HQControlThread.createEventHandlers(HQControlThread.java:71)
     [java] at org.spec.jms.agents.SPECControlThread.run(SPECControlThread.java:305)
     [java] Caused by: java.lang.ArrayIndexOutOfBoundsException
     [java] at java.lang.System.arraycopy(Native Method)
     [java] at org.apache.activemq.util.IntrospectionSupport.<clinit>(IntrospectionSupport.java:52)
     [java] ... 18 more{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74973,,,Fri Aug 07 13:17:45 UTC 2009,,,,,,,,"0|i14cuf:",233544,,,,,,,,,,,,,,,,,,,"07/Aug/09 13:17;gtully;fixed in r801989",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stomp: Transport failed: java.io.IOException: Unexpected error occured,AMQ-2280,12483075,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,aivanise,aivanise,04/Jun/09 14:12,07/Aug/09 09:20,30/Jan/20 16:55,07/Aug/09 09:20,5.3.0,,,,,,,5.3.0,,,Broker,Connector,,,0,"
This does not happen in 5.2.0, only in 5.3..SNAPSHOT 

I'm getting the above exception with the following STOMP session


> telnet localhost 61613
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
CONNECT
passcode:password
login:login

^@
CONNECTED
session:ID:alex-60773-1244124360289-2:2


SUBSCRIBE
activemq.prefetchSize:1
ack:client
destination:/queue/COMMAND.HOST.alex
activemq.exclusive:true

^@
BEGIN
destination:/queue/COMMANDREPLY.HOST.alex
transaction:ID:alex-58262-1244123488785-2:1-1
persistent:true

^@
SEND
destination:/queue/COMMANDREPLY.HOST.alex
transaction:ID:alex-58262-1244123488785-2:1-1
receipt:ID:alex-58262-1244123488785-2:1-2
persistent:true

replytext
^@
RECEIPT
receipt-id:ID:alex-58262-1244123488785-2:1-2


COMMIT
destination:/queue/COMMANDREPLY.HOST.alex
transaction:ID:alex-58262-1244123488785-2:1-1

^@
Connection closed by foreign host.


at this point AMQ closses the TCP connection and I see the following in the log (DEBUG root log level):

DEBUG TransportConnection            - Setting up new connection: /127.0.0.1:44692
DEBUG AMQPersistenceAdapter          - dataFilesInProgress.values: (0) []
DEBUG AMQPersistenceAdapter          - lastDataFile: 1
DEBUG AsyncDataManager               - lastFileId=0, purgeList: (0) []
DEBUG AbstractRegion                 - localhost adding consumer: ID:alex-60773-1244124360289-2:2:-1:1 for destination: queue://COMMAND.HOST.alex
DEBUG AMQPersistenceAdapter          - Checkpoint started.
DEBUG AMQPersistenceAdapter          - Checkpoint done.
DEBUG AMQPersistenceAdapter          - Checkpoint started.
DEBUG AMQPersistenceAdapter          - Checkpoint done.
DEBUG AMQPersistenceAdapter          - dataFilesInProgress.values: (0) []
DEBUG AMQPersistenceAdapter          - lastDataFile: 1
DEBUG AsyncDataManager               - lastFileId=0, purgeList: (0) []
DEBUG AMQPersistenceAdapter          - Checkpoint started.
DEBUG AMQPersistenceAdapter          - Checkpoint done.
DEBUG AMQMessageStore                - Journalled transacted message add for: ID:alex-60773-1244124360289-2:2:-1:1:1, at: offset = 10973, file = 1, size = 375, type = 1
DEBUG AMQPersistenceAdapter          - dataFilesInProgress.values: (0) []
DEBUG AMQPersistenceAdapter          - lastDataFile: 1
DEBUG AsyncDataManager               - lastFileId=0, purgeList: (0) []
DEBUG AMQPersistenceAdapter          - Checkpoint started.
DEBUG AMQPersistenceAdapter          - Checkpoint done.
DEBUG Transport                      - Transport failed: java.io.IOException: Unexpected error occured
java.io.IOException: Unexpected error occured
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:192)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.util.NoSuchElementException
	at java.util.LinkedList.getFirst(LinkedList.java:109)
	at org.apache.activemq.transport.stomp.StompSubscription.onStompCommit(StompSubscription.java:130)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommit(ProtocolConverter.java:337)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:179)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:67)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	... 1 more
DEBUG TransportConnection            - Stopping connection: /127.0.0.1:44692
DEBUG TcpTransport                   - Stopping transport tcp:///127.0.0.1:44692
DEBUG TransportConnection            - Stopped transport: /127.0.0.1:44692
DEBUG TransportConnection            - Cleaning up connection resources: /127.0.0.1:44692
DEBUG AbstractRegion                 - localhost removing consumer: ID:alex-60773-1244124360289-2:2:-1:1 for destination: queue://COMMAND.HOST.alex
DEBUG LocalTransaction               - rollback: TX:ID:alex-60773-1244124360289-2:2:1 syncCount: 3
DEBUG AMQMessageStore                - Transacted message add rollback for: ID:alex-60773-1244124360289-2:2:-1:1:1, at: offset = 10973, file = 1, size = 375, type = 1
DEBUG TransportConnection            - Connection Stopped: /127.0.0.1:44692
","linux  2.6.26.8, Fedora Core 8

java version ""1.6.0_11""
Java(TM) SE Runtime Environment (build 1.6.0_11-b03)
Java HotSpot(TM) Client VM (build 11.0-b16, mixed mode, sharing)

apache-activemq-5.3-SNAPSHOT-bin.gz   	 Fri May 29 06:12:47 GMT+00:00 2009  	 34977374  	   ",aivanise,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/09 20:35;gseben;AMQ-2280.patch;https://issues.apache.org/jira/secure/attachment/12461557/AMQ-2280.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-07-14 20:33:42.985,,,false,,,,,,,,,,,,,,,,,74998,,,Fri Aug 07 09:20:28 UTC 2009,,,,,,,,"0|i0s1dz:",161701,,,,,,,,,,,,,,,,,,,"14/Jul/09 20:33;gseben;I was reviewing this report and I found the problem that generates this exception. 

In the particular case shown here, when commiting a transaction the broker will attempt to commit messages received by the subscriber created before the transaction. 
{code}
SUBSCRIBE
activemq.prefetchSize:1
ack:client
destination:/queue/COMMAND.HOST.alex
activemq.exclusive:true
{code}
Since there are no messages there to be commited it fails when doing a lookup on the message subscription linked list. 

Stomp transactions are based only on the transaction ID. The sample here assumes that the transaction is tied to the destination which is not the case. In this case the destination parameter passed in the BEGIN and COMMIT statements is simply ignored by the stomp transport. They are not part of the protocol specification AFAIK. Since mixing multiple transacted and non-transacted destinations within the same stomp connection will cause problems I added a simple check that will warn the user about this issue.  ","16/Jul/09 17:43;aivanise;Hi,

Many thanks for the patch, I'll try to test as soon as it gets comitted or i find the time to build amq myself, whichever comes first :)

Sending destination in BEGIN frame was an error, I have since corrected that.

However I'm intrigued by your statement that ""Mixing multiple transacted and non-transacted destinations within the same stomp connection will cause problems""

Can you elaborate on this? What is a ""transacted destination"" if, as you said, transactions are not dependent on the destinations?

What kind of problems can I expect? Can you point me to some documentation? I thought that, like in SQL, i can BEGIN, send MESSAGEs and then either COMMIT or ABORT and all the messages in between will either be sent or discarded.

Many thanks for your insights.","06/Aug/09 20:03;gseben;Hi,

The patch that I'm suggesting is a simple check on the code to try to avoid this situation since in my opinion without a more fine grained definition of transactions with Stomp would be required.

Let me try to explain this a bit better. 
The particular problem with the snippet of stomp code that you attached to this report is that it first subscribes to destination ""/queue/COMMAND.HOST.alex"" and then you tries to send transacted messages to ""/queue/COMMANDREPLY.HOST.alex"".  Since stomp transactions are bound only by the transactionID the logic in the code needs to check *all* destinations used in a connection for messages to commit. In this case the exception happens because there is nothing to be commited at ""/queue/COMMAND.HOST.alex"".

The bottom line is that since BEGIN doesn't take a destination as a parameter there is no way to identify for which destination you are starting a transaction and that's the reason why all destinations for the current connection have to be checked for messages to be commited.

My recommendation is that if you use transactions, don't use more than one destination per connection. This way you avoid the confusion of which destination the transaction is actually supposed to be for.

Hope that this clarifies some of your questions.","07/Aug/09 08:21;aivanise;
Just to confirm that I have split the sending and receiving part of my client into separate connections and that appears to have ""fixed"" the problem.

I still don't see anything both in the STOMP spec and common sense that would be against mixing transacted and non-transacted statements in one connection, so IMO this is a bug in AMQ STOMP, not in my usage (if we don't count sending a destination in BEGIN frame which is clearly an error).","07/Aug/09 09:20;dejanb;Fixed in SVN revision 801916, by checking if the subscriber has some messages in the tx, before sending ack. Please check it out by building the current trunk (or trying the next nightly build).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transactions used in a JDBC store WITHOUT a journal will not commit the UOW in an atomic operation,AMQ-1886,12483064,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,chirino,chirino,14/Aug/08 16:17,06/Aug/09 11:49,30/Jan/20 16:55,06/Aug/09 11:49,5.1.0,,,,,,,5.3.0,,,,,,,1,"The JDBC store's primary use case has always been to be used in conjunction with the journal.  When the journal is in place it recovers any partially committed transaction and makes the JDBC store consistent.  When the journal is not used, for example when you are setting up an HA solution with an HA JDBC database, then it has been noticed that on a DB failure you may get partial commits of JMS transactions.
",,john.greeley,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-08-18 21:35:11.701,,,false,,,,,,,,,,,,,,,,,84739,,,Thu Aug 06 11:49:40 UTC 2009,,,,,,,,"0|i0s1dj:",161699,,,,,,,,,,,,,,,,,,,"14/Aug/08 17:22;chirino;Fixed in rev 685966","18/Aug/08 21:35;tmielke;I don't think AMQ-1886 is entirely fixed yet. The error handling still needs improvements. 

Assuming the MySQLJDBCAdapter class uses batchStatements (which seems the default for MySQL and Oracle and surely others), the call to MySQLJDBCAdapter.doAddMessage() only adds the SQL statements to the batch, it does not execute the statements:

{code:title=DefaultJDBCAdapter.doAddMessage()}
if (batchStatments) {
   s.addBatch();
} 
{code}

At the end of MemoryTransactionStore.commit() we call persistenceAdapter.commitTransaction(ctx), which calls into TransactionContext.commit() and this is where we execute the SQL statements in executeBatch(). 
{code:title=TransactionContext.commit()}
public void commit() throws IOException {
        if (!inTx) {
            throw new IOException(""Not started."");
        }
        try {
            executeBatch();
            if (!connection.getAutoCommit()) {
                connection.commit();
            }
        } catch (SQLException e) {
            JDBCPersistenceAdapter.log(""Commit failed: "", e);
            throw IOExceptionSupport.create(e);
        } finally {
            inTx = false;
            close();
        }
    }
{code}
So far all is fine.

Now, lets assume an sql exception is caught during the call to executeBatch(). Before re-raising the ex, we run the finally clause in TransactionContext.commit(), which currently sets inTx=false prior to calling close().

Inside close() we again check for inTx and since it was set to false already (in finally clause), we run executeBatch() again, this time without a transaction. This will result in some message being written directly to the db until we hit another sql exception.

IMHO, the finally clause in TransactionContext.commit() should swap the order and call close() first before setting inTx=false.

{code:title=TransactionContext.commit()}
...
finally {
  close();
  inTx = false;
}
{code}

What do you think?

Then there is a second problem. When I swapped the order of close() and inTx=false there were no messages written to the db in case of hitting an exception during the call to executeBatch(). However, if the sql exception was raised after message 49 out of 50 msgs to be written, we should somehow call a rollback on the jdbc connection. With the change above, these msgs won't get written to the db as we do not commit the sql insert but we also don't rollback explicitly in our error handling. I presume the db itself will run a rollback at some stage (timeout or whatsoever) but to have a clean implementation, we will need to rollback in our exception handling.

Here is a proposed implementation of TransactionStore.commit():

{code:title=TransactionContext.commit()}
public void commit() throws IOException {
        if (!inTx) {
            throw new IOException(""Not started."");
        }
        try {
            executeBatch();
            if (!connection.getAutoCommit()) {
                connection.commit();
            }
        } catch (SQLException e) {
            JDBCPersistenceAdapter.log(""Commit failed: "", e);

  	  //we need to rollback before the finally clause, 
	  //either by calling 
          this.rollback(); 
          //or connection.rollback();

        throw IOExceptionSupport.create(e);
        } finally {
            close();
            inTx = false;
        }
    }
{code}
What do you think about this change? I have not tested the explicit call to rollback() and don't claim to understand the source well enough to understand possible side effects of this change. 
","19/Aug/08 05:29;tmielke;Reopening this issue based on previous comment.","19/Aug/08 15:42;chirino;good catch.. I think the root cause is that the close() call in the finally method is not really closing out the jdbc connection.  On a transacted connection if the connection is actually closed before a commit(), it should automatically cause a transaction rollback.

Will work on a patch for this.","06/Aug/09 11:49;dejanb;Applied proposed change and added a JDBCStoreBrokerTest test case to verify everything works fine (revision 801612). All other jdbc-related test cases pass as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The ManagementContext should allow the host portion to be configurable,AMQ-2328,12482647,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,bsnyder,bsnyder,17/Jul/09 12:58,05/Aug/09 06:36,30/Jan/20 16:55,05/Aug/09 06:36,5.0.0,5.1.0,5.2.0,,,,,5.3.0,,,,,,,0,"Currently the host portion of the JMX URI in the {{ManagementContext}} is hard-coded to 'localhost' which presents issues with remote JMX. To fix this, the host should be configurable via a setter. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-08-05 06:36:25.88,,,false,,,,,,,,,,,,,,,,,74979,,,Wed Aug 05 06:36:25 UTC 2009,,,,,,,,"0|i14cb3:",233457,,,,,,,,,,,,,,,,,,,"05/Aug/09 06:36;rajdavies;Fixed by SVN revision 801075",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The ActiveMQ Web Console does not work out of box when deployed in the ServiceMix 4 container,AMQ-2193,12483061,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,joeluo,joeluo,02/Apr/09 11:05,04/Aug/09 07:11,30/Jan/20 16:55,04/Aug/09 07:11,5.2.0,,,,,,,5.3.0,,,,,,,0,"The ActiveMQ Web Console does not work out of box when deployed within the ServiceMix 4 OSGI container. For more details, please have a look at the Fuse Forum post: [http://fusesource.com/forums/thread.jspa?threadID=749&tstart=0]

So there are two problems here:
1. The jstl.jar and standard.jar are required to run the JSP page in the container but the two jars are not in the AMQ web console war file ""WEB-INF\lib"" directory. 
2. The PAX web and web extender bundles that installed by the ""web-core"" and ""web"" features from the servicemix 4 feature list does not support the JSP .tag files (JSP2 spec). See related PAX issues: [http://tinyurl.com/cbztny] and [http://tinyurl.com/ccah47]. As a workaround, people have to manually install the latest SNAPSHOT PAX Web and PAX Web Extender bundles from ops4j snapshot repository [http://repository.ops4j.org/mvn-snapshots/org/ops4j/pax/] to get around the problem.

In a non-OSGI environment. all classes and tag libs that required from jstl.jar and standard.jar are contained in jsp-api jar and it is loaded when the AMQ is started. Hence, it is no need to put the two jars into the war file to deploy. However, in the ServiceMix 4 container, the two jars will have to be either placed in the war or deployed as individual OSGI bundles. 

I did some tests to convert the jstl.jar into OSGI bundle and list all the packages to be exported in it's manifest file, it seems working fine. However, I could not get standard.jar working even after converted it to an OSGI bundle and deployed into the SMX4 container. It looks like eventually I have to put at least the standard.jar into the web console war ""WEB-INF\lib"" directory to be deployed to the container using PAX ""war"" deployer.

Another difficulty is that we will have to wait for the OPS4J to release PAX Web and PAX Web extender jars with the latest fix as a non-snapshot release. Otherwise, people will always need to manually download those jars and deployed into the SMX4 container to get around the problem #2.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-08-04 07:11:15.252,,,false,,,,,,,,,,,,,,,,,75031,,,Tue Aug 04 07:11:15 UTC 2009,,,,,,,,"0|i182gv:",255202,,,,,,,,,,,,,,,,,,,"04/Aug/09 07:11;dejanb;This was a problem with older versions of PAX.

There's a guide, that instructs how to integrate web console with the ServiceMix

http://activemq.apache.org/osgi-integration.html#OSGiIntegration-Webconsole

More improvements will be added for new 6.0 console.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException In VMPendingMessageCursor.next(),AMQ-2188,12483063,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,bdarfler,bdarfler,30/Mar/09 16:48,03/Aug/09 14:26,30/Jan/20 16:55,03/Aug/09 14:26,5.2.0,,,,,,,5.3.0,,,Message Store,,,,0,"I'm using 5.2.0.

Might be a reoccurrence of AMQ-1346

INFO   | jvm 1    | 2009/03/30 15:22:13 | ERROR Service                        - Async error occurred: java.util.ConcurrentModificationException
INFO   | jvm 1    | 2009/03/30 15:22:13 | java.util.ConcurrentModificationException
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:761)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at java.util.LinkedList$ListItr.next(LinkedList.java:696)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.region.cursors.VMPendingMessageCursor.next(VMPendingMessageCursor.java:121)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.region.TopicSubscription.dispatchMatched(TopicSubscription.java:378)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.region.TopicSubscription.acknowledge(TopicSubscription.java:215)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:456)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:78)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:76)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommad(ProtocolConverter.java:564)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:56)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:233)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1207)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:793)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:830)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
INFO   | jvm 1    | 2009/03/30 15:22:13 |       at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75034,,,2009-03-30 16:48:36.0,,,,,,,,"0|i182hj:",255205,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple creating and closing consumers causes messages duplicated delivered,AMQ-1767,12483054,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,kloh,kloh,04/Jun/08 12:42,31/Jul/09 09:22,30/Jan/20 16:55,31/Jul/09 09:22,5.1.0,,,,,,,5.3.0,,,Broker,,,,0,"Hi *,

I'm running AcitveMQ 5.1 in a VM. The broker is set as persistent with amq-store, the xml-configuration-file is attached (in the zip-file).

One MessageProducer sends 10.000 messages to a queue. The producers runs in its own thread with its own session.

The queue is set as transacted.

Two MessageConsumers register on the queue mentioned above, each in its own thread with its own session.

The Producer and the Consumers share one connection-object.

Every second one Consumer is called to be canceld (by session.close - a call to consumer.close does not help), its thread is stopped and a new Consumer is created in a new thread with its own session.

What happens?
1 to 10 messages are duplicated delivered from some consumers. So the 'EnqueueCount' is greater than the 'DequeueCount'. E.G. 10.002 messages are recieved, but just 10.000 messages are sent.

I've tried to synchronized by one common-object the creating, closing or commiting in the Consumer with no success.

Attached is a junit-test, which demonstrates the situation. Before have a look at the Config-Class and change the ip-address, where your broker runs.","Windows XP, Java 1.5",isnogood,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/08 12:42;kloh;ASF.LICENSE.NOT.GRANTED--JUnit.zip;https://issues.apache.org/jira/secure/attachment/12461043/ASF.LICENSE.NOT.GRANTED--JUnit.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84778,,,Thu Jun 05 10:17:48 UTC 2008,,,,,,,,"0|i0s1cv:",161696,,,,,,,,,,,,,,,,,,,"05/Jun/08 10:17;kloh;An update:

I changed the code so, that each consumer and producer don't use the same connection-object. So that each consumer and each producer has its own connection, which creates a session, which creates the consumer/producer - in case of a consumer after the creation the connection was started.

Unfortunately that all did not help. Messages are still delivered multiple times.

So has anybody been free for looking at this?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consumer stops work when another consumer commits,AMQ-1792,12483056,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,kloh,kloh,12/Jun/08 07:55,31/Jul/09 09:20,30/Jan/20 16:55,31/Jul/09 09:20,5.1.0,,,,,,,5.3.0,,,Broker,,,,0,"Hi *,

5 messages are put into a queue. 3 consumer are created, all with their own transacted-sessions. They all implements MessageListener.

2 consumers recieve a message, wait 5 seconds and commit their messages. The other consumer sends the recieved message back to the queue (no rollback!!!) and commit. When one of the first consumer commits, the third consumer stops working and doesn't recieve any messages.

When you starts the attached Main-class (sets first the ip-address of your broker in the config-class) you'll see some output:

Consumer-1 work begins!
Consumer-2 work begins!
Consumer-3 cant work!
Consumer-3 cant work!
[..]
Consumer-3 cant work!
Consumer-3 cant work!
Consumer-1 work ends!
Consumer-1 work begins!
Consumer-2 work ends!
Consumer-2 work begins!
Consumer-1 work ends!
Consumer-1 work begins!
Consumer-2 work ends!
Consumer-1 work ends!

""Consumer-3 cant work"" means, that consumer-3 sends a message back to the broker. ""Consumer1-work begins"" is the first code-line in the onMessage-Method, ""Consumer1-work ends"" the last one.

I also attached the configuration file of the broker, maybe I made something wrong there.

I hope this issue will not go unheeded like my other issue posted a week ago.","Win XP, Java 1.5",jerryshea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jun/08 07:55;kloh;ASF.LICENSE.NOT.GRANTED--Situation.zip;https://issues.apache.org/jira/secure/attachment/12461105/ASF.LICENSE.NOT.GRANTED--Situation.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-15 18:31:30.876,,,false,,,,,,,,,,,,,,,,,84768,,,Fri Jul 31 09:20:54 UTC 2009,,,,,,,,"0|i0s1d3:",161697,,,,,,,,,,,,,,,,,,,"15/Sep/08 18:31;rajdavies;This looks like a prefetch issue - can you set the prefetch size = 1 ?
see http://activemq.apache.org/what-is-the-prefetch-limit-for.html","16/Sep/08 05:15;kloh;Rob,

its indeed some time ago, but the prefetch size was set to 1 (like you can see in the zip-archive in Connector.java).

Do you have another idea?","03/Oct/08 11:45;gtully;I worked through the test case. What happens is that each of the consumers gets a shot at consuming all of the existing messages (5) in the queue. The recovery dispatch in Queue.addSubscription is responsible for that.
For the two consumers that do work, 1 message gets dispatched that fills the subscription (because of the prefetch value) and the onMessage blocks. Because of the transacted session, an on delivery ack results in the prefetch being exceeded by one and a second message is dispatched. This results in 4 of the 5 messages locked/dispatched.
For the third, it consumes and generates an new message. the third consumer is thus not full and consumes what it produced. This continues for 5 seconds until one of the other two consumers becomes available and consumes what the third produces. This ends the third consumers run as all available messages have been dispatched.

To see a change in behavior, increase the Config.sMESSAGESTOSEND to 10. In this way, two iterations of consumer 1 and 2 will be needed to consume ~6 messages, leaving 4 for consumer three so it will continue past the first consumer commit. These remaining messages will get dispatched between the available 3 consumers and consumer 3 will be able to continue.

I think things are working as expected here. Don't think it is critical.","03/Oct/08 11:48;gtully;reducing severity, things are working as expected I think for this particular scenario.

One other thing to play with: ack Mode Session.DUPS_OK_ACKNOWLEDGE;
This will negate the production of the DeliveryAck and only one message, the prefetch value, will be dispatched/locked by a sleeping consumer.","31/Jul/09 09:20;rajdavies;This looks resolved ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent test failure - BrokerTest,AMQ-2075,12482586,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,djencks,djencks,19/Jan/09 00:26,29/Jul/09 10:28,30/Jan/20 16:55,29/Jul/09 10:28,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"Only info I have is from surefire report:

  <testcase time=""4.017"" name=""testQueueBrowserWith2Consumers {deliveryMode=2}"">
    <failure type=""junit.framework.AssertionFailedError"" message=""m1 is null for index: 0"">junit.framework.AssertionFailedError: m1 is null for index: 0
        at junit.framework.Assert.fail(Assert.java:47)
        at junit.framework.Assert.assertTrue(Assert.java:20)
        at junit.framework.Assert.assertNotNull(Assert.java:220)
        at org.apache.activemq.broker.BrokerTest.testQueueBrowserWith2Consumers(BrokerTest.java:148)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at junit.framework.TestCase.runTest(TestCase.java:154)
        at junit.framework.TestCase.runBare(TestCase.java:127)
        at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:118)
        at junit.framework.TestSuite.runTest(TestSuite.java:208)
        at junit.framework.TestSuite.run(TestSuite.java:203)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743)
</failure>
  </testcase>",mac os x 10.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-01-27 17:20:55.776,,,false,,,,,,,,,,,,,,,,,75088,,,Wed Jul 29 10:28:42 UTC 2009,,,,,,,,"0|i14cq7:",233525,,,,,,,,,,,,,,,,,,,"27/Jan/09 17:20;gtully;I just got a different test failure: (investigating now)
org.apache.activemq.broker.BrokerTest.testConnectionCloseCascades {deliveryMode=2, destination=topic://TEST}
    junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:47)
    at junit.framework.Assert.assertTrue(Assert.java:20)
    at junit.framework.Assert.assertNull(Assert.java:233)
    at junit.framework.Assert.assertNull(Assert.java:226)
    at org.apache.activemq.broker.BrokerTest.testConnectionCloseCascades(BrokerTest.java:1019)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at junit.framework.TestCase.runTest(TestCase.java:154)
    at junit.framework.TestCase.runBare(TestCase.java:127)
    at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
    at junit.framework.TestResult$1.protect(TestResult.java:106)
    at junit.framework.TestResult.runProtected(TestResult.java:124)
    at junit.framework.TestResult.run(TestResult.java:109)
    at junit.framework.TestCase.run(TestCase.java:118)
    at junit.framework.TestSuite.runTest(TestSuite.java:208)
    at junit.framework.TestSuite.run(TestSuite.java:203)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
    at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
    at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743)","29/Jul/09 10:28;gtully;BrokerInfo on a new connection is dispatched async and could end up being dispatched after messages which were being picked up by poll(). A receive will ignore them so using receiveMessage resolves this issue. The intermittent nature is the result of the async dispatch thread scheduling. Think the other browser issue has been also resolved through other changes.
r798842",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Message relay issue when have network of brokers and downstream consumers using same queue/topic but different selectors,AMQ-2104,12482822,12482495,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,11/Feb/09 12:52,24/Jul/09 14:06,30/Jan/20 16:55,11/Feb/09 13:08,5.2.0,,,,,,,5.3.0,,,,,,,0,"There appears to be an issue with message distribution in a network of brokers. Specifically
it seems the producer broker does not honor the downstream subscription, granular to the message selector specified in the consumers subscription,
(rather it sends messages to the broker with a consumer based on the Topic or Queue name only). ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75073,,,Thu Feb 19 09:04:03 UTC 2009,,,,,,,,"0|i14bvb:",233386,,,,,,,,,,,,,,,,,,,"11/Feb/09 13:08;dejanb;Fixed in SVN revision 743320","19/Feb/09 09:04;dejanb;Additional fix committed to rev. 745558. Conduit subscriptions have to be turned off for this to work. Take a look at http://activemq.apache.org/networks-of-brokers.html#NetworksofBrokers-Conduitsubscriptionsandconsumerselectors for more details",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread deadlock in ActiveMQEndpointWorker class,AMQ-2069,12483003,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,xuhaihong,xuhaihong,16/Jan/09 01:53,23/Jul/09 13:00,30/Jan/20 16:55,23/Jul/09 13:00,5.3.0,,,,,,,5.3.0,,,,,,,0,"It will happen when one thread is in a loop to try to connect the broker, in the meanwhile another thread calls the stop action.
Thread A (in the run() method) holds the connectWork, and requires the shutdownMutex when it is notified by the notifyAll action by ThreadB.
Thread B (in the stop() method) holds the shutdownMutex, and requires the connectWork in the disconnect method.
I move the disconnect() invocation out of the synchronized (shutdownMutex) block, it works well.
Thanks !",,npfistner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jul/09 04:30;xuhaihong;AMQ-2069.patch;https://issues.apache.org/jira/secure/attachment/12461556/AMQ-2069.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-01-16 11:52:04.776,,,false,,,,,,,,,,,,,,,,,75093,,,Thu Jul 23 13:00:07 UTC 2009,,,,,,,,"0|i0s1bj:",161690,,,,,,,,,,,,,,,,,,,"16/Jan/09 11:52;gtully;great. thanks for the heads up and [contribution|http://activemq.apache.org/contributing.html]
Do you have a test case you could attach to this issue to protect your changes into the future. 
if you do a svn diff > amq-2059.diff  and attach that with a license grant it would be fantastic. ","13/Jul/09 04:30;xuhaihong;I tried to provide a patch for it, please help to review it.
Thanks !","23/Jul/09 13:00;dejanb;Patch applied in SVN revision 797052 with thanks ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException having relation to recovery of expired messages and vmQueueCursor pendingQueuePolicy,AMQ-2322,12483032,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,09/Jul/09 16:23,09/Jul/09 16:27,30/Jan/20 16:55,09/Jul/09 16:27,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"from: http://www.nabble.com/ClassCastException-having-relation-to-expired-messages-tp24287023p24287023.html

While testing ActiveMQ5.2.0, I have a question about expired message.

Note that testing messages are Persistent and using a queue, set message
expiration time to 10 seconds. configurations are same except destination
policy(using a vm queue cursor) as below
<destinationPolicy>
       <policyMap>
               <policyEntries>
                       <policyEntry queue="">"" memoryLimit=""5mb"">
                               <dispatchPolicy>
                                       <strictOrderDispatchPolicy />
                               </dispatchPolicy>
                               <deadLetterStrategy>
                                       <individualDeadLetterStrategy queuePrefix=""DLQ.""/>
                               </deadLetterStrategy>
                               <pendingQueuePolicy>
                                       <vmQueueCursor />
                               </pendingQueuePolicy>
                       </policyEntry>
               </policyEntries>
       </policyMap>
</destinationPolicy>
Additionally, it turns out that the activemq broker actually does not
proactively purge expired messages from queues. so we set
a thread that periodically cleared my queues of expired messages by help of
this forum's advisor.
We suppose that a server is stopped unexpectedly when expired message leaves
on queue without disposed by the thread
After recovering a server, we will expect that remained messages including
both normal and expired message are loaded normally
However server stopped abnormally and some error occured while starting
ActiveMQ. Errors are like that
{code}
2009-07-01 17:13:45,125 [main           ] INFO  BrokerService
- For help or more information please see: http://activemq.apache.org/
2009-07-01 17:13:45,421 [main           ] INFO  KahaStore
- Kaha Store using data directory
D:\apache\apache-activemq-5.2.0\binary\bin\..\data\kr-store\data
2009-07-01 17:13:45,796 [main           ] ERROR BrokerService
- Failed to start ActiveMQ JMS Message Broker. Reason:
java.lang.ClassCastException:
org.apache.activemq.command.ActiveMQObjectMessage
java.lang.ClassCastException:
org.apache.activemq.command.ActiveMQObjectMessage
       at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1114)
       at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1106)
       at org.apache.activemq.broker.region.Queue$5.recoverMessage(Queue.java:173)
       at
org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessage(RecoveryListenerAdapter.java:45)
       at
org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:56)
       at
org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
       at
org.apache.activemq.store.kahadaptor.KahaReferenceStore.recover(KahaReferenceStore.java:93)
       at
org.apache.activemq.store.amq.AMQMessageStore.recover(AMQMessageStore.java:481)
       at org.apache.activemq.broker.region.Queue.initialize(Queue.java:167)
       at
org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
       at
org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:434)
       at
org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
       at
org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
       at
org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:261)
       at
org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
       at
org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
       at
org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:147)
       at
org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
       at
org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
       at
org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)
       at
org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:176)
       at
org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:103)
       at
org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
       at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
       at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
       at
org.apache.activemq.broker.MutableBrokerFilter.start(MutableBrokerFilter.java:161)
       at org.apache.activemq.broker.BrokerService.start(BrokerService.java:468)
       at
org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52)
       at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)
       at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)
       at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
       at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
       at java.security.AccessController.doPrivileged(Native Method)
       at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
       at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
       at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)
       at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
       at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
       at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
       at
org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
       at
org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
       at
org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
       at
org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
       at
org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
       at
org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
       at
org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
       at
org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
       at
org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
       at
org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
       at
org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
       at
org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
       at
org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
       at
org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
       at
org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:585)
       at org.apache.activemq.console.Main.runTaskClass(Main.java:225)
       at org.apache.activemq.console.Main.main(Main.java:106)
2009-07-01 17:13:45,812 [main           ] INFO  BrokerService
- ActiveMQ Message Broker (localhost, null) is shutting down
2009-07-01 17:13:45,828 [main           ] INFO  NetworkConnector
- Network Connector default-nc Stopped
{code}

",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74983,,,Thu Jul 09 16:27:51 UTC 2009,,,,,,,,"0|i14ckv:",233501,,,,,,,,,,,,,,,,,,,"09/Jul/09 16:27;gtully;resolved in r792598

expired messages are now recovered and expired correctly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New Multicast discovery agent thread is created for each message,AMQ-2283,12482601,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,ericbouer,ericbouer,07/Jun/09 12:59,08/Jul/09 13:01,30/Jan/20 16:55,08/Jul/09 13:01,5.2.0,,,,,,,5.3.0,,,Broker,,,,1,"I found out that a new thread is started for each message I send, but that thread is staying alive for the whole program lifetime.
The number of live ""multicast discovery agent notifier"" threads scales up linearly.
Eventually I ended up with 10000 threads of the above type running
It doesn't seems to be a camel issue since when I try with tcp://localhost:61616 everything works fine.
I'm suspecting a bug. and I wanted to share it with you before I open a ticket.
Eric

=============
package com.mycompany.CamelExample;
import javax.jms.ConnectionFactory;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.camel.CamelContext;
import org.apache.camel.ProducerTemplate;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.jms.JmsComponent;
import org.apache.camel.impl.DefaultCamelContext;
import org.apache.log4j.Logger;
public final class App {
   private static Logger log = Logger.getLogger(""CamelTestApp"");
   public static void main(String args[]) throws Exception {
        CamelContext context = new DefaultCamelContext();
        ConnectionFactory connectionFactory =
                    new ActiveMQConnectionFactory(""failover:(discovery:(multicast://224.1.2.3:6255?group=default),tcp://localhost:61616)"");
        final String JMSTOPID = ""test-jms"";
        final String DEST_TOPIC = ""test-jms:topic:TCommandRequest"";
        final String SRC_TOPIC = ""test-jms:topic:TCommandRequest"";
        context.addComponent(""test-jms"", JmsComponent.jmsComponentAutoAcknowledge(connectionFactory));
        context.addRoutes(new RouteBuilder() {
            public void configure() {from(SRC_TOPIC).to(""mock:test"");}});
        ProducerTemplate template = context.createProducerTemplate();
        context.start();
           while (true) {
                template.sendBody(DEST_TOPIC, ""TEST_TEXT"");
               Thread.sleep(5000);
            }
    }
}
======================
My log shows:

12:02:06,212  INFO DefaultCamelContext:729 - Apache Camel 2.0-M1 (CamelContext:camel-1) is starting
12:02:06,582  WARN ObjectHelper:523 - Cannot find class: org.apache.xalan.xsltc.trax.DOM2SAX
12:02:07,137  INFO DiscoveryTransport:73 - Adding new broker connection URL: tcp://192.168.0.1:61616
12:02:07,220  INFO FailoverTransport:714 - Successfully connected to tcp://192.168.0.1:61616
12:02:07,222  INFO FailoverTransport:714 - Successfully connected to discovery:(multicast://224.1.2.3:6255?group=default)
12:02:07,247  INFO DefaultCamelContext:771 - Apache Camel 2.0-M1 (CamelContext:camel-1) started
12:02:07,640  INFO DiscoveryTransport:73 - Adding new broker connection URL: tcp://192.168.0.1:61616
12:02:07,715  INFO FailoverTransport:714 - Successfully connected to tcp://192.168.0.1:61616
12:02:07,716  INFO FailoverTransport:714 - Successfully connected to discovery:(multicast://224.1.2.3:6255?group=default)
12:02:13,181  INFO DiscoveryTransport:73 - Adding new broker connection URL: tcp://192.168.64.1:61616
12:02:13,220  INFO FailoverTransport:714 - Successfully connected to tcp://192.168.0.1:61616
12:02:13,222  INFO FailoverTransport:714 - Successfully connected to discovery:(multicast://224.1.2.3:6255?group=default)
12:02:18,731  INFO DiscoveryTransport:73 - Adding new broker connection URL: tcp://192.168.0.1:61616
12:02:18,961  INFO FailoverTransport:714 - Successfully connected to tcp://192.168.0.1:61616
12:02:18,963  INFO FailoverTransport:714 - Successfully connected to discovery:(multicast://224.1.2.3:6255?group=default)
.
.
. ","Linux, jdk6u13, jdk6u14",ee7arh,ericbouer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-06-12 11:12:07.177,,,false,,,,,,,,,,,,,,,,,74997,,,Wed Jul 08 13:01:10 UTC 2009,,,,,,,,"0|i0s213:",161805,,,,,,,,,,,,,,,,,,,"12/Jun/09 11:12;ee7arh;Hi,

I have exactly the same problem and it eventually  leads to my application running out of memory. I have had to disable multicast now for stability reasons but would like to use it again so hopefully this can be fixed.

  <!-- configure the Camel JMS consumer to use the ActiveMQ broker declared above -->
    <bean id=""jmsExternal"" class=""org.apache.camel.component.jms.JmsComponent"">
        <property name=""connectionFactory"">
            <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
                <!-- use multicast to detect other broker - group=groupName of network to look for -->
                <property name=""brokerURL"" value=""discovery:(multicast://default?group=testbroker)?initialReconnectDelay=100""/>
            </bean>
        </property>
    </bean>

To send a message to the external queue ""jmsExternal"" I call the method in POJO object:

camelTemplate.sendBody(x,y);

I am using activeMQ 5.2.0 but the brokers which are being discovered are using the FUSE 5.3 version.

If select one of the thousands of Multicast threads displayed in Jconsole, they all have the same stack trace as this:

Name: Multicast Discovery Agent Notifier
State: WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@1ce7f98
Total blocked: 0  Total waited: 1

Stack trace:
sun.misc.Unsafe.park(Native Method)
java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:358)
java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
java.lang.Thread.run(Thread.java:619) 

BRegards
Andrew","08/Jul/09 13:01;gtully;fixed in r792127",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
After rollback received messages not re-presented,AMQ-2233,12483038,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,david_syer,david_syer,28/Apr/09 12:08,08/Jul/09 09:03,30/Jan/20 16:55,08/Jul/09 09:03,5.2.0,,,,,,,5.3.0,,,,,,,1,"After rollback received messages not re-presented.  If I receive in a transaction and then roll back the messages should be re-presented in the next transaction.  This used to work in 5.1.0, but is broken in 5.2.0.

You can browse the Queue in JMX after the rollback and see that the messages are still there, but they are not received by a consumer in the same process.

Here's a test case (fails on the checkPostConditions()):

{code}
public class RawRollbackTests {
	
	private static ConnectionFactory connectionFactory;
	private static Destination queue;
	private static BrokerService broker;

	@BeforeClass
	public static void clean() throws Exception {
		FileUtils.deleteDirectory(new File(""activemq-data""));
		broker = new BrokerService();
		broker.setUseJmx(true);
		broker.start();
		ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory();
		connectionFactory.setBrokerURL(""vm://localhost?async=false"");
		RawRollbackTests.connectionFactory = connectionFactory;
		queue = new ActiveMQQueue(""queue"");
	}

	@AfterClass
	public static void close() throws Exception {
		broker.stop();
	}

	@Before
	public void clearData() throws Exception {
		getMessages(false); // drain queue
		convertAndSend(""foo"");
		convertAndSend(""bar"");
	}


	@After
	public void checkPostConditions() throws Exception {

		Thread.sleep(1000L);
		List<String> list = getMessages(false);
		assertEquals(2, list.size());

	}

	@Test
	public void testReceiveMessages() throws Exception {

		List<String> list = getMessages(true);
		assertEquals(2, list.size());
		assertTrue(list.contains(""foo""));

	}
	
	private void convertAndSend(String msg) throws Exception {
		Connection connection = connectionFactory.createConnection();
		connection.start();
		Session session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);
		MessageProducer producer = session.createProducer(queue);
		producer.send(session.createTextMessage(msg));
		producer.close();
		session.commit();
		session.close();
		connection.close();
	}

	private List<String> getMessages(boolean rollback) throws Exception {
		Connection connection = connectionFactory.createConnection();
		connection.start();
		Session session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);
		String next = """";
		List<String> msgs = new ArrayList<String>();
		while (next != null) {
			next = (String) receiveAndConvert(session);
			if (next != null)
				msgs.add(next);
		}
		if (rollback) {
			session.rollback();
		} else {
			session.commit();
		}
		session.close();
		connection.close();
		return msgs;
	}

	private String receiveAndConvert(Session session) throws Exception {
		MessageConsumer consumer = session.createConsumer(queue);
		Message message = consumer.receive(100L);
		consumer.close();
		if (message==null) {
			return null;
		}
		return ((TextMessage)message).getText();
	}
}
{code}",,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,,0%,0,0,,,,,,,,,,,AMQ-2034,,"13/May/09 11:27;david_syer;RawRollbackSharedConsumerTests.java;https://issues.apache.org/jira/secure/attachment/12461512/RawRollbackSharedConsumerTests.java","29/Apr/09 05:20;david_syer;RawRollbackTests.java;https://issues.apache.org/jira/secure/attachment/12461503/RawRollbackTests.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-04-28 16:31:32.41,,,false,,,,,,,,,,,,,,,,,75017,,,Wed Jul 08 09:03:05 UTC 2009,,,,,,,,"0|i0s1cn:",161695,Regression,,,,,,,,,,,,,,,,,,"28/Apr/09 16:31;gtully;can you attach your test case (see the attach file link) and make a license grant so that your test can be added to the activemq suite?

This is an interesting test case. The change of behavior is around consumer.close() and transactions. When in a transaction, the close is deferred till the transaction completes, so with a prefetch > 0, messages dispatched to that consumer will not be available till the transaction commits.

I think your test case will work with a prefetch of 0, connectionFactory.setBrokerURL(""vm://localhost?async=false&waitForStart=5000&jms.prefetchPolicy.all=0"");","28/Apr/09 16:46;gtully;for a managed case, the XA case was made the general case. a close is deferred if in any transaction.","29/Apr/09 05:20;david_syer;Attached test case as file.","02/May/09 07:44;david_syer;Thanks for the response.  The prefetch hint didn't have any effect on the test case.  I didn't follow the comment about the deferred close.","12/May/09 11:36;gtully;Added your test case with the prefetch workaround: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/bugs/RawRollbackTests.java?view=markup

The issue is the consumer.close call in the receiveAndConvert. The close occurs in a transaction and the close is deferred till the transaction completes. The default prefetch value of 100 ensures that the consumer will have both messages queued up for dispatch. The undispatched are only redispatched afer the close. But we don't know if the messages are to be acked till the transaction completes. Thus the additional prefetched ""bar"" message is not available to a second consumer.
Changing the prefetch value to 0 (note the changed connectionURL) ensures that each consumer gets a single message from a call to receive so only that message is outstanding until the transaction completes.","12/May/09 12:37;david_syer;Thanks for the update.  I tried (as previously indicated) the prefetch hint and it didn't change anything.  If I understand the comment correctly maybe you misunderstood the test case: it doesn't fail because ""bar"" is unavailable to a second consumer - in fact it is, as the assertion {{assertEquals(2, list.size())}} in the test method shows. 

It fails because neither ""foo"" nor ""bar"" is available to any consumer whatsoever, after the rollback has occurred.  The transaction has certainly completed by the time the test fails (thecomment seems to imply the opposite, but maybe I misunderstood).

It still fails for you, right?  (I only ran it against 5.2.0.)","12/May/09 15:42;gtully;so the test (your test) I committed to trunk works. It uses &jms.prefetchPolicy.all=0

With out the prefetch=0 config, the assertion fails for me with list.size() == 1
In the rollback case, receiveAndConvert is called twice so two consumers are created. The first consumer gets both messages dispatched to it and consumes one before closing. The second consumer gets nothing. So list.size == 1.
The problem is the consumer.close is deferred till the transaction completes (commits or rollsback)

The workaround is to only deliver messages on demand, when receive is called, prefetch=0 gives this.
","13/May/09 00:42;david_syer;Your failure is not the same as mine (in 5.2.0).  I am failing in the @After, and it sounds like you are failing (before the fetch size hint) in @Test.

I will try it when a new snapshot appears.  The Apache snapshots repo has a latest version in mid April; any news on that, or am I looking in the wrong place?

The original test (with or without the fech size) still fails with 5.2.0 and passes with 5.1.0.  It also fails if I use a single consumer to consume all messages in a Session.  So I'd be interested to know what broke in the meantime there.  5.1.0 seems correct as far as the JMS spec goes.","13/May/09 08:22;gtully;The nightly snapshot is available at https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.3-SNAPSHOT/ 

I think the key change (on trunk) relates to consumer.close when there is a transaction. The close is deferred to a synchronisation afterCompletion so the effect of the close is not visible till the transaction completes. From what i can see, the test depends on the visibility of predispatched messages before the transaction completes.

Can you provide your test variant that uses a single consumer so I can include it?
W.r.t the spec, the whole prefetch issue is outside the spec, prefetch=0 gets it back in line.","13/May/09 11:27;david_syer;Added shared consumer test case.  This passes in 5.3-SNAPSHOT even without the fetch size hint as predicted.  But it also fails in 5.2.0, which still seems like a bug to me, considering what you said above.  What do you think?","15/May/09 09:30;gtully;yea, I think that is a bug with 5.2.0. All is good on trunk now though. I committed that shared test to protect against regression, thanks. Are you happy to see this issue closed?","19/May/09 10:01;david_syer;Not abundantly happy, really, no.  I think it's a regression from 5.1.0, and hiding behind the strict letter of the law regarding the specification is a weak position to take.  Even if prefetch is a proprietary feature, having to set it to a non-default value to get a system to behave as expected makes it very hard for users to guess or understand what is happening.  Also, prefetch is a good feature that I probably want to use, so switching it off just to get messages redelivered to another consumer in the same process seems like it must be a workaround for a bug.","15/Jun/09 17:12;david_syer;I am seeing this issue in production environments now - unacked messages sit on the broker forever until it is restarted.  Is there some way I can help to fix it so the behaviour goes back to the way it was in 5.1?","08/Jul/09 07:36;david_syer;This issue is now apparently fixed in 5.3-SNAPSHOT (my original test case passes), presumably as a result of fixes for other issues?","08/Jul/09 09:03;gtully;resolving as per dave's comment, current snapshot has a fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable consumers recovery ,AMQ-2303,12482921,12482917,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,24/Jun/09 15:56,01/Jul/09 11:06,30/Jan/20 16:55,01/Jul/09 11:03,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"When a broker with a lots of durable consumers goes down and is restarted with forced store recovery, producer fails with the following exception afterwards

{code}
2009-06-24 17:54:02,923 [127.0.0.1:55928] ERROR AbstractStoreCursor            - Failed to fill batch
java.lang.IllegalStateException: Message id ID:houdfrazierc.americas.progress.com-55015-1245858822880-1:45:1:1:1 could not be recovered from the data store for: topic://failoverTopic - already dispatched
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:62)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:88)
	at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.recoverNextMessages(KahaTopicReferenceStore.java:307)
	at org.apache.activemq.store.amq.AMQTopicMessageStore.recoverNextMessages(AMQTopicMessageStore.java:60)
	at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.doFillBatch(TopicStorePrefetch.java:91)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:227)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:99)
	at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.reset(StoreDurableSubscriberCursor.java:224)
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:574)
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:158)
	at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:197)
	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:49)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:577)
	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:430)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:368)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:443)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:455)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:613)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74991,,,Wed Jul 01 11:03:34 UTC 2009,,,,,,,,"0|i14bwv:",233393,,,,,,,,,,,,,,,,,,,"01/Jul/09 11:03;dejanb;Resolved by writing a SubscriptionInfo to the journal when durable consumer subscribes and using this info to recover it at the right moment (instead of the beginning of the recovery).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
persistent messages for durable subscribers are not purged from disc storage,AMQ-1797,12482917,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,durokuruc,durokuruc,12/Jun/08 17:52,01/Jul/09 11:06,30/Jan/20 16:55,01/Jul/09 11:06,5.1.0,,,,,,,5.3.0,,,Message Store,,,,5,"I have some problems with multiple durable subscribers while persistent delivery is used.
Message should be deleted from disc storage (periodically) after all interested subscribers have received it. In case there was one durable subscriber everything woks just fine. However when I tested this scenerio with two durable subscribers on topic,  the messages were never deleted (disc usage is continously consumed and never purged). 


Test case description:
-using default activemq.xml configuration file from binary distribution 
-TopicConsumers.java creates two separetes durable consumers
-textMessageFile.txt is file which text is sent by producer (place it on classpath)

Result:
-all messages there were send were also received by both subscribers
-after more then 100k messages data directory is about 1GB. 
-restarting activemq with so big persistent storage takes very long time","WinXP,
java version ""1.6.0_05""
Java(TM) SE Runtime Environment (build 1.6.0_05-b13)
Java HotSpot(TM) Client VM (build 10.0-b19, mixed mode, sharing)",donv,durokuruc,john.greeley,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jun/08 17:52;durokuruc;ASF.LICENSE.NOT.GRANTED--TopicConsumers.java;https://issues.apache.org/jira/secure/attachment/12461054/ASF.LICENSE.NOT.GRANTED--TopicConsumers.java","12/Jun/08 17:52;durokuruc;ASF.LICENSE.NOT.GRANTED--TopicProducer.java;https://issues.apache.org/jira/secure/attachment/12460986/ASF.LICENSE.NOT.GRANTED--TopicProducer.java","12/Jun/08 17:52;durokuruc;ASF.LICENSE.NOT.GRANTED--textMessageFile.txt;https://issues.apache.org/jira/secure/attachment/12461119/ASF.LICENSE.NOT.GRANTED--textMessageFile.txt","05/Nov/08 16:54;durokuruc;Storage_cleanup_Redelivery_test.zip;https://issues.apache.org/jira/secure/attachment/12461192/Storage_cleanup_Redelivery_test.zip","25/Feb/09 12:55;durokuruc;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461319/activemq.xml","25/Feb/09 12:53;durokuruc;kaha_amq.zip;https://issues.apache.org/jira/secure/attachment/12461355/kaha_amq.zip",,,,,,6.0,,,,,,,,,,,,,,,,,,,,2008-06-14 07:00:05.751,,,false,,,,,,,,,,,,,,,,,84766,,,Wed Jul 01 11:06:08 UTC 2009,,,,,,,,"0|i0s2av:",161849,,,,,,,,,,,,,,,,,,,"13/Jun/08 15:01;durokuruc;It looks that there is a problem in activemq journal wich is used by default amqPersistenceAdapter.  I have tested this also on amq 4.1.1 journaledJDBC adapter with same bug.
When jdbcPersistenceAdapter with 4.1.1(non-journal) or kahaPersistenceAdapter with 5.1 are used with 2 durable topic subscribers, disc storage is periodically emptied.","14/Jun/08 07:00;rajdavies;Fixed by SVN revision 667752 and revision 667756","05/Nov/08 16:54;durokuruc;I've tested AMQ 5.2 SNAPSHOT for this fix with partial success. There isn't any problem every message from Topic is acknoledged but solution doesn't work when some of messages are regulary received by durable subscribers and some of them are redeliverd till they get to ActiveMQ.DLQ due to exceeding max redelivery count.
To duplicate error see attached zip .

-TopicRedeliver creates two separetes durable consumers, which consumes every odd message and recover session if message number is even. Parameter ""jms.redeliveryPolicy.maximumRedeliveries=1"" causes that after first redelivery message goes to dead letter queue.
-DlqConsumer consumes messages from ActiveMQ.DLQ
-TopicProducer sends messages to testTopic

Reproducing steps:
1. run DlqConsumer
2. run TopicRedeliver
3. run TopicProducer

Results:
1.
%ACTIVEMQ_HOME%/data/journal dir contains several data-x files. More messages you send more data-x files stays in mentioned dir and consumes disc space.(however some of them are deleted this behaviour isn't predictible)
Something is going obviously wrong because all messages are consumed from destinations (testTopic and ActiveMQ.DLQ).
2.
Size of ActiveMQ.DLQ shown in jConsole is possitive number, despite that DlqConsumer doesn't consume messages anymore.
3.
If TopicRedeliver and DlqConsumer are restarted, any further sending of messages may causes folowing exception:
ERROR RecoveryListenerAdapter        - Message id ID:sk1d069c-4253-1225900870814-0:0:1:1:42 could not be recovered from the data store - already dispatched

Using AMQ 5.2. stable release is even not possible run this test - after couple hundred messages one of durable subscriber get stuck (see https://issues.apache.org/activemq/browse/AMQ-2021 ) .
","25/Feb/09 12:51;durokuruc;Tests on amq revision number 729038 with amqPersistenceAdapter as well as with kahaPersistenceAdapter but none of them was sucessful
from different reasons.

With amqPersistenceAdapter, 100k msgs have been sent and data directory size is 1.1 GB. 
Further message sending make any difference - message store still grows. For addition following error occures several times:
ERROR RecoveryListenerAdapter        - Message id ... could not be recovered from the data store - already dispatched

Using kahaPersistenceAdapter, after 100k msgs one of the consumer receives 100k second 99999 msgs.After another 300k msgs data directory size is 410MB. Also some errors are logged by AMQ:

ERROR DataManagerImpl                - Looking for key 15 but not found in fileMap: {17=data-queue-data-17 number = 17 , length = 177868 refCount = 6, 16=data-queue-data-16 number = 16 , length = 33546816 refCount = 86}
ERROR MapContainerImpl               - Failed to get value for offset=4845, key=(15, 29641420, 47), value=(15, 29641472, 8839), previousItem=-1, nextItem=-1
java.io.IOException: Could not locate data file data-queue-data-15
        at org.apache.activemq.kaha.impl.data.DataManagerImpl.getDataFile(DataManagerImpl.java:129)
        at org.apache.activemq.kaha.impl.data.SyncDataFileReader.readItem(SyncDataFileReader.java:65)
        at org.apache.activemq.kaha.impl.data.DataManagerImpl.readItem(DataManagerImpl.java:141)
        at org.apache.activemq.kaha.impl.container.MapContainerImpl.getValue(MapContainerImpl.java:481)
        at org.apache.activemq.store.kahadaptor.KahaMessageStore.recoverNextMessages(KahaMessageStore.java:166)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:83)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:92)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:236)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:136)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1180)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1308)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1008)
        at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
        at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:619)
ERROR AbstractStoreCursor            - Failed to fill batch for more see atached log - kaha_amq.log

For this tests it was necessary to adjust memory usage and limit settings - view attached activemq.xml.
Tested on SUSE Linux Enterprise Server 10.
","25/Feb/09 12:55;durokuruc;config file used to test rev. number 729038","25/Feb/09 23:24;gtully;the fix for http://issues.apache.org/activemq/browse/AMQ-2123 will help with the ""could not be recovered from the data store - already dispatched"" issue. This should also help with store management as it ensures that references are correctly cleaned up.","27/Feb/09 13:25;durokuruc;I've tested amq revision number 747951. Cleaning storage using amqPersistenceAdapter is better now, but there are still files that, in my opinion, need to be deleted  - in data/journal/ directory after receiving sotps there are still files data-47 and data-87 and no other number between (I guess that in optimal state should be file numbering continous).
There is also problem that from 100k msgs sent message  have been only 97208 acknowledged (it should be 100k on both receivers, while every odd message is ack) and  ""already dispatched"" error is still there.

with kahaPersistenceAdapter is behaviour very similar as before.
","20/Mar/09 21:07;yinghe0101;test latest trunk 756591

in network of broker setup( 4 pair master/slave), if I kill TopicConsumers during processing messages and restart it, i will see ""Message id ... could not be recovered from the data store - already dispatched""

i also see ""ERROR MasterBroker                   - Slave Failed
javax.jms.JMSException: Unmatched acknowledege: MessageAck {commandId = 62608, responseRequired = true, ackType = 2, consumerId = ID:host-2343-1237580790173-0:1:1:1, firstMessageId = ID:host-2341-1237580773986-0:0:1:1:1341, lastMessageId = ID:host-2341-1237580773986-0:0:1:1:1341, destination = topic://testTopic, transactionId = null, messageCount = 1}; Could not find Message-ID ID:host-2341-1237580773986-0:0:1:1:1341 in dispatched-list (start of ack)""

one pair of master/slave, the results are much better. topic consumer seems to recover and continue processing ","01/Jul/09 11:06;dejanb;Some of the commits for the AMQ-2303 seems to fixed this one as well (at least as far as I can test it). Please reopen if doesn't work with svn revision 790113",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.broker.ft.TransactedTopicMasterSlaveTest test hang on Solaris,AMQ-2308,12482857,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,peterjones,peterjones,26/Jun/09 16:20,29/Jun/09 11:45,30/Jan/20 16:55,29/Jun/09 11:45,,,,,,,,5.3.0,,,Transport,,,,0,"Seeing the TransactedTopicMasterSlaveTest hang when run on Solaris.  After examining jstack output for the hanging test and discussing with Gary Tully, he had the following suggestion:

{quote}
Hi Peter,
this looks like an example of http://issues.apache.org/activemq/browse/AMQ-1993 but this time on the client side.
It seems like a write that results in the first reconnect attempt does not terminate but it should be aborting as there is no listening or reading thread. I guess there is no back log because the next write is blocked by the transport reconnect mutex. Some combination of low level tcp retries should be able to be configured at the OS level, and I guess the defaults should be less than 1 hour so I would expect this test to eventually complete, however, the OS level timeouts and retries may be contingent on a backlog reaching a minimum and currently there will be only one outstanding write due the the locking around the reconnect logic. This being the case, some code needs to implement the timeout.

The solution from http://issues.apache.org/activemq/browse/AMQ-1993 may be a good approach here. It will timeout a write call.

However the solution is currently only applicable to server side sockets, it needs to be extended to support a client connection.

I think all that is needed is to move the additional configuration code from:
org.apache.activemq.transport.TransportFactory.serverConfigure(Transport, WireFormat, HashMap)
to compositeConfigure that is called for all transports (both client and server)
{quote}

Indeed, this fixes the problem.  I've attached a patch against trunk which resolves the issue.",Solaris - jdk15 32 bit - also jdk16 64 bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/09 16:21;peterjones;TransactedTopicMasterSlaveTest.patch.txt;https://issues.apache.org/jira/secure/attachment/12461551/TransactedTopicMasterSlaveTest.patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-06-29 11:45:14.073,,,false,,,,,,,,,,,,,,,,,74988,,,Mon Jun 29 11:45:14 UTC 2009,,,,Patch Available,,,,"0|i14c1r:",233415,,,,,,,,,,,,,,,,,,,"26/Jun/09 16:21;peterjones;Patch to resolve test hang.","29/Jun/09 11:45;gtully;patch applied with thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransportConnection Ignores isShutdownOnSlaveFailure,AMQ-2305,12482766,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,joef,joef,25/Jun/09 12:44,26/Jun/09 18:14,30/Jan/20 16:55,26/Jun/09 18:14,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"In a pure Master/Slave configuration, when the slave fails the TransportConnection invokes the MasterBroker's stop() method without taking into consideration the shutdownOnSlaveFailure boolean, which by default is set to false.  So even if shutdownOnSlaveFailure  is set to false, all my plugin brokers' stop methods get invoked when the slave fails.  ","ActiveMQ 5.2, Java 5, Windoze XP Pro ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jun/09 12:46;joef;TransportConnection.patch;https://issues.apache.org/jira/secure/attachment/12461550/TransportConnection.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-06-25 14:11:52.198,,,false,,,,,,,,,,,,,,,,,38769,,,Fri Jun 26 18:14:31 UTC 2009,,,,Patch Available,,,,"0|i14cvz:",233551,,,,,,,,,,,,,,,,,,,"25/Jun/09 12:46;joef;attached patch","25/Jun/09 14:11;gtully;joe, do u have a stack trace to the stop call. I see serviceTransportException has the check, I am wondering what the other path to stop is?","26/Jun/09 01:27;joef;gary, i don't have a stack trace but below is some debug output

note my embedded notes, which i've pointed out with  '<----'

the cfg files for the master and slave follow the debug output; both brokers wrote to the same log file 

2009-06-25 21:09:33,718 [/127.0.0.1:3457] INFO  TransportConnection            - Slave Broker slave is attached
2009-06-25 21:09:39,078 [Thread-4       ] INFO  BrokerService                  - ActiveMQ Message Broker (slave, ID:DIEGO-3454-1245978572796-1:0) is shutting down
2009-06-25 21:09:39,078 [Thread-4       ] DEBUG BrokerService                  - Caught exception, must be shutting down: java.lang.IllegalStateException: Shutdown in progress
2009-06-25 21:09:39,093 [Thread-4       ] DEBUG VMTransportFactory             - Shutting down VM connectors for broker: slave
2009-06-25 21:09:39,093 [r: vm://slave#0] DEBUG TransportConnection            - Stopping connection: vm://slave#0
2009-06-25 21:09:39,093 [r: vm://slave#0] DEBUG TransportConnection            - Stopped transport: vm://slave#0
2009-06-25 21:09:39,093 [r: vm://slave#0] DEBUG TransportConnection            - Cleaning up connection resources: vm://slave#0
2009-06-25 21:09:39,093 [r: vm://slave#0] DEBUG TransportConnection            - Connection Stopped: vm://slave#0
2009-06-25 21:09:39,093 [Thread-4       ] INFO  TransportConnector             - Connector vm://slave Stopped
2009-06-25 21:09:39,109 [Thread-4       ] DEBUG TcpTransport                   - Stopping transport tcp://localhost/127.0.0.1:61616
2009-06-25 21:09:39,109 [/127.0.0.1:3457] DEBUG TransportConnection            - Stopping connection: /127.0.0.1:3457

2009-06-25 21:09:39,109 [/127.0.0.1:3457] DEBUG JoeBroker                  - stop: Entered <---- this is my Broker plugin's stop method getting called

2009-06-25 21:09:39,109 [Thread-4       ] INFO  TransportConnector             - Connector tcp://localhost:61617 Stopped
2009-06-25 21:09:39,125 [Thread-4       ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (slave, ID:DIEGO-3454-1245978572796-1:0) stopped
org.apache.activemq:BrokerName=master,Type=XXXXX, XXXX=ActiveMQ XXXXX
2009-06-25 21:09:39,156 [/127.0.0.1:3457] DEBUG TcpTransport                   - Stopping transport tcp:///127.0.0.1:3457
2009-06-25 21:09:39,156 [/127.0.0.1:3457] DEBUG TransportConnection            - Stopped transport: /127.0.0.1:3457
2009-06-25 21:09:39,156 [/127.0.0.1:3457] DEBUG TransportConnection            - Connection Stopped: /127.0.0.1:3457
2009-06-25 21:09:43,437 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ Message Broker (master, ID:DIEGO-3450-1245978553937-0:0) is shutting down
2009-06-25 21:09:43,437 [MQ ShutdownHook] DEBUG BrokerService                  - Caught exception, must be shutting down: java.lang.IllegalStateException: Shutdown in progress
2009-06-25 21:09:45,359 [MQ ShutdownHook] INFO  TransportConnector             - Connector tcp://localhost:61616 Stopped

2009-06-25 21:09:45,375 [MQ ShutdownHook] DEBUG JoeBroker                  - stop: Entered <---- This is my plugin's stop method getting called a second time
2009-06-25 21:09:45,375 [MQ ShutdownHook] DEBUG JoeBroker                  - stop: JoeBroker has already been stopped

2009-06-25 21:09:45,375 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ JMS Message Broker (master, ID:DIEGO-3450-1245978553937-0:0) stopped


This is the slave's  cfg file

<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.org/config/1.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.org/config/1.0 http://activemq.apache.org/schema/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

  <!-- Allows us to use system properties as variables in this configuration file -->
  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
  
  <broker xmlns=""http://activemq.org/config/1.0"" brokerName=""slave"" masterConnectorURI=""tcp://localhost:61616"" deleteAllMessagesOnStartup=""true"" persistent=""false"">
  
    <!-- The transport connectors ActiveMQ will listen to -->
    <transportConnectors>
       <transportConnector uri=""tcp://localhost:61617"" />
    </transportConnectors>

  </broker>

</beans>


This is the master's cfg file 

<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.org/config/1.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.org/config/1.0 http://activemq.apache.org/schema/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

  <!-- Allows us to use system properties as variables in this configuration file -->
  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
  
  <broker xmlns=""http://activemq.org/config/1.0"" brokerName=""master"" persistent=""false"" deleteAllMessagesOnStartup=""true"" plugins=""#joe"">
  
    <!-- The transport connectors ActiveMQ will listen to -->
    <transportConnectors>
       <transportConnector uri=""tcp://localhost:61616"" />      
    </transportConnectors>

  </broker>
  
  <bean id=""joe"" class=""com.ttm.activemq.joe.JoePlugin""/>	

</beans>




","26/Jun/09 18:14;gtully;Joe, it did not commit your patch as is, but changed the MasterBroker filter to not propagate the stop request and just remove it's self. I think this is the correct thing to do in this scenario as not stopping the MasterBroker filter will just ensure that it fails to sync with the slave. The test case shows that this fix stops a plugin getting a stop request.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Synchronization issue with AMQTransactionStore - can leave duplicate transaction hanging about that can hold up journal cleanup,AMQ-2307,12482708,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Jun/09 12:18,26/Jun/09 12:35,30/Jan/20 16:55,26/Jun/09 12:20,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,There is a small synchronization window in AMQTransacitonStore where transactions are created that can lead to duplicate transactions hanging about in the inflight list. This dangling transaction will hold up journal disk cleanup as the file referenced by the transaction will not be released till the broker is restarted. If this happens a bunch of times then the journal can run out of disk space.,"high load, many concurrent producers and consumers using transactions and AMQ store - multi core unix box.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74989,,,Fri Jun 26 12:20:16 UTC 2009,,,,,,,,"0|i182nr:",255233,,,,,,,,,,,,,,,,,,,"26/Jun/09 12:20;gtully;unit test and fix applied in [r788646|http://svn.apache.org/viewvc?view=rev&revision=788646]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in SelectorParser LRUCache,AMQ-2290,12482948,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,chetansarva,chetansarva,15/Jun/09 16:23,19/Jun/09 11:00,30/Jan/20 16:55,19/Jun/09 11:00,5.3.0,,,,,,,5.3.0,,,Selector,,,,0,"There appears to be a memory leak in the LRUCache used by the SelectorParser. We have a simple selector-based request/response implementation which means we create a new selector on every request and these appear to be sticking around despite the use of an LRUCache with a 10,000 entry limit. A quick look at the LRUCache code didn't reveal any obvious problems, so I'm not sure what's going on here. For the time being we are rolling back to 5.2. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/09 13:08;chetansarva;SelectorParser.jj.patch;https://issues.apache.org/jira/secure/attachment/12461542/SelectorParser.jj.patch","15/Jun/09 16:25;chetansarva;selectorparser-leak.png;https://issues.apache.org/jira/secure/attachment/12461528/selectorparser-leak.png",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-06-15 16:55:28.386,,,false,,,,,,,,,,,,,,,,,74994,,,Fri Jun 19 11:00:57 UTC 2009,,,,,,,,"0|i14pxz:",235668,,,,,,,,,,,,,,,,,,,"15/Jun/09 16:25;chetansarva;Attached is a screenshot from our heap dump analysis showing the large number of entries in the LRUCache","15/Jun/09 16:55;gtully;does the 80 in that screenshot indicate the number of LRUCache instances? If so, what container are you running. There must be a bunch of classloaders in the mix that can result in multiple instances of that static member.
","15/Jun/09 17:19;chetansarva;Sorry, I should have captured the column headers as well. The 3 columns are: shallow heap (bytes), retained heap (bytes), and percentage. I don't believe there are multiple instances of the LRUCache itself in this case, however there are 650,113 entries in the map. ","18/Jun/09 13:08;chetansarva;I believe the issue is due to the use of the non-thread-safe HashMap as the underlying collection. Wrapping it with Collections.synchronizedMap() should fix it. Attached is a patch which we will be testing soon. ","18/Jun/09 16:47;gtully;ah, that makes some sense. Let us know the outcome of your tests and I will apply your patch. thanks.","18/Jun/09 19:31;chetansarva;We've been hitting it with traffic for about 5 hours and it so far looks great. We previously saw memory consumption jump after just an hour or two. ","19/Jun/09 11:00;gtully;patch applied with thanks, r786451",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console spawns new threads for every refresh and never kills any,AMQ-2169,12482996,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,sherriff,sherriff,19/Mar/09 15:05,17/Jun/09 15:53,30/Jan/20 16:55,17/Jun/09 14:58,5.2.0,,,,,,,5.3.0,,,,,,,1,"How to reproduce: 

* Use JMX to look at the threads. 
* Open the web console gui and hit refresh. 

For every refresh 1-2 new threads are spawned. These are never closed/killed and after a while the broker becomes unresponsive. (For us this happens after about 180-200 threads which corresponds to hitting refresh repeatedly for about one minute.)

The threads are named ActiveMQ Session ID:someId and is of type DedicatedTaskRunner.  

","Red Hat x86_64, 2.6.9-55 kernel 
Web console enabled (started in the same process as the broker)",bdarfler,npfistner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-05-26 20:30:30.771,,,false,,,,,,,,,,,,,,,,,75043,,,Wed Jun 17 15:53:54 UTC 2009,,,,,,,,"0|i0s1bb:",161689,,,,,,,,,,,,,,,,,,,"26/May/09 20:30;bdarfler;I would love to get some movement on this!  I was using the web console to fix https://issues.apache.org/activemq/browse/AMQ-1112","27/May/09 12:07;gtully;scheduling for 5.3","17/Jun/09 14:58;gtully;scope of spring mvc beans was incorrect, should have been scope=""request"". Updated config to match changed in activemq-web-console. The duplication (which is not good) is the result of the broker config and properties files needing to be installation aware. Hense a distribution needs a separate file.","17/Jun/09 15:53;gtully;small update. pulled the query beans into their own file and include via import so that the duplication is removed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 NullPointerException in ReadOnlyAsyncDataManager as accessorPool is not initialized,AMQ-2292,12482932,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dave_stanley,dave_stanley,15/Jun/09 21:58,17/Jun/09 09:33,30/Jan/20 16:55,17/Jun/09 09:33,5.2.0,,,,,,,5.3.0,,,,,,,0,"When you try and use the ReadOnlyAsyncDataManager it throws a NullPointerException like the following:

java.lang.NullPointerException
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.getNextLocation(AsyncDataManager.java:547)
	at org.apache.activemq.kaha.impl.async.ReadOnlyAsyncDataManager.getFirstLocation(ReadOnlyAsyncDataManager.java:128)
	at org.apache.activemq.kaha.impl.async.JournalImplTest.testReadOnlyRead(JournalImplTest.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:81)


The ReadOnlyDataManager needs to init an accessorPool. Testcase and patch attached.",Trunk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/09 21:59;dave_stanley;readonly_async_data_mgr_patch.txt;https://issues.apache.org/jira/secure/attachment/12461537/readonly_async_data_mgr_patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-06-17 09:33:07.765,,,false,,,,,,,,,,,,,,,,,74992,,,Wed Jun 17 09:33:07 UTC 2009,,,,Patch Available,,,,"0|i14c1b:",233413,,,,,,,,,,,,,,,,,,,"15/Jun/09 21:59;dave_stanley;Patch attached.","17/Jun/09 09:33;dejanb;A bit modified pathc applied in SVN revision 785525. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Messages with an ID > (2^31 - 1) are not persisted to long term storage",AMQ-2291,12482950,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Jun/09 16:56,15/Jun/09 16:59,30/Jan/20 16:55,15/Jun/09 16:59,5.2.0,,,,,,,5.3.0,,,Message Store,,,,0,"2009/05/12 10:39:23.551 WARN [org.apache.activemq.store.journal.JournalMessageStore] Could not replay add for message 'ID:xxx-xxx-39616-1241827394543-0:159880:1:1:1'. Message may have already been added. reason: java.io.IOException: Duplicate entry '2147483647' for key 1

The variable sequenceDataType in class org.apache.activemq.store.jdbc.Statments needs to be changed from an INTEGER to a LONG.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74993,,,Mon Jun 15 16:59:08 UTC 2009,,,,,,,,"0|i14cbj:",233459,,,,,,,,,,,,,,,,,,,"15/Jun/09 16:59;dejanb;fixed in svn revision 784862",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB store file lock issue - NPE if store is locked and failIfDatabaseIsLocked is set. Only one try otherwise,AMQ-2285,12483002,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Jun/09 14:36,10/Jun/09 15:03,30/Jan/20 16:55,10/Jun/09 15:03,5.3.0,,,,,,,5.3.0,,,Message Store,,,,0,"{code}
2009-06-10 09:37:12,462 [com.fusesource.support.StoreBrokerRunner.main()] INFO  BrokerService - Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBStore@bb6598
2009-06-10 09:37:12,470 [com.fusesource.support.StoreBrokerRunner.main()] ERROR BrokerService - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: File 'storeBroker1/kahadbstore/lock' could not be locked.
java.io.IOException: File 'storeBroker1/kahadbstore/lock' could not be locked.
	at org.apache.kahadb.util.LockFile.lock(LockFile.java:67)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:225)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:279)
	at org.apache.activemq.store.kahadb.MessageDatabase.start(MessageDatabase.java:164)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:463)
	at com.fusesource.support.StoreBrokerRunner.main(StoreBrokerRunner.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:283)
	at java.lang.Thread.run(Thread.java:613)
2009-06-10 09:37:12,474 [com.fusesource.support.StoreBrokerRunner.main()] INFO  BrokerService - ActiveMQ Message Broker (slaveBroker1, null) is shutting down
2009-06-10 09:37:12,474 [com.fusesource.support.StoreBrokerRunner.main()] INFO  TransportConnector - Connector nio://127.0.0.1:61627?useQueueForAccept=false Stopped
2009-06-10 09:37:12,484 [com.fusesource.support.StoreBrokerRunner.main()] ERROR KahaDBStore - Could not stop service: org.apache.activemq.store.kahadb.KahaDBStore@bb6598. Reason: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.store.kahadb.MessageDatabase.unload(MessageDatabase.java:315)
	at org.apache.activemq.store.kahadb.MessageDatabase.stop(MessageDatabase.java:170)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:541)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:509)
	at com.fusesource.support.StoreBrokerRunner.main(StoreBrokerRunner.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:283)
	at java.lang.Thread.run(Thread.java:613)
2009-06-10 09:37:12,486 [com.fusesource.support.StoreBrokerRunner.main()] DEBUG ManagementContext - Probably not using JRE 1.4: mx4j.tools.naming.NamingService
2009-06-10 09:37:12,492 [com.fusesource.support.StoreBrokerRunner.main()] INFO  BrokerService - ActiveMQ JMS Message Broker (slaveBroker1, null) stopped
2009-06-10 09:37:12,492 [com.fusesource.support.StoreBrokerRunner.main()] WARN  BrokerService - Failed to stop broker after failure in start 
java.lang.NullPointerException
	at org.apache.activemq.store.kahadb.MessageDatabase.unload(MessageDatabase.java:315)
	at org.apache.activemq.store.kahadb.MessageDatabase.stop(MessageDatabase.java:170)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:541)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:509)
	at com.fusesource.support.StoreBrokerRunner.main(StoreBrokerRunner.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:283)
	at java.lang.Thread.run(Thread.java:613)
2009-06-10 09:37:12,493 [com.fusesource.support.StoreBrokerRunner.main()] ERROR StoreBrokerRunner - java.io.IOException: File 'storeBroker1/kahadbstore/lock' could not be locked.
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74996,,,Wed Jun 10 15:03:53 UTC 2009,,,,,,,,"0|i17l9z:",252416,,,,,,,,,,,,,,,,,,,"10/Jun/09 14:37;gtully;URL: http://svn.apache.org/viewvc?rev=783364&view=rev
Log:
fix file lock usage in kahadb store, so shared file system master slave can work

NPE still needs work.","10/Jun/09 15:03;gtully;r783384
pulled file locking logic outside setting opened state.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NIO SelectorWorker not protecting its Selector from mutable operations,AMQ-2277,12482934,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,dave_stanley,dave_stanley,01/Jun/09 16:10,03/Jun/09 09:24,30/Jan/20 16:55,03/Jun/09 09:24,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"When you hit the NIO transport with heavy concurrent connection load the brokers thread usage spikes with lots of threads in the state below.   

""ActiveMQ Transport Initiator: /10.129.112.166:59560"" daemon prio=10 tid=0x007a2fc0 nid=0x34b waiting for monitor entry [0xc4381000..0xc4381888]
        at org.apache.activemq.transport.nio.SelectorManager.register(SelectorManager.java:65)
        - waiting to lock <0xd8b1d920> (a org.apache.activemq.transport.nio.SelectorManager)
        at org.apache.activemq.transport.nio.NIOTransport.initializeStreams(NIOTransport.java:66)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:453)
        at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:146)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
        at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:880)
        - locked <0xdb727578> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
        at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:213)

Problem is easily reproducible when consumer/producer are on a different machine to the broker - when running everything locally .. not so much.

It seems the SelectorWorker is not tolerant of lots of concurrent updates to the state of the Selector, and the selector gets into a bad state. 

Attached patch seems to resolve the issue. Patch adds some locking around when selectorKeys are registered and canceled.
","5.2.x, trunk. Problem seen on Linux and Solaris.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jun/09 16:11;dave_stanley;nio_patch.txt;https://issues.apache.org/jira/secure/attachment/12461523/nio_patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-06-03 09:24:34.314,,,false,,,,,,,,,,,,,,,,,74999,,,Wed Jun 03 09:24:34 UTC 2009,,,,Patch Available,,,,"0|i14c87:",233444,,,,,,,,,,,,,,,,,,,"03/Jun/09 09:24;gtully;patch applied in r781312,
thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Shared Filesystem Master Slave: missing messages,AMQ-2149,12482954,12482550,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,aaronriekenberg,aaronriekenberg,06/Mar/09 18:04,23/May/09 08:48,30/Jan/20 16:55,23/May/09 08:48,5.2.0,,,,,,,5.3.0,,,,,,,0,"I'm finding occasionally messages are not delivered in order in a shared filesystem master slave setup when the master fails and the slave takes over.  I'm running a simple test on one physical machine where the shared filesystem is on a single disk (no SAN currently involved).

I'm attaching a shell script (run_master_slave_brokers.sh) that starts a master and slave broker in the same directory, sleeps 20 seconds, kills the master, sleeps 20 seconds, starts a new slave, sleeps 20 seconds, kills the master, etc.

Also attached is a small java test program (MasterSlaveTest.java)  The program starts 10 JMS senders that send 75kb text messages every 25 ms to unique queues.  These messages contain a sequence number header (a long).  The program also starts 10 receivers (1 for each queue) that keep track of the next expected sequence number and validate each incoming sequence number.  If a receiver gets an unexpected sequence number, the test program exits (System.exit(1)).  Both the senders and receivers use the failover transport to connect to the broker.  Messages being sent are persistent, so in theory there should be no message loss when the master fails and slave takes over.

I run the script to start the brokers, then run my test program.  Most times when the script kills the master and the slave is promoted, things work fine - the test program reconnects, and messages continue to be delivered in order.  If I run this long enough though, eventually my test program fails just after a slave broker is promoted to master with output similar to this:


Mar 6, 2009 11:58:12 AM org.apache.activemq.transport.failover.FailoverTransport doReconnect
INFO: Successfully reconnected to tcp://localhost:61616
Mar 6, 2009 11:58:12 AM org.aaron.MasterSlaveTest$Receiver onMessage
WARNING: test.queue.3 received 630 expected 629


This indicates the receiver for test.queue.3 received message 630 after the slave broker took over and missed message 629.

This seems to happen more often when more senders and receivers are running and more queues are in use.  If I run a single sender/receiver pair on 1 queue, it is very difficult to make this happen.","Ubuntu Linux 8.10 AMD64, Sun JDK 1.6.0.10",aaronriekenberg,bsnyder,dave_stanley,sully6768,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/09 08:58;dejanb;AMQ-2149.zip;https://issues.apache.org/jira/secure/attachment/12461399/AMQ-2149.zip","06/Mar/09 18:05;aaronriekenberg;MasterSlaveTest.java;https://issues.apache.org/jira/secure/attachment/12461341/MasterSlaveTest.java","07/Mar/09 13:53;aaronriekenberg;MasterSlaveTestWithTransactions.java;https://issues.apache.org/jira/secure/attachment/12461383/MasterSlaveTestWithTransactions.java","07/Mar/09 21:16;aaronriekenberg;activemq.log;https://issues.apache.org/jira/secure/attachment/12461384/activemq.log","12/Mar/09 23:16;aaronriekenberg;activemq.log.2009_03_12_1;https://issues.apache.org/jira/secure/attachment/12461397/activemq.log.2009_03_12_1","12/Mar/09 23:16;aaronriekenberg;activemq.log.2009_03_12_2;https://issues.apache.org/jira/secure/attachment/12461398/activemq.log.2009_03_12_2","05/Apr/09 14:38;aaronriekenberg;activemq.log.2009_04_05;https://issues.apache.org/jira/secure/attachment/12461466/activemq.log.2009_04_05","06/Mar/09 18:05;aaronriekenberg;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461382/activemq.xml","26/Mar/09 15:10;gtully;amq2149.patch;https://issues.apache.org/jira/secure/attachment/12461440/amq2149.patch","06/Mar/09 18:04;aaronriekenberg;run_master_slave_brokers.sh;https://issues.apache.org/jira/secure/attachment/12461300/run_master_slave_brokers.sh",,10.0,,,,,,,,,,,,,,,,,,,,2009-03-09 20:49:30.068,,,false,,,,,,,,,,,,,,,,,75053,,,Sat May 23 08:48:14 UTC 2009,,,,,,,,"0|i0s1af:",161685,,,,,,,,,,,,,,,,,,,"07/Mar/09 13:53;aaronriekenberg;I tried several more tests using the script and test program above, with similarly bad results.  So far I am unable to find a completly reliable way to implement master/slave failover with a shared filesystem.

I have tried all tests so far on both Apache ActiveMQ 5.2.0 and the new FUSE message broker 5.3.0.0 with identical results.


1. In my original test, the syncOnWrite parameter for the amqPersistenceAdapter was set to the default value ""false"".  I thought this might be part of my problem, so I changed it to syncOnWrite=""true"".  I am certain changing syncOnWrite had an effect, because it reduced the rate of messages being sent and received to 20 per second.  The test program still used AUTO_ACKNOWLEDGE in the sender and receiver.  This failed after 3 master/slave failovers:

Mar 7, 2009 7:35:42 AM org.aaron.MasterSlaveTest$Receiver onMessage
WARNING: test.queue.9 received 1904 expected 1903


2. Next I set syncOnWrite=""false"" and enabled transactions in both Sender and Receiver.  To do this I changed the call to createSession to have parameters ""true"" and ""Session.SESSION_TRANSACTED"".  I called session.commit after each send and receive.  See MasterSlaveTestWithTransactions.java.

This failed after 4 master/slave failovers:

Mar 7, 2009 7:12:55 AM org.aaron.MasterSlaveTest$Receiver onMessage
WARNING: test.queue.8 received 1530 expected 3703


3. Finally I set syncOnWrite=""true"" and ran again with transactions enabled in both Sender and Receiver (MasterSlaveTestWithTransactions.java).

This failed after 6 master/slave failovers:

Mar 7, 2009 7:32:19 AM org.aaron.MasterSlaveTest$Receiver onMessage
WARNING: test.queue.3 received 1734 expected 1725
","07/Mar/09 21:16;aaronriekenberg;One more piece of information that is hopefully useful: I often see a number of exceptions in the activemq log when a message is delivered out of order just after a master broker fails and the slave takes over.

Here's an example - in this case I was running the non-transacted test program (MasterSlaveTest.java) and syncOnWrite=false.  run_master_slave_brokers.sh does the following:

Sat Mar  7 15:06:09 CST 2009 killing master broker pid 24470, new master pid 24678
Sat Mar  7 15:06:29 CST 2009 started slave broker pid 24883
Sat Mar  7 15:06:49 CST 2009 killing master broker pid 24678, new master pid 24883

The last master failure and slave promotion at 15:06:49 causes test.queue.3 to miss messages 6620 and 6621:

Mar 7, 2009 3:06:51 PM org.aaron.MasterSlaveTest$Receiver onMessage
WARNING: test.queue.3 received 6622 expected 6620

At the same time (15:06:51), there are a number of exceptions in the activemq log complaining about messages not being able to be recovered from the data store - already dispatched.  I've attached the log as ""activemq.log"" if its helpful.","09/Mar/09 20:49;dave_stanley;It seems whats happening is that the default prefetch of 1000 is being used. When the active master is killed, there are unack'd inflight messages on the broker->consumer connection. At that  point all bets are off in terms of the message order, as order will not be guaranteed when the messages are put back on the queue.

If you set the prefetch to 1, everything looks like it works correctly, for example: 
failover:(tcp://localhost:61616)?maxReconnectDelay=1000&jms.prefetchPolicy.queuePrefetch=1&useExponentialBackOff=false

I think if you added some buffering (vs the System.exit()) to the test to handle out of order messages, the consumer will get the messages - albeit out of order.

Regards
/Dave


","10/Mar/09 15:55;dejanb;I did some more testing today and it turns out this can be reproduced even in a single broker environment. Try starting/stopping a single broker until it happens. So IMHO this has to be related to the store recovery. It's also indicative that it usually happens when there is more active data files (4 or 5). Hope to have more info tomorrow. ","12/Mar/09 16:26;dejanb;Just some heads up.

It turns out that with <systemUsage> on you can reproduce this problem even without restarting the broker, so the first step would be turn it off in this case, until we find the cause of this problem.
In this configuration it will not be lost messages for a fair number of consumers (like 10 in your original test case). Though you may experience some duplicate messages. Duplicates are normal in the failover situations and they are usually handled by the connection audit itself. The problem is that in this case the duplicate messages are not in the default 2k audit window so they reach the consumer. I filled the issue to make this window size configurable (https://issues.apache.org/activemq/browse/AMQ-2160), but until then you can add a bit of logic in your consumer to skip these messages.
For a large number of consumers this will still fail for the default broker shutdown rate of 20 secs, but increasing it to 60 secs or more makes this test runs fine for a quite a while. We'll keep investigating it further, but maybe this could help you get started. Can you post back your test results with these workarounds?

Thanks
Dejan","12/Mar/09 23:16;aaronriekenberg;Dejan -

Based on your comments, I tried a couple of tests.  In these tests I was running FUSE message broker 5.3.0.0.  I did not set the prefetch size, so it had the default value.  I did comment out the entire <systemUsage> stanza of the broker's configuration.

1. I tried running with the default broker shutdown rate of 20 seconds as in my original test, to test the effect of removing <systemUsage> only.  This failed after 3 broker failovers.  The activemq log for this run is attached as activemq.log.2009_03_12_1

{{Thu Mar 12 17:59:15 CDT 2009 started master broker pid 28845}}
{{Thu Mar 12 17:59:25 CDT 2009 started slave broker pid 29069}}
{{Thu Mar 12 17:59:35 CDT 2009 killing master broker pid 28845, new master pid 29069}}
{{Thu Mar 12 17:59:55 CDT 2009 started slave broker pid 29285}}
{{Thu Mar 12 18:00:15 CDT 2009 killing master broker pid 29069, new master pid 29285}}
{{Thu Mar 12 18:00:35 CDT 2009 started slave broker pid 29515}}
{{Thu Mar 12 18:00:55 CDT 2009 killing master broker pid 29285, new master pid 29515}}

{{Mar 12, 2009 6:00:56 PM org.apache.activemq.transport.failover.FailoverTransport doReconnect}}
{{INFO: Successfully reconnected to tcp://localhost:61616}}
{{Mar 12, 2009 6:00:56 PM org.aaron.MasterSlaveTest$Receiver onMessage}}
{{WARNING: test.queue.8 received 520 expected 2712}}


2. Then I modified the script so it kills brokers every 60 seconds.  This also failed after 3 broker failovers.  The activemq log for this run is attached as activemq.log.2009_03_12_2

{{Thu Mar 12 18:03:34 CDT 2009 started master broker pid 29871}}
{{Thu Mar 12 18:03:44 CDT 2009 started slave broker pid 30090}}
{{Thu Mar 12 18:04:44 CDT 2009 killing master broker pid 29871, new master pid 30090}}
{{Thu Mar 12 18:05:44 CDT 2009 started slave broker pid 30402}}
{{Thu Mar 12 18:06:44 CDT 2009 killing master broker pid 30090, new master pid 30402}}
{{Thu Mar 12 18:07:44 CDT 2009 started slave broker pid 30725}}
{{Thu Mar 12 18:08:44 CDT 2009 killing master broker pid 30402, new master pid 30725}}

{{Mar 12, 2009 6:08:46 PM org.apache.activemq.transport.failover.FailoverTransport doReconnect}}
{{INFO: Successfully reconnected to tcp://localhost:61616}}
{{Mar 12, 2009 6:08:46 PM org.aaron.MasterSlaveTest$Receiver onMessage}}
{{WARNING: test.queue.5 received 1049 expected 3205}}
","13/Mar/09 08:58;dejanb;Hi Aaron,

what you are seeing now are duplicates that are out of default 2048 audit window size (see sequence numbers). I attached a modified MasterSlave test that skips these kind of messages (along with the activemq.xml used for testing). This should help a bit, but it's not a final solution to your problem. I'll implement now a fix for AMQ-2160 which will allow you to set window size to a larger value and avoid dealing with duplicates in your consumer. We'll also try to make this more stable afterwards, so stay tuned.","13/Mar/09 11:38;aaronriekenberg;Dejan -

Thanks for the information.  I'm not sure I understand the audit window size.  How large would the window need to be in my test for clients not to receive duplicates on failover?  Why does the broker still have messages that were delivered and acknowledged thousands of messages ago (ie 1049 when 3205 is expected)?  Why are these old, already delivered and acknowledged messages being processed on failover?","13/Mar/09 14:09;dejanb;Hi Aaron,

I'm not sure why it happens in this case and it definitely should not send messages processed long time ago. All I can recommend at the moment is that if you receive duplicates in your real-world application, you should deal with them in your consumer. Shutting down the master every 20 sec or so, after all, isn't something you'll have in your production environment. We'll of course try get to the root of the problem and make it work even in this use case.","14/Mar/09 22:27;aaronriekenberg;Dejan -

Thanks for your comments.

I agree a production system would probably not kill a broker every 20 seconds.  I developed this test case after observing occasional problems in testing broker failover in our application.  In our application, causing individual failovers sometimes causes old messages to be redelivered or new messages to be delivered out of order.

Based on testing I have done, I believe there is currently some chance of redelivery of old messages or out of order delivery of new messages on *any* failover, not just after several rapid failovers.  I have observed the test case sometimes causes these problems on the *first* failover.

The reason for the rapid 20-second failovers is just to increase the probability of showing the problem in a short amount of time.","26/Mar/09 15:10;gtully;Here is a patch for this issue. 
There were a bunch of related problems originating from replayed messages from the failover transport. The failover transport replays any message that is in the process of being sent when the connection to the broker is goes down and is resumed. This is fine and expected. The message can be a duplicate and should be suppressed either on the broker side or on the consumer side.

One problem with the persisted hashindex that backs the reference store could result in a spurious message reference and ""could not be recovered, already dispatched message"". This ocurred when the duplicate reference caused an index to be changed and te original freed. The original can still be reference in the recoverNext() from the kahaReferenceStore. DataContainerImplTest shows this. 

In addition, if the duplicate message is received before the existing message is dispatched and acked, the duplicate reference remains and will eventually get dispatched on restart or when the duplicate checker exceeds its range.
Eliminating the duplicate reference at source in the reference store resolves both these issues.
When memory limits are reached, it was possible for a stores messages to be exhausted (cursor gets to the end) causing dispatch to halt until a restart. Dealing with recovery failure due to no space resolves this.
A consumer ack of a duplicate message could be replaced with a delivery ack and get lost, thus leaving the duplicate to be redsipatched on restart and delivered to the consumer when the client side message audit is exceeded. This explains redelivery of old messages. Ensuring each duplicate is acked in turn resolves this.
Finally, an unmatched ack can occur if recovery dispatch has not yet happened after a restart and an ack is received from a consumer as it was outstanding. In this case, the subscription can wait for recovery and a dispatch to kick in such that it will have a record of the target message. 
","26/Mar/09 16:03;gtully;resolved in r758678","30/Mar/09 18:30;gtully;committed some additional changes for this to deal with reaching the cache memory limits. r760075","03/Apr/09 10:23;gtully;added some additional tests variants to exercise topics and queues in a large transaction. main change is in the way acks were delivered post failover. The failover transport state tracker no longer replays acks and the consumer acks duplcates in a transaction as deliveries to ensure the prefetch extension on the broker is extended. deliverAcks on transport resume has also been replaced with ack related state being reset so that normal acking of the redeliveries can ensue. (deliverAcks on resume lead to acks being received before they were dispatched by the recovering broker)
r761597","05/Apr/09 14:37;aaronriekenberg;I checked out the current activemq 5.3-SNAPSHOT from trunk (r762095) and built it.  This should have all of Gary's fixes in it, correct?

I used the attached activemq.xml configuration file and ran my MasterSlaveTest and run_master_slave_brokers.sh to cause failovers.  This version of the test does not use transactions, and syncOnWrite was set to false.

After 3 master/slave failovers one of the queues redelivered message 705 when the client expected 3570.

From my perspective, it appears the problem is not solved by the changes listed so far.  Therefore I am reopening this issue.


Output from MasterSlaveTest:

{{INFO: Successfully reconnected to tcp://localhost:61616}}
{{Apr 5, 2009 7:31:55 AM org.apache.activemq.transport.failover.FailoverTransport doReconnect}}
{{INFO: Successfully reconnected to tcp://localhost:61616}}
{{Apr 5, 2009 7:31:56 AM org.aaron.MasterSlaveTest$Receiver onMessage}}
{{WARNING: test.queue.2 received 705 expected 3570}}


Output from run_master_slave_brokers.sh:

{{Sun Apr  5 07:30:13 CDT 2009 started master broker pid 5691}}
{{Sun Apr  5 07:30:23 CDT 2009 started slave broker pid 5901}}
{{Sun Apr  5 07:30:33 CDT 2009 killing master broker pid 5691, new master pid 5901}}
{{Sun Apr  5 07:30:53 CDT 2009 started slave broker pid 6112}}
{{Sun Apr  5 07:31:13 CDT 2009 killing master broker pid 5901, new master pid 6112}}
{{Sun Apr  5 07:31:33 CDT 2009 started slave broker pid 6336}}
{{Sun Apr  5 07:31:53 CDT 2009 killing master broker pid 6112, new master pid 6336}}


Log file is attached as activemq.log.2009_04_05.","06/Apr/09 10:03;gtully;Hi Aaron, thanks for the fast feedback. I have been able to reproduce the failure/duplicate with the junit test case by changing the sleep send time from 3 to the 25ms, which is what you are using. will work to resolve this today. ","06/Apr/09 19:52;gtully;Aaron, if you refresh and pick up r762464, that should nail it.","06/Apr/09 23:55;aaronriekenberg;Hi Gary -

So far I am unable to break your latest fix.  Will let you know if I run into issues.  Thanks for the fast turnaround.

Will the r762464 piece of the fix be included with the fix for FUSE issue MB-456?","23/May/09 08:48;rajdavies;this looks resolved to me",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wildcards don't work in networkconnector excludeDestinations ,AMQ-1629,12482699,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,komandur,komandur,20/Mar/08 14:57,23/May/09 07:50,30/Jan/20 16:55,23/May/09 07:50,4.1.1,5.0.0,,,,,,5.3.0,,,Broker,,,,0,"Version: 5.0 

We have a simple setup to test excludedDestinations config ...We are using the broker and  example producer & consumer from the binary distribution (broker instances A & B are on different hosts 

Setup: 

producer --- A ---- B--- consumer 

Broker A's activemq.xml has the following for NC config (everythingelse is the same as in the orig config file):

    <networkConnectors> 
      <networkConnector name=""toB"" uri=""static://(tcp://B.foo.com:61616)""> 
           <excludedDestinations> 
                <queue physicalName=""TEST.>"" /> 
           </excludedDestinations> 
     </networkConnector> 
    </networkConnectors> 

Issue: consumer attached to Broker B sees all the messages sent to TEST.FOO (the default messages generated by the producer)

We noticed that none of the queue or topic wildcards work, only specific topic or queue names work in the exclusion. However, http://activemq.apache.org/networks-of-brokers.html states ""N.B. You can use wildcards in inclusive , exclusive destination properties"". Are we missing anything ? 

Thanks 
- Sridhar

",linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Feb/09 14:52;moczarski;DemandForwardingBridgeFilterTest.java;https://issues.apache.org/jira/secure/attachment/12461283/DemandForwardingBridgeFilterTest.java","08/Feb/09 14:52;moczarski;DemandForwardingBridgeSupport.java.patch;https://issues.apache.org/jira/secure/attachment/12461350/DemandForwardingBridgeSupport.java.patch","27/Mar/08 20:39;komandur;amq1629.txt;https://issues.apache.org/jira/secure/attachment/12460926/amq1629.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-04-09 11:08:54.677,,,false,,,,,,,,,,,,,,,,,84515,,,Sat May 23 07:50:01 UTC 2009,,,,,,,,"0|i0s24f:",161820,Regression,,,,,,,,,,,,,,,,,,"20/Mar/08 22:51;komandur;I did a little investigation and the problem appears to be here:

DemandForwardingBridgeSupport.java:
    protected boolean isPermissableDestination(ActiveMQDestination destination) {
        // Are we not bridging temp destinations?
        if (destination.isTemporary() && !configuration.isBridgeTempDestinations()) {
            return false;
        }

       A****  DestinationFilter filter = DestinationFilter.parseFilter(destination);
        ActiveMQDestination[] dests = excludedDestinations;
        if (dests != null && dests.length > 0) {
            for (int i = 0; i < dests.length; i++) {
                ActiveMQDestination match = dests[i];
                if (match != null && filter.matches(match)) {
                    return false;
                }
            }
      }

The DestinationFilter returned (A above) is SimpleDestinationFilter because the destination (TEST.FOO) is ""simple"" ==> filter.matches tries to string comparison eventually( TEST.FOO with TEST.>) and does not match it.
        
 I am not very familiar with the code, but shouldn't  the DestinationFilter reflect wildcard/prefix in either excludedDestination or the queue/topic destination ? 
Thanks
- Sridhar
 ","27/Mar/08 20:38;komandur;I am attaching a  patch that works with  prefixes in the excluded & included destinations. Please review.","09/Apr/08 11:08;rajdavies;Patch applied in svn revision 646268","14/Oct/08 12:26;joef;If you have something like this, all messages get excluded; no matter their destination's name.

<excludedDestinations>       
    <queue physicalName=""fubar.>""/>     
    <topic physicalName=""fubar.>""/>         
</excludedDestinations>     

However, if you change it slightly like this (just took out the 'r' in one of them), then things seem to work.

<excludedDestinations>       
     <queue physicalName=""fubar.>""/>     
      <topic physicalName=""fuba.>""/>         
</excludedDestinations>     

If there are no dots things seem to also work.
 
Bottom line is that this needs more attention and more thorough testing. ","08/Feb/09 14:52;moczarski;I see two problems with the current implementation (version 5.2)  for excluded- and dynamically-included destinations:

1. The type of the destination (queue, topic) is not distincted:
{code:xml}
<excludedDestinations>  
   <topic physicalName="">""/>  
</excludedDestinations>
{code}
Only topics should be excluded but all queues are also excluded.

2. An entry with a wildcard in the list has a side-effect on the following entries:
{code:xml}
<excludedDestinations>
   <queue physicalName=""exclude""/>
</excludedDestinations>
<dynamicallyIncludedDestinations>
   <queue physicalName=""foo.>""/>
   <queue physicalName=""bar.x""/>
</dynamicallyIncludedDestinations>
{code} 
A message to {{bar.x}} will be blocked because of the wildcard in the first entry.

I've created a test case and a new patch. I would be happy for a review of test case and patch.","23/May/09 07:50;rajdavies;Fixed by SVN revision 777821",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inflight message count becomes negative when messages expire,AMQ-2262,12482629,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,21/May/09 19:17,22/May/09 21:27,30/Jan/20 16:55,22/May/09 21:27,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,The inflight message counter is not correctly updated when messages expire. When a large volume of messages expire the count becomes negative.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-05-22 21:27:55.73,,,false,,,,,,,,,,,,,,,,,75007,,,Fri May 22 21:27:55 UTC 2009,,,,,,,,"0|i14byv:",233402,,,,,,,,,,,,,,,,,,,"21/May/09 19:20;dejanb;fixed in svn revision 777225","22/May/09 10:03;dejanb;The committed solution does not work when all messages expires at the consumer. Will be revisited.","22/May/09 21:27;gtully;resolved, counts in topicsubscription were a little eager when message expired or were discarded.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
potential OOM (OutOfMemory) on consumer when all prefetched messages expire,AMQ-2265,12482659,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,22/May/09 10:40,22/May/09 21:25,30/Jan/20 16:55,22/May/09 21:25,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"With a short time to live and a slow consumer, prefetched messages stored on the consumer expire. These get a delivery ack (so more mesages can be dispatched) but remain in the delivered list till a real ack is produced, on the consumption of an non expired message. With a large backlog and very slow consumer each prefetch set can be expired and the delivered list can grow to produce an ome.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75005,,,Fri May 22 21:25:45 UTC 2009,,,,,,,,"0|i14bz3:",233403,,,,,,,,,,,,,,,,,,,"22/May/09 21:25;gtully;expired messages are no longer held in the deliveredMessages list on the consumer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
exception on stop: NIOTransport - Could not stop service: ... Reason: java.nio.channels.CancelledKeyException,AMQ-2253,12482994,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/May/09 12:01,15/May/09 12:03,30/Jan/20 16:55,15/May/09 12:03,5.2.0,,,,,,,5.3.0,,,Transport,,,,0,"When using NIO the broker can emit the following on shutdown {code}
ERROR - NIOTransport                   - Could not stop service: tcp:///127.0.0.1:55470. Reason: java.nio.channels.CancelledKeyException
java.nio.channels.CancelledKeyException
	at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:55)
	at sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:64)
	at org.apache.activemq.transport.nio.SelectorSelection.disable(SelectorSelection.java:52)
	at org.apache.activemq.transport.nio.NIOTransport.doStop(NIOTransport.java:152)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
	at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:499)
	at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:117)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
	at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:91)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:967)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.doStop(ManagedTransportConnection.java:74)
	at org.apache.activemq.broker.TransportConnection$3.run(TransportConnection.java:932)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75011,,,Fri May 15 12:03:49 UTC 2009,,,,,,,,"0|i14c8f:",233445,,,,,,,,,,,,,,,,,,,"15/May/09 12:03;gtully;r775094 - during stop, the selector may be already have no interest, a little check is needed to ensure the exception does not occur.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock with NIO transport and optimizeDispatch,AMQ-2252,12482989,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,14/May/09 15:44,14/May/09 15:51,30/Jan/20 16:55,14/May/09 15:51,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"With concurrent producers and consumers on a queue, it is possible to reproduce the following deadlock:
{code}
Found one Java-level deadlock:
=============================
""NIO Transport Thread"":
  waiting to lock monitor 0x08c78cd4 (object 0x821986b8, a org.apache.activemq.broker.region.Queue$2),
  which is held by ""NIO Transport Thread""
""NIO Transport Thread"":
  waiting to lock monitor 0x08c78d14 (object 0x82198170, a java.lang.Object),
  which is held by ""NIO Transport Thread""

Java stack information for the threads listed above:
===================================================
""NIO Transport Thread"":
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1024)
	- waiting to lock <0x821986b8> (a org.apache.activemq.broker.region.Queue$2)
	at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1240)
	at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1159)
	at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:51)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:255)
	- locked <0x82198170> (a java.lang.Object)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:377)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:463)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:461)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	- locked <0x8219bfb8> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:128)
	at org.apache.activemq.transport.nio.NIOTransport.access$000(NIOTransport.java:44)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:68)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:62)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:98)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
""NIO Transport Thread"":
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:585)
	- waiting to lock <0x82198170> (a java.lang.Object)
	- locked <0x82198168> (a java.lang.Object)
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:158)
	at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1377)
	at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1331)
	- locked <0x82198650> (a java.util.ArrayList)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1420)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1103)
	- locked <0x821986b8> (a org.apache.activemq.broker.region.Queue$2)
	at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1240)
	at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1235)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:537)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:480)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:438)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:455)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	- locked <0x8294ded0> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:128)
	at org.apache.activemq.transport.nio.NIOTransport.access$000(NIOTransport.java:44)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:68)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:62)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:98)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75012,,,Thu May 14 15:51:33 UTC 2009,,,,,,,,"0|i14cl3:",233502,,,,,,,,,,,,,,,,,,,"14/May/09 15:45;gtully;tidy stack trace","14/May/09 15:51;gtully;r774829 with test case. Extraneous wakeup in remove which inverts the locking order",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport causes connection / thread leak when broker is unresponsive,AMQ-2246,12482975,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,ccondit,ccondit,11/May/09 23:12,12/May/09 17:15,30/Jan/20 16:55,12/May/09 17:15,5.2.0,,,,,,,5.3.0,,,Connector,,,,0,"We have observed in a production environment cases where an overloaded ActiveMQ broker stops responding to requests in a timely manner -- connections can be created, but communication is slow enough to trigger reconnect.

Unfortunately, the old connections never get cleaned up, leading to resource exhaustion on the both the clients and the broker.
",,npfistner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/May/09 23:13;ccondit;SlowConnectionTest.java;https://issues.apache.org/jira/secure/attachment/12461511/SlowConnectionTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-05-12 17:15:25.481,,,false,,,,,,,,,,,,,,,,,75014,,,Tue May 12 17:15:25 UTC 2009,,,,,,,,"0|i0s1i7:",161720,,,,,,,,,,,,,,,,,,,"11/May/09 23:13;ccondit;Test case illustrating the problem.","12/May/09 17:15;gtully;thanks for the test case.
issue resolved in r773985  a timedout or failed connect attempt needed to close off the transport to kill the reader thread",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
On failover it is possible to get duplicate connections broker side which can result in: Cannot add a consumer to a session that had not been registered:,AMQ-2241,12482803,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/May/09 15:44,11/May/09 10:26,30/Jan/20 16:55,05/May/09 13:29,5.2.0,,,,,,,5.3.0,,,Transport,,,,0,"localhost Cannot add a consumer to a session that had not been registered: ID:localhost-40888-1241048176812-0:19:-1
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1255)
	at org.apache.activemq.AdvisoryConsumer.<init>(AdvisoryConsumer.java:50)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1359)
	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:300)
	at org.apache.activemq.ra.ManagedConnectionProxy.createSessionProxy(ManagedConnectionProxy.java:119)
	at org.apache.activemq.ra.ManagedConnectionProxy.createSession(ManagedConnectionProxy.java:105)
	at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:462)
	... 35 more
Caused by: java.lang.IllegalStateException: localhost Cannot add a consumer to a session that had not been registered: ID:localhost-40888-1241048176812-0:19:-1
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:540)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:619)
",,npfistner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75015,,,Mon May 11 10:26:17 UTC 2009,,,,,,,,"0|i0s287:",161837,,,,,,,,,,,,,,,,,,,"01/May/09 15:45;gtully;problem is that on a duplicate connection, for instance on failover but when the broker has not yet disposed of its connection info, it is possible to get a duplicate connection request. the state is reset to have the second connection take over which is ok, but the default session is not recreated on the reset state so the submission of the advisory consumer fails with no session.","05/May/09 13:29;gtully;resolved in r771718","11/May/09 10:26;gtully;similar behavior can also be the result of AMQ-2178",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Memory leak in ConnectionStateTracker (cannot remove connections, sessions or consumers)",AMQ-2178,12482964,12482803,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,sgh,sgh,24/Mar/09 13:50,11/May/09 10:26,30/Jan/20 16:55,26/Mar/09 16:28,5.2.0,,,,,,,5.3.0,,,,,,,0,"After inspecting the heap dump of our application we saw that the ConcurrentHashMap connectionStates in org.apache.activemq.state.ConnectionStateTracker in org.apache.activemq.transport.failover.FailoverTransport consumes very much heap space.

The ConnectionStateTracker is an implementation of a CommandVisitor, but the function to remove connections from the connectionStates ConcurrentHashMap in processRemoveConnection() is never called, as it does not correspond to the CommandVisitor interface. The same applies to the processRemoveConsumer() and processRemoveSession() functions.

I attached a patch to fix those bugs and remove the memory leak in ConnectionStateTracker.","Debian Linux
Processor with 2 cores
Java 1.6.0_07-b06
Bitronix Transaction Manager 1.3.2
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/09 13:53;sgh;fix_command_visitor_in_connection_state_tracker.patch;https://issues.apache.org/jira/secure/attachment/12461421/fix_command_visitor_in_connection_state_tracker.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-03-26 16:28:16.7,,,false,,,,,,,,,,,,,,,,,38773,,,Thu Mar 26 16:28:16 UTC 2009,,,,Patch Available,,,,"0|i14cx3:",233556,,,,,,,,,,,,,,,,,,,"24/Mar/09 13:53;sgh;The bug was found in the FUSE distribution of ActiveMQ but can also be applied to the official Apache distribution.","26/Mar/09 16:28;gtully;nice catch, patch applied with thanks. r758721",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassLoadingAwareObjectInputStream cannot load primary classes,AMQ-1584,12482279,12481996,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rainer klute,rainer klute,15/Feb/08 09:51,01/May/09 10:07,30/Jan/20 16:55,18/Feb/08 12:56,5.1.0,,,,,,,5.1.0,,,Broker,,,,0,"When deserializing a message contents the ClassLoadingAwareObjectInputStream loads any missing classes. However, it cannot load the classes that correspond with the primitive types, i.e. when a class named ""int"" is to be loaded it does not return int.class but instead throws a ClassNotFoundException.

A patch is attached. The princple has been copied from ObjectInputStream.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,"15/Feb/08 09:51;rainer klute;ASF.LICENSE.NOT.GRANTED--ClassLoadingAwareObjectInputStream.diff;https://issues.apache.org/jira/secure/attachment/12461022/ASF.LICENSE.NOT.GRANTED--ClassLoadingAwareObjectInputStream.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-02-18 12:56:23.173,,,false,,,,,,,,,,,,,,,,,84812,,,Mon Feb 18 12:56:23 UTC 2008,,,,Patch Available,,,,"0|i14brb:",233368,,,,,,,,,,,,,,,,,,,"18/Feb/08 12:56;rajdavies;Added patch in SVN revision 628710",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LDAP + JAAS = NullPointerException,AMQ-1781,12482900,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,minfrin,minfrin,06/Jun/08 23:33,29/Apr/09 17:19,30/Jan/20 16:55,29/Apr/09 17:19,5.1.0,,,,,,,5.3.0,,,Broker,,,,0,"If an attempt is made to configure the LDAPLoginModule JAAS plugin, as per the instructions inside either of these two messages, ActiveMQ refuses to start with the NullPointerException reported below.

http://osdir.com/ml/java.activemq.user/2006-05/msg00556.html
http://www.nabble.com/Adding-users-on-the-fly-ACTIVEMQ-to16825211s2354.html#a16984528

Caused by: javax.security.auth.login.LoginException: java.lang.NullPointerException
        at java.lang.String.<init>(String.java:176)
        at org.apache.activemq.jaas.LDAPLoginModule.login(LDAPLoginModule.java:134)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at javax.security.auth.login.LoginContext.invoke(LoginContext.java:769)
        at javax.security.auth.login.LoginContext.access$000(LoginContext.java:186)
        at javax.security.auth.login.LoginContext$4.run(LoginContext.java:683)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
        at javax.security.auth.login.LoginContext.login(LoginContext.java:579)
        at org.apache.activemq.security.JaasAuthenticationBroker.addConnection(JaasAuthenticationBroker.java:76)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:88)
        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:662)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:86)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:125)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
        at java.lang.Thread.run(Thread.java:619)
",,fbolton,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Apr/09 18:19;gseben;AMQ-1781.patch;https://issues.apache.org/jira/secure/attachment/12461468/AMQ-1781.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-02-19 11:14:53.849,,,false,,,,,,,,,,,,,,,,,84774,,,Wed Apr 29 17:19:21 UTC 2009,,,,,,,,"0|i0s2an:",161848,,,,,,,,,,,,,,,,,,,"19/Feb/09 11:14;fbolton;Assuming that the source code in the file LDAPLoginModule.java has not changed in the meantime, it looks like this error (on line 134) is caused by a null password. That is, it looks like the client failed to send a password to the broker.

I managed to get LDAP authentication to work, using the instructions from the references you quoted (by the way, thanks for that! I would have been lost without those references). I plan to write this up for the FUSE documentation set in the near future (i.e. the Message Broker Security Guide).

One minor problem with the LDAP authentication plug-in is that it tends to throw a lot of NullPointerExceptions, mainly because it doesn't check all of the login properties for Nullness (nor does it provide default values). Consequently, you have to set some of the login properties to dummy values, even if you don't really need them.","09/Apr/09 18:19;gseben;Patch for the issue attached.
Added better null checks in LDAPLoginModule. Fixed LDAPLoginModuleTest unit test and updated pom with necessary dependencies for it.

","29/Apr/09 17:19;dejanb;Modified patch committed in SVN revision 769838. I started working on removing commons-primitives snapshot dependency, which ended up in upgrading to apache ds 1.5.4 and junit 4.4 (see http://directory.apache.org/apacheds/1.5/42-using-apacheds-for-unit-tests.html). Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
consumer close with active XA transaction results in java.lang.IllegalArgumentException: The subscription does not exist: ...,AMQ-2034,12482777,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Dec/08 18:35,28/Apr/09 16:46,30/Jan/20 16:55,07/Jan/09 21:00,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"consumer.close removes consumer from broker, later xa transaction commit results in exception as beforeEnd ack of messages fails with IllegalState:
{code}
javax.jms.JMSException: The subscription does not exist: ID:XXXX.dd-52108-1229084857402-0:37:13:1
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
        at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1692)
        at org.apache.activemq.ActiveMQConnection$2$1.run(ActiveMQConnection.java:1637)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.lang.IllegalArgumentException: The subscription does not exist: ID:XXXX.dd-52108-1229084857402-0:37:13:1
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:442)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:291)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
{code}",XA spring-jms consumer.close before XA transaction completion,alexiskinsella,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-01-07 20:48:34.734,,,false,,,,,,,,,,,,,,,,,75113,,,Wed Jan 14 13:46:27 UTC 2009,,,,,,,,"0|i0rrqf:",160137,,,,,,,,,,,,,,,,,,,"15/Dec/08 18:36;gtully;The close should be deferred till the transaction completes. 
Same for session.close, it is ok to close the session while XA is still looking after the transaction but a local transaction will be automatically rolled back.","15/Dec/08 21:01;gtully;see svn commit details","07/Jan/09 20:48;djencks;To work in managed environments the ""delay session close"" code has to be in Session, not XASession.  Also I think it needs to check for the sync already having been added so you don't get more than one :-)","07/Jan/09 21:00;djencks;fixed in rev 732489.","07/Jan/09 21:01;djencks;BTW the problem in the managed environment showed up running the tck in geronimo.","14/Jan/09 12:14;gtully;moving the close to session breaks a few unit tests, The TopicTransacted tests. I get 6 failures & 3 errors on a activemq-core test run.
eg: JmsTopicTransactionTest.testSendSessionClose() verifies that session.close rollbacks the un committed local transaction, but with the change, the transaction is never committed.
Only registering the sync on close if the transaction is XA resolved the issue. As in, the transaction is externally controlled so the transaction completion is out of the control of the session.
It is correct unmanaged JMS behavior so I think the unit tests are correct.
Will this break the tck? 

","14/Jan/09 13:46;gtully;r734393. Modified the code a little to only use the synchronization if in an XA tx, possibly this could be if not in localTx such that this will allow the managed case to work,
we need a test case that shows the managed usage from the tck if this change breaks the tck.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Deleting a queue via the admin console does not fully delete persistent messages in that queue,AMQ-2209,12482968,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,15/Apr/09 11:09,15/Apr/09 11:46,30/Jan/20 16:55,15/Apr/09 11:46,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"Here are the instructions to reproduce the issue:

    * Create a queue with admin console
    * Post one ""persistent"" message in queue 'testQueue'
    * Delete queue via admin console
    * Post one ""persistent"" message in queue 'testQueue'

Now there is 2 messages in testQueue !",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75025,,,Wed Apr 15 11:46:24 UTC 2009,,,,,,,,"0|i14cjb:",233494,,,,,,,,,,,,,,,,,,,"15/Apr/09 11:46;dejanb;Fixed in SVN revision 765141",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplex network connector policies are not honrred while consuming,AMQ-2086,12482643,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,27/Jan/09 10:38,10/Apr/09 17:59,30/Jan/20 16:55,10/Apr/09 17:59,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"To reproduce the problem:

1. define a duplex network with some destination policies
2. send a message to the excluded destination on the remote broker
3. try consume the message locally
4. the message should not be consumed (but it is)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75081,,,Fri Apr 10 17:59:37 UTC 2009,,,,,,,,"0|i14c2f:",233418,,,,,,,,,,,,,,,,,,,"27/Jan/09 10:43;dejanb;Fixed in SVN revision 738052","07/Apr/09 10:26;dejanb;The message sent to the excluded destination is discarded on the remote broker. We should be able to consume it locally.","10/Apr/09 17:59;dejanb;fixed in SVN revision 763993",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enqueue and dequeue counts swapped on admin web console,AMQ-1622,12482883,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,pschwamb,pschwamb,13/Mar/08 22:08,09/Apr/09 18:37,30/Jan/20 16:55,09/Apr/09 18:37,5.0.0,,,,,,,5.3.0,,,,,,,0,"When viewing the topics and queue listings in the web admin console, the dequeue count is displayed with the heading ""Messages Received"", and enqueue is displayed with the heading ""Messages Sent"".

That seems backwards to me.  When looking at statistics for a queue, I would assume that ""Messages Sent"" are messages sent from the queue (dequeueCount), and ""Messages Received"" are messages received by the queue (enqueueCount).

Here's a patch that swaps them.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/08 22:08;pschwamb;ASF.LICENSE.NOT.GRANTED--web_console_patch.txt;https://issues.apache.org/jira/secure/attachment/12461044/ASF.LICENSE.NOT.GRANTED--web_console_patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-04-09 17:22:01.995,,,false,,,,,,,,,,,,,,,,,84633,,,Thu Apr 09 18:37:13 UTC 2009,,,,Patch Available,,,,"0|i181xj:",255115,,,,,,,,,,,,,,,,,,,"09/Apr/09 17:22;bwtaylor;I too am confused by this, but instead of swapping them, I propose changing this to ""messages enqueued"" and ""messages dequeued"" which cannot be misinterpreted, and this matches what you would see via JMX. The problem with ""sent"" and ""received"" is that it's ambiguous, because it raises the question ""by whom"". Messages are sent from producer to broker and then sent from broker to consumer. They are received by the broker, then received by the consumer. So a column that says ""messages sent"" or ""messages received"" inherently will be confusing.","09/Apr/09 18:37;dejanb;Headings changed to enqueued/dequeued in SVN revision 763765",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent test failure -- like JmsTransactionTestSupport.testReceiveRollback,AMQ-2078,12482868,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,djencks,djencks,20/Jan/09 02:05,09/Apr/09 12:38,30/Jan/20 16:55,09/Apr/09 12:38,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"I'm seeing intermittent test failures in the tck in a test similar to JmsTransactionTestSupport.testReceiveRollback, except done with xa UserTransactions and through the ra.  Running the test individually always passes but running it in a group usually falis.

I've extended the JmsTransactionTestSupport to work with xa tx using the ra but this test always passes for me.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-04-09 12:38:02.823,,,false,,,,,,,,,,,,,,,,,75086,,,Thu Apr 09 12:38:02 UTC 2009,,,,,,,,"0|i0s2y7:",161954,,,,,,,,,,,,,,,,,,,"20/Jan/09 02:07;djencks;Committed xa/ra version of existing tests in rev 735912 and 735913","09/Apr/09 12:38;dejanb;This should have been resolved in SVN revision 748258",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException during broker start on brokerid ,AMQ-2199,12483931,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,justinpitts@gmail.com,justinpitts@gmail.com,08/Apr/09 03:16,09/Apr/09 09:07,30/Jan/20 16:55,09/Apr/09 09:07,5.1.0,5.2.0,,,,,,5.3.0,,,Broker,,,,0,"I have a configuration where I first start application A with an embedded broker that is not initiating any broker-to-broker connections.
Then, in rapid succession, I start applications B, C, and D, all with embedded brokers that are initiating broker-to-broker connections only to A. Often, this is all on the same machine.

I commonly - but not always - see the following: (this stack trace is 5.1. I have seen this issue on 5.2 also)

java.lang.NullPointerException
        at org.apache.activemq.network.DemandForwardingBridgeSupport.contains(DemandForwardingBridgeSupport.java:748)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteConsumerAdvisory(DemandForwardingBridgeSupport.java:471)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:416)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:154)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
        at java.lang.Thread.run(Thread.java:619) 

The brokerId field is null. I don't see where localBrokerPath[0] is ever set to anything but null.",Debian 5 x86 / vmware esx,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-04-09 09:07:45.601,,,false,,,,,,,,,,,,,,,,,75028,,,Thu Apr 09 09:07:45 UTC 2009,,,,,,,,"0|i14c2n:",233419,,,,,,,,,,,,,,,,,,,"09/Apr/09 09:07;gtully;Came across this behaviour using the debugger yesterday. The initialisation of the brokerId and path was non deterministic. I added a latch that ensures it is initialises before it is used.

resolved in r763565",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageConsumer.receive() does not throw an exception if the connection to the broker is lost.,AMQ-2195,12482913,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,02/Apr/09 14:01,02/Apr/09 14:04,30/Jan/20 16:55,02/Apr/09 14:04,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"If you don't set an ExceptionListener on the connection to the broker from within your consumer you won't get any notification if the connection to the broker has been lost, instead MessageConsumer.receive() will only return null or block indefinitely depending on if you use the timeout parameter or not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75030,,,2009-04-02 14:01:30.0,,,,,,,,"0|i14c5r:",233433,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Protobuf module fails to build,AMQ-2192,12482792,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,01/Apr/09 15:05,01/Apr/09 15:07,30/Jan/20 16:55,01/Apr/09 15:07,5.2.0,,,,,,,5.3.0,,,,,,,0,"There are a missing dependency on protobuf-2.0.0-SNAPSHOT, compilation problems and test failures.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75032,,,Wed Apr 01 15:07:48 UTC 2009,,,,,,,,"0|i14cyv:",233564,,,,,,,,,,,,,,,,,,,"01/Apr/09 15:07;dejanb;Fixed in SVN revision 760910",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
missing jar dependency for activemq-xmpp,AMQ-2097,12482756,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,freetwix,freetwix,04/Feb/09 22:20,31/Mar/09 16:54,30/Jan/20 16:55,31/Mar/09 14:19,5.2.0,,,,,,,5.3.0,,,,,,,0,"there is one missing jar dependency which will prevent users of activemq following the documentation (http://activemq.apache.org/xmpp.html) from connecting successfully.
the bigger problem is that the connector itself does not complain about any missing jar but behaves like in a real connection process (debugging with psi leaves you in a state of ""wtf"").

the missing jar is the wstx-asl-3.0.1.jar (see pom.xml dependencies in the activemq-xmpp).

this should at least be mentioned immediately in the documentation cause the feature itself (xmpp in conjunction with the agent topic) is awesome.
greets,
jochen
","mac os x 10.5.6, java 1.5.0_16, adium 1.3.3rc1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-03-30 17:00:04.634,,,false,,,,,,,,,,,,,,,,,75077,,,Tue Mar 31 16:54:37 UTC 2009,,,,,,,,"0|i182cf:",255182,,,,,,,,,,,,,,,,,,,"04/Feb/09 22:30;freetwix;sorry, thought this will fix it all, but now the conference room functionality is not working with spark. i will reopen the issue if i found out why
greets","04/Feb/09 23:57;freetwix;with adium as xmpp client i was able to connect to the ActiveMQ.Agent via group chat (though there is a strange behaviour doing this a second time)","30/Mar/09 17:00;dejanb;Fix for missing dependency was commited to SVN revision 760045. I'll check these reconnection issues further.","31/Mar/09 14:19;dejanb;I tested the ActiveMQ XMPP support with a few clients and updated documentation accordingly

http://activemq.apache.org/xmpp.html

I think we can close this one now.","31/Mar/09 16:54;freetwix;wow,

nice update of the doc (especially collecting all the clients stuff). if i find any time, i will try to investigate why adium does have problems reconnecting to the groupchat.

greets,
jochen",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-flow: bug fixes in BrokerDatabase and KahaDBStore,AMQ-2189,12482760,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmacnaug,cmacnaug,31/Mar/09 00:47,31/Mar/09 13:35,30/Jan/20 16:55,31/Mar/09 13:35,incubation,,,,,,,incubation,,,,,,,0,"The attached fix resolves a problem in KahaDBStore.KahaDBSession in which addMessage() wasn't using the caller supplied message key but instead allocated a new key. Without using the user supplied key, subsequent deletes would not properly delete the message. Also fixed corresponding test cases to provide a message key when adding messages. 

Also made some fixes to synchronization and delayed event processing in BrokerDatabase. The resulting code is not as performant in swimlanes testing, and should be optimized in the future (the problem is too many threads synchronizing on the opQueue is causing a lot of contention). 

Finally added some miscellaneous fixes to OpenwireProtocolHandler and the test drivers to avoid/detect duplicate messageIds. ",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Mar/09 00:48;cmacnaug;AMQ-2189patch.txt;https://issues.apache.org/jira/secure/attachment/12461463/AMQ-2189patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-03-31 13:35:09.399,,,false,,,,,,,,,,,,,,,,,38770,,,Tue Mar 31 13:35:09 UTC 2009,,,,Patch Available,,,,"0|i182hb:",255204,,,,,,,,,,,,,,,,,,,"31/Mar/09 00:48;cmacnaug;Patch file.","31/Mar/09 13:35;chirino;applied.  Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel module test failures,AMQ-2182,12482490,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,25/Mar/09 17:34,27/Mar/09 09:41,30/Jan/20 16:55,27/Mar/09 09:41,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"Just as a reminder ... there are test failures in activemq-camel module after upgrading to 2.0

target/surefire-reports/org.apache.activemq.camel.component.ActiveMQJmsHeaderRouteTest.txt:Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 3.538 sec <<< FAILURE!
target/surefire-reports/org.apache.activemq.camel.component.InvokeRequestReplyUsingJmsReplyToHeaderTest.txt:Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 22.466 sec <<< FAILURE!
target/surefire-reports/org.apache.activemq.camel.converter.InvokeMessageListenerTest.txt:Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 11.559 sec <<< FAILURE!
target/surefire-reports/org.apache.activemq.camel.converter.InvokeMessageListenerTest.txt:testSendTextMessage(org.apache.activemq.camel.converter.InvokeMessageListenerTest)  Time elapsed: 11.543 sec  <<< FAILURE!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75038,,,Fri Mar 27 09:41:45 UTC 2009,,,,,,,,"0|i14c4f:",233427,,,,,,,,,,,,,,,,,,,"27/Mar/09 09:41;dejanb;Fixed in SVN revision 758789 and Camel SVN revision 759071 (https://issues.apache.org/activemq/browse/CAMEL-1492)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XPath selector fails to select messages correctly when the expression evaluates to 'true' ,AMQ-2179,12482887,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,gseben,gseben,24/Mar/09 16:18,25/Mar/09 09:13,30/Jan/20 16:55,25/Mar/09 09:13,5.0.0,5.1.0,5.2.0,,,,,5.3.0,,,Selector,,,,0,"Currently the XalanXPathEvaluator class will return 'true' or 'false' based on the existence of a node in the XML document that matches the XPath expression. However, XPath expressions themselves can return values of true or false based on a comparison criteria. 
For example, for an input message:
{code}
<root>
  <a key='first' num='1'/>
  <b key='second' num='2'>b</b>
</root>
{code}
A consumer using an XPath selector with an expression such as: 
{code}
XPATH '/root/b=""b""'
{code}
should successfully select and consume the message above. 
The evaluator today would attempt to retrieve a XML node with that expression, but it would fail and return false since the returned value of the expression is a Boolean.

The XPath Selector should be able to handle Boolean expressions.",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/09 16:32;gseben;AMQ-2179.patch;https://issues.apache.org/jira/secure/attachment/12461422/AMQ-2179.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-03-25 09:13:48.375,,,false,,,,,,,,,,,,,,,,,75039,,,Wed Mar 25 09:13:48 UTC 2009,,,,Patch Available,,,,"0|i14c1j:",233414,,,,,,,,,,,,,,,,,,,"24/Mar/09 16:32;gseben;Patch for the issue is attached.

Note that, the selectNodeIterator check is still attempted to maintain previous functionality. In the case of selecting an empty element selectNodeIterator would return true while eval() returns false. 

The fix adds more flexibility to the XPath expressions that can be used and SelectorTest.java was update to to test a wider range of comparisons.","25/Mar/09 09:13;dejanb;Patch committed in SVN revision 758184. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't unsubscribe a durable subscription when there's a virtual topic present on the broker,AMQ-2144,12482879,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,claudiomluz,claudiomluz,26/Feb/09 19:35,13/Mar/09 15:19,30/Jan/20 16:55,13/Mar/09 15:19,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"The scenario is:

There's a virtual topic being used. (i.e. topic VirtualTopic.Orders).

A consumer subscribes to any topic present on the broker and after some time it tries to unsubscribe the durable subscription.

When it calls session.unsubscribe(consumerName) to unsubscribe a durable subscription, it receives the following exception:

Caught: javax.jms.JMSException: org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor cannot be cast to org.apache.activemq.broker.region.Topic
javax.jms.JMSException: org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor cannot be cast to org.apache.activemq.broker.region.Topic
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1244)
	at org.apache.activemq.ActiveMQConnection.unsubscribe(ActiveMQConnection.java:2052)
	at org.apache.activemq.ActiveMQSession.unsubscribe(ActiveMQSession.java:1431)
	at DurableSubscriber.consumeMessagesAndClose(DurableSubscriber.java:206)
	at DurableSubscriber.run(DurableSubscriber.java:112)
	at DurableSubscriber.main(DurableSubscriber.java:70)
Caused by: java.lang.ClassCastException: org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor cannot be cast to org.apache.activemq.broker.region.Topic
	at org.apache.activemq.broker.region.TopicRegion.removeSubscription(TopicRegion.java:139)
	at org.apache.activemq.broker.region.RegionBroker.removeSubscription(RegionBroker.java:409)
	at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:98)
	at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:98)
	at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:98)
	at org.apache.activemq.broker.MutableBrokerFilter.removeSubscription(MutableBrokerFilter.java:105)
	at org.apache.activemq.broker.TransportConnection.processRemoveSubscription(TransportConnection.java:339)
	at org.apache.activemq.command.RemoveSubscriptionInfo.visit(RemoveSubscriptionInfo.java:83)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:619)


The error happens on the following method of org.apache.activemq.broker.region.TopicRegion class:

    public void removeSubscription(ConnectionContext context, RemoveSubscriptionInfo info) throws Exception {
        SubscriptionKey key = new SubscriptionKey(info.getClientId(), info.getSubscriptionName());
        DurableTopicSubscription sub = durableSubscriptions.get(key);
        if (sub == null) {
            throw new InvalidDestinationException(""No durable subscription exists for: "" + info.getSubscriptionName());
        }
        if (sub.isActive()) {
            throw new JMSException(""Durable consumer is in use"");
        }

        durableSubscriptions.remove(key);
        synchronized (destinationsMutex) {
            for (Iterator<Destination> iter = destinations.values().iterator(); iter.hasNext();) {
                Topic topic = (Topic)iter.next();
                topic.deleteSubscription(context, key);
            }
        }
        super.removeConsumer(context, sub.getConsumerInfo());
    }

The virtual topic is present on the destinations collection being iterated but its type is not Topic and that is what causes the error.

If there is no virtual topics present on the broker, unsubscriptions work well.


",Ubuntu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Mar/09 22:03;gseben;AMQ-2144.txt;https://issues.apache.org/jira/secure/attachment/12461396/AMQ-2144.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-03-12 22:03:36.843,,,false,,,,,,,,,,,,,,,,,75054,,,Fri Mar 13 15:19:15 UTC 2009,,,,,,,,"0|i14cxz:",233560,,,,,,,,,,,,,,,,,,,"12/Mar/09 22:03;gseben;Patch and Junit test case attached.","13/Mar/09 15:19;gtully;r753297 - patch applied with thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Master/slave out of sync with multiple consumers,AMQ-2102,12482875,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,danjames,danjames,10/Feb/09 14:52,13/Mar/09 13:25,30/Jan/20 16:55,13/Mar/09 12:05,5.2.0,,,,,,,5.3.0,,,Broker,,,,2,"I'm seeing exceptions like this in a simple master/slave setup:

ERROR Service                        - Async error occurred: javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:DUL1SJAMES-L2-1231-1233929569359-0:4:1:1:207) was not in the pending list for MasterSlaveBug
javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:DUL1SJAMES-L2-1231-1233929569359-0:4:1:1:207) was not in the pending list for MasterSlaveBug

The problem only happens when there are multiple consumers listening to the queue, and is more likely to occur as there are more consumers listening.  I've written a test program that demonstrates the problem.

I start the master and slave with an empty data directory and let them both startup and settle.  Then start the test program.  The test program creates a specified number of consumers, and then starts queuing 256 messages.  The consumers process the message by sending a reply.  The producer counts the replies.  Both consumers and the producer see all the messages, but with multiple consumers it is very likely that the error above will occur and several of the messages will still be queued on the slave.

While debugging through the activemq code, I noticed that both the master and the slave dispatch the message to a consumer's pending list independently.  In other words, it is possible that the master will add the message to consumer A's pending list and the slave will add the message to consumer B's pending list.  Once the message has been processed by consumer A, the master sends a message to the slaving which specifies consumer A so that the slave can remove the message.  The slave looks on its copy of consumer A's pending list and cannot find the message.  As a result, it throws this exception and the message stays stuck on consumer B's pending list on the slave.

Master and slave configurations along with MasterSlaveBug.java are attached to this issue.

Start master and slave brokers:
activemq xbean:master.xml
activemq xbean:slave.xml

Run with (only one consumer, the bug does not appear):
   java -classpath .:activemq-all-5.2.0.jar MasterSlaveBug 1
Run with (sixteen consumers, the bug does appear):
   java -classpath .:activemq-all-5.2.0.jar MasterSlaveBug 16
",,danjames,dougnewton,npfistner,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/09 15:17;yinghe0101;AMQ-2102-03102009.patch;https://issues.apache.org/jira/secure/attachment/12461387/AMQ-2102-03102009.patch","12/Mar/09 15:03;gtully;AMQ2102.12-03.patch;https://issues.apache.org/jira/secure/attachment/12461395/AMQ2102.12-03.patch","10/Feb/09 14:56;danjames;MasterSlaveBug.java;https://issues.apache.org/jira/secure/attachment/12461317/MasterSlaveBug.java","04/Mar/09 23:14;yinghe0101;MasterSlavePatch.patch;https://issues.apache.org/jira/secure/attachment/12461367/MasterSlavePatch.patch","10/Feb/09 14:57;danjames;master.xml;https://issues.apache.org/jira/secure/attachment/12461352/master.xml","10/Feb/09 14:57;danjames;slave.xml;https://issues.apache.org/jira/secure/attachment/12461210/slave.xml","05/Mar/09 13:43;gtully;slaveDispatchOnNotification.patch;https://issues.apache.org/jira/secure/attachment/12461358/slaveDispatchOnNotification.patch",,,,,7.0,,,,,,,,,,,,,,,,,,,,2009-02-19 19:50:59.77,,,false,,,,,,,,,,,,,,,,,75074,,,Fri Mar 13 13:25:01 UTC 2009,,,,,,,,"0|i0s29r:",161844,,,,,,,,,,,,,,,,,,,"19/Feb/09 19:50;dougnewton;I just ran into this exact issue as well in pre-production testing where we are running just two consumers on a queue.  This is a major issue for our production deploy.","02/Mar/09 21:41;yinghe0101;Definitely a major issue. I just run into this pre-production and this needs to be fixed.","04/Mar/09 17:47;yinghe0101;public Subscription addConsumer(ConnectionContext context, ConsumerInfo info) throws Exception {
    	synchronized (addConsumerObj) {
    		sendSyncToSlave(info);
            Subscription answer = super.addConsumer(context, info);
            return answer;
    	}
    }

in MasterBroker.java

this will help but does not completely fix it. it makes sure all consumers are added in the same order to the master and slave. ","04/Mar/09 18:12;yinghe0101;let slave and master dispatch message is really a problem. When master sends MessageAck, how does it know the slave have finished the dispatch? If slave haven't finished, it will fail for ""Unmatched acknowledege"".","04/Mar/09 21:26;gtully;The master cannot know when the slave is done, as the slave does less work, it should be able to keep up, but it the slave machine or JVM is going slow, then this is a problem.

I wonder if ensuring the order of consmer creation in the same on the master and slave is generally sufficient? I am working on having the slave dispatch when it gets a notification of dispatch from the master, the messageDispatchNotification, at which point it can dispatch to the subscription chosen by the master. This seems to work but it won't deal with a slow master.","04/Mar/09 23:22;yinghe0101;thanks for the comment. 

from my approach, the attached patch seems work and I haven't seen a failure using 5000 msg and 16 consumers and i will do more load test maybe. and my master/slave are on the same machine. 

The thing that seems strange to me is the block in preProcessDispatch to sendAsyncToSlave if temporary queue and sendSyncToSlave if persistent queue makes a difference. do you see an explanation? because if no code change for this, i will only see the same error for temporary queue messages and persistent queue with the addConsumer fix is fine.

your approach seems better, if you can have more control on the slave side. please share what you have and i may dig in that route.

ying

","05/Mar/09 13:40;gtully;Ying, I have applied your patch. It is simple and it works. Thanks. I guess remove consumers need a similar lock, just need another test to verify. For the moment, I will shelve the refactor to defer slave dispatch till the notification as it does not seem necessary.
Dan, thanks for the test case, that is included also, although it does not always fail, it always produced the 'slave out of sync' errors on the console.","05/Mar/09 13:43;gtully;This patch defers dispatch on a slave til the dispatch notification so that the slave can honor the dispatch decision made on the master. However, if the master and slave are kept in sync wrt. consumer additions it is not needed. Adding it here as a place holder in case we still need to refactor in this manner.","05/Mar/09 17:14;yinghe0101;hi, Gary
unfortunately the patch I did yesterday does not fix this issue completely. i did more load test and it failed for the same exception. 

i then used your patch and get the following with 5000 msg 16 consumers. I will try to troubleshoot this but i will appreciate your help. Thanks

ERROR MasterBroker                   - Slave Failed
java.lang.ClassCastException: org.apache.activemq.command.ActiveMQTextMessage cannot be cast to org.apache.activemq.broker.region.QueueMessageReference
	at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:49)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:242)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:456)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
ERROR MasterBroker                   - Slave Failed
javax.jms.JMSException: Slave broker out of sync with master - Message: ID:yhe-1337-1236273055924-0:16:1:1:738 on queue://MasterSlaveBug does not exist among pending(200) for subscription: ID:yhe-3603-1236271682179-0:13:1:1
	at org.apache.activemq.broker.region.Queue.getMatchingMessage(Queue.java:1411)
	at org.apache.activemq.broker.region.Queue.processDispatchNotification(Queue.java:1357)
	at org.apache.activemq.broker.region.AbstractRegion.processDispatchNotificationViaDestination(AbstractRegion.java:433)
	at org.apache.activemq.broker.region.QueueRegion.processDispatchNotification(QueueRegion.java:77)
	at org.apache.activemq.broker.region.RegionBroker.processDispatchNotification(RegionBroker.java:585)
	at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:202)
	at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:202)
	at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:202)
	at org.apache.activemq.broker.MutableBrokerFilter.processDispatchNotification(MutableBrokerFilter.java:209)
	at org.apache.activemq.broker.TransportConnection.processMessageDispatchNotification(TransportConnection.java:466)
	at org.apache.activemq.command.MessageDispatchNotification.visit(MessageDispatchNotification.java:77)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)","05/Mar/09 19:15;gtully;sorry, my patch is still a bit of a work in progress. I was using this jira as a shared holder. For the cce,{code} private QueueMessageReference getMatchingMessage(MessageDispatchNotification messageDispatchNotification) throws Exception {code} needs to return a QueueMessageReference. 
Add the following to get it to work better. I still need to validate that the dispatch that that happens here is correct w.r.t a normal dispatch. I have run it by applying the patch to trunk, so only with your changes to MasterBroker, ignoring the MasterBroker changes in the patch. With 30000 messages I still get errors, but of a different kind. More work needed. 
{code}
            if (message == null) {            
                synchronized (messages) {
                    try {
                        messages.reset();
                        while (messages.hasNext()) {
                            MessageReference node = messages.next();
+                            node.incrementReferenceCount();
+                            messages.remove();
                            if (messageId.equals(node.getMessageId())) {
+                                message = this.createMessageReference(node.getMessage());
{code}","05/Mar/09 23:29;yinghe0101;this update helps. did another test and it still has the slave out of sync with broker and another bad thing is consumer now can see duplicate messages. more work needed.

","06/Mar/09 10:53;gtully;ying, could you possibly codify your test in Junit and attach it. The broker setup from this test may be useful:  http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/bugs/AMQ2102Test.java?view=markup
then I can run your test case in tandem against my changes. thanks.","06/Mar/09 18:39;yinghe0101;Gary, i am using the same MasterSlaveBug test to see whether it is still having slave broker out of sync.

As to duplicates, i just simply have a consumer and in it I have a 
{{{
private static HashSet<String> dupCheck = new HashSet<String>();
                   if(!dupCheck.add (textMessage.getText()))
        	    {
        	      System.out.println(""### Message already received ["" + textMessage.getText() + ""]"");
        	    }
}}}","09/Mar/09 16:47;yinghe0101;defer the message dispatch on slave is right I think. but the issue is when multiple consumer is involved, message dispatch notification and message ack are not coming in order in teams of command id. 

is there a way on the slave side to say, when I get a messagedispatchNotification, page in that message and dispatch it?","10/Mar/09 15:17;yinghe0101;Attached AMQ-2102-03102009.patch seems fix all the slave broker out of synch issue. This is patch is created on activemq 5.2.0 official release tagged source. sorry that I run a tight schedule and don't have time to patch on trunk. 

One thing missed in this patch is:
{{{
 public MessageReference getMessage(MessageId id) throws IOException{
    	Message msg = this.store.getMessage(id);
    	return msg;
    }
}}}

in org.apache.activemq.broker.region.cursors.QueueStorePrefetch.java

Here is some explaination:

1. MasterBroker.java changes make sure that each command will arrive on the slave side in the same order. This is necessary because for each specific message, message itself, dispatch notification and message ack has to come in the exact order, otherwise, slave out of sync

2. Queue.java if dispatch notification comes and the messages still not in pending list or pagedIn, it goes to the store to grab the message and add to the pending then do processMessageDispatchNotification. This is necessary because that multiple consumers are involved (eg. dispatch notification for message 201 could come first while only 200 messages on slave side is pagedin or in the pending list)

Please review it. I urgently need a review of this to make sure the changes are fine.

A remaining issue which might or might related to this fix:

I see ""consumer stop consuming message"" when large number of messages is produced and consumed and I have to restart the broker pair. otherwise, the brokers seems hanging. do you have any insight what might go wrong?

","12/Mar/09 15:03;gtully;Yea Ying, I came to the same conclusion.  The message needs to be pulled directly from the store when the pageSize is full and all subscriptions are full also.
This patch is a tidier version of the original. Can you validate on your side. It does not need as many changes to MasterBroker async sends are they will impede performance.
Also, there is a suppression of dispatchNotifications when a subscription is removed.

","13/Mar/09 12:05;gtully;fix committed, Ying, thanks for your input. r753214

slave dispatch now occurs on processDispatchNotification when master has chosen the subscriber. With large volumes and prefetch sizes and short lived consumers messages on the slave may not be in memory and need to be pulled directly from the store. Normally this is not the case though.

Having the master and slave do separate dispatch does not work due to re deliveries and consumer add/remove order and load effects on thread scheduling. with the stricter enforcement of ack delivery to subscriptions this behavior unfolded.","13/Mar/09 13:25;yinghe0101;thank you too. just finished a testing of 2 million messages with this new patch test. it works fine with no mismatch. the consumer stop consuming is due to systemUsage config, also heap needs to bump up otherwise it will get JVM java.lang.OutOfMemoryError: GC overhead limit exceeded.

I am currently observing heap. I have 4 pair of master/slave, looks like the one pair which the consumer is connecting to, after 2 million msgs, has higher used heap, about >10mb higher than the rest of the broker, even after killing all producers and consumers. is there a possible leak? i will continue watch out and have more tests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB store - deadlock on shutdown,AMQ-2153,12482877,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Mar/09 15:39,13/Mar/09 12:30,30/Jan/20 16:55,13/Mar/09 12:30,5.3.0,,,,,,,5.3.0,,,Message Store,,,,0,"little bit of deadlock between the shutdown and the checkpoint thread.
{code}
""ActiveMQ Journal Checkpoint Worker"" prio=5 tid=0x01016f10 nid=0x8dd800 waiting for monitor entry [0xb0d8c000..0xb0d8cd90]
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:468)
	- waiting to lock <0x095ad3e0> (a java.lang.Object)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:261)

""main"" prio=5 tid=0x010013b0 nid=0xb0801000 in Object.wait() [0xb07ff000..0xb0800188]
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0959f608> (a org.apache.activemq.store.kahadb.MessageDatabase$3)
	at java.lang.Thread.join(Thread.java:1113)
	- locked <0x0959f608> (a org.apache.activemq.store.kahadb.MessageDatabase$3)
	at java.lang.Thread.join(Thread.java:1166)
	at org.apache.activemq.store.kahadb.MessageDatabase.close(MessageDatabase.java:310)
	at org.apache.activemq.store.kahadb.MessageDatabase.unload(MessageDatabase.java:327)
	- locked <0x095ad3e0> (a java.lang.Object)
	at org.apache.activemq.store.kahadb.MessageDatabase.stop(MessageDatabase.java:173)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:519)
	at org.apache.activemq.JmsTestSupport.tearDown(JmsTestSupport.java:136)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:96)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:165)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:289)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:993)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75051,,,Fri Mar 13 12:30:00 UTC 2009,,,,,,,,"0|i182dz:",255189,,,,,,,,,,,,,,,,,,,"13/Mar/09 12:30;gtully;r753221",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URL to JIRA is incorrect in the doap.rdf file for ActiveMQ ,AMQ-2150,12482814,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,bsnyder,bsnyder,08/Mar/09 18:39,13/Mar/09 12:21,30/Jan/20 16:55,13/Mar/09 12:21,,,,,,,,5.3.0,,,,,,,0,"The URL to JIRA is incorrect in the doap.rdf file since the activemq.org TLD is no longer available. 

The doap.rdf file is parsed and used by the following site: 

http://projects.apache.org/projects/activemq.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Mar/09 18:40;bsnyder;doap.rdf.patch;https://issues.apache.org/jira/secure/attachment/12461385/doap.rdf.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-03-13 12:21:00.506,,,false,,,,,,,,,,,,,,,,,75052,,,Fri Mar 13 12:21:00 UTC 2009,,,,Patch Available,,,,"0|i182e7:",255190,,,,,,,,,,,,,,,,,,,"13/Mar/09 12:21;gtully;patch applied, thanks,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memoryleak when consuming messages from KahaDBStore,AMQ-2143,12482797,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Feb/09 17:31,26/Feb/09 17:34,30/Jan/20 16:55,26/Feb/09 17:34,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"full discription from user list: Memoryleak when consuming messages from KahaDBStore - http://www.nabble.com/Memoryleak-when-consuming-messages-from-KahaDBStore-td21991929.html#a22141262

Analysis of perf test  from activemq-core using KahaDB under yourkit demonstrates the issue also.",,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75055,,,Thu Feb 26 17:34:27 UTC 2009,,,,,,,,"0|i0s27z:",161836,,,,,,,,,,,,,,,,,,,"26/Feb/09 17:34;gtully;issue with inflight location tracking, was possible to have entry stored and removed! before addition, so the addition to the inflight map was never removed.
resolved in r748218",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition when browsing a queue with active Producers / Consumers,AMQ-1859,12482787,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,aenache,aenache,17/Jul/08 19:11,26/Feb/09 16:40,30/Jan/20 16:55,26/Feb/09 16:40,5.1.0,,,,,,,5.3.0,,,Broker,,,,1,"Browsing a queue aggressively ( ie repeatedly with high frequency ) that is also experiencing message production and consumption results in some messages failing to be delivered to pre-registered consumers.  Messages are visible on the queue to new consumers, but not pre-existing ones.

I've attached a junit test case that show this behaviour.  Note that since this is a race condition, it manifests sporadically.  You may need to run the test a few times before it fails.

The interesting bit is the method testProducerBrowserConsumer().  This sets up a couple of message producers, a message consumer, and a message browser on the same queue.  The producers send a known number of messages on the queue while the browsers creates a number of queue browsers and iterates through the contents.  The consumer pulls messages from the queue using a receive method set to time out after 30 sec.  Once the consumer exits, we start a cleanup consumer to process any remaining messages on the queue.  There should be zero messages outstanding.  This is often not the case.  I've modified the test case, originally, we just asserted that we had received the sent number of messages.  I added the cleanup receiver to demonstrate that new consumers on the queue can see messages that pre-existing ones do not.
","Windows XP Professional, SP2",aenache,josephcu,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/08 19:11;aenache;ASF.LICENSE.NOT.GRANTED--QueueBrowserTest.java;https://issues.apache.org/jira/secure/attachment/12461147/ASF.LICENSE.NOT.GRANTED--QueueBrowserTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-12-22 16:23:07.98,,,false,,,,,,,,,,,,,,,,,84746,,,Thu Feb 26 16:40:59 UTC 2009,,,,,,,,"0|i0s27b:",161833,,,,,,,,,,,,,,,,,,,"22/Dec/08 16:23;dejanb;Can you test this one against 5.2.0. It should be fixed. Thanks, Dejan","24/Feb/09 14:24;aenache;Hello Dejan,

I've tested this with the 5.1, 5.2, and the Feb. 17, 2009 5.3 snapshot.
They all failed, but in slightly different ways.  I've modified the
QueueBrowserTest.java file to show this by changing the
testProducerBrowserConsumer() method as below.

Previously, the method verified that ""Cleanup Receiver 1"" did not see any
messages on the queue.  In 5.1 and 5.2 this test would fail.  In 5.3 it now
passes.  However, in all versions, the number of sent messages does not
equal the number received.  I have added this assertion to the test and it
fails across the board.


  public void testProducerBrowserConsumer() throws InterruptedException,
JMSException
  {
    int      count     = 1000;
    Producer producer1 = new Producer(""Producer 1"", count / 2);
    Producer producer2 = new Producer(""Producer 2"", count / 2);
    Browser  browser   = new Browser(""Browser 1"");
    Receiver receiver  = new Receiver(""Receiver 1"");

    browser.start();
    receiver.start();
    producer1.start();
    producer2.start();
    receiver.join();
    browser.finish();

    int received = receiver.getCount();

    System.out.println(""Received "" + received + "" of "" + count + ""."");

    receiver  = new Receiver(""Cleanup Receiver 1"");
    receiver.start();
    receiver.join();

    assertEquals(0, receiver.getCount());
    assertEquals(count, received);
  }


","24/Feb/09 14:34;dejanb;Hi Anthony, thanks for this update, I'll take a look.","26/Feb/09 16:40;dejanb;Fix committed to SVN revision 748204.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent Test failure: DuplexNetworkTest.testDurableStoreAndForward  (org.apache.activemq.network) - java.lang.IllegalStateException: Message id ID:... could not be recovered from the data store - already dispatched,AMQ-2123,12481900,12482917,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Feb/09 18:24,25/Feb/09 23:24,30/Jan/20 16:55,25/Feb/09 23:10,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"{code}
DuplexNetworkTest.testDurableStoreAndForward  (org.apache.activemq.network)
    javax.jms.JMSException: java.lang.RuntimeException: java.lang.IllegalStateException: Message id ID:pdrhas4_32-40202-1234575036513-14:8:1:1:3 could not be recovered from the data store - already dispatched
    at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
    at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1255)
    Show details »
    « Hide details
    javax.jms.JMSException: java.lang.RuntimeException: java.lang.IllegalStateException: Message id ID:pdrhas4_32-40202-1234575036513-14:8:1:1:3 could not be recovered from the data store - already dispatched
    at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
    at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1255)
    at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1805)
    at org.apache.activemq.ActiveMQMessageConsumer.&init&(ActiveMQMessageConsumer.java:225)
    at org.apache.activemq.ActiveMQTopicSubscriber.&init&(ActiveMQTopicSubscriber.java:117)
    at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1207)
    at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1152)
    at org.apache.activemq.network.SimpleNetworkTest.testDurableStoreAndForward(SimpleNetworkTest.java:127)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at junit.framework.TestCase.runTest(TestCase.java:154)
    at junit.framework.TestCase.runBare(TestCase.java:127)
    at junit.framework.TestResult$1.protect(TestResult.java:106)
    at junit.framework.TestResult.runProtected(TestResult.java:124)
    at junit.framework.TestResult.run(TestResult.java:109)
    at junit.framework.TestCase.run(TestCase.java:118)
    at junit.framework.TestSuite.runTest(TestSuite.java:208)
    at junit.framework.TestSuite.run(TestSuite.java:203)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
    at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
    at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743)
    Caused by: java.lang.RuntimeException: java.lang.RuntimeException: java.lang.IllegalStateException: Message id ID:pdrhas4_32-40202-1234575036513-14:8:1:1:3 could not be recovered from the data store - already dispatched
    at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:104)
    at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.reset(StoreDurableSubscriberCursor.java:225)
    at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:560)
    at org.apache.activemq.broker.region.DurableTopicSubscription.activate(DurableTopicSubscription.java:130)
    at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:105)
    at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:376)
    at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
    at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
    at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
    at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
    at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
    at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:546)
    at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
    at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
    at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:204)
    at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
    at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
    at java.lang.Thread.run(Thread.java:595)
    Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: Message id ID:pdrhas4_32-40202-1234575036513-14:8:1:1:3 could not be recovered from the data store - already dispatched
    at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:239)
    at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:101)
    ... 22 more
    Caused by: java.lang.IllegalStateException: Message id ID:pdrhas4_32-40202-1234575036513-14:8:1:1:3 could not be recovered from the data store - already dispatched
    at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:58)
    at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
    at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.recoverNextMessages(KahaTopicReferenceStore.java:262)
    at org.apache.activemq.store.amq.AMQTopicMessageStore.recoverNextMessages(AMQTopicMessageStore.java:59)
    at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.doFillBatch(TopicStorePrefetch.java:91)
    at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:236)
    ... 23 more
    « Hide details 
{code}",linux rh,donv,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75065,,,Wed Feb 25 23:10:31 UTC 2009,,,,,,,,"0|i0s2qv:",161921,Unit Test Broken,,,,,,,,,,,,,,,,,,"25/Feb/09 22:54;gtully;the problem relates to the number of consumers associated with a topic message send. If 10 consumers are present when the message is persisted, and 11 when the message is dispatched, the ack from the 11th will remove the message. redispatch to any of the others can then fail with the above exception.

With the AMQPersistenceAdapter, writes are batched, so the reference store is updated async. At the point of update, the reference store prepares the required acks for each subscriber in order to keep the message reference around till all subscribers have acked.
The problem arises when the consumer list is updated and another consumer (one that is not in the count that is persisted) gets the message. The set of subscribers used during dispatch is independent of the set persisted. This is a problem. The logic that sets up the acks based on the subscription list is at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.addMessageReference(ConnectionContext, MessageId, ReferenceData)
One fix is to serialize dispatch with a flush to the store and with subscriber additions.I think this will lock up the dispatch logic quite a bit.

The logic in org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.acknowledgeReference(ConnectionContext, String, String, MessageId) can deal with no reference, the case where a message has not been persisted, but it cannot deal with the case of a persisted message and an additional subscriber. Adding the logic to not remove a reference if it is referenced from another subscription resolves the issue. ","25/Feb/09 23:10;gtully;for 6.0 we may want to tie down the set of subscribers a topic message has and carry that with the message reference in some way so that it can be shared by dispatch and by any (possibly async) persistence mechanism. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent test failure - TopicMasterSlaveTest,AMQ-2072,12482621,12481900,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,djencks,djencks,18/Jan/09 07:19,25/Feb/09 23:15,30/Jan/20 16:55,25/Feb/09 23:15,5.3.0,,,,,,,5.3.0,,,,,,,0,"I'm seeing failures of org.apache.activemq.broker.ft.TopicMasterSlaveTest

caused by this:

2009-01-17 17:15:07,132 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (slave, ID:pb.local-53706-1232241285482-0:1) stopped

javax.jms.JMSException: java.lang.RuntimeException: java.lang.IllegalStateException: Message id ID:pb.local-53667-1232241049265-3:0:1:1:78 could not be recovered from the data store - already dispatched
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1250)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1687)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)
	at org.apache.activemq.JmsSendReceiveTestSupport.sendToProducer(JmsSendReceiveTestSupport.java:116)
	at org.apache.activemq.JmsSendReceiveTestSupport.testSendReceive(JmsSendReceiveTestSupport.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:40)
Caused by: java.lang.RuntimeException: java.lang.RuntimeException: java.lang.IllegalStateException: Message id ID:pb.local-53667-1232241049265-3:0:1:1:78 could not be recovered from the data store - already dispatched
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:104)
	at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.reset(StoreDurableSubscriberCursor.java:225)
	at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:563)
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:154)
	at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:197)
	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:49)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:577)
	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:427)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:365)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:352)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:438)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:452)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:642)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:613)
Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: Message id ID:pb.local-53667-1232241049265-3:0:1:1:78 could not be recovered from the data store - already dispatched
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:239)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:101)
	... 25 more
Caused by: java.lang.IllegalStateException: Message id ID:pb.local-53667-1232241049265-3:0:1:1:78 could not be recovered from the data store - already dispatched
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:58)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
	at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.recoverNextMessages(KahaTopicReferenceStore.java:262)
	at org.apache.activemq.store.amq.AMQTopicMessageStore.recoverNextMessages(AMQTopicMessageStore.java:59)
	at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.doFillBatch(TopicStorePrefetch.java:91)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:236)
	... 26 more

This is against trunk, up to date as of today jan 17 2009.  I've seen similar failures in tck tests when a queue with a message on it is destroyed, but I haven't been able to track down the cause.  For the tck problem running the test in the debugger with a few breakpoints caused it to pass consistently.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-02-25 23:15:05.393,,,false,,,,,,,,,,,,,,,,,75091,,,Wed Feb 25 23:15:05 UTC 2009,,,,,,,,"0|i182cv:",255184,,,,,,,,,,,,,,,,,,,"25/Feb/09 23:15;gtully;fix for http://issues.apache.org/activemq/browse/AMQ-2123 nails this also",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
close() from MessageListener.onMessage() with AUTO or DUPS_OK ack mode should acknowedge messages,AMQ-2128,12482560,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Feb/09 12:52,24/Feb/09 17:17,30/Jan/20 16:55,24/Feb/09 17:17,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"With client ack mode, the message will remain unacked if it was not acked before the close. With auto_ack or dups_ok mode, the close() will delivery an ack for all delivered messages, including the message that caused the onMessage call.

code from acrivemq-core test org.apache.activemq.JMSConsumerTest:
{code}
       consumer.setMessageListener(new MessageListener() {
            public void onMessage(Message m) {
                try {
                    TextMessage tm = (TextMessage)m;
                    LOG.info(""Got in first listener: "" + tm.getText());
                    assertEquals("""" + counter.get(), tm.getText());
                    counter.incrementAndGet();
                    if (counter.get() == 2) {
                        sendDone.await();
                        connection.close();
                        got2Done.countDown();
                    }
{code}",,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75063,,,Tue Feb 24 17:17:45 UTC 2009,,,,,,,,"0|i0s1xr:",161790,,,,,,,,,,,,,,,,,,,"24/Feb/09 17:17;gtully;see svn commit comment",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proxy Consumers are not closed when a consumer closes on a networked broker ,AMQ-2109,12482548,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,atooni,atooni,13/Feb/09 08:01,24/Feb/09 15:10,30/Jan/20 16:55,24/Feb/09 15:10,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"This error occurs, when we have two brokers BrokerA and BrokerB. The simplest case is BrokerA being networked to BrokerB with a static network connector. If a consumer is created on BrokerB for a queue TEST, we will also note a consumer being established on BrokerA for that Queue, which is the intended behavior. If the consumer is closed on BrokerB, the proxy consumer on BrokerA continues to exist. Now consider the client reconnects due to failover reasons to BrokerA this time. BrokerA would then have 2 consumers on TEST, causing a portion of the messages being consumed by the proxy consumer. 

So, when a consumer is closed for a queue, the proxy consumers in the peer brokers should also be closed.","This is not related to a specific environment, but could be reproduced on Linux based machines, Windows machines using  different JDK's.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/09 08:03;atooni;NetworkBrokerDetachTest.java;https://issues.apache.org/jira/secure/attachment/12461275/NetworkBrokerDetachTest.java","19/Feb/09 12:34;atooni;amq-2109.txt;https://issues.apache.org/jira/secure/attachment/12461286/amq-2109.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-02-24 15:10:45.932,,,false,,,,,,,,,,,,,,,,,75071,,,Tue Feb 24 15:10:45 UTC 2009,,,,,,,,"0|i14cpz:",233524,,,,,,,,,,,,,,,,,,,"13/Feb/09 08:03;atooni;This is a test case for the error. ","19/Feb/09 12:32;atooni;Analyzing the problem further it seems that the proxy consumer cannot be found once the remote consumer closes. Though the close event is propagated, it is not processed. 
The following diff addresses the problem. It seems, that the consumer id is being changed once the proxy consumer is created both for queues and topics. This makes sense
in case of topics and durable subscribers as those must survive when the consumer disconnects. For queues that does not make sense as a durable subscriber is not needed 
to trigger a desired persistence mechanism. For these reasons the class DurableConduitBridge has been modified according to the following diff:

++++ Snip 

Index: src/main/java/org/apache/activemq/network/DurableConduitBridge.java
===================================================================
--- src/main/java/org/apache/activemq/network/DurableConduitBridge.java	(revision 745834)
+++ src/main/java/org/apache/activemq/network/DurableConduitBridge.java	(working copy)
@@ -82,17 +82,11 @@
         }
         //add our original id to ourselves
         info.addNetworkConsumerId(info.getConsumerId());
-        // not matched so create a new one
-        // but first, if it's durable - changed set the
-        // ConsumerId here - so it won't be removed if the
-        // durable subscriber goes away on the other end
-        if (info.isDurable() || (info.getDestination().isQueue() && !info.getDestination().isTemporary())) {  
-            info.setConsumerId(new ConsumerId(localSessionInfo.getSessionId(), consumerIdGenerator
-                .getNextSequenceId()));
-        }
+
         if (info.isDurable()) {
             // set the subscriber name to something reproducible
-
+            info.setConsumerId(new ConsumerId(localSessionInfo.getSessionId(), consumerIdGenerator
+                    .getNextSequenceId()));
             info.setSubscriptionName(getSubscriberName(info.getDestination()));
         }
         info.setSelector(null);


++++ snap

This patch didn't break any existing test and also succeeded with the NetworkBrokerDetachTest provided earlier. 

","19/Feb/09 12:34;atooni;This file contains the patch that presumably fixes the issue. It has been created based on the ActiveMQ 5.3.0 trunk.","24/Feb/09 15:10;gtully;patch applied with thanks to trunk: r747384",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent test failure - QuickJPAStoreRecoveryBrokerTest,AMQ-2074,12481957,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,djencks,djencks,18/Jan/09 17:09,23/Feb/09 14:39,30/Jan/20 16:55,23/Feb/09 14:39,5.3.0,,,,,,,5.3.0,,,Message Store,,,,0,"running through maven -- failed two times, then succeeded.
Running in IDEA -- hung once, then all tests passed.

surefire report:

  <testcase time=""0.349"" name=""testQueueNonPersistentMessagesLostOnRestart"">
    <error type=""&amp;openjpa-1.0.0-r420667"" message=""The context has been closed.  The stack trace at which the context was closed is available if Runtime=TRACE logging is enabled."">&amp;openjpa-1.0.0-r420667:568756 fatal user error&amp; org.apache.openjpa.persistence.InvalidStateException: The context has been closed.  The stack trace at which the context was closed is available if Runtime=TRACE logging is enabled.
        at org.apache.openjpa.kernel.BrokerImpl.assertOpen(BrokerImpl.java:4291)
        at org.apache.openjpa.kernel.BrokerImpl.beginOperation(BrokerImpl.java:1702)
        at org.apache.openjpa.kernel.BrokerImpl.getUserObject(BrokerImpl.java:563)
        at org.apache.openjpa.persistence.JPAFacadeHelper.toEntityManager(JPAFacadeHelper.java:113)
        at org.apache.openjpa.persistence.PersistenceExceptions.getFailedObject(PersistenceExceptions.java:246)
        at org.apache.openjpa.persistence.PersistenceExceptions.translateUserException(PersistenceExceptions.java:190)
        at org.apache.openjpa.persistence.PersistenceExceptions.translateException(PersistenceExceptions.java:131)
        at org.apache.openjpa.persistence.PersistenceExceptions.getNestedThrowables(PersistenceExceptions.java:233)
        at org.apache.openjpa.persistence.PersistenceExceptions.translateUserException(PersistenceExceptions.java:190)
        at org.apache.openjpa.persistence.PersistenceExceptions.translateException(PersistenceExceptions.java:131)
        at org.apache.openjpa.persistence.PersistenceExceptions.toPersistenceException(PersistenceExceptions.java:83)
        at org.apache.openjpa.persistence.PersistenceExceptions$1.translate(PersistenceExceptions.java:43)
        at org.apache.openjpa.kernel.DelegatingBrokerFactory.translate(DelegatingBrokerFactory.java:96)
        at org.apache.openjpa.kernel.DelegatingBrokerFactory.close(DelegatingBrokerFactory.java:185)
        at org.apache.openjpa.persistence.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:286)
        at org.apache.activemq.store.jpa.JPAPersistenceAdapter.stop(JPAPersistenceAdapter.java:214)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.stop(AMQPersistenceAdapter.java:327)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:512)
        at org.apache.activemq.broker.BrokerTestSupport.tearDown(BrokerTestSupport.java:101)
        at junit.framework.TestCase.runBare(TestCase.java:130)
        at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:118)
        at junit.framework.TestSuite.runTest(TestSuite.java:208)
        at junit.framework.TestSuite.run(TestSuite.java:203)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:122)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:225)
        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:747)
</error>
    <system-err>1  activemq  INFO   [main] openjpa.Runtime - Starting OpenJPA 1.0.0
1  activemq  INFO   [main] openjpa.jdbc.JDBC - Using dictionary class &quot;org.apache.openjpa.jdbc.sql.DerbyDictionary&quot;.
52  activemq  INFO   [main] openjpa.Enhance - Creating subclass and redefining methods for &quot;[class org.apache.activemq.store.jpa.model.StoredMessage, class org.apache.activemq.store.jpa.model.StoredMessageReference]&quot;. This means that your application will be less efficient than it would if you ran the OpenJPA enhancer.
0  activemq  INFO   [main] openjpa.Runtime - Starting OpenJPA 1.0.0
0  activemq  INFO   [main] openjpa.jdbc.JDBC - Using dictionary class &quot;org.apache.openjpa.jdbc.sql.DerbyDictionary&quot;.
55  activemq  INFO   [main] openjpa.Enhance - Creating subclass and redefining methods for &quot;[class org.apache.activemq.store.jpa.model.StoredMessage, class org.apache.activemq.store.jpa.model.StoredMessageReference]&quot;. This means that your application will be less efficient than it would if you ran the OpenJPA enhancer.
</system-err>
  </testcase>

2nd report:

  <testcase time=""0.398"" name=""testQueueNonPersistentMessagesLostOnRestart"">
    <error type=""&amp;openjpa-1.0.0-r420667"" message=""This operation failed for some instances.  See the nested exceptions array for details."">&amp;openjpa-1.0.0-r420667:568756 nonfatal user error&amp; org.apache.openjpa.persistence.InvalidStateException: This operation failed for some instances.  See the nested exceptions array for details.
        at org.apache.openjpa.kernel.AbstractBrokerFactory.assertNoActiveTransaction(AbstractBrokerFactory.java:696)
        at org.apache.openjpa.kernel.AbstractBrokerFactory.close(AbstractBrokerFactory.java:373)
        at org.apache.openjpa.kernel.DelegatingBrokerFactory.close(DelegatingBrokerFactory.java:183)
        at org.apache.openjpa.persistence.EntityManagerFactoryImpl.close(EntityManagerFactoryImpl.java:286)
        at org.apache.activemq.store.jpa.JPAPersistenceAdapter.stop(JPAPersistenceAdapter.java:214)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.stop(AMQPersistenceAdapter.java:327)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:512)
        at org.apache.activemq.broker.BrokerTestSupport.tearDown(BrokerTestSupport.java:101)
        at junit.framework.TestCase.runBare(TestCase.java:130)
        at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:118)
        at junit.framework.TestSuite.runTest(TestSuite.java:208)
        at junit.framework.TestSuite.run(TestSuite.java:203)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:122)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:129)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:225)
        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:747)
Caused by: &amp;openjpa-1.0.0-r420667:568756 nonfatal user error&amp; org.apache.openjpa.persistence.InvalidStateException: This operation cannot be performed while a Transaction is active.
FailedObject: org.apache.openjpa.persistence.EntityManagerImpl@631cb0
        at org.apache.openjpa.kernel.AbstractBrokerFactory.assertNoActiveTransaction(AbstractBrokerFactory.java:690)
        ... 30 more
</error>
    <system-err>1  activemq  INFO   [main] openjpa.Runtime - Starting OpenJPA 1.0.0
4  activemq  INFO   [main] openjpa.jdbc.JDBC - Using dictionary class &quot;org.apache.openjpa.jdbc.sql.DerbyDictionary&quot;.
1  activemq  INFO   [main] openjpa.Runtime - Starting OpenJPA 1.0.0
1  activemq  INFO   [main] openjpa.jdbc.JDBC - Using dictionary class &quot;org.apache.openjpa.jdbc.sql.DerbyDictionary&quot;.
</system-err>
  </testcase>

",os x 10.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-02-23 14:39:57.52,,,false,,,,,,,,,,,,,,,,,75089,,,Mon Feb 23 14:39:57 UTC 2009,,,,,,,,"0|i14c3r:",233424,,,,,,,,,,,,,,,,,,,"23/Feb/09 14:39;dejanb;I've committed some improvement for this module in SVN revision 747030 and didn't manage to reproduce the issues afterwards (I ran tests a couple dozen times). Please, reopen it if you see tests failing again.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-flow's dispatcher's TimerHeap is converting units backwards,AMQ-2133,12482834,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmacnaug,cmacnaug,20/Feb/09 21:58,20/Feb/09 22:36,30/Jan/20 16:55,20/Feb/09 22:36,incubation,,,,,,,incubation,,,,,,,0,When a timer is added to the heap the units were being converted backwards so that adding a Runnable that is suppose to execute in 5000ms would execute in 5 nanoseconds.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/09 22:01;cmacnaug;AMQ-2133patch.txt;https://issues.apache.org/jira/secure/attachment/12461318/AMQ-2133patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-02-20 22:36:52.986,,,false,,,,,,,,,,,,,,,,,38733,,,Fri Feb 20 22:36:52 UTC 2009,,,,Patch Available,,,,"0|i0s0t3:",161607,,,,,,,,,,,,,,,,,,,"20/Feb/09 22:01;cmacnaug;The fix addresses some issues in TimeUnit conversion in the TimerHeap","20/Feb/09 22:36;chirino;Applied.  Thax.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.IndexOutOfBoundsException during dispatcher shutdown coming out of FlowController. ,AMQ-2132,12482839,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmacnaug,cmacnaug,20/Feb/09 20:04,20/Feb/09 20:34,30/Jan/20 16:55,20/Feb/09 20:34,incubation,,,,,,,incubation,,,,,,,0,"RemoteConnection error: java.lang.IndexOutOfBoundsException: Index: 7, Size: 3
  at java.util.ArrayList.RangeCheck(ArrayList.java:546)
  at java.util.ArrayList.get(ArrayList.java:321)
  at org.apache.activemq.dispatch.AbstractPooledDispatcher.chooseDispatcher(AbstractPooledDispatcher.java:132)
  at org.apache.activemq.dispatch.PriorityDispatcher$2$1.execute(PriorityDispatcher.java:89)
  at org.apache.activemq.flow.FlowController.checkUnblockSources(FlowController.java:424)
  at org.apache.activemq.flow.FlowController.dispatchOverflowQueue(FlowController.java:341)
  at org.apache.activemq.flow.FlowController.onUnthrottled(FlowController.java:300)
  at org.apache.activemq.flow.FlowController$1.onUnthrottled(FlowController.java:83)
  at org.apache.activemq.flow.AbstractLimiter.notifyUnThrottleListeners(AbstractLimiter.java:41)
  at org.apache.activemq.flow.SizeLimiter.remove(SizeLimiter.java:68)
  at org.apache.activemq.flow.RemoteConnection$WindowLimiter.remove(RemoteConnection.java:308)
  at org.apache.activemq.flow.RemoteConnection$WindowLimiter.onProtocolMessage(RemoteConnection.java:323)
  at org.apache.activemq.flow.RemoteConnection.onCommand(RemoteConnection.java:92)
  at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
  at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
  at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
  at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:234)
  at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:216)
  at java.lang.Thread.run(Thread.java:613)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/09 20:24;cmacnaug;AMQ-2132patch.txt;https://issues.apache.org/jira/secure/attachment/12461287/AMQ-2132patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-02-20 20:34:05.561,,,false,,,,,,,,,,,,,,,,,75062,,,Fri Feb 20 20:34:05 UTC 2009,,,,Patch Available,,,,"0|i182ev:",255193,,,,,,,,,,,,,,,,,,,"20/Feb/09 20:24;cmacnaug;Patch attached. 

Changed IDispatcher to throw RejectedExecutionException when a request for dispatch is made when it is shutdown. Also modified DispatchContext.requestDispatch to do the same. Modified FlowController to catch and eat this exception. Also changed AbstractPooledDispatcher to keep better track of it's open dispatchers to avoid the ArrayIndexOutOfBounds exception, and changed MockBrokerTest to immediately start the dispatcher after its creation

There are still issues with the mock broker test shutdown sequence that will need to be addressed, but this should ","20/Feb/09 20:25;cmacnaug;Attached patch","20/Feb/09 20:34;chirino;patch applied in rev 746363 thx!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on asyncDispatch of topic - default config for Network subscriptions - intermittent failure of MultiBrokersMultiClientsTest,AMQ-2111,12481999,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Feb/09 12:24,17/Feb/09 12:05,30/Jan/20 16:55,17/Feb/09 12:05,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"org.apache.activemq.usecases.MultiBrokersMultiClientsTest some times fails with:
{code}
java.lang.NullPointerException
	at org.apache.activemq.openwire.v5.BaseDataStreamMarshaller.tightMarshalObjectArray2(BaseDataStreamMarshaller.java:369)
	at org.apache.activemq.openwire.v5.MessageMarshaller.tightMarshal2(MessageMarshaller.java:191)
	at org.apache.activemq.openwire.v5.ActiveMQMessageMarshaller.tightMarshal2(ActiveMQMessageMarshaller.java:90)
	at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject2(OpenWireFormat.java:430)
	at org.apache.activemq.openwire.v5.BaseDataStreamMarshaller.tightMarshalNestedObject2(BaseDataStreamMarshaller.java:136)
	at org.apache.activemq.openwire.v5.MessageDispatchMarshaller.tightMarshal2(MessageDispatchMarshaller.java:105)
	at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:240)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:166)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:237)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:100)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1216)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:800)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:837)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:613)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75070,,,Tue Feb 17 12:05:51 UTC 2009,,,,,,,,"0|i14bvj:",233387,Unit Test Broken,,,,,,,,,,,,,,,,,,"17/Feb/09 12:05;gtully;see svn commit message for detail: rev 744983",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Occasional Deadlock in DuplexNetworkMBeanTest - contention on brokerService with NetworkConnector ,AMQ-2121,12481903,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Feb/09 10:55,17/Feb/09 12:01,30/Jan/20 16:55,17/Feb/09 12:01,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"{code}

Full thread dump Java HotSpot(TM) Client VM (1.5.0_16-133 mixed mode, sharing):

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@7cf915"" daemon prio=5 tid=0x01027240 nid=0x97a400 waiting on condition [0xb169e000..0xb169ed90]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:146)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(AbstractQueuedSynchronizer.java:807)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(AbstractQueuedSynchronizer.java:1122)
	at java.util.concurrent.SynchronousQueue$Node.waitForPut(SynchronousQueue.java:291)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:443)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:475)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:674)
	at java.lang.Thread.run(Thread.java:613)

""ActiveMQ Transport: tcp://localhost/127.0.0.1:61617"" prio=5 tid=0x0102ea70 nid=0x97b200 waiting for monitor entry [0xb18a2000..0xb18a2d90]
	at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:391)
	- waiting to lock <0x0c0bb940> (a java.lang.Object)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:223)
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:108)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:376)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:85)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:546)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x0c0daa80> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.addSubscription(DemandForwardingBridgeSupport.java:607)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.addConsumerInfo(DemandForwardingBridgeSupport.java:935)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteConsumerAdvisory(DemandForwardingBridgeSupport.java:544)
	- locked <0x0c0761a0> (a org.apache.activemq.xbean.XBeanBrokerService)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:442)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:166)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	- locked <0x0c0ceb80> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:613)


""ActiveMQ Data File Writer"" daemon prio=10 tid=0x0102d9f0 nid=0x989a00 in Object.wait() [0xb0f90000..0xb0f90d90]
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0c0b79f8> (a org.apache.activemq.kaha.impl.async.DataFileAppender$1)
	at java.lang.Object.wait(Object.java:474)
	at org.apache.activemq.kaha.impl.async.NIODataFileAppender.processQueue(NIODataFileAppender.java:79)
	- locked <0x0c0b79f8> (a org.apache.activemq.kaha.impl.async.DataFileAppender$1)
	at org.apache.activemq.kaha.impl.async.DataFileAppender$2.run(DataFileAppender.java:227)

...

""VMTransport"" daemon prio=5 tid=0x01028030 nid=0x9b8000 waiting for monitor entry [0xb171f000..0xb171fd90]
	at org.apache.activemq.broker.BrokerService.getTempDataStore(BrokerService.java:1187)
	- waiting to lock <0x0c0761a0> (a org.apache.activemq.xbean.XBeanBrokerService)
	at org.apache.activemq.broker.region.RegionBroker.getTempDataStore(RegionBroker.java:646)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.<init>(FilePendingMessageCursor.java:72)
	at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.<init>(StoreDurableSubscriberCursor.java:66)
	at org.apache.activemq.broker.region.DurableTopicSubscription.<init>(DurableTopicSubscription.java:55)
	at org.apache.activemq.broker.region.TopicRegion.createSubscription(TopicRegion.java:241)
	at org.apache.activemq.broker.jmx.ManagedTopicRegion.createSubscription(ManagedTopicRegion.java:44)
	at org.apache.activemq.broker.region.TopicRegion.addSubscriptionsForDestination(TopicRegion.java:175)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:129)
	- locked <0x0c0bb940> (a java.lang.Object)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:264)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:149)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.RegionBroker.addProducer(RegionBroker.java:331)
	at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:90)
	at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:90)
	at org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:138)
	at org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)
	at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:97)
	at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:505)
	at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:105)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:204)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:613)

""Reference Handler"" daemon prio=10 tid=0x010075f0 nid=0x813e00 in Object.wait() [0xb0984000..0xb0984d90]
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0bcfc660> (a java.lang.ref.Reference$Lock)
	at java.lang.Object.wait(Object.java:474)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
	- locked <0x0bcfc660> (a java.lang.ref.Reference$Lock)

""main"" prio=5 tid=0x010014b0 nid=0xb0801000 waiting on condition [0xb07fe000..0xb0800148]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1841)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:341)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:80)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1244)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1691)
	- locked <0x0c0e0c20> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
	at org.apache.activemq.network.SimpleNetworkTest.testFiltering(SimpleNetworkTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743)

""VM Thread"" prio=9 tid=0x01006d40 nid=0x813000 runnable 

""VM Periodic Task Thread"" prio=9 tid=0x01009b90 nid=0x805800 waiting on condition 

""Exception Catcher Thread"" prio=10 tid=0x01001700 nid=0x80ac00 runnable 

Found one Java-level deadlock:
=============================
""ActiveMQ Transport: tcp://localhost/127.0.0.1:61617"":
  waiting to lock monitor 0x00814e44 (object 0x0c0bb940, a java.lang.Object),
  which is held by ""VMTransport""
""VMTransport"":
  waiting to lock monitor 0x00814e68 (object 0x0c0761a0, a org.apache.activemq.xbean.XBeanBrokerService),
  which is held by ""ActiveMQ Transport: tcp://localhost/127.0.0.1:61617""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Transport: tcp://localhost/127.0.0.1:61617"":
	at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:391)
	- waiting to lock <0x0c0bb940> (a java.lang.Object)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:223)
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:108)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:376)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:85)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:546)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x0c0daa80> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.addSubscription(DemandForwardingBridgeSupport.java:607)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.addConsumerInfo(DemandForwardingBridgeSupport.java:935)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteConsumerAdvisory(DemandForwardingBridgeSupport.java:544)
	- locked <0x0c0761a0> (a org.apache.activemq.xbean.XBeanBrokerService)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:442)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:166)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	- locked <0x0c0ceb80> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:613)
""VMTransport"":
	at org.apache.activemq.broker.BrokerService.getTempDataStore(BrokerService.java:1187)
	- waiting to lock <0x0c0761a0> (a org.apache.activemq.xbean.XBeanBrokerService)
	at org.apache.activemq.broker.region.RegionBroker.getTempDataStore(RegionBroker.java:646)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.<init>(FilePendingMessageCursor.java:72)
	at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.<init>(StoreDurableSubscriberCursor.java:66)
	at org.apache.activemq.broker.region.DurableTopicSubscription.<init>(DurableTopicSubscription.java:55)
	at org.apache.activemq.broker.region.TopicRegion.createSubscription(TopicRegion.java:241)
	at org.apache.activemq.broker.jmx.ManagedTopicRegion.createSubscription(ManagedTopicRegion.java:44)
	at org.apache.activemq.broker.region.TopicRegion.addSubscriptionsForDestination(TopicRegion.java:175)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:129)
	- locked <0x0c0bb940> (a java.lang.Object)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:264)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:149)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.RegionBroker.addProducer(RegionBroker.java:331)
	at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:90)
	at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:90)
	at org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:138)
	at org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)
	at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:97)
	at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:505)
	at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:105)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:204)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:613)

Found 1 deadlock.
{code}",org.apache.activemq.network.DuplexNetworkMBeanTest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75067,,,Tue Feb 17 12:01:18 UTC 2009,,,,,,,,"0|i14c2v:",233420,Unit Test Broken,,,,,,,,,,,,,,,,,,"17/Feb/09 12:01;gtully;brokerService was an inappropriate shared lock, using the VMUrl is less contentious, no real need for a seperate lock object.

rev: 744975",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-flow's Fixes and Refactoring in org.apache.activemq.dispatchPackage,AMQ-2107,12482816,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmacnaug,cmacnaug,12/Feb/09 21:35,13/Feb/09 16:57,30/Jan/20 16:55,13/Feb/09 16:57,incubation,,,,,,,incubation,,,,,,,0,"There is deadlock in PriorityDispatcher.run when processing updates from foreign threads, it holds on to foreignQueue. If there are multiple dispatch threads this can lead to the following deadlock:

Thread [BrokerDispatcher-1] (Suspended)  
  owns: LinkedNodeList<T>  (id=102)  
  waiting for: LinkedNodeList<T>  (id=125)  
  PriorityDispatcher$PriorityDispatchContext.onForeignThreadUpdate() line: 132  
  ExecutionGraphLoadBalancer$ExecutionGraphNode.processForeignUpdates() line: 428  
  PriorityDispatcher$UpdateEvent.execute() line: 79  
  PriorityDispatcher.run() line: 279  
  Thread.run() line: 613  
Thread [BrokerDispatcher-2] (Suspended)  
  owns: LinkedNodeList<T>  (id=125)  
  waiting for: LinkedNodeList<T>  (id=102)  
  PriorityDispatcher$PriorityDispatchContext.onForeignThreadUpdate() line: 132  
  ExecutionGraphLoadBalancer$ExecutionGraphNode.processForeignUpdates() line: 428  
  PriorityDispatcher$UpdateEvent.execute() line: 79  
  PriorityDispatcher.run() line: 279  
  Thread.run() line: 613

The attached patch also includes refactoring of the PriorityPooledDispatcher to use a simplifed ExecutionLoadBalancer interface.",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/09 21:37;cmacnaug;patch.txt;https://issues.apache.org/jira/secure/attachment/12461342/patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-02-13 16:57:10.024,,,false,,,,,,,,,,,,,,,,,75072,,,Fri Feb 13 16:57:10 UTC 2009,,,,Patch Available,,,,"0|i182gf:",255200,,,,,,,,,,,,,,,,,,,"12/Feb/09 21:37;cmacnaug;Patch file for fix. ","13/Feb/09 16:57;chirino;applied..  Thx!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-flow Deadlock in FlowController,AMQ-2108,12482828,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmacnaug,cmacnaug,12/Feb/09 22:42,13/Feb/09 16:56,30/Jan/20 16:55,13/Feb/09 16:56,incubation,,,,,,,incubation,,,,,,,0,"The following deadlock can occur in FlowController.offer(). FlowController shouldn't hold onto the mutex when calling flowElementAccepted

Thread [pipe://Broker#2] (Suspended)	
	Object.wait(long, int) line: not available [native method]	
	ExclusivePriorityQueue<E>(Object).wait() line: 199 [local variables unavailable]	
	FlowController<E>.waitForResume() line: 372	
	FlowController<E>.blockSource(ISourceController<E>) line: 315	
	FlowController<E>.add(E, ISourceController<E>) line: 229	
	PriorityFlowController<E>.add(E, ISourceController<E>) line: 60	
	ExclusivePriorityQueue<E>.add(E, ISourceController<E>) line: 66	
	Router.route(ISourceController<Message>, Message) line: 30	
	RemoteConnection$1.flowElemAccepted(ISourceController<Message>, Message) line: 92	
	RemoteConnection$1.flowElemAccepted(ISourceController, Object) line: 1	
	FlowController<E>.offer(E, ISourceController<E>) line: 266	
	RemoteConnection.onCommand(Object) line: 73	
	PipeTransportFactory$PipeTransport.run() line: 66	
	Thread.run() line: 788	

Thread [consumer1-outbound] (Suspended)	
	FlowController<E>.onFlowResume(ISinkController<E>) line: 136	
	FlowController$2.run() line: 400	
	IDispatcher$RunnableAdapter.dispatch() line: 90	
	PriorityDispatcher$PriorityDispatchContext.dispatch() line: 183	
	PriorityDispatcher.run() line: 263	
	Thread.run() line: 788	
",n/a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/09 22:43;cmacnaug;AMQ2108patch.txt;https://issues.apache.org/jira/secure/attachment/12461309/AMQ2108patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-02-13 16:56:46.372,,,false,,,,,,,,,,,,,,,,,38772,,,Fri Feb 13 16:56:46 UTC 2009,,,,Patch Available,,,,"0|i182g7:",255199,,,,,,,,,,,,,,,,,,,"12/Feb/09 22:43;cmacnaug;Fix for issue","13/Feb/09 16:56;chirino;applied.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failing over in JDBC Master/Slave topology does not preserve transaction state,AMQ-1710,12482697,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,robbugh@earthlink.net,robbugh@earthlink.net,05/May/08 20:08,13/Feb/09 12:00,30/Jan/20 16:55,10/Sep/08 18:04,4.1.2,,,,,,,5.2.0,,,Broker,Transport,,,2,"Recreate steps:

1) Start two brokers in JDBC Master/Slave topology

2) Create an app that puts two or more messages in a queue (two messages are sufficient). Give each message a JMXGroupID to force them to go to the same consumer.

3) Create another app that creates two connection to the broker and on each connection creates a session and a consumer with a unique clientID. Each should attempt to consume messages from the queue defined above.

4) Run the app and when the first message is consumed stop the master. Failover will occur and the slave becomes the new master.

5) Notice that when the transport resumes in the client that received the first message an exception like the following is thrown:
     javax.jms.JMSException: Transaction 'TX:ID:HOSTNAME-3289-1210016021661-0:1:1' has not been started.

6) Notice that the second consumer now recieves both messages.
",Tested on 4.1.1 and 4.1.2,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/08 15:15;msiegenthaler;AMQ-1710.patch;https://issues.apache.org/jira/secure/attachment/12461236/AMQ-1710.patch","05/May/08 20:08;robbugh@earthlink.net;ASF.LICENSE.NOT.GRANTED--FailoverTest.java;https://issues.apache.org/jira/secure/attachment/12461046/ASF.LICENSE.NOT.GRANTED--FailoverTest.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-09-02 15:15:40.15,,,false,,,,,,,,,,,,,,,,,84589,,,Fri Feb 13 12:00:53 UTC 2009,,,,,,,,"0|i0s247:",161819,,,,,,,,,,,,,,,,,,,"05/May/08 20:08;robbugh@earthlink.net;I've attached a test case that implements the recreate steps described above.","05/May/08 20:15;robbugh@earthlink.net;Forgot to mention the session is transactional. The recreate steps should be amended as follows:
Recreate steps:

1) Start two brokers in JDBC Master/Slave topology

2) Create an app that puts two or more messages in a queue (two messages are sufficient). Give each message a JMXGroupID to force them to go to the same consumer.

3) Create another app that creates two connections to the broker and on each connection creates a transactional session and a consumer with a unique clientID. Each client consumes messages from the queue defined above waits 60 seconds then commits the transaction.

4) Run the app and when the first message is consumed stop the master before the commit occurs. Failover will occur and the slave becomes the new master.

5) Notice that when the transport resumes in the client that received the first message an exception like the following is thrown:
javax.jms.JMSException: Transaction 'TX:ID:HOSTNAME-3289-1210016021661-0:1:1' has not been started.

6) Notice that the second consumer now recieves both messages.

I expected the transaction (and the JMXGroupID) to survive across the failover and thus the consumer that retrieves the first message retrieves the seconds one as well.","02/Sep/08 15:15;msiegenthaler;I propose the attached patch for the issue.

It allows producers to survive a failover-situation, all my tests so far were successful (all of them run with JDBC-Master/Slave).

What I did: During the recovery of the transaction I issue a ""begin transaction"" command (TransactionInfo with TransactionInfo.BEGIN). [actually I add it to the transaction-commands on processBeginTransaction, but it gets issued in the recovery]. So all the recovery-commands following on the transaction (like send message or commit-tx) now can find their transaction and do no longer fail with ""transaction not started"".

I'm not a 100-percent sure what happens in a XA-situation as I didn't have the necessary setup. I suspect it works fine, but with XA you can never be sure.

(the patch applies to version 5.1.0, the problem is the same in 4.1 and 5.x)","03/Sep/08 22:06;vadimos;Thank you for suggesting a patch, Mario.
I have applied it but received the following exception in the slave broker
{code}
008-09-03 14:49:58,835 [/127.0.0.1:4038] ERROR Service                        - Async error occurred: javax.jms.JMSException: Could not correlate acknowledgment with dispatched message: MessageAck {commandId = 3709, responseRequired = false, ackType = 0, consumerId = ID:VKATZ-XP1-3975-1220478455256-0:0:4:1, firstMessageId = null, lastMessageId = ID:VKATZ-XP1-3975-1220478455256-0:0:26:1:10, destination = queue://convert.input, transactionId = TX:ID:VKATZ-XP1-3975-1220478455256-0:0:10, messageCount = 1}
javax.jms.JMSException: Could not correlate acknowledgment with dispatched message: MessageAck {commandId = 3709, responseRequired = false, ackType = 0, consumerId = ID:VKATZ-XP1-3975-1220478455256-0:0:4:1, firstMessageId = null, lastMessageId = ID:VKATZ-XP1-3975-1220478455256-0:0:26:1:10, destination = queue://convert.input, transactionId = TX:ID:VKATZ-XP1-3975-1220478455256-0:0:10, messageCount = 1}
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:279)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:443)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
	at java.lang.Thread.run(Thread.java:619)
{code}
I've tested it with amq-5.1.0 and spring-2.5.5 with locally transacted session. Also, even though the slave broker becomes active it hangs after throwing the exception and stops accepting new connections.

thanks,
vadim
","10/Sep/08 09:33;msiegenthaler;Warning: Do not apply my patch before AMQ-1925 is resolved, else things will go badly wrong (undelivered messages are deleted from the store)","10/Sep/08 18:04;rajdavies;Patch code already applied","13/Feb/09 12:00;dhirendra;Hi,

I am using Activemq 5.1.0 and using the master slave configuration with shared file system.

Activemq: Exception is appearing for pending requests when master goes down and slave gets up.

ERROR Service - Async error occurred: javax.jms.JMSException: Could not correlate acknowledgment with dispatched message: MessageAck {commandId = 192281, responseRequired = false, ackType = 3, consumerId = ID:mapgl3-49587-1233655489869-0:0:18:1, firstMessageId = null, lastMessageId = ID:mapgl3-49587-1233655489869-0:8:2:1:603, destination = queue://sybase.delivery.queue, transactionId = null, messageCount = 1}

javax.jms.JMSException: Could not correlate acknowledgment with dispatched message: MessageAck {commandId = 192281, responseRequired = false, ackType = 3, consumerId = ID:mapgl3-49587-1233655489869-0:0:18:1, firstMessageId = null, lastMessageId = ID:mapgl3-49587-1233655489869-0:8:2:1:603, destination = queue://sybase.delivery.queue, transactionId = null, messageCount = 1}

        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:307)

        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)

        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)

        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)

        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)

        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)

        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)

        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:443)

        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)

        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)

        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)

        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)

        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)

        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)

        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)

        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)

        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)

        at java.lang.Thread.run(Thread.java:595)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WARN AdvisoryBroker - Failed to fire message master broker advisory,AMQ-2096,12482798,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,freetwix,freetwix,04/Feb/09 16:43,13/Feb/09 11:29,30/Jan/20 16:55,13/Feb/09 11:29,5.2.0,,,,,,,5.3.0,,,,,,,1,"Starting up activemq with a default configuration + simple authentication + mysql-ds like:

        <plugins>
            <simpleAuthenticationPlugin>
              <users>
                <authenticationUser username=""${activemq.username}"" password=""${activemq.password}""
                  groups=""producers,consumers,admins""/>
              </users>
            </simpleAuthenticationPlugin>

            <authorizationPlugin>
               <map>
                 <authorizationMap>
                   <authorizationEntries>
                     <authorizationEntry queue="">"" write=""producers"" read=""consumers"" admin=""admins"" />
                     <authorizationEntry topic="">"" write=""producers"" read=""consumers"" admin=""admins"" />

                     <authorizationEntry queue=""ActiveMQ.Advisory.>"" write=""all"" read=""all"" admin=""all"" />
                     <authorizationEntry topic=""ActiveMQ.Advisory.>"" write=""all"" read=""all"" admin=""all"" />
                   </authorizationEntries>
                 </authorizationMap>
               </map>
            </authorizationPlugin>            
        </plugins>         

and a default mysql-ds as jdbcPersistenceAdapter results in the following warning message:
 
         WARN AdvisoryBroker - Failed to fire message master broker advisory

there seems to be no problems in the further processing of advisory messages, but the warning is introduced with the use of the authentication plugin.

greets,
jochen","mac os x 10.5.6, java 1.5.0_16",danbucatanschi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-02-10 16:04:08.486,,,false,,,,,,,,,,,,,,,,,75078,,,Fri Feb 13 11:29:51 UTC 2009,,,,,,,,"0|i0s28f:",161838,,,,,,,,,,,,,,,,,,,"10/Feb/09 16:04;danbucatanschi;Please see these links for more information I found on this issue:

http://www.nabble.com/-jira--Created%3A-%28AMQ-2096%29-WARN-AdvisoryBroker---Failed-to-fire-message-master-broker-advisory-tp21834409p21936466.html

http://www.nabble.com/-jira--Created%3A-%28AMQ-2096%29-WARN-AdvisoryBroker---Failed-to-fire-message-master-broker-advisory-tp21834409p21936676.html

Thanks,
-Dan
","13/Feb/09 11:29;dejanb;Fixed in SVN revision 744082 by adding broker security context when firing the advisory",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSXDeliveryCount is not being incremented correctly,AMQ-1952,12482782,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,chirino,chirino,24/Sep/08 20:34,05/Feb/09 13:38,30/Jan/20 16:55,05/Feb/09 13:38,5.2.0,,,,,,,6.0.0,,,Broker,,,,1,"There seems to be a problem with respect to the Redelivered and JMSXDeliveryCount
properties, in that these properties are being incremented even when the message
has never been re-delivered to the consumer (i.e. on initial message delivery).

The behavior appears to be happening when there is > 1 messages in the queue,
the second message and subsequent messages show the redelivered property set to true and
JMSXDeliverCount property with a number greater than 1, when those messages have not been
re-delivered before.",,donnchadh,ibeaumont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-01-13 18:16:54.969,,,false,,,,,,,,,,,,,,,,,75161,,,Thu Feb 05 13:38:10 UTC 2009,,,,,,,,"0|i0alun:",59813,,,,,,,,,,,,,,,,,,,"24/Sep/08 20:36;chirino;I think we may need to extend the wire protocol a bit to gracefully handle this. When the consumer closes, it should let the broker know the last message id that was delivered to the client. That way the broker can mark all the messages between the last one acked and the last one delivered to the client as being redelivered and the rest would not get marked as being redelivered.

But even without the wire protocol change, this case should work today if the prefetch is set to 0. ","24/Sep/08 20:37;chirino;Commit rev 698719 should fix it so that it works for prefetch size 0","13/Jan/09 18:16;gtully;reopening so that this gets on the radar for 6.0 - add the additional attribute to the close message so a grace full close will not result in a redelivery increment.","13/Jan/09 18:17;gtully;we can update the wireformat for 6.0 to support a fix for this.","05/Feb/09 13:38;gtully;resolved by https://issues.apache.org/activemq/browse/AMQ-2087",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maximumRedeliveries not honoured when transacted session is closed without explicit rollback,AMQ-1601,12482795,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,stirlingc,stirlingc,25/Feb/08 22:34,30/Jan/09 16:26,30/Jan/20 16:55,30/Jan/09 16:26,5.1.0,,,,,,,5.3.0,,,Broker,JMS client,,,0,"1) Unzip attachment into a directory
2) Edit build.xml and change activemq.home to point to your ActiveMQ distribution
3) Run ""ant"" and observe that one of the 2 JUnit tests fail
4) Refer to test-report for information about the failure

The first JUnit test creates a temporary broker and submits a single message to the queue ""test.queue"".  It then creates a transacted message consumer that retrieves the message, prints out details about it, and then rollsback and closes the session.  Subsequent retries by the consumer verify that the message is redelivered up to the MAX_REDELIVERIES constant in RedeliveryRollbackTest.java.  Finally, the test verifies that after MAX_REDELIVERIES, test.queue is empy (i.e., the message has been recognized as a poison pill).

The second JUnit test performs the same sequence of operations, but instead of explicitly rolling back the session, it just closes the session.  According to the JavaDoc for javax.jms.session#close():

http://java.sun.com/j2ee/sdk_1.3/techdocs/api/index.html

""Closing a transacted session must roll back the transaction in progress. ""

In other words, I was expecting the behaviour to be the same for both test cases.  However, although the delivery count is updated on the message, it continues to get delivered regardless of the MAX_REDELIVERIES setting.

ADDITIONAL CONCERN
---------------------------------
Observe the console output of the tests and note how the delivery count increments by two for the test that works, but only by one for the test that doesn't:

Attempt 1
Received message id=ID:schow-desktop-4347-1203977945999-2:0:1:1:1, redelivered=false, delivery count=1
Attempt 2
Received message id=ID:schow-desktop-4347-1203977945999-2:0:1:1:1, redelivered=true, delivery count=3
Attempt 3
Received message id=ID:schow-desktop-4347-1203977945999-2:0:1:1:1, redelivered=true, delivery count=5
Attempt 4
Received message id=ID:schow-desktop-4347-1203977945999-2:0:1:1:1, redelivered=true, delivery count=7
Attempt 5
No message available.
Attempt 1
Received message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=false, delivery count=1
Attempt 2
Received message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=true, delivery count=2
Attempt 3
Received message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=true, delivery count=3
Attempt 4
Received message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=true, delivery count=4
Attempt 5
Received message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=true, delivery count=5","Windows XP SP2, Sun JDK 1.5.0_8",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/08 22:34;stirlingc;ASF.LICENSE.NOT.GRANTED--ActiveMQTest.zip;https://issues.apache.org/jira/secure/attachment/12461070/ASF.LICENSE.NOT.GRANTED--ActiveMQTest.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-01-30 16:22:36.101,,,false,,,,,,,,,,,,,,,,,84808,,,Fri Jan 30 16:26:50 UTC 2009,,,,,,,,"0|i181xr:",255116,Unit Test Broken,,,,,,,,,,,,,,,,,,"30/Jan/09 16:22;gtully;similar issue and the fix is relevant.","30/Jan/09 16:26;gtully;this issue is resolved on trunk, see the resolution to the linked issue.

Re the test case: I made the following small changes, diff:
{code}53c53
< 		for (int attempt = 1; attempt <= MAX_REDELIVERIES; attempt++) {
---
> 		for (int attempt = 0; attempt <= MAX_REDELIVERIES; attempt++) {
59c59
< 				if (attempt < MAX_REDELIVERIES) {
---
> 				if (attempt <= MAX_REDELIVERIES) {
78c78
< 		for (int attempt = 1; attempt <= MAX_REDELIVERIES; attempt++) {
---
> 		for (int attempt = 0; attempt <= MAX_REDELIVERIES; attempt++) {
84c84
< 				if (attempt < MAX_REDELIVERIES) {
---
> 				if (attempt <= MAX_REDELIVERIES) {
{code}
as you need to exceed the max deliveries to get a null message. But with these changes it works on trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redilivery counter increase incredible,AMQ-1800,12482796,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tsigelnik,tsigelnik,16/Jun/08 12:44,30/Jan/09 15:57,30/Jan/20 16:55,30/Jan/09 15:57,5.1.0,,,,,,,5.3.0,,,JMS client,,,,0,"I have some transacted session. Each session has one consumer which recive messages in parallel from one queue.
Also I use redeliveryPolicy. When I restart my application and close connection which close sessions which close consumers, message jumps from one closing consumer to another while all consumers will be stopped and rediliveryCounter++ executes every time when message is redispatched

You have to add any flag to connection which says: if connection.stop() is executed then forbore any message redispatching",,tsigelnik,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1730,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-01-30 15:57:22.276,,,false,,,,,,,,,,,,,,,,,84765,,,Fri Jan 30 15:57:22 UTC 2009,,,,,,,,"0|i0s27j:",161834,,,,,,,,,,,,,,,,,,,"16/Jun/08 12:46;tsigelnik;I'm sorry
I've ment ""I have some transacted sessions""","03/Jul/08 06:55;tsigelnik;I've investigated the problem and I thnink the problem is absence of command like RollabckCommand which could increment redelivery counter on server.

It think it should be added something like RollbackCommand and session.sendRollback(rollbackCommand) as like as sesssion.sendAck(ack)","30/Jan/09 15:57;gtully;working on trunk now. see resolution of linked issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redeliveryCounter not updated correctly when using XA transactions and Spring,AMQ-1593,12482790,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,svenpanko,svenpanko,22/Feb/08 09:49,30/Jan/09 15:34,30/Jan/20 16:55,30/Jan/09 15:34,5.0.0,,,,,,,5.3.0,,,,,,,3,"When using ActiveMQ 5 in combination with XA, I noticed that redelivery of messages is not correctly performed. I am using XA in combination with Spring's DefaultMessageListenerContainer (DMLC) and have a simple test case in which the MessageListener throws an IllegalStateException which triggers a transaction rollback. After that, the message is redelivered, but unfortunately not as many times as my redelivery policy specifies. I am using the following settings:

- maximumRedeliveries=3
- initialRedeliveryDelay=10

If I am not mistaken this means I should receive the message 4 times (once initially and then three times redelivered), but I only get it three times. When I log the messages I receive prior to throwing an ISE, I see the following ""inconsistency"" with the redeliveryCounter: the initial message has a counter value of 0, the first redelivery message has a counter value of 2 and the second redelivery message has a counter value of 4. After that, I do not receive an additional message.

I created a simple test case attached to this issue (a Maven 2 project) which is configured with the above settings and shows the described behavior. In order to run the test case, however, you need the Bitronix Transaction Manager (v 1.2) in your local repository (since it is currently not listed in one of the public repositories, you have to download it and put it manually into the local repo). The download url is http://dist.codehaus.org/btm/1.2/btm-dist-1.2.zip and installation is done by unzipping the archive and using

mvn -Dfile=btm-1.2.jar -DgroupId=btm -DartifactId=btm -Dversion=1.2 -DgeneratePom=true -Dpackaging=jar install:install-file 

to copy it to the repo.

Spring's DMLC is set to a cacheLevel of 0 (CACHE_NONE) if an external transaction manager is used. If I change the cacheLevel to 2 (CACHE_SESSION) then the correct number of messages is delivered and the counter is correctly updated, so I am not sure whether this is an issue with ActiveMQ or Spring. Anyways, I think I should not loose any messages if I use XA, regardless of the cacheLevel setting...","Mac OS X 10.4, Java 1.6 DP1",alexiskinsella,ibeaumont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2087,,"22/Feb/08 09:49;svenpanko;ASF.LICENSE.NOT.GRANTED--activemq-redeliverytest.zip;https://issues.apache.org/jira/secure/attachment/12460963/ASF.LICENSE.NOT.GRANTED--activemq-redeliverytest.zip",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-01-30 13:36:10.588,,,false,,,,,,,,,,,,,,,,,84639,,,Fri Jan 30 15:34:29 UTC 2009,,,,,,,,"0|i0rrqn:",160138,,,,,,,,,,,,,,,,,,,"30/Jan/09 13:36;gtully;Hi Sven, Would it be possible to grant an ASF license to your test case? There is a check box in the file upload dialog.  I would like to include a variant in the code base. With the current trunk, (5.3-SNAPSHOT) I see redelivery go 0,1,3 which is still odd. Want to delve a little deeper.","30/Jan/09 14:34;gtully;scrap the license request, I have been able to reproduce with a simple test case. thanks.","30/Jan/09 15:33;gtully;https://issues.apache.org/activemq/browse/AMQ-2087 provides part of the fix.","30/Jan/09 15:34;gtully;fixed in r739307",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message Groups fail to preserve exclusivity when a new consumer is added.,AMQ-2082,12482417,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,ghopper,ghopper,20/Jan/09 20:33,23/Jan/09 16:01,30/Jan/20 16:55,23/Jan/09 16:01,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"If a new consumer is added to a running system, the exclusive property of a message group can be temporarily violated.

Uploading a new unit test. An excerpt of the test results is below, which shows that the message groups GrA and GrB are being handled by both consumers simultaneously.

15:11:58,498 INFO GroupNewConsumerTest - Con2 got message GrA-5
15:11:58,560 INFO GroupNewConsumerTest - Con2 got message GrB-5
15:11:58,560 INFO GroupNewConsumerTest - Con1 got message GrB-3
15:11:58,623 INFO GroupNewConsumerTest - Con1 got message GrA-4
15:11:58,623 INFO GroupNewConsumerTest - Con2 got message GrA-6
15:11:58,685 INFO GroupNewConsumerTest - Con1 got message GrB-4
15:11:58,685 INFO GroupNewConsumerTest - Con2 got message GrB-6
15:11:58,748 INFO GroupNewConsumerTest - Con1 got message GrB-7
15:11:58,748 INFO GroupNewConsumerTest - Con2 got message GrA-7
15:11:58,810 INFO GroupNewConsumerTest - Con1 got message GrB-8
15:11:58,810 INFO GroupNewConsumerTest - Con2 got message GrA-8
15:11:58,873 INFO GroupNewConsumerTest - Con2 got message GrA-9
15:11:58,935 INFO GroupNewConsumerTest - Con2 got message GrB-9

This may be the same issue described in:
http://www.nabble.com/Message-groups-not-working-when-consuming-existing-messages-td18445237.html#a18445237

Note that setting the prefetch to 1 made reproducing the issue much easier. (See the unit test)
keywords: JMSXGroup JMSXGroupID JMSXGroupSeq
","Cent5; Java 6u11; ActiveMQ 5.2;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jan/09 20:33;ghopper;MessageGroupNewConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12461273/MessageGroupNewConsumerTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-01-23 16:01:13.881,,,false,,,,,,,,,,,,,,,,,75084,,,Fri Jan 23 16:01:13 UTC 2009,,,,,,,,"0|i14caf:",233454,,,,,,,,,,,,,,,,,,,"20/Jan/09 20:37;ghopper;After reviewing the test cases and comments from AMQ-2016, my issue is different enough that I am creating a separate ticket.  Moved my test case to the new ticket.","23/Jan/09 16:01;dejanb;This has been fixed with a patch for [AMQ-2016]. I committed the test case (with a few more small changes) in SVN revision 737062, so we can be sure it doesn't repeat in the future. The test case is modified a bit, since you shouldn't start your groups with sequence 0. It will automatically close the group and cause test to fail. Changing it to 1, makes this test pass. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FanoutTransport does not honor the initialReconnectDelay,AMQ-2047,12483927,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,mohankishore@yahoo.com,mohankishore@yahoo.com,30/Dec/08 00:20,15/Jan/09 18:00,30/Jan/20 16:55,15/Jan/09 18:00,5.1.0,5.2.0,,,,,,5.3.0,,,Transport,,,,0,"The TransportHandler does not honor the passed in ""initialReconnectDelay"" parameter. It has a hard-coded value of ""10"" milliseconds.

Would also like to point out that the code seems to assume that the child transport has been created successfully as soon as the ""TransportFactory.compositeConnect()"" returns. During runtime, if a given node is down, the exception is actually thrown a little further down the code - when the ""restoreTransport()"" method is called.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Dec/08 00:24;mohankishore@yahoo.com;patch.txt;https://issues.apache.org/jira/secure/attachment/12461906/patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-01-15 18:00:32.759,,,false,,,,,,,,,,,,,,,,,75104,,,Thu Jan 15 18:00:32 UTC 2009,,,,Patch Available,,,,"0|i14cxr:",233559,,,,,,,,,,,,,,,,,,,"30/Dec/08 00:24;mohankishore@yahoo.com;patch against 5.1 class - basically pushes the ""post successful connect"" code a little lower in the code - until after the ""restoreTransport()"" call.

Also ensures that the ""initialReconnectDelay"" parameter is honored after a reconnect.","15/Jan/09 18:00;dejanb;Committed in the SVN revision 734766. Thanks for the fix",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
memoryUsage and storeUsage of systemUsage in activemq.xml are not associated with a persistence adapter ,AMQ-2064,12482762,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,13/Jan/09 15:22,13/Jan/09 17:46,30/Jan/20 16:55,13/Jan/09 17:46,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"{code}
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""20 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""1 gb"" name=""foo""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""100 mb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
{code}
Memory usage works, but both the store and temp usage are not associated with a persistence adapter so they don't take effect.
The workaround is to configure a persistence adapter bean and ref it:
{code}
 <bean id=""store"" class=""org.apache.activemq.store.amq.AMQPersistenceAdapter"" >
     <property name=""directory"" value=""target/amqdata"" />
     <property name=""maxFileLength"" value=""1000000"" />
     <property name=""checkpointInterval"" value=""5000"" />
     <property name=""cleanupInterval"" value=""5000"" />
   </bean>
 
   <broker xmlns=""http://activemq.apache.org/schema/core""
     persistent=""true""
     advisorySupport=""false""
     dataDirectory=""target/amqdata""
     deleteAllMessagesOnStartup=""true""
     useJmx=""true""
     brokerName=""localhost""
     monitorConnectionSplits=""false""
     splitSystemUsageForProducersConsumers=""false""
     start=""false""
     persistenceAdapter=""#store"">
  
     <!-- Use the following to configure how ActiveMQ is exposed in JMX -->
     <managementContext>
       <managementContext createConnector=""false""/>
     </managementContext>

     <!--  The maximum about of space the broker will use before slowing down producers -->
     <systemUsage>
       <systemUsage sendFailIfNoSpace=""true"" >
         <memoryUsage>
           <memoryUsage limit=""400kb"" />
         </memoryUsage>
         <storeUsage>
           <storeUsage limit=""10mb"" store=""#store"" />
         </storeUsage>       
         <tempUsage>
           <tempUsage limit=""64mb"" />
         </tempUsage>
       </systemUsage>
     </systemUsage>
{code}
from: http://open-source-adventures.blogspot.com/2009/01/limiting-disk-store-usage-with-active.html 


It should  be possible to ensure that a store or temp usage not associated with a store is associated with the broker persistence adapter in XBrokerService afterPropertiesSet.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75096,,,Tue Jan 13 17:46:27 UTC 2009,,,,,,,,"0|i14cev:",233474,,,,,,,,,,,,,,,,,,,"13/Jan/09 17:46;gtully;updated XBeanBrokerService to ensure store and temp usage have the persistence adapter and temp store from the broker in afterPropertiesSet, before the broker is optionally started.

The simple config in activemq.xml now takes effect as it now always has a reference to the brokers resources.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQMessageStore.flushLatch can apparently get stuck,AMQ-2053,12482753,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,04/Jan/09 01:41,07/Jan/09 08:11,30/Jan/20 16:55,07/Jan/09 08:11,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"A couple hours into the tck I see everything freeze.  Looking at the threads there are a lot of waits on Queue.dispatchLock in addSubscription but one thread made it through to AMQMessageStore and is waiting at line 316 in flush on the countdown latch.

Only problem I can see causing this so far is the countdown in asyncWrite not being in a finally block.  I don't see any exceptions in the log.... so not sure yet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75100,,,Wed Jan 07 08:11:27 UTC 2009,,,,,,,,"0|i14bx3:",233394,,,,,,,,,,,,,,,,,,,"07/Jan/09 07:54;djencks;Problem is that the AMQMessageStore is closed but not removed from the cache inside the PersistenceAdapter.  Next time a Queue (or Topic) is created it gets the stopped and unusable message store from the cache.

After chatting with Hiram on the dev list I think introducing methods to remove the message store from the persistence adapter is the best way forward.

Looking at svn history this problem was introduced in the fix for AMQ-1842, rev 729939, where the calls to stop the MessageStore were introduced.","07/Jan/09 07:57;djencks;Fix for AMQ-1842 introduced this problem... message stores were closed (good) but not removed from persistence adapter cache (bad)","07/Jan/09 08:11;djencks;New methods introduced in rev 732259.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-all module build fails,AMQ-2055,12482750,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,06/Jan/09 14:54,06/Jan/09 16:18,30/Jan/20 16:55,06/Jan/09 16:18,5.3.0,,,,,,,5.3.0,,,,,,,0,"Building of the activemq-all module fails with the following message 

[INFO] Error creating shaded jar.

Embedded error: duplicate entry: org/apache/activemq/protobuf/BufferInputStream.class

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75098,,,Tue Jan 06 16:18:47 UTC 2009,,,,,,,,"0|i182bj:",255178,,,,,,,,,,,,,,,,,,,"06/Jan/09 16:18;dejanb;Fixed in SVN revision 731985.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Writing to predefined destinations without admin priviledges,AMQ-1747,12481882,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,dejanb,dejanb,27/May/08 12:12,05/Jan/09 11:30,30/Jan/20 16:55,27/May/08 13:55,5.1.0,,,,,,,5.2.0,,,,,,,0,"Trying to write to predefined destinations without admin privileges raises ""cannot create destination"" exception. More info could be foundin the folllowinf thread - http://www.nabble.com/Secutiry-and-Predefined-Destinations-tt17370190s2354.html",,danbucatanschi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/May/08 12:13;dejanb;activemq-predefined.patch;https://issues.apache.org/jira/secure/attachment/12461139/activemq-predefined.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-05-27 13:55:43.455,,,false,,,,,,,,,,,,,,,,,84782,,,Mon Jan 05 11:30:03 UTC 2009,,,,,,,,"0|i0s2rz:",161926,,,,,,,,,,,,,,,,,,,"27/May/08 13:55;rajdavies;Patch applied in SVN revision 660517","12/Dec/08 02:55;danbucatanschi;Hi! I am writing a custom authorization and authentication plugin for the lab where I am working. Because I still do not fully understand what happens behind the scenes in ActiveMQ, I usually browse the ActiveMQ source code and the latest snapshots so that I can keep our security plugin up to date with the latest patches that the AuthorizationBroker gets here. So looking here, I saw this patch for this issue. I was just wondering if instead of:

return existing;

inside the if statement (looking at the diff with the previous version of the AuthorizationBroker.java), one should write:

return super.addDestination(context, destination);

just like it is at the end of the addDestination method in AuthorizationBroker. It makes sense to me to do that since we're not just trying to add a user to an already existing destination, but we should also ""announce"" this addition throughout the whole BrokerFilter stack, shouldn't we? This way, for example, Advisory topics also get updated with the fact that this user tried adding this destination for herself. I assume that other BrokerFilters rely on this behavior (that addDestination() gets called for every user requesting a destination successfully).

Or do I have this totally wrong and the addDestination method should only be used for adding destinations inside the broker, not to a user's connection? If that's the case, why is it that the issue described here appeared in the first place? Isn't the broker trying to create a destination (i.e. addDestination gets called) automatically for every new user requesting it?

Thanks,
-Dan
","05/Jan/09 11:30;dejanb;Hi Dan,

strictly speaking your suggestion is right, so I committed the change in SVN revision 731529. As for advisories, they are not going to be fired for every addDestination call, but just when destinations are created for the first time. But it makes sense to propagate the call through all filters.

Cheers
Dejan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unbalanced Valve usage in VMTransport.,AMQ-2045,12482745,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,djencks,djencks,29/Dec/08 07:54,02/Jan/09 18:05,30/Jan/20 16:55,29/Dec/08 07:58,5.3.0,,,,,,,5.3.0,,,Transport,,,,0,"Valve doesn't check that its state is consistent (counters >= 0).  There's unbalanced increment/decrement calls in VMTransport.oneway:
                 enqueueValve.decrement();  //TODO unbalanced??
 (line ~99) 

If I balance this with a preceding enqueValve.increment() I get a deadlock in a test when the server tries to send a response message so I assume the correct fix is to remove the decrement in this VMTransports valve.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-01-02 18:05:55.67,,,false,,,,,,,,,,,,,,,,,75106,,,Fri Jan 02 18:05:55 UTC 2009,,,,,,,,"0|i14ca7:",233453,,,,,,,,,,,,,,,,,,,"29/Dec/08 07:58;djencks;rev 729835 adds consistency checks to Valve and removes the unbalanced decrement.  IMO this should be reviewed by a more knowledgeable developer before closing... Hiram can you take a look or suggest someone who could?","02/Jan/09 18:05;chirino;Looks good.  Perhaps we should change those consistency checks to assert calls so that users can avoid doing them in production since they are being done in synchronized blocks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition cleaning connection using VMTransport,AMQ-2049,12482751,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,30/Dec/08 19:23,30/Dec/08 20:07,30/Jan/20 16:55,30/Dec/08 20:07,5.3.0,,,,,,,5.3.0,,,Transport,,,,0,"This problem arises when the server side has a RegionBroker installed and there is a configured clientID for the connection.

ActiveMQConnection.ensureConnectionInfoSent sends the ConnectionInfo object with the configured clientID off to the server.  Currently this results in the same ConnectionInfo object in the AMQConnection and the TransportConnection.

Now when you get to AMQConnection.cleanup() it asynchronously sends a message to the broker to clean up and immediately sets the configured clientID to null.  When the RegionBroker processes the remove message the clientID is no longer set (assuming bad luck in thread scheduling) and it complains:

    public void removeConnection(ConnectionContext context, ConnectionInfo info, Throwable error) throws Exception {
        String clientId = info.getClientId();
        if (clientId == null) {
            throw new InvalidClientIDException(""No clientID specified for connection disconnect request"");
        }

One fix for this is to copy the connectionInfo before sending it to the broker.  This is a small but unnecessary cost for non-vm transports but works.
Another fix might be to send the close message synchronously so it's processed before the clientID is nulled out.

I'm committing the ""copy"" solution but IMO this should be reviewed by experts.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75103,,,Tue Dec 30 20:07:07 UTC 2008,,,,,,,,"0|i14cd3:",233466,,,,,,,,,,,,,,,,,,,"30/Dec/08 20:07;djencks;rev 730226 solves this by copying.  Review would be great.  I also added a TODO about a question in AMQConnection.. line 1336",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQTextMessage toString() method throws NPE if text is null,AMQ-2046,12482747,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,mooseroy,mooseroy,29/Dec/08 18:59,30/Dec/08 08:48,30/Jan/20 16:55,30/Dec/08 08:48,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"The new toString() method assumes that the message has a non null value, so throws an NPE on line 154 when the message's text is null.

if (text.length() > 63) {

should be:

if (text!=null && text.length() > 63) {
        		",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-12-30 08:48:26.774,,,false,,,,,,,,,,,,,,,,,75105,,,Tue Dec 30 08:48:26 UTC 2008,,,,,,,,"0|i14c7b:",233440,,,,,,,,,,,,,,,,,,,"30/Dec/08 08:48;dejanb;Fixed in SVN revision 730071",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent failure of test org.apache.activemq.usecases.MultiBrokersMultiClientsUsingTcpTest,AMQ-2035,12482741,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Dec/08 01:58,29/Dec/08 12:07,30/Jan/20 16:55,29/Dec/08 12:07,5.2.0,,,,,,,5.3.0,,,Test Cases,,,,0,"[17:35:25]: Running org.apache.activemq.usecases.MultiBrokersMultiClientsUsingTcpTest

[17:35:38]: Exception in thread ""BrokerService"" java.lang.NullPointerException

[17:35:38]: 	at org.apache.activemq.openwire.v4.BaseDataStreamMarshaller.tightMarshalObjectArray2(BaseDataStreamMarshaller.java:369)

[17:35:38]: 	at org.apache.activemq.openwire.v4.MessageMarshaller.tightMarshal2(MessageMarshaller.java:191)

[17:35:38]: 	at org.apache.activemq.openwire.v4.ActiveMQMessageMarshaller.tightMarshal2(ActiveMQMessageMarshaller.java:89)

[17:35:38]: 	at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject2(OpenWireFormat.java:424)

[17:35:38]: 	at org.apache.activemq.openwire.v4.BaseDataStreamMarshaller.tightMarshalNestedObject2(BaseDataStreamMarshaller.java:136)

[17:35:38]: 	at org.apache.activemq.openwire.v4.MessageDispatchMarshaller.tightMarshal2(MessageDispatchMarshaller.java:105)

[17:35:38]: 	at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:237)

[17:35:38]: 	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:166)

[17:35:38]: 	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:233)

[17:35:38]: 	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83)

[17:35:38]: 	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:100)

[17:35:38]: 	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)

[17:35:38]: 	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1210)

[17:35:38]: 	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:795)

[17:35:38]: 	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:832)

[17:35:38]: 	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)

[17:35:38]: 	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)

[17:35:38]: 	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)

[17:35:38]: 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)

[17:35:38]: 	at java.lang.Thread.run(Thread.java:595)

[17:35:43]: Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 18.358 sec",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75112,,,Mon Dec 29 12:07:24 UTC 2008,,,,,,,,"0|i14ck7:",233498,,,,,,,,,,,,,,,,,,,"17/Dec/08 02:01;gtully;seems as if the message is modified during dispatch, between the iteration to marshall1 where a boolean stream is written and the size calculated, and the marshal2 when data is written the field getCluster() becomes null.
What else could cause this?","17/Dec/08 02:04;gtully;{code}tags don't help in the stack trace display","29/Dec/08 12:07;gtully;see svn commit history",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Async error occurred: java.lang.NullPointerException,AMQ-2043,12482746,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,whitesock,whitesock,25/Dec/08 06:48,28/Dec/08 08:13,30/Jan/20 16:55,28/Dec/08 08:13,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"I got the following error in activemq.log, ActiveMQ's version is 5.2.0.  I found that this kind of exception usually occurs during the reconnection
   
2008-12-10 21:44:04,485 [.15.2.125:47814] ERROR Service                        - Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.broker.region.TopicSubscription.acknowledge(TopicSubscription.java:221)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:456)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
        at java.lang.Thread.run(Thread.java:619) ",ActiveMQ 5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-12-28 08:13:35.029,,,false,,,,,,,,,,,,,,,,,75108,,,Sun Dec 28 08:13:35 UTC 2008,,,,,,,,"0|i14ch3:",233484,,,,,,,,,,,,,,,,,,,"28/Dec/08 08:13;rajdavies;Fixed by SVN revision 729703",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Broker parameter systemExitOnShutdown=""true"" not being honored when persistence adapter file system is unavailable",AMQ-2038,12482731,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,wilson@vettatech.com,wilson@vettatech.com,18/Dec/08 15:14,23/Dec/08 14:36,30/Jan/20 16:55,23/Dec/08 14:26,5.0.0,,,,,,,5.3.0,,,Broker,,,,0,"The broker parameter systemExitOnShutdown=""true"" is not being honored when persistence adapter file system is unavailable. 

To reproduce the problem:

 - Use journaling persistence pointing to an USB drive diretory. 

 - Make sure the broker is configured with systemExitOnShutdown=""true"":
  <amq:broker id=""broker"" depends-on=""jmxServer"" useShutdownHook=""false"" systemExitOnShutdown=""true""> ...

 - After the broker is running send some messages to a queue.

 - Unplug the USB drive.

 - Try to send more messages. The broker will reject the messages and report the following exception:

javax.jms.JMSException: The volume for a file has been externally altered so that the opened file is no longer valid
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1203)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1648)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:227)
        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
        at org.apache.servicemix.jms.multiplexing.MultiplexingProviderProcessor.process(MultiplexingProviderProcessor.java:114)
        at org.apache.servicemix.common.AsyncBaseLifeCycle.doProcess(AsyncBaseLifeCycle.java:540)
        at org.apache.servicemix.common.AsyncBaseLifeCycle.processExchange(AsyncBaseLifeCycle.java:492)
        at org.apache.servicemix.common.BaseLifeCycle.onMessageExchange(BaseLifeCycle.java:46)
        at org.apache.servicemix.jbi.messaging.DeliveryChannelImpl.processInBound(DeliveryChannelImpl.java:621)
        at org.apache.servicemix.jbi.nmr.flow.AbstractFlow.doRouting(AbstractFlow.java:172)
        at org.apache.servicemix.jbi.nmr.flow.seda.SedaFlow.doRouting(SedaFlow.java:167)
        at org.apache.servicemix.jbi.nmr.flow.seda.SedaQueue$1.run(SedaQueue.java:134)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: The volume for a file has been externally altered so that the opened file is no longer valid
        at sun.nio.ch.FileChannelImpl.force0(Native Method)
        at sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:359)
        at org.apache.activeio.journal.active.LogFile.force(LogFile.java:102)
        at org.apache.activeio.journal.active.LogFileManager.append(LogFileManager.java:308)
        at org.apache.activeio.journal.active.JournalImpl.queuedWrite(JournalImpl.java:256)
        at org.apache.activeio.journal.active.JournalImpl.access$000(JournalImpl.java:62)
        at org.apache.activeio.journal.active.JournalImpl$2.run(JournalImpl.java:229)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:665)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:690)
        ... 1 more

This error is not being detected by the broker as a fatal error and the broker is not going down automatically. The issue was reported by a Servicemix user and it is expected that after the AMQ broker goes down SMX must goes down too.
",Windows XP x86,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-12-18 16:03:18.64,,,false,,,,,,,,,,,,,,,,,75109,,,Tue Dec 23 14:26:10 UTC 2008,,,,,,,,"0|i14cgv:",233483,,,,,,,,,,,,,,,,,,,"18/Dec/08 16:03;tmielke;With debug logging turned on the broker raises

{code}
DEBUG - Service                        - Error occured while processing sync command: java.io.IOException: The volume for a file has been externally a
ltered so that the opened file is no longer valid
java.io.IOException: The volume for a file has been externally altered so that the opened file is no longer valid
        at sun.nio.ch.FileChannelImpl.force0(Native Method)
        at sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:359)
        at org.apache.activeio.journal.active.LogFile.force(LogFile.java:102)
        at org.apache.activeio.journal.active.LogFileManager.append(LogFileManager.java:308)
        at org.apache.activeio.journal.active.JournalImpl.queuedWrite(JournalImpl.java:256)
        at org.apache.activeio.journal.active.JournalImpl.access$000(JournalImpl.java:62)
        at org.apache.activeio.journal.active.JournalImpl$2.run(JournalImpl.java:229)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:665)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:690)
        at java.lang.Thread.run(Thread.java:595)
{code}

Perhaps this should be raised as an error instead of a debug msg? With the default logging turned on, this won't be noticed.","23/Dec/08 14:26;dejanb;Fixed in SVN revision 728964.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PropertyPlaceholderConfigurer not working for in wrapper ,AMQ-2036,12482665,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,17/Dec/08 12:40,17/Dec/08 16:20,30/Jan/20 16:55,17/Dec/08 14:35,5.2.0,,,,,,,5.3.0,,,,,,,0,"looks like ACTIVEMQ_HOME value ""../.."" does not work well for property placeholder.",,felixk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-12-17 16:20:32.713,,,false,,,,,,,,,,,,,,,,,75111,,,Wed Dec 17 16:20:32 UTC 2008,,,,,,,,"0|i0s233:",161814,,,,,,,,,,,,,,,,,,,"17/Dec/08 14:35;dejanb;Fix committed in the SVN revision 727396. I the mean time replace

{code}file:///${activemq.base}/conf/credentials.properties{code}

with 

{code}file:${activemq.base}/conf/credentials.properties{code}

in conf/activemq.xml

and webapps/admin/WEB-INF/webconsole-embedded.xml","17/Dec/08 16:20;felixk;Replacing as described works for me.

Thanks
Felix",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redelivered messages to consumer skiped due to false duplicate detection on message rollback with Spring and cacheLevel=CACHE_NONE,AMQ-2032,12482185,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,11/Dec/08 13:06,11/Dec/08 16:56,30/Jan/20 16:55,11/Dec/08 16:56,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"The failover default brokerUrl in 5.2 activates the message audit facility to catch possible duplicate message delivery in the event of failover. This mechanism can get in the way of message redelivery, particularly when sessions are closed and an automatic rollback kicks in.

Original user comment:
----
Redelivery of message fails after a rollback with Spring DMLC with cacheLevel=CACHE_NONE due to a bug in class : 'org.apache.activemq.ActiveMQMessageConsumer'. Redelivered messages are wrongly detected as duplicates. It fails to call 'rollbackDuplicates' on messages processed by consumer on rollback call on the consumer.

Sequence: ( See: http://fisheye1.atlassian.com/browse/springframework/spring/src/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java?r=1.14 )

    * Spring creates a transaction
    * Spring creates a JMS consumer
    * Spring give message to Application MessageListener class
    * Spring closes the consumer
    * Spring try to commit
    * Commit fails due to a RuntimeException thrown in Application MessageListener class
    * Spring marks the message as RollbackOnly
    * Spring rollbacks message


When ActiveMQ closes the consumer ( org.apache.activemq.ActiveMQMessageConsumer ), it clears 'deliveredMessages' list. But this list is needed in rollback method of ActiveMQMessageConsumer to rollback duplicates ! Then consumer cannot rollback duplicates on rollback if consumer is closed before rollback action. The only way I found, is to not clear 'deliveredMessages' list on close. It seems, there is no side effect, since after a call to 'close' method, the consumer is not used anymore.
","Spring DMLC, cacheLevel=CACHE_NONE",alexiskinsella,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75114,,,Thu Dec 11 16:56:10 UTC 2008,,,,,,,,"0|i0tsmf:",171946,,,,,,,,,,,,,,,,,,,"11/Dec/08 16:56;gtully;resolved in 725737
test case included with the commit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topics Delivering Duplicate Messages when have cyclic network of brokers w/multicast discovery,AMQ-2030,12482779,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Dec/08 15:57,10/Dec/08 16:28,30/Jan/20 16:55,10/Dec/08 16:28,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"In a cyclic network using m/cast discovery. Every broker knows about ever other broker.
Network of 3, broker1, broker2, broker2 - consumer on broker2, producer on broker1

problem description:
consumer on broker 2 is propagated to broker1 and broker3. 
Resulting bridged consumer on 1 is propagated to 2 and 3:
 - broker 2 ignores it because of the broker path match.
 - broker 3 bridges it and propagates the resulting consumer to 2 and 1. 2 again ignores as does 1 because of broker path info.. 

Resulting bridged consumer on 3 is now a duplicate of the subscription propagated to 3 via broker 1. This cannot be suppressed using broker path because 3 only sees the brokerpath to broker1.

What is needed is a history of the original consumerId in the bridged subscripton such that subsequent subscriptions can be seen as duplicates. ConsumerInfo needs to contain a list of networkConsumerIds.

To have this propagated needs a wireFormat version increment.


 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75115,,,Wed Dec 10 16:28:55 UTC 2008,,,,,,,,"0|i14bvr:",233388,,,,,,,,,,,,,,,,,,,"10/Dec/08 16:28;gtully;resolved in 725323. WireFormat now at version 4.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages are arriving out of sequence with large message volumes,AMQ-2020,12482752,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Dec/08 13:01,03/Dec/08 18:04,30/Jan/20 16:55,03/Dec/08 18:04,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"With large volumes of messages, some messages can arrive out of order on occasion. Scenario is hard to reproduce but a single producer and single consumer can cause the problem if the volume is sufficiently high. The Producer needs to exceed the memory limit such that the cache is filled and when the broker moves over to the store from the cache, the consumer need to ack a message that will be redelivered from the store but would normally be suppressed as a duplicate. 
One way to avoid the problem is to disable the cache for a Queue:
{code}
<amq:policyEntry queue="">"" useCache=""false"" >
{code}",all,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75121,,,Wed Dec 03 18:04:17 UTC 2008,,,,,,,,"0|i0s267:",161828,,,,,,,,,,,,,,,,,,,"03/Dec/08 18:04;gtully;two problems, the test case with the commit shows both.
there was an inadvertent audit rollback on every ack which meant the audit did not suppress all duplicates.
Under high load, way too many duplicates were being produced by the reference store. A queue caches its received messages up to a point and dispatches from this cache. However once the cache is exhausts, all remaining messages in the store are re dispatched. The resolution is to set the batch start point once the cache is full such that resuming after the cache is exhausted begins with the first non cached message rather than with the current start of the store. 
The additional setBatch method that is present in the KahaStore probably needs to be pulled up into the MessageStore interface. currently there is a cast down in the cursor. If this solution proves generally applicable we can do this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Deadlock in activemq, seems to occur on startup when clients are attempting to connect",AMQ-2015,12482637,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,qwidjibo,qwidjibo,26/Nov/08 18:16,02/Dec/08 23:59,30/Jan/20 16:55,02/Dec/08 23:59,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"
This seems to happen when I start up the instance up and clients are attempting to connect (e.g. after a live restart)...though I cannot consistently verify that. 

It gets into a deadlock state. If I look at the queues on the web monitor, it shows that only one has been created (of the ~30 that the connecting clients will attempt to recreate). Connections are being opened both over openwire (about 30) and stomp+ssl( a few hundred). 


Thread dump and a copy of activemq.xml is attached.


","ubunutu linux, xen instance with two cores

Linux amq01 2.6.24-21-xen #1 SMP Wed Oct 22 01:07:57 UTC 2008 x86_64 GNU/Linux

java version ""1.6.0_07""
Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
Java HotSpot(TM) 64-Bit Server VM (build 10.0-b23, mixed mode)
",bdarfler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Nov/08 18:20;qwidjibo;activemq.xml;https://issues.apache.org/jira/secure/attachment/12461280/activemq.xml","26/Nov/08 18:19;qwidjibo;adump;https://issues.apache.org/jira/secure/attachment/12461306/adump",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-12-02 23:59:39.043,,,false,,,,,,,,,,,,,,,,,43139,,,Tue Dec 02 23:59:39 UTC 2008,,,,,,,,"0|i0s227:",161810,,,,,,,,,,,,,,,,,,,"26/Nov/08 18:19;qwidjibo;This is a copy of the thread dump.","26/Nov/08 18:20;qwidjibo;activemq conf file","02/Dec/08 23:59;rajdavies;Fixed by SVN revision 722683",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stock portfolio Ajax example does not work,AMQ-2014,12482725,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,25/Nov/08 09:32,01/Dec/08 15:35,30/Jan/20 16:55,01/Dec/08 15:35,5.2.0,,,,,,,5.3.0,,,,,,,0,The page doesn't get refreshed like no messages are being received.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75125,,,Mon Dec 01 15:35:05 UTC 2008,,,,,,,,"0|i182an:",255174,,,,,,,,,,,,,,,,,,,"26/Nov/08 14:43;dejanb;It seems that portfolio.js never subscribes to destinations (at least Firebug says so) by issuing a POST call. 

So if I change

amq.addPollHandler(portfolioPoll);

with direct 

amq.addListener('stocks','topic://STOCKS.*',priceHandler._price);

everything works fine.

I'm not sure yet why there is a difference in behavior, since there were no code changes in this part of the source tree.

Can others confirm this issue?
","01/Dec/08 15:35;dejanb;The _startPolling function which issues a GET request with timeout 0 hangs with post 5.0.0 amq versions (if there are no registered listeners) and thus blocks all other JavaScript. I modified the call to timeout after 10ms and now all examples work again. Committed in SVN revision 722093.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Some dependency divergence - jaxb-impl, xtream, stax-api - multiple versions referenced by modules",AMQ-2008,12482740,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Nov/08 13:05,20/Nov/08 13:07,30/Jan/20 16:55,20/Nov/08 13:07,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"com.sun.xml.bind:jaxb-impl
error 	
2.0.2 	

   1. org.apache.activemq:activemq-xmpp

2.0.3 	

   1. org.apache.activemq:apache-activemq


com.thoughtworks.xstream:xstream 
error
1.2.2 	

   1. org.apache.activemq:activemq-core

1.3 	

   1. org.apache.activemq:activemq-optional
   2. org.apache.activemq:activemq-web-console
   3. org.apache.activemq:activemq-web-demo
   4. org.apache.activemq:activemq-web
   5. org.apache.activemq:apache-activemq


stax:stax-api
error 	
1.0 	

   1. org.apache.activemq:activemq-optional
   2. org.apache.activemq:apache-activemq

1.0.1 	

   1. org.apache.activemq:activemq-core
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75129,,,Thu Nov 20 13:07:30 UTC 2008,,,,,,,,"0|i182b3:",255176,,,,,,,,,,,,,,,,,,,"20/Nov/08 13:07;gtully;svn info mising as no reference to this issue so here it is.
svn commit --message ""resolve some dependency divergence among modules""
Sending        activemq-core/pom.xml
Sending        activemq-xmpp/pom.xml
Sending        pom.xml
Transmitting file data ...
Committed revision 719220.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
All in one patch concerning message dispatching problems with Spring DMLC 2.5.5 +JBoss 4.2.2 with cacheLevel=CACHE_NONE,AMQ-1957,12482719,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,alexiskinsella,alexiskinsella,29/Sep/08 07:55,20/Nov/08 10:58,30/Jan/20 16:55,20/Nov/08 10:58,5.0.0,5.1.0,5.2.0,,,,,5.3.0,,,Broker,,,,0,"Here is an all in one patches applied on version 5.0.0.19

It is composed from 4 files directly applicable on Fuse v5.0.0.19

They all concern package 'org.apache.activemq.broker.region'.

The effects of this patch are the following:

    * Avoid multiple dispatching of same message to multiple subscription multiple time (Multiple dispatch to client consumers in some cases = > causes multiple commits for same message => causing negatives counters on Pending Message Count)
    * Avoid the broker hanging when a queue has numerous messages in one queue
    * MB-386 + Correction
    * Some other little glitches
","Spring DMLC 2.5.5, JBoss 4.2.2, JDK 5 / 6, ActiveMQ 5.0.0.19 as remote broker with TCP transport",akuhtz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Sep/08 07:57;alexiskinsella;IndirectMessageReference.java.patch;https://issues.apache.org/jira/secure/attachment/12461248/IndirectMessageReference.java.patch","29/Sep/08 07:56;alexiskinsella;PrefetchSubscription.java.patch;https://issues.apache.org/jira/secure/attachment/12461238/PrefetchSubscription.java.patch","29/Sep/08 07:56;alexiskinsella;Queue.java.patch;https://issues.apache.org/jira/secure/attachment/12461202/Queue.java.patch",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-10-03 14:31:26.637,,,false,,,,,,,,,,,,,,,,,75156,,,Thu Nov 20 10:58:56 UTC 2008,,,,Patch Available,,,,"0|i0s25b:",161824,,,,,,,,,,,,,,,,,,,"03/Oct/08 14:31;gtully;Alexis,
there are some neat changes, by any chance do you have a relevant pure JMS test case that will protect them? ","20/Nov/08 10:58;gtully;final mods to patch in r712189",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.jms.JMSException: Timer already cancelled.,AMQ-2005,12482710,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,18/Nov/08 17:39,19/Nov/08 11:40,30/Jan/20 16:55,19/Nov/08 11:40,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"Occasionally from:
IndividualDeadLetterViaXmlTest.testDurableTopicMessage  (org.apache.activemq.broker.policy)
{code}
javax.jms.JMSException: Timer already cancelled.
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:138)
at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:237)
at org.apache.activemq.ActiveMQSession.rollback(ActiveMQSession.java:522)
at org.apache.activemq.broker.policy.DeadLetterTest.consumeAndRollback(DeadLetterTest.java:68)
at org.apache.activemq.broker.policy.DeadLetterTest.doTest(DeadLetterTest.java:52)
at org.apache.activemq.broker.policy.DeadLetterTestSupport.testDurableTopicMessage(DeadLetterTestSupport.java:154)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at junit.framework.TestCase.runTest(TestCase.java:154)
at junit.framework.TestCase.runBare(TestCase.java:127)
at junit.framework.TestResult$1.protect(TestResult.java:106)
at junit.framework.TestResult.runProtected(TestResult.java:124)
at junit.framework.TestResult.run(TestResult.java:109)
at junit.framework.TestCase.run(TestCase.java:118)
at junit.framework.TestSuite.runTest(TestSuite.java:208)
at junit.framework.TestSuite.run(TestSuite.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743)
Caused by: java.lang.IllegalStateException: Timer already cancelled.
at java.util.Timer.sched(Timer.java:354)
at java.util.Timer.schedule(Timer.java:170)
at org.apache.activemq.thread.Scheduler.executeAfterDelay(Scheduler.java:52)
at org.apache.activemq.ActiveMQMessageConsumer.rollback(ActiveMQMessageConsumer.java:972)
at org.apache.activemq.ActiveMQMessageConsumer$4.afterRollback(ActiveMQMessageConsumer.java:832)
at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:133)
... 31 more
{code}",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75130,,,Tue Nov 18 17:41:35 UTC 2008,,,,,,,,"0|i14bxb:",233395,,,,,,,,,,,,,,,,,,,"18/Nov/08 17:41;gtully;users of org.apache.activemq.thread.Scheduler need to hold a reference that will ensure its Timer is not inadvertently gc'ed when all references and tasks are complete.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate delivery acks on failover with transacted delivery - Async error on broker - TX has not started error on ack,AMQ-2004,12482492,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Nov/08 18:37,18/Nov/08 11:30,30/Jan/20 16:55,18/Nov/08 11:30,5.2.0,,,,,,,5.3.0,,,,,,,0,"On failover transport resume, outstanding acks are delivered async. Regular consumption also delivers acks which can result in out of order delivery of outstanding delivery acks. the async delivery can occur after the regular delivery.
org.apache.activemq.transport.failover.AMQ1925Test.testAMQ1925_TXBegin modified to fail on a connection exception demonstrates this behaviour.
Solution seems to be  to only deliver outstanding standard acks during deliverAcks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/08 18:42;gtully;AMQ-2004.patch;https://issues.apache.org/jira/secure/attachment/12461240/AMQ-2004.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75131,,,Tue Nov 18 11:30:12 UTC 2008,,,,,,,,"0|i14c6f:",233436,,,,,,,,,,,,,,,,,,,"17/Nov/08 18:42;gtully;uploading patch for discussion pending full testing","18/Nov/08 11:30;gtully;patch applied",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Async error occurred - Slave broker out of sync with master,AMQ-1983,12482650,12483556,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,hansb,hansb,19/Oct/08 18:05,10/Nov/08 17:53,30/Jan/20 16:55,28/Oct/08 12:09,5.2.0,,,,,,,5.2.0,,,Broker,,,,0,"I have tried to reduce the real-life problem to something smaller. See activemqjee-0.0.8.tar.gz

It's a MDB that forwards a message to another queue. 

What I did:
- send some messages to queue.A (I did 10 at a time, using the webconsole setting Persistent Delivery)
- the MDB sends each message to queue.B
- if a reply queue was set in the message, the MDB sends a reply

On queue.B is an MDB that just received and logs the message.


Logged on the master:
{code}
2008-10-19 18:39:54,114 [127.0.0.1:43972] DEBUG AMQMessageStore                - Journalled transacted message add for:
   ID:selten.cluster-40744-1224434310420-0:2:4:1:1, at: offset = 90045, file = 1, size = 429, type = 1
......
2008-10-19 18:39:54,278 [127.0.0.1:43972] DEBUG AMQMessageStore                - Transacted message add commit for:
   ID:selten.cluster-40744-1224434310420-0:2:4:1:1, at: offset = 90045, file = 1, size = 429, type = 1
......
2008-10-19 18:39:54,305 [127.0.0.1:43962] ERROR MasterBroker                   - Slave Failed
javax.jms.JMSException: Unmatched acknowledege: MessageAck {commandId = 1031, responseRequired = true, ackType = 2, 
  consumerId = ID:selten.cluster-40744-1224434310420-0:0:-1:2, firstMessageId = 
ID:selten.cluster-40744-1224434310420-0:2:4:1:1, lastMessageId = ID:selten.cluster-40744-1224434310420-0:2:4:1:1, 
  destination = queue://queue.B, 
transactionId = XID:131075:312d2d32613062356562303a613535653a34386662363236643a313135:2d32613062356562303a613535653a34386662363236643a313136,
 messageCount = 1}; Could not find Message-ID ID:selten.cluster-40744-1224434310420-0:2:4:1:1 in dispatched-list (start of ack)
        at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:438)
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:188)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
{code}

Logged on the slave:
{code}
2008-10-19 18:39:54,112 [.cluster#1] DEBUG AMQMessageStore                - Journalled transacted message add for: ID:selten.cluster-40744-1224434310420-0:2:4:1:1, at: offset = 90045, file = 1, size = 429, type = 1
......
2008-10-19 18:39:54,241 [.cluster#1] DEBUG AMQMessageStore                - Transacted message add commit for: ID:selten.cluster-40744-1224434310420-0:2:4:1:1, at: offset = 90045, file = 1, size = 429, type = 1
......
2008-10-19 18:39:54,288 [.cluster#1] ERROR Service                        - Async error occurred: javax.jms.JMSException: Slave broker out of sync with master: 
  Dispatched message (ID:selten.cluster-40744-1224434310420-0:2:4:1:1) was not in the pending list for queue.B
  javax.jms.JMSException: Slave broker out of sync with master: Dispatched message 
(ID:selten.cluster-40744-1224434310420-0:2:4:1:1) was not in the pending list for queue.B
        at org.apache.activemq.broker.region.PrefetchSubscription.processMessageDispatchNotification(PrefetchSubscription.java:175)
        at org.apache.activemq.broker.region.AbstractRegion.processDispatchNotification(AbstractRegion.java:414)
        at org.apache.activemq.broker.region.RegionBroker.processDispatchNotification(RegionBroker.java:585)
{code}

I could not consistently reproduce it with a single JBoss server running. I've sent a few 100 messages without any problem.

I've tested both 5.2.0-RC2 and 5.3.0-SNAPSHOT (rev 706043).

","java version ""1.6.0_07""
Client is a JBoss 4.2.3.GA cluster using the ActiveMQ resource adapter (from RC2)
ActiveMQ 5.3.0  rev 706043 in pure master/slave setup",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Oct/08 18:05;hansb;ASF.LICENSE.NOT.GRANTED--activemqjee-0.0.8-src.tar.gz;https://issues.apache.org/jira/secure/attachment/12461134/ASF.LICENSE.NOT.GRANTED--activemqjee-0.0.8-src.tar.gz","21/Oct/08 16:52;hansb;activemq-master.log.gz;https://issues.apache.org/jira/secure/attachment/12461204/activemq-master.log.gz","21/Oct/08 21:32;hansb;activemq-slave.log.gz;https://issues.apache.org/jira/secure/attachment/12461155/activemq-slave.log.gz","26/Oct/08 22:37;hansb;activemqjee-0.0.9-src.tar.gz;https://issues.apache.org/jira/secure/attachment/12461203/activemqjee-0.0.9-src.tar.gz",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2008-10-24 15:52:25.64,,,false,,,,,,,,,,,,,,,,,43780,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i14bs7:",233372,,,,,,,,,,,,,,,,,,,"21/Oct/08 16:58;hansb;I've run another test with our real application with a single JBoss 4.0.5 host and a pure master/slave ActiveMQ setup (5.2.0 RC2).

See the ERRORs in ""activemq-master.log.gz"" and ""activemq-slave.log.gz""

Logged at DEBUG level, so I hope it's clear enough.

I think the case matches quite closely to the test code in this issue, though the real application does a lot more.

","21/Oct/08 21:45;hansb;This was the message from the JBoss server log that produced the issue:

2008-10-21 18:27:06,677 DEBUG [org.apache.activemq.ActiveMQSession] ID:master.cluster-49988-1224605035095-0:42:339 sending message: ActiveMQTextMessage {commandId = 0, responseRequired = false, messageId = ID:master.cluster-49988-1224605035095-0:42:339:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:master.cluster-49988-1224605035095-0:42:339:1, destination = queue://queue.CLIENT_OUT_TOKEN, transactionId = XID:257:6d6366616464656e2e6d61726b657478732e636f6d2f313530323500000000000000000000000000000000000000000000000000000000000000000000000000:
31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, expiration = 0, timestamp = 1224606426677, arrival = 0, brokerInTime = 0, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = ..........(removed the message)............}


It was one of 686 messages sent by the same EJB to the same queue within about 15 minutes during my tests.

The transaction commit happened at the time of the ERROR Service                        - Async error occurred: 
  JMSException: Slave broker out of sync with master: Dispatched message (ID:master.cluster-49988-1224605035095-0:42:339:1:1) was not in the pending list

in the slave log.



","22/Oct/08 07:07;hansb;This is the start and end of the XA transactions with that XID in the JBoss server log:

2008-10-21 18:27:09,412 DEBUG [org.apache.activemq.TransactionContext] Started XA transaction: XID:257:6d6366616464656e2e6d61726b657478732e636f6d2f313530383400000000000000000000000000000000000000000000000000000000000000000000000000:
31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
...........
2008-10-21 18:27:09,457 DEBUG [org.apache.activemq.TransactionContext] Started XA transaction: XID:257:6d6366616464656e2e6d61726b657478732e636f6d2f313530383400000000000000000000000000000000000000000000000000000000000000000000000000:
31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

.................
2008-10-21 18:27:09,459 DEBUG [org.apache.activemq.ActiveMQSession] ID:master.cluster-49988-1224605035095-0:42:346 sending message: ActiveMQTextMessage {commandId = 0, responseRequired = false, messageId = ID:master.cluster-49988-1224605035095-0:42:346:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:master.cluster-49988-1224605035095-0:42:346:1, destination = topic://topic.PRE_CLIENT_OUT, transactionId = XID:257:6d6366616464656e2e6d61726b657478732e636f6d2f313530383400000000000000000000000000000000000000000000000000000000000000000000000000:
31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, expiration = 0, timestamp = 1224606429459, arrival = 0, brokerInTime = 0, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false, text =
 
2008-10-21 18:27:09,478 DEBUG [org.apache.activemq.ActiveMQSession] ID:master.cluster-49988-1224605035095-0:42:346 sending message: ActiveMQTextMessage {commandId = 0, responseRequired = false, messageId = ID:master.cluster-49988-1224605035095-0:42:346:2:1, originalDestination = null, originalTransactionId = null, producerId = ID:master.cluster-49988-1224605035095-0:42:346:2, destination = queue://queue.CLIENT_OUT, transactionId = XID:257:6d6366616464656e2e6d61726b657478732e636f6d2f313530383400000000000000000000000000000000000000000000000000000000000000000000000000:
31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, expiration = 0, timestamp = 1224606429478, arrival = 0, brokerInTime = 0, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {tnx435=true}, readOnlyProperties = true, readOnlyBody = true, droppable = false, text =
.............

2008-10-21 18:27:09,730 DEBUG [org.apache.activemq.TransactionContext] Ended XA transaction: XID:257:6d6366616464656e2e6d61726b657478732e636f6d2f313530383400000000000000000000000000000000000000000000000000000000000000000000000000:
31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2008-10-21 18:27:09,730 DEBUG [org.apache.activemq.TransactionContext] End: XidImpl[FormatId=257, GlobalId=mcfadden.marketxs.com/15084, BranchQual=1, localId=15084]
2008-10-21 18:27:09,730 DEBUG [org.apache.activemq.TransactionContext] Ended XA transaction: XID:257:6d6366616464656e2e6d61726b657478732e636f6d2f313530383400000000000000000000000000000000000000000000000000000000000000000000000000:
31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

Apparently there are 2 transactions with the same transaction id!

For different queues, though.","22/Oct/08 10:49;hansb;Nothing special: it's just a single MDB running in the same XA transaction and sending messages to different queues or topics.

I think I must create a better test application.","24/Oct/08 15:52;gtully;I think the following patch will fix your issue. There is not much in the line of XA tests in core that can help me verify at the moment. If you get a chance, can you build trunk with this patch and validate.
{code}
Index: activemq-core/src/main/java/org/apache/activemq/broker/ft/MasterBroker.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/broker/ft/MasterBroker.java	(revision 707659)
+++ activemq-core/src/main/java/org/apache/activemq/broker/ft/MasterBroker.java	(working copy)
@@ -253,7 +253,7 @@
      */
     public int prepareTransaction(ConnectionContext context, TransactionId xid) throws Exception {
         TransactionInfo info = new TransactionInfo(context.getConnectionId(), xid, TransactionInfo.PREPARE);
-        sendAsyncToSlave(info);
+        sendSyncToSlave(info);
         int result = super.prepareTransaction(context, xid);
         return result;
     }
{code}","26/Oct/08 22:36;hansb;It seems this fixes it. I've sent more than 1600 messages without this happening again.
It's a bit modified MDB that forwards the message to 2 queues and a topic and sends a reply to the replyTo queue. (closer to what our real application does)
See activemqjee-0.0.9-src.tar.gz

I've not tested the stand-alone version and that one is not transacted anyway.
Only tested the EJB version on JBoss 4.2.3.


","28/Oct/08 12:09;gtully;resolved in r708548

thanks for validating the patch.","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
running activemq using maven causes NoClassDefFoundError: org/springframework/core/io/FileSystemResource,AMQ-1857,12482624,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,wouterv,wouterv,17/Jul/08 13:41,10/Nov/08 12:45,30/Jan/20 16:55,10/Nov/08 12:36,5.1.0,,,,,,,5.2.0,,,Documentation,,,,0,"I tried to follow these instructions:
http://activemq.apache.org/maven2-activemq-broker-plugin.html

Create pom with plugin definition:
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.activemq.tooling</groupId>
				<artifactId>maven-activemq-plugin</artifactId>
				<version>5.1.0</version>
				<configuration>
					<configUri>
						xbean:file:activemq.xml
					</configUri>
					<fork>false</fork>
					<systemProperties>
						<property>
							<name>
								org.apache.activemq.default.directory.prefix
							</name>
							<value>./target/</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>
		</plugins>
	</build>

And when I call mvn activemq:run
I get:
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'activemq'.
[INFO] ------------------------------------------------------------------------
[INFO] Building main project
[INFO]    task-segment: [activemq:run]
[INFO] ------------------------------------------------------------------------
[INFO] [activemq:run]
[INFO] Loading broker configUri: xbean:file:activemq.xml
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to start ActiveMQ Broker

Embedded error: Could not load xbean factory:java.lang.NoClassDefFoundError: org/springframework/core/io/FileSystemResource
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 seconds
[INFO] Finished at: Thu Jul 17 15:40:50 CEST 2008
[INFO] Final Memory: 5M/82M
[INFO] ------------------------------------------------------------------------
","maven 2.0.9, java 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-08-14 06:10:49.151,,,false,,,,,,,,,,,,,,,,,84748,,,Mon Nov 10 12:36:45 UTC 2008,,,,,,,,"0|i1827r:",255161,,,,,,,,,,,,,,,,,,,"14/Aug/08 06:10;majikshoe;I also had this issue.  Workaround for this is to explicitly include Spring as a dependency on the plugin:


{code}
<plugin>
    <groupId>org.apache.activemq.tooling</groupId>
    <artifactId>maven-activemq-plugin</artifactId>
    <version>5.1.0</version>
    <configuration>
                           ....
    </configuration>
                       
    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.5</version>
        </dependency>
    </dependencies>
</plugin>
{code}","14/Aug/08 07:39;wouterv;That helps (imho this still needs fixing), but now I get namespace errors like:
Embedded error: Unrecognized xbean namespace mapping: http://mortbay.com/schemas/jetty/1.0
Adding jetty dependency did not help in this case...","08/Nov/08 11:08;wouterv;I got everything working with the following dependencies, perhaps you should update the documents (http://activemq.apache.org/maven2-activemq-broker-plugin.html) to reflect this:
{noformat}
		<dependencies>
			<dependency>
			        <groupId>org.springframework</groupId>
				<artifactId>spring</artifactId>
				<version>2.5.5</version>
			</dependency>
			<dependency>
			       <groupId>org.mortbay.jetty</groupId>
		              <artifactId>jetty-xbean</artifactId>
			       <version>6.1.11</version>
			</dependency> 	
          	        <dependency>
			      <groupId>org.apache.camel</groupId>
			      <artifactId>camel-activemq</artifactId>
		              <version>1.1.0</version>
       		        </dependency>
		</dependencies>				

{noformat}","10/Nov/08 11:45;gtully;added the info related to 5.1 to a ""how to use: Version5.1"" section:
http://cwiki.apache.org/confluence/display/ACTIVEMQ/Maven2+ActiveMQ+Broker+Plugin","10/Nov/08 12:36;gtully;I have made a further update to the doc to reflect the fact that optional dependencies need to be explicitly added to the dependencies section of the plugin in the pom.xml.
The default broker url used in the plugin in the absence of an explicit configUrl  does not make use of Spring or camel or the jetty webConsole as they are optional.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave in Pure Master/Slave setup not updated when more than 200 messages on a queue,AMQ-1970,12482545,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,hansb,hansb,08/Oct/08 16:44,06/Nov/08 10:47,30/Jan/20 16:55,13/Oct/08 15:28,5.2.0,,,,,,,5.2.0,,,Broker,,,,1,"See the attached application. 

If I run

   org.activemq.jms.StandaloneApp 200 1

it works fine. Tried it 5 times, so sent 1000 messages altogether

If I run

  org.activemq.jms.StandaloneApp 250 1

it fails. The master is fine, but the slave still has pending messages on ""queue.A"". (43 in my last run)
It reported 407 received messages. (the first 200 + 207 of the last run)

Master logs:
2008-10-08 18:31:04,509 [queue://queue.A] DEBUG AMQMessageStore                - flush starting ...
2008-10-08 18:31:04,513 [0.1.1.155:56003] DEBUG AMQMessageStore                - Journalled message add for: ID:hans-44777-1223483462760-0:1:1:1:208, at: offset = 168628, file = 1, size = 279, type = 1
2008-10-08 18:31:04,513 [queue://queue.A] DEBUG AMQMessageStore                - Doing batch update... adding: 1 removing: 0 
2008-10-08 18:31:04,513 [queue://queue.A] DEBUG AMQMessageStore                - Batch update done.
.................
2008-10-08 18:31:33,313 [0.1.1.155:56846] DEBUG TransportConnection            - Stopping connection: /10.1.1.155:56846
2008-10-08 18:31:33,314 [0.1.1.155:56846] DEBUG TcpTransport                   - Stopping transport tcp:///10.1.1.155:56846
2008-10-08 18:31:33,314 [0.1.1.155:56846] DEBUG TransportConnection            - Stopped transport: /10.1.1.155:56846
2008-10-08 18:31:33,314 [0.1.1.155:56846] DEBUG TransportConnection            - Connection Stopped: /10.1.1.155:56846
2008-10-08 18:31:33,317 [0.1.1.155:56001] ERROR MasterBroker                   - Slave Failed
javax.jms.JMSException: Unmatched acknowledege: Could not find Message-ID null in dispatched-list (end of ack)
        at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:443)
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:187)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:456)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
2008-10-08 18:31:33,319 [0.1.1.155:56001] DEBUG AMQMessageStore                - Journalled message remove for: ID:hans-44777-1223483462760-0:1:1:1:208, at: offset = 233965, file = 1, size = 266, type = 1
2008-10-08 18:31:33,319 [queue://queue.A] DEBUG AMQMessageStore                - Doing batch update... adding: 0 removing: 1 
2008-10-08 18:31:33,320 [queue://queue.A] DEBUG AMQMessageStore                - Batch update done.


Slave logs:
2008-10-08 18:31:04,515 [.serverhost#1] ERROR Service                        - Async error occurred: javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:hans-44777-1223483462760-0:1:1:1:208) was not in the pending list
javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:hans-44777-1223483462760-0:1:1:1:208) was not in the pending list
        at org.apache.activemq.broker.region.PrefetchSubscription.processMessageDispatchNotification(PrefetchSubscription.java:174)
        at org.apache.activemq.broker.region.AbstractRegion.processDispatchNotification(AbstractRegion.java:414)
        at org.apache.activemq.broker.region.RegionBroker.processDispatchNotification(RegionBroker.java:585)
","5.2.0 RC2 in Pure Master/Slave setup with a single client

java version ""1.6.0_07""
Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
",john.greeley,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Oct/08 16:44;hansb;ASF.LICENSE.NOT.GRANTED--activemqjee-0.0.5-src.tar.gz;https://issues.apache.org/jira/secure/attachment/12461190/ASF.LICENSE.NOT.GRANTED--activemqjee-0.0.5-src.tar.gz",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-10-13 15:28:00.086,,,false,,,,,,,,,,,,,,,,,75147,,,Thu Nov 06 10:47:08 UTC 2008,,,,,,,,"0|i0s1zb:",161797,,,,,,,,,,,,,,,,,,,"09/Oct/08 06:37;hansb;I have not yet updated the client library. Which jars do I need from the RC2 binary?

In these tests I've used the activemq-all-5.2.0.jar from RC1, I think. (2622429 bytes 2008-09-10 10:29)","09/Oct/08 06:40;hansb;Found it :)

http://people.apache.org/~gtully/staging-repos/activemq-5.2.0/org/apache/activemq/activemq-all/5.2.0/activemq-all-5.2.0.jar
","13/Oct/08 15:28;gtully;704142. slave was not affecting the inFlight count which is used to determine how many messages to pageIn. the result, only pageSize(200) unacked messages could exist in the slave without out of sync problems. having the slave modify inFlight as expected fixes this.
Additional test shows the problem and will protect the fix.","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageServlet reads too many messages,AMQ-1955,12483928,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,mikerichmond,mikerichmond,26/Sep/08 14:46,06/Nov/08 10:47,30/Jan/20 16:55,09/Oct/08 13:18,5.0.0,5.1.0,5.2.0,5.3.0,,,,5.2.0,,,Transport,,,,0,"MessageServlet inside activemq-web will pull maxMessages+1 messages off of the queue but only write a response containing maxMessages. 
 
After some debugging, I figured out that the problem is with the while loop that reads messages inside the doMessages method (and doMessagesWithoutContinuation).  It always reads a message at the end of the loop, without first checking to see if maxMessages has already been reached. 

Attached is a patch that corrects this issue.",Any,mikerichmond,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,,0%,0,0,,,,,,,,,,,,,"26/Sep/08 14:46;mikerichmond;ASF.LICENSE.NOT.GRANTED--MessageServlet.java.patch;https://issues.apache.org/jira/secure/attachment/12461901/ASF.LICENSE.NOT.GRANTED--MessageServlet.java.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-10-09 13:18:07.221,,,false,,,,,,,,,,,,,,,,,75158,,,Thu Nov 06 10:47:08 UTC 2008,,,,Patch Available,,,,"0|i14bbj:",233297,,,,,,,,,,,,,,,,,,,"09/Oct/08 13:18;dejanb;Patch applied in SVN revision 703161. Thanks","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of brokers gets out of sync for dispatched messages causing a shutdown of the bridge connections and stalling the brokers,AMQ-1976,12482721,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jayson.minard,jayson.minard,13/Oct/08 12:22,06/Nov/08 10:47,30/Jan/20 16:55,16/Oct/08 16:56,5.2.0,,,,,,,5.2.0,,,,,,,0,"Running 5.2.0 RC2 + patch AMQ-1971 

I have a network of 5 brokers, running around 50,000 messages per minute per broker within each broker and sending across a total of around 20,000 messages per minute to one of the 5 brokers via a bridge connection.  The configuration is the 5.2.0 default with broker names changed on each config and with a network connector set for autodiscovery.  

The system runs for a while then eventually on one broker (the receiving broker that is the only one with the consumers for this queue) these errors appear:

ERROR RecoveryListenerAdapter        - Message id ID:ingest1.mag.ss.com-54179-1223898804441-0:6:1:1:6134 could not be recovered from the data store - already dispatched
ERROR RecoveryListenerAdapter        - Message id ID:query1.mag.ss.com-38822-1223898893819-0:58:16388:1:48 could not be recovered from the data store - already dispatched

They appear in really high counts.

On the sending side brokers (publishers but no consumers on these brokers for this queue), these errors appear:

INFO  DemandForwardingBridge         - query2.mag.ss.com bridge to query1.mag.ss.com stopped
INFO  DiscoveryNetworkConnector      - Establishing network connection between from vm://query2.mag.ss.com to tcp://query1.mag.ss.com:61616
INFO  DemandForwardingBridge         - Network connection between vm://query2.mag.ss.com#30 and tcp://query1.mag.ss.com/10.100.0.101:61616(query1.mag.ss.com) has been established.
ERROR Service                        - Async error occurred: javax.jms.JMSException: Unmatched acknowledege: Expected message count (1) differs from count in dispatched-list (732)
javax.jms.JMSException: Unmatched acknowledege: Expected message count (1) differs from count in dispatched-list (732)
	at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:445)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:187)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:456)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:113)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$8.onCompletion(DemandForwardingBridgeSupport.java:643)
	at org.apache.activemq.transport.FutureResponse.set(FutureResponse.java:61)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:202)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:184)
	at java.lang.Thread.run(Thread.java:619)
INFO  DemandForwardingBridge         - Network connection between vm://query2.mag.ss.com#30 and tcp://query1.mag.ss.com/10.100.0.101:61616 shutdown due to a local error: javax.jms.JMSException: Unmatched acknowledege: Expected message count (1) differs from count in dispatched-list (732)
INFO  DemandForwardingBridge         - query2.mag.ss.com bridge to query1.mag.ss.com stopped
INFO  DiscoveryNetworkConnector      - Establishing network connection between from vm://query2.mag.ss.com to tcp://query1.mag.ss.com:61616
INFO  DemandForwardingBridge         - Network connection between vm://query2.mag.ss.com#32 and tcp://query1.mag.ss.com/10.100.0.101:61616(query1.mag.ss.com) has been established.
ERROR Service                        - Async error occurred: javax.jms.JMSException: Unmatched acknowledege: Expected message count (1) differs from count in dispatched-list (730)
javax.jms.JMSException: Unmatched acknowledege: Expected message count (1) differs from count in dispatched-list (730)
	at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:445)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:187)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:456)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:113)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$8.onCompletion(DemandForwardingBridgeSupport.java:643)
	at org.apache.activemq.transport.FutureResponse.set(FutureResponse.java:61)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:202)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:184)
	at java.lang.Thread.run(Thread.java:619)
INFO  DemandForwardingBridge         - Network connection between vm://query2.mag.ss.com#32 and tcp://query1.mag.ss.com/10.100.0.101:61616 shutdown due to a local error: javax.jms.JMSException: Unmatched acknowledege: Expected message count (1) differs from count in dispatched-list (730)
ERROR Service                        - Async error occurred: javax.jms.JMSException: Unmatched acknowledege: Expected message count (1) differs from count in dispatched-list (729)
javax.jms.JMSException: Unmatched acknowledege: Expected message count (1) differs from count in dispatched-list (729)
	at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:445)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:187)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
...


",,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-10-15 16:24:29.578,,,false,,,,,,,,,,,,,,,,,75142,,,Thu Nov 06 10:47:08 UTC 2008,,,,,,,,"0|i0s25j:",161825,,,,,,,,,,,,,,,,,,,"15/Oct/08 16:24;gtully;are the producers using asyncSend?

I don't know the relevance of ERROR RecoveryListenerAdapter ... but I think the assertAckMatchesDispatched is being a little harsh. My problem is reproducing the behavior.
messages that passe through a network are acked one by one. The error is telling us that the ack is ocurring out of order; since the message was dispatched, 730 other messages have been dispatched and it looks like the ack is for the 730th message. It is a valid ack though.
I think this can only happen in asyncSend, otherwise, each dispatched message is synchronously acked through to its next hop.

Ideally, it would be great if you could produce a test case. I have been trying variants of the NetworkLoadTest but am not reproducing the problem.
What does your producer look like, from the text above, it seems like there is a bunch of activity on each broker?






","15/Oct/08 16:45;gtully;ah, scrap that, producers must not be asyncSend, with asyncSend this problem should not occur as in that case, the acks are immediate.","15/Oct/08 17:02;gtully;One possibility is that the consuming broker is hovering about its memory limit. Which causes out of order message delivery to the forwarded queue. There are advisories on full that would help verify this. I can produce a memory full test that can also verify this suspicion. 
This being the case, the assertAckMatches.. needs to be changed.

Could you the apply the following patch (that just removes the failing check) to a trunk checkout, build and re run your test?
{code}
Index: activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java	(revision 704890)
+++ activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java	(working copy)
@@ -440,10 +440,10 @@
 			throw new JMSException(""Unmatched acknowledege: Could not find Message-ID ""+firstAckedMsg+"" in dispatched-list (start of ack)"");
 		if (!checkFoundEnd && lastAckedMsg != null)
 			throw new JMSException(""Unmatched acknowledege: Could not find Message-ID ""+lastAckedMsg+"" in dispatched-list (end of ack)"");
-		if (ack.getMessageCount() != checkCount) {
-			throw new JMSException(""Unmatched acknowledege: Expected message count (""+ack.getMessageCount()+
-					"") differs from count in dispatched-list (""+checkCount+"")"");
-		}
+//		if (ack.getMessageCount() != checkCount) {
+//			throw new JMSException(""Unmatched acknowledege: Expected message count (""+ack.getMessageCount()+
+//					"") differs from count in dispatched-list (""+checkCount+"")"");
+//		}
 	}
 
     /**
{code}","16/Oct/08 15:06;gtully;the problem appears to be related to memory full issues. I have a reproducible test case now based on the consuming broker hovering near full memory utilisation.","16/Oct/08 16:56;gtully;fixed in r705281.
Problem related to the ack type used by a network bridge. It needs to be an Individual ack as the message has to be consumed by the forward broker before the ack is produced and if memory limits are effecting message delivery to a forward queue, the exact order of message delivery is not guaranteed.
With an individual ack, out of order consumption by a forward queue does not cause an error. ","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Messages are lost if duplex is set to ""true""",AMQ-1973,12482585,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Oct/08 12:34,06/Nov/08 10:47,30/Jan/20 16:55,10/Oct/08 13:13,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"With a network of brokers, Hub and Spoke, the spoke as a duplex network connector to the Hub. Regular producer on the Spoke, Consumer on the Hub. If there is a temp network outage (disconnect/reconnect cable) on the network connector between Spoke and Hub, persistent messages can get lost; acked but not dispatched. This only happens if the network connector isDuplex",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75145,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i14bav:",233294,,,,,,,,,,,,,,,,,,,"10/Oct/08 12:45;gtully;It looks like mesages are being lost as they are being acked by the network connector even when the network is down. The culprit seems to be a bug fix a while back.
https://issues.apache.org/activemq/browse/AMQ-1521 - change: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java?view=diff&r1=604699&r2=604700","10/Oct/08 13:13;gtully;resolved r703447. Protected by org.apache.activemq.usecases.BrokerQueueNetworkWithDisconnectTest","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporary queue on slave not removed in Pure Master/Slave setup,AMQ-1979,12482194,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,hansb,hansb,14/Oct/08 12:56,06/Nov/08 10:47,30/Jan/20 16:55,17/Oct/08 13:02,5.2.0,,,,,,,5.2.0,,,Broker,,,,0,"Maybe not the most logical client code, but it happened here and I guess it will happen somewhere again:

  TemporaryQueue reply = session.createTemporaryQueue();      	
  MessageConsumer consumer = session.createConsumer(reply);
  Message received = consumer.receive(timeout);
  ...
  reply.delete();
  consumer.close();

I've removed try/finally blocks to keep it simple.

See the attached source code.

It works fine, but set 

  JmsMessageHandler.REVERSE_ORDER=true

and the slave will not be cleaned up properly.

It means that the number of threads is increasing and at some time it will get an OutOfMemoryError (see AMQ-1849) and the slave dies.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/08 12:56;hansb;ASF.LICENSE.NOT.GRANTED--activemqjee-0.0.6-src.tar.gz;https://issues.apache.org/jira/secure/attachment/12461154/ASF.LICENSE.NOT.GRANTED--activemqjee-0.0.6-src.tar.gz",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-10-15 14:20:17.41,,,false,,,,,,,,,,,,,,,,,75140,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i0jxfz:",114348,,,,,,,,,,,,,,,,,,,"15/Oct/08 14:20;gtully;not sure about the validity of the test case here. I tried to reproduce using an existing test case and I get an exception because the temp destination is in use till the consumer is closed. so it is not possible to delete before the close; can you concur.
I see an exception in your test case also. In the exception case, the temp destination is not deleted at all!

see the simple code mod to TempQueueMemoryTest:
{code}
Index: activemq-core/src/test/java/org/apache/activemq/advisory/TempQueueMemoryTest.java
===================================================================
--- activemq-core/src/test/java/org/apache/activemq/advisory/TempQueueMemoryTest.java	(revision 704890)
+++ activemq-core/src/test/java/org/apache/activemq/advisory/TempQueueMemoryTest.java	(working copy)
@@ -37,7 +37,7 @@
     protected Connection clientConnection;
     protected Session clientSession;
     protected Destination serverDestination;
-    protected static final int COUNT = 2000;
+    protected static final int COUNT = 1; // 2000
 
     public void testLoadRequestReply() throws Exception {
         MessageConsumer serverConsumer = serverSession.createConsumer(serverDestination);
@@ -63,8 +63,9 @@
             msg.setJMSReplyTo(replyTo);
             producer.send(msg);
             Message reply = consumer.receive();
+            //consumer.close();
+            replyTo.delete();
             consumer.close();
-            replyTo.delete();
         }
         
         clientSession.close();
{code}","15/Oct/08 14:22;gtully;exception from your test case:
{code}
2008-10-15 15:16:10,551 [MQ Session Task] ERROR JmsMessageHandler              - Failed to delete reply queue ID:gtullyd810-51430-1224080169714-3:2:1
javax.jms.JMSException: A consumer is consuming from the temporary destination
	at org.apache.activemq.ActiveMQConnection.deleteTempDestination(ActiveMQConnection.java:1869)
	at org.apache.activemq.command.ActiveMQTempDestination.delete(ActiveMQTempDestination.java:51)
	at org.activemq.jms.JmsMessageHandler.forwardToNext(JmsMessageHandler.java:236)
	at org.activemq.jms.JmsMessageHandler.onMessage(JmsMessageHandler.java:167)
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1021)
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:122)
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:192)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
{code}","15/Oct/08 14:34;hansb;Maybe it's removed later by some other cleanup method?

The application, where I've found it is running in JBoss and I suppose JBoss keeps the open connection in a pool, so then the temporary destinations are not removed.

Problem is that it causes a difference between the master and the slave: on the master the queue is removed, but on the slave it still exists.
I can reproduce that with this code.

I don't have a problem with this issue anymore, because I've fixed our client code, but I suppose the same error will be made again and will keep causing headaches. (it was worse in our case, because the exception on the failing delete attempt was not logged)


","16/Oct/08 16:39;hansb;Remove the ""reply.delete()"" code entirely. It indeed does not matter.

The issue is that the TemporaryQueue is removed in the Master and not in the Slave.

If it would not be removed in the Master (until the Connection is closed) that would be okay.","17/Oct/08 13:02;gtully;resolved in 705592.
Slave connection now knows about temp destinations so it can delete on close rather than just on an explicit delete command. It now behaves like the master in the absence of a tempDestination.delete call.","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"After adding getText and getProperties in ActiveMQText.toString(), OpenWire ActiveMQTextMessageTests fail",AMQ-1981,12482224,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,dejanb,dejanb,17/Oct/08 10:20,06/Nov/08 10:47,30/Jan/20 16:55,17/Oct/08 10:24,,,,,,,,5.2.0,,,,,,,0,"The problem is that MarshallingSupport.readUTF8() method does not work well when provided byte sequence does not contain UTF8 String. It tries to read size from first two characters and throws heap size exception.

So this will not work:

		ActiveMQTextMessage msg = new ActiveMQTextMessage();
		msg.setContent(new ByteSequence(""test"".getBytes()));
		msg.getText();

and this is used in tests to set content and marshalled properties of the message.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-10-17 11:52:39.41,,,false,,,,,,,,,,,,,,,,,75139,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i0s0yn:",161632,,,,,,,,,,,,,,,,,,,"17/Oct/08 10:24;dejanb;Fixed in SVN revision 705547 by changing tests to set utf8 values for content and marshalled properties. All additional reviews and comments are more than welcomed.","17/Oct/08 11:52;gtully;great, I agree that the tests are at fault here. looks good.","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException in high volume broker ,AMQ-1971,12482475,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jayson.minard,jayson.minard,08/Oct/08 18:42,06/Nov/08 10:47,30/Jan/20 16:55,13/Oct/08 08:57,5.2.0,,,,,,,5.2.0,,,Broker,,,,0,"This is occurring in the thousands as messages come through.    We have a network of 5 brokers although they do most of their work internally (publisher/consumer for queue are only on same broker) and do less work crossing to a central broker.

java.util.ConcurrentModificationException
	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:392)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:391)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.next(AbstractStoreCursor.java:136)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.next(StoreQueueCursor.java:140)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1178)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1290)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1004)
	at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
	at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Oct/08 06:56;jayson.minard;amq1971.patch;https://issues.apache.org/jira/secure/attachment/12461249/amq1971.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-10-12 08:58:36.735,,,false,,,,,,,,,,,,,,,,,75146,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i14bd3:",233304,,,,,,,,,,,,,,,,,,,"11/Oct/08 22:36;jayson.minard;More recent flavor of the same, but with a hash bin resize message nearby in case that is relevant.

ERROR Queue                          - Failed to page in more queue messages
java.util.ConcurrentModificationException
	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:392)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:391)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.next(AbstractStoreCursor.java:136)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.next(StoreQueueCursor.java:140)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1178)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1290)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1004)
	at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
	at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
INFO  HashIndex                      - Resize hash bins data_queue#3a#2f#2fmag.query1.queue.record.physical.augment from 1024 to 2048
","11/Oct/08 22:57;jayson.minard;This is on 5.2.0 built from SVN tag of the same name.  Client producer/consumers use POM 5.2.0 from staging server.  JDK 1.6 on Linux.

Bug also exists when running on 1 broker without a network of brokers.  

The series of queues basically are via Camel:

File -> parsing -> queue
queue -> normalization -> queue
queue -> database transactions -> queue
queue -> external systems ","12/Oct/08 08:58;hansb;Have you tried RC2?

See http://www.nabble.com/-VOTE--ActiveMQ-5.2.0---RC2-td19874910.html

If it fails, vote -1 and add the link to this issue.","12/Oct/08 19:16;jayson.minard;Trying it now.  I'll pull his binaries and make sure the client updates (should already via the POM)","12/Oct/08 19:42;jayson.minard;Still have error on single broker run...  JDK 1.6, ACTIVEMQ_OPTS=-Xmx1g, pretty vanilla activemq.xml configuration other than changing broker name and adding a few settings here to the broker element for testing:

<broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""${HOSTNAME}"" dataDirectory=""${activemq.base}/data""
        keepDurableSubsActive=""true"" useJmx=""true"" useVirtualTopics=""false"" deleteAllMessagesOnStartup=""true"" >


INFO  log                            - jetty-6.1.9
INFO  WebConsoleStarter              - ActiveMQ WebConsole initialized.
INFO  /admin                         - Initializing Spring FrameworkServlet 'dispatcher'
INFO  log                            - ActiveMQ Console at http://0.0.0.0:8161/admin
INFO  log                            - ActiveMQ Web Demos at http://0.0.0.0:8161/demo
INFO  log                            - RESTful file access application at http://0.0.0.0:8161/fileserver
INFO  log                            - Started SelectChannelConnector@0.0.0.0:8161
WARN  BrokerRegistry                 - Broker localhost not started so using query1.removed.removed.com instead
INFO  TransportConnector             - Connector vm://localhost Started
ERROR Queue                          - Failed to page in more queue messages 
java.util.ConcurrentModificationException
	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:392)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:391)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.next(AbstractStoreCursor.java:136)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.next(StoreQueueCursor.java:140)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1181)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1308)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1011)
	at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
	at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
ERROR Queue                          - Failed to page in more queue messages 
java.util.ConcurrentModificationException
	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:392)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:391)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.next(AbstractStoreCursor.java:136)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.next(StoreQueueCursor.java:140)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1181)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1308)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1011)
	at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
	at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
ERROR Queue                          - Failed to page in more queue messages 
java.util.ConcurrentModificationException
	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:392)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:391)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.next(AbstractStoreCursor.java:136)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.next(StoreQueueCursor.java:140)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1181)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1308)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1011)
	at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
	at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
ERROR Queue                          - Failed to page in more queue messages 
java.util.ConcurrentModificationException
	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:392)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:391)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.next(AbstractStoreCursor.java:136)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.next(StoreQueueCursor.java:140)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1181)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1308)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1011)
	at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
	at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
","12/Oct/08 19:50;jayson.minard;Queues form admin console look like this at time of failure (note that the admin UI now truncates queue names for display making most unreadable and unusable in the display).  Note that some queue sizes are negative numbers which we've seen before but not tracked down to anything specific.

<queues>

<queue name=""mag.query1.queue.record.physical"">

  <stats size=""-2"" consumerCount=""10"" enqueueCount=""29610"" dequeueCount=""29612""/>


  <feed>
    <atom>queueBrowse/mag.query1.queue.record.physical?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/mag.query1.queue.record.physical?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""mag.query1.queue.record.physical.pdf"">

  <stats size=""6"" consumerCount=""0"" enqueueCount=""6"" dequeueCount=""0""/>


  <feed>
    <atom>queueBrowse/mag.query1.queue.record.physical.pdf?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/mag.query1.queue.record.physical.pdf?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""mag.queue.record.search.zh"">

  <stats size=""0"" consumerCount=""10"" enqueueCount=""10"" dequeueCount=""10""/>


  <feed>
    <atom>queueBrowse/mag.queue.record.search.zh?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/mag.queue.record.search.zh?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""mag.queue.record.search.en"">

  <stats size=""-7"" consumerCount=""10"" enqueueCount=""29602"" dequeueCount=""29609""/>


  <feed>
    <atom>queueBrowse/mag.queue.record.search.en?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/mag.queue.record.search.en?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""mag.Events.Errors"">

  <stats size=""0"" consumerCount=""1"" enqueueCount=""8"" dequeueCount=""8""/>


  <feed>
    <atom>queueBrowse/mag.Events.Errors?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/mag.Events.Errors?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""mag.queue.record.logical"">

  <stats size=""0"" consumerCount=""1"" enqueueCount=""29612"" dequeueCount=""29612""/>


  <feed>
    <atom>queueBrowse/mag.queue.record.logical?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/mag.queue.record.logical?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""test.existingRecordQueue"">

  <stats size=""0"" consumerCount=""1"" enqueueCount=""0"" dequeueCount=""0""/>


  <feed>
    <atom>queueBrowse/test.existingRecordQueue?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/test.existingRecordQueue?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""mag.query1.queue.record.raw"">

  <stats size=""138407"" consumerCount=""50"" enqueueCount=""168029"" dequeueCount=""29622""/>


  <feed>
    <atom>queueBrowse/mag.query1.queue.record.raw?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/mag.query1.queue.record.raw?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""example.A"">

  <stats size=""0"" consumerCount=""1"" enqueueCount=""0"" dequeueCount=""0""/>


  <feed>
    <atom>queueBrowse/example.A?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/example.A?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""mag.query1.queue.record.physical.augment"">

  <stats size=""0"" consumerCount=""1"" enqueueCount=""27311"" dequeueCount=""27311""/>


  <feed>
    <atom>queueBrowse/mag.query1.queue.record.physical.augment?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/mag.query1.queue.record.physical.augment?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

<queue name=""mag.queue.record.search.other"">

  <stats size=""0"" consumerCount=""10"" enqueueCount=""0"" dequeueCount=""0""/>


  <feed>
    <atom>queueBrowse/mag.queue.record.search.other?view=rss&amp;feedType=atom_1.0</atom>
    <rss>queueBrowse/mag.queue.record.search.other?view=rss&amp;feedType=rss_2.0</rss>
  </feed>
</queue>

</queues>","13/Oct/08 06:56;jayson.minard;I have a tested patch for the ConcurrentModificationException in AMQ-1971, this also uncovered a bug with a related class.  See below:

Patch to fix ConcurrentModificationException which is caused by not having a perfectly synchronized this.iterator and this.batchList in AbstractStoreCursor.  Also removed any access to these member variables from subclasses to ensure they are synchronized and make sure they are not manipulated seperately.  This caused a small change in TopicStorePrefetch which had a reference to batchList although it actually overrode the ancestor class which meant that its remove() method never actually worked.  So that was replaced with a call to AbstractSoreCursor to do the actual remove work.  A few TODO comments are left in the patch for review by someone that knows more.

Basically, the fix is to ensure that all changes to batchList cause a release of the cached iterator.

I apologize in advance for reformatting the code before generating the patch.  I did that midway through the edit and it is a constant habit so it caused some noise in the patch.  If you apply it, then diff while ignoring white-space most of the noise is removed.","13/Oct/08 08:57;rajdavies;Fixed by SVN revision 703975","13/Oct/08 09:05;jayson.minard;Hey Rob, thanks for making a fix.  A quick question about the TopicStorePrefetch descendant class.  It instantiates its own batchList which then hides the ancestor one.  IT looks like you removed the dispatched() method which eliminates the previous issue I fixed and makes that part irrelevant.  But should the private batchList still be there in TopicStorePrefetch since it now appears to be unused?","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StreamMessage.writeObject() ignores Long data type,AMQ-1965,12482489,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,aperepel,aperepel,02/Oct/08 20:45,06/Nov/08 10:47,30/Jan/20 16:55,22/Oct/08 12:46,4.1.1,,,,,,,5.2.0,,,Broker,,,,0,"streamMessage.writeObject(new Long(""1"")) is silently ignored, nothing is written to the message body. The ActiveMQStreamMessage is missing one 'if' clause for the Long datatype.

{code:java}
ConnectionFactory cf = new ActiveMQConnectionFactory(""vm://localhost?broker.persistent=false&broker.useJmx=false"");
        Session session = cf.createConnection().createSession(false, Session.AUTO_ACKNOWLEDGE);

        StreamMessage sm = session.createStreamMessage();

        sm.writeObject(new Long(""1""));
        // reset so it's readable now
        sm.reset();
        assertEquals(new Long(""1""), sm.readObject());
{code}",,aperepel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-10-22 12:46:04.047,,,false,,,,,,,,,,,,,,,,,75149,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i0s1xj:",161789,,,,,,,,,,,,,,,,,,,"22/Oct/08 12:46;rajdavies;Fixed by SVN revision 707059","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Admin console, queue page, truncates queue name display to be so short (5 characters?) that you cannot differentiate queues in the console anymore",AMQ-1975,12482616,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jayson.minard,jayson.minard,12/Oct/08 19:59,06/Nov/08 10:47,30/Jan/20 16:55,13/Oct/08 07:18,5.2.0,,,,,,,5.2.0,,,,,,,0,"In the admin console, on the queue tab, it now truncates queue names after 5 characters and adds an elipses.  You can no longer tell queue names apart that differ only after the first 5 characters without a mouse-over which hurts usability and using the screen as a dashboard for current status.

Might be better to save horizontal space by word-wrapping some of the longer headers than to shorten queue names which is a rather important part of the display.

The topics tab truncates around 45 characters, was it a typo on the queue tab? 

Screenshot attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/08 19:59;jayson.minard;ASF.LICENSE.NOT.GRANTED--ishot-4.jpg;https://issues.apache.org/jira/secure/attachment/12461151/ASF.LICENSE.NOT.GRANTED--ishot-4.jpg","13/Oct/08 07:23;jayson.minard;amq-1975.patch;https://issues.apache.org/jira/secure/attachment/12461201/amq-1975.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-10-13 07:18:48.045,,,false,,,,,,,,,,,,,,,,,75143,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i18293:",255167,Regression,,,,,,,,,,,,,,,,,,"13/Oct/08 07:18;dejanb;I've set queue name truncating after 50 chars. I have in plan more visual improvements for the console.","13/Oct/08 07:23;jayson.minard;Attached patch to set the queue name truncation length to 50, which matches the topics tab and is more reasonable than the new value of ""8""","13/Oct/08 07:30;dejanb;Thanks for the patch ... I've already committed the same change","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.activemq.network.DuplexNetworkTest is unreliable - sometimes testFilter fails, sometimes hang on start",AMQ-1977,12482704,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,14/Oct/08 09:27,06/Nov/08 10:47,30/Jan/20 16:55,15/Oct/08 10:15,5.2.0,,,,,,,5.2.0,,,,,,,0,"This test is unreliable, already has two xtests which hints that it may be hiding some issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75141,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i14ban:",233293,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"15/Oct/08 10:15;gtully;revision 704846.

The existing two xtest are now returned, test reliably works; synchronization issue w.r.t interchanging brokerInfo in duplex network that sometimes caused hang has been resolved.","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StreamMessage.writeObject() doesn't behave according to the JMS 1.1 specification,AMQ-1964,12482520,12482489,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,aperepel,aperepel,02/Oct/08 19:18,06/Nov/08 10:47,30/Jan/20 16:55,22/Oct/08 13:02,4.1.1,,,,,,,5.2.0,,,Broker,,,,0,"The subj method has restrictions on the types of objects it can accept, but those restrictions aren't implemented. Testcase below.

{code:java}
// get a live session
        ConnectionFactory cf = new ActiveMQConnectionFactory(""vm://localhost?broker.persistent=false&broker.useJmx=false"");
        Session session = cf.createConnection().createSession(false, Session.AUTO_ACKNOWLEDGE);

        StreamMessage sm = session.createStreamMessage();

        // only primitives (with wrappers), String and byte[] are allowed:
        // http://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/jms/StreamMessage.html#writeObject(java.lang.Object)

        try
        {
            sm.writeObject(new Object());
            fail(""Should've failed with MessageFormatException"");
        }
        catch (MessageFormatException e)
        {
            // JMS 1.1 spec, Section 7.3 Standard Exceptions, page 89, 1st paragraph
            // expected
        }
{code}",,aperepel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-10-22 13:02:55.287,,,false,,,,,,,,,,,,,,,,,75150,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i0s1yv:",161795,,,,,,,,,,,,,,,,,,,"22/Oct/08 13:02;rajdavies;Fixed by svn revision 707064","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
can't start AMQ 5.2.0RC2 on windows,AMQ-1982,12482384,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jerryshea,jerryshea,17/Oct/08 22:49,06/Nov/08 10:47,30/Jan/20 16:55,20/Oct/08 09:37,5.2.0,,,,,,,5.2.0,,,Broker,,,,0,"I just downloaded apache-activemq-5.2.0-bin.zip dated 07-Oct-2008 17:12 from http://people.apache.org/~gtully/staging-repos/activemq-5.2.0/org/apache/activemq/apache-activemq/5.2.0/ and, after unpacking, it fails to start on my XP SP2 box. Output as below:

ACTIVEMQ_HOME: D:\Development\activemq\apache-activemq-5.2.0\bin\..
ACTIVEMQ_BASE: D:\Development\activemq\apache-activemq-5.2.0\bin\..
Loading message broker from: xbean:activemq.xml
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanInitializationException: Could not load properties; nested exception is java.net.UnknownHostException: D
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanInitializationException: Could not load properties; nested exception is java.net.UnknownHostException: D
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:225)
	at org.apache.activemq.console.Main.main(Main.java:106)
Caused by: org.springframework.beans.factory.BeanInitializationException: Could not load properties; nested exception is java.net.UnknownHostException: D
	at org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory(PropertyResourceConfigurer.java:78)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:554)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:528)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:363)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	... 10 more
Caused by: java.net.UnknownHostException: D
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:177)
	at java.net.Socket.connect(Socket.java:518)
	at java.net.Socket.connect(Socket.java:468)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:157)
	at sun.net.NetworkClient.openServer(NetworkClient.java:118)
	at sun.net.ftp.FtpClient.openServer(FtpClient.java:488)
	at sun.net.ftp.FtpClient.openServer(FtpClient.java:475)
	at sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:270)
	at sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:352)
	at org.springframework.core.io.UrlResource.getInputStream(UrlResource.java:123)
	at org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:182)
	at org.springframework.core.io.support.PropertiesLoaderSupport.mergeProperties(PropertiesLoaderSupport.java:161)
	at org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory(PropertyResourceConfigurer.java:69)
	... 21 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanInitializationException: Could not load properties; nested exception is java.net.UnknownHostException: D
java.lang.Exception: org.springframework.beans.factory.BeanInitializationException: Could not load properties; nested exception is java.net.UnknownHostException: D
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:225)
	at org.apache.activemq.console.Main.main(Main.java:106)
Caused by: org.springframework.beans.factory.BeanInitializationException: Could not load properties; nested exception is java.net.UnknownHostException: D
	at org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory(PropertyResourceConfigurer.java:78)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:554)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:528)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:363)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	... 10 more
Caused by: java.net.UnknownHostException: D
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:177)
	at java.net.Socket.connect(Socket.java:518)
	at java.net.Socket.connect(Socket.java:468)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:157)
	at sun.net.NetworkClient.openServer(NetworkClient.java:118)
	at sun.net.ftp.FtpClient.openServer(FtpClient.java:488)
	at sun.net.ftp.FtpClient.openServer(FtpClient.java:475)
	at sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:270)
	at sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:352)
	at org.springframework.core.io.UrlResource.getInputStream(UrlResource.java:123)
	at org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:182)
	at org.springframework.core.io.support.PropertiesLoaderSupport.mergeProperties(PropertiesLoaderSupport.java:161)
	at org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory(PropertyResourceConfigurer.java:69)
	... 21 more

Sounds like a path issue? See http://www.mail-archive.com/users@maven.apache.org/msg09111.html

I also tried downloading the .tar.gz and trying that in cygwin but same result","Windows XP SP2. Sun java version ""1.6.0_02""",jerryshea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-10-20 09:37:50.328,,,false,,,,,,,,,,,,,,,,,75138,,,Thu Nov 06 10:47:07 UTC 2008,,,,,,,,"0|i0s1t3:",161769,,,,,,,,,,,,,,,,,,,"17/Oct/08 23:11;jerryshea;This seems to be because of the malformed URL resulting from the below stanza in activemq.xml:

    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
		 <property name=""locations"">
			<value>file://${activemq.base}/conf/credentials.properties</value>
		 </property>      
    </bean>

If you add another slash after file: then the broker starts:

			<value>file:///${activemq.base}/conf/credentials.properties</value>
","17/Oct/08 23:13;jerryshea;Note that the same fix also needs to be applied to webapps\admin\WEB-INF\webconsole-embedded.xml","18/Oct/08 10:17;jerryshea;same problem and same fix in 5.3.SNAPSHOT","20/Oct/08 09:37;gtully;good catch: changes applied to r706164

thanks.","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages from store are getting deleted 2 times when the deleteAllMessagesOnStartup is enabled on the broker configuration.,AMQ-1954,12482696,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,25/Sep/08 03:06,06/Nov/08 10:47,30/Jan/20 16:55,03/Nov/08 17:49,5.2.0,,,,,,,5.2.0,,,Broker,,,,0,"I noticed this because when deleteAllMessagesOnStartup was enabled, starting up the JDBC store took a very long time to get started.  Digging into it, I noticed that the slow start up was due to trying to clear out the messages after the database lock was aquired.  Since the first delete happens before the store is started, and the second the delete happens after the store is started, the second delete is the one giving us the problems with the JDBC store.  Going to remove that one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-11-06 10:47:06.934,,,false,,,,,,,,,,,,,,,,,75159,,,Thu Nov 06 10:47:06 UTC 2008,,,,,,,,"0|i1829r:",255170,,,,,,,,,,,,,,,,,,,"25/Sep/08 03:08;chirino;Ah looks like this had already been fixed in head.","06/Nov/08 10:47;gtully;These fixes will now make 5.2.0 rc3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default Broker config does not shutdown when an internal persistence error occurs.,AMQ-1720,12482349,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,12/May/08 18:03,26/Oct/08 23:55,30/Jan/20 16:55,16/May/08 17:53,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"This is due to all the other non-deamon threads running that are not part of the broker but in the default config.  For example jetty threads and camel stuff.

We should allow the broker server to callback to a listener to that the Main that starts it all can System.exit properly when the broker is shutdown.. that should cause the non-daemon stuff to exit too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-10-26 23:55:11.696,,,false,,,,,,,,,,,,,,,,,84790,,,Sun Oct 26 23:55:11 UTC 2008,,,,,,,,"0|i0ku2f:",119689,,,,,,,,,,,,,,,,,,,"12/May/08 18:04;chirino;Pasting in a log showing a broker who's DB connection has died and the broker tired to shutdown the but the process has not exited.

{code}
ACTIVEMQ_HOME: C:\iona\apache-activemq-5.0.0.11-fuse\bin\..
ACTIVEMQ_BASE: C:\iona\apache-activemq-5.0.0.11-fuse\bin\..
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - Using Persistence Adapter: JDBCPersistenceAdaptor(org.apache.commons.dbcp.BasicDataSource@c272bc)
INFO  BrokerService                  - ActiveMQ 5.0.0.11-fuse JMS Message Broker (localhost) is starting
INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
INFO  JDBCPersistenceAdapter         - Database driver recognized: [mysql-ab_jdbc_driver]
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
INFO  DefaultDatabaseLocker          - Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@c272bc
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://jluod810:61616
INFO  TransportConnector             - Connector openwire Started
INFO  TransportServerThreadSupport   - Listening for connections at: ssl://jluod810:61617
INFO  TransportConnector             - Connector ssl Started
INFO  TransportServerThreadSupport   - Listening for connections at: stomp://jluod810:61613
INFO  TransportConnector             - Connector stomp Started
INFO  TransportServerThreadSupport   - Listening for connections at: xmpp://jluod810:61222
INFO  TransportConnector             - Connector xmpp Started
INFO  NetworkConnector               - Network Connector org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent@25491d Started
INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:jluod810-2851-1210614072672-0:0) started
INFO  DiscoveryNetworkConnector      - Establishing network connection between from vm://localhost to tcp://martinmd800:61616
INFO  TransportConnector             - Connector vm://localhost Started
INFO  DemandForwardingBridge         - Network connection between vm://localhost#2 and tcp://martinmd800/10.5.1.158:61616(localhost) has been established.
INFO  log                            - Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
INFO  log                            - jetty-6.1.0.1-fuse
INFO  WebConsoleStarter              - ActiveMQ WebConsole initialized.
INFO  /admin                         - Initializing Spring FrameworkServlet 'dispatcher'
INFO  log                            - ActiveMQ Console at http://0.0.0.0:8161/admin
INFO  log                            - ActiveMQ Web Demos at http://0.0.0.0:8161/demo
INFO  log                            - Started SelectChannelConnector@0.0.0.0:8161
ERROR DefaultDatabaseLocker          - Failed to update database lock: com.mysql.jdbc.CommunicationsException: Communications link failure due to underlying exception: 
 
** BEGIN NESTED EXCEPTION ** 
 
java.net.SocketException
MESSAGE: Connection reset by peer: socket write error
 
STACKTRACE:
 
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:2744)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1612)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.keepAlive(DefaultDatabaseLocker.java:103)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:458)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:260)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:417)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:280)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:135)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:65)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:142)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:166)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
 
 
** END NESTED EXCEPTION **
 
 
 
Last packet sent to the server was 0 ms ago.
com.mysql.jdbc.CommunicationsException: Communications link failure due to underlying exception: 
 
** BEGIN NESTED EXCEPTION ** 
 
java.net.SocketException
MESSAGE: Connection reset by peer: socket write error
 
STACKTRACE:
 
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:2744)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1612)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.keepAlive(DefaultDatabaseLocker.java:103)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:458)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:260)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:417)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:280)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:135)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:65)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:142)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:166)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
 
 
** END NESTED EXCEPTION **
 
 
 
Last packet sent to the server was 0 ms ago.
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:2759)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1612)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.keepAlive(DefaultDatabaseLocker.java:103)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:458)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:260)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:417)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:280)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:135)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:65)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:142)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:166)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
INFO  JDBCPersistenceAdapter         - No longer able to keep the exclusive lock so giving up being a master
INFO  BrokerService                  - ActiveMQ Message Broker (localhost, ID:jluod810-2851-1210614072672-0:0) is shutting down
INFO  DemandForwardingBridge         - localhost bridge to localhost stopped
INFO  NetworkConnector               - Network Connector org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent@25491d Stopped
INFO  TransportConnector             - Connector openwire Stopped
INFO  TransportConnector             - Connector ssl Stopped
WARN  ActiveMQConnection             - Async exception with no exception listener: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: localhost/127.0.0.1:61616
org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: localhost/127.0.0.1:61616
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:225)
	at org.apache.activemq.transport.InactivityMonitor$3.run(InactivityMonitor.java:135)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
INFO  TransportConnector             - Connector stomp Stopped
INFO  TransportConnector             - Connector xmpp Stopped
ERROR JDBCPersistenceAdapter         - Could not stop service: JDBCPersistenceAdaptor(org.apache.commons.dbcp.BasicDataSource@c272bc). Reason: com.mysql.jdbc.exceptions.MySQLNonTransientConnectionException: Connection.close() has already been called. Invalid operation in this state.
com.mysql.jdbc.exceptions.MySQLNonTransientConnectionException: Connection.close() has already been called. Invalid operation in this state.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:888)
	at com.mysql.jdbc.Connection.getMutex(Connection.java:3755)
	at com.mysql.jdbc.Connection.rollback(Connection.java:5251)
	at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:220)
	at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:220)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.rollback(PoolingDataSource.java:288)
	at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.stop(DefaultDatabaseLocker.java:94)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.stop(JDBCPersistenceAdapter.java:204)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:475)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.stopBroker(JDBCPersistenceAdapter.java:474)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:466)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:260)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:417)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:280)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:135)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:65)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:142)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:166)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
ERROR ManagedTopicRegion             - Could not stop service: TopicRegion: destinations=9, subscriptions=2, memory=0%. Reason: java.lang.InterruptedException
java.lang.InterruptedException
	at java.lang.Object.wait(Native Method)
	at org.apache.activemq.thread.DedicatedTaskRunner.shutdown(DedicatedTaskRunner.java:72)
	at org.apache.activemq.thread.DedicatedTaskRunner.shutdown(DedicatedTaskRunner.java:83)
	at org.apache.activemq.broker.region.Topic.stop(Topic.java:469)
	at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:110)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:629)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:109)
	at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:187)
	at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:117)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerService$2.stop(BrokerService.java:1513)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:477)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.stopBroker(JDBCPersistenceAdapter.java:474)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:466)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:260)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:417)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:280)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:135)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:65)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:142)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:166)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
ERROR BrokerService$2                - Could not stop service: org.apache.activemq.broker.BrokerService$2@12b9f14. Reason: java.lang.InterruptedException
java.lang.InterruptedException
	at java.lang.Object.wait(Native Method)
	at org.apache.activemq.thread.DedicatedTaskRunner.shutdown(DedicatedTaskRunner.java:72)
	at org.apache.activemq.thread.DedicatedTaskRunner.shutdown(DedicatedTaskRunner.java:83)
	at org.apache.activemq.broker.region.Topic.stop(Topic.java:469)
	at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:110)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:629)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:109)
	at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:187)
	at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:117)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerService$2.stop(BrokerService.java:1513)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:477)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.stopBroker(JDBCPersistenceAdapter.java:474)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:466)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:260)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:417)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:280)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:135)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:65)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:142)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:166)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
WARN  ActiveMQConnection             - Async exception with no exception listener: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#1) disposed.
org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#1) disposed.
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:198)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
INFO  TransportConnector             - Connector vm://localhost Stopped
INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:jluod810-2851-1210614072672-0:0) stopped
WARN  JDBCPersistenceAdapter         - Failed to stop brokercom.mysql.jdbc.exceptions.MySQLNonTransientConnectionException: Connection.close() has already been called. Invalid operation in this state.

{code}","16/May/08 17:53;chirino;Fixed.","26/Oct/08 23:55;jerememonteau;Hi,

We are experiencing this problem when our MySQL Cluster performs some weekly maintenance tasks. It seems to force any clients to disconnect momentarily.
Is there anyway to configure ActiveMQ to handle these disconnects in a more robust fashion? I'm thinking along the lines of autoReconnect at the driver level or 
something similar. Has anyone else worked around this? We are running 5.2 and the behavior seems improved from 5.1, since the process does completely shutdown
instead of ending up in a zombie-like state of running but not responding to requests. We are running in a Master/Slave failover configuration and unfortunately the
MySQL Cluster seems to do a wholesale disconnect of all clients at certain times, so the secondary activemq process also goes down, leaving us with no available queues.
We are considering moving to a network of brokers high availability configuration but documentation on this setup seems sparse. Any advice is greatly appreciatted.

Thanks,
Jereme Monteau",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave threads increasing when sending to temporary queue,AMQ-1849,12482689,12482194,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,hansb,hansb,09/Jul/08 17:29,14/Oct/08 12:57,30/Jan/20 16:55,05/Sep/08 20:52,5.2.0,,,,,,,5.2.0,,,,,,,0,"Deployed the attached TextMDB (modified JBoss example) to our JBoss 4.0.5 GA server (cluster).

- send a message to ""queue.A"" with Reply To set to ""queue.REPLY_A""

The TextMDB bean: 
   - creates a temporary queue with NON_PERSISTENT delivery mode
   - forwards message body to ""queue.B"" and sets the reply queue to this temporary queue
   - another (or the same) instance of TextMDB replies and adds some text, replies to the temporary queue
   - the first TextMDB replies to ""queue.REPLY_A""

Works fine, except that every time a temporary queue message is sent, the number of threads on the slave increases by 3.

On the master the threads are destroyed after a while, but on the slave they persist, growing to ""OutOfMemoryError: unable to create new native thread""

Temporary queue Thread Name example: TempQueue:  ID:{HOSTNAME}-59619-1215591084487-0:16:5
+ 2 topic threads

That thread ID can be found ActiveMQ messages in the attached JBoss log.

Have I created a bug im my code or have I found a bug in the ActiveMQ server?
","Pure master/slave
JBoss 4.0.5 GA   (on Java 1.5.0_14)
few days old ActiveMQ 5.2.0-SNAPSHOT (on Java  ""1.6.0_06"")
",sits,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jul/08 17:29;hansb;ASF.LICENSE.NOT.GRANTED--jboss.log;https://issues.apache.org/jira/secure/attachment/12461166/ASF.LICENSE.NOT.GRANTED--jboss.log","10/Jul/08 09:41;hansb;activemqjee-0.0.2-src.tar.gz;https://issues.apache.org/jira/secure/attachment/12461232/activemqjee-0.0.2-src.tar.gz",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-09-05 20:52:31.826,,,false,,,,,,,,,,,,,,,,,95927,,,Mon Sep 08 11:28:33 UTC 2008,,,,,,,,"0|i0tsnz:",171953,,,,,,,,,,,,,,,,,,,"10/Jul/08 09:41;hansb;Update 0.0.2:

- added a stand-alone test
- delete the temporary queue and close its (locally created) session


The problem on the slave persists.

To run the test do something like:

java -cp conf:lib/log4j-1.2.14.jar:lib/activemq-all-5.2-SNAPSHOT.jar:lib/activemqjee-0.0.2.jar org.activemq.jms.StandaloneApp

With libraries in ""lib"" and ""log4j.xml"" and ""jndi.properties"" in ""conf"".

""jndi.properties"" contains the fail-over URL:

  java.naming.provider.url=failover:(tcp://masterhost:61616,tcp://slavehost:61616)


BTW: Pure master/slave does not work with 5.1.0, so I cannot test that one. ( see AMQ-1585 )

","10/Jul/08 10:43;hansb;Everytime it happens, I get a ClassCastException in ""data/activemq.log"" on the slave host:

2008-07-10 11:48:33,907 [t: vm://slavehost#1] ERROR Queue                          - Failed to page in more queue messages 
java.lang.ClassCastException: org.apache.activemq.command.ActiveMQTextMessage cannot be cast to org.apache.activemq.broker.region.QueueMessageReference
        at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1045)
        at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1037)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1117)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1196)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:951)
        at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1077)
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1072)
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:470)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:413)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:350)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:437)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:437)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:624)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
","10/Jul/08 15:18;hansb;Deployed build 675511 from svn: the exception is gone, but the number of threads on the slave still increases every time I send a message.

Tested both with the stand-alone client and with the TextMDB.","30/Jul/08 07:03;hansb;Tried 680628 yesterday, but the issue is still there.

Any ideas where it fails? Can I do something?","05/Sep/08 20:52;gtully;temp queues are now cleaned up in the slave.","05/Sep/08 21:47;hansb;That's good news!

I'll test it, monday.
","08/Sep/08 11:28;hansb;The test with the attached ""activemqjee-0.0.2"" worked fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock using temporary queues in Pure Master/Slave setup,AMQ-1950,12482311,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,hansb,hansb,24/Sep/08 09:27,08/Oct/08 16:30,30/Jan/20 16:55,01/Oct/08 16:17,5.2.0,,,,,,,5.2.0,,,Broker,,,,0,"The deadlock occurs on the slave after sending some 30 messages. Sending a few at a time works fine.
The test application is a MessageDrivenBean that sends a message to another MDB with a temporary reply queue.

Name: TempQueue:  ID:selten.marketxs.com-40254-1222245868043-0:14:6
State: WAITING on java.util.concurrent.locks.ReentrantLock$NonfairSync@f30862 owned by: VMTransport: vm://solow.marketxs.com#1
Total blocked: 0  Total waited: 1

Stack trace: 
sun.misc.Unsafe.park(Native Method)
java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)
java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
org.apache.activemq.broker.region.Queue.iterate(Queue.java:992)
   - locked org.apache.activemq.broker.region.Queue$2@16b775f
org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

Name: VMTransport: vm://solow.marketxs.com#1
State: BLOCKED on org.apache.activemq.broker.region.Queue$2@16b775f owned by: TempQueue:  ID:selten.marketxs.com-40254-1222245868043-0:14:6
Total blocked: 9  Total waited: 2,684

Stack trace: 
org.apache.activemq.broker.region.Queue.iterate(Queue.java:952)
org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1136)
org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:249)
org.apache.activemq.broker.region.TempQueue.addSubscription(TempQueue.java:74)
org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:275)
   - locked java.lang.Object@1ba2be8
org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:378)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:541)
org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)


I'll try to reproduce the issue with a stand-alone JMS client. It also happens without JBoss clustering.
","JBoss 4.0.5 GA with ActiveMQ resource adapter and Java 1.6 update 7

I used the ActiveMQ 5.2.0 RC1 from 10th september.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/08 14:09;hansb;ASF.LICENSE.NOT.GRANTED--activemqjee-0.0.4-src.tar.gz;https://issues.apache.org/jira/secure/attachment/12461189/ASF.LICENSE.NOT.GRANTED--activemqjee-0.0.4-src.tar.gz","24/Sep/08 09:27;hansb;ASF.LICENSE.NOT.GRANTED--deadlock.txt;https://issues.apache.org/jira/secure/attachment/12461263/ASF.LICENSE.NOT.GRANTED--deadlock.txt","07/Oct/08 11:13;gtully;StandaloneApp.java;https://issues.apache.org/jira/secure/attachment/12461264/StandaloneApp.java","01/Oct/08 10:51;gtully;amq-1950.patch.2.txt;https://issues.apache.org/jira/secure/attachment/12461153/amq-1950.patch.2.txt",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2008-09-30 13:50:49.32,,,false,,,,,,,,,,,,,,,,,75162,,,Tue Oct 07 17:20:48 UTC 2008,,,,,,,,"0|i0tt1j:",172014,,,,,,,,,,,,,,,,,,,"30/Sep/08 13:50;gtully;Hans, have you had any luck reproducing this problem with trunk and with a simple jms only test. I have been attempting to reproduce with org.apache.activemq.advisory.MasterSlaveTempQueueMemoryTest, but to no avail.","30/Sep/08 14:10;hansb;I first tried to run the test with a singleton MDB, but I found that my JBoss configuration failed here. It was still deploying multiple beans.

I think to reproduce it stand-alone, I must instantiate several message message listener beans that forward the message to a temporary queue and receive the reply. Probably less than that will do, but this would replicate the JBoss case and I don't know which part exactly fails.

","30/Sep/08 14:20;gtully;This patch should resolve the issue, the wakeup outside of the dispatchLock makes sense in all cases, as the wakeup deals with optimized and the additional isSlave check which causes the problem in this case.
I want to verify a full test run with this change and also see if I can generate a tests case that reproduces the problem.
Hans, if you get a chance, can you verify your jboss scenario with this fix? thanks.","30/Sep/08 14:56;hansb;Removed 

    <dependency>
      <groupId>${pom.groupId}</groupId>
      <artifactId>activemq-core</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

from activemq-pool/pom.xml

or I get:

Missing:
----------
1) org.apache.activemq:activemq-core:test-jar:tests:5.3-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.apache.activemq -DartifactId=activemq-core -Dversion=5.3-SNAPSHOT -Dclassifier=tests -Dpackaging=test-jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.apache.activemq -DartifactId=activemq-core -Dversion=5.3-SNAPSHOT -Dclassifier=tests -Dpackaging=test-jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
        1) org.apache.activemq:activemq-pool:bundle:5.3-SNAPSHOT
        2) org.apache.activemq:activemq-core:test-jar:tests:5.3-SNAPSHOT

----------
1 required artifact is missing.

for artifact: 
  org.apache.activemq:activemq-pool:bundle:5.3-SNAPSHOT

Same for activemq-camel/pom.xml and some other sub poms

I'm running

  mvn -Dmaven.test.skip=true install

because it takes a long time to run all tests and some often fail.

Maven does not skip the test-jar dependencies, it seems.

Installed Maven 2.0.9, but it does the same :(

Getting there, but it takes a while.","30/Sep/08 15:22;gtully;ah,{code}mvn clean install -Dtest=0{code} does the trick. The builds the tests but no tests are run as none match '0'.","30/Sep/08 16:06;hansb;Thanks. Easier than removing all those dependencies.

I've first tested with the old installation to verify that it still fails. It did. With 1 message and 10 messages it was OK, but when I sent 50 it got the deadlock at 33.


With the patched 700476 I do not get a dead after sending 4 times 100 messages at a time.

I got some "" Slave broker out of sync with master: Dispatched message (ID:...id.) was not in the pending list"" messages, though.
And, I guess as a result, the number of messages on the slave queue page were not updated to the same values as on the master.

I also have a lot of temporary queues on the slave, now.
","30/Sep/08 16:26;hansb;Did another test with 30 messages at a time and then it happened at exactly the same total number of messages: 200

Does that ring a bell? Is there some list that gets full?

Maybe I should try with a much larger message. If the same happens sooner it could be a memory buffer that gets full.
","30/Sep/08 16:47;gtully;this is progress but it is pointing to the need for a standalone test case.
200 is the default page size, but not sure if that is relevant in this case. 

I wonder if it is worth looking at org.apache.activemq.advisory.TempQueueMemoryTest, it is simple rpc with a temp q for the reply. I extended it to master slave to tackle an instance of ""Slave broker out of sync with master..."" in the past, hense MasterSlaveTempQueueMemoryTest. How different is the mdb scenario? If we can replicate the jms logic then I think it is only a case of ensuring that the session/connection caching is maintained and the jboss scenario can be reproduced. Do you think this is feasible?
","30/Sep/08 17:54;hansb;Certainly feasible, but I think implementing all is a lot of work and not necessary. The problem is to identify the relevant parts.
For AMQ-1849 I could make a bean that is used by both.

Here it's a bit more complicated, because I think that concurrency is part of the problem. I'm not sure exactly where, but I suspect creating and deleting temporary queues is at least part of it. (well, for the deadlock certainly)

The JBoss case usually works fine when I send 10 messages, that are forwarded from the first MDB to another temporary queue. When there are more pending messages, JBoss will create more MDB's, so there is more concurrency.

I doubt that the test cases really catch the master/slave issues, because of variable latency between the hosts. But it's better than nothing. I'll check them again.

later

","01/Oct/08 10:51;gtully;more complete patch, same logic needs to be applied to subscription removal as well as subscription addition as iterate can be at work in both cases.","01/Oct/08 11:38;hansb;Do you think the patch to avoid the deadlock can be applied to 5.2.0 RC1 ?","01/Oct/08 11:53;gtully;yea, I will cut rc2 from trunk before the end of the week with a bit of luck and commit the deadlock fixes once I track down some further regressions with the unit tests.","01/Oct/08 16:17;gtully;Committed revision 700823 slight revision to patch to gate on isSlave to reflect wakeup inline call to iterate. This allows immediate dispatch to new subscription.","03/Oct/08 19:09;hansb;Surprising result (for me, at least) with the patched RC1(Sep 30) : it also happens when the MDB's are deployed as singleton.

I sent 50 messages at a time. Fine up to 200, so 4 times.

On the 5th it works as expected on the master, but the slave has:

|| queue      || Pending   || Received ||
| queue.ReplyA | 250     | 0 |
|  queue.A 	     | 50       | 200 |
|  queue.B 	     | 50   | 200 | 

A stand-alone test application using a single bean is quite easy to make, if it's still necessary.

Have not tried the latest trunk, yet.

","06/Oct/08 14:09;hansb;I've created a JMSMessageHandler (a MessageListener) and a kind of container for it.

See activemqjee-0.0.4-src.tar.gz

It can be deployed on JBoss 4, Glassfish or stand-alone. (tested all three)

To run it stand-alone, do something like:

java -classpath conf:lib/activemq-all-5.2.0.jar:lib/activemqjee-0.0.4.jar:lib/log4j-1.2.14.jar org.activemq.jms.StandaloneApp 

that is, on a unix with a directory structure:
 conf/jndi.properties  
 conf/log4j.xml
 lib/activemq-all-5.2.0.jar  
 lib/activemqjee-0.0.4.jar
 lib/log4j-1.2.14.jar

Optional parameters:
  a number = the number of concurrent beans (message listeners)  (default 1)
  a second number =  the number of milliseconds to use for time-to-live / timeout. (default 1000 ms)

","06/Oct/08 15:06;gtully;Hans, this looks like progress, thanks. Standalone app runs fine. Can u post your handy client? thanks.","06/Oct/08 15:35;hansb;I don't know, what you mean. StandaloneApp is my handy client. (I think)


It works by posting a message to 'queue.A' with the ActiveMQ console (or anyway you like, of course) with a reply queue (I use ""queue.ReplyA""). 

Then the first message handler (handler A) forwards the message to 'queue.B'  to which the second message handler is listening.

The second message handler replies to the first through the reply queue (set by handler A).

The first (handler A) replies to the reply you've specified in the first request.


","07/Oct/08 10:12;hansb;Also works on JBoss 4.2.3.GA. (the other was 4.0.5)



","07/Oct/08 11:13;gtully;Added a little test driver, startBroker(), doWork() that submits 250 messages, both maser and slave show the expected processed messages via jconsole.
","07/Oct/08 11:18;gtully;Hans, ok, I added the code to start a master slave pair and produce 250 messages to StandaloneApp, see attachement. The test works are expected. Are you happy that this issues is resolved?

The 'surprising' result you mention above (on the 3rd), in what circumstances does this happen in the standalone app?
I will try some additional values of ""the number of concurrent beans (message listeners) (default 1)"" in the next few minutes it hope of reproducing the problem. 
Otherwise, can we consider this issue closed?","07/Oct/08 15:48;hansb;That result was against the same version as I had tested before.

I'll test again. I should use the latest 5.3.0-SNAPSHOT ?

Or is there a new RC already?","07/Oct/08 16:29;gtully;wait for the new rc, I am working on it now.","07/Oct/08 17:20;hansb;Your test does not test concurrency. The receiver waits until it gets the previously posted message and then the next message is produced. 

I've modified it to first produce all messages with a correlationid and then try to receive the same number of messages and checking the received ids.

Also added copying the correlationid in the handler. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Usage leak in broker when subscribing to a topic using selector,AMQ-1889,12482244,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,15/Aug/08 14:04,08/Oct/08 13:56,30/Jan/20 16:55,15/Aug/08 14:06,5.1.0,,,,,,,5.2.0,,,,,,,0,"Original reported in [the mailing list|http://www.nabble.com/Memory-leak-in-broker-when-subscribing-to-a-topic-using-TCP-connector-%2B-noLocal--tp18821110p18821110.html]

Original report notices the problem with noLocal, but I belive that the usage leak when any selector is used.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Oct/08 13:56;piepera;BrokerMemoryLeak.java;https://issues.apache.org/jira/secure/attachment/12461223/BrokerMemoryLeak.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-10-08 13:56:34.361,,,false,,,,,,,,,,,,,,,,,84738,,,Wed Oct 08 13:56:34 UTC 2008,,,,,,,,"0|i0s0uf:",161613,,,,,,,,,,,,,,,,,,,"15/Aug/08 14:06;chirino;Fixed in rev 686217","08/Oct/08 13:56;piepera;This test case demonstrates a memory leak in the Broker Service. When you execute it, BrokerService's memory percent steadily increases until it hits 100. Then, messages stop being sent.

Originally posted to the mailing list: http://www.nabble.com/Memory-leak-in-broker-when-subscribing-to-a-topic-using-TCP-connector-%2B-noLocal--td18821110.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
transport deadlock attempting to shutdown the broker,AMQ-1818,12482243,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,snstanton,snstanton,20/Jun/08 18:16,08/Oct/08 08:49,30/Jan/20 16:55,23/Sep/08 06:56,5.1.0,,,,,,,5.2.0,,,Transport,,,,0,"While attempting to shutdown a JVM with an embedded broker listening on a stomp+ssl port, I ran into the following deadlock:
{code}
Found one Java-level deadlock:
=============================
""ActiveMQ Transport: ssl:///127.0.0.1:43713"":
  waiting to lock monitor 0x8d587f70 (object 0x9b8362b0, a java.lang.Object),
  which is held by ""BrokerService""
""BrokerService"":
  waiting to lock monitor 0x08901314 (object 0x9b8527b0, a java.lang.Object),
  which is held by ""ActiveMQ Transport: ssl:///127.0.0.1:43713""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Transport: ssl:///127.0.0.1:43713"":
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- waiting to lock <0x9b8362b0> (a java.lang.Object)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1188)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:776)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:735)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	- locked <0x9b852bb0> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:80)
	- locked <0x9b8527b0> (a java.lang.Object)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:134)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompUnsubscribe(ProtocolConverter.java:424)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommad(ProtocolConverter.java:184)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:104)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
	at java.lang.Thread.run(Thread.java:619)
""BrokerService"":
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:80)
	- waiting to lock <0x9b8527b0> (a java.lang.Object)
	at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:71)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommad(ProtocolConverter.java:550)
	at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:59)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:233)
	- locked <0x9b857d50> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x9b8362b0> (a java.lang.Object)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1188)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:776)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:813)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)

Found 1 deadlock.
{code}","Red Hat Desktop release 4 (Nahant Update 4)
Linux ecbuild-lin1 2.6.9-42.ELsmp #1 SMP Wed Jul 12 23:27:17 EDT 2006 i686 i686 i386 GNU/Linux
ActiveMQ 5.1.0",snstanton,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-05 10:09:09.12,,,false,,,,,,,,,,,,,,,,,84757,,,Tue Sep 23 06:56:17 UTC 2008,,,,,,,,"0|i0s1nj:",161744,,,,,,,,,,,,,,,,,,,"05/Sep/08 10:09;augusto.rodriguez;Scott,

I ran in the same problem and it looks like this might be solved in AMQ-1819 (version 5.2.0)

Cheers,
Augusto","23/Sep/08 06:56;rajdavies;Fixed by SVN revision 698103",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The JmsFrameTranslator for stomp outputs ""is null"" to the console on every recieved message",AMQ-1963,12482382,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jeff.ward,jeff.ward,02/Oct/08 15:52,08/Oct/08 08:49,30/Jan/20 16:55,03/Oct/08 09:31,5.1.0,5.2.0,,,,,,5.2.0,,,Transport,,,,0,"JmsFrameTranslator.java has a console write line to output ""is null"" whenever it creates a new xstream object.  This can occur on every frame and can clutter log files.  Either it needs to be changed to a log4j call or it needs to be removed entirely.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-10-03 09:31:03.382,,,false,,,,,,,,,,,,,,,,,75151,,,Fri Oct 03 09:31:03 UTC 2008,,,,,,,,"0|i0s0z3:",161634,,,,,,,,,,,,,,,,,,,"03/Oct/08 09:31;dejanb;Fixed in SVN revision 701333",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The pooled connection factory FactoryBean does not implement DisposableBean and thus leaks connections,AMQ-1938,12482531,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gnodet,gnodet,gnodet,16/Sep/08 06:46,08/Oct/08 08:49,30/Jan/20 16:55,16/Sep/08 07:40,5.1.0,,,,,,,5.2.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,40909,,,Tue Sep 16 07:40:07 UTC 2008,,,,,,,,"0|i0s0jj:",161564,,,,,,,,,,,,,,,,,,,"16/Sep/08 07:40;gnodet;Sending        activemq-pool/src/main/java/org/apache/activemq/pool/PooledConnectionFactoryBean.java
Transmitting file data .
Committed revision 695754.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue.pagedInPendingDispatch should be a set - to prevent messages being added more than once,AMQ-1947,12482701,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,22/Sep/08 19:27,08/Oct/08 08:49,30/Jan/20 16:55,22/Sep/08 19:30,5.0.0,5.1.0,5.2.0,,,,,5.2.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75163,,,Mon Sep 22 19:30:29 UTC 2008,,,,,,,,"0|i14bof:",233355,,,,,,,,,,,,,,,,,,,"22/Sep/08 19:30;rajdavies;Fixed by SVN revision 698573",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC-Master/Slave Failover - Consumer stop after 1000 Messages,AMQ-1925,12482229,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,msiegenthaler,msiegenthaler,02/Sep/08 17:38,08/Oct/08 08:49,30/Jan/20 16:55,12/Sep/08 11:06,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"In a JDBC-Master/Slave Environment with ActiveMQ 5.1.0 (+patches for 1710 und 1838) the failover for consumers works, the consumers resume to get messages after the failover but then the suddenly stop after approx. 1000 messages (mostly 1000, one got to 1080). The consumers are using transacted sessions.

The thread dump look unsuspicious, everybody is waiting on the Socket
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:195)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
	at java.lang.Thread.run(Thread.java:619)

A memory dump from the consumers shows that they've really run out of messages and are waiting for the broker to deliver new ones. I've attached both the thread dump and the heap dump to this issue (or better: I'll do so :)

The broker doesn't do anything (also waits on the transport-socket), the queue has a full page-in buffer (100 messages) but obviously fails to do anything with it. If I manually trigger a doDispatch of all pagedIn messages (via the debugger, just a try to revive the thing) it returns doing nothing at all, since all subscriptions are full (s.isFull). I further investigated the issue and was confused to see the prefetchExtension field of the PrefetchSubscription having a value of -1000 (negative!). This explains why it was considered full:
  dispatched.size() - prefetchExtension >= info.getPrefetchSize()
  0 - (-1000) >= 1000
quite nasty.. so even though the dispatched size was zero the client didn't receive any new messages.
The only place this value can become negative is inside acknowledge, where it's decremented (prefetchExtension--), all other places do a Math.max(0, X).

So here's my guess what happened: The client had a full (1000 messages) prefetch buffer when I killed my master. As soon as the slave was done starting they reconnected and started processing the messages in the prefetch and acknowleding them. This gradually decremented the counter into a negative value because the slave never got a chance to increment the prefetchExtension since it didn't action delivery those messages.

Possible solutions:
- clear the prefetch buffer on a failover
- just don't allow this value to become smaller than zero (not sure if that covers all bases)",,msiegenthaler,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Sep/08 14:27;msiegenthaler;AMQ1925Test.java;https://issues.apache.org/jira/secure/attachment/12461149/AMQ1925Test.java","02/Sep/08 17:39;msiegenthaler;heapdump-1220373534484.hprof;https://issues.apache.org/jira/secure/attachment/12461130/heapdump-1220373534484.hprof","10/Sep/08 17:14;msiegenthaler;patch-1925-1.diff;https://issues.apache.org/jira/secure/attachment/12461246/patch-1925-1.diff","02/Sep/08 17:38;msiegenthaler;threaddump-1220371256910.tdump;https://issues.apache.org/jira/secure/attachment/12461245/threaddump-1220371256910.tdump",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2008-09-10 18:05:00.288,,,false,,,,,,,,,,,,,,,,,75169,,,Fri Sep 12 11:06:00 UTC 2008,,,,,,,,"0|i0s1mf:",161739,Unit Test Broken,,,,,,,,,,,,,,,,,,"02/Sep/08 17:38;msiegenthaler;Consumer memory dump","02/Sep/08 17:39;msiegenthaler;Consumer thread-dump","02/Sep/08 18:40;msiegenthaler;Well the ""just don't allow this value to become smaller than zero""-approach does not work. Now I've got consumers whose PrefetchSubscription isn't full but who don't get more than X messages anyway. However the change seems to increase X a notch...","10/Sep/08 09:32;msiegenthaler;I've looked into it again. My first guess wasn't completly off spot, although the client clear it's buffers (Session#clearMessagesInProgress) it still has a message in progress namely the one of the current transaction. So when this message gets ack'd during the recover (the transaction is commited there) the PrefetchSubscription#acknowlegde gets confused.
It's inAckRange algorithm runs wild because ack.getFirstMessageId==null and the lastMessageId isn't in the dispatch-list (with the ""old""-master it'd have been the first entry). So what it does is run to the complete dispatch list and ack's everything. This is a very bad move because it in fact deletes every message in the dispatch list permanently (around 100 messages; also from the DB)!!
It even shows the message ""Could not correlate acknowledgment with dispatched message"", but only at debug level.

Of course the dispatching gets completey out of sync afterwards, since all the messages in the broker's dispatched-list are now gone... so every single ack afterward clears (aka deletes from the database) the whole dispatched-list (mostly around 100 messages). After some ack's

Note that I only see this happening with transactional consumers, only then I get a transaction-ack-replay that then goes wrong. Also note that it does not happen in the current trunk or the 5.1 release because they fail on AMQ-1710 (""transaction X has not been started"")
","10/Sep/08 14:27;msiegenthaler;TestCase showing the problem with lost messages.
The test testAMQ1925_TXInProgress should fail, the other two run fine.

Note: The test does not always fail, only when it gets interrupted during session.commit. This is the slowest call, so it mostly happens, but there's no guarantee.","10/Sep/08 17:14;msiegenthaler;part-patch for the issue.
Acks are now checked to match the dispatch list, if not an exception is thrown (but unfortunatly only logged, cannot get the clients commit to fail).

Consequences:
- messages get no longer delete arbitary (very good)
- can cause some dup-delivery (since it cannot let commit fail)
- some messages may become ""hidden"" for the consumers that did failover. New consumers can see the messages.

The patch also contains an updated version of the test-case","10/Sep/08 18:05;rajdavies;Patch applied in SVN revision 693915.","11/Sep/08 11:41;gtully;I think the change to isFull() to add in isSlave() in PrefetchSubscription[1] is problematic.

In pure master slave, it means that the dispatch list does not get populated in the slave and hence the acks result in errors. 
To see the problem, check out the log4j logging in activemq-core/target/test.log that results from:
   mvn test -Dtest=MasterSlaveTempQueueMemoryTest

For the slave is is fine to let dispatch happen to fill the dispatchList, the actual doDispatch call is gated on isSlave() so the does not actually go to a consumer but is available to the ack. 

What as the reason for the change, is it that the stats or counters are off?

[1] http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java?rev=693915&r1=693914&r2=693915&view=diff","11/Sep/08 15:30;msiegenthaler;My patch didn't contain the line in question and does not depend on it (in fact I did all the tests with it the line as commited in 692539).
So I suspect it's just a merge problem.","11/Sep/08 15:53;gtully;ok, did not notice that it was not in your patch, will follow up with rob and revert the change. thanks for the heads up.","12/Sep/08 11:06;gtully;reverted change to PrefetchSubscription.isFull and updated a test case to catch this in the future. this is full was not part of the original patch, 

r694679.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lock table was not getting dropped when the JDBC store cleared out the messages.,AMQ-1953,12482692,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,25/Sep/08 02:46,08/Oct/08 08:49,30/Jan/20 16:55,25/Sep/08 02:47,5.2.0,,,,,,,5.2.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75160,,,Thu Sep 25 02:47:11 UTC 2008,,,,,,,,"0|i0s0kf:",161568,,,,,,,,,,,,,,,,,,,"25/Sep/08 02:47;chirino;resolved in 698800",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.transport.stomp.StompSubscriptionRemoveTest.testRemoveSubscriber() fails on trunk,AMQ-1962,12482289,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Oct/08 10:00,08/Oct/08 08:49,30/Jan/20 16:55,03/Oct/08 07:31,5.2.0,,,,,,,5.2.0,,,Test Cases,,,,0,"strange behavior with queue cursor, seems to run out of messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75152,,,Fri Oct 03 07:31:15 UTC 2008,,,,,,,,"0|i14bkf:",233337,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"02/Oct/08 12:45;gtully;fix causes exception on shutdown, size cannot be obtained during closure: demonstrated by org.apache.activemq.broker.RecoveryBrokerTest.testConsumedQueuePersistentMessagesLostOnRestart()","03/Oct/08 07:31;gtully;shutdown issue resolved in r701118",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"NPE during broker shutdown when useDatabaseLock=""false""",AMQ-1956,12482357,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,cpettitt,cpettitt,26/Sep/08 17:37,08/Oct/08 08:49,30/Jan/20 16:55,02/Oct/08 11:50,5.1.0,,,,,,,5.2.0,,,Message Store,,,,0,"Steps:

1. Create a broker with the persistence adapter set to not use database locking (useDatabaseLock=""false"")
2. Start broker
3. Stop broker (but keep the process running, as in a servlet container)

Result:

In the logs, I see the following error every 30 seconds:

2008/09/25 15:23:55.506 INFO [org.apache.activemq.store.jdbc.JDBCPersistenceAdapter] No longer able to keep the exclusive lock so giving up being a master
2008/09/25 15:23:55.506 WARN [org.apache.activemq.store.jdbc.JDBCPersistenceAdapter] Failed to stop broker
2008/09/25 15:24:25.504 ERROR [org.apache.activemq.store.jdbc.DefaultDatabaseLocker] Failed to update database lock: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.keepAlive(DefaultDatabaseLocker.java:102)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:458)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:260)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:417)
        at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:280)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:135)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:65)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:142)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:166)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:613)


Analysis:

During startup, JDBCPersistenceAdapter only initializes the database locker if useDatabaseLock if true. This is done through lazy initialization by calling getDatabaseLocker (at ~ line 172):

        if (isUseDatabaseLock()) {
            DatabaseLocker service = getDatabaseLocker();
            if (service == null) {
                LOG.warn(""No databaseLocker configured for the JDBC Persistence Adapter"");
            } else {
                service.start();
            }
        }

During shutdown, JDBCPersistenceAdapter calls getDatabaseLocker() to shut it down, but it does not check if isUseDatabaseLock() is true in this case:

    public synchronized void stop() throws Exception {
        if (clockTicket != null) {
            clockTicket.cancel(true);
            clockTicket = null;
        }
        if (clockDaemon != null) {
            clockDaemon.shutdown();
            clockDaemon = null;
        }
        DatabaseLocker service = getDatabaseLocker();
        if (service != null) {
            service.stop();
        }
    }

This actually causes database locker to be initialized and it subsequently lazy-initializes an executor to run a task which calls keepAlive(...). The executor threads are set as daemon threads which prevents this issue from showing up when the lifetime of the process is the same as the broker. When the broker is deployed in an app server which can outlive the broker then the above error is logged every 30 seconds.

I'm attaching one way to solve this problem without having to check everywhere if useDatabaseLock=""false"".

Attached:

BrokerStopFailure.java - sample program that reproduces this bug
NoLockerJDBCPersistenceAdapter.java - sample extension to JDBCPersistenceAdapter that fixes this bug",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Sep/08 17:37;cpettitt;ASF.LICENSE.NOT.GRANTED--BrokerStopFailure.java;https://issues.apache.org/jira/secure/attachment/12461220/ASF.LICENSE.NOT.GRANTED--BrokerStopFailure.java","26/Sep/08 17:37;cpettitt;ASF.LICENSE.NOT.GRANTED--NoLockerJDBCPersistenceAdapter.java;https://issues.apache.org/jira/secure/attachment/12461111/ASF.LICENSE.NOT.GRANTED--NoLockerJDBCPersistenceAdapter.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-10-02 11:50:04.533,,,false,,,,,,,,,,,,,,,,,75157,,,Thu Oct 02 11:50:04 UTC 2008,,,,,,,,"0|i14blj:",233342,,,,,,,,,,,,,,,,,,,"02/Oct/08 11:50;gtully;Committed revision 701088.

thanks for the analysis Chris. Since the users of getDatabaseLocker already check for null i simply return null if a lock is not to be used.
note for future reference: ensure you check the ""grant ASF License"" check box when you submit a patch or enhancement, otherwise your contribution cannot be used. thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
hasSpace call looks like it may cause messages to be skipped (AMQ-1080 has not been applied for queues),AMQ-1943,12482670,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,bastiaan,bastiaan,18/Sep/08 09:29,08/Oct/08 08:49,30/Jan/20 16:55,22/Sep/08 19:17,5.1.0,5.2.0,,,,,,5.2.0,,,Message Store,,,,0,"SVN revision 560783 modifies only 1 of the 2 DefaultJDBCAdapater.doRecoverNextMessages() methods to break from the loop if the listener.recoverMessage() returns false. The doRecoverNextMessages for queues just logs it at debug level.
Shouldn't that method break from the loop too? I'm seeing the same problems described in AMQ-1080 with the queues on our test and production servers: 
1) lots of ' Stopped recover next messages' messages and CPU usage going way up
2) messages being skipped

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-22 19:17:51.115,,,false,,,,,,,,,,,,,,,,,75165,,,Mon Sep 22 19:17:51 UTC 2008,,,,,,,,"0|i14bn3:",233349,,,,,,,,,,,,,,,,,,,"22/Sep/08 19:17;rajdavies;Fixed by SVN revision 697953",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
pom parent version miss match,AMQ-1865,12482691,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,janstey,qrtt1,qrtt1,22/Jul/08 02:57,08/Oct/08 08:49,30/Jan/20 16:55,22/Sep/08 19:51,5.2.0,,,,,,,5.2.0,,,Performance Test,,,,0,"i check the svn revision 678620 to do camel loading test, but pom.xml is missmatch with parent's.

the pom.xml  in activemq-camel-loadtest

  <parent>
    <groupId>org.apache.activemq</groupId>
    <artifactId>activemq-parent</artifactId>
    <version>5.1-SNAPSHOT</version>
  </parent>

the pom.xml in activemq

  <groupId>org.apache.activemq</groupId>
  <artifactId>activemq-parent</artifactId>
  <version>5.2-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>ActiveMQ</name>

I try to modify the version 5.1 to 5.2 OR 5.2 to 5.1 but all the things cannot run.","winxp, jdk1.6, maven2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-22 19:51:20.031,,,false,,,,,,,,,,,,,,,,,88132,,,Mon Sep 22 19:51:20 UTC 2008,,,,,,,,"0|i1827j:",255160,,,,,,,,,,,,,,,,,,,"22/Sep/08 19:51;janstey;Fixed in revision 697964.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creating two consumers one after the other causes problems dequeuing messages,AMQ-1961,12482230,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,piepera,piepera,01/Oct/08 14:46,01/Oct/08 15:49,30/Jan/20 16:55,01/Oct/08 14:54,5.1.0,,,,,,,,,,,,,,0,"I create a vm queue with ten messages. I then create a consumer, dequeue the top message (message #1), and close that consumer. If I then create a second consumer, and try to dequeue the top message (message #2), there is a small chance that this will unexpectedly fail, and the request will time out. This is one problem.

After this happens, examining the queue with a queue browser shows message #2 still on the queue. However, subsequent attempts to dequeue this message will always time out. Messages #3-10 will be in the same state; they will still be in the queue, but they cannot be dequeued. This is a worse problem, as it means that we can not reuse this queue.

The problem arises more frequently as there are more consumers. With two or three consumers, it comes up sporadically. With twenty or more consumers, it happens almost 100% of the time. I've attached a test case which demonstrates the bug consistenty.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Oct/08 14:46;piepera;ASF.LICENSE.NOT.GRANTED--EnqueueDequeueBug.java;https://issues.apache.org/jira/secure/attachment/12461239/ASF.LICENSE.NOT.GRANTED--EnqueueDequeueBug.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-10-01 14:54:58.726,,,false,,,,,,,,,,,,,,,,,75153,,,Wed Oct 01 15:49:39 UTC 2008,,,,,,,,"0|i1829j:",255169,,,,,,,,,,,,,,,,,,,"01/Oct/08 14:54;jstrachan;I don't think this is a bug, just a misunderstanding or misconfiguration of the prefetch size...

http://activemq.apache.org/what-is-the-prefetch-limit-for.html

setting a prefetch size of 1 or zero should fix your issue - or waiting long enough for messages to be redispatched to the closed consumer.","01/Oct/08 15:49;piepera;Thanks for your reply. Disabling prefetch for queues fixes the problem. Waiting a few seconds before closing each consumer works also.

So this works as designed then? If you close one consumer, open a second consumer and retrieve a message, the expected behavior is that the message should occasionally be permanently ""locked"" by the closed consumer?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.broker.ft.TransactedTopicMasterSlaveTest.testSendReceiveTransactedBatchesWithMasterStop() hangs on tearDown,AMQ-1959,12482225,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Oct/08 11:56,01/Oct/08 12:05,30/Jan/20 16:55,01/Oct/08 12:03,5.2.0,,,,,,,5.3.0,,,Test Cases,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75154,,,Wed Oct 01 12:03:38 UTC 2008,,,,,,,,"0|i0tszz:",172007,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"01/Oct/08 12:03;gtully;Committed revision 700746
pendingAck, used to accumulate acks was not being cleared on transaction commit message ack, so a pending ack was being attempting to be send on shutdown over a failover connection that would hang waiting for a reconnect that would never happen as test was on the way out. In essence, messages already acked were being acked at dispose in error, which resulted in the hang.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web-Console viewing a message increments the messages received counter,AMQ-1900,12482590,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,khussein,khussein,19/Aug/08 21:57,09/Sep/08 10:51,30/Jan/20 16:55,04/Sep/08 17:53,5.1.0,,,,,,,5.2.0,,,JMS client,,,,0,"Here is how to reproduce the bug:
1) Browse to a queue
2) Click on any message to view the message
3) Then go back to the Queues statistics page
You'll see that the number of received messages increased by 1 although there aren't any actual received messages",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/08 17:30;khussein;AMQ-1900;https://issues.apache.org/jira/secure/attachment/12461129/AMQ-1900",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-04 17:53:03.142,,,false,,,,,,,,,,,,,,,,,75181,,,Thu Sep 04 17:53:03 UTC 2008,,,,,,,,"0|i14bin:",233329,,,,,,,,,,,,,,,,,,,"20/Aug/08 12:48;khussein;It seems like you don't have to do step 2. Steps 1 and 3, will reproduce the bug. ","04/Sep/08 17:30;khussein;Attached is a patch that fixes this JIRA","04/Sep/08 17:53;rajdavies;Patch applied in SVN revision 692174 and 693431",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problems with pure master/slave configuration,AMQ-1585,12482653,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tbuckel,tbuckel,17/Feb/08 23:25,08/Sep/08 17:06,30/Jan/20 16:55,08/Sep/08 17:06,4.1.1,5.0.0,5.1.0,,,,,5.2.0,,,Broker,,,,4,"As posted in the AMQ user forum:
http://www.nabble.com/Problems-with-Pure-Master-Slave-in-AMQ-5.0.0-to15471491s2354.html#a15474769
-------------------
Hi all,

I am having trouble setting up a *stable* ActiveMQ Pure Master/Slave topology.

Initially I have tried v4.1.1 which failed with an exception. I found an AMQ JIRA ticket which said that Pure/Master slave didn't work in v4.1.1.
Ok, so I switched to AMQ 5.0.0, created 2 configs (master/slave, see end of message) and ran two AMQ instances (on the same box) and most of the times my test (see below) worked, but more often I get various error messages like:

- On the slave:

ERROR Service                        - Async error occurred: javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:tbuckel-desktop-41814-1202886136210-0:0:565:1:1) was not in the pending list
javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:tbuckel-desktop-41814-1202886136210-0:0:565:1:1) was not in the pending list
        at org.apache.activemq.broker.region.PrefetchSubscription.processMessageDispatchNotification(PrefetchSubscription.java:160)
        at org.apache.activemq.broker.region.AbstractRegion.processDispatchNotification(AbstractRegion.java:381)
        at org.apache.activemq.broker.region.RegionBroker.processDispatchNotification(RegionBroker.java:550)
        at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:201)
        at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:201)
        at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:201)
        at org.apache.activemq.broker.MutableBrokerFilter.processDispatchNotification(MutableBrokerFilter.java:211)
        at org.apache.activemq.broker.TransportConnection.processMessageDispatchNotification(TransportConnection.java:450)
        at org.apache.activemq.command.MessageDispatchNotification.visit(MessageDispatchNotification.java:77)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:202)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)


- After having killed the master, stopped the slave, copied the slave's data into the master's data directory various error message came up (as described in the Master/Slave recovery section), e.g. (internal) ActiveMQ topics were not available, the admin webApp showed exceptions and errors on the client.

The test I've created uses Spring 2.0.x and pumps 1000 MapMessages in a queue through Spring's JmsTempate, each message is created within its own transaction, using JmsTransactionManager and TransactionTemplate.
The created messages are consumed by an initially instantiated transactional DefaultMessageListenerContainer. The AMQ JARs in the test's classpath are activemq-core-5.0.0.jar, geronimo-jms_1.1_spec-1.0.jar, geronimo-jta_1.0.1B_spec-1.0.jar as I've noticed a really bad performance when only using the activemq-all-5.0.0.jar (maybe this is the problem?).
The test code work's without problems with OpenMQ, but I'd prefer using the nice Pure Master/Active ActiveMQ if I can get it running in a *stable* config ;)

I would highly appreciate any help or suggestions. Maybe my config is wrong or I miss something essential. I've also tried a recent AMQ 5.1 SNAPSHOT which wasn't better...

See below for the small program i used to test (no unit test, behaviour appeared to be non deterministic to me and it's not so nice as i've changed it quite often)

Thanks in advance,
Thomas

<!-- MASTER config -->
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.org/config/1.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.org/config/1.0 http://activemq.apache.org/schema/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
  <broker xmlns=""http://activemq.org/config/1.0"" brokerName=""master"" dataDirectory=""${activemq.base}/data"">
    <destinationPolicy>
      <policyMap>
        <policyEntries>
          <policyEntry topic=""FOO.>"" producerFlowControl=""false"" memoryLimit=""1mb"">
            <dispatchPolicy>
              <strictOrderDispatchPolicy/>
            </dispatchPolicy>
            <subscriptionRecoveryPolicy>
              <lastImageSubscriptionRecoveryPolicy/>
            </subscriptionRecoveryPolicy>
          </policyEntry>
        </policyEntries>
      </policyMap> 
    </destinationPolicy>

    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://tbuckel-desktop:7778"" />
    </transportConnectors>

    <networkConnectors/>

    <managementContext>
       <managementContext connectorPort=""1100"" jmxDomainName=""org.apache.activemq""/>
    </managementContext>

  </broker>

  <commandAgent xmlns=""http://activemq.org/config/1.0""/>

  <jetty xmlns=""http://mortbay.com/schemas/jetty/1.0"">
    <connectors>
      <nioConnector port=""8161"" />
    </connectors>

    <handlers>
      <webAppContext contextPath=""/admin"" resourceBase=""${activemq.base}/webapps/admin"" logUrlOnStart=""true"" />
    </handlers>
  </jetty>
</beans>


<!-- SLAVE config -->
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.org/config/1.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.org/config/1.0 http://activemq.apache.org/schema/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
  
  <broker xmlns=""http://activemq.org/config/1.0"" brokerName=""slave"" dataDirectory=""${activemq.base}/data-slave""
          masterConnectorURI=""tcp://tbuckel-desktop:7778"">
  
    <destinationPolicy>
      <policyMap>
        <policyEntries>
          <policyEntry topic=""FOO.>"" producerFlowControl=""false"" memoryLimit=""1mb"">
            <dispatchPolicy>
              <strictOrderDispatchPolicy/>
            </dispatchPolicy>
            <subscriptionRecoveryPolicy>
              <lastImageSubscriptionRecoveryPolicy/>
            </subscriptionRecoveryPolicy>
          </policyEntry>
        </policyEntries>
      </policyMap>
    </destinationPolicy>

    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://localhost:7779""/>
    </transportConnectors>

    <networkConnectors/>

    <managementContext>
       <managementContext connectorPort=""1101"" jmxDomainName=""org.apache.activemq""/>
    </managementContext>

  </broker>

  <commandAgent xmlns=""http://activemq.org/config/1.0""/>

  <jetty xmlns=""http://mortbay.com/schemas/jetty/1.0"">
    <connectors>
      <nioConnector port=""8162"" />
    </connectors>

    <handlers>
      <webAppContext contextPath=""/admin"" resourceBase=""${activemq.base}/webapps/admin"" logUrlOnStart=""true"" />
    </handlers>
  </jetty>

</beans>

------------
Test code:

import org.apache.activemq.ActiveMQConnectionFactory;
import org.springframework.jms.connection.JmsTransactionManager;
import org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy;
import org.springframework.jms.core.JmsTemplate;
import org.springframework.jms.core.MessageCreator;
import org.springframework.jms.listener.DefaultMessageListenerContainer;
import org.springframework.transaction.TransactionStatus;
import org.springframework.transaction.support.TransactionCallbackWithoutResult;
import org.springframework.transaction.support.TransactionTemplate;
import javax.jms.*;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;

public class AnotherFailoverTest {

    public static final int MESSAGES = 1000;

    private final static List<BigInteger> notConsumedMessages = new ArrayList<BigInteger>(MESSAGES);

    private static ConnectionFactory createCF() throws Exception {
        ActiveMQConnectionFactory cf = new ActiveMQConnectionFactory();
        cf.setBrokerURL(""failover://(tcp://localhost:7778,tcp://localhost:7779)?randomize=false"");
        return new TransactionAwareConnectionFactoryProxy(cf);
    }

    private static void send() throws Exception {
        JmsTransactionManager transactionManager = new JmsTransactionManager();
        transactionManager.setConnectionFactory(createCF());
        transactionManager.afterPropertiesSet();

        int i=0;
        do {
            i++;
            final int number = i;
            try {
                final BigInteger v = new BigInteger(Integer.toString(number));
                TransactionTemplate tt = new TransactionTemplate(transactionManager);
                tt.execute(new TransactionCallbackWithoutResult() {
                    protected void doInTransactionWithoutResult(TransactionStatus status) {
                        final JmsTemplate template = new JmsTemplate(pcf);
                        template.setSessionTransacted(true);
                        template.afterPropertiesSet();
                        template.send(""testqueue"", new MessageCreator() {
                            public Message createMessage(Session session) throws JMSException {
                                ObjectMessage dummyMessage = session.createObjectMessage();
                                dummyMessage.setObject(v);
                                synchronized (notConsumedMessages) {
                                    notConsumedMessages.add(v);
                                }
//                                System.out.println(""Created message "" + number + ""("" + notConsumedMessages.size() + "")"");
                                return dummyMessage;
                            }
                        });
                    }
                });
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println(""Error creating message "" + number);
            }
        } while (i < MESSAGES);
    }

    private static void setupReceiver() throws Exception {
        JmsTransactionManager transactionManager = new JmsTransactionManager();
        transactionManager.setConnectionFactory(createCF());
        transactionManager.afterPropertiesSet();

        final DefaultMessageListenerContainer container = new DefaultMessageListenerContainer();
        container.setConnectionFactory(pcf);
        container.setTransactionManager(transactionManager);
        container.setMessageListener(new MessageListener() {
            public void onMessage(Message message) {
                try {
                    ObjectMessage msg = (ObjectMessage) message;
                    BigInteger number = (BigInteger) msg.getObject();
                    synchronized (notConsumedMessages) {
                        if (!notConsumedMessages.remove(number)) {
                           System.err.println(""Message "" + number + "" not found in list!"");
                        } else {
   //                        System.out.println(""Consumed message "" + number);
                       }
                   }
                } catch (JMSException e) {
//                    e.printStackTrace();
                    System.out.println(""Error consuming message!"");
                }
            }
        });
        container.setSessionTransacted(true);
        container.setDestinationName(""testqueue"");
        container.setExceptionListener(new ExceptionListener() {
            public void onException(JMSException jmsException) {
                System.err.println(jmsException);
            }
        });
        container.afterPropertiesSet();
        container.initialize();
        TimeUnit.SECONDS.sleep(1);
    }

    public static void main(String[] args) throws Exception {
        long start = System.currentTimeMillis();
        setupReceiver();
        send();

        int remainingSize = 0;
        do {
            Thread.sleep(500);
            synchronized (notConsumedMessages) {
                remainingSize = notConsumedMessages.size();
            }
            System.out.println(""Unconsumed "" + remainingSize + "": "" + sb);
        } while (remainingSize > 0);

        System.out.println(""All messages consumed."");
        long end = System.currentTimeMillis();
        System.out.println((end-start));
        System.exit(0);
    }

}

","Ubuntu 6.04, JDK 1.5.0_011, Spring 2.0.x",alexiskinsella,mkelley63,nmervaillie,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jul/08 15:45;gtully;AMQ-1585.patch;https://issues.apache.org/jira/secure/attachment/12461169/AMQ-1585.patch","02/Jul/08 16:14;gtully;AMQ-1585.transacted.patch;https://issues.apache.org/jira/secure/attachment/12461180/AMQ-1585.transacted.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-03-21 15:52:45.986,,,false,,,,,,,,,,,,,,,,,84520,,,Mon Sep 08 17:06:02 UTC 2008,,,,Patch Available,,,,"0|i0jxfb:",114345,,,,,,,,,,,,,,,,,,,"21/Mar/08 15:52;mkelley63;I'm seeing the same thing -- running 5.0.0 -- using the example consumer/producer ant tasks and configuration described above. This would be a blocker if we were in production.","09/Apr/08 18:31;bkorsunsky;Also seeing same issue running 5.0.0 pure master/slave config:

javax.jms.JMSException: Slave broker out of sync with master: Acknowledgment (MessageAck {commandId = 198, responseRequired = true, ackType = 2, consumerId = ID:BorisJr-1198-1207765232687-0:0:1:1, firstMessageId = null, lastMessageId = ID:Boris-3004-1207702245296-0:0:20:1:1, destination = queue://queue, transactionId = null, messageCount = 1}) was not in the dispatch list: []
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:332)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:340)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:427)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:440)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:202)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
","23/Apr/08 17:18;mkelley63;Still a problem in 5.1.0 RC3.","20/May/08 19:09;ammulder;Still seeing this in 5.1.0 final.

I hear that ""pure"" master/slave is not the way to go and SAN-based master/slave would be better.  :)","01/Jul/08 12:20;gtully;I find that the org.apache.activemq.broker.ft.QueueMasterSlaveTest can reproduce this problem if the number of messages produced in increased to 200, greater than the default maxPageSize, 100, for a destination.

It appears that there are a few problems.
1) the decrementing inflight statistics cause messages in the slave to be lost once the maxpageSize for a destination is reached. This is fixed by not decrementing in error when queue is on the slave.
2) the dispatch notification can be late getting to the slave, so similar to send processing, the notification is sent in advance.
3) even with early sending, a send can be later than a dispatchNotification so sending sync fixes that.

","01/Jul/08 12:25;gtully;it may be worth giving the attached patch a whirl if the issue is still pressing.","01/Jul/08 13:51;yinghe0101;still seeing the issue using latest trunk with the patch attached. ","01/Jul/08 14:06;gtully;ying, thanks for trying this out. Do you think it would be possible to reproduce your scenarion with a variation of org.apache.activemq.broker.ft.QueueMasterSlaveTest ?
If not, what is the simplest formula for reproducing your behaviour, is it the code included with the original jira?","01/Jul/08 14:51;gtully;I have been able to reproduce again by pushing more messages through org.apache.activemq.broker.ft.QueueMasterSlaveTest, have some more work to do!","01/Jul/08 15:05;yinghe0101;hi, Gary, I test on both win xp and solaris 9 jdk 1.5

To reproduce this issue, i have 1 client producer, I have 3 clients each with its own connection as a consumer
1. use original activemq.xml for master
2. add masterConnectorURI=""tcp://localhost:61616"" shutdownOnMasterFailure=""false"" in activemq.xml for slave
3. start master, start slave, start 3 consumers
4. start the producer to send one message, stop the producer ( the delivery is good)
5. start the producer again to send a second message, i will get the exception ( because of this exception, message will get redelivered according to the delivery policy)

the jndi.properties of the client looks like the following:
java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory
java.naming.provider.url=failover://(tcp://localhost:61616,tcp://localhost:62616)?randomize=false
connection.ConnectionFactory.redeliveryPolicy.initialRedeliveryDelay=300000
connection.ConnectionFactory.redeliveryPolicy.maximumRedeliveries=3

I have another issue for the pure master/slave, not sure whether it is related to this. It has the same setup as the above tests. the formula is:
1. use original activemq.xml for master
2. add masterConnectorURI=""tcp://localhost:61616"" shutdownOnMasterFailure=""false"" in activemq.xml for slave
3. start master, start slave, start 3 consumers
4. start the producer to send one message, stop the producer ( the delivery is good)
5. stop the master, stop the slave, do NOT stop 3 consumers,  restart the master, restart the slave
6. start the producer to send one message, i will get the following exception:
ERROR Service                        - Async error occurred: java.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:yhe-1633-1214919996630-0:0
java.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:yhe-1633-1214919996630-0:0
	at org.apache.activemq.broker.MapTransportConnectionStateRegister.lookupConnectionState(MapTransportConnectionStateRegister.java:93)
	at org.apache.activemq.broker.TransportConnection.lookupConnectionState(TransportConnection.java:1356)
	at org.apache.activemq.broker.TransportConnection.processBeginTransaction(TransportConnection.java:362)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:94)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
DEBUG Service                        - Error occured while processing sync command: java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:yhe-1633-1214919996630-0:0
java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:yhe-1633-1214919996630-0:0
	at org.apache.activemq.broker.MapTransportConnectionStateRegister.lookupConnectionState(MapTransportConnectionStateRegister.java:63)
	at org.apache.activemq.broker.TransportConnection.lookupConnectionState(TransportConnection.java:1344)
	at org.apache.activemq.broker.TransportConnection.getConsumerBrokerExchange(TransportConnection.java:1261)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:458)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
DEBUG Service                        - Error occured while processing sync command: java.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:yhe-1633-1214919996630-0:0
java.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:yhe-1633-1214919996630-0:0
	at org.apache.activemq.broker.MapTransportConnectionStateRegister.lookupConnectionState(MapTransportConnectionStateRegister.java:93)
	at org.apache.activemq.broker.TransportConnection.lookupConnectionState(TransportConnection.java:1356)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:413)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

I think the issue might be when the master is restarted and the consumer establish connections with it before the slave is started so the slave is not aware of those consumers/sessions/connection

Please let me know whether i shall create another jira for the this IllegalStateException for pure master/slave

BTW, is there any documentation of the component relationship for the activemq core, such as what the responsibility of BrokerService, Region, Broker, TransportConnection etc. I am looking into the source now to see what I can find.

Thank you for your quick response.

","01/Jul/08 15:45;gtully;update to fix additional issue.
make slave use optimizedDispatch so that a send operation completes sync, since there is no real dispatch the call will return quickly.
This ensures that sends are complete before the dispatch notification is received.","01/Jul/08 16:35;gtully;ying,
Is your producer using a transacted session? If so, I think we need to build a specific test case around QueueMasterSlaveTest to reproduce.

I have modified the patch to address another synchronisation issue with slave mode, hopefully this will help.

I think you should raise another jira for the IllegalStateException.
Re documentation, the code is your best and only reference I think.","01/Jul/08 18:00;rajdavies;patch applied in SVN revision 673157","02/Jul/08 16:14;gtully;with a transacted producer there is a failure, txid does not exist.
modifying the TransactedTopicMasterSlaveTest to stop the master reproduces the problem. The fix is to have the failover transport state tracker rember the transaction begin command so that the begin can be correctly replayed.","02/Jul/08 16:23;rajdavies;Applied patch for txn part in SVN revision 673433","10/Jul/08 16:10;yinghe0101;AMQ-1585.patch is not completely merged into the trunk. It is missing the following:
for MasterBroker.java
-        sendToSlave(message);
+        sendSyncToSlave(message);

Without this change, I am still getting the exception in the latest trunk activemq-core 675484.","10/Jul/08 16:11;yinghe0101;patch is not completely merged into trunk. it is missing a change without which the exception still happens.","11/Jul/08 15:15;gtully;ying, good catch!. yea, I think that sendSync is necessary. thanks.","11/Jul/08 15:33;rajdavies;completed patch in SVN revision 675990","29/Aug/08 14:04;hansb;I just checked out version 690257 and it happens again:

==== the master ====

INFO  TransportConnection            - Slave Broker solowslave is attached
WARN  BrokerRegistry                 - Broker localhost not started so using seltenmaster instead
INFO  TransportConnector             - Connector vm://localhost Started
ERROR MasterBroker                   - Slave Failed
javax.jms.JMSException: Slave broker out of sync with master: Acknowledgment (MessageAck {commandId = 33, responseRequired = true, ackType = 2, consumerId = ID:hans-34771-1220018526479-0:1:1:1, firstMessageId = null, lastMessageId = ID:hans-34771-1220018526479-0:0:1:1:1, destination = queue://queue.B, transactionId = null, messageCount = 1}) was not in the dispatch list: []
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:387)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)


====== the slave ===
ERROR Service                        - Async error occurred: javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:selten.marketxs.com-55318-1220018484119-2:1:1:1:1) was not in the pending list
javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:selten.marketxs.com-55318-1220018484119-2:1:1:1:1) was not in the pending list
        at org.apache.activemq.broker.region.PrefetchSubscription.processMessageDispatchNotification(PrefetchSubscription.java:172)
        at org.apache.activemq.broker.region.AbstractRegion.processDispatchNotification(AbstractRegion.java:414)
        at org.apache.activemq.broker.region.RegionBroker.processDispatchNotification(RegionBroker.java:585)


A previous 5.2.0-SNAPSHOT worked fine.
","29/Aug/08 14:08;hansb;""worked fine"" except for https://issues.apache.org/activemq/browse/AMQ-1849


I've used the same JMS test client (stand-alone)","29/Aug/08 14:51;hansb;Checked out and compiled revision 675990 again.

Still worked fine (as far as this issue is concerned) with the same configuration files as the failing 690257.
","08/Sep/08 17:06;gtully;fix related to resolution of https://issues.apache.org/activemq/browse/AMQ-1849",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages stuck in a queue don't get dispatch (happens when consumers close out),AMQ-1738,12482137,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,20/May/08 18:15,08/Sep/08 17:00,30/Jan/20 16:55,08/Sep/08 17:00,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"We have a small timing windows when we closed out the consumer were we take messages it had 'locked' (so that other consumer don't get the same message) and unlock them so that they are available for dispatch. During that window after we unlock those messages, we might still be concurrently sending messages to that subscription. The messages that get sent to the sub after we unlock are the messages that get stuck.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-05-21 13:47:14.634,,,false,,,,,,,,,,,,,,,,,84785,,,Mon Sep 08 17:00:12 UTC 2008,,,,,,,,"0|i0s1in:",161722,,,,,,,,,,,,,,,,,,,"20/May/08 19:43;chirino;fixed in rev 658370","21/May/08 13:47;gtully;Hiram,
Just a thought, this looks similar to AMQ-1714 where I though the dispatchLock held the key to subscriptions. I guess the fix for AMQ-1714 may have made the  window smaller but it is still there :-(

If you get a moment, would you cast your eye over the fix for AMQ-1714 in this context, there may be a more complete locking strategy that will close the window such that AMQ-1738 does not occur. That is, it may be possible to negate the check in add() that you just added if the dispatch locking logic is improved a bit.
","27/Jun/08 16:28;jasonrtheune;We are still experiencing this issue.
Our customer reports that this issue still occurs.
======================================
The problem is the locking of Messages in the queue. 
The class ""IndirectMessagereference"" uses the methods ""lock()"" and ""unlock()"". 
While adding Messages to the queue, messages are locked and unlocked continiously. 
When a consumer is removed, the messages locked by the consumer are unlocked. 

At this point, the race condition appears to prevent locked messges from ever being unlocked again. 
Locked Messages cannot be retrieved from the queue by any other consumer, so they stay there forever.


","27/Jun/08 20:47;jasonrtheune;We are willing to compensate anyon ewho could help us resolve this issue.

Please contact me directly at jason.theune@openlogic.com to inquire how...!

This is a great opportunity to earn CA$H for your open source contribution.","08/Sep/08 17:00;gtully;this is fully nailed in 5.2, dispatch is now very tight.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing dependency on trunk ?,AMQ-1785,12482553,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,komandur,komandur,09/Jun/08 17:21,08/Sep/08 16:57,30/Jan/20 16:55,08/Sep/08 16:57,5.1.0,,,,,,,5.2.0,,,,,,,0,"(creating a new ticket, as the original one had incorrect fix version (4.1.3) and may not be looked at while scanning 5.2 issues)

From: Sridhar2008
Sent: Monday, June 02, 2008 12:53 PM
To: dev@activemq.apache.org
Subject: missing dependency on trunk ?

Hi,

I tried to build from truck, but it fails the following directory is empty
...
http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-swing/1.4-SNAPSHOT/

Am I missing anything here ?
Thanks

    * Sridhar

Downloading:
http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-swing/1.4-SNAPSHOT/camel-swing-1.4-SNAPSHOT.jar
[INFO]
------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO]
------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.apache.camel:camel-swing:jar:1.4-SNAPSHOT",linux,komandur,mlukica,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-08 16:57:45.873,,,false,,,,,,,,,,,,,,,,,84773,,,Mon Sep 08 16:57:45 UTC 2008,,,,,,,,"0|i0s1zr:",161799,,,,,,,,,,,,,,,,,,,"08/Sep/08 16:57;gtully;5.2 uses camel 1.4 released version ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Maven 2.0.9 fails to build activemq 5.2 , artifacts missing related to camel",AMQ-1745,12482333,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,haribaasha,haribaasha,27/May/08 06:34,08/Sep/08 14:19,30/Jan/20 16:55,08/Sep/08 14:19,5.2.0,,,,,,,5.2.0,,,,,,,2,"[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.apache.camel:camel-jms:jar:1.4-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.apache.camel -DartifactId=camel-jms -Dversion=1.4-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.apache.camel -DartifactId=camel-jms -Dversion=1.4-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
        1) org.apache.activemq:activemq-core:bundle:5.2-SNAPSHOT
        2) org.apache.camel:camel-jms:jar:1.4-SNAPSHOT

2) org.apache.camel:camel-spring:test-jar:tests:1.4-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.apache.camel -DartifactId=camel-spring -Dversion=1.4-SNAPSHOT -Dclassifier=tests -Dpackaging=test-jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.apache.camel -DartifactId=camel-spring -Dversion=1.4-SNAPSHOT -Dclassifier=tests -Dpackaging=test-jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
        1) org.apache.activemq:activemq-core:bundle:5.2-SNAPSHOT
        2) org.apache.camel:camel-spring:test-jar:tests:1.4-SNAPSHOT

3) org.apache.camel:camel-swing:jar:1.4-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.apache.camel -DartifactId=camel-swing -Dversion=1.4-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.apache.camel -DartifactId=camel-swing -Dversion=1.4-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
        1) org.apache.activemq:activemq-core:bundle:5.2-SNAPSHOT
        2) org.apache.camel:camel-swing:jar:1.4-SNAPSHOT

----------
3 required artifacts are missing.
","Redhat Linux , jdk 1.5.0_06",akuhtz,mlukica,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/08 08:37;hudalla;amq-1745.patch;https://issues.apache.org/jira/secure/attachment/12461087/amq-1745.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-05-29 13:37:05.417,,,false,,,,,,,,,,,,,,,,,95891,,,Mon Sep 08 14:19:42 UTC 2008,,,,,,,,"0|i0s1nr:",161745,,,,,,,,,,,,,,,,,,,"29/May/08 13:37;rajdavies;looks like currently you have to build and install camel locally to get around this","30/May/08 08:36;hudalla;On my system the Camel 1.4-SNAPSHOTs are correctly downloaded by maven. However, the test classes of the _activemq-core_ module do not compile because some of them contain an import for class _org.apache.camel.impl.CamelTemplate_ which in the current Camel 1.4-SNAPSHOT jars is actually located in the _org.apache.camel_ package.

I have attached a patch for these test classes as well ...
","30/May/08 08:37;hudalla;Adapts the erroneous import statements in the _activemq-core_ test classes for class _org.apache.camel.CamelTemplate_","12/Jun/08 08:50;mlukica;Robs solution requires no patch. Checkout camel trunk, mvn install it, and then mvn install activemq trunk.","12/Jun/08 09:10;jstrachan;I think this could be caused by nightly snapshots being a bit borked. Am just in the process of setting them up on another box just to make sure...","08/Sep/08 14:19;gtully;trunk depends on released camel 1.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JmsConnector does not remove bridges,AMQ-1621,12481049,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,pschwamb,pschwamb,13/Mar/08 21:14,05/Sep/08 05:57,30/Jan/20 16:55,05/Sep/08 05:57,5.0.0,,,,,,,5.2.0,,,,,,,0,"The removeInboundBridge and removeOutboundBridge methods both add instead of remove!  I've attached a patch to fix this.  It also adds a method for clearing the bridges, which I use in my own code.  Hopefully it isn't asking to much to have that method added as well. :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/08 21:14;pschwamb;ASF.LICENSE.NOT.GRANTED--jms_connector_remove_bridge_patch.txt;https://issues.apache.org/jira/secure/attachment/12461025/ASF.LICENSE.NOT.GRANTED--jms_connector_remove_bridge_patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-05 05:57:41.515,,,false,,,,,,,,,,,,,,,,,38746,,,Fri Sep 05 05:57:41 UTC 2008,,,,Patch Available,,,,"0|i14bdr:",233307,,,,,,,,,,,,,,,,,,,"05/Sep/08 05:57;rajdavies;Patch applied in SVN revision 69234",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
memtest report is not well-formatted xml,AMQ-1867,12482530,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,qrtt1,qrtt1,23/Jul/08 01:25,04/Sep/08 19:35,30/Jan/20 16:55,04/Sep/08 19:35,,,,,,,,5.2.0,,,,,,,0,"In the output of the memtest, some attributes are not quoted. ","win xp, jdk6",qrtt1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jul/08 01:25;qrtt1;ASF.LICENSE.NOT.GRANTED--memtest.patch;https://issues.apache.org/jira/secure/attachment/12461096/ASF.LICENSE.NOT.GRANTED--memtest.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-04 19:35:40.081,,,false,,,,,,,,,,,,,,,,,95931,,,Thu Sep 04 19:35:40 UTC 2008,,,,Patch Available,,,,"0|i0s1xz:",161791,,,,,,,,,,,,,,,,,,,"04/Sep/08 19:35;rajdavies;Patch applied in SVN revision 692208",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp - remove durable subscriber,AMQ-1890,12482506,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,dejanb,dejanb,15/Aug/08 14:18,04/Sep/08 18:11,30/Jan/20 16:55,04/Sep/08 18:11,5.1.0,,,,,,,5.2.0,,,Transport,,,,0,UNSUBSCRIBE command for durable subscribers does not work. Patch contains only test case at the moment.,,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/08 13:35;dejanb;stomp-durable.txt;https://issues.apache.org/jira/secure/attachment/12461197/stomp-durable.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-04 18:11:19.875,,,false,,,,,,,,,,,,,,,,,84737,,,Thu Sep 04 18:11:19 UTC 2008,,,,Patch Available,,,,"0|i0s1yn:",161794,,,,,,,,,,,,,,,,,,,"27/Aug/08 13:35;dejanb;Added a code snippet in onStompUnsubscribe() that checks if durable subscription header is set and sends RemoveSubscriptionInfo command to the broker.","04/Sep/08 18:11;rajdavies;Patch applied in SVN revision 692181",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock occurs with a duplex network connection.,AMQ-1819,12482591,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chirino,chirino,20/Jun/08 19:45,04/Sep/08 18:02,30/Jan/20 16:55,04/Sep/08 18:02,,,,,,,,5.2.0,,,,,,,1,"here's the deadlock info:
{code}
Java stack information for the threads listed above:
===================================================
""NetworkBridge: java.util.concurrent.ThreadPoolExecutor$Worker@142a59e"":
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- waiting to lock <0x99f44d70> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$5.run(DemandForwardingBridgeSupport.java:341)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)
""BrokerService"":
	at org.apache.activemq.broker.TransportConnection.lookupConnectionState(TransportConnection.java:1329)
	- waiting to lock <0x99f44ec8> (a org.apache.activemq.broker.TransportConnection)
	at org.apache.activemq.broker.TransportConnection.getConsumerBrokerExchange(TransportConnection.java:1246)
	- locked <0x99f667d8> (a java.util.HashMap)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:443)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:113)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x99f44d70> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:595)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:143)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:113)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x99f44eb0> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1188)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:777)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:814)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)
""ActiveMQ Transport Initiator: vm://localhost#18"":
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- waiting to lock <0x99f44eb0> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1188)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:777)
	at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:860)
	- locked <0x99f44ec8> (a org.apache.activemq.broker.TransportConnection)
	at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:159)
{code}",,antoniogmc,rlp82,snstanton,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-07-31 15:28:29.106,,,false,,,,,,,,,,,,,,,,,95914,,,Thu Jul 31 15:28:29 UTC 2008,,,,,,,,"0|i0s207:",161801,,,,,,,,,,,,,,,,,,,"20/Jun/08 19:49;chirino;made a small change to the TransportConnection.  I'm hoping that by sending the broker info async, we should be able to break this deadlock:

-                   this.processDispatch(connector.getBrokerInfo());
+                   dispatchAsync(connector.getBrokerInfo());


committed in rev 670045","31/Jul/08 15:28;rlp82;I've seen this same deadlock: (version 5.0.0)

""ActiveMQ Session Task"" prio=10 tid=0xa60ef800 nid=0xa0d waiting for monitor entry [0xa64d7000..0xa64d7ea0]
   java.lang.Thread.State: BLOCKED (on object monitor)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:39)
        - waiting to lock <0x4c8fbcd8> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1152)
        at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1738)
        at org.apache.activemq.ActiveMQMessageConsumer.afterMessageIsConsumed(ActiveMQMessageConsumer.java:749)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:948)
        - locked <0x4c8f2960> (a java.lang.Object)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:122)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:192)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:619)

Has this fix been tested? which release will this be available?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken link at http://activemq.apache.org/wsif.html,AMQ-1692,12482580,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,oleo,oleo,26/Apr/08 11:59,04/Sep/08 17:59,30/Jan/20 16:55,04/Sep/08 17:59,,,,,,,,5.2.0,,,Documentation,,,,0,"The link to sample at http://activemq.apache.org/wsif.html is broken:

..... 
ActiveMQ provides a really simple to configure mechanism using the standard WSIF JMS metadata in the WSDL as you can see from this example...

An error occurred: http://svn.apache.org/repos/asf/servicemix/trunk/common/servicemix-components/src/test/resources/org/apache/servicemix/components/wsif/service.wsdl. The system administrator has been notified.
.........

I guess the new link is:
http://svn.apache.org/repos/asf/servicemix/smx3/trunk/common/servicemix-components/src/test/resources/org/apache/servicemix/components/wsif/service.wsdl.

",http://activemq.apache.org/wsif.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95872,,,2008-04-26 11:59:22.0,,,,,,,,"0|i1821z:",255135,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid number of consumers in web reporting,AMQ-1898,12482593,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,khussein,khussein,19/Aug/08 21:42,04/Sep/08 17:47,30/Jan/20 16:55,04/Sep/08 17:47,5.1.0,5.2.0,,,,,,5.2.0,,,JMS client,,,,0,"Here are the steps to reproduce it:
1) Create a queue with a number of messages (persistent or not) and no consumers on that queue.
2) Go to your web reporting page then click on that queue (browse it)
3) Browse any of the messages (like try to read its contents). 
4) Now go back to the Queues page
You'll see the number of consumers increased by 3 each time you do that. And these consumers aren't REAL consumers. They're only there to show you the message, but they won't consume the message. ",,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/08 17:29;khussein;AMQ-1898;https://issues.apache.org/jira/secure/attachment/12461198/AMQ-1898",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-04 17:47:17.798,,,false,,,,,,,,,,,,,,,,,75183,,,Thu Sep 04 17:47:17 UTC 2008,,,,,,,,"0|i0s1zz:",161800,,,,,,,,,,,,,,,,,,,"04/Sep/08 17:29;khussein;Attached is a patch that fixes this JIRA","04/Sep/08 17:47;rajdavies;Fixed by SVN  revision 692172",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Request/Reply across a Queue stalls ,AMQ-1778,12482471,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,06/Jun/08 13:58,04/Sep/08 14:45,30/Jan/20 16:55,04/Sep/08 14:45,5.0.0,5.1.0,,,,,,5.2.0,,,,,,,2,see http://www.nabble.com/ActiveMQ-5.1-broken---repro-test-included-td17681102s2354.html,,adam.sherman,carloc,guy.veraghtert,jerryshea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/08 09:49;hansb;JmsTest.tar;https://issues.apache.org/jira/secure/attachment/12461120/JmsTest.tar","03/Jul/08 09:49;hansb;output.tar;https://issues.apache.org/jira/secure/attachment/12461181/output.tar",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-06-16 14:18:18.395,,,false,,,,,,,,,,,,,,,,,84602,,,Thu Sep 04 14:45:22 UTC 2008,,,,,,,,"0|i0s1wv:",161786,,,,,,,,,,,,,,,,,,,"16/Jun/08 14:18;sbarker753;I was able to consistently reproduce the loss of a message with NateS' sample code.

When I reduced the thread pool size to 1 there was no loss of messages in several runs that I tried.

Because my application does not use the correlation ids at all, I adjusted the samples slightly to use separate queues for the responses. Under that circumstance, I did not see any message losses.

These results make me suspect that the loss of messages is related to using correlation ids across many threads.
","03/Jul/08 09:49;hansb;Modified the sources to:

- close receivers and senders
- log more exceptions
- create a QueueBrowser to look for the missing messages

I hope I still test the same issue, but it still seems to happen.

What I've found:
1. Apparently the MessageConsumer does not find the messages, but they are still on the queue.

2. If the sender threads are interrupted after the timeout and after the receiver closed, I get some InterruptedIOException in the ActiveMQSession.close() method:

Caused by: javax.jms.JMSException: java.io.InterruptedIOException
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
        at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1178)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1170)
        at org.apache.activemq.ActiveMQSession.close(ActiveMQSession.java:548)
        at org.apache.activemq.ActiveMQQueueSession.close(ActiveMQQueueSession.java:65)
        at test.JmsSenderTest.facilityRequest(JmsSenderTest.java:253)

See ""output-interrupted.log""

So closing the session takes quite long.

NOTE: purge (empty) the ""testResponses"" queue before a test. When there are a lot of messages on it, the results are worse.

I guess it may be some resource issue. (sockets, memory,...?)

No time to check more, now.

hope it helps. Interesting case.

","03/Jul/08 09:57;hansb;BTW: for me it's (of course) okay to include the code anywhere, but I was not the author of most of it, so I did not specify that.","04/Sep/08 14:45;rajdavies;This is resolved for 5.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Trunk build is broken due to dependence on XBean 3.3,AMQ-1921,12482639,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,bsnyder,bsnyder,29/Aug/08 13:13,04/Sep/08 10:36,30/Jan/20 16:55,04/Sep/08 10:34,5.2.0,,,,,,,5.2.0,,,,,,,1,"The trunk build is failing because the xbean-spring-3.3.jar cannot be located: 

{code}
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.apache.xbean:xbean-spring:jar:3.3-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.apache.xbean -DartifactId=xbean-spring -Dversion=3.3-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.apache.xbean -DartifactId=xbean-spring -Dversion=3.3-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
        1) org.apache.xbean:maven-xbean-plugin:maven-plugin:3.3
        2) org.apache.xbean:xbean-spring:jar:3.3-SNAPSHOT

----------
1 required artifact is missing.

for artifact: 
  org.apache.xbean:maven-xbean-plugin:maven-plugin:3.3

from the specified remote repositories:
  nexus (http://localhost:8081/nexus/content/groups/public)
{code}

The attached patch updates the XBean version to 3.4 and the build succeeds. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/08 13:13;bsnyder;ASF.LICENSE.NOT.GRANTED--pom.xml.diff.txt;https://issues.apache.org/jira/secure/attachment/12461218/ASF.LICENSE.NOT.GRANTED--pom.xml.diff.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-04 10:34:26.489,,,false,,,,,,,,,,,,,,,,,75172,,,Thu Sep 04 10:34:26 UTC 2008,,,,Patch Available,,,,"0|i1828n:",255165,,,,,,,,,,,,,,,,,,,"04/Sep/08 10:34;gtully;fixed in revision 691959.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent store journal files (occasionally) not being cleaned up at runtime for queues with active consumers,AMQ-1926,12482623,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Sep/08 12:44,03/Sep/08 14:18,30/Jan/20 16:55,03/Sep/08 14:18,5.1.0,,,,,,,5.2.0,,,Message Store,,,,0,"Over a long period data files fill up in the activemq-data/borker1/data/journal directory. Scenario is single queue, persistent producer and consumer, consumer periodically stalls to allow messages to build up in broker.
Problem appears to be related to message ack before async message store gets a chance to persist messages. Reference to active data file remain which stops them being cleaned up by the periodic checkpoint.
This limits the available up time of the broker with large volumes of messages as excessive amounts of disk space are consumed.

Using syncOnWrite=true or setting a AMQPersistenceAdapter.maxCheckpointMessageAddSize=0 will help avoid the problem, both of which will effect performance.",AMQPersistenceAdapter with syncOnWrite=false,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43022,,,Wed Sep 03 14:18:20 UTC 2008,,,,,,,,"0|i14b7z:",233281,,,,,,,,,,,,,,,,,,,"03/Sep/08 14:18;gtully;fixed in revision 691621

problem: allocated data locations not used because ack received before async write can complete were remaining in memory in the inProgressDataFile map, hence preventing cleanup.  Fix is to remove the reference when message is removed if message still exists when ack is received. At that stage it should normally be stored.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pure Master/Slave-kill the slave-master will not work,AMQ-1820,12482603,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yinghe0101,yinghe0101,20/Jun/08 20:18,02/Sep/08 11:49,30/Jan/20 16:55,02/Sep/08 11:49,,,,,,,,,,,,,,,3,"Step to reproduce:
Test 1
1, Setup a Pure Master/Slave (master is using the original activemq.xml, slave is added masterConnectorURI=""tcp://masterhost:62001"" shutdownOnMasterFailure=""false""
2, Kill the slave
3, Have a client to send a message to a queue.Master will not be able to function, see MasterTest1.log (WARN  TransportConnection            - Failed to add Connection
javax.jms.JMSException: The destination topic://ActiveMQ.Advisory.Connection and admin console queues.jsp throws exceptions too)

Test 2
1. Same as Test 1
2. Same as Test 1
3. restart the slave. Master will throw exception( on solaris master will throw exception, slave has no exception, on xp, both will throw exception and it is an infinite loop so I have to kill both) See MasterTest2.log for the exception
4. Have a client to send a message to a queue.Master will not be able to function, same exception as slave restart is thrown.

Both MasterTest1.log MasterTest2.log files are the tests on solaris.
Rest is a Win XP test for Test2, which has an infinite loop","Tested on both solaris 9 sparc and windows XP with release ActiveMQ 5.1 release
Tested ActiveMQ 5.1 release on xp only.

on solaris, master and slave are two machines. on window xp, master and slave are on one machine with different ports.
",antoniogmc,nmervaillie,tsigelnik,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/08 20:18;yinghe0101;ASF.LICENSE.NOT.GRANTED--ActiveMQ5.1PureMasterSlaveTest.zip;https://issues.apache.org/jira/secure/attachment/12461193/ASF.LICENSE.NOT.GRANTED--ActiveMQ5.1PureMasterSlaveTest.zip","24/Jun/08 13:08;nmervaillie;masterSlaveTestCase.zip;https://issues.apache.org/jira/secure/attachment/12461080/masterSlaveTestCase.zip","26/Jun/08 16:20;nmervaillie;patch.txt;https://issues.apache.org/jira/secure/attachment/12461182/patch.txt",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-06-24 13:08:18.595,,,false,,,,,,,,,,,,,,,,,43787,,,Tue Sep 02 11:49:09 UTC 2008,,,,,,,,"0|i0jxf3:",114344,,,,,,,,,,,,,,,,,,,"24/Jun/08 13:08;nmervaillie;Attaching a test case to reproduce this issue (tested on ubuntu and redhat).

This issue is critical for me as it prevents from using a cluster configuration in production. Can someone consider raising this issue priority ?
","24/Jun/08 19:14;yinghe0101;The topology we want to have is as follows:

machine A: 
 masterBroker1
 slaveBroker2

machine B:
 masterBroker2
 slaveBroker1

or more machines to have pure master/slave pair

on client machine, we want to indicate only the masters:
failover://(tcp://masterBroker1:port, tcp://masterBroker2:port)
so the slaves are only used for replication purpose.

if any one broker regardless of master or slave dies, its corresponding master or slave will finish what it is doing but not accepting new messages or connections and all the messages will failover to the available masters.

Is this a feasible in the current release?

After all, the goal for us is to have network of brokers to have HA and slaves only for replication so messages are not lost. Thanks 
","26/Jun/08 16:20;nmervaillie;Took some time today on this and issued the attached patch.
I don't know if it is correct but it seems to solve the problem.

Will run the tests to check for regressions.
","02/Sep/08 11:49;rajdavies;Patch applied by SVN revision 691206",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
moveMessage() hangs after 200 messages,AMQ-1914,12482561,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jstrachan,jstrachan,26/Aug/08 10:02,02/Sep/08 06:14,30/Jan/20 16:55,02/Sep/08 06:14,,,,,,,,5.2.0,,,JMX,,,,0,"See the test case MBeanTestt.testMoveMessages(). The test case works fine for 10 messages; but trying to move all the 400 messages on the queue results in a hang when attempting to move the 201st message",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-02 06:14:53.254,,,false,,,,,,,,,,,,,,,,,75176,,,Tue Sep 02 06:14:53 UTC 2008,,,,,,,,"0|i0s0s7:",161603,,,,,,,,,,,,,,,,,,,"02/Sep/08 06:14;rajdavies;Fixed by SVN revision 691114",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The default value for the maximumActive property on the PooledConnectionFactoryBean is 0, making it unusable",AMQ-1923,12482576,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gnodet,gnodet,gnodet,01/Sep/08 19:00,01/Sep/08 19:04,30/Jan/20 16:55,01/Sep/08 19:04,,,,,,,,5.2.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75171,,,Mon Sep 01 19:04:37 UTC 2008,,,,,,,,"0|i1828f:",255164,,,,,,,,,,,,,,,,,,,"01/Sep/08 19:04;gnodet;Sending        activemq-pool/src/main/java/org/apache/activemq/pool/PooledConnectionFactoryBean.java
Transmitting file data .
Committed revision 691030.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker Client with spring jmsTemplate drops messages (if reveiveTimeout is used) or blocks (if receiveTimeout is not specified.) under heavy load.,AMQ-1917,12482631,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Aug/08 11:34,29/Aug/08 08:26,30/Jan/20 16:55,29/Aug/08 08:26,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"doing request reply with spring jms template results in a hang or loss of messages when there are multiple concurrent requests, ie: when under load.
the problem is seen with servicemix-jms jmsProviderEndpoint which uses spring jmsTemplate based client to talk to ActiveMQ and blocks under heavy load after certain time on receiving message. Message can be seen on the queue but sprinjms based client using receiveSelected() call to receive message based on JMSCorrelationID based selector waits for the message and eventually will timeout (if one set) or block indefinitely. ",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75174,,,Fri Aug 29 08:26:50 UTC 2008,,,,,,,,"0|i14bon:",233356,,,,,,,,,,,,,,,,,,,"29/Aug/08 08:26;gtully;fixed in rev 690144

Problem: new messages paged in during addSubscription() doPageIn() may not get dispatched using the recovery dispatch mechanism if selectors are present. These messages need to be remembered in the pagedInPendingDispatch list. hense the fix.
Initial though was to always add newly pagedIn messages to the pagedInPending but this breaks QueueBrowsing which depends on the recoveryDispatch, and results in duplicates on the browse queue which breaks the enumeration.
QueueBrowsing may need some separate treatment at a later date.

for future reference, the relevant subset of tests are:
mvn -o test -Dtest=JmsQueueWildcardSendReceiveTest,JMSUsecaseTest,JmsQueueCompositeSendReceiveTest,LargeStreamletTest,MessageListenerRedeliveryTest,PublishOnQueueConsumedMessageInTransactionTest,MarshallingBrokerTest,AMQ1917Test,CursorQueueStoreTest,JmsTempDestinationTest,RollbacksWhileConsumingLargeQueueTest,StompTest",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq.xml embedded camel context cannot resolve  a broker if port other than default(61616) is used for tcp transport,AMQ-1895,12482604,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Aug/08 10:50,22/Aug/08 10:27,30/Jan/20 16:55,20/Aug/08 08:16,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"The camel context defined in acrtivemq.xml  does not specify a camel activeMQComponent (where a brokerUrl could be specified) and hence false back to the use of the default broker URL from ActiveMQConnectionFactory. This breaks down when a non default port is specified for the broker.
The result is the camel context continually retrying to connect to a non existent port.

It may make sense to pull the camel context out of the default activemq.xml altogether but with it present, it may make sense to have the camel activmqcomponent use a default broker url that uses the vm transport as the context will always be embedded in a broker.

One issue with the use of vm transport is that the first use of the transport creates an embedded broker. With the xbean xml, the camel context bean starts before the brokerService so the result is two brokers.
It would be usefull if the vm transport url allowed an option to wait for a broker to start so that the camel context can reliably use the vm transport without the possibility of creating a separate embedded broker.

Something like the following would work:
{code} vm://localhost?waitForStart=10000&create=false {code}
In this way, the camel embedded connection factory would wait up to 10 seconds for the localhost broker to start and fail with an exception (b/c create=false) in the event that the broker does not start within that time.
This would be a sensible default url for the activemq camel component in the acrtivemq.xml such that it is independent of transport options used by the broker.
(The spring depends-on workaround for this ordering dependency only works in a complete spring context)

{code}
    <bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"" >
        <property name=""brokerURL"" value=""vm://localhost?waitForStart=10000&create=false"" />
    </bean>
{code}",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84736,,,Wed Aug 20 08:16:15 UTC 2008,,,,,,,,"0|i0tt2v:",172020,,,,,,,,,,,,,,,,,,,"20/Aug/08 08:16;gtully;rev  687280

addition to camel config in activemq,xml to use vm transport for the activemq component broker url.
{code}
    <!-- configure the camel activemq component to use the current broker -->
    <bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"" >
        <property name=""brokerURL"" value=""vm://localhost?create=false&amp;waitForStart=10000"" />
    </bean>
{code}
Making this the camel activemq component default broker url (and updating the camel dependency), and this config can be removed, At the moment the camel defalult url uses port 61616.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The jdbc lockKeepAlive thread should be started only if current broker instance successfully started and became a master,AMQ-1885,12482594,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,14/Aug/08 13:39,22/Aug/08 10:27,30/Jan/20 16:55,14/Aug/08 18:36,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"using jdbc persistence with master/slave sharing the database. If the db dies, the master dies when it sees its lock expire. unfortunately the slave also has a lockKeepalive thread that detects the db failure, even if it does not have the lock.
The lockKeepAlive thread should be used once a lock has been acquired. in this way, the slave can remain trying to acquire the lock and eventually succeed and promote its self to master when the db comes back up.",jdbc persistence adapter with master/slave,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84740,,,Thu Aug 14 18:36:02 UTC 2008,,,,,,,,"0|i0suhb:",166415,,,,,,,,,,,,,,,,,,,"14/Aug/08 18:36;gtully;fixed in revision 685988. 
Added two jdbc master slave tests cases, normal failover after master dies and failover after temporary db outage.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sslContext xbean element does not work for multiple brokers, SslTransportFactory is maintained in static map.",AMQ-1749,12481961,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gtully,gtully,27/May/08 15:33,22/Aug/08 10:27,30/Jan/20 16:55,27/May/08 17:11,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/May/08 15:37;gtully;AMQ-1749.test;https://issues.apache.org/jira/secure/attachment/12461051/AMQ-1749.test","27/May/08 15:37;gtully;dummy.keystore;https://issues.apache.org/jira/secure/attachment/12461104/dummy.keystore",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84781,,,Tue May 27 17:11:12 UTC 2008,,,,,,,,"0|i0tshb:",171923,,,,,,,,,,,,,,,,,,,"27/May/08 15:37;gtully;test case uses dummy.keystore, a key store with a single cert named dummy. 
test starts two brokers and asserts that their certs match their config. they don't as the first configured SSLTransportFactory is used because of the static map.

The static is a problem, it is used by network connectors etc, it probabally needs to be tied to the broker.","27/May/08 17:11;gtully;fixed by:
New Revision: 660591

URL: http://svn.apache.org/viewvc?rev=660591&view=rev

thanks hiram.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
False positives from ConnectionAudit duplicateChecker when there are gaps in the message sequences received by a consumer,AMQ-1742,12482572,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gtully,gtully,22/May/08 10:58,22/Aug/08 10:27,30/Jan/20 16:55,22/May/08 11:39,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"a consumer can miss messages with failover transport as the connection audit suppress duplicates feature is enabled for failover connections.
When there are gaps in the message sequence that span the audit window or when message ids are multiples of 64 the BitArrayBin that backs the AuditChecker gets out of sync and can report false positives, rejecting a duplicate message in error.

If it is suspected, enable log4j.logger.org.apache.activemq.ActiveMQMessageConsumer=TRACE to see an event when a duplicate is recieved.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/08 11:03;gtully;AMQ-1742.patch;https://issues.apache.org/jira/secure/attachment/12461048/AMQ-1742.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-05-22 11:39:02.051,,,false,,,,,,,,,,,,,,,,,38764,,,Thu May 22 11:39:02 UTC 2008,,,,Patch Available,,,,"0|i0tt2n:",172019,,,,,,,,,,,,,,,,,,,"22/May/08 11:03;gtully;fix to BitArayBin and test case, ensures that with large gaps in the message squence, the window of bits is correctly moved on. bit indices not in the window are now reported as unset.","22/May/08 11:39;rajdavies;Patch applied in SVN revision 659082",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"messages get dispatched to a removed consumer, locked and remain unavailable - appear as missing",AMQ-1714,12482574,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gtully,gtully,08/May/08 15:56,22/Aug/08 10:27,30/Jan/20 16:55,13/May/08 10:52,5.1.0,,,,,,,5.2.0,,,Broker,,,,1,"with failover transport. multiple non persistent producers and consumers on a single queue  and transport disconnects, it is possible for a messages to get dispatched to a removed subscription or consumer. These messages are locked and hence cannot get dispatched to new consumers when the network ins reconnected. From a consumer perspective it looks like there are missing messages.

The problem occurs is messages are being dispatched while subscription removal occurring. The list of consumers is modified, inflight messages are removed from the subscription, unlocked and re dispatched. However, dispatch of messages is not synchronised with this removal and it is possible to dispatch to a removed consumer. Any such messages will be locked and never re dispatched.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/May/08 16:01;gtully;amq1714.patch;https://issues.apache.org/jira/secure/attachment/12461049/amq1714.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-05-13 10:52:07.616,,,false,,,,,,,,,,,,,,,,,38765,,,Tue May 13 10:52:07 UTC 2008,,,,Patch Available,,,,"0|i0tt2f:",172018,,,,,,,,,,,,,,,,,,,"08/May/08 16:01;gtully;this patch provides a test case that shows the problem and a fix that adds additional synchronisation to the queue dispatch method.
removing a subscription needs to be synchronized with the use of subscriptions. This seems to be the intended use of dispatchLock but up till now dispatch() does not lock dispatchLock.","13/May/08 10:52;rajdavies;Patch applied in SVN  revision 655805",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Muliple consumers on a queue and only run as fast as the slowest consumer,AMQ-1866,12482113,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chirino,chirino,22/Jul/08 17:33,21/Aug/08 10:17,30/Jan/20 16:55,14/Aug/08 08:25,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,Muliple consumers on a queue and only run as fast as the slowest consumer,,martinmurphy,sits,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/08 16:16;chirino;AMQ1866.patch;https://issues.apache.org/jira/secure/attachment/12461167/AMQ1866.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-07-27 18:23:34.03,,,false,,,,,,,,,,,,,,,,,84745,,,Thu Aug 21 10:17:15 UTC 2008,,,,,,,,"0|i0s2vj:",161942,,,,,,,,,,,,,,,,,,,"22/Jul/08 17:45;chirino;test case AMQ1866.java has been added to trunk.  Currently failing it show a test case the works for the default prefetch but which fails for small prefetches. ","22/Jul/08 19:19;chirino;Seems it's not limited to small prefetch sizes.  Test case has been updated and shows that the slow down will happen even with the default prefetch size.","25/Jul/08 15:20;chirino;The issue revolves around how ActiveMQ 5.x pages and dispatches messages to consumers. Every queue keeps list of paged in messages which defaults to 100 max entires. It round robins dispatching messages between consumers, even the slow consumers. Once the slow consumer gets 100 dispatched messages which it has not yet acked due to it being slow, then no further messages are paged in since the page in list is full.

I am evaluating different ways to implement this but, any change to this code could have repercussions which need to get evaluated.
","25/Jul/08 16:16;chirino;Attaching patch which fixes the test case.  Submitting for review to make sure there are no other performance/memory implications.","27/Jul/08 18:23;rajdavies;Using pendingQueueSize to determine least loaded subscription seems the best way to go
Fixed by SVN revision 680161","28/Jul/08 15:02;rajdavies;The fix doesn't work if the consumer is slightly slow ...","04/Aug/08 05:15;sits;Just curious does this bug occur if lazy dispatch is enabled?  Really the best way of solving this is to not deliver messages to consumers that aren't waiting for a message.  I would hope if lazy-dispatch is enabled, this doesn't happen..
","14/Aug/08 08:23;rajdavies;Hi David - we intend  change the dispatch model so that it works this way - if you get a chance - would be very happy if you could give it a run ?","14/Aug/08 08:25;rajdavies;Fixed by SVN revision 685806","15/Aug/08 05:35;sits;No worries - I'll try and set aside some time next week to check it out.
","21/Aug/08 10:12;gtully;additional mods to fix remaining test case,","21/Aug/08 10:17;gtully;if ye get a moment please cast your eyes over revision 687677 - fix for AMQ-1902",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.broker.region.cursors.CursorQueueStoreTest often fails,AMQ-1902,12482559,12482113,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Aug/08 11:32,21/Aug/08 10:12,30/Jan/20 16:55,21/Aug/08 10:10,5.1.0,,,,,,,5.2.0,,,,,,,0,"{code}
-------------------------------------------------------------------------------
Test set: org.apache.activemq.broker.region.cursors.CursorQueueStoreTest
-------------------------------------------------------------------------------
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 26.706 sec <<< FAILURE!
testSendWhilstConaume(org.apache.activemq.broker.region.cursors.CursorQueueStoreTest)  Time elapsed: 26.686 sec  <<< FAILURE!
junit.framework.ComparisonFailure: This should be the same at pos 50 in the list expected:<...51> but was:<...109>
	at junit.framework.Assert.assertEquals(Assert.java:81)
	at org.apache.activemq.broker.region.cursors.CursorSupport.testSendWhilstConaume(CursorSupport.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743)

{code}","intermittent on mac, always on underpowered linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75180,,,Thu Aug 21 10:10:16 UTC 2008,,,,,,,,"0|i07jbr:",41898,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"21/Aug/08 10:10;gtully;fixed in 687677

mods changes to fix: https://issues.apache.org/activemq/browse/AMQ-1866

problem was out of order message delivery. A full subscription that became available during a dispatch could receive messages newer than those stored in the pagedInPendingDispatch list. When the pagedInPendingDispatch is again dispatched, out of order messages can occur.
Changes to maintain the order of pagedInPendingDispatch were also needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integer overflow in default settings,AMQ-1858,12482549,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,sbordet,sbordet,17/Jul/08 15:09,14/Aug/08 09:33,30/Jan/20 16:55,14/Aug/08 09:33,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"From BrokerService, line 711-2:

systemUsage.getTempUsage().setLimit(1024 * 1024 * 1024 * 100); // 10 Gb
systemUsage.getStoreUsage().setLimit(1024 * 1024 * 1024 * 100); // 100 GB

The expression 1024 * 1024 * 1024 * 100 overflows int, so the above lines actually correspond to setLimit(0).
Easy fix is to make one of the multipliers a long, for example:

1024L * 1024 * 1024 * 100

Other places may have the same problem, but I did not look for all places.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/08 19:13;ewoodman;amq_1858.patch;https://issues.apache.org/jira/secure/attachment/12461231/amq_1858.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-07-24 19:13:31.259,,,false,,,,,,,,,,,,,,,,,84747,,,Thu Aug 14 09:33:02 UTC 2008,,,,,,,,"0|i14bjb:",233332,,,,,,,,,,,,,,,,,,,"24/Jul/08 19:13;ewoodman;Attaching a patch which fixes this issue and adds a unit test to ensure its correctness in the future.","14/Aug/08 09:33;rajdavies;Fixed applied in SVN revision 685832",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Getting IOException with Kaha storage,AMQ-1765,12482562,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vikdhawan,vikdhawan,03/Jun/08 21:11,14/Aug/08 09:28,30/Jan/20 16:55,14/Aug/08 09:28,5.0.0,,,,,,,5.1.0,,,Broker,,,,0,"2008-06-03 17:09:23,100 [.121.82.25:2360] ERROR Service                        - Async error occurred: java.lang.RuntimeException: org.apache.active
mq.kaha.RuntimeStoreException: java.io.IOException: Could not locate data file data-queue-data-17
java.lang.RuntimeException: org.apache.activemq.kaha.RuntimeStoreException: java.io.IOException: Could not locate data file data-queue-data-17
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.hasNext(QueueStorePrefetch.java:112)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:129)
        at org.apache.activemq.broker.region.Queue.buildList(Queue.java:1026)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1009)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1072)
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1003)
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:488)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:441)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:328)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:402)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:125)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:434)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:623)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:79)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:120)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:209)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommad(ProtocolConverter.java:141)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:69)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:185)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
        at java.lang.Thread.run(Thread.java:619)
",Solaris 10 JVM 1.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-04 06:53:15.408,,,false,,,,,,,,,,,,,,,,,84604,,,Thu Aug 14 09:28:24 UTC 2008,,,,,,,,"0|i17kzj:",252369,Regression,,,,,,,,,,,,,,,,,,"04/Jun/08 06:53;rajdavies;Looks like a duplicate of https://issues.apache.org/activemq/browse/AMQ-1264 which is fixed in 5.1","05/Jun/08 21:48;vikdhawan;Hi Rob, 

i understand you are saying its resolved in the AMQ 5.1. but i cant use 5.1 because it has other major issues. for example i cant even use a selector while having Kaha as the persistence mechanism. My selector fails everytime. 

I am only using JMSCorrelationID in my selector nothing fancy. 

Thanks!","05/Jun/08 21:52;vikdhawan;I am opening this bug again. ","05/Aug/08 14:23;hadrian;vik, could you please provide a small unit test or something that shows the problem?  Thanks!","14/Aug/08 09:28;rajdavies;Hi Vik,

please raise another jira for the selector problem",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
in use data files removed from data store under load,AMQ-1795,12482433,12482554,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gtully,gtully,12/Jun/08 14:12,11/Jul/08 16:22,30/Jan/20 16:55,10/Jul/08 15:29,5.1.0,,,,,,,5.2.0,,,,,,,0,"Under load, I see the error below.

the problem is that org.apache.activemq.store.amq.AMQPersistenceAdapter.cleanup() does not capture all of the in use files.
I have made some changes that improves the situation but there is still a window, that seems to be related to spooling messages when a memory limit is reached.


2008-06-12 14:55:16,689 [main           ] INFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(activemq-data\localhost)
2008-06-12 14:55:16,704 [main           ] INFO  AMQPersistenceAdapter          - AMQStore starting using directory: activemq-data\localhost
2008-06-12 14:55:17,361 [main           ] INFO  AMQPersistenceAdapter          - Journal deleted: 
2008-06-12 14:55:17,361 [main           ] INFO  KahaStore                      - Kaha Store successfully deleted data directory activemq-data\localhost\kr-store\data
2008-06-12 14:55:17,392 [main           ] INFO  KahaStore                      - Kaha Store successfully deleted data directory activemq-data\localhost\kr-store\state
2008-06-12 14:55:17,392 [main           ] INFO  KahaStore                      - Kaha Store using data directory activemq-data\localhost\kr-store\state
2008-06-12 14:55:17,470 [main           ] INFO  AMQPersistenceAdapter          - Active data files: []
2008-06-12 14:55:17,705 [main           ] INFO  BrokerService                  - ActiveMQ null JMS Message Broker (localhost) is starting
2008-06-12 14:55:17,705 [main           ] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2008-06-12 14:55:17,814 [JMX connector  ] INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
2008-06-12 14:55:17,924 [main           ] INFO  KahaStore                      - Kaha Store using data directory activemq-data\localhost\kr-store\data
2008-06-12 14:55:17,939 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: tcp://salthill:61616
2008-06-12 14:55:17,939 [main           ] INFO  TransportConnector             - Connector Default Started
2008-06-12 14:55:17,939 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:salthill-2790-1213278917752-0:0) started
2008-06-12 14:55:17,939 [main           ] INFO  MissingDataFileTest            - Starting broker..
2008-06-12 14:55:58,516 [age Thread Pool] ERROR AsyncDataManager               - Looking for key 551 but not found in fileMap: {1014=data-1014 number = 1014 , length = 1960 refCount = 6, 607=data-607 number = 607 , length = 1266 refCount = 1, 928=data-928 number = 928 , .. .. 622 , length = 1352 refCount = 2, 328=data-328 number = 328 , length = 1266 refCount = 1, 256=data-256 number = 256 , length = 1264 refCount = 1, 92=data-92 number = 92 , length = 1264 refCount = 1, 404=data-404 number = 404 , length = 1266 refCount = 1}
2008-06-12 14:55:58,563 [age Thread Pool] ERROR AbstractStoreCursor            - Failed to fill batch
java.io.IOException: Failed to read to journal for: offset = 0, file = 551, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data--551
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:635)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:521)
	at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:432)
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:120)
	at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:530)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:188)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.onUsageChanged(AbstractStoreCursor.java:157)
	at org.apache.activemq.usage.Usage$1.run(Usage.java:266)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Could not locate data file data--551
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:303)
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:613)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:518)
	... 12 more
2008-06-12 14:55:58,563 [age Thread Pool] ERROR AbstractStoreCursor            - Failed to fill batch 
java.lang.RuntimeException: java.io.IOException: Failed to read to journal for: offset = 0, file = 551, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data--551
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:191)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.onUsageChanged(AbstractStoreCursor.java:157)
	at org.apache.activemq.usage.Usage$1.run(Usage.java:266)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Failed to read to journal for: offset = 0, file = 551, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data--551
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:635)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:521)
	at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:432)
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:120)
	at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:530)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:188)
	... 5 more
Caused by: java.io.IOException: Could not locate data file data--551
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:303)
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:613)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:518)
	... 12 more
2008-06-12 15:00:18,531 [main           ] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, ID:salthill-2790-1213278917752-0:0) is shutting down
2008-06-12 15:00:20,438 [main           ] INFO  TransportConnector             - Connector Default Stopped
2008-06-12 15:00:20,641 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:salthill-2790-1213278917752-0:0) stopped
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/08 10:59;gtully;AMQ-1795.further_improvement;https://issues.apache.org/jira/secure/attachment/12461145/AMQ-1795.further_improvement","12/Jun/08 14:18;gtully;AMQ-1795.test_and_partial_fix;https://issues.apache.org/jira/secure/attachment/12461163/AMQ-1795.test_and_partial_fix",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-06-12 14:36:22.621,,,false,,,,,,,,,,,,,,,,,84767,,,Wed Jun 18 19:35:08 UTC 2008,,,,,,,,"0|i0tt13:",172012,,,,,,,,,,,,,,,,,,,"12/Jun/08 14:18;gtully;MissingDataFileTest shows the problem.

There is a fix to cleanup to reference the inuse transaction files using checkpoint.
also checkpoint is fixed up to return the minimum file in use.

of note also is AsyncDataManager removal of files that are not inUse. This capability seems to be bsolete but yet I see it remove a file on occasion.","12/Jun/08 14:23;gtully;note, I had to reduce the store maxFileSize and the cleanup interval to make the test reproduceable. This meant exposing the cleanupInterfal to the persistenceAdapterFactory.

        AMQPersistenceAdapterFactory factory = (AMQPersistenceAdapterFactory) broker.getPersistenceFactory();
        factory.setMaxFileLength(2*1024); // ~4 messages
        factory.setCleanupInterval(5000); // every few second","12/Jun/08 14:36;rajdavies;Resolved by revision 667105","12/Jun/08 14:51;gtully;remove some unnecessary info from the description","12/Jun/08 16:01;gtully;still needs work","17/Jun/08 10:42;gtully;Still having problems with this:

I find that the following change helps but is not bulit proof. I think it makes sense to use the mark as the boundary point for deletion but on a slower machine the MissingDataFileTest still shows the error stack trace. A multi core machine does not show the problem.
Also, the test case only complets when the memory usage limit is omitted or increased to 1024*1024 which may indicate a limitation of the test case. Decreasing the memory usage caused the problem to show up earlier, which does not now seem to be the case. So there is some progress.

The short of it is that collection of inUse file Ids is not sufficiently stable for the cleanup method. I still do not know where the problem lies though. I need another set of eyes.

Index: src/main/java/org/apache/activemq/store/amq/AMQPersistenceAdapter.java
===================================================================
--- src/main/java/org/apache/activemq/store/amq/AMQPersistenceAdapter.java      (revision 668601)
+++ src/main/java/org/apache/activemq/store/amq/AMQPersistenceAdapter.java      (working copy)
@@ -425,6 +425,7 @@
             }
             Integer lastDataFile = asyncDataManager.getCurrentDataFileId();
             inProgress.add(lastDataFile);
+            lastDataFile = asyncDataManager.getMark().getDataFileId();
             inProgress.addAll(referenceStoreAdapter.getReferenceFileIdsInUse());
             Location lastActiveTx = transactionStore.checkpoint();
             if (lastActiveTx != null) {
","17/Jun/08 10:59;gtully;changes that work well on a fast machine to alleviate the stack trace. I still see the error on a slower machine however. test works to completion with the changed memory limit.","18/Jun/08 19:35;rajdavies;Further patch applied by SVN revision 669265",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransportConnection MBeans leaked on duplex network connector disconnect,AMQ-1848,12482462,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gtully,gtully,09/Jul/08 15:09,10/Jul/08 14:55,30/Jan/20 16:55,10/Jul/08 09:27,5.1.0,,,,,,,5.2.0,,,Transport,,,,0,"multiple restarts of a broker with a duplex network connector will result in multiple connection mbeans in the network target broker. These MBeans are not cleaned up on network disconnect.
These leaked MBeans have names of the form: org.apache.activemq:BrokerName=broker,Type=Connection,ConnectorName=tcp_//localhost_61616,ViewType=address,Name=/127.0.0.1_3895",,yinghe0101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jul/08 15:13;gtully;AMQ-1848.patch;https://issues.apache.org/jira/secure/attachment/12461194/AMQ-1848.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-07-09 19:16:27.859,,,false,,,,,,,,,,,,,,,,,84750,,,Thu Jul 10 14:55:29 UTC 2008,,,,Patch Available,,,,"0|i0tsn3:",171949,,,,,,,,,,,,,,,,,,,"09/Jul/08 15:13;gtully;the recieving Transportconnection that initiates the duplex network bridge on the target broker is not stopped and hense not unregistered from JMX. Directing the bridge stop through this connection when the bridge is duplex fixes the problem. Test case and fix attached in this patch.","09/Jul/08 19:16;rajdavies;Patch applied in SVN revision 675314","10/Jul/08 09:09;rajdavies;Test case doesn't work consistenty for iterations of start/stop greater than 2","10/Jul/08 09:27;rajdavies;Fixed by revision 675484","10/Jul/08 14:55;dave_stanley;Tracking..

This also resolves NPE in DemandForwardingBridge

{code}
java.lang.NullPointerException
	at org.apache.activemq.network.DemandForwardingBridgeSupport.doCreateDemandSubscription(DemandForwardingBridgeSupport.java:862)
	at org.apache.activemq.network.DurableConduitBridge.createDemandSubscription(DurableConduitBridge.java:98)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.addConsumerInfo(DemandForwardingBridgeSupport.java:845)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:430)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:154)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
	at java.lang.Thread.run(Thread.java:619)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaMessageStore does not close or delete files for deleted destinations.,AMQ-1623,12482330,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gholden,gholden,14/Mar/08 14:31,07/Jul/08 22:54,30/Jan/20 16:55,09/Apr/08 16:24,5.0.0,,,,,,,5.1.0,,,Message Store,,,,0,"When a persistent destination is deleted via the web console or JMX, the file remains on disk and remains open, tying up a file descriptor.
I discovered this trying to run some stress tests that create and delete queues and topics for different tests, but it runs out of file descriptors and crashes when using the KahaMessageStore.

I started to look into this and I saw that the Topic or Queue dispose method calls MessageStore.removeAllMessages, but I think to clean things up properly you'd have to add a MessageStore.dispose to do any necessary cleanup.",Ubuntu Linux,gholden,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-09 16:24:11.943,,,false,,,,,,,,,,,,,,,,,84632,,,Mon Jul 07 22:54:50 UTC 2008,,,,,,,,"0|i0s1qn:",161758,,,,,,,,,,,,,,,,,,,"09/Apr/08 16:24;rajdavies;Fix in SVN revision 646422","07/Jul/08 22:54;snstanton;I don't believe the patch for this issue fully resolves the problem.  While it does release all of the messages, it does not properly close the indices, resulting in a handle leak every time a destination is removed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hash Resize issue for message store,AMQ-1834,12482251,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,01/Jul/08 17:12,01/Jul/08 17:14,30/Jan/20 16:55,01/Jul/08 17:14,5.2.0,,,,,,,5.2.0,,,Message Store,,,,0,The HashIndex doesn't calculate the hash bin number correctly when resizing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95920,,,Tue Jul 01 17:14:23 UTC 2008,,,,,,,,"0|i0s0of:",161586,,,,,,,,,,,,,,,,,,,"01/Jul/08 17:14;rajdavies;Fixed by SVN revision 673143",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC-Adapter: Inconsistent lower/uppercase of the database field TIME,AMQ-1816,12482122,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,msiegenthaler,msiegenthaler,20/Jun/08 14:22,20/Jun/08 16:27,30/Jan/20 16:55,20/Jun/08 16:27,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"The name of the database field ACTIVEMQ_LOCK.TIME is inconsistent in org.apache.activemq.store.jdbc.Statements: in getCreateSchemaStatements() its name is ""TIME"" (upper case) while in getLockUpdateStatement() it's called ""time"" (lower case). This causes problems with databases using a case-sensitive collation.

I suggest using the uppercase variant, since this is more consistent with the naming of the other fields.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-20 16:27:29.61,,,false,,,,,,,,,,,,,,,,,84759,,,Fri Jun 20 16:27:29 UTC 2008,,,,,,,,"0|i14bp3:",233358,,,,,,,,,,,,,,,,,,,"20/Jun/08 16:27;rajdavies;Resolved by SVN revision 669973",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndexManager keeps an inaccurate free list,AMQ-1814,12482336,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,20/Jun/08 10:45,20/Jun/08 12:53,30/Jan/20 16:55,20/Jun/08 12:53,5.0.0,5.1.0,,,,,,5.2.0,,,Message Store,,,,0,The IndexManager recycles IndexItems - resuing free indexes when possible. However because the free list was inaccurately maintained - the index file is forced to grow larger than needed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84599,,,Fri Jun 20 12:53:32 UTC 2008,,,,,,,,"0|i14b8f:",233283,,,,,,,,,,,,,,,,,,,"20/Jun/08 12:53;rajdavies;Fixed by SVN revision 669879",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport should always signal resume of transport,AMQ-1771,12482415,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,akuhtz,akuhtz,05/Jun/08 11:27,20/Jun/08 05:22,30/Jan/20 16:55,11/Jun/08 23:22,5.1.0,,,,,,,5.2.0,,,Transport,,,,0,"The FailoverTransport does currently not signal the initial resume of the transport (due to race condition) nor the failure (if maxReconnectAttempts is 0) and therefore we don't know if the connection is successfully connected or not.

The attached patch adds a sleep (copied from the failure processing part some lines below) that ensures that the ??transportListener?? is set and the ??transportListener.transportResumed()?? is called.","WinXP, JDK5",akuhtz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jun/08 11:27;akuhtz;ASF.LICENSE.NOT.GRANTED--amq-failover.patch;https://issues.apache.org/jira/secure/attachment/12460985/ASF.LICENSE.NOT.GRANTED--amq-failover.patch","09/Jun/08 14:00;akuhtz;amq-failover-reconnect.patch;https://issues.apache.org/jira/secure/attachment/12461161/amq-failover-reconnect.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-06-05 17:58:34.098,,,false,,,,,,,,,,,,,,,,,84775,,,Fri Jun 20 05:22:46 UTC 2008,,,,Patch Available,,,,"0|i0s1of:",161748,,,,,,,,,,,,,,,,,,,"05/Jun/08 17:58;rajdavies;Fixed by SVN revision 663680 and 663691","09/Jun/08 13:59;akuhtz;There is another timing issue because the reconnect task is triggered via the {{FailoverTransport.add(URI u[])}} method before the connection is configured (see {{ActiveMConnectionFactory.createActiveMQConnection(...)}}) and therefore the transport listener is not set.

The attached patch (amq-failover-reconnect.patch) checks if the transport is started and does not call {{reconnect()}} because the {{start()}} will do it later after the connection is configured.","11/Jun/08 23:22;rajdavies;Fixed by revision 666893","20/Jun/08 05:22;janbartel;Hi Rob,

A jetty hightide user has posted me the following problem description, which I think may be fixed by the patches above, but I'm not entirely sure - could you confirm for me if that's the case?

Here's the problem as it was reported:

""ActiveMQConnection
—————————
The Main thread is stuck waiting for ActiveMQConnection.brokerInfoReceived CountDownLatch in the ActiveMQConnection.waitForBrokerInfo() method. The brokerInfoReceived latch is released when the ActiveMQConnection.onCommand().processBrokerInfo() Listner event is received.

FailoverTransport
————————-
When the FailoverTransport is instantiated it immediately attempts to connect to the brokers. On successful connection to the broker it calls the Listener, if one is attached.
The processBrokerInfo command from the broker is sent to the listener, in this case the ActiveMQConnection which releases the latch.

The sequence of wiring the connection to the transport is as follows...
- ActiveMQConnectionFactory.createActiveMQConnection() creates the transport, then creates the ActiveMQConnection(transport)
- The ActiveMQConnection constructor calls transport.setTransportListener(this) which attaches the connection listener to the transport
- Finally the factory calls start() on the transport

The problem is the FailoverTransport starts to connect doReconnect() at construction time using its own thread. On successful connection to the broker it notifies using the listener but only if the listener is set. The race condition occurs on the main thread to attach the listener to the FailoverTransport before the FailoverTransport connects. If the FailoverTransport connects and the listener is not connected, notification messages are lost..""

ta muchly,
Jan

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure with JDBCPersistenceAdapter,AMQ-1809,12482296,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vodnik12,vodnik12,19/Jun/08 12:25,19/Jun/08 23:07,30/Jan/20 16:55,19/Jun/08 23:07,5.1.0,,,,,,,5.2.0,,,Message Store,,,,0,"When using jdbcPersistenceAdapter with Oracle using DBCP BasicDataSource and poolPreparedStatements set to true (default ActiveMQ configuration), the DBCP pool does not work corretly and opens lots of new connections instead of reusing old ones. It does so until connection count is so high, that database server starts refusing new connections and an exception is thrown. 

Problem can be avoided by setting poolPreparedStatements to false and fixed by updating commons-dbcp-1.2.jar to version commons-dbcp-1.2.2.jar

The exception is java.sql.SQLException: Výjimka vstupu/výstupu: Got minus one from a read call
(Full stack trace is in attached text file)","ActiveMQ 5.1.0, JRE 1.6.0_05, Oracle 10.2.04",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/08 12:25;vodnik12;ASF.LICENSE.NOT.GRANTED--commons-dbcp-1.2.2.jar;https://issues.apache.org/jira/secure/attachment/12461106/ASF.LICENSE.NOT.GRANTED--commons-dbcp-1.2.2.jar","19/Jun/08 12:25;vodnik12;ASF.LICENSE.NOT.GRANTED--exception.txt;https://issues.apache.org/jira/secure/attachment/12460987/ASF.LICENSE.NOT.GRANTED--exception.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-06-19 23:07:10.505,,,false,,,,,,,,,,,,,,,,,38756,,,Thu Jun 19 23:07:10 UTC 2008,,,,Patch Available,,,,"0|i16s0v:",247672,,,,,,,,,,,,,,,,,,,"19/Jun/08 23:07;rajdavies;Fixed by svn  revision 669740.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent message leak when broker run out of disk space,AMQ-1805,12482239,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,bluefox,bluefox,17/Jun/08 15:50,19/Jun/08 16:11,30/Jan/20 16:55,19/Jun/08 16:00,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"In our environment, we have several ActvieMQ CPP clients sending persistent messages continuously to a ActiveMQ 5.1 broker. In normal condition the broker works fine until it ran out of disk space. At that point the client would receive out of disk space advisory message AFTER sending the message, therefore the message should be removed from broker, however, the message are kept in the memory due to a problem in the DataFileAppender & AsyncDatamanager, when the disk is full, the message is saved in the inflightWrites map but never taken out since the enqueue will fail due to IOException.

        synchronized (this) {
            // Find the position where this item will land at.
            DataFile dataFile = dataManager.allocateLocation(location);
            if( !sync ) {
                inflightWrites.put(new WriteKey(location), write);
            }
            batch = enqueue(dataFile, write);
        }

and

        synchronized (this) {
            // Find the position where this item will land at.
            DataFile dataFile = dataManager.allocateLocation(location);
            inflightWrites.put(new WriteKey(location), write);
            batch = enqueue(dataFile, write);
        }","ActiveMQ 5.1 (AMQStore w/o SystemUsage configuration)
Windows XP SP2
ActiveMQ CPP 2.1.3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-724,,"17/Jun/08 16:21;bluefox;amq-1805.diff;https://issues.apache.org/jira/secure/attachment/12461177/amq-1805.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-19 16:00:34.293,,,false,,,,,,,,,,,,,,,,,84763,,,Thu Jun 19 16:00:34 UTC 2008,,,,Patch Available,,,,"0|i14bc7:",233300,,,,,,,,,,,,,,,,,,,"17/Jun/08 16:21;bluefox;From the above 5.1 source code, it seems like allocateLocation should actually make sure that there is enough disk space for the particular message. However, it actually only create the File handle without actually allocating any disk space So to fix this problem, we added

nextWriteFile.closeRandomAccessFile(nextWriteFile.openRandomAccessFile(true));

in the AsyncDataManager.allocateLocation method to try and pre allocate the disk space. We believe that this will not have much impact on the performance as data file is 32MB default, but please feel free to advice otherwise as this is our first time looking at ActiveMQ source code. ","17/Jun/08 16:28;bluefox;The patch for InactivityMonitor.java  provided by Tom Vijlbrief seems to be missing in ActiveMQ 5.1, which causes a thread leak when the client does not close the connection properly.","19/Jun/08 16:00;rajdavies;Fixed by SVN revision 669519",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix: Thread leak in ActiveMQConnection,AMQ-1791,12482124,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,justinsb,justinsb,12/Jun/08 03:33,19/Jun/08 15:37,30/Jan/20 16:55,19/Jun/08 15:37,5.1.0,,,,,,,,,,JMS client,,,,0,"ActiveMQConnection does not shutdown the asyncConnectionThread if an error occurs in the close method.  In particular, if a connection could not be made, stop will immediately throw an exception.  This leaks threads.

The attached patch fixes the problem.

This might be related to AMQ-1214?

I had some trouble creating the patch, because SVN head does not build for me (AMQ-1745).  The patch is simple, so please apply by hand if it doesn't automatically apply.

",,justinsb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jun/08 03:33;justinsb;ASF.LICENSE.NOT.GRANTED--connectionleak.patch;https://issues.apache.org/jira/secure/attachment/12461009/ASF.LICENSE.NOT.GRANTED--connectionleak.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-19 15:37:40.468,,,false,,,,,,,,,,,,,,,,,84769,,,Thu Jun 19 15:37:40 UTC 2008,,,,Patch Available,,,,"0|i0s1hb:",161716,,,,,,,,,,,,,,,,,,,"19/Jun/08 15:37;rajdavies;Fix applied in SVN revision 669512",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Patch for stop connection in case of PooledConnection and broker not available (deadlock),AMQ-1810,12482165,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,akuhtz,akuhtz,19/Jun/08 13:51,19/Jun/08 15:37,30/Jan/20 16:55,19/Jun/08 15:37,5.1.0,,,,,,,5.2.0,,,,,,,0,"If a client tries to connect to the broker and the broker is not available the client can't be stopped because of a deadlock in ActiveMQConnection.

The problem is that the thread that wants to establish the connection is stuck in {{syncSendPacket()}} which is called from inside {{ensureConnectionInfoSent()}} which is {{synchronized}} (and holds the lock on the ActiveMQConnection instance). The call to {{close()}} calls {{stop()}} and this will call {{checkClosedOrFailed()}} which is {{synchronized}}, too, and there is the deadlock.

The patch has removed the {{synchronized}} on the {{ensureConnectionInfoSent()}} and uses a mutex instead to prevent calling the method unsynchronized.

Another problem is that {{PooledConnectionFactory}} is triggered from Spring classes to create connections even if the PooledConnectionFactory was stopped (call to {{stop()}} and the new created connections can not be stopped normally later. 
I have added a {{stopped}} flag that prevents the creation of new connecions after {{stop()}} was called.

I think the issue AMQ-1470 is related to the same problem. 
The patch also contains the patch for AMQ-1791.","JDK6, WinXP",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/08 13:52;akuhtz;amq-1810.patch;https://issues.apache.org/jira/secure/attachment/12461079/amq-1810.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-19 15:37:17.28,,,false,,,,,,,,,,,,,,,,,38755,,,Thu Jun 19 15:37:17 UTC 2008,,,,Patch Available,,,,"0|i14bq7:",233363,,,,,,,,,,,,,,,,,,,"19/Jun/08 15:37;rajdavies;Fixed applied in revision 669510, 669511 and 669512",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error introduced in throwing Exceptions in ActiveMQConnection.syncSendPacket(),AMQ-1811,12482144,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,19/Jun/08 13:59,19/Jun/08 14:00,30/Jan/20 16:55,19/Jun/08 14:00,5.2.0,,,,,,,5.2.0,,,JMS client,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95912,,,Thu Jun 19 14:00:47 UTC 2008,,,,,,,,"0|i0s0pz:",161593,,,,,,,,,,,,,,,,,,,"19/Jun/08 14:00;rajdavies;Fixed by SVN revision 669491",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.jms.JMSException: java.util.ConcurrentModificationException in StoreDurableSubscriberCursor,AMQ-1799,12482526,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,16/Jun/08 06:29,16/Jun/08 06:30,30/Jan/20 16:55,16/Jun/08 06:30,5.0.0,,,,,,,5.2.0,,,Broker,,,,0,"javax.jms.JMSException: java.util.ConcurrentModificationException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1201)
	at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1754)
	at org.apache.activemq.ActiveMQMessageConsumer.<init>(ActiveMQMessageConsumer.java:219)
	at org.apache.activemq.ActiveMQTopicSubscriber.<init>(ActiveMQTopicSubscriber.java:117)
	at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1164)
	at org.apache.activemq.pool.PooledSession.createDurableSubscriber(PooledSession.java:233)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createConsumer(AbstractPollingMessageListenerContainer.java:429)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createListenerConsumer(AbstractPollingMessageListenerContainer.java:216)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:297)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:254)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:871)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:811)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.util.ConcurrentModificationException
	at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:617)
	at java.util.LinkedList$ListItr.next(LinkedList.java:552)
	at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.setMaxAuditDepth(StoreDurableSubscriberCursor.java:284)
	at org.apache.activemq.broker.region.DurableTopicSubscription.activate(DurableTopicSubscription.java:108)
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:105)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:383)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:92)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:529)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
	... 1 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84600,,,Mon Jun 16 06:30:50 UTC 2008,,,,,,,,"0|i14brj:",233369,,,,,,,,,,,,,,,,,,,"16/Jun/08 06:30;rajdavies;Fixed by SVN revision 668061",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RA does not reconnect correctly to a failed broker,AMQ-1779,12482440,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,hudalla,hudalla,06/Jun/08 13:59,06/Jun/08 18:59,30/Jan/20 16:55,06/Jun/08 18:59,5.0.0,5.1.0,,,,,,5.2.0,,,Connector,,,,0,"The Resource Adapter does not cleanly reconnect to a failed broker:

- it uses stale sessions to deliver messages to an Endpoint resulting in messages not being delivered at all anymore after the connection has been re-established
- the code for connecting/reconnecting to the broker is not synchronized properly leading to race conditions/deadlocks in some situations

Kai
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/08 14:22;hudalla;amq-1779.patch;https://issues.apache.org/jira/secure/attachment/12461078/amq-1779.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-06 18:59:55.398,,,false,,,,,,,,,,,,,,,,,84601,,,Fri Jun 06 18:59:55 UTC 2008,,,,Patch Available,,,,"0|i14ba7:",233291,,,,,,,,,,,,,,,,,,,"06/Jun/08 14:15;hudalla;The work done by David Jencks on the 4.x branch in AMQ-1632 still has some issues regarding synchronization:

- When the RA tries to connect to the broker, it does so by subsequently scheduling the connectWork using the WorkManager. However, the monitor on connectWork may be lost when the connectWork is re-scheduled after an unsuccessful attempt, making it possible that the getConnection() method gets the monitor and returns null instead of the re-established connection.
- The code for registering a ConnectionConsumer on the ActiveMQConnection leads to a deadlock if there are some messages left to be delivered from before the broker has failed. In that case, the ServerSessionPoolImpl.createServerSessionImpl() method will be triggered by the next message delivery. However, the createServerSessionImpl() method needs to wait for the EndpointWorker.getConnection() method to return which is also synchronized on the connectWork that is trying to register the ConnectionConsumer. The problem here is that the constructor of the ActiveMQConnectionConsumer uses syncSendPacket() instead of asyncSendPacket() in order to register the consumer with the broker. Thus the instantiation of the ActiveMQConnectionConsumer blocks until the first message has been delivered, leading to the deadlock.

Kai","06/Jun/08 14:22;hudalla;I have changed the connectWork to loop until it finally gets a connection to the broker instead of re-scheduling itself after a failed connection attempt. This way, the monitor on connectWork is kept until the connection succeeds. In order to make this work, the ActiveMQConnectionConsumer needs to use asyncSendPacket() for registering itself with the consumer to avoid a deadlock on the connectWork.

The patch also includes David's fix for the prefetchSize calculation in the EndpointWorker.

Kai","06/Jun/08 18:59;rajdavies;Patch applied by SVN revision 664079 and 664082",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recovery of TransactionBroker fails because of missing Subscriptions,AMQ-1712,12482497,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,hudalla,hudalla,07/May/08 11:55,06/Jun/08 15:21,30/Jan/20 16:55,06/Jun/08 15:21,4.1.2,5.0.0,,,,,,5.2.0,,,Broker,,,,1,"I am testing recovery of ActiveMQ by having a client continuously putting messages to a queue and then stopping the broker (Ctrl-C) and restarting it. During startup I get the following stack trace on ActiveMQ trunk version:

ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.act
ivemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exceptio
n is java.io.IOException: Recovery Failed: The subscription does not exist: ID:FE-Z2965-2798-1210158536046-1:0:-1:2
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.x
bean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is ja
va.io.IOException: Recovery Failed: The subscription does not exist: ID:FE-Z2965-2798-1210158536046-1:0:-1:2
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:222)
        at org.apache.activemq.console.Main.main(Main.java:106)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBean
BrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.io.IOEx
ception: Recovery Failed: The subscription does not exist: ID:FE-Z2965-2798-1210158536046-1:0:-1:2
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBean
Factory.java:1260)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFa
ctory.java:438)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.j
ava:383)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFact
ory.java:353)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:1
69)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactor
y.java:400)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationConte
xt.java:736)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:369)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:111)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:73)
        ... 10 more
Caused by: java.io.IOException: Recovery Failed: The subscription does not exist: ID:FE-Z2965-2798-1210158536046-1:0:-1:2
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:110)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:153)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:153)
        at org.apache.activemq.broker.MutableBrokerFilter.start(MutableBrokerFilter.java:160)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:444)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:50)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableB
eanFactory.java:1288)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBean
Factory.java:1257)
        ... 29 more
Caused by: java.lang.IllegalArgumentException: The subscription does not exist: ID:FE-Z2965-2798-1210158536046-1:0:-1:2
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:357)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.TransactionBroker$1.recover(TransactionBroker.java:100)
        at org.apache.activemq.store.amq.AMQTransactionStore.recover(AMQTransactionStore.java:196)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:92)
        ... 36 more


I am wondering whether the _AbstractRegion.acknowledge()_ method shouldn't consider the _ConsumerBrokerExchange.getConnectionContext().getInRecoveryMode()_ flag and then NOT throw an _IllegalArgumentException_ if no matching Subscription is available (while recovering during startup of the TransactionBroker there won't be any Subscriptions available anyway, right?) ...

Any thoughts?

Kai",,antoniogmc,hudalla,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/08 06:48;hudalla;amq-1712.diff;https://issues.apache.org/jira/secure/attachment/12461117/amq-1712.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-06 15:21:44.991,,,false,,,,,,,,,,,,,,,,,84588,,,Fri Jun 06 15:21:44 UTC 2008,,,,,,,,"0|i0s1y7:",161792,,,,,,,,,,,,,,,,,,,"30/May/08 06:47;hudalla;Hi,

I have created a patch for this issue targeted at TRUNK. The patch adds a check for the _ConnectionContext.getRecoveryMode()_ flag as indicated in my original posting.
Could someone who is more into the recovery code please cross check whether this makes any sense?

Kai","30/May/08 06:48;hudalla;Proposed fix, to be applied to org/apache/activemq/broker/region/AbstractRegion.java","06/Jun/08 15:21;rajdavies;Fixed by SVN revision 663980",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PrefetchSubscription may not wake up if messages delivered in transaction,AMQ-1632,12482378,12482440,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,djencks,djencks,24/Mar/08 06:30,06/Jun/08 14:15,30/Jan/20 16:55,07/Apr/08 22:16,4.1.1,,,,,,,4.1.2,,,Broker,,,,0,"we noticed mdbs w/transaction on don't work if the prefetch size is less than the number of sessions for the mdb.  There's an error in calculating the prefetchExtension in afterCommit and there's no notification that it might be time to send more messages.  Apparently if the prefetch size is large enough one of the earlier acks triggers delivery of the next batch.

There are also a bunch of synchronization errors in some classes...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84514,,,Mon Apr 07 22:16:46 UTC 2008,,,,,,,,"0|i0tsw7:",171990,,,,,,,,,,,,,,,,,,,"24/Mar/08 07:22;djencks;Fixed in rev 640336, branches 4.1.  The actual fix is in   activemq-core/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java, other files contain thread-safety improvements.  Leaving open till I can check trunk for similar problems.","24/Mar/08 22:43;djencks;I talked with Hiram a bit and we decided that the real problem was that prefetchSize was being calculated wrong.  MDBs instances for an activation spec all share a single multithreaded consumer.  So the prefetch size ought to be maxMessagesPerSession * maxSessions, so each mdb gets a chance at maxMessagesPerSession.  Previously prefetchSize = maxMessagesPerSession which resulted in some mdbs never getting a chance to process anything if maxMessagesPerSession < maxSessions.

Still haven't looked at trunk.","07/Apr/08 22:16;djencks;Still a good idea to look at trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow configuration of ActiveMQConfiguration in ActiveMQComponent with Spring,AMQ-1768,12482473,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,akuhtz,akuhtz,04/Jun/08 14:42,05/Jun/08 18:09,30/Jan/20 16:55,05/Jun/08 18:09,5.1.0,,,,,,,5.2.0,,,,,,,0,"Because ActiveMQComponent overwrites the getConfiguration() of JmsComponent and declares the return value of type ActiveMQConfiguration instead of JmsConfiguration the configuration via xml fails.

Therefore the following configuration is not valid.

{code:xml} 
<bean id=""jmsConfig"" class=""org.apache.activemq.camel.component.ActiveMQConfiguration"">
  <property name=""connectionFactory"" ref=""jmsConnectionFactory""/>
  <property name=""concurrentConsumers"" value=""1""/>
  <property name=""exceptionListener"" ref=""jmsExceptionListener"" />
</bean>

<bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"" destroy-method=""stop"" >
  <property name=""connectionFactory"" ref=""jmsConnectionFactory"" />
  <property name=""taskExecutor"" ref=""myTaskExecutor"" />
  <property name=""usePooledConnection"" value=""true"" />
  <property name=""configuration"" ref=""jmsConfig""/>
</bean>
{code} 

The patch shows the changes that are necessary to allow this.","JDK5, Windows XP, Camel 1.4-SNAPSHOT",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/08 14:42;akuhtz;ASF.LICENSE.NOT.GRANTED--amq-XXXX.patch;https://issues.apache.org/jira/secure/attachment/12461007/ASF.LICENSE.NOT.GRANTED--amq-XXXX.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-05 18:09:11.55,,,false,,,,,,,,,,,,,,,,,43438,,,Thu Jun 05 18:09:11 UTC 2008,,,,Patch Available,,,,"0|i14btz:",233380,,,,,,,,,,,,,,,,,,,"05/Jun/08 18:09;rajdavies;Fixed by SVN revision 663689",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Null pointer exception when sending expired advisory messages from a Queue,AMQ-1774,12482476,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,05/Jun/08 15:51,05/Jun/08 16:06,30/Jan/20 16:55,05/Jun/08 15:53,5.2.0,,,,,,,5.2.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95903,,,Thu Jun 05 15:53:21 UTC 2008,,,,,,,,"0|i0s0jr:",161565,,,,,,,,,,,,,,,,,,,"05/Jun/08 15:53;rajdavies;Fixed by SVN revision 663644",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Web Admin ""ava.lang.IllegalArgumentException: No JMSDestination parameter specified""",AMQ-1630,12482486,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,comdivisionys,comdivisionys,21/Mar/08 09:00,03/Jun/08 08:35,30/Jan/20 16:55,03/Jun/08 08:35,5.1.0,,,,,,,5.1.0,,,,,,,2,"Go into Web Admin, queue's and either try to create, delete or purge a queue.

Works fine on 5.0.0
Error replicated with latest snapshot: apache-activemq-5.1-20080318.170347-61.tar

HTTP ERROR: 500

No JMSDestination parameter specified

RequestURI=/admin/purgeDestination.action
Caused by:

java.lang.IllegalArgumentException: No JMSDestination parameter specified
	at org.apache.activemq.web.DestinationFacade.getValidDestination(DestinationFacade.java:101)
	at org.apache.activemq.web.DestinationFacade.createDestination(DestinationFacade.java:96)
	at org.apache.activemq.web.controller.PurgeDestination.purgeDestination(PurgeDestination.java:43)
	at org.apache.activemq.web.controller.PurgeDestination.handleRequest(PurgeDestination.java:37)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:875)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:809)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:476)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:431)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1098)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:295)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:361)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)

","CentOS 5.0 - 2.6.18-53.1.14.el5 #1 SMP
JDK 1.5.0_15-b04
Database for persistent store is EnterpriseDB / PostgreSQL
Running on a VMWare ESX Server
",steveyoung,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84806,,,Tue Jun 03 08:35:57 UTC 2008,,,,,,,,"0|i0tsnb:",171950,,,,,,,,,,,,,,,,,,,"03/Jun/08 08:35;comdivisionys;This is issue is no longer in 5.1.0 Final release, so it must have been fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock when TempUsage limit reached,AMQ-1748,12482093,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gholden,gholden,27/May/08 12:34,29/May/08 16:53,30/Jan/20 16:55,29/May/08 16:53,5.0.0,5.1.0,,,,,,5.2.0,,,Broker,,,,0,"If a SystemUsage limit is set on TempUsage, and that limit is reached, that queue enters a state of deadlock where messages need to be removed so new ones can be added, but they can't be removed because the objects are locked.

I have a patch attached to this issue where the synchronization in StoreQueueCursor and FilePendingMessageCursor is reworked to get around this issue.",Tested on Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/May/08 12:34;gholden;ASF.LICENSE.NOT.GRANTED--TempUsageDeadlock.patch;https://issues.apache.org/jira/secure/attachment/12461036/ASF.LICENSE.NOT.GRANTED--TempUsageDeadlock.patch","29/May/08 12:07;gholden;missing-file.patch;https://issues.apache.org/jira/secure/attachment/12461159/missing-file.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-05-27 15:21:45.244,,,false,,,,,,,,,,,,,,,,,38750,,,Thu May 29 12:07:02 UTC 2008,,,,Patch Available,,,,"0|i14bkn:",233338,Unit Test Broken,,,,,,,,,,,,,,,,,,"27/May/08 15:21;rajdavies;Patch applied in SVN  revision 660555","29/May/08 11:28;rajdavies;Fixed by SVN revision 661295","29/May/08 12:07;gholden;I had accidentally left a file out of the previous patch.
I've attached a patch for that missing file, which should take care of the unit test regressions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If InactivityMonitor is inactive, exception notification are not reported",AMQ-1582,12482505,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,antoniogmc,antoniogmc,08/Feb/08 08:56,23/May/08 07:34,30/Jan/20 16:55,23/May/08 07:34,4.1.1,,,,,,,4.1.2,,,Transport,,,,0,"Since it is mantory to use a provider URL like this:

tcp://localhost:61616?wireFormat.maxInactivityDuration=0

In order to avoid the problem described on these issues AMQ-1146 and AMQ-1482 we are starting all our jvm with that maxInactivityDuration value. 
But the problem that appears using this configuration is that when the InactivityMonitor is inactive every exception on the connection is not reported to the jms exception listener. So, it is not posible detecting the lost of the conection. Event if our ActiveMQ broker is dead, our clients are not notified.

We have compile the activemq source code using the pom you provide but using the branch activemq-4.1 (from the branches folder). As your development people has solve this problem in this branch patching the class InactivyMonitor, the version we generated is working properly. Even if we are using the maxInactivityDuraction with the zero value, the exception are reported in the proper way.

The actual issue is tha since Activemq 5.x is not supported by the last version of Geronimo AS 2.0.2 it should be needed an ActiveMQ 4.1 manteniance realese including at least the patch.


","windows 2000, jdk 1.5.0, apache-gernonimo-2.0.2",antoniogmc,rgavlin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-17 19:21:26.327,,,false,,,,,,,,,,,,,,,,,84521,,,Fri May 23 07:34:38 UTC 2008,,,,,,,,"0|i0s1yf:",161793,,,,,,,,,,,,,,,,,,,"17/Apr/08 19:21;yaussy;Please see AMQ-1671, as it may be related.","23/May/08 07:34;antoniogmc;Verified on 4.1.2 revision.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sendFailIfNoSpace only works for MemoryUsage, not disk usage",AMQ-1717,12482457,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,shabino,shabino,09/May/08 22:11,20/May/08 07:02,30/Jan/20 16:55,20/May/08 07:02,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"We have a use case where we do not want to wait for ActiveMQ if allocated disk space is used up.   So, we set sendFailIfNoSpace to true in the SystemUsage object.

Expected: Setting sendFailIfNoSpace should cause an immediate exception when attempting to send a message if StoreUsage is at or above the max allowed.

Actual: ActiveMQ blocks until disk space is available.

Some analysis of the code shows that org.apache.activemq.broker.region.Queue's send method only throws an exception if MemoryUsage is full:

{code}
        if (isProducerFlowControl() && context.isProducerFlowControl() && memoryUsage.isFull()) {
            if (systemUsage.isSendFailIfNoSpace()) {
                throw new javax.jms.ResourceAllocationException(""SystemUsage memory limit reached"");
            }
}
{code}

We worked around the problem with our embedded broker set-up by explicitly calling StoreUsage.isFull() before sending messages.",,shabino,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-05-20 07:02:04.133,,,false,,,,,,,,,,,,,,,,,84792,,,Tue May 20 07:02:04 UTC 2008,,,,,,,,"0|i0s1w7:",161783,,,,,,,,,,,,,,,,,,,"20/May/08 07:02;rajdavies;Fix by SVN revision 658127",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restore the setConnectionFactory() method on the ActiveMQResourceAdapter,AMQ-1696,12482373,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,28/Apr/08 16:55,16/May/08 17:55,30/Jan/20 16:55,16/May/08 17:55,,,,,,,,5.1.0,,,Connector,,,,0,AMQ-765,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95875,,,Fri May 16 17:55:47 UTC 2008,,,,,,,,"0|i14baf:",233292,,,,,,,,,,,,,,,,,,,"28/Apr/08 16:56;chirino;I think AMQ-765 erroneously removed support for that property.","16/May/08 17:55;chirino;This actually made it into the 5.1 release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The activemq-all jar includes the test cases.,AMQ-1723,12482337,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,13/May/08 14:36,16/May/08 17:53,30/Jan/20 16:55,16/May/08 17:53,5.1.0,,,,,,,5.2.0,,,,,,,0,"Due to the recent change to using the shade plugin to generate the uber activemq-all jar, it is now also including the activemq-core test cases which increases the jar size and may also have some other side effects.  To fix this we first need to get the following patch applied to shade get it released and then update our maven build to use the new version of the shade plugin:
http://jira.codehaus.org/browse/MSHADE-34",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84788,,,Fri May 16 17:53:10 UTC 2008,,,,,,,,"0|i0s0q7:",161594,,,,,,,,,,,,,,,,,,,"16/May/08 17:53;chirino;well the shade plugin was not released, but fixed this be removing the test jars from the runtime classpath scope.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate messages and extra network traffic with duplex connections,AMQ-1661,12482347,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mikef,mikef,10/Apr/08 20:20,16/May/08 17:44,30/Jan/20 16:55,16/May/08 17:44,5.1.0,,,,,,,5.2.0,,,Broker,Connector,,,1,"(see attached diagram)

I have two brokers A and B, where A establishes a connection to B with the options: 
duplex=""true"" networkTTL=""3"" dynamicOnly=""true"" 

I have two clients connecting to broker A, and one to B.  One of the clients on A is subscribing to a queue, the other is publishing to it.  The client on B is not using that queue at all.  When the publishing client sends a message, the subscriber receives it as expected.  But if I watch the network with a sniffer, I can see the message being sent to broker B and back again. 

I also set up a topic that all of the clients subscribe to.  If a client on A sends a message to the topic, the client on B receives it normally, but the two clients on A receive the message twice.  I can see with the sniffer that the message is being sent from A to B and back. 

If I change the connection so that it's not duplex (i.e. I set up matching simplex connections on both brokers) all of this unexpected behavior goes away.  In the first example, the messages are no longer forwarded to B since there are no subscribers on that broker.  In the second example, the message is received once by every subscriber. 

I have tested on various 5.1 snapshots up through 4/8/08.",,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Apr/08 20:20;mikef;ASF.LICENSE.NOT.GRANTED--duplex.png;https://issues.apache.org/jira/secure/attachment/12461099/ASF.LICENSE.NOT.GRANTED--duplex.png","15/May/08 22:54;joef;DemandForwardingBridgeSupport.txt;https://issues.apache.org/jira/secure/attachment/12460983/DemandForwardingBridgeSupport.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-05-15 14:49:44.861,,,false,,,,,,,,,,,,,,,,,84802,,,Fri May 16 17:44:53 UTC 2008,,,,,,,,"0|i0s1r3:",161760,,,,,,,,,,,,,,,,,,,"15/May/08 14:49;rajdavies;Fix by SVN revision 656688","15/May/08 22:54;joef;Rob's fix does the trick. However, I think the messages may still be taking a round trip. The attached patch should prevent them from doing so.  ","16/May/08 17:44;rajdavies;Patch applied in SVN revision 657147",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"java.lang.IllegalStateException: Timer already cancelled caused by Exception in thread ""ActiveMQ Scheduler"" java.util.ConcurrentModificationException and ",AMQ-1727,12482338,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gtully,gtully,14/May/08 13:03,16/May/08 08:57,30/Jan/20 16:55,15/May/08 10:53,5.1.0,,,,,,,5.2.0,,,Message Store,,,,0,"stack trace causes timer thread to abort:

Exception in thread ""ActiveMQ Scheduler"" java.util.ConcurrentModificationException
at java.util.HashMap$HashIterator.nextEntry(HashMap.java:841)
at java.util.HashMap$KeyIterator.next(HashMap.java:877)
at java.util.AbstractSet.removeAll(AbstractSet.java:143)
at org.apache.activemq.kaha.impl.async.AsyncDataManager.consolidateDataFilesNotIn(AsyncDataManager.java:404)
at org.apache.activemq.store.amq.AMQPersistenceAdapter.cleanup(AMQPersistenceAdapter.java:415)
at org.apache.activemq.store.amq.AMQPersistenceAdapter$3.run(AMQPersistenceAdapter.java:267)
at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
at java.util.TimerThread.mainLoop(Timer.java:512)
at java.util.TimerThread.run(Timer.java:462)

subsequent timer enqueue fails with:

java.lang.IllegalStateException: Timer already cancelled.
at java.util.Timer.sched(Timer.java:354)
at java.util.Timer.scheduleAtFixedRate(Timer.java:296)
at org.apache.activemq.thread.Scheduler.executePeriodically(Scheduler.java:38)
at org.apache.activemq.kaha.impl.async.AsyncDataManager.start(AsyncDataManager.java:190)
at org.apache.activemq.store.amq.AMQPersistenceAdapter.start(AMQPersistenceAdapter.java:207)
at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1597)
at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1550)
at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:560)
at org.apache.activemq.broker.BrokerService.start(BrokerService.java:455)

Problem identified in this diff, the inUse set needs to be copied as it may be modified in parallel to the cleanup.

Index: activemq-core/src/main/java/org/apache/activemq/store/amq/AMQPersistenceAdapter.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/store/amq/AMQPersistenceAdapter.java        (revision 655936)
+++ activemq-core/src/main/java/org/apache/activemq/store/amq/AMQPersistenceAdapter.java        (working copy)
@@ -411,7 +411,7 @@
             }
             Integer lastDataFile = asyncDataManager.getCurrentDataFileId();
             inProgress.add(lastDataFile);
-            Set<Integer> inUse = referenceStoreAdapter.getReferenceFileIdsInUse();
+            Set<Integer> inUse = new HashSet<Integer>(referenceStoreAdapter.getReferenceFileIdsInUse());
             asyncDataManager.consolidateDataFilesNotIn(inUse, inProgress);
         } catch (IOException e) {
             LOG.error(""Could not cleanup data files: "" + e, e);",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/May/08 13:07;gtully;AMQ-1727.patch;https://issues.apache.org/jira/secure/attachment/12461005/AMQ-1727.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-05-15 10:53:52.249,,,false,,,,,,,,,,,,,,,,,72473,,,Thu May 15 10:53:52 UTC 2008,,,,Patch Available,,,,"0|i0tswf:",171991,,,,,,,,,,,,,,,,,,,"14/May/08 13:07;gtully;a trivial fix that ensures that the Set of inUse ids will not be modified while it is being traversed to remove entries from the complete in use set.","15/May/08 10:53;rajdavies;Patch applied by SVN revision 656582",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of Brokers Memory Leak Due to Race Condition,AMQ-1709,12482191,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,hoorner,hoorner,02/May/08 17:57,15/May/08 11:58,30/Jan/20 16:55,15/May/08 11:58,4.1.2,5.0.0,,,,,,5.2.0,,,Broker,Transport,,,0,"When you a a network of brokers configuration with at least 3 brokers, such as:

<broker brokerName=""A"" persistent=""false"" ...
...
<transportConnector name=""AListener"" uri=""tcp://localhost:61610""/>
...
<networkConnector name=""BConnector"" uri=""static:(tcp://localhost:61620)""/>
<networkConnector name=""CConnector"" uri=""static:(tcp://localhost:61630)""/>

with the other brokers have a similar configuration.
Then, if you have subscribers trying to connect to all of the brokers you can have a race condition at start up where the transports accept connections from subscribers before the network connectors are initialized.  In BrokerService.startAllConnectors(), the transports are started first.  Then the NetworkConnectors.  As part of starting the network connectors, their constructors takes a collection obtained by calling getBroker().getDurableDestinations().  Normally this list would be empty.  However, if clients connect before this is called, a list is returned for each topic subscribed to.  Then, instead of creating standard TopicSubscriptions for the network connector, DurableTopicSubscriptions are created.  I'm not sure if this really should be a problem, but it is because SimpleDispatchPolicy, in the process of iterating through the DurableTopicSubscriptions, causes messages to be queued up for prefetch without clearing all of the references (for each pass through it looks like three references are registered and only two are cleared.  This becomes a memory leak.  In the logs you see a message saying the PrefetchLimit was reached and then you start seeing logs about memory usage increasing until it gets to 100% and then everything stops.  

To reproduce this, create a network of brokers configuration of at least 3 brokers -- the more you have the more likely you are to hit this without a lot of tries so I suggest a bunch.  Start all brokers.  Establish a publisher on broker A using failover://(tcp://localhost:61610) then establish a bunch of subscribers on all the brokers using a similar configuration, i.e, failover://(tcp://localhost:61610), failover://(tcp://localhost:61620).  The more you have on broker 'A' the better since you are trying to reproduce the race condition.  You want the others up so that the other brokers expect messages to be passed to them.    Once everybody is up and happy, kill broker A and restart it.  If you do that enough times, you will hit the race condition and the memory leak will start.    You can also put a break point in BrokerService.startAllConnectors() after the transports are started but before the network connectors are started.  That'll give clients to connect to the transport threads before you tell the VM to continue.

I found it an easy fix to store the durable destination list in a local variable before starting the transports and passing that to the network connectors instead of separate calls..  I'm not sure if there are 'normal' ways for that list to be anything other than empty.  If not, you could just pass an empty set to the network connectors, but suspect there are legitimate configurations that may need this to requested.  If so, this memory leak would likely occur in these cases, too.   

I ran into this in 4.1.2.  I haven't tested 5.0 since our attempts to switch to 5.0 were met with failure due to the number of bugs in 5.0 (already reported by others).  Looking at 5.0.0 source, the race condition is still there in BrokerService.startAllConnectors() so I suspect the memory leak is there as well.
",,antoniogmc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-05-15 11:58:40.825,,,false,,,,,,,,,,,,,,,,,84590,,,Thu May 15 11:58:40 UTC 2008,,,,,,,,"0|i14bjr:",233334,,,,,,,,,,,,,,,,,,,"15/May/08 11:58;rajdavies;Fixed by SVN revision 656601",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The bin/linux-*/activemq script is missing.,AMQ-1728,12482200,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,14/May/08 18:06,14/May/08 18:10,30/Jan/20 16:55,14/May/08 18:10,5.1.0,,,,,,,5.2.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84786,,,Wed May 14 18:10:07 UTC 2008,,,,,,,,"0|i1820n:",255129,,,,,,,,,,,,,,,,,,,"14/May/08 18:10;chirino;Fixed in rev 656343",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Small window in wakeup logic for PooledTaskRunner - task can get executed in parallell,AMQ-1686,12482518,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,gtully,gtully,24/Apr/08 16:29,12/May/08 09:54,30/Jan/20 16:55,24/Apr/08 17:01,5.0.0,,,,,,,5.1.0,,,Broker,,,,0,"org.apache.activemq.broker.region.cursors.CursorDurableTest fails on windows sometimes with the error:

Exception in thread ""Persistence Adaptor Task"" java.lang.NullPointerException
        at org.apache.activemq.store.amq.AMQMessageStore$4.execute(AMQMessageStore.java:381)
        at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:44)
        at org.apache.activemq.store.amq.AMQMessageStore.doAsyncWrite(AMQMessageStore.java:374)
        at org.apache.activemq.store.amq.AMQMessageStore.asyncWrite(AMQMessageStore.java:341)
        at org.apache.activemq.store.amq.AMQMessageStore$1.iterate(AMQMessageStore.java:95)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 303.672 sec <<< FAILURE!

The problem appears to be in the interaction between wakup and runTask in PooledTaskRunner
iterating is set to false in a finally  and queued is checked in a separate sync block.
if wakeup is called in this window, it can set queued and find iterating false so it will execute, and runTask will find queued true and it too will execute.

the fix is to include the queued check in the finally block so that iterating and queued are checked at the same time. I will attach a patch with this fix.
I attempted to reproduce this problem with a unit test but I did not have any real success. the window is quite small. I will include the unit test in case it can be improved upon.

chirino merged a fix yesterday that addresses the symptom of this issue in a different way,
http://svn.apache.org/viewvc?view=rev&revision=650956

The added synchronisation means that parallel calls by the PooledTaskRunner.asyncWrite are serialised on the method access.
This fix addresses the route cause and can negate the need for the synchronisation.

fyi: In the test, the paralell calls can come from flush() and from the asyncWrite task.
",windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Apr/08 16:31;gtully;AMQ-1689.patch;https://issues.apache.org/jira/secure/attachment/12461073/AMQ-1689.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-24 17:01:22.642,,,false,,,,,,,,,,,,,,,,,84612,,,Thu Apr 24 17:01:22 UTC 2008,,,,Patch Available,,,,"0|i0tsvr:",171988,,,,,,,,,,,,,,,,,,,"24/Apr/08 16:31;gtully;the test case inclued does not actually reproduce the problem, it comes close but the window to check paralell access is too small. Maybe someone else can improve on it.","24/Apr/08 17:01;chirino;patch applied thx!

rev 651316",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock between VMTransport and QueueThread,AMQ-1705,12482470,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,cw_krebs,cw_krebs,30/Apr/08 15:48,01/May/08 06:33,30/Jan/20 16:55,01/May/08 06:33,5.1.0,,,,,,,5.2.0,,,Transport,,,,0,"After restarting the central broker in a simple network of brokers, which consists of one central  standalone broker and multiple embedded broker, each intercepting one jms consumer, all producers run into a deadlock.

""VMTransport"" daemon prio=3 tid=0x093bd000 nid=0x901 waiting for monitor entry [0xa30d5000..0xa30d5af0]
   java.lang.Thread.State: BLOCKED (on object monitor)
        at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:450)
        - waiting to lock <0xdb314578> (a java.lang.Object)
        at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:210)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:265)
        - locked <0xaf37ca60> (a java.lang.Object)
        - locked <0xdb0c36f0> (a java.lang.Object)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:380)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:92)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:529)

""QueueThread:queue://de.gameduell.service.user.UserCache.MessageQueue"" daemon prio=3 tid=0x086b8000 nid=0x25 waiting for monitor entry [0xa2fdf000..0xa2fdf8f
0]
   java.lang.Thread.State: BLOCKED (on object monitor)
        at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:367)
        - waiting to lock <0xaf37ca60> (a java.lang.Object)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:332)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:125)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:132)
        at org.apache.activemq.util.BrokerSupport.resend(BrokerSupport.java:56)
        at org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(RegionBroker.java:712)
        at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:257)
        at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:257)
        at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:257)
        at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:270)
        at org.apache.activemq.broker.region.RegionBroker.messageExpired(RegionBroker.java:679)
        at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:491)
        - locked <0xdb314578> (a java.lang.Object)
        at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:144)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:929)
        - locked <0xaf905fc8> (a org.apache.activemq.broker.region.Queue$2)
        at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
        at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)

the full jstack output and bot broker configs are attached.
activemq.xml is the config of the central broker.
activemq-embedded.xml is the config of the embbed one.
","Active MQ 5.1.0-RC2
java version ""1.6.0_04""
Java(TM) SE Runtime Environment (build 1.6.0_04-b12)
Java HotSpot(TM) Server VM (build 10.0-b19, mixed mode)
Solaris 10",rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Apr/08 15:48;cw_krebs;ASF.LICENSE.NOT.GRANTED--activemq-embedded.xml;https://issues.apache.org/jira/secure/attachment/12461002/ASF.LICENSE.NOT.GRANTED--activemq-embedded.xml","30/Apr/08 15:48;cw_krebs;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460981/ASF.LICENSE.NOT.GRANTED--activemq.xml","30/Apr/08 15:48;cw_krebs;ASF.LICENSE.NOT.GRANTED--jstack.log;https://issues.apache.org/jira/secure/attachment/12461074/ASF.LICENSE.NOT.GRANTED--jstack.log",,,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-05-01 06:33:21.349,,,false,,,,,,,,,,,,,,,,,84795,,,Thu May 01 06:33:21 UTC 2008,,,,,,,,"0|i0s1xb:",161788,,,,,,,,,,,,,,,,,,,"01/May/08 06:33;rajdavies;Fixed by SVN revision 652438",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ Threads prevent clean jvm termination,AMQ-1698,12482204,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,dominictulley,dominictulley,29/Apr/08 09:12,30/Apr/08 06:47,30/Jan/20 16:55,30/Apr/08 06:47,5.0.0,,,,,,,5.2.0,,,JMS client,,,,0,"A java process using the AMQ client and connecting to a broker will end up with a couple of threads running called ""InactivityMonitor WriteCheck"" and ""InactivityMonitor ReadCheck"".

When the main jvm thread finishes and the jvm tries to exit, these two threads have not stopped running and, because they are not daemon threads, the jvm is not able to exit.  The process ends up hanging - mostly shut down but not quite.

This is easily reproduced with the most trivial of messaging code (See below) which will not terminate.
Changing the creation of these two threads (which arise from the instantiation of Timers really) to make them daemons resolves the problem.

Sample Code
-------------------

public static void main(String [] args)
{
   ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("""","""",""tcp://localhost:61616"");
   Connection connection = connectionFactory.createConnection();
   connection.start();

   // Create the session
   Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
   Destination destination = session.createQueue(""TEST_QUEUE"");

   // Create the producer.
   MessageProducer producer = session.createProducer(destination);
   producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);

   TextMessage message = session.createTextMessage(""Hello"");
   producer.send(message);
          
   producer.close();
   session.close();
   connection.close();
}",Any,dominictulley,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-30 06:47:05.687,,,false,,,,,,,,,,,,,,,,,84611,,,Wed Apr 30 06:47:05 UTC 2008,,,,,,,,"0|i0s1kv:",161732,,,,,,,,,,,,,,,,,,,"30/Apr/08 06:47;rajdavies;Fixed by SVN revision 652303",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DefaultDatabaseLocker causes Oracle to throw an exception ""maximum open cursors exceeded"" under heavy load",AMQ-1702,12482095,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,30/Apr/08 06:44,30/Apr/08 06:45,30/Jan/20 16:55,30/Apr/08 06:45,5.0.0,,,,,,,5.2.0,,,Message Store,,,,0,"The API document for the java.sql.Statement class (http://java.sun.com/j2se/1.4.2/docs/api/java/sql/Statement.html#close()) says that statement objects are automatically closed during garbage collection, however, under heavy load (i.e. for an application that is processing multiple messages per second) you will quickly run out of cursors even before garbage collection gets to reclaiming prepared statements. Also any application that deals with huge volume is going to use a connection pool that also pools the statements, which means that the statement you created are referenced by the pool, thus they won't be garbage collected and closed. Just like the connection.close triggers the connection to be marked as available in the pool, statement.close will trigger the statement to be available in the pool for whoever needs a statement for this connection.
As a result of running out of statements, DefaultDatabaseLocker causes Oracle to throw an exception ""maximum open cursors exceeded"". And the broker looses the DB lock and shuts down.

One solution would be to add a finally block onto the DefaultDatabaseLocker.keepAlive() method to close statement explicitly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84609,,,Wed Apr 30 06:45:29 UTC 2008,,,,,,,,"0|i14bu7:",233381,,,,,,,,,,,,,,,,,,,"30/Apr/08 06:45;rajdavies;Fixed by SVN revision 652302",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak when creating large numbers of TemporaryQueues (Log4J related),AMQ-1681,12482383,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,gregory.mostizky,gregory.mostizky,23/Apr/08 11:19,24/Apr/08 15:59,30/Jan/20 16:55,24/Apr/08 15:59,5.0.0,,,,,,,5.1.0,,,Broker,,,,0,"When using an embedded broker and using Log4J, there is a memory leak in the broker for each new TemporaryQueue created.

This seems to be the offending code (taken from 5.0.0-release source):

org.apache.activemq.broker.region.Queue:

    public Queue(Broker broker, ActiveMQDestination destination, final SystemUsage systemUsage, MessageStore store, DestinationStatistics parentStats,
                 TaskRunnerFactory taskFactory, Store tmpStore) throws Exception {

        ... skipped....

        // let's copy the enabled property from the parent DestinationStatistics
        this.destinationStatistics.setEnabled(parentStats.isEnabled());
        destinationStatistics.setParent(parentStats);
        this.log = LogFactory.getLog(getClass().getName() + ""."" + destination.getPhysicalName());
    }

What happens here is that for each new TemporaryQueue created a new log instance is created with rather large string as it's name.
This instance is unique for each new TemoraryQueue and because of the way Log4J handles those instances, it is never removed once initalized.

We hit this bug when we were testing performance together with Spring-based synchronous JMS API, which is implemented in such a way that 
for each new message it creates a new TemporaryQueue. We got OutOfMemory after about 40000 messages with 128M heap.

I am not sure what this special log instance is used for, but assuming it's not very important, it will be easy to fix this bug with just using some predefined log name always.",Embedded broker using Log4J,gregory.mostizky,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-24 15:59:37.158,,,false,,,,,,,,,,,,,,,,,84614,,,Thu Apr 24 15:59:37 UTC 2008,,,,,,,,"0|i0s1sv:",161768,,,,,,,,,,,,,,,,,,,"24/Apr/08 15:59;chirino;This also occurred with temp topics. 


Fixed in revision 651300",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-admin start does not work on windows.,AMQ-1685,12482364,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,24/Apr/08 15:04,24/Apr/08 15:21,30/Jan/20 16:55,24/Apr/08 15:21,,,,,,,,5.1.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95868,,,Thu Apr 24 15:21:55 UTC 2008,,,,,,,,"0|i18227:",255136,,,,,,,,,,,,,,,,,,,"24/Apr/08 15:21;chirino;fixed in rev 651288 and 651289",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InactivityMonitor issue with regards to exceptions on a connection,AMQ-1671,12482343,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yaussy,yaussy,17/Apr/08 19:10,24/Apr/08 13:09,30/Jan/20 16:55,24/Apr/08 13:09,5.1.0,5.2.0,,,,,,5.1.0,,,Broker,Connector,Transport,,2,"I'm using the 4/16 5.2 SNAPSHOT code.

I'm reporting a new issue here, but this may be related or same as: AMQ-1482, and AMQ-1582.

The issue is that if there is an exception on a connection, such as the process goes away (could be an AMQBroker going away or a client process), the InactivityMonitor is not properly reporting this.  If maxInactivityDuration is set to 0, and the client process goes away, the AMQBroker never cleans up anything for this client, and the client can never reconnect (it will get InvalidClientID exceptions).  If maxInactivityDuration is non-zero, the connection will eventually get cleaned up when the inactivity timer pops.

The issue turns out to be this line of code in InactivityMonitor::onException

        if (!failed.compareAndSet(false,true)) {

This means that when the connection goes away, this call returns true, but the if statement is negating that so the next two lines of code in onException are never executed at this time.  Only later (if maxInactivityDuration is non-zero) will this check result in true, such that the next two lines in onException are called.

I think that this is just an issue in misinterpreting what AtomicBoolean will return for the compareAndSet method?  Assuming this to be the case, I changed this line to take out the ""!"".  Now everything works exactly as it should.

I've attached the changed source.",,antoniogmc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Apr/08 19:10;yaussy;ASF.LICENSE.NOT.GRANTED--InactivityMonitor.java;https://issues.apache.org/jira/secure/attachment/12460933/ASF.LICENSE.NOT.GRANTED--InactivityMonitor.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-24 11:53:07.174,,,false,,,,,,,,,,,,,,,,,84798,,,Thu Apr 24 11:53:07 UTC 2008,,,,Patch Available,,,,"0|i0s1qv:",161759,,,,,,,,,,,,,,,,,,,"24/Apr/08 11:53;rajdavies;this really looks like a typo - thanks for finding it Kevin!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mirror Topics for temorary queues,AMQ-1654,12482308,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vikdhawan,vikdhawan,09/Apr/08 16:11,23/Apr/08 07:09,30/Jan/20 16:55,23/Apr/08 07:09,5.0.0,,,,,,,5.2.0,,,Broker,,,,0,"when Mirror queues are enabled AMQ is creating mirror queues for all the temp queues created to fulfill the transactions. But when temp queues are removed by the broker because the transaction is complete, the Mirror queues/topics are still there, they should be removed as well. 

There should be a configuration setting to turn on/ turn off mirror topic/queues support for temp queues. 

There got to be some overhead in AMQ to maintain a lot of mirror queues for temporary queues where there are millions of transaction.  ",AMQ 5.0 / 5.1 SNAPSHOT on Solaris 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-23 07:09:46.763,,,false,,,,,,,,,,,,,,,,,84621,,,Wed Apr 23 07:09:46 UTC 2008,,,,,,,,"0|i14bjz:",233335,,,,,,,,,,,,,,,,,,,"23/Apr/08 07:09;rajdavies;Added  a useTempMirroredQueues (default=true) flag on the Broker in SVN revision 650766
Memory leak already fixed by: https://issues.apache.org/activemq/browse/AMQ-1672",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX methods exposed for a Queue dont work right,AMQ-1678,12482335,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vikdhawan,vikdhawan,21/Apr/08 17:56,23/Apr/08 06:55,30/Jan/20 16:55,23/Apr/08 06:55,5.0.0,5.1.0,,,,,,5.2.0,,,Broker,,,,0,"I noticed that JMX methods exposed from AMQ5.0 are not working properly. some times able to move/copy messages and sometime don't. its really unreliable. QueueBrowser is not working properly either, it returns no messages when u browse the queue even if messages are there in the queue. ",AMQ 5.0 /5.1 on Solaris 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-23 06:55:53.563,,,false,,,,,,,,,,,,,,,,,84615,,,Wed Apr 23 06:55:53 UTC 2008,,,,,,,,"0|i14bhj:",233324,,,,,,,,,,,,,,,,,,,"23/Apr/08 06:55;rajdavies;Fixed by SVN revision 650763",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ Journal data files never deleted - exception in consolidateDataFilesNotIn(),AMQ-1669,12482316,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,16/Apr/08 22:32,22/Apr/08 17:21,30/Jan/20 16:55,16/Apr/08 22:34,5.0.0,,,,,,,5.1.0,,,Message Store,,,,0,"see: http://www.nabble.com/AMQ-Journal-data-files-never-deleted-to16728103s2354.html#a16728103

Exception is:

Exception in thread ""ActiveMQ Scheduler"" java.util.ConcurrentModificationException
at java.util.HashMap$HashIterator.nextEntry(HashMap.java:787)
at java.util.HashMap$KeyIterator.next(HashMap.java:823)
at java.util.AbstractSet.removeAll(AbstractSet.java:143)
at org.apache.activemq.kaha.impl.async.AsyncDataManager.consolidateDataFilesNotIn(AsyncDataManager.java:404)
at org.apache.activemq.store.amq.AMQPersistenceAdapter.cleanup(AMQPersistenceAdapter.java:417)
at org.apache.activemq.store.amq.AMQPersistenceAdapter$3.run(AMQPersistenceAdapter.java:269)
at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
at java.util.TimerThread.mainLoop(Timer.java:512)
at java.util.TimerThread.run(Timer.java:462) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84618,,,Wed Apr 16 22:34:05 UTC 2008,,,,,,,,"0|i14bcf:",233301,,,,,,,,,,,,,,,,,,,"16/Apr/08 22:34;rajdavies;Fixed by SVN revision 648887",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improper handling of container restrictions in creation of sessions,AMQ-1618,12482390,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,manucet,manucet,12/Mar/08 10:44,22/Apr/08 17:21,30/Jan/20 16:55,14/Mar/08 20:23,4.1.1,5.0.0,,,,,,5.1.0,,,Connector,Geronimo Integration,,,1,"In the getServerSession() method of org.apache.activemq.ra.ServerSessionPoolImpl there is an issue with the code block given below

 ServerSessionImpl ss = createServerSessionImpl();
            // We may not be able to create a session due to the container
            // restricting us.
            if (ss == null) {
                if (idleSessions.size() == 0) {
                    throw new JMSException(""Endpoint factory did not allows to any endpoints."");
                }

                return getExistingServerSession();
            }

If the container restricts the creation of a session then messages should be queued to an existing session. So the check should be 

                if (activeSessions.size() == 0) {
                    throw new JMSException(""Endpoint factory did not allows to any endpoints."");
                }

instead of the one above

",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-03-14 06:38:58.447,,,false,,,,,,,,,,,,,,,,,84516,,,Fri Mar 14 20:23:52 UTC 2008,,,,,,,,"0|i0tt1r:",172015,,,,,,,,,,,,,,,,,,,"12/Mar/08 10:48;manucet;Thanks to David Jencks for finding the issue and its soln","14/Mar/08 06:38;djencks;Fix for this particular problem committed in trunk rev 637004 and branches/4.1 rev 637006.  However the code appears to be seriously not-thread-safe, so I'm considering what other ways this kind of problem may arise before closing issue.","14/Mar/08 20:23;djencks;Original bug fixed, and synchronization looks ok to me now.

RDavies made initial sync fixes in r637028 in trunk
I refined this in r637218 trunk and 637246 4.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ message store throws IllegalStateException/IndexOutOfBoundsExceptions (5.1),AMQ-1667,12482298,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jmerryman@yodle.com,jmerryman@yodle.com,16/Apr/08 18:22,22/Apr/08 06:00,30/Jan/20 16:55,22/Apr/08 06:00,5.1.0,,,,,,,5.1.0,,,,,,,0,"In 5.1RC3, when doing a durable subscription test, only about 100~ messages get sent, then IndexOutOfBoundsExceptions start to occur when messages are sent. Only the first 100~ messages are received by the first durable subscriber. 
I can reproduce this error reliably. I will work on packaging a test program to demonstrate this error.

Stacktrace: 

2008-04-16 14:09:32,357 [topic://testSub] WARN  AMQMessageStore                - Message could not be added to long term store: Trying to access an inactive page: 999424
java.lang.IllegalStateException: Trying to access an inactive page: 999424
	at org.apache.activemq.kaha.impl.index.hash.HashIndex.lookupPage(HashIndex.java:283)
	at org.apache.activemq.kaha.impl.index.hash.HashPageInfo.begin(HashPageInfo.java:95)
	at org.apache.activemq.kaha.impl.index.hash.HashBin.getRetrievePage(HashBin.java:260)
	at org.apache.activemq.kaha.impl.index.hash.HashBin.getHashEntry(HashBin.java:236)
	at org.apache.activemq.kaha.impl.index.hash.HashBin.remove(HashBin.java:164)
	at org.apache.activemq.kaha.impl.index.hash.HashIndex.remove(HashIndex.java:246)
	at org.apache.activemq.kaha.impl.container.MapContainerImpl.remove(MapContainerImpl.java:324)
	at org.apache.activemq.kaha.impl.container.MapContainerImpl.place(MapContainerImpl.java:401)
	at org.apache.activemq.store.kahadaptor.TopicSubContainer.add(TopicSubContainer.java:62)
	at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.addMessageReference(KahaTopicReferenceStore.java:95)
	at org.apache.activemq.store.amq.AMQMessageStore$4.execute(AMQMessageStore.java:385)
	at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:44)
	at org.apache.activemq.store.amq.AMQMessageStore.doAsyncWrite(AMQMessageStore.java:374)
	at org.apache.activemq.store.amq.AMQMessageStore.asyncWrite(AMQMessageStore.java:341)
	at org.apache.activemq.store.amq.AMQMessageStore$1.iterate(AMQMessageStore.java:95)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)


Later stacktraces look like this:
2008-04-16 14:09:33,140 [topic://testSub] WARN  AMQMessageStore                - Message could not be added to long term store: Index: 1, Size: 1
java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.ArrayList.RangeCheck(ArrayList.java:547)
	at java.util.ArrayList.get(ArrayList.java:322)
	at org.apache.activemq.kaha.impl.index.hash.HashPage.getHashEntry(HashPage.java:194)
	at org.apache.activemq.kaha.impl.index.hash.HashPageInfo.getHashEntry(HashPageInfo.java:77)
	at org.apache.activemq.kaha.impl.index.hash.HashBin.getHashEntry(HashBin.java:239)
	at org.apache.activemq.kaha.impl.index.hash.HashBin.remove(HashBin.java:164)
	at org.apache.activemq.kaha.impl.index.hash.HashIndex.remove(HashIndex.java:246)
	at org.apache.activemq.kaha.impl.container.MapContainerImpl.remove(MapContainerImpl.java:324)
	at org.apache.activemq.kaha.impl.container.MapContainerImpl.place(MapContainerImpl.java:401)
	at org.apache.activemq.store.kahadaptor.TopicSubContainer.add(TopicSubContainer.java:62)
	at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.addMessageReference(KahaTopicReferenceStore.java:95)
	at org.apache.activemq.store.amq.AMQMessageStore$4.execute(AMQMessageStore.java:385)
	at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:44)
	at org.apache.activemq.store.amq.AMQMessageStore.doAsyncWrite(AMQMessageStore.java:374)
	at org.apache.activemq.store.amq.AMQMessageStore.asyncWrite(AMQMessageStore.java:341)
	at org.apache.activemq.store.amq.AMQMessageStore$1.iterate(AMQMessageStore.java:95)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
","Windows XP
java version ""1.6.0_04""
Java(TM) SE Runtime Environment (build 1.6.0_04-b12)
Java HotSpot(TM) Client VM (build 10.0-b19, mixed mode, sharing)",jmerryman@yodle.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Apr/08 18:43;jmerryman@yodle.com;AMQ-1667-Tests.jar;https://issues.apache.org/jira/secure/attachment/12460906/AMQ-1667-Tests.jar",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-22 06:00:51.073,,,false,,,,,,,,,,,,,,,,,84799,,,Tue Apr 22 06:00:51 UTC 2008,,,,,,,,"0|i0s1pr:",161754,,,,,,,,,,,,,,,,,,,"16/Apr/08 18:22;jmerryman@yodle.com;Similar to AMQ-1527, but occurs in 5.1 RC3","16/Apr/08 18:43;jmerryman@yodle.com;Test program attached w/source - main program is com.yodle.util.jmsmonitor.stresstest.RunDurableSubscriptionTest
It takes one argument, the JMS broker URL - i.e. tcp://localhost:61616
This needs spring and activemq libraries to be on the classpath in order to run.","22/Apr/08 06:00;rajdavies;Fixed by SVN revision 650386",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mirror Queues on Temp Queues is causing Memory leak,AMQ-1672,12482143,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vikdhawan,vikdhawan,17/Apr/08 22:18,21/Apr/08 13:40,30/Jan/20 16:55,21/Apr/08 13:40,4.1.2,5.0.0,,,,,,5.1.0,,,Broker,,,,0,"Having Mirror queues turned on AMQ, creates the mirror queue for all the TEMP queues gets created. TEMP queues gets destroyed when the transaction is over but Mirror queues never goes away. after a long test (creating around 100K transactions) MIRROR queues caused memory problem in AMQ. TEMP queues were all removed appropriately. When looked at the JConsole there are all those MIRROR queue treads for the TEMP queues in the wait state. ",AMQ 4.x/5.x on Solaris 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-21 13:40:21.819,,,false,,,,,,,,,,,,,,,,,84591,,,Mon Apr 21 13:40:21 UTC 2008,,,,,,,,"0|i14bfr:",233316,,,,,,,,,,,,,,,,,,,"21/Apr/08 13:40;rajdavies;Fixed by svn revision 650143",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default Persistence fails / MDBs stop processing in JBoss 4.2.2.GA,AMQ-1674,12482198,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,a2wes,a2wes,18/Apr/08 17:45,18/Apr/08 18:20,30/Jan/20 16:55,18/Apr/08 18:20,5.0.0,5.1.0,5.2.0,,,,,5.1.0,,,Message Store,,,,0,"After a number of messages are delivered, the following error is encountered, and the consumer stops consuming (with variable IDs) :
14:37:02,825 ERROR [RecoveryListenerAdapter] Message id ID:servername-01-48018-1201289318807-2:430:1:1:1 could not be recovered from the data store!

This can be reproduced by building the jar via ant from the included tar.gz with exploded rar and jms data source. In order to produce, deploy rar,jar, and data source, and post some large number (>100000 works for me reliably) as a text message to PostingQueue. and it will post that many object messages to the ReportLogMDBQueue, which will eventually produce the error.","Linux 2.6
JBoss 4.2.2.GA
default server directory
embedded broker with all defaults (empty broker element with useJmx=""true"")",a2wes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,"18/Apr/08 17:50;a2wes;amqerrejb.tar.gz;https://issues.apache.org/jira/secure/attachment/12461072/amqerrejb.tar.gz","18/Apr/08 17:50;a2wes;patchfile.txt;https://issues.apache.org/jira/secure/attachment/12460979/patchfile.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-04-18 18:20:36.691,,,false,,,,,,,,,,,,,,,,,84617,,,Fri Apr 18 18:20:36 UTC 2008,,,,Patch Available,,,,"0|i0s1kn:",161731,,,,,,,,,,,,,,,,,,,"18/Apr/08 17:50;a2wes;Source that generates error. Must be deployed as an MDB inside Jboss.","18/Apr/08 17:50;a2wes;Suggested patch","18/Apr/08 18:20;rajdavies;Patch applied in SVN revision 649643",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Element Order in the XSD do not match the order required by ActiveMQ,AMQ-1670,12482166,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,17/Apr/08 15:49,17/Apr/08 18:11,30/Jan/20 16:55,17/Apr/08 18:11,,,,,,,,5.1.0,,,Broker,,,,0,"The transports element in the activemq configuration must be one of the last element configured..  Some elements if specified after it, it will be ignored.  The problem is that the xbean generated xsd orders the elements alphabetically.

We either need fix the xsd to mach the requirement or remove the restriction that the transport element be one of the last elements defined.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95862,,,Thu Apr 17 18:11:16 UTC 2008,,,,,,,,"0|i0s0vj:",161618,,,,,,,,,,,,,,,,,,,"17/Apr/08 18:11;chirino;I have just commited a fix that should allow the transports to get added at any time during the configuration of the broker service.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
connection URI options not applied to both sides of VM transport,AMQ-1666,12482213,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,proyal,proyal,16/Apr/08 17:26,17/Apr/08 17:08,30/Jan/20 16:55,17/Apr/08 17:08,5.1.0,,,,,,,5.1.0,,,Transport,,,,0,"when connecting over the VM transport, specifying vm://localhost?async=false results in the 'async' flag being sent to false on one side of the transport only.

the supplied patch ensures that all options are applied to the peer as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Apr/08 17:26;proyal;ASF.LICENSE.NOT.GRANTED--options-to-both-sides.diff;https://issues.apache.org/jira/secure/attachment/12461084/ASF.LICENSE.NOT.GRANTED--options-to-both-sides.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-16 19:57:56.816,,,false,,,,,,,,,,,,,,,,,84800,,,Thu Apr 17 17:08:44 UTC 2008,,,,Patch Available,,,,"0|i0s0yf:",161631,,,,,,,,,,,,,,,,,,,"16/Apr/08 19:57;hadrian;Awsome.
If you attach a patch when you create the jira, it does not allow you to grant license for inclusion to apache (and the default is No).  Could you please reattach and grant license.  Thanks!","16/Apr/08 20:30;proyal;i grant a license to apache (i'm a committer and asf member)","17/Apr/08 17:08;rajdavies;Patch applied by SVN revision 649191",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SSL Transport configured in wantClientAuth mode never asks for the client certificate during the SSL Handshake,AMQ-1659,12482453,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,ericdwhite,ericdwhite,10/Apr/08 09:15,11/Apr/08 08:21,30/Jan/20 16:55,10/Apr/08 19:42,4.1.1,5.0.0,,,,,,4.1.2,5.1.0,,Transport,,,,0,"See: http://java.sun.com/javase/6/docs/api/javax/net/ssl/SSLServerSocket.html#setWantClientAuth(boolean)

""
A socket's client authentication setting is one of the following:

    * client authentication required
    * client authentication requested
    * no client authentication desired 
""

In the API it indicates that if you call either setWantClientAuth, or setNeedClientAuth it will override the call to the other.

Therefor I believe the following code only allows for ActiveMQ to be in two states:
* Client Authentication Required (needClientAuth==true)
* No client Authentication Desired (needClientAuth==false)

activemq-core/src/main/java/org/apache/activemq/transport/tcp/SslTransportServer.java


As setWantClientAuth is overridden by setNeedClientAuth.
public void bind() throws IOException {
  super.bind();
  ((SSLServerSocket)this.serverSocket).setWantClientAuth(wantClientAuth);
  ((SSLServerSocket)this.serverSocket).setNeedClientAuth(needClientAuth);
}

I believe this the same issue as this Jetty issue: http://jira.codehaus.org/browse/JETTY-86","I think this is for all environments, it may be JDK dependent though.

I tested on:
Linux  2.6.20-gentoo-r7
java version ""1.6.0""
Java(TM) SE Runtime Environment (build 1.6.0-b105)
Java HotSpot(TM) 64-Bit Server VM (build 1.6.0-b105, mixed mode)",ericdwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,172800,172800,,0%,172800,172800,,,,,,,,,,,,,"10/Apr/08 12:45;ericdwhite;amq-411-complex-version.patch;https://issues.apache.org/jira/secure/attachment/12461029/amq-411-complex-version.patch","10/Apr/08 12:47;ericdwhite;amq-411-simple-version.patch;https://issues.apache.org/jira/secure/attachment/12460927/amq-411-simple-version.patch","10/Apr/08 12:48;ericdwhite;amq-500-complex-version.patch;https://issues.apache.org/jira/secure/attachment/12461071/amq-500-complex-version.patch","10/Apr/08 12:49;ericdwhite;amq-500-simple-version.patch;https://issues.apache.org/jira/secure/attachment/12460905/amq-500-simple-version.patch",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2008-04-10 17:07:50.536,,,false,,,,,,,,,,,,,,,,,84513,,,Fri Apr 11 08:21:43 UTC 2008,,,,,,,,"0|i0tsmv:",171948,,,,,,,,,,,,,,,,,,,"10/Apr/08 12:36;ericdwhite;{noformat} 
activemq-core/src/main/java/org/apache/activemq/transport/tcp/SslTransportServer.java
public void bind() throws IOException { 
    super.bind();
    ((SSLServerSocket)this.serverSocket).setWantClientAuth(wantClientAuth);
    ((SSLServerSocket)this.serverSocket).setNeedClientAuth(needClientAuth); <--- This overrides setWantClientAuth
}
{noformat} ","10/Apr/08 12:45;ericdwhite;https://issues.apache.org/activemq/secure/attachment/16326/amq-411-complex-version.patch

This file is for ActiveMQ 4.1.1

I have tested this file locally and it works for me.  

In this version Boolean properties are used instead of just boolean. This makes it possible to distinguish between true, false, and null.  Corresponding to the underlying properties being set to true, false or not set at all.","10/Apr/08 12:47;ericdwhite;https://issues.apache.org/activemq/secure/attachment/16327/amq-411-simple-version.patch

This file is for ActiveMQ 4.1.1

I have tested this file locally and it works for me.  

In this version only boolean properties are used.  This make it impossible to know if the property was set on the Transport URL or not.

My personal belief is the complex version is better, but I supplied both as I'm unsure how the maintainers would like to see the issue resolved.","10/Apr/08 12:48;ericdwhite;https://issues.apache.org/activemq/secure/attachment/16328/amq-500-complex-version.patch

This file is for ActiveMQ 5.0.0

I have NOT TESTED this on ActiveMQ 5, but the looking at the source code, I think the issue is there.  This patch does compile.

In this version Boolean properties are used instead of just boolean. This makes it possible to distinguish between true, false, and null.  Corresponding to the underlying properties being set to true, false or not set at all.
","10/Apr/08 12:49;ericdwhite;https://issues.apache.org/activemq/secure/attachment/16329/amq-500-simple-version.patch

This file is for ActiveMQ 5.0.0

I have NOT TESTED this on ActiveMQ 5, but the looking at the source code, I think the issue is there.  This patch does compile.

In this version only boolean properties are used.  This make it impossible to know if the property was set on the Transport URL or not.

My personal belief is the complex version is better, but I supplied both as I'm unsure how the maintainers would like to see the issue resolved.","10/Apr/08 17:07;djencks;In the past I've fixed this bug (in other projects) like this:

    public void bind() throws IOException {
        super.bind();
        if (needClientAuth) {
            ((SSLServerSocket)this.serverSocket).setNeedClientAuth(true);
        } else if (wantClientAuth) {
            ((SSLServerSocket)this.serverSocket).setWantClientAuth(true);
        }
    }


which to me corresponds better to natural language usage like ""I not only want client auth, I need it!""

Is there some reason you think that setting both flags true should be disallowed?
","10/Apr/08 17:13;djencks;with luck 4.1.2 is out the door.... should be able to get it in 5.1.0 though","10/Apr/08 19:40;djencks;looks like it will make it into 4.1.2","10/Apr/08 19:42;djencks;The test needed quite a bit of fixing up also.  The proposed patches would definitely have broken the tests as they test all 4 combinations, and do not expect an exception if both flags are true.
4.1 rev 646928
trunk rev 646936","11/Apr/08 08:21;ericdwhite;

The reason I though throwing an exception was a good idea was, in
reading the JDK API, these two options are really mutually exclusive,
if you set one the other is unset.  So, my thinking was URIs
containing: needClientAuth=true&wantClientAuth=true are technically
incorrect.

That being said, I prefer the approach that you took.  Because from
the end users perspective it is very difficult to know that
needClientAuth and wantClientAuth override each other deep down inside
of the JDK.  So as you say if the user configuring ActiveMQ and sets
needClientAuth then that should take precedence over wantClientAuth.
This is because needClientAuth is more restrictive of the two.

I'm sorry I didn't run the tests, that was a lapse of judgment on my part.

Would it be possible to update this page:
http://activemq.apache.org/contributing.html
To include something like this in the ""Submitting patches"" section:

Quick Check List:
1. Does the patch apply clean to the version it is supposed to fix.
2. Does the resutling patched code complie
3. Do the Unit tests run cleanly

All of these are obvious, but it never hurts, to remind everyone.

Thank you very much for fixing this in time for ActiveMQ 4.1.2.  I
really appreciate the quick turn around.

Regards,
Eric
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages are sometimes skipped when  using JDBC master/slave,AMQ-1656,12482464,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,leguil2007,leguil2007,09/Apr/08 17:35,10/Apr/08 17:17,30/Jan/20 16:55,10/Apr/08 17:17,5.0.0,,,,,,,5.1.0,,,Message Store,,,,0,"Sometime, a (or some) message(s) hang in the queue while no consumer eat it. It happen more often a failover.

Scenario:
2 brokers (jdbc master/slave), 2 consumers (with prefetch set to 1), 2 producers

Producers :
  ant producer -Durl=""failover:(tcp://localhost:61618,tcp://localhost:61619)"" -Ddurable=true -Dmax=500
Consumer 1:
  ant consumer -Durl=""failover:(tcp://localhost:61618,tcp://localhost:61619)"" -Dmax=10000 -DclientId=c1
Consumer 2:
  ant consumer -Durl=""failover:(tcp://localhost:61618,tcp://localhost:61619)"" -Dmax=10000 -DclientId=c2

1 - Start the two brokers (one will be master, the other will be slave)
2 - Start the producers, consumers
3 - Wait a little,
4 - Kill the master -> slave become master
5 - Producers continue producing, consumers continue consuming
6 - After all producers finish their task, the consumer will finish consuming, and sometimes there still messages left in the queue (in the database, and using JMX to see the state of the queue).
7 - Restart a new broker, kill the master
8 - The messages will be consumed 


There is a race condition between the time the message is set with the broker sequence number (RegionBroker.java in send method), and the time it is actually put in the database (DefaultJDBCAdapter.java in doAddMessage method).

I have seen that sometimes message with higher sequence number are put in database before a lower sequence number.  For example: 386 is put in the database before 385. If it is happening when JDBCMessageStore is recovering the next message (lastMessageId is 384), then 386 will be fetched and the lastMessageId will change to be 386. 385 is then put in the db but never retrieved (stopping and restarting the broker will allow to retrieve the message because at start the lastMessageId is -1).

I have synchronized the code inside the RegionBroker.send, and I don't have gaps anymore. This is a workaround for us since we don't process a lot of message. But maybe a more elegant solution is to set the brokerSequenceId in doAddMessage of JDBCAdapter (I may be wrong, I didn't check if the brokerSequenceId is used elsewhere).

","Windows XP sp2, java 6, Mysql 5.0.51a",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-10 17:17:14.397,,,false,,,,,,,,,,,,,,,,,84619,,,Thu Apr 10 17:17:14 UTC 2008,,,,,,,,"0|i14b6n:",233275,,,,,,,,,,,,,,,,,,,"10/Apr/08 17:17;rajdavies;Fixed by SVN revision 646880",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.OutOfMemoryError when restarting a broker that had a durable subscirption that had been sent lots of messages.,AMQ-1595,12482318,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chirino,chirino,22/Feb/08 17:02,10/Apr/08 12:00,30/Jan/20 16:55,10/Apr/08 12:00,5.0.0,,,,,,,5.1.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84638,,,2008-02-22 17:02:37.0,,,,,,,,"0|i14b8v:",233285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting advisory support compromises network of brokers ,AMQ-1590,12482132,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,joef,joef,20/Feb/08 17:27,09/Apr/08 15:44,30/Jan/20 16:55,09/Apr/08 15:44,5.0.0,,,,,,,5.1.0,,,Documentation,,,,0,"The documentation pertaining to advisorySupport states the following.

""Allows the support of advisory messages to be disabled for performance reasons.""

So I can see why some folk would be tempted to disable advisorySupport. However, there does not appear to be any documentation stating that doing so will compromise the functionality associated with networks of brokers (e.g., it will preclude the broker from forwarding messages to other brokers). Either the documentation needs to be updated and/or end-users should not be allowed to disable advisory support given the dire results.   
",,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-09 15:44:14.559,,,false,,,,,,,,,,,,,,,,,84641,,,Wed Apr 09 15:44:14 UTC 2008,,,,,,,,"0|i0s2kn:",161893,,,,,,,,,,,,,,,,,,,"09/Apr/08 15:44;rajdavies;Fixed by svn revision 646409",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using NON_PERSISTENT delivery mode increases MemoryPercentageUsed to 100% and block sending,AMQ-1644,12482350,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mnesiem,mnesiem,07/Apr/08 18:06,09/Apr/08 14:00,30/Jan/20 16:55,09/Apr/08 14:00,5.0.0,,,,,,,5.1.0,,,JMS client,,,,0,"I'm creating pub/sub application and when I set the DeliveryMode to NON_PERSISTENT in the message produce, the MemoryPercentageUsed increased until it reached 100% and the send will be blocked on waitForSpace().

For the same application if I set the DeliveryMode to PERSISTENT, every thing works fine and MemoryPercentageUsed remains at 0%",,marcobuss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-09 14:00:13.698,,,false,,,,,,,,,,,,,,,,,84625,,,Wed Apr 09 14:00:13 UTC 2008,,,,,,,,"0|i0s1rb:",161761,,,,,,,,,,,,,,,,,,,"09/Apr/08 14:00;chirino;There was some bad usage accounting in 5.0 which has now been fixed.  Should make it into the 5.1 release.  Please re-test against trunk if you get a chance.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic throughput drops with the number of consumers,AMQ-1586,12482300,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rainer klute,rainer klute,18/Feb/08 15:10,09/Apr/08 13:26,30/Jan/20 16:55,09/Apr/08 13:26,5.1.0,,,,,,,5.1.0,,,Broker,,,,1,"If many consumers are reading from a topic, the performance of the producer and the consumers drops tremendously. More on this in the forum discussion <http://www.nabble.com/Optimising-PrefetchSubscription.dispatchPending%28%29-ideas-td15359726s2354.html>.",,fullung,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Feb/08 09:48;rainer klute;ActiveMQ_Testcases.jar;https://issues.apache.org/jira/secure/attachment/12460939/ActiveMQ_Testcases.jar",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-02-23 10:51:05.1,,,false,,,,,,,,,,,,,,,,,84811,,,Wed Apr 09 13:26:46 UTC 2008,,,,,,,,"0|i0s1pz:",161755,,,,,,,,,,,,,,,,,,,"22/Feb/08 09:37;rainer klute;To corrobate the description above with some numbers, I ran a test that did the following:
* A producer sends 10,000 messages to a topic. This takes 7 seconds.
* A consumer registers as a durable subscriber and receives those 10,000 messages. This takes 6 seconds.
* Now 100 consumers register with the topic instead of just one. Each consumer receives each message. How long should this take?
** Well, first I'd expect a factor of 100, because each message will be read 100 times from the topic.
** Then we will have some administrative overhead, so lets be very pessimistic and add a factor of 2.
** Or, no, lets use 3 instead of 2, because we might have been exceptionally lucky with the 6 seconds it took to receive the messages with one consumer.

Following this calculation, I'd expect a runtime of at most '''6s * 100 * 3 = 1,800s''' (30 minutes).

However, instead of half an hour the test program ran '''5 hours and 18 minutes'''!

With ActiveMQ revision 629726 the situation has improved considerably. Instead of 5 hours and 18 minutes the test took '''1 hour and 58 minutes'''. This a considerable gain by a factor of 2,7! However, it still seems slow compared with the worst-case expection of 30 minutes.","23/Feb/08 10:51;fullung;Hello,

Could you post the code you used? I'd like to see how ActiveMQ compares to OpenMQ (formerly known as SunMQ) on this test.

Regards,

Albert","26/Feb/08 09:47;rainer klute;As requested, here's my testcase.","26/Feb/08 09:48;rainer klute;Oops, wrong file! Here's the correct one.","09/Apr/08 13:26;rajdavies;In 5.1 - async dispatch is enabled by default for consumers - so consumption will not be limited by the slowest consumer. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
compositeTopic changing destination field of original message,AMQ-1620,12482423,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,pschwamb,pschwamb,13/Mar/08 21:00,09/Apr/08 12:21,30/Jan/20 16:55,09/Apr/08 12:21,5.1.0,,,,,,,5.1.0,,,Broker,,,,0," When using compositeTopics to copy messages from one destination to multiple queues or topics, and setting forwardOnly=""false"", messages sent out on the original topic will have the destination field set to the last forwarded topic/queue name.  For example, using this config:

<compositeTopic name=""original.topic"" forwardOnly=""false"">
    <forwardTo>
        <queue physicalName=""forwarded.queue"" />
        <topic physicalName=""forwarded.topic"" />
    </forwardTo>
</compositeTopic>

Messages sent out on the original.topic topic will have ""forwarded.topic"" set as their destination.

My stomp client (activemessaging) uses the destination field to route messages locally after they are received, so this causes big problems for me.

I have attached a patch that fixes this behavior.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/08 21:00;pschwamb;ASF.LICENSE.NOT.GRANTED--composite_destination_filter_patch.txt;https://issues.apache.org/jira/secure/attachment/12460960/ASF.LICENSE.NOT.GRANTED--composite_destination_filter_patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-09 12:21:32.19,,,false,,,,,,,,,,,,,,,,,38761,,,Wed Apr 09 12:21:32 UTC 2008,,,,Patch Available,,,,"0|i14bhz:",233326,,,,,,,,,,,,,,,,,,,"09/Apr/08 12:21;rajdavies;Patch applied in svn revision 646299",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"No exposure to the 'idleTimeout' property for ConnectionPool class, which makes it difficult to implement keepAlive semantics on PooledConnections",AMQ-1578,12482419,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jbrosenberg,jbrosenberg,04/Feb/08 17:05,09/Apr/08 10:22,30/Jan/20 16:55,09/Apr/08 10:22,5.0.0,,,,,,,5.1.0,,,JMS client,,,,0,"The ConnectionPool class has a 'idleTimeout' property, but this is not accessible easily, via the PooledConnectionFactory class.

This essentially means that there's no easy way to implement a keepAlive setup for underlying tcp connections.  By default, the idleTimeout is set to 30 seconds, and when this expires, it shuts down the connection's transport.  Furthermore, it ignores and knows nothing about the InactiviyMonitor's efforts to keep the tcp connection refreshed.

A simple fix would be to have the PooledConnectionFactory have a setter for the idleTimeout property, and then pass this one when it creates new connections.   As a work-around, I've created a sub-class of the PooledConnectionFactory class, that looks like this (this sub-classes actually the jencks amqpool class, which is very similar to the activemq version of the class, which has the same issue):


public class PooledConnectionFactoryWithIdleTimeout extends PooledConnectionFactory {
    
   private int idleTimeout = 0; 
   
   public int getIdleTimeout() {
       return idleTimeout;
   }

   public void setIdleTimeout(int idleTimeout) {
       this.idleTimeout = idleTimeout;
   } 
   
   @Override
   protected ConnectionPool createConnectionPool(ActiveMQConnection connection) {
       ConnectionPool connPool = new ConnectionPool(connection, getPoolFactory());
       connPool.setIdleTimeout(idleTimeout);
       
       return connPool;
   }   
}

",5.1-SNAPSHOT,jbrosenberg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-09 10:22:02.771,,,false,,,,,,,,,,,,,,,,,84643,,,Wed Apr 09 10:22:02 UTC 2008,,,,,,,,"0|i0s1uf:",161775,,,,,,,,,,,,,,,,,,,"09/Apr/08 10:22;rajdavies;Fixed by SVN revision 646258",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrency Issue in MessageConsumer's deliveredMessages within dispose,AMQ-1631,12482406,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mooseroy,mooseroy,21/Mar/08 19:06,09/Apr/08 09:52,30/Jan/20 16:55,09/Apr/08 09:52,5.0.0,,,,,,,5.1.0,,,,,,,0,The LinkedList can be modified concurrently - see http://www.nabble.com/NPE-while-consuming-messages-to12301153s2354.html,,mooseroy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Mar/08 19:10;mooseroy;activemq.patch;https://issues.apache.org/jira/secure/attachment/12461027/activemq.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-09 09:52:40.87,,,false,,,,,,,,,,,,,,,,,84630,,,Wed Apr 09 09:52:40 UTC 2008,,,,,,,,"0|i0s1s7:",161765,,,,,,,,,,,,,,,,,,,"21/Mar/08 19:08;mooseroy;I see frequent concurrency errors due to the dispose method not synchronizing on the deliveredMessages linkedList.  Here is a patch that I think addresses the issue:

Attaching patch file","21/Mar/08 19:10;mooseroy;Patch to synchronize on deliveredMessages","09/Apr/08 09:52;rajdavies;Patch applied in svn revision 646248",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fileserver webapp wont work out of the box,AMQ-1624,12482370,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,marcobuss,marcobuss,16/Mar/08 21:07,07/Apr/08 16:21,30/Jan/20 16:55,07/Apr/08 16:21,5.0.0,5.1.0,,,,,,5.1.0,,,Broker,,,,0,"After a normal build, the blob-message fileserver webapp dosn't work.
The classes necessary for file-upload will are not included.

The patch include the class-files from fileserver module to the assambly and insert the essential block to the activemq.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/08 21:07;marcobuss;ASF.LICENSE.NOT.GRANTED--patch.txt;https://issues.apache.org/jira/secure/attachment/12460961/ASF.LICENSE.NOT.GRANTED--patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-07 16:21:31.819,,,false,,,,,,,,,,,,,,,,,84631,,,Mon Apr 07 16:21:31 UTC 2008,,,,Patch Available,,,,"0|i0s0zz:",161638,,,,,,,,,,,,,,,,,,,"07/Apr/08 16:21;chirino;Patch applied in revision 645592.

Thanks Marco!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporary destinations not being cleaned up upon delete() when using network of brokers,AMQ-1633,12482322,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,aricooperman,aricooperman,26/Mar/08 18:46,01/Apr/08 06:51,30/Jan/20 16:55,01/Apr/08 06:51,5.1.0,,,,,,,5.1.0,,,Broker,,,,0,"When deleting a temp destination a DestinationInfo object is sent signifying the deletion to brokers. These are not deleted immediately but are instead put into the cachedDestinations map in AbstractTempRegion. Upon the regular scheduled doPurge call any that are older than a minute are disposed of, however, calling remove on the cache map returns nothing because the key object, CachedDestination has a bug inside the equals method in the instanceof check and the temp destinations stick around and are never disposed of


            if (o instanceof ActiveMQDestination) {

Should be 

            if (o instanceof CachedDestination ) {",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84805,,,2008-03-26 18:46:26.0,,,,,,,,"0|i181zz:",255126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inactivity monitor blocks trying to close out a Failover transport that is in the middle of send.,AMQ-1613,12482359,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,06/Mar/08 20:42,06/Mar/08 22:18,30/Jan/20 16:55,06/Mar/08 22:18,,,,,,,,5.1.0,,,,,,,0,The net affect of this is that clients don't get reconnected within the inactivity monitor configured time.  They have to wait for the OS socket to notice the connection failure to reconnect.  This in effect is making the inactivity monitor in-effective for heavily used connections.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95842,,,Thu Mar 06 22:18:38 UTC 2008,,,,,,,,"0|i14bdz:",233308,,,,,,,,,,,,,,,,,,,"06/Mar/08 22:18;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FailoverTransport logs routine reconnects at INFO/WARN instead of DEBUG,AMQ-1574,12482340,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,jbrosenberg,jbrosenberg,01/Feb/08 14:40,28/Feb/08 06:25,30/Jan/20 16:55,28/Feb/08 06:25,5.0.0,,,,,,,5.1.0,,,Transport,,,,0,"Logged originally in the user forum here:

http://www.nabble.com/FailoverTransport-in-5.1-seems-to-make-more-noise...-to15211718s2354.html#a15221625

Here's the text of that again:

All,

I've been testing with AMQ 5.1-SNAPSHOT, using the FailoverTransport.

I'm using TcpTransport as the underyling transport.

I've noticed that is seems to report more on the logging level, items that might have previously been reported with [DEBUG] are now [INFO] or [WARN].  This is causing significant clutter in my logs.   I'd like to normally not suppress [INFO] or [WARN] output....

I have an application that needs to support very high throughput, but also can be prone to extended down time.  So, tcp connections have a tendency to timeout during the downtimes.  When a subsequent connection comes through, I am seeing TCP exception level warns, that didn't used to appear when the client is running with 4.1.1, e.g.  

I'm using a broker uri that looks like this:

failover:(tcp://some.broker.com:61616?wireFormat.maxInactivityDuration=0,tcp://some2.broker.com:61616?wireFormat.maxInactivityDuration=0)&initialReconnectDelay=20&maxReconnectDelay=900&randomize=false

Here's what I'm seeing with the client using 5.1:

WARN  [2008-01-31 10:11:00,163] thread:ActiveMQ Transport: tcp://some.broker.com/10.82.67.59:61616              FailoverTransport -- Transport failed, attempting to automatically reconnect due to: java.net.SocketException: Socket closed
java.net.SocketException: Socket closed
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
        at java.io.DataInputStream.readInt(DataInputStream.java:370)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:267)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:195)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
        at java.lang.Thread.run(Thread.java:619)
INFO  [2008-01-31 10:11:00,168] thread:ActiveMQ Task                       FailoverTransport -- Successfully reconnected to tcp://some.broker.com:61616?wireFormat.maxInactivityDuration=0


The same scenario with AMQ 4.1.1 only outputs info at log-level [DEBUG], which I can more routinely suppress:

DEBUG [2008-01-31 13:23:29,288] thread:http-8080-exec-4                    FailoverTransport -- Stopped.
DEBUG [2008-01-31 13:23:29,292] thread:http-8080-exec-4                    FailoverTransport -- Waking up reconnect task
DEBUG [2008-01-31 13:23:29,292] thread:http-8080-exec-4                    FailoverTransport -- Started.
DEBUG [2008-01-31 13:23:29,293] thread:ActiveMQ Task                       FailoverTransport -- Attempting connect to: tcp://some.broker.com:61616?wireFormat.maxInactivityDuration=0
DEBUG [2008-01-31 13:23:29,297] thread:ActiveMQ Task                    WireFormatNegotiator -- Sending: WireFormatInfo { version=2, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDuration=0, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
DEBUG [2008-01-31 13:23:29,297] thread:ActiveMQ Task                       FailoverTransport -- Connection established
DEBUG [2008-01-31 13:23:29,305] thread:ActiveMQ Transport: tcp://some.broker.com/10.82.67.99:61616           WireFormatNegotiator -- Received WireFormat: WireFormatInfo { version=3, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
DEBUG [2008-01-31 13:23:29,305] thread:ActiveMQ Transport: tcp://some.broker.com/10.82.67.99:61616           WireFormatNegotiator -- tcp://some.broker.com/10.82.67.99:61616 before negotiation: OpenWireFormat{version=2, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
DEBUG [2008-01-31 13:23:29,305] thread:ActiveMQ Transport: tcp://some.broker.com/10.82.67.99:61616           WireFormatNegotiator -- tcp://some.broker.com/10.82.67.99:61616 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}


Thoughts?  Is there a reason why in 5.1, the FailoverTransport passes on the underlying tcp socket timeout due to inactivity?

Thanks,

Jason","I'm using a recent 5.1 snapshot:
5.1-20080124.044610-8",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-02-28 06:25:00.667,,,false,,,,,,,,,,,,,,,,,84647,,,Thu Feb 28 06:25:00 UTC 2008,,,,,,,,"0|i0s0qv:",161597,,,,,,,,,,,,,,,,,,,"01/Feb/08 14:42;jbrosenberg;Note, I tried it with and without the maxInactivityDuration flag set, same result....","04/Feb/08 21:17;jbrosenberg;Note, by using workarounds, described in AMQ-1577 and AMQ-1578, this problem has been resolved in my environment.

I'm thinking that resolution of those 2 issues will reduce the spamming of these exceptions every 30 seconds, etc.

The problem in my case stems directly from using PooledConnections (see AMQ-1578)....","28/Feb/08 06:25;aco;I've tweaked the logging to not log the stack traces to WARN to reduce the clutter, but maintained the failed connection and successful reconnect as is.
http://svn.apache.org/viewvc?rev=631866&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing logging-commons.jar contents in activemq-all-5.0.0.jar,AMQ-1602,12482233,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,sparky2708,sparky2708,25/Feb/08 22:52,28/Feb/08 05:22,30/Jan/20 16:55,28/Feb/08 05:22,5.0.0,,,,,,,5.1.0,,,,,,,0,Missing the contents of logging-commons.jar in activemq-all-5.0.0.jar. ,,sparky2708,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-02-28 05:22:05.55,,,false,,,,,,,,,,,,,,,,,84637,,,Thu Feb 28 05:22:05 UTC 2008,,,,,,,,"0|i0s1mn:",161740,,,,,,,,,,,,,,,,,,,"28/Feb/08 05:22;aco;This has already been fixed in the 5.1-SNAPSHOT

http://svn.apache.org/viewvc?rev=608958&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extraneous Thread.dumpStack() method in ProducerEventSource.java,AMQ-1598,12482285,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,tpounds,tpounds,25/Feb/08 17:05,28/Feb/08 05:15,30/Jan/20 16:55,28/Feb/08 05:15,,,,,,,,5.1.0,,,,,,,0,"There is an extraneous Thread.dumpStack() call in activemq-core/src/main/java/org/apache/activemq/advisory/ProducerEventSource.java.

I've attached a patch to fix this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/08 17:06;tpounds;r630917.diff;https://issues.apache.org/jira/secure/attachment/12461083/r630917.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-02-28 05:15:53.267,,,false,,,,,,,,,,,,,,,,,38738,,,Thu Feb 28 05:15:53 UTC 2008,,,,Patch Available,,,,"0|i0s0vz:",161620,,,,,,,,,,,,,,,,,,,"28/Feb/08 05:15;aco;Patch applied to http://svn.apache.org/viewvc?rev=631848&view=rev

Many thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQMessageTransformation.copyProperties NullPointerException,AMQ-1576,12482325,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,vjarnot,vjarnot,04/Feb/08 14:35,28/Feb/08 03:05,30/Jan/20 16:55,28/Feb/08 03:05,5.0.0,,,,,,,5.1.0,,,Broker,,,,0,"org.apache.activemq.ActiveMQMessageTransformation copyProperties method doesn't check for null before calling setObjectProperty(...)

This causes null pointer exceptions when trying to bridge Oracle's AQ with ActiveMQ - Oracle returns a value of null for JMSXGroupSeq (and maybe others, that's the first one that causes the failure).

Since passing a null to setObjectProperty appears to inevitably fail (null pointer thrown from TypeConversionSupport.convert(...)) why not check for null and not call setObjectProperty?

TypeConversionSupport even has an assert line that seems to indicate the value should never be null, but calling code (ActiveMQMessageTransformation in my case) doesn't prevent that from happening.
","running on Fedora Core 6, hitting Oracle 10g for persistant storage",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-02-19 09:49:38.957,,,false,,,,,,,,,,,,,,,,,84645,,,Tue Feb 19 10:48:27 UTC 2008,,,,,,,,"0|i14bpr:",233361,,,,,,,,,,,,,,,,,,,"19/Feb/08 09:49;aco;Hi,

Can you post the complete stacktrace for this exception?

Thanks.","19/Feb/08 10:48;aco;I've added a fix for rev. 629060

The behavior would be that if a jms property is encountered with a null value, it will not be converted to the ActiveMQ property, but will still be maintained in the list of jms properties. Let me know if this behavior works for you.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When using a JDBC based database locker in an Master/Slave configuration, the lock is not updated.",AMQ-1591,12482304,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,20/Feb/08 22:04,25/Feb/08 03:24,30/Jan/20 16:55,25/Feb/08 03:24,5.0.0,,,,,,,5.1.0,,,Broker,,,,0,The lockKeepAlivePeriod field was intialized to 0 and no accessors are provided to initialize it.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-02-25 03:24:18.4,,,false,,,,,,,,,,,,,,,,,84640,,,Mon Feb 25 03:24:18 UTC 2008,,,,,,,,"0|i14bm7:",233345,,,,,,,,,,,,,,,,,,,"20/Feb/08 22:14;chirino;The lockKeepAlivePeriod is now initialized to 30 seconds and accessors have been added so this can now be configured.","25/Feb/08 03:24;dave_stanley;The DB lock is getting refreshed correctly now.

One symptom of this bug was that when using a mySQL backed store, the lock would expire (due to inactivity) after about 12 hours. If the broker was setup as a master-slave, the slave would try and become the master but this would fail as the master was still listening ...

{code}
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock 
to become the Master broker
INFO  DefaultDatabaseLocker          - Becoming the master on dataSource: org.ap
ache.commons.dbcp.BasicDataSource@16917ee
ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Brok
er. Reason: java.io.IOException: Transport Connector could not be registered in 
JMX: Failed to bind to server socket: tcp://localhost:61616 due to: java.net.Bin
dException: Address already in use
java.io.IOException: Transport Connector could not be registered in JMX: Failed 
to bind to server socket: tcp://localhost:61616 due to: java.net.BindException: 
Address already in use
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport
.java:27)
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(Broke
rService.java:1298)
        at org.apache.activemq.broker.BrokerService.startTransportConnector(Brok
erService.java:1744)
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerSer
vice.java:1695)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:439
)
{code}

/Dave",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creating a durable subscriber throws ConcurrentModificationException,AMQ-1583,12482299,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rainer klute,rainer klute,15/Feb/08 03:15,18/Feb/08 12:51,30/Jan/20 16:55,18/Feb/08 12:51,5.1.0,,,,,,,5.1.0,,,Message Store,,,,0,"My JMS application uses a single topic and few hundred durable subscribers. While some of the consumers are already receiving messages, others are created. During the creation of one of the durable subscribers, a java.util.ConcurrentModificationException in the size() method of org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor occured. Here's the stack trace:

javax.jms.JMSException: java.util.ConcurrentModificationException
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1181)
        at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1749)
        at org.apache.activemq.ActiveMQMessageConsumer.<init>(ActiveMQMessageConsumer.java:215)
        at org.apache.activemq.ActiveMQTopicSubscriber.<init>(ActiveMQTopicSubscriber.java:117)
        at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1164)
        at de.dpwn.bde.bms.optima.service.eventreceiver.DeviceListenerThread.<init>(DeviceListenerThread.java:98)
        at de.dpwn.bde.bms.optima.service.eventreceiver.EventReceiverService.addDeviceListener(EventReceiverService.java:184)
        at de.dpwn.bde.bms.optima.device.DeviceFactory.getBinDevice(DeviceFactory.java:463)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at de.dpwn.bde.bms.optima.service.eventreceiver.EventCaller.call(EventCaller.java:124)
        at de.dpwn.bde.bms.optima.service.eventreceiver.ConfigListenerThread.run(ConfigListenerThread.java:126)
Caused by: java.util.ConcurrentModificationException
        at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:761)
        at java.util.LinkedList$ListItr.next(LinkedList.java:696)
        at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.size(StoreDurableSubscriberCursor.java:236)
        at org.apache.activemq.broker.region.PrefetchSubscription.getPendingQueueSize(PrefetchSubscription.java:392)
        at org.apache.activemq.broker.region.DurableTopicSubscription.getPendingQueueSize(DurableTopicSubscription.java:207)
        at org.apache.activemq.broker.region.DurableTopicSubscription.toString(DurableTopicSubscription.java:229)
        at java.lang.String.valueOf(String.java:2827)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at org.apache.activemq.broker.region.DurableTopicSubscription.activate(DurableTopicSubscription.java:97)
        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:103)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:372)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:81)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:525)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:334)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:200)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:619)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-02-18 12:51:02.591,,,false,,,,,,,,,,,,,,,,,84813,,,Mon Feb 18 12:51:02 UTC 2008,,,,,,,,"0|i14brr:",233370,,,,,,,,,,,,,,,,,,,"18/Feb/08 12:51;rajdavies;Fixed by SVN revision 628708",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"FailoverTransport with MaxReconnectAttempts set does not recover quickly, when used with ConnectionPooling....",AMQ-1575,12482126,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jbrosenberg,jbrosenberg,02/Feb/08 22:28,07/Feb/08 10:03,30/Jan/20 16:55,07/Feb/08 10:03,5.0.0,,,,,,,5.1.0,,,Transport,,,,0,"This entry from the users forum describes the issue (and it includes a reproducible test-case)...See the entry from me dated Dec 06, 2007.....

http://www.nabble.com/Timeout-and-Failover-on-a-queue-to13292887s2354.html#a14215834

I've confirmed that the issue happens with the latest 5.1-SNAPSHOT version, and happens with either jencks AMQPool, or the built-in activeMQ PooledConnections.  The problem does not happen if no connection pooling is used.

Basically, it appears that the FailoverTransport is not properly communicating with the TransportListener when brokers return to service.

Another user ('hbuch) has created a patch, implemented for 4.1.1, which seems to solve the problem, which is also referred to in that same thread referred to above....See entry from 'hbuch' dated Dec 05, 2007.....I've verified that that fix seems to work (tested only under 4.1.1 so far)....

Anyway, it seems that this fix should be straightforward to fold back into the source code for 5.1....

Please take a look.

Thanks,

Jason

",5.1-SNAPSHOT,jbrosenberg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/08 05:51;jbrosenberg;ConnectionPool.java;https://issues.apache.org/jira/secure/attachment/12460953/ConnectionPool.java","07/Feb/08 05:51;jbrosenberg;FailoverTransport.java;https://issues.apache.org/jira/secure/attachment/12461067/FailoverTransport.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-02-07 10:03:29.858,,,false,,,,,,,,,,,,,,,,,84646,,,Thu Feb 07 10:03:29 UTC 2008,,,,Patch Available,,,,"0|i0s1hr:",161718,,,,,,,,,,,,,,,,,,,"07/Feb/08 05:51;jbrosenberg;I've included a patch built against a recent 5.1-SNAPSHOT source (svn rev 618082)

The file FailoverTransport.java, includes fixes for 4 issues, including hbuch's fix for this issue.

The other issues that this patch includes fixes for are:

AMQ-1116
AMQ-1575
AMQ-1577
AMQ-1581

The file ConnectionPool.java is also needed for the fix for AMQ-1581

I've added comments in the code that clearly indicate which sections apply to which issue, so you can easily take edit to include only the fixes you want specifically.

Jason","07/Feb/08 10:03;rajdavies;Fixed by svn revision 619336",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnections don't initialize correctly when broker not available (causes problems with Failover),AMQ-1581,12482293,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jbrosenberg,jbrosenberg,06/Feb/08 16:50,07/Feb/08 10:03,30/Jan/20 16:55,07/Feb/08 10:03,,,,,,,,5.1.0,,,Transport,,,,0,"In working with PooledConnections, I've found that there is a timing race condition that can occur on the initialization of new ConnectionPool objects.  The ConnectionPool object adds a custom TransportListener, which implements the onException method, in order to be informed when the transport has failed, so that it can properly execute its 'expiredCheck' method, and allow the PooledConnectionFactory to remove it from the ConnectionPool....

In the case of using an underlying FailoverTransport, which sets the maxReconnectAttempts to something small, such as ""2"", then it's possible that the FailoverTransport could fail prior to the ConnectionPool object completing it's own initialization, and thus prior to it's adding it's TransportListener to the connection.  I would expect there are other transports that could also fail immediately and have the same behavior.

This scenario is readily reproducible in the case where the client is started up with no broker available.

I've found a solution by adding a simple check after the call to addTransportListener, to check for any prior transport failed, by calling 'connection.isTransportFailed()', and setting the 'hasFailed' flag if true.  This will update the flag for those cases that did not successfully add the transport listener prior to that initial failure.

Without this fix, the ConnectionPool is unusable, in that the underlying connection will never be evicted to from the PooledConnectionFactory....This is especially pronounced if the idleTimeout is set to 0, and it never recovers.

Jason",5.1-SNAPSHOT,jbrosenberg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/08 05:54;jbrosenberg;ConnectionPool.java;https://issues.apache.org/jira/secure/attachment/12460964/ConnectionPool.java","07/Feb/08 05:54;jbrosenberg;FailoverTransport.java;https://issues.apache.org/jira/secure/attachment/12460842/FailoverTransport.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-02-07 10:03:09.2,,,false,,,,,,,,,,,,,,,,,95835,,,Thu Feb 07 10:03:09 UTC 2008,,,,,,,,"0|i0s1pj:",161753,,,,,,,,,,,,,,,,,,,"07/Feb/08 05:54;jbrosenberg;I've included a patch built against a recent 5.1-SNAPSHOT source (svn rev 618082)

The file ConnectionPool.java, contains part of my fix for this issue.
The file FailoverTransport.java, includes fixes for 4 issues, including part of my fix for this issue.

The other issues that this patch includes fixes for are:

AMQ-1116
AMQ-1575
AMQ-1577
AMQ-1581

I've added comments in the code that clearly indicate which sections apply to which issue, so you can easily take edit to include only the fixes you want specifically.

Jason","07/Feb/08 10:03;rajdavies;Fixed by svn revision 619336",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stopping ActiveMQ won´t work if the ActiveMQ path contains a whitespace.,AMQ-3058,12491553,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,juleq,juleq,29/Nov/10 16:04,07/Aug/15 21:24,30/Jan/20 16:55,07/Aug/15 21:24,5.4.1,,,,,,,AGING_TO_DIE,,,Broker,,,,0,"The script command ""./activemq stop"" fails when the path to ActiveMQ contains a whitespace. The broker continues to execute. Find a CLI output reproducing this bug below:


zaphod:Software Jule$ cd /Users/Jule/White\ Space/
zaphod:White Space Jule$ cd bin

zaphod:bin Jule$ ./activemq start
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /Users/Jule/.activemqrc)

INFO: Invoke the following command to create a configuration file
./activemq setup [ /etc/default/activemq | /Users/Jule/.activemqrc ]

INFO: Using java '/System/Library/Frameworks/JavaVM.framework/Home/bin/java'
INFO: Starting - inspect logfiles specified in logging.properties and log4j.properties to get details
INFO: pidfile created : '/Users/Jule/White' (pid '3506')

zaphod:bin Jule$ echo juleq: Waiting for broker to come up...
juleq: Waiting for broker to come up...

zaphod:bin Jule$ ./activemq stop
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /Users/Jule/.activemqrc)

INFO: Invoke the following command to create a configuration file
./activemq setup [ /etc/default/activemq | /Users/Jule/.activemqrc ]

INFO: Using java '/System/Library/Frameworks/JavaVM.framework/Home/bin/java'
ActiveMQ not running

zaphod:bin Jule$ ps -A | grep ctive
 3506 ttys000    0:11.78 /System/Library/Frameworks/JavaVM.framework/Home/bin/java -Xms256M -Xmx256M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote -Dactivemq.classpath=/Users/Jule/White Space/conf; -Dactivemq.home=/Users/Jule/White Space -Dactivemq.base=/Users/Jule/White Space -jar /Users/Jule/White Space/bin/run.jar start
 3528 ttys000    0:00.00 grep ctive

zaphod:bin Jule$ echo ""juleq: Broker is still running :-(...""
juleq: Broker is still running :-(...
zaphod:bin Jule$ 
",Mac OS 10.6.5,davsclaus,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-02 20:41:27.088,,,false,,,,,,,,,,,,,,,,,74738,,,Fri Aug 07 21:24:36 UTC 2015,,,,,,,,"0|i0eb4v:",81566,,,,,,,,,,,,,,,,,,,"02/Nov/13 20:41;davsclaus;It is not a good idea either to use spaces in path names.","07/Aug/15 21:24;tabish;The current scripts seem to work ok with spaces.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XPath selectors return false if xalan is not on the classpath,AMQ-2536,12483720,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,romkal,romkal,17/Dec/09 13:35,02/Apr/14 23:53,30/Jan/20 16:55,03/Nov/13 08:23,5.3.0,,,,,,,5.10.0,5.9.1,,Selector,,,,0,"When xalan.jar is not on the classpath, then {{org.apache.activemq.filter.XalanXPathEvaluator}} in {{evaluate()}} method tries to load {{org.apache.xpath.CachedXPathAPI}}, throws {{NoClassDefFoundError}}, that is catched as {{Throwable}} and {{false}} is returned instead of an error.

No clue is given to the client, that it lacks a jar on the classpath and the impression is, that XPath selectors doesn't work and return false whatever the message is.

I believe if we catch {{Exception}} instead of {{Throwable}}, then the problem would be fixed.",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-03 08:23:54.104,,,false,,,,,,,,,,,,,,,,,44167,,,Sun Nov 03 08:23:54 UTC 2013,,,,,,,,"0|i0aliv:",59760,,,,,,,,,,,,,,,,,,,"03/Nov/13 08:23;davsclaus;We are now using pre compiled expressions which is faster. That avoids using the cached xpath api.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Problem with servicing broker messages when client hostName contains ""language specific"" characters (org.apache.activemq.util.IdGenerator problem)",AMQ-2505,12483571,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,sniegu,sniegu,23/Nov/09 10:53,02/Apr/14 23:45,30/Jan/20 16:55,13/Nov/13 15:36,5.2.0,,,,,,,5.10.0,5.9.1,,Broker,,,,0,"When name of the activeMQ client machine contains ""language specific"" letters (e.g. ""Gł_Ksiegowa"") communication fails:
""Caused by: java.io.IOException: Failed to broker message: ID:Gł_Ksiegowa-1407-1256558735734-0:2:3:1:1 in container: java.io.UTFDataFormatException: bad string ""

To resolve the problem in our system we've changed org.apache.activemq.util.IdGenerator code - we replaced line:

""hostName = InetAddress.getLocalHost().getHostName();""

with:

""hostName = InetAddress.getLocalHost().getHostAddress();""

The whole exception below:

ERROR 2009-10-26 13:07:30,781 [AWT-EventQueue-0] - Local JMS transaction failed to commit; nested exception is javax.jms.JMSException: POST COMMIT FAILED 
org.springframework.jms.connection.SynchedLocalTransactionFailedException: Local JMS transaction failed to commit; nested exception is javax.jms.JMSException: POST COMMIT FAILED 
at org.springframework.jms.connection.ConnectionFactoryUtils$JmsResourceSynchronization.processResourceAfterCommit(ConnectionFactoryUtils.java:408) 
at org.springframework.transaction.support.ResourceHolderSynchronization.afterCommit(ResourceHolderSynchronization.java:74) 
at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCommit(TransactionSynchronizationUtils.java:114) 
at org.springframework.transaction.support.TransactionSynchronizationUtils.triggerAfterCommit(TransactionSynchronizationUtils.java:100) 
at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCommit(AbstractPlatformTransactionManager.java:931) 
at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:774) 
at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:701) 
at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:321) 
at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:116) 
at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171) 
at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635) 
at info.fingo.asist.gui.controls.periodslist.status.ReportStatusHelper$$EnhancerByCGLIB$$2dab363.changeReportsStatus(<generated>) 
at info.fingo.asist.action.ChangeReportStatusAction.asistActionPerformed(ChangeReportStatusAction.java:30) 
at info.fingo.asist.action.MultiReportAction.asistActionPerformed(MultiReportAction.java:80) 
at info.fingo.asist.action.AsistAction.fireAsistActionPerformed(AsistAction.java:297) 
at info.fingo.asist.action.AsistAction.actionPerformed(AsistAction.java:322) 
at javax.swing.AbstractButton.fireActionPerformed(Unknown Source) 
at javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source) 
at javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source) 
at javax.swing.DefaultButtonModel.setPressed(Unknown Source) 
at javax.swing.AbstractButton.doClick(Unknown Source) 
at javax.swing.plaf.basic.BasicMenuItemUI.doClick(Unknown Source) 
at javax.swing.plaf.basic.BasicMenuItemUI$Handler.mouseReleased(Unknown Source) 
at java.awt.AWTEventMulticaster.mouseReleased(Unknown Source) 
at java.awt.Component.processMouseEvent(Unknown Source) 
at javax.swing.JComponent.processMouseEvent(Unknown Source) 
at java.awt.Component.processEvent(Unknown Source) 
at java.awt.Container.processEvent(Unknown Source) 
at java.awt.Component.dispatchEventImpl(Unknown Source) 
at java.awt.Container.dispatchEventImpl(Unknown Source) 
at java.awt.Component.dispatchEvent(Unknown Source) 
at java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source) 
at java.awt.LightweightDispatcher.processMouseEvent(Unknown Source) 
at java.awt.LightweightDispatcher.dispatchEvent(Unknown Source) 
at java.awt.Container.dispatchEventImpl(Unknown Source) 
at java.awt.Window.dispatchEventImpl(Unknown Source) 
at java.awt.Component.dispatchEvent(Unknown Source) 
at java.awt.EventQueue.dispatchEvent(Unknown Source) 
at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) 
at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) 
at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) 
at java.awt.EventDispatchThread.pumpEvents(Unknown Source) 
at java.awt.EventDispatchThread.pumpEvents(Unknown Source) 
at java.awt.EventDispatchThread.run(Unknown Source) 
Caused by: javax.jms.JMSException: POST COMMIT FAILED 
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49) 
at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1244) 
at org.apache.activemq.TransactionContext.commit(TransactionContext.java:263) 
at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:502) 
at org.springframework.jms.connection.JmsResourceHolder.commitAll(JmsResourceHolder.java:182) 
at org.springframework.jms.connection.ConnectionFactoryUtils$JmsResourceSynchronization.processResourceAfterCommit(ConnectionFactoryUtils.java:405) 
... 43 more 
Caused by: javax.transaction.xa.XAException: POST COMMIT FAILED 
at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:77) 
at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:154) 
at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:94) 
at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:94) 
at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:104) 
at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:424) 
at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:99) 
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294) 
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185) 
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65) 
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133) 
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122) 
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84) 
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137) 
at java.lang.Thread.run(Unknown Source) 
Caused by: java.lang.RuntimeException: java.io.IOException: Failed to broker message: ID:Gł_Ksiegowa-1407-1256558735734-0:2:3:1:1 in container: java.io.UTFDataFormatException: bad string 
at org.apache.activemq.broker.region.IndirectMessageReference.incrementReferenceCount(IndirectMessageReference.java:103) 
at org.apache.activemq.broker.region.QueueSubscription.dispatch(QueueSubscription.java:170) 
at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:129) 
at org.apache.activemq.broker.region.policy.RoundRobinDispatchPolicy.dispatch(RoundRobinDispatchPolicy.java:58) 
at org.apache.activemq.broker.region.Queue.dispatch(Queue.java:520) 
at org.apache.activemq.broker.region.Queue.access$600(Queue.java:75) 
at org.apache.activemq.broker.region.Queue$3.afterCommit(Queue.java:341) 
at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:83) 
at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:71) 
... 14 more 
Caused by: java.io.IOException: Failed to broker message: ID:Gł_Ksiegowa-1407-1256558735734-0:2:3:1:1 in container: java.io.UTFDataFormatException: bad string 
at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:31) 
at org.apache.activemq.store.jdbc.JDBCMessageStore.getMessage(JDBCMessageStore.java:107) 
at org.apache.activemq.store.ProxyMessageStore.getMessage(ProxyMessageStore.java:48) 
at org.apache.activemq.broker.region.IndirectMessageReference.incrementReferenceCount(IndirectMessageReference.java:95) 
... 22 more 
Caused by: java.io.UTFDataFormatException: bad string 
at org.apache.activemq.util.DataByteArrayInputStream.readUTF(DataByteArrayInputStream.java:277) 
at org.apache.activemq.openwire.v2.BaseDataStreamMarshaller.looseUnmarshalString(BaseDataStreamMarshaller.java:536) 
at org.apache.activemq.openwire.v2.ConnectionIdMarshaller.looseUnmarshal(ConnectionIdMarshaller.java:113) 
at org.apache.activemq.openwire.OpenWireFormat.looseUnmarshalNestedObject(OpenWireFormat.java:445) 
at org.apache.activemq.openwire.v2.BaseDataStreamMarshaller.looseUnmarsalCachedObject(BaseDataStreamMarshaller.java:454) 
at org.apache.activemq.openwire.v2.LocalTransactionIdMarshaller.looseUnmarshal(LocalTransactionIdMarshaller.java:117) 
at org.apache.activemq.openwire.OpenWireFormat.looseUnmarshalNestedObject(OpenWireFormat.java:445) 
at org.apache.activemq.openwire.v2.BaseDataStreamMarshaller.looseUnmarsalCachedObject(BaseDataStreamMarshaller.java:454) 
at org.apache.activemq.openwire.v2.MessageMarshaller.looseUnmarshal(MessageMarshaller.java:195) 
at org.apache.activemq.openwire.v2.ActiveMQMessageMarshaller.looseUnmarshal(ActiveMQMessageMarshaller.java:101) 
at org.apache.activemq.openwire.v2.ActiveMQObjectMessageMarshaller.looseUnmarshal(ActiveMQObjectMessageMarshaller.java:101) 
at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:349) 
at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:204) 
at org.apache.activemq.store.jdbc.JDBCMessageStore.getMessage(JDBCMessageStore.java:104) 
... 24 more  
",Windows XP SP2,davsclaus,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-11-13 15:36:48.111,,,false,,,,,,,,,,,,,,,,,44172,,,Wed Nov 13 15:36:48 UTC 2013,,,,,,,,"0|i0alkf:",59767,,,,,,,,,,,,,,,,,,,"13/Nov/13 15:36;davsclaus;We now sanitize the hostname when generating the id stub, to only only ascii chars.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issues in password encryption,AMQ-3101,12493841,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,cgupta24,cgupta24,22/Dec/10 08:12,13/Nov/13 16:52,30/Jan/20 16:55,13/Nov/13 16:52,5.4.2,,,,,,,5.10.0,,,Broker,,,,0,"I am trying to use security features provided in activemq 5.4.2, I downloaded and extractd the zip file. I am trying the below command to encrypt the password but getting few errors, below are the details ...


H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2>bin\activemq encrypt --passwo
rd activemq --input mypassword
Java Runtime: IBM Corporation 1.6.0 G:\IBM\IBM-JDK\ibm_sdk60\ibm_sdk60\jre
  Heap sizes: current=4096k  free=2789k  max=524288k
    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=G:\IBM\IB
M-JDK\ibm_sdk60\ibm_sdk60\jre\bin -Dsun.boot.library.path=G:\IBM\IBM-JDK\ibm_sdk
60\ibm_sdk60\jre\bin -Djava.library.path=G:\IBM\IBM-JDK\ibm_sdk60\ibm_sdk60\jre\
bin;.;C:\Perl\bin;C:\Program Files\Common Files\NetSarang;C:\WINDOWS\system32;C:
\WINDOWS;C:\WINDOWS\System32\Wbem;G:\IBM\IBM-JDK\ibm_sdk60\ibm_sdk60\bin;H:\Java
\apache-ant-1.7.0-bin\apache-ant-1.7.0\bin;C:\Program Files\Windows Imaging\ -Dj
ava.home=G:\IBM\IBM-JDK\ibm_sdk60\ibm_sdk60\jre -Djava.ext.dirs=G:\IBM\IBM-JDK\i
bm_sdk60\ibm_sdk60\jre\lib\ext -Duser.dir=H:\apache-activemq-5.4.2-bin\apache-ac
tivemq-5.4.2 _j2se_j9=71168 -Xdump -Dconsole.encoding=Cp437 -Djava.class.path=.
-Dcom.sun.management.jmxremote -Xmx512M -Dorg.apache.activemq.UseDedicatedTaskRu
nner=true -Djava.util.logging.config.file=logging.properties -Dactivemq.classpat
h=H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2/conf;H:\apache-activemq-5.4
.2-bin\apache-activemq-5.4.2/conf; -Dactivemq.home=H:\apache-activemq-5.4.2-bin\
apache-activemq-5.4.2 -Dactivemq.base=H:\apache-activemq-5.4.2-bin\apache-active
mq-5.4.2 -Djava.class.path=H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2/bi
n/run.jar -Dsun.java.command=H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2/
bin/run.jar start encrypt --password activemq --input mypassword -Dsun.java.laun
cher=SUN_STANDARD _port_library
ACTIVEMQ_HOME: H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2
ACTIVEMQ_BASE: H:\apache-activemq-5.4.2-bin\apache-activemq-5.4.2
Loading message broker from: encrypt
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: java.la
ng.IllegalArgumentException: Invalid broker URI, no scheme specified: encrypt
java.lang.RuntimeException: Failed to execute start task. Reason: java.lang.Ille
galArgumentException: Invalid broker URI, no scheme specified: encrypt
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand
.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand
.java:143)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.ja
va:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:59)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:39)
        at java.lang.reflect.Method.invoke(Method.java:612)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: java.lang.IllegalArgumentException: Invalid broker URI, no scheme spe
cified: encrypt",Win XP,davsclaus,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-09 12:44:10.901,,,false,,,,,,,,,,,,,,,,,65683,,,Wed Nov 13 16:52:26 UTC 2013,,,,,,,,"0|i0eaq7:",81500,,,,,,,,,,,,,,,,,,,"09/Aug/11 12:44;lgeidel;had the same problem and found the solution (it's a windows-only problem with the activemq.bat):

the following line in the activemq.bat adds ""start"" as the first argument:
""%_JAVACMD%"" %SUNJMX% %ACTIVEMQ_DEBUG_OPTS% %ACTIVEMQ_OPTS% %SSL_OPTS% -Dactivemq.classpath=""%ACTIVEMQ_CLASSPATH%"" -Dactivemq.home=""%ACTIVEMQ_HOME%"" -Dactivemq.base=""%ACTIVEMQ_BASE%"" -jar ""%ACTIVEMQ_HOME%/bin/run.jar"" start %*

so ""activemq.bat encrypt --password xxx --input yyy"" becomes ""activemq.bat start encrypt --password xxx --input yyy"", which calls the StartCommand.class instead of the intended EncryptCommand.class. the StartCommand.class then tries to load a broker from the uri ""encrypt"" ...

long story short: simply remove the ""start"" from there (you'll have to start activemq with ""activemq start"" then)","13/Nov/13 16:52;davsclaus;Thanks for reporting.

Lars, thanks for providing the solution. From ActiveMQ 5.10 onwards the start command is not included out of the box, and you need to start the broker like on unix

bin\activemq.bat start

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JBoss5.1 embedding - missing dependencies,AMQ-2903,12483663,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,rjtokenlanring,rjtokenlanring,07/Sep/10 13:27,02/Nov/13 20:59,30/Jan/20 16:55,02/Nov/13 20:59,5.3.2,,,,,,,5.9.0,,,Broker,,,,0,"The default embedding rar deployment into JBoss AS version 5.1 doesn't start, throwing the following exception:

{code}
Caused by: java.lang.NoClassDefFoundError: org/apache/tools/ant/launch/AntMain
        at java.lang.ClassLoader.defineClass1(Native Method)
        at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:616)
        at org.jboss.classloader.spi.base.BaseClassLoader.access$200(BaseClassLoader.java:63)
        at org.jboss.classloader.spi.base.BaseClassLoader$2.run(BaseClassLoader.java:572)
        at org.jboss.classloader.spi.base.BaseClassLoader$2.run(BaseClassLoader.java:532)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassLocally(BaseClassLoader.java:530)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassLocally(BaseClassLoader.java:507)
        at org.jboss.classloader.spi.base.BaseDelegateLoader.loadClass(BaseDelegateLoader.java:134)
        at org.jboss.classloader.spi.filter.FilteredDelegateLoader.loadClass(FilteredDelegateLoader.java:131)
        at org.jboss.classloader.spi.base.ClassLoadingTask$ThreadTask.run(ClassLoadingTask.java:452)
        at org.jboss.classloader.spi.base.ClassLoaderManager.nextTask(ClassLoaderManager.java:251)
        at org.jboss.classloader.spi.base.ClassLoaderManager.process(ClassLoaderManager.java:150)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:265)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:1119)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassFromDomain(BaseClassLoader.java:798)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClass(BaseClassLoader.java:441)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at org.jboss.deployment.OptAnnotationMetaDataDeployer.processJBossClientMetaData(OptAnnotationMetaDataDeployer.java:115)
        at org.jboss.deployment.OptAnnotationMetaDataDeployer.processMetaData(OptAnnotationMetaDataDeployer.java:82)
        at org.jboss.deployment.AnnotationMetaDataDeployer.deploy(AnnotationMetaDataDeployer.java:177)
        at org.jboss.deployment.AnnotationMetaDataDeployer.deploy(AnnotationMetaDataDeployer.java:93)
        at org.jboss.deployers.plugins.deployers.DeployerWrapper.deploy(DeployerWrapper.java:171)
        ... 30 more
Caused by: java.lang.ClassNotFoundException: org.apache.tools.ant.launch.AntMain
        at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:247)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:292)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:1119)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassFromDomain(BaseClassLoader.java:798)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClass(BaseClassLoader.java:441)
{code}

The issue can be avoided adding: ant-launcher.jar and ant.jar into rar deployer (I've tested version 1.7.1). ",,davsclaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-07 17:35:02.904,,,false,,,,,,,,,,,,,,,,,74766,,,Sat Nov 02 20:59:07 UTC 2013,,,,Patch Available,,,,"0|i0amcv:",59895,,,,,,,,,,,,,,,,,,,"07/Sep/10 17:35;gtully;why do you think this is related to activemq? I am not aware of any mandatory ant dependency in activemq","08/Sep/10 07:04;rjtokenlanring;Yes is not a direct dependency of AMQ, but  I think that this should be added to official AMQ documentation (ant jars).
I added this ticket because the official AMQ rar deployer package doesn't work with JBoss 5.1.","02/Nov/13 20:59;davsclaus;The JCA RAR has been improved a lot in 5.9 and test on JBoss AS etc.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages may be lost when schedule them with a short delay,AMQ-3141,12495727,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,moczarski,moczarski,16/Jan/11 22:03,04/Sep/13 20:51,30/Jan/20 16:55,09/Feb/11 16:05,5.4.2,,,,,,,5.5.0,,,,,,,0,"The message scheduler has an optimization, that the schedule time will be aligned to seconds. All messages which included in the same second will be maintained in one store entry with a list of jobs. 
The list will be read from the store during the main loop, the entries will be executed and the list will be deleted from the store. When new messages are added on the same list during the scheduling, these messages could be lost.
One possible fix could be, that the main loop reads and removes the lists in one atomic step due to a synchronization. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3140,,"16/Jan/11 22:12;moczarski;AMQ3141.patch;https://issues.apache.org/jira/secure/attachment/12468520/AMQ3141.patch","16/Jan/11 22:12;moczarski;AMQ3141Test.patch;https://issues.apache.org/jira/secure/attachment/12468519/AMQ3141Test.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-02-09 16:05:52.136,,,false,,,,,,,,,,,,,,,,,14727,,,Wed Feb 09 16:05:52 UTC 2011,,,,Patch Available,,,,"0|i0ak07:",59514,,,,,,,,,,,,,,,,,,,"16/Jan/11 22:12;moczarski;Test and patch attached.","16/Jan/11 22:16;moczarski;This patch depends on AMQ-3140 because the schedule method must be synchronized so that the main loop use the same lock.","09/Feb/11 16:05;tabish;Patch applied, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ Maven plugin fails to spin up broker in multi module project,AMQ-2293,12483628,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,davsclaus,nbertram,nbertram,17/Jun/09 02:51,25/Jan/13 07:15,30/Jan/20 16:55,25/Jan/13 07:15,5.2.0,,,,,,,5.8.0,,,,,,,0,"If one attampts to specify an absolute path the the activemq configuration file in a maven project using the maven parameters:
{code:xml}
<plugin>
    <groupId>org.apache.activemq.tooling</groupId>
    <artifactId>maven-activemq-plugin</artifactId>
    <version>${activemq.version}</version>
    <configuration>
        <configUri>xbean:file:///${basedir}/src/test/activemq/conf/activemq.xml</configUri>
    </configuration>
</plugin>
{code}

the broker will fail because ${basedir} in maven does not expand to a valid URI string.

Tried as well:
2) Using the xbeam:conf/activemq.xml does not work either as the mojo does not contain the directory on the classpath.

3) Using the base dir and setting the configURI to xbean:file:///./src/test/qctivemq/conf/activemq.xml does work when executing the test phase within a single maven project but as soon as the activemq plugin is run from a module that is part of a project (see attachment example) then the . refers to the path of the parent project and the broker fails to find the file again.

As far as I can see there is not really a sufficient workaround using the activemq.base activemq.home system properties and hence I propose to add another configuration alternative to the maven-activemq-plugin called configFile. This can then be set with the according absolute reference and the URI is properly constructred using the underlying JVM java.io.File.toURI(). Patch attached.

The logic implemented by the patch is, if a configFile is set on the activemq plugin then it will construct a xbean:file:[uri]  else it will use configUri (as usual).





",Windows ONLY,ceposta,damian hudson,nbertram,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/09 02:53;nbertram;AMQ-2293.patch;https://issues.apache.org/jira/secure/attachment/12461539/AMQ-2293.patch","28/Sep/12 05:21;damian hudson;example.zip;https://issues.apache.org/jira/secure/attachment/12546954/example.zip","24/Jan/13 22:36;ceposta;pom.xml;https://issues.apache.org/jira/secure/attachment/12566390/pom.xml","17/Jun/09 02:56;nbertram;test-project.zip;https://issues.apache.org/jira/secure/attachment/12461540/test-project.zip",,,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2012-09-28 05:14:05.761,,,false,,,,,,,,,,,,,,,,,44189,,,Thu Jan 24 22:36:43 UTC 2013,,,,Patch Available,,,,"0|i0amfj:",59907,,,,,,,,,,,,,,,,,,,"17/Jun/09 02:53;nbertram;Patch to fix the issue.","17/Jun/09 02:56;nbertram;An example project that works after applying the patch.","28/Sep/12 05:14;damian hudson;I'm seeing similar behaviour with the maven-activemq-plugin (version 5.6.0).  When I try and use the ${basedir} when setting <configUri>xbean:file:${basedir}/config/activemq.xml</configUri>, it spits out the following error ""Failed to start ActiveMQ Broker: Illegal character in opaque part at index 16"" when I run mvn activemq:run.   Seems to get upset with the backslashes in ${basedir} (eg. xbean:file:c:\dev\workspace\example/config/activemq.xml)  this isn't an issue in Linux, only Windows machines.

I can get around the issue by using a relative path, as Niels did, but also run into problems with Multimoduled projects.  To get around the issue I've had to use GMaven plugin to change the slashes in ${basedir} to forward slashes and feed the modified property into <configUri>, the workaround works, but it's ugly.  If a change could be made to the plugin to cater for the Windows backslashes that would resolve the issue. 

DOESN'T WORK.....
<configUri>xbean:file:${basedir}/config/activemq.xml</configUri>
<configUri>xbean:file:C:\workspace\activemqMavenIssue\example\config\activemq.xml</configUri>
<configUri>xbean:file:C:\\workspace\\activemqMavenIssue\\example\\config\\activemq.xml</configUri>

WORKS.....
<configUri>xbean:file:C:/workspace/activemqMavenIssue/example/config/activemq.xml</configUri>

","24/Jan/13 21:19;ceposta;Looks like Tim fixed this in https://issues.apache.org/jira/browse/AMQ-4140

","24/Jan/13 22:36;ceposta;So I tried with the latest snapshot on windows and verified that it works. See the pom.xml i attached for how to point to the latest snapshot.

If someone else can confirm, so we can close this ticket....",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
webconsole not working for some 'printable version' links,AMQ-2890,12483460,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,zpg,zpg,31/Aug/10 19:34,05/Dec/12 20:46,30/Jan/20 16:55,05/Dec/12 20:46,,,,,,,,5.8.0,,,,,,,0,"To reproduce: in webconsole, go to 'Queues', select a queue, then click on 'printable version':

javax.el.ELException: java.lang.IllegalArgumentException: No JMSDestination parameter specified
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
        at org.apache.jsp.browse_jsp._jspx_meth_jms_forEachMessage_0(org.apache.jsp.browse_jsp:167)
        at org.apache.jsp.browse_jsp._jspService(org.apache.jsp.browse_jsp:100)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
...
Caused by: java.lang.IllegalArgumentException: No JMSDestination parameter specified
        at org.apache.activemq.web.DestinationFacade.getValidDestination(DestinationFacade.java:109)
        at org.apache.activemq.web.QueueBrowseQuery.getQueue(QueueBrowseQuery.java:65)
        at org.apache.activemq.web.QueueBrowseQuery.createBrowser(QueueBrowseQuery.java:91)
        at org.apache.activemq.web.QueueBrowseQuery.getBrowser(QueueBrowseQuery.java:54)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
",any,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-05 20:46:19.894,,,false,,,,,,,,,,,,,,,,,74768,,,Wed Dec 05 20:46:19 UTC 2012,,,,,,,,"0|i0eb5r:",81570,,,,,,,,,,,,,,,,,,,"05/Dec/12 20:46;tabish;Tested and seems to be working for all the pages now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some JMX operations fail with SecurityException with secured broker,AMQ-2521,12483777,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,phil.pickett@springsource.com,phil.pickett@springsource.com,04/Dec/09 18:57,02/Nov/12 15:04,30/Jan/20 16:55,02/Nov/12 15:04,5.3.0,,,,,,,5.6.0,5.7.0,,Broker,,,,0,"I've started a secured broker using the sample configuration as follows:

./activemq xbean:file:../conf/activemq-security.xml

After the broker was started, I used the example ProducerTool to put 2000 messages on the TEST.FOO queue.  For this to work, I modified the ProducerTool to use username/password as follows:

    private String user = ""system"";
    private String password = ""manager"";

I then connected to the broker using jconsole, and created a new queue using the Broker's addQueue MBean operation.  As a test, I also used the TEST.FOO queue's removeMessage MBean operation to remove a message from the queue.

The problem is that certain MBean operations fail with ""Problem invoking moveMessageTo : java.lang.SecurityException: User is not authenticated.""  I have seen this with a queue's sendTextMessage and moveMessageTo operations.

The full exception as logged by the broker for the failed sendTextMessage operation is:

 WARN | Failed to add Connection
java.lang.SecurityException: User name or password is invalid.
	at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:52)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:89)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:666)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:134)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)


This seems similar to AMQ-2516.  I've tried this using the 5.3.1 and 5.4 SNAPSHOTs and see the same thing.
",I've reproduced this on OS X and Linux,akhanzode,chrajanirao,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-11-02 15:04:08.185,,,false,,,,,,,,,,,,,,,,,74909,,,Fri Nov 02 15:04:08 UTC 2012,,,,,,,,"0|i0eb6v:",81575,,,,,,,,,,,,,,,,,,,"02/Nov/12 15:04;tabish;This has since been fixed and works in at least 5.6 and 5.7+",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incoherent documentation / strange property names for advisory messages,AMQ-2170,12483685,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,rgibson,rgibson,20/Mar/09 10:13,01/Aug/12 18:23,30/Jan/20 16:55,01/Aug/12 18:23,5.2.0,,,,,,,5.7.0,,,Documentation,,,,0,"http://activemq.apache.org/per-destination-policies.html says that the advisory messages available for a destination are
advisoryForConsumed
advisoryForDelivered
advisoryForDiscardedMessages
advisoryForSlowConsumers
advsioryForFastProducers
advisoryWhenFull

However, the page at http://activemq.apache.org/advisory-message.html says
advisoryForConsumed
advisoryForDelivery (different)
advisoryForDiscardingMessages (different)
advisoryForSlowConsumers
advisdoryForFastProducers (different)
advisoryWhenFull

The two pages should say the same thing (currently the 2nd page matches the code); and you should also consider changing the name of 'advisdoryForFastProducers' to be 'advisoryForFastProducers' in the code and the documentation to remove the typo.",,jamesc,tabish,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3795,,,,,,"20/Oct/09 12:43;jamesc;fastproducer-method.diff;https://issues.apache.org/jira/secure/attachment/12461328/fastproducer-method.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-10-20 12:43:29.158,,,false,,,,,,,,,,,,,,,,,75042,,,Wed Aug 01 18:23:02 UTC 2012,,,,,,,,"0|i0akrr:",59638,,,,,,,,,,,,,,,,,,,"20/Oct/09 12:43;jamesc;patch to fix the code side of this - rename all get/set/is/AdvisoryForFastProducers methods.

I will fix the docs once this is committed.","01/Aug/12 18:23;tabish;The advisory name updated to remove the bad spelling.

https://issues.apache.org/jira/browse/AMQ-3903",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestinationStatistics.getMessages() returns 0 after reset with messages still in queue,AMQ-2971,12483471,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,bpd@keynetics.com,bpd@keynetics.com,11/Oct/10 18:37,30/Jul/12 17:58,30/Jan/20 16:55,20/Jul/11 20:03,5.3.0,5.3.1,5.3.2,5.4.0,5.4.1,,,5.6.0,,,JMX,,,,0,"A call to org.apache.activemq.broker.jmx.DestinationView.resetStatistics() is implemented as a call to org.apache.activemq.broker.region.DestinationStatistics.reset(). This call sets the DestinationStatistics.messages counter to 0 even if there are messages currently in the queue.

This is functionally the same issue that was resolved for the ""producers"" and ""consumers"" counters in AMQ-1946.

The fix should be as easy as setting the doReset to false for the messages counter.
{code}
messages.setDoReset(false); 
{code}",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-20 20:03:28.587,,,false,,,,,,,,,,,,,,,,,60071,,,Wed Jul 20 20:03:28 UTC 2011,,,,,,,,"0|i0akbz:",59567,,,,,,,,,,,,,,,,,,,"20/Jul/11 20:03;tabish;Find in trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sending without entering a queue name creates an empty queue with a message into it,AMQ-1899,12483257,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,khussein,khussein,19/Aug/08 21:54,10/Feb/12 14:42,30/Jan/20 16:55,10/Feb/12 14:42,5.1.0,5.2.0,,,,,,5.6.0,,,JMS client,,,,0,"Here is how to reproduce it:
1) Click on send in the top menu
2) Then click the send button without entering any information.
It will create a queue with the message into it, but the queue name is empty and I am not sure about the accessibility of this queue. ",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-02-10 14:42:25.128,,,false,,,,,,,,,,,,,,,,,75182,,,Fri Feb 10 14:42:25 UTC 2012,,,,,,,,"0|i0akuf:",59650,,,,,,,,,,,,,,,,,,,"10/Feb/12 14:42;tabish;Fixed in trunk.  Will get an error now from empty destinations names.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Garbage collecting inactive destinations does not work with queue mirroring,AMQ-3157,12496720,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jgomes,jgomes,25/Jan/11 20:26,22/Nov/11 08:30,30/Jan/20 16:55,26/Aug/11 22:25,5.4.2,,,,,,,5.6.0,,,Broker,,,,0,"When using the garbage collection feature of inactive queues, the queues are not collected if queue mirroring is turned on.  The following snippet shows a basic configuration for reproducing the problem:

{code:xml}
<broker xmlns=""http://activemq.apache.org/schema/core""
          brokerName=""localhost""
          dataDirectory=""${activemq.base}/data""
          destroyApplicationContextOnStop=""true""
          schedulePeriodForDestinationPurge=""10000"">

        <destinationInterceptors>
            <mirroredQueue copyMessage=""true"" postfix="""" prefix=""Monitor.""/>
        </destinationInterceptors>

        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <!-- Set auto-cleanup of inactive topics and queues -->
                    <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""50mb"" gcInactiveDestinations=""true"" inactiveTimoutBeforeGC=""30000"">
                        <pendingQueuePolicy>
                            <vmQueueCursor/>
                        </pendingQueuePolicy>
                    </policyEntry>
                    <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""50mb"" gcInactiveDestinations=""true"" inactiveTimoutBeforeGC=""30000"">
                        <pendingSubscriberPolicy>
                            <vmCursor />
                        </pendingSubscriberPolicy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>
</broker>
{code}

With this configuration, the topics will be collected, but the queues will not be collected.  In order to get the queues to be collected, the {{<destinationInterceptors>}} section needs to be commented out.","Windows 2003 Server, Java JDK 1.6",darius.schier,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Aug/11 22:15;tabish;AMQ3157Test.java;https://issues.apache.org/jira/secure/attachment/12491842/AMQ3157Test.java","09/Aug/11 20:20;tabish;AMQ3157Test.java;https://issues.apache.org/jira/secure/attachment/12489881/AMQ3157Test.java",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-07-06 18:46:14.175,,,false,,,,,,,,,,,,,,,,,60092,,,Tue Nov 22 08:30:44 UTC 2011,,,,,,,,"0|i0ajyv:",59508,,,,,,,,,,,,,,,,,,,"06/Jul/11 18:46;tabish;Would be great if you could throw together a JUnit test for this.","09/Aug/11 20:20;tabish;Created a little test case to demonstrate the issue.","26/Aug/11 22:15;tabish;Updated test, old version wasn't quite right.","26/Aug/11 22:25;tabish;fix applied in trunk.","22/Nov/11 08:30;darius.schier;Not sure if we have exactly the same problem but it looks pretty familiar.
We gave the snapshot a try, unfortunately we still have very similar problems as described by Jim.
Same as above: GC seems to work fine with destinations that are available after restart but not with dynamically created ones.
Also queues that were created before restart dynamically and still have some load work fine (as the server creates them on startup).

Here is our configuration.

{code:xml}
<destinationInterceptors>
  <mirroredQueue copyMessage = ""true"" postfix="".qmirror"" prefix=""""/>
</destinationInterceptors>
<destinationPolicy>
  <policyMap>
    <policyEntries>
      <policyEntry topic=""testQueue.>"" producerFlowControl=""false"" memoryLimit=""1 mb"" optimizedDispatch=""true""></policyEntry>
      <policyEntry queue=""testQueue.>"" producerFlowControl=""false"" memoryLimit=""1 mb"" optimizedDispatch=""true""></policyEntry>
    </policyEntries>
  </policyMap>
</destinationPolicy>

<persistenceAdapter>
  <kahaDB directory=""${activemq.base}/data/kahadb""/>
</persistenceAdapter>

<systemUsage>
  <systemUsage>
    <memoryUsage>
      <memoryUsage limit=""10 mb""/>
    </memoryUsage>
    <storeUsage>
      <storeUsage limit=""10 gb""/>
    </storeUsage>
    <tempUsage>
      <tempUsage limit=""10 mb""/>
    </tempUsage>
  </systemUsage>
</systemUsage>
{code} 

Would you mind to reopen this issue? 
We use mirrors a lot. From our point of view this could lead to OOM, so we think the priority could/should be increased.

Regards
Darius",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LoggingBrokerPluggin doesn't log to the DLQ,AMQ-2604,12483184,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,rajdavies,rajdavies,15/Feb/10 05:52,21/Sep/11 10:00,30/Jan/20 16:55,15/Feb/10 05:56,5.3.0,,,,,,,5.4.0,,,,,,,0,"The LoggingBrokerPlugin fails to pass messages to a DLQ - this looks like an omission -  see 
http://old.nabble.com/LoggingBrokerPlugin-and-DLQ-td27588791.html",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-21 10:00:48.307,,,false,,,,,,,,,,,,,,,,,59940,,,Wed Sep 21 10:00:48 UTC 2011,,,,,,,,"0|i0rqvr:",159999,,,,,,,,,,,,,,,,,,,"15/Feb/10 05:56;rajdavies;Fixed by SVN revision 910163","21/Sep/11 10:00;sreepanchajanyam;is this revision included in 5.4.2?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
connection stats appear broken,AMQ-2655,12483739,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,davisond,davisond,18/Mar/10 09:48,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.3.0,,,,,,,5.6.0,,,,,,,0,"connection stats (as used at the end of the ""producer"" ant target in the samples) show 0 for each count regardless of how many messages are sent.  i.e.:
{noformat}
     [java] connection {
     [java]   session {
     [java]     messageCount{ count: 0 unit: count startTime: 1268866472026 lastSampleTime: 1268866472026 description: Number of messages exchanged }
     [java]     messageRateTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472026 lastSampleTime: 1268866472026 description: Time taken to process a message (thoughtput rate) }
     [java]     pendingMessageCount{ count: 0 unit: count startTime: 1268866472026 lastSampleTime: 1268866472026 description: Number of pending messages }
     [java]     expiredMessageCount{ count: 0 unit: count startTime: 1268866472026 lastSampleTime: 1268866472026 description: Number of expired messages }
     [java]     messageWaitTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472026 lastSampleTime: 1268866472026 description: Time spent by a message before being delivered }
     [java]     durableSubscriptionCount{ count: 0 unit: count startTime: 1268866472026 lastSampleTime: 1268866472026 description: The number of durable subscriptions }
     [java] 
     [java]     producers {
     [java]       producer queue://TEST.RECEIVED {
     [java]         messageCount{ count: 0 unit: count startTime: 1268866472032 lastSampleTime: 1268866472032 description: Number of messages processed }
     [java]         messageRateTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472032 lastSampleTime: 1268866472032 description: Time taken to process a message (thoughtput rate) }
     [java]         pendingMessageCount{ count: 0 unit: count startTime: 1268866472032 lastSampleTime: 1268866472032 description: Number of pending messages }
     [java]         messageRateTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472032 lastSampleTime: 1268866472032 description: Time taken to process a message (thoughtput rate) }
     [java]         expiredMessageCount{ count: 0 unit: count startTime: 1268866472032 lastSampleTime: 1268866472032 description: Number of expired messages }
     [java]         messageWaitTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1268866472032 lastSampleTime: 1268866472032 description: Time spent by a message before being delivered }
     [java]       }
     [java]     }
     [java]     consumers {
     [java]     }
     [java]   }
     [java] }

{noformat}","Linux 2.6.31, JDK 6",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-05 15:38:55.522,,,false,,,,,,,,,,,,,,,,,60032,,,Tue Sep 20 11:01:39 UTC 2011,,,,,,,,"0|i0akj3:",59599,,,,,,,,,,,,,,,,,,,"05/Aug/11 15:38;tabish;No test case to allow for reproduction of this issue.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerView Returns Invalid ObjectName Array Size For InactiveDurableTopicSubscribers,AMQ-2202,12483657,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,joef,joef,09/Apr/09 15:21,20/Sep/11 11:01,30/Jan/20 16:55,20/Sep/11 11:01,5.2.0,,,,,,,5.6.0,,,JMX,,,,0,"I bring up a fresh instance of the message broker, I then have my durable topic subscriber connect with the broker. The BrokerView object renders the correct ObjectName  array sizes for DurableTopicSubscribers and InactiveDurableSubscribers on the JConsole. That is, the array sizes are 1 and 0, respectively. I then shut down my durable subscriber  at which point I would expect to see the ObjectName  array size for InactiveDurableSubscribers go up to 1, but that is not the case; it remains at 0. Or am I misinterpreting InactiveDurableSubscribers?","AMQ 5.2, Windoze XP Pro, and JDK 1.5",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-11 20:03:48.481,,,false,,,,,,,,,,,,,,,,,60047,,,Tue Sep 20 11:01:36 UTC 2011,,,,,,,,"0|i0akrj:",59637,,,,,,,,,,,,,,,,,,,"11/Aug/11 20:03;tabish;Not test case provided to allow the issue to be reproduced or investigated.","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpTunnelServlet incorrectly swallows exceptions during transport creation.,AMQ-3012,12483831,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,stirlingc,stirlingc,02/Nov/10 20:53,20/Sep/11 10:42,30/Jan/20 16:55,06/Jul/11 23:07,5.4.1,,,,,,,5.6.0,,,Transport,,,,0,"Symptom
=======
org.apache.activemq.transport.http.HttpTunnelServlet.java contains the following logic:

    protected BlockingQueueTransport createTransportChannel(HttpServletRequest request, HttpServletResponse response) throws IOException {
...
            clients.put(clientID, answer);
            Transport transport = answer;
            try {
                HashMap options = new HashMap(transportOptions);
                transport = transportFactory.serverConfigure(answer, null, options);
            } catch (Exception e) {
               IOExceptionSupport.create(e);
            }

If the call to transportFactory.serverConfigure(...) throws an exception, IOExceptionSupport.create(e) is called, which wraps the exception in an IOException, but that IOException is never thrown.

Solution
=======
See attached patch file.  Add a ""throw"" clause to propagate the IOException.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Nov/10 20:53;stirlingc;patch.txt;https://issues.apache.org/jira/secure/attachment/12461828/patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-07-06 23:07:31.213,,,false,,,,,,,,,,,,,,,,,60103,,,Wed Jul 06 23:07:31 UTC 2011,,,,Patch Available,,,,"0|i0akaf:",59560,,,,,,,,,,,,,,,,,,,"02/Nov/10 20:53;stirlingc;Patch for HttpTunnelServlet.java","06/Jul/11 23:07;tabish;Patch applied, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"enqueue count, dequeue count and dispatch queue size always 0 for any connections shown in the ActiveMQ web console.",AMQ-2302,12482600,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,tmielke,tmielke,24/Jun/09 15:20,03/Jun/11 09:39,30/Jan/20 16:55,18/Aug/09 12:50,5.2.0,,,,,,,5.3.0,,,JMX,,,,0,"In the connection view of the ActiveMQ web console, all statistics such as enqueue count, dequeue count and dispatch queue size are always 0, although messages are pushed through on that connections. See the screenshot.
",ActiveMQ 5.3.0.2-fuse,john.greeley,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3356,,,,,"24/Jun/09 15:22;tmielke;detailed connection view.jpg;https://issues.apache.org/jira/secure/attachment/12461547/detailed+connection+view.jpg",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-06-24 15:54:35.987,,,false,,,,,,,,,,,,,,,,,72183,,,Tue Aug 18 12:50:37 UTC 2009,,,,,,,,"0|i14bzr:",233406,,,,,,,,,,,,,,,,,,,"24/Jun/09 15:22;tmielke;See the statistics data enqueue count, dequeue count and dispatch queue size which are all 0.
","24/Jun/09 15:54;gtully;these were explicitly disabled as they caused to much of a contention overhead.
see: http://svn.apache.org/viewvc?view=rev&revision=634420

Is there real value in them?","01/Jul/09 13:20;jamesc;Hi Gary, I originally raised this issue on the FUSE forum.

I don't mind if they're removed, but the counts on the 'connections' tab should also be removed, rather than showing 0.  Right now since the enqueue/dequeue counts on the topics and queues views do show the right data, I had an assumption that these might too.","06/Aug/09 17:34;gtully;would be good to get these removed from the jmx and webconsole for 5.3 as they are now obsolete. re scheduling for 5.3","18/Aug/09 12:50;dejanb;Fixed in SVN revision 805396",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Copyright banner on page footer of ActiveMQ Console is outdated,AMQ-2718,12483613,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,sebb,,02/May/10 01:00,05/Mar/11 18:22,30/Jan/20 16:55,05/Mar/11 18:22,5.3.1,,,,,,,5.5.0,,,,,,,0,"Copyright banner on page footer of ActiveMQ Console is outdated - for example, page http://localhost:8161/admin/index.jsp has

Copyright 2005-2007 The Apache Software Foundation

The same problem applies to all the other Admin pages.

Also, the Home page fails to show the ActiveMQ version, which would be a useful addition.",http://localhost:8161/admin/index.jsp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-05 18:22:35.819,,,false,,,,,,,,,,,,,,,,,74830,,,Sat Mar 05 18:22:35 UTC 2011,,,,,,,,"0|i0akfz:",59585,,,,,,,,,,,,,,,,,,,"05/Mar/11 18:22;tabish;Copyright notice updated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PGP Signature does not validate. The signing key is not located in the KEYS.txt,AMQ-2731,12483770,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,aletheia7,aletheia7,13/May/10 00:52,05/Mar/11 05:48,30/Jan/20 16:55,05/Mar/11 05:48,5.3.2,,,,,,,5.3.2,,,,,,,0,"The signing key for apache-activemq-5.3.2-bin.tar.gz is not located in the KEYS.txt. The SHA1 hash does verify!

According to the website: http://activemq.apache.org/activemq-532-release.html, the following commands should verify the signature of apache-activemq-5.3.2-bin.tar.gz.

$ gpg --import KEYS.txt
$ gpg --verify apache-activemq-5.3.2-bin.tar.gz.asc

Here is the output:
$ gpg --import KEYS.txt
gpg: key F5BA7E4F: ""Hiram Chirino <hiram@hiramchirino.com>"" not changed
gpg: key 56F3E01B: ""David Jencks (geronimo) <david_jencks@yahoo.com>"" not changed
gpg: key 456DFEA9: ""David M. Johnson (Dave Johnson) <snoopdave@apache.org>"" not changed
gpg: key 17AA5B25: ""David Johnson <snoopdave@apache.org>"" not changed
gpg: key 69CC103E: ""Gary Tully (key for apache releases) <gary.tully@gmail.com>"" not changed
gpg: key 2C983957: ""Bruce Snyder <bsnyder@apache.org>"" not changed
gpg: key 6852C7DA: ""Dejan Bosanac <dejan@nighttale.net>"" not changed
gpg: Total number processed: 7
gpg:              unchanged: 7
root@s:/var/www# gpg --verify apache-activemq-5.3.2-bin.tar.gz.asc
gpg: Signature made Mon 26 Apr 2010 03:24:47 PM PDT using RSA key ID A2F9E313
gpg: Can't check signature: public key not found",Ubuntu Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74824,,,Sat Mar 05 05:48:24 UTC 2011,,,,,,,,"0|i0ttj3:",172093,,,,,,,,,,,,,,,,,,,"05/Mar/11 05:48;aletheia7;gpg --verify works correctly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Please make the following configuration changes so releases into production are simpler,AMQ-1604,12483410,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,sparky2708,sparky2708,28/Feb/08 20:42,27/Feb/11 21:42,30/Jan/20 16:55,27/Feb/11 21:42,4.0.2,4.1.0,4.1.1,5.0.0,,,,5.5.0,,,Broker,,,,0,"
(1) Please rename the activemq-all-<version>.jar to just activemq-all.jar. It will make it easier for users to switch version. We would generally put the activemq release on a shared drive and change the pointer ""prod"", ""dev"" or ""staging"" to point to the new directory. It would be nice if the activemq-all.jar was present in all releases so the link would be the only thing I would need to change.

(2) Please change the log4j appender:
log4j.appender.out.file=${activemq.base}/data/activemq.log 
Oftentimes activemq is in a protected directory on a network drive (${activemq.base}/) so many machines can use it. It would be better if the log file would log to /tmp  or something else the user can configure. Maybe it can be configured in the activemq.xml file? (I always have to change this every time we upgrade to a new version)",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-27 21:42:12.248,,,false,,,,,,,,,,,,,,,,,84412,,,Sun Feb 27 21:42:12 UTC 2011,,,,,,,,"0|i0akvb:",59654,,,,,,,,,,,,,,,,,,,"27/Feb/11 21:42;tabish;1. The activemq all jar will retain its version number
2. This has been fixed along with other updates to the run scripts.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP connector assigns wrong default priority to incoming messages,AMQ-3006,12483822,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,mjustin,mjustin,28/Oct/10 18:11,16/Feb/11 22:55,30/Jan/20 16:55,16/Feb/11 22:55,5.4.1,,,,,,,5.5.0,,,Transport,,,,0,"If a client sends a Stomp frame without a priority header, the broker does not set the message priority to the default value (4) which is specified in the JMS spec (see http://download.oracle.com/javaee/1.4/api/javax/jms/Message.html: DEFAULT_PRIORITY The message producer's default priority is 4.) 

As effect, the message will have priority 0 (lowest).

Adding a priority header for all messages by the Stomp client, even for default priority, would also cause larger messages to be sent over the wire.

",Windows Vista,mjustin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-16 22:55:20.749,,,false,,,,,,,,,,,,,,,,,14688,,,Wed Feb 16 22:55:20 UTC 2011,,,,,,,,"0|i0akav:",59562,,,,,,,,,,,,,,,,,,,"16/Feb/11 22:55;tabish;Applied fix in trunk to properly set default priority if one isn't set on the message.

Created a test to ensure it stays fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client should provide handling of JMSPriority messages outside of range 0-9.,AMQ-3093,12493446,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,gliesian,gliesian,16/Dec/10 17:42,16/Feb/11 21:05,30/Jan/20 16:55,16/Feb/11 21:05,5.4.2,,,,,,,5.5.0,,,,,,,0,"The JMS spec states, ""JMS defines a ten-level priority value, with 0 as the lowest priority and 9 as the
highest. In addition, clients should consider priorities 0-4 as gradations of
normal priority and priorities 5-9 as gradations of expedited priority.""

As such, you would assume that the client would abide by these rules and only set the priority between 0 and 9.

The ActiveMQ web console allows for inputting any string.  It appears as if the client is looking for a value of type ""byte"" as it t transforms 128 into -128, and character strings to 0.

I would recommend error handling for this condition by the client.  For example, if the value is over 9, set the value to 9, 4 (highest normal) or 0 (lowest priority).... whatever makes the most sense.... or don't process the message at all, as it's malformed (in a sense).

Note: Really large integers appears to mess up the queue altogether.
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/10 17:51;gliesian;JMSPriority.PNG;https://issues.apache.org/jira/secure/attachment/12466395/JMSPriority.PNG",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-02-16 21:05:21.869,,,false,,,,,,,,,,,,,,,,,43738,,,Wed Feb 16 21:05:21 UTC 2011,,,,,,,,"0|i0ak5j:",59538,,,,,,,,,,,,,,,,,,,"16/Feb/11 21:05;tabish;Tested against trunk cannot reproduce.  Marked as fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException in ActiveMQ Journal Checkpoint Worker,AMQ-3160,12496738,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,ccondit,ccondit,25/Jan/11 22:50,26/Jan/11 12:15,30/Jan/20 16:55,26/Jan/11 12:15,5.4.2,,,,,,,5.5.0,,,Message Store,,,,0,"There appears to be a race condition accessing Journal.getHashMap() from the ActiveMQ Journal Checkpoint Worker thread. Under high loads, we occasionally see the following exception in our logs:

Exception in thread ""ActiveMQ Journal Checkpoint Worker"" java.util.ConcurrentModificationException
      at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
      at java.util.HashMap$EntryIterator.next(HashMap.java:834)
      at java.util.HashMap$EntryIterator.next(HashMap.java:832)
      at java.util.AbstractMap.putAll(AbstractMap.java:255)
      at java.util.TreeMap.putAll(TreeMap.java:304)
      at java.util.TreeMap.<init>(TreeMap.java:162)
      at org.apache.kahadb.journal.Journal.getFileMap(Journal.java:660)
      at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:970)
      at org.apache.activemq.store.kahadb.MessageDatabase.access$400(MessageDatabase.java:82)
      at org.apache.activemq.store.kahadb.MessageDatabase$9.execute(MessageDatabase.java:599)
      at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
      at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:597)
      at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:249)

This leads to the thread aborting prematurely.",CentOS 5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-26 12:15:59.232,,,false,,,,,,,,,,,,,,,,,14711,,,Wed Jan 26 12:15:59 UTC 2011,,,,,,,,"0|i0ajyf:",59506,,,,,,,,,,,,,,,,,,,"26/Jan/11 12:15;gtully;sync added in r1063691

URL: http://svn.apache.org/viewvc?rev=1063691&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reference to http://activemq.org/ in http://activemq.apache.org/initial-configuration.html#InitialConfiguration-RelatedReading,AMQ-2686,12483272,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,bsnyder,sebb,,05/Apr/10 22:50,18/Jan/11 00:40,30/Jan/20 16:55,06/Apr/10 03:10,,,,,,,,,,,,,,,0,"The page http://activemq.apache.org/initial-configuration.html#InitialConfiguration-RelatedReading has a link:

<li>The ActiveMQ <a href=""http://activemq.org/"" rel=""nofollow"">Website</a> for specifics on how to use ActiveMQ</li>

Surely the ActiveMQ website is now http://www.activemq.apache.org/ ?

BTW, the URL http://activemq.org/ is not currently responding.
",http://activemq.apache.org/initial-configuration.html#InitialConfiguration-RelatedReading,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-06 03:10:31.788,,,false,,,,,,,,,,,,,,,,,74845,,,Tue Apr 06 03:10:31 UTC 2010,,,,,,,,"0|i182tj:",255259,,,,,,,,,,,,,,,,,,,"06/Apr/10 03:10;bsnyder;Fixed in the wiki. The change will be auto-exported soon. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ Web Console ""Scheduled"" Tab Invocation Fails and returns an unclear message.",AMQ-3088,12493335,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,gliesian,gliesian,15/Dec/10 15:20,29/Dec/10 17:50,30/Jan/20 16:55,29/Dec/10 17:50,5.4.2,,,,,,,5.5.0,,,,,,,0,"Clicking on the ""Scheduled"" tab of the AMQ Web Console redirects to a page where all the tabs are removed (Home | Queues | Topics | Subscribers | Connections | Scheduled | Send) and the following message is presented:

""Error! Exception occurred while processing this request, check the log for more information!""

It is not intuitive why this is occurring.  From a design approach, I would expect the tabs to remain and a more descriptive error message to be provided, and maybe even a link to related documentation.   I had to do a top-level search to get to this page: http://activemq.apache.org/delay-and-schedule-message-delivery.html.  I assume it's related.

In the log you will find this (as such, I assume the scheduling features aren't being used and the web site isn't gracefully reporting on this):

2010-12-15 10:03:36,069 | WARN  | /admin/scheduled.jsp | org.eclipse.jetty.util.log | qtp27635615-44
javax.el.ELException: java.lang.IllegalArgumentException: Null object name
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
	at org.apache.jsp.scheduled_jsp._jspx_meth_c_forEach_0(org.apache.jsp.scheduled_jsp:118)
	at org.apache.jsp.scheduled_jsp._jspService(org.apache.jsp.scheduled_jsp:90)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1216)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:493)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:445)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
	at org.eclipse.jetty.server.Server.handle(Server.java:351)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalArgumentException: Null object name
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:128)
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:97)
	at javax.management.MBeanServerInvocationHandler.newProxyInstance(MBeanServerInvocationHandler.java:217)
	at org.apache.activemq.broker.jmx.ManagementContext.newProxyInstance(ManagementContext.java:290)
	at org.apache.activemq.web.LocalBrokerFacade.newProxyInstance(LocalBrokerFacade.java:88)
	at org.apache.activemq.web.BrokerFacadeSupport.getJobScheduler(BrokerFacadeSupport.java:206)
	at org.apache.activemq.web.BrokerFacadeSupport.getScheduledJobs(BrokerFacadeSupport.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
	... 46 more
2010-12-15 10:05:38,609 | WARN  | /admin/scheduled.jsp | org.eclipse.jetty.util.log | qtp27635615-43
javax.el.ELException: java.lang.IllegalArgumentException: Null object name
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
	at org.apache.jsp.scheduled_jsp._jspx_meth_c_forEach_0(org.apache.jsp.scheduled_jsp:118)
	at org.apache.jsp.scheduled_jsp._jspService(org.apache.jsp.scheduled_jsp:90)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1216)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:493)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:445)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
	at org.eclipse.jetty.server.Server.handle(Server.java:351)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalArgumentException: Null object name
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:128)
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:97)
	at javax.management.MBeanServerInvocationHandler.newProxyInstance(MBeanServerInvocationHandler.java:217)
	at org.apache.activemq.broker.jmx.ManagementContext.newProxyInstance(ManagementContext.java:290)
	at org.apache.activemq.web.LocalBrokerFacade.newProxyInstance(LocalBrokerFacade.java:88)
	at org.apache.activemq.web.BrokerFacadeSupport.getJobScheduler(BrokerFacadeSupport.java:206)
	at org.apache.activemq.web.BrokerFacadeSupport.getScheduledJobs(BrokerFacadeSupport.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
	... 46 more
2010-12-15 10:08:20,771 | WARN  | /admin/scheduled.jsp | org.eclipse.jetty.util.log | qtp27635615-43
javax.el.ELException: java.lang.IllegalArgumentException: Null object name
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
	at org.apache.jsp.scheduled_jsp._jspx_meth_c_forEach_0(org.apache.jsp.scheduled_jsp:118)
	at org.apache.jsp.scheduled_jsp._jspService(org.apache.jsp.scheduled_jsp:90)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1216)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:493)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:445)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
	at org.eclipse.jetty.server.Server.handle(Server.java:351)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalArgumentException: Null object name
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:128)
	at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:97)
	at javax.management.MBeanServerInvocationHandler.newProxyInstance(MBeanServerInvocationHandler.java:217)
	at org.apache.activemq.broker.jmx.ManagementContext.newProxyInstance(ManagementContext.java:290)
	at org.apache.activemq.web.LocalBrokerFacade.newProxyInstance(LocalBrokerFacade.java:88)
	at org.apache.activemq.web.BrokerFacadeSupport.getJobScheduler(BrokerFacadeSupport.java:206)
	at org.apache.activemq.web.BrokerFacadeSupport.getScheduledJobs(BrokerFacadeSupport.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
	... 46 more
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-29 17:50:12.511,,,false,,,,,,,,,,,,,,,,,14765,,,Wed Dec 29 17:50:12 UTC 2010,,,,,,,,"0|i0ak5z:",59540,,,,,,,,,,,,,,,,,,,"29/Dec/10 17:50;dejanb;fixed with svn revision 1053683",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Producer Flow Control Does Not Seem to Work with Topics,AMQ-2683,12483568,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,odysseyfx,odysseyfx,02/Apr/10 22:22,27/Dec/10 12:34,30/Jan/20 16:55,27/Dec/10 12:34,5.3.0,5.3.1,,,,,,5.5.0,,,Broker,,,,2,"I have multiple producers posting messages to queues and adding statistical information to a topic.  I have one consumer of that topic subscribing and taking those messages and monitors for problems.  The consumer is slower than publishing to the topic.  I have flow control enabled and I expected that once the memory limit of the Consumers dispatch queue was reached it would throttle the publishers to the topic, but instead it seems to lock everything up.

The message producers are putting messages to each queue and the topic on separate sessions.  The broker basically stops once it posts the message that it's going to throttle producers.  The topic messages are messages with text attributes, they are non persistent and posted non-transactional using the AUTO_ACKNOWLEDGE mode.

All the producers and consumers use the same Connection factory with with these attributes set.

ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(brokerURI);
factory.setProducerWindowSize(1024 * 1024);
factory.getPrefetchPolicy().setTopicPrefetch(10);


My activemq config is as follows:

    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.base}/data"" destroyApplicationContextOnStop=""true"">
 
        <!--
			For better performances use VM cursor and small memory limit.
			For more information, see:
            
            http://activemq.apache.org/message-cursors.html
            
            Also, if your producer is ""hanging"", it's probably due to producer flow control.
            For more information, see:
            http://activemq.apache.org/producer-flow-control.html
        -->
              
        <destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""15mb"">
                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
                <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""15mb"">
                  <!-- Use VM cursor for better latency
                       For more information, see:
                       
                       http://activemq.apache.org/message-cursors.html
                       
                  <pendingQueuePolicy>
                    <vmQueueCursor/>
                  </pendingQueuePolicy>
                  -->
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy> 
 
        
        <!-- 
            The managementContext is used to configure how ActiveMQ is exposed in 
            JMX. By default, ActiveMQ uses the MBean server that is started by 
            the JVM. For more information, see: 
            
            http://activemq.apache.org/jmx.html 
        -->
        <managementContext>
            <managementContext createConnector=""false""/>
        </managementContext>

        <!-- 
            Configure message persistence for the broker. The default persistence
            mechanism is the KahaDB store (identified by the kahaDB tag). 
            For more information, see: 
            
            http://activemq.apache.org/persistence.html 
        -->
        <persistenceAdapter>
            <kahaDB directory=""${activemq.base}/data/kahadb"" journalMaxFileLength=""5 mb""/>
        </persistenceAdapter>
        
        
        <!--
            The systemUsage controls the maximum amount of space the broker will 
            use before slowing down producers. For more information, see:
            
            http://activemq.apache.org/producer-flow-control.html
        -->     
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit=""200 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""50 gb""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""100 mb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
	
		  
        <!-- 
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see: 
            
            http://activemq.apache.org/configuring-transports.html 
        -->
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>

    </broker>
","Windows 2008 Server, Sun Java 6. ",mdirkse,odysseyfx,srpietrowicz,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-14 01:29:30.489,,,false,,,,,,,,,,,,,,,,,14785,,,Mon Dec 27 12:34:46 UTC 2010,,,,,,,,"0|i0akhb:",59591,,,,,,,,,,,,,,,,,,,"14/Jul/10 01:29;srpietrowicz;I'm seeing this same issue, same results.","14/Jul/10 09:40;gtully;could you build a test case that can demonstrate, possibly a topic version of http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/ProducerFlowControlTest.java?view=markup","23/Dec/10 15:42;mdirkse;Well, it's not a topic version of the PFC test in the AMQ source, but I'm pretty confident it does demonstrate that PFC doesn't work for topics.
If you run the code you'll see the producer halt when PFC kicks in, and never start up again, even when the consumer has consumed all outstanding messages. If you change the Destination from a topic to a queue, PFC does work as expected. 

{code}
import java.util.Arrays;
import java.util.concurrent.atomic.AtomicLong;

import javax.jms.Connection;
import javax.jms.Destination;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.MessageProducer;
import javax.jms.Session;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.broker.BrokerService;
import org.apache.activemq.broker.region.policy.PolicyEntry;
import org.apache.activemq.broker.region.policy.PolicyMap;
import org.apache.activemq.command.ActiveMQTopic;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class BrokerTest implements MessageListener {
  private static final Log log = LogFactory.getLog(BrokerTest.class);
  private static final String brokerName = ""testBroker"";
  private static final String brokerUrl = ""vm://"" + brokerName;
  private static final int destinationMemLimit = 2097152; // 2MB
  private static final AtomicLong produced = new AtomicLong();
  private static final AtomicLong consumed = new AtomicLong();

  public static void main(String[] args) throws Exception {
    // Setup and start the broker
    BrokerService broker = new BrokerService();
    broker.setBrokerName(brokerName);
    broker.setPersistent(false);
    broker.setSchedulerSupport(false);
    broker.setUseJmx(false);
    broker.setUseShutdownHook(false);
    broker.addConnector(brokerUrl);

    // Setup the destination policy
    PolicyMap pm = new PolicyMap();

    // Setup the topic destination policy
    PolicyEntry tpe = new PolicyEntry();
    tpe.setTopic("">"");
    tpe.setMemoryLimit(destinationMemLimit);
    tpe.setProducerFlowControl(true);

    // Setup the topic destination policy
    PolicyEntry qpe = new PolicyEntry();
    qpe.setQueue("">"");
    qpe.setMemoryLimit(destinationMemLimit);
    qpe.setProducerFlowControl(true);
    qpe.setQueuePrefetch(1);

    pm.setPolicyEntries(Arrays.asList(new PolicyEntry[] { tpe, qpe }));

    broker.setDestinationPolicy(pm);

    // Start the broker
    broker.start();

    Destination destination = new ActiveMQTopic(""test"");
    //Destination destination = new ActiveMQQueue(""test"");

    // Create the connection factory
    ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(brokerUrl);
    connectionFactory.setAlwaysSyncSend(true);
    connectionFactory.setProducerWindowSize(1024);

    // Start the test destination listener
    Connection c = connectionFactory.createConnection();
    c.start();
    c.createSession(false, 1).createConsumer(destination).setMessageListener(new BrokerTest());

    // Start producing the test messages
    Session s = connectionFactory.createConnection().createSession(false, Session.AUTO_ACKNOWLEDGE);
    MessageProducer p = s.createProducer(destination);

    for (long i = 0; i < 2000000L; i++) {
      p.send(s.createTextMessage(""test""));

      long count = produced.incrementAndGet();
      if (count % 1000 == 0) {
        log.debug(""Produced "" + count / 1000 + ""k messages"");
      }
    }
  }

  @Override
  public void onMessage(Message arg0) {
    try {
      Thread.sleep(1);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }

    long count = consumed.incrementAndGet();
    if (count % 1000 == 0) {
      log.debug(""\tConsumed "" + count / 1000 + ""k messages"");
    }
  }
}
{code}","23/Dec/10 16:39;mdirkse;The testcase does not work as expected (ie PFC doesn't work for topics) for both 5.4.2 and 5.5-snapshot.","27/Dec/10 12:34;dejanb;Fixed with svn revision 1053055. The test based on the one Maarten provided is included as well. Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
spurious KahaDB warnings ,AMQ-3076,12492803,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,aivanise,aivanise,09/Dec/10 08:37,09/Dec/10 11:59,30/Jan/20 16:55,09/Dec/10 11:59,5.4.0,5.4.1,5.4.2,,,,,5.5.0,,,Message Store,,,,0,"
please reduce to DEBUG or remove alltogether, see discussion from the mailing list below

thanks.

2010-12-09 09:31:46,613 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 142 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:32:52,240 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 117 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:32:57,377 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 116 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:34:03,052 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 111 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:34:08,276 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 202 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:34:53,207 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 208 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
2010-12-09 09:35:28,377 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 283 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker



From: Gary Tully <gary.tully-Re5JQEeQqe8AvxtiuMwx3w@public.gmane.org>
Subject: Re: KahaDB latch wait warnings
Newsgroups: gmane.comp.java.activemq.user
Date: Wed, 8 Dec 2010 15:24:00 +0000

In the main, it is not important, that should be at debug or trace
level logging or removed altogether, it is just an indication of the
pagefile sync to disk latency and the amount of concurrent writes that
are pending at the time, an remnant of some performance tuning work
that was done for 5.4.0. the 100ms limit is arbitrary.
Do u mind tracking this with a jira issue as it will probably come up again.

On 8 December 2010 13:54, Aleksandar Ivanisevic
<aleksandar-9OxODCspnFtM+jpbqlvknA@public.gmane.org> wrote:
>
>
> Just switched to kahadb on my amq 5.4.1 (fuse) and the log is filling
> with this:
>
>
> 2010-12-08 14:26:12,668 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 119 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
> 2010-12-08 14:28:03,769 | WARN  | KahaDB PageFile flush: 7 queued writes, latch wait took 140 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
> 2010-12-08 14:28:39,125 | WARN  | KahaDB PageFile flush: 3 queued writes, latch wait took 112 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
> 2010-12-08 14:30:04,928 | WARN  | KahaDB PageFile flush: 8 queued writes, latch wait took 109 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
> 2010-12-08 14:30:28,788 | WARN  | KahaDB PageFile flush: 8 queued writes, latch wait took 18839 | org.apache.kahadb.page.PageFile | ActiveMQ Journal Checkpoint Worker
>
> quick code search turns out that this warning is fixed to 100ms
>
> http://bit.ly/gYH1Zu
>
> why 100ms and why is this important?
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-09 11:59:06.008,,,false,,,,,,,,,,,,,,,,,14771,,,Thu Dec 09 11:59:06 UTC 2010,,,,,,,,"0|i0ak73:",59545,,,,,,,,,,,,,,,,,,,"09/Dec/10 08:52;aivanise;

adding 

log4j.logger.org.apache.kahadb.page.PageFile=ERROR

to /opt/activemq/conf/log4j.properties

silences this warning. Don't know what else it may silence though","09/Dec/10 11:59;gtully;debug perf logging code removed in r1043912",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add property placeholder bean to activemq-jdbc.xml,AMQ-3054,12483899,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,dejanb,dejanb,25/Nov/10 10:02,25/Nov/10 10:07,30/Jan/20 16:55,25/Nov/10 10:07,5.4.1,,,,,,,5.4.2,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14762,,,Thu Nov 25 10:07:54 UTC 2010,,,,,,,,"0|i0b9uv:",63709,,,,,,,,,,,,,,,,,,,"25/Nov/10 10:07;dejanb;Fixed with svn revision 1038976",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The spring.schemas file contains an invalid mapping ,AMQ-3005,12483815,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,mmonette,mmonette,27/Oct/10 15:37,28/Oct/10 13:27,30/Jan/20 16:55,28/Oct/10 13:27,5.4.1,,,,,,,5.4.2,,,,,,,0,"The spring.schemas file, in META-INF, contains the following mappings:

http\://activemq.org/config/1.0=activemq.xsd
http\://activemq.org/config/1.0/1.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd
http\://activemq.apache.org/schema/core/activemq-core-${pom.version}.xsd=activemq.xsd

The final mapping contains an unresolved placeholder, ${pom.version}.  XML files which use, for example http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd as a schemaLocation reference will fail to be mapped correctly with the spring.schemas mechanism.  This failure is silent on an internet-connected machine which is allowed to resolve the schemaLocation through the http:// url.  When the machine is not internet-connected, though, the failure rears its ugly head and smacks down hard on my webapp's startup with a SAXParseException.",,mmonette,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-28 13:11:46.646,,,false,,,,,,,,,,,,,,,,,14761,,,Thu Oct 28 13:27:26 UTC 2010,,,,,,,,"0|i0b9qf:",63689,,,,,,,,,,,,,,,,,,,"28/Oct/10 13:11;gtully;The lack of filtering must be the result of a change to the resources plugin or the apache parent pom. In any event, just filtering the current version does not give us what we want for backward compatibility. We want all previous versions referenced so that existing schema references will still work. 

This is tricky to automate as it requires a commit and part of the pre release process. For the moment it may just be best to add the current and a set of future versions and note that it needs to be checked before doing a release.","28/Oct/10 13:27;gtully;updated the file and added a few past and future versions. Added note to the release guide to ensure it is not missed in the future: http://activemq.apache.org/release-guide.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Startup script does not respect JAVA_HOME environment variable.,AMQ-2912,12483534,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,pschwamb,pschwamb,13/Sep/10 15:35,13/Sep/10 20:46,30/Jan/20 16:55,13/Sep/10 20:46,5.4.0,,,,,,,5.4.1,,,Broker,,,,0,"With the latest release, if java is not in PATH, and JAVA_HOME is set to a valid jdk path, the bin/activemq script will report ""ERROR: Configuration varaiable JAVA_HOME or JAVACMD is not defined correctly."".

This used to work in earlier 5.x versions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/10 15:36;pschwamb;respect_java_home.patch;https://issues.apache.org/jira/secure/attachment/12461865/respect_java_home.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-13 20:46:02.842,,,false,,,,,,,,,,,,,,,,,14795,,,Mon Sep 13 20:46:02 UTC 2010,,,,Patch Available,,,,"0|i0ba2v:",63745,Regression,,,,,,,,,,,,,,,,,,"13/Sep/10 20:46;gtully;applied in r996684 with thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java doc of activemq-camel component need to be updated,AMQ-2900,12483487,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,njiang,njiang,njiang,07/Sep/10 01:27,07/Sep/10 01:30,30/Jan/20 16:55,07/Sep/10 01:30,,,,,,,,5.4.1,,,,,,,0,"""http;//activem.apache.org/camel""  need to be changed to ""http://camel.apache.org""
and the java doc of JournalComponent.java is wrong.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,14828,,,Tue Sep 07 01:30:44 UTC 2010,,,,,,,,"0|i0ba4n:",63753,,,,,,,,,,,,,,,,,,,"07/Sep/10 01:30;njiang;Committed the patch into ActiveMQ trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrokerService @PostConstruct invalidates XBeanBrokerService w/ start=false,AMQ-2813,12483489,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,dnawrocki,dnawrocki,07/Jul/10 17:16,06/Sep/10 09:39,30/Jan/20 16:55,06/Sep/10 09:39,5.3.1,,,,,,,5.4.1,,,Broker,,,,0,"- XBeanBrokerService#afterPropertiesSet() method checks the start flag and is annotated as @PostConstruct so it's called at startup
- BrokerService#start() method has the @PostConstruct annotation as well
- There is no way for the BrokerService class to check the 'start' flag in the XBeanBrokerService subclass.
- Spring will call BOTH @PostConstruct methods resulting in the broker being started regardless of the xbean start flag

According to Gary Tully:

That looks like a bug that was introduced in
http://svn.apache.org/viewvc?rev=908182&view=rev the postConstruct on
the start method does invalidate the
XBeanBrokerService#afterPropertiesSet()  smarts. 

As discussed in:

http://old.nabble.com/XBean-%27start%3Dfalse%27-not-working--td29086727.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Sep/10 15:23;dnawrocki;broker_startup_fix.patch;https://issues.apache.org/jira/secure/attachment/12461802/broker_startup_fix.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-06 16:04:33.185,,,false,,,,,,,,,,,,,,,,,14823,,,Mon Sep 06 09:39:22 UTC 2010,,,,,,,,"0|i0ba4f:",63752,Regression,,,,,,,,,,,,,,,,,,"06/Aug/10 16:04;dejanb;It seems that this works fine on the trunk. I just committed two tests that shows it works properly for both plain Spring and XBean.

If you still see the problem, please reopen it and attach the test case.","01/Sep/10 17:21;dnawrocki;Still doesn't work as of AMQ 5.4.0.

Let me explain what I'm trying to do:
1) Shared file system master-slave using nfsv4
2) Broker instantiated by Spring

The 1st AS will come up OK, but the 2nd (3rd, 4th, etc) AS will block indefinitely at org.apache.activemq.store.kahadb.MessageDatabase.lock(MessageDatabase.java:329).  Spring is calling the @PostConstruct method on BrokerService, which doesn't (cannot) check the XBeanBrokerService's 'start' flag.

Removal of the @PostConstruct annotation on BrokerService#start fixed the issue for 5.3.2, I haven't verified on 5.4.0.","01/Sep/10 20:44;dnawrocki;I can confirm that removing the @PostConstruct annotation work w/ 5.4.0 as well.

I should also mention that the reason I am having so much trouble with this is because I am running my webapp under JBoss.  When JBoss attempts to deploy my EAR file, the ""main"" thread ends up calling BrokerService#start.  Because the ""main"" thread is not blocked indefinitely, JBoss is left in an inconsistent state and will never serve ANY http requests, and will not respond to a kill command.  I have to kill -9 the java process to get it to terminate.","02/Sep/10 08:18;dejanb;So should we resolve this issue again?","03/Sep/10 15:23;dnawrocki;Attached is a patch (generated with svn diff) that fixes it for my use case.  I don't think it will have any unintended consequences for users instantiating a BrokerService and not using the XBeanBrokerService.  If this makes it into 5.4.1 I'd be happy to close this issue.","06/Sep/10 09:39;dejanb;Patch applied with svn revision 992984. Thanks Dan.

The problem this missed in our tests was, because XBean+Spring combination doesn't call @PostConstruct on parent objects as it is done in EJB environment you're using.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServerSessionImpl in module ra does not report exception with stacktrace,AMQ-2892,12483469,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,benoitx,benoitx,01/Sep/10 11:43,01/Sep/10 13:47,30/Jan/20 16:55,01/Sep/10 13:47,5.4.0,,,,,,,5.4.1,,,,,,,0,"The ServerSessionImpl code does not report errors correctly (i.e. never shows the stacktrace):

in the run() method, the catch is like this:
{code:title=ServerSessionImpl.java|borderStyle=solid}
            } catch (Throwable e) {
                stale = true;
                if ( log.isInfoEnabled() ) {
                    log.info(""Endpoint failed to process message. Reason: "" + e.getMessage());                    
                } else if ( log.isDebugEnabled() ) {
		    log.debug(""Endpoint failed to process message."", e);
                }
{code}
            

but this means that you will never see the actual exception...(since if DEBUG is enabled, INFO would usually always be, therefore only the log.info is only called and this does not provide the stacktrace...) the code would be better like this:

{code:title=ServerSessionImpl.java|borderStyle=solid}
            } catch (Throwable e) {
                stale = true;
                if ( log.isDebugEnabled() ) {
				 	log.debug(""Endpoint failed to process message."", e);
                } else if ( log.isInfoEnabled() ) {
                    log.info(""Endpoint failed to process message. Reason: "" + e.getMessage());                    
                } 
{code}",Mac OX 10.6,benoitx,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-01 13:47:28.668,,,false,,,,,,,,,,,,,,,,,14812,,,Wed Sep 01 13:47:28 UTC 2010,,,,,,,,"0|i0ba93:",63773,,,,,,,,,,,,,,,,,,,"01/Sep/10 13:47;gtully;applied suggestion in r991536 - thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
backoffMultipler getter/setter should be same type to honor getter/setter contract,AMQ-2889,12483451,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,davsclaus,davsclaus,31/Aug/10 04:20,31/Aug/10 07:31,30/Jan/20 16:55,31/Aug/10 07:31,5.4.0,,,,,,,5.4.1,,,,,,,0,"See AMQ-910 which causes this issue.

And as reported here
http://fusesource.com/forums/thread.jspa?threadID=2198&tstart=0

The proposed patch is to change the getter to be the same type as the setter.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-31 07:31:37.458,,,false,,,,,,,,,,,,,,,,,14821,,,Tue Aug 31 07:31:37 UTC 2010,,,,,,,,"0|i0ba67:",63760,,,,,,,,,,,,,,,,,,,"31/Aug/10 07:31;gtully;r991102",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Configuring HTTP <networkConnector> with proxyHost, proxyPort results in ""Invalid connect parameters: {proxyPort=nn)}"" error",AMQ-2598,12481925,12481628,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,gsaffell,gsaffell,08/Feb/10 20:09,20/Aug/10 14:11,30/Jan/20 16:55,12/Aug/10 15:19,5.3.0,,,,,,,5.4.1,,,Transport,,,,0,"I'm trying to set up a forwarding bridge that will connect through an http proxy (where the proxy happens to be running on the same machine as the destination ApacheMQ instance). Per AMQ-1099, the following should work: 

<networkConnector name=""gstest-252"" uri=""static://(http://gstest-252:61617?proxyHost=gstest-252&amp;proxyPort=80)"" networkTTL=""5""/>  

But it results in the following error at start up:

 INFO | Establishing network connection from vm://localhost to http://gstest-252
:61617?proxyHost=gstest-252&proxyPort=80&proxyHost=gstest-252&proxyPort=80)

 WARN | Could not connect to remote URI: http://gstest-252:61617?proxyHost=gstes
t-252&proxyPort=80&proxyHost=gstest-252&proxyPort=80): Invalid connect parameter
s: {proxyPort=80)}

 INFO | Network Connector gstest-252 Started",Windows XP,gsaffell,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-12 15:19:21.329,,,false,,,,,,,,,,,,,,,,,14668,,,Mon Aug 16 14:55:04 UTC 2010,,,,,,,,"0|i0b9rb:",63693,Regression,,,,,,,,,,,,,,,,,,"10/Feb/10 22:43;gsaffell;I did some debugging and the problem seems to be caused by org.apache.activemq.network.DiscoveryNetworkConnector.onServiceAdd() method where it calls ""connectUri = URISupport.applyParameters(connectUri, parameters);"" 

Note in the output included in the description of this issue, the ""INFO | Establishing network connection"" reports the query parameters twice and inccludes "")"" at the end.  That duplication and the addition of the "")"" to the end of the last parameter is caused by the applyParameters() call. I found that if I comment that call out, every thing works fine. (Commenting out that code is probably not the correct solution.  Maybe the problem is with what ever code populated the ""parameters"" HashMap that is being passed to the applyParameters() method? At any rate, I just wanted to note what I've found so far.)","12/Aug/10 15:19;dejanb;Fixed with svn revision 984826

Just a note that it won't work with the url you're using

static://(http://gstest-252:61617?proxyHost=gstest-252&amp;proxyPort=80)

You need to use

static:(http://gstest-252:61617?proxyHost=gstest-252&amp;proxyPort=80)

which is a properly formatted composite url.","16/Aug/10 14:55;gsaffell;Thanks, we will update our activemq.xml files accordingly.  I actually got that from the examples on http://activemq.apache.org/networks-of-brokers.html.  You'll note that the first couple of examples show it the way you suggest but the examples further down have ""static://.   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ fails to create tables in MySQL 5.5.5,AMQ-2857,12482192,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,matthewj,matthewj,02/Aug/10 14:18,13/Aug/10 19:34,30/Jan/20 16:55,13/Aug/10 10:24,5.3.2,,,,,,,5.4.1,,,,,,,0,"Running an embedded ActiveMQ database, using MySQL as the JDBC data source worked fine under MySQL 5.4.  After upgrading to MySQL 5.5.5, ActiveMQ works fine as long as the three required tables in the activemq database already exist (activemq_acks, activemq_lock, activemq_msgs).  However, if they don't exist, it fails to create the tables, whereas the tables would be automatically created under MySQL 5.4.

The problem appears to be in the create table script that's used.  In previous versions of MySQL, it was legal (though deprecated as of 4.1) to specify the engine using the ""TYPE=INNODB"" syntax.  The preferred non-deprecated way to do it was to use ""ENGINE=INNODB"" instead.  Under 5.5.5, it appears that the ""TYPE"" syntax is now completely illegal, requiring use of the ""ENGINE"" syntax instead.

A relevant MySQL bug discussing the issue: http://bugs.mysql.com/bug.php?id=17501

The following is an example of the actual SQL that is generated by ActiveMQ:

CREATE TABLE ACTIVEMQ_MSGS(ID BIGINT NOT NULL, CONTAINER VARCHAR(250),
MSGID_PROD VARCHAR(250), MSGID_SEQ BIGINT, EXPIRATION BIGINT, MSG LONGBLOB, PRIMARY KEY ( ID ) ) TYPE=INNODB

I have not yet tested it, but it seems likely that the culprit is MySqlJDBCAdapter.java.  It includes the line:

String typeClause = "" TYPE=""+type;

which should probably change to

String typeClause = "" ENGINE=""+type;",MySQL 5.5.5,matthewj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/10 22:19;matthewj;mysqlpatch.txt;https://issues.apache.org/jira/secure/attachment/12461796/mysqlpatch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-13 10:24:11.721,,,false,,,,,,,,,,,,,,,,,74775,,,Fri Aug 13 19:34:53 UTC 2010,,,,Patch Available,,,,"0|i0rpjz:",159784,,,,,,,,,,,,,,,,,,,"12/Aug/10 22:19;matthewj;Attaching patch file which fixes MySqlJDBCAdapter.java.  Tested this locally, and it did appear to fix the issue.","13/Aug/10 10:24;gtully;variant of patch applied in r985151
added typeStatement attribute to make this configurable for backwards compatibility, default to new ENGINE statement so it will work out of the box with MySQL 5.5
Tanks for the patch. Would be great if you could validate a 5.5 snapshot over the next few days.","13/Aug/10 19:34;matthewj;Downloaded the latest snapshot, and it does appear to be working correctly for me.

One thing I noticed in the class was that the ""ENGINE"" string is still being used directly when using NDBCLUSTER:

{code}           
l.add(""ALTER TABLE ""+statements.getFullMessageTableName()+"" ENGINE=""+NDBCLUSTER);
l.add(""ALTER TABLE ""+statements.getFullAckTableName()+"" ENGINE=""+NDBCLUSTER);
l.add(""ALTER TABLE ""+statements.getFullLockTableName()+"" ENGINE=""+NDBCLUSTER);
{code}

It looks like NDBCLUSTER was added in MySQL 5.x, so the ENGINE statement will always be correct in the MySQL versions that support it.    It just looks strange that we're using the ""typeStatement"" variable in some cases but not in others.  Would it be worth changing these lines as well merely for the sake of consistency?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In SimplePriorityMessageDispatchChannel, message priority isn't properly constrained between 0 and 9",AMQ-2866,12482054,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,scompt,scompt,11/Aug/10 14:55,11/Aug/10 17:40,30/Jan/20 16:55,11/Aug/10 17:40,5.4.0,,,,,,,5.4.1,,,Broker,,,,0,"Per the JMS docs, message priority should be between 0 and 9 inclusive. SimplePriorityMessageDispatchChannel.getPriority attempts to do that, but there's a bug when constraining the priority to be above 0.",,scompt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,"11/Aug/10 14:55;scompt;SimplePriorityMessageDispatchChannel.getPriority.patch;https://issues.apache.org/jira/secure/attachment/12461795/SimplePriorityMessageDispatchChannel.getPriority.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-11 17:40:06.604,,,false,,,,,,,,,,,,,,,,,43718,,,Wed Aug 11 17:40:06 UTC 2010,,,,Patch Available,,,,"0|i0rpjr:",159783,,,,,,,,,,,,,,,,,,,"11/Aug/10 17:40;tabish;Good catch, patch applied in trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jetty-realm.properties is not found when starting ActiveMQ in console mode on OSX,AMQ-2818,12482802,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,alexdean,alexdean,08/Jul/10 16:46,09/Jul/10 13:30,30/Jan/20 16:55,09/Jul/10 13:30,,,,,,,,5.4.0,,,,,,,0,"/usr/local/apache-activemq-5.4-SNAPSHOT$ bin/macosx/activemq console
Running ActiveMQ Broker...
wrapper  | --> Wrapper Started as Console
wrapper  | Launching a JVM...
jvm 1    | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org
jvm 1    |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.
jvm 1    | 
jvm 1    | Java Runtime: Apple Inc. 1.5.0_22 /System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Home
jvm 1    |   Heap sizes: current=1984k  free=1059k  max=520256k
jvm 1    |     JVM args: -Dactivemq.home=../.. -Dactivemq.base=../.. -Djavax.net.ssl.keyStorePassword=password -Djavax.net.ssl.trustStorePassword=password -Djavax.net.ssl.keyStore=../../conf/broker.ks -Djavax.net.ssl.trustStore=../../conf/broker.ts -Dcom.sun.management.jmxremote -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Xmx512m -Djava.library.path=../../bin/macosx/ -Dwrapper.key=tfJDUsBO_GwymN0M -Dwrapper.port=32000 -Dwrapper.jvm.port.min=31000 -Dwrapper.jvm.port.max=31999 -Dwrapper.pid=44040 -Dwrapper.version=3.2.3 -Dwrapper.native_library=wrapper -Dwrapper.cpu.timeout=10 -Dwrapper.jvmid=1
jvm 1    | ACTIVEMQ_HOME: ../..
jvm 1    | ACTIVEMQ_BASE: ../..
jvm 1    | Loading message broker from: xbean:activemq.xml
jvm 1    |  INFO | PListStore:../../data/localhost/tmp_storage started
jvm 1    |  INFO | Using Persistence Adapter: KahaDBPersistenceAdapter[../../data/kahadb]
jvm 1    |  INFO | Recoverying from the journal ...
jvm 1    |  INFO | Recovery replayed 1 operations from the journal in 0.0070 seconds.
jvm 1    |  INFO | ActiveMQ 5.4-SNAPSHOT JMS Message Broker (localhost) is starting
jvm 1    |  INFO | For help or more information please see: http://activemq.apache.org/
jvm 1    |  INFO | Scheduler using directory: activemq-data/scheduler
jvm 1    |  INFO | Listening for connections at: tcp://rutabaga.local:61616
jvm 1    |  INFO | Connector openwire Started
jvm 1    |  INFO | ActiveMQ JMS Message Broker (localhost, ID:rutabaga.local-55820-1278607585105-0:0) started
jvm 1    |  INFO | Logging to org.slf4j.impl.JCLLoggerAdapter(org.eclipse.jetty.util.log) via org.eclipse.jetty.util.log.Slf4jLog
jvm 1    |  INFO | jetty-7.0.1.v20091125
jvm 1    |  WARN | FAILED HashLoginService[ActiveMQRealm]: java.io.FileNotFoundException: /usr/local/apache-activemq-5.4-SNAPSHOT/bin/macosx/jetty-realm.properties (No such file or directory)
jvm 1    |  WARN | FAILED ConstraintSecurityHandler@7fbe19: java.io.FileNotFoundException: /usr/local/apache-activemq-5.4-SNAPSHOT/bin/macosx/jetty-realm.properties (No such file or directory)
jvm 1    |  WARN | FAILED HandlerCollection@996f0e: java.io.FileNotFoundException: /usr/local/apache-activemq-5.4-SNAPSHOT/bin/macosx/jetty-realm.properties (No such file or directory)
jvm 1    |  WARN | Error starting handlers
jvm 1    | java.io.FileNotFoundException: /usr/local/apache-activemq-5.4-SNAPSHOT/bin/macosx/jetty-realm.properties (No such file or directory)
jvm 1    | 	at java.io.FileInputStream.open(Native Method)
jvm 1    | 	at java.io.FileInputStream.<init>(FileInputStream.java:106)
jvm 1    | 	at org.eclipse.jetty.util.resource.FileResource.getInputStream(FileResource.java:274)
jvm 1    | 	at org.eclipse.jetty.security.HashLoginService.loadUsers(HashLoginService.java:145)
jvm 1    | 	at org.eclipse.jetty.security.MappedLoginService.doStart(MappedLoginService.java:115)
jvm 1    | 	at org.eclipse.jetty.security.HashLoginService.doStart(HashLoginService.java:186)
jvm 1    | 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
jvm 1    | 	at org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:316)
jvm 1    | 	at org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:231)
jvm 1    | 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
jvm 1    | 	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
jvm 1    | 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
jvm 1    | 	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
jvm 1    | 	at org.eclipse.jetty.server.Server.doStart(Server.java:228)
jvm 1    | 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:592)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
jvm 1    | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
jvm 1    | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
jvm 1    | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
jvm 1    | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
jvm 1    | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
jvm 1    | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
jvm 1    | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
jvm 1    | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
jvm 1    | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:592)
jvm 1    | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
jvm 1    | 	at org.apache.activemq.console.Main.main(Main.java:107)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
jvm 1    | 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
jvm 1    | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
jvm 1    | 	at java.lang.reflect.Method.invoke(Method.java:592)
jvm 1    | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
jvm 1    | 	at java.lang.Thread.run(Thread.java:613)
jvm 1    |  INFO | Started SelectChannelConnector@0.0.0.0:8161

","OSX 10.5.6
Apple MacBook Pro
java version ""1.5.0_22""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_22-b03-333-9M3125)
Java HotSpot(TM) Client VM (build 1.5.0_22-147, mixed mode, sharing)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-09 13:30:38.897,,,false,,,,,,,,,,,,,,,,,74785,,,Fri Jul 09 13:30:38 UTC 2010,,,,,,,,"0|i0rr2n:",160030,,,,,,,,,,,,,,,,,,,"09/Jul/10 13:30;dejanb;Fixed with svn revision 962519.

Incidentally I renamed bin/activemq fgstart task to console",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP headers need sanitization,AMQ-2817,12482812,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,jamesc,jamesc,08/Jul/10 15:30,09/Jul/10 12:56,30/Jan/20 16:55,09/Jul/10 12:56,5.3.2,,,,,,,5.4.0,,,Transport,,,,0,"Currently STOMP on a SEND extracts out the JMS headers and put the rest of the headers into the message properties.  If a STOMP consumer starts to consume the messages, the JMS fields are put into the header and the the properties are put in.  This can lead to a situation where if the client has provided a header that it shouldn't have (e.g. message-id) it overwrites the one provided by the broker.

This can lead to problems with e.g. ACKs where the wrong message-id is sent back.

This patch sanitizes all headers for a MESSAGE frame when they come into the broker so they never get set in the properties.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/10 15:33;jamesc;headers.patch;https://issues.apache.org/jira/secure/attachment/12461756/headers.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-07-09 12:56:57.885,,,false,,,,,,,,,,,,,,,,,74786,,,Fri Jul 09 12:56:57 UTC 2010,,,,Patch Available,,,,"0|i0rr2f:",160029,,,,,,,,,,,,,,,,,,,"08/Jul/10 15:33;jamesc;Patch against trunk to clean up the header along with a unit test","09/Jul/10 12:56;dejanb;Patch applied (svn revision 962512) with thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB store default directory,AMQ-2793,12482945,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,dejanb,dejanb,23/Jun/10 10:59,23/Jun/10 11:01,30/Jan/20 16:55,23/Jun/10 11:01,5.3.2,,,,,,,5.4.0,,,,,,,0,"Add default directory for KahaDB message store.

If adapter is set simply with 

{code}broker.setPersistenceAdapter(KahaDBPersistenceAdapter()){code}

it will result in NPE during broker start.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74800,,,Wed Jun 23 11:01:39 UTC 2010,,,,,,,,"0|i0rr3b:",160033,,,,,,,,,,,,,,,,,,,"23/Jun/10 11:01;dejanb;Fixed with svn revision 957154",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscription MBean shows incorrect active/inactive state.,AMQ-2770,12483116,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,akos.baraz,akos.baraz,09/Jun/10 10:00,15/Jun/10 14:08,30/Jan/20 16:55,15/Jun/10 14:08,5.3.2,,,,,,,5.4.0,,,Broker,,,,0,"active() and connectionId() shows incorrect activity states on Durable subscription MBeans. I cannot see if the subscription is online or offline.

Please check my test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/10 10:01;akos.baraz;ManagedDurableSubscriptionTest.java;https://issues.apache.org/jira/secure/attachment/12461735/ManagedDurableSubscriptionTest.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-06-15 14:08:47.334,,,false,,,,,,,,,,,,,,,,,74807,,,Tue Jun 15 14:08:47 UTC 2010,,,,,,,,"0|i0rqvz:",160000,,,,,,,,,,,,,,,,,,,"15/Jun/10 14:08;dejanb;fixed with svn revision 954893

You should check active property for this, since connectionId will not be OFFLINE if keepDurableSubsActive is used. Thanks for the test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pure Master Slave broker hangs when storage limit is reached,AMQ-2564,12483260,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,joern,joern,12/Jan/10 14:32,25/May/10 12:04,30/Jan/20 16:55,21/May/10 11:43,5.3.0,,,,,,,5.4.0,,,Broker,,,,1,"The pure master slave broker hangs when the storage limit is reached and dequeueing messages from the queue is not possible.

The behavior can be reproduced with a producer which sends messages to the master broker until the slave broker writes
 ""INFO | Usage Manager Store is Full. Stopping producer (ID:karkand-51292-1263305705067-0:0:1:1) to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info""
this message to the console.
To reproduce the store is full message on the slave broker maybe 2 - 3 attempts are necessary otherwise
the messages appears on the console of the master broker.

Any attempts by a test consumer to dequeue messages fail, it just hangs.

The following information gather with JMX might be interesting:
MASTER: StorePercentUsage=99
SLAVE:    StorePercentUsage=100

The attributes for the Queue are identical on both 
brokers.","Ubuntu 9.10 Desktop, Java 1.6 (build 1.6.0_16-b01)",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/10 14:35;joern;activemq-master.xml;https://issues.apache.org/jira/secure/attachment/12461591/activemq-master.xml","12/Jan/10 14:35;joern;activemq-slave.xml;https://issues.apache.org/jira/secure/attachment/12461592/activemq-slave.xml",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-01-12 16:21:55.912,,,false,,,,,,,,,,,,,,,,,74892,,,Tue May 25 12:04:03 UTC 2010,,,,,,,,"0|i0jxg7:",114349,,,,,,,,,,,,,,,,,,,"12/Jan/10 16:21;gtully;can you validate that this is still a problem with a current 5.4-SNAPSHOT? There was one deadlock issue resolve in the past few weeks in the context of being full and not resuming leading to hung consumers. this was not related to pure master slave however but it may be the difference.","12/Jan/10 16:51;joern;I repeated the test with the apache-activemq-5.4-SNAPSHOT build from Wed Jan 06 15:02:31 GMT+00:00 2010 (http time stamp on the download site).
The result was the same as described above.

After stopping the slave broker it was possible to dequeue messages again from the master broker.

The 5.4-SNAPSHOT version prints out more information to the console:
 INFO | ActiveMQ JMS Message Broker (slave, ID:karkand-43612-1263314151269-1:0) started
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 30s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 60s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 90s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 121s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 151s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 182s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 212s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 242s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 272s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 303s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 333s)
 INFO | Usage Manager Store is Full. Producer (ID:karkand-58702-1263314161468-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 363s)

The producer was directly connected to the master broker and not the slave broker. These messages must be about a connection between the master and slave broker.","12/Jan/10 17:09;joern;I added the  sendFailIfNoSpace=""true"" attribute to the systemUsage element of he slave broker config, repeated the test and the following exception was printed to the console of the master broker:

ERROR | Slave Failed
javax.jms.ResourceAllocationException: Usage Manager Store is Full. Producer (ID:karkand-45529-1263315817291-0:0:1:1) stopped to prevent flooding queue://TestQueue. See http://activemq.apache.org/producer-flow-control.html for more info
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:500)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:474)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:443)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:207)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)","21/May/10 11:43;gtully;r 946974 should resolve this. One thing to note is to ensure that the usage limits on the slave are a little higher than the master such that flow control happens only on the master, other wise replication can block which can block message consumption.

the revision provides a test and  resolves a hang situation where the producer missed a reply because the replication messed with the correlation id. Normally the ids are in sync, but when a message is queued waiting for space, they can be mismatched. having the replicator (MasterBroker filter) copy the underlying message resolved this issue,","25/May/10 11:49;joern;Finding the right higher value on the slave seems to be tricky, since it depends on the message size which is usually dynamic,
which means that depending on the configuration the broker could work for quite some time and then fail suddenly when a bunch of bigger messages is received (which might happen, depending on the application).

Users which choose a PureMasterSlave configurtion are really focused on stability.
For this particular issue the slave should maybe disable the flow control completely when the master is healthy, 
what do you think Gary ?","25/May/10 12:04;gtully;Agree, this is not ideal, but it is not just flow control, it is any memory limit because the default behavior is to block a send if the memory limit is reached. So the slave should be configured with large memory limits or left unbounded.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UnsupportedOperationException in web admin when creating topic,AMQ-2675,12483265,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,pdudits,pdudits,26/Mar/10 11:33,26/Apr/10 10:57,30/Jan/20 16:55,26/Mar/10 14:30,5.3.1,,,,,,,5.3.2,5.4.0,,,,,,0,"When clicking on ""Create topic"" in web admin, HTTP 500 ""Unsupported method type GET"" error is generated.

looking at diff of commit 915384,  activemq-web-console/src/main/webapp/topics.jsp on line 24 should read method=""post"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-03-26 14:30:14.978,,,false,,,,,,,,,,,,,,,,,74851,,,Fri Mar 26 14:30:14 UTC 2010,,,,,,,,"0|i0rr27:",160028,Regression,,,,,,,,,,,,,,,,,,"26/Mar/10 14:30;dejanb;Fixed with svn revision 927868. Thanks for spotting.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Distribution activemq.xml does not match distribution activemq.xsd, causing SAXParseException with newer versions of Spring",AMQ-2599,12483193,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,khunter,khunter,08/Feb/10 20:45,26/Feb/10 14:16,30/Jan/20 16:55,15/Feb/10 15:48,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,"In the 5.3.0 distribution, an ""activemq.xml"" file is provided in the ""conf"" directory.  The format of this file does not match the schema ""activemq.xsd"" that is located in the activemq-core-5.3.0.jar.  Specifically, in the latter, the ""broker"" tag is defined as a sequence of tags as follows:
	adminView
	applicationContext
	consumerSystemUsage
	destinationFactory
	destinationInterceptors
	destinationPolicy
	destinations
	jmsBridgeConnectors
	managementContext
	messageAuthorizationPolicy
	networkConnectorURIs
	networkConnectors
	persistenceAdapter
	persistenceFactory
	persistenceTaskRunnerFactory
	plugins
	producerSystemUsage
	proxyConnectors
	regionBroker
	services
	sslContext
	systemUsage
	taskRunnerFactory
	tempDataStore
	transportConnectorURIs
	transportConnectors

(suspiciously, these tags are listed in alphabetical order - I question whether ""sequence"" was the correct type in the xsd, as opposed to ""one or more of the following"")

In any event, in the ""activemq.xml"" that is provided as part of the distribution, the children of the ""broker"" tag are provided in the following order:
	managementContext
	persistenceAdapter
	destinationPolicy
	systemUsage
	transportConnectors

If the activemq.xsd file is correct, then ""destinationPolicy"" should have been positioned first - before ""managementContext"".  Alternately, the tag order in the xsd file needs to be reworked.

This problem causes a SAXParseException if one tries to use the default activemq.xml with Spring 3.0 jars used instead of the Spring 2.5.6 jars that come with the distribution.  I can only presume that the newer version of Spring is configured, by default, to validate parsed XML against the XSD, while Spring 2.5.6 is not.

I note that http://activemq.apache.org/networks-of-brokers.html indicates ""Order of construction of networks/persistence/transports IS important!""  This at least suggests to me that the ordering of other tags might possibly be important, or that multiple orders may be valid depending on the desired effect.  Thus, it is not immediately obvious which of the two files is, in fact, the correct one.

Regardless, it seems that the example XML file should match the provided XSD file.

The current workaround is to either use a version of Spring earlier than 3, or to edit the activemq.xml to re-order the children of ""broker"".",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-02-15 15:48:35.913,,,false,,,,,,,,,,,,,,,,,74879,,,Mon Feb 15 15:48:35 UTC 2010,,,,,,,,"0|i0rr1j:",160025,,,,,,,,,,,,,,,,,,,"15/Feb/10 15:48;gtully;resolved in r910238

The example configuration files now match the schema as they should do. 

Order is an attribute of the sequence but the sequence is important as it allows for extensibility, see: http://www.w3.org/2005/07/xml-schema-patterns.html#Collection-Extending-Elements ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console queues index misses sort link on table header,AMQ-2410,12483207,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,donv,donv,24/Sep/09 08:25,04/Feb/10 09:43,30/Jan/20 16:55,04/Feb/10 09:43,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,"In the ActiveMQ 5.2 web console, we could click on the column headers of the queue index table to sort the table on the indicated column values.

This is missing in the 5.3 SNAPSHOT.  The column headers are just inactive text, not links like they wer in 5.2.

The sorting feature is VERY helpful when we have many queues, as we have in our project.","ActiveMQ 5.3 SNAPSHOT 2009-09-08, MacOSX 10.6.1, Java 1.6.0_15, Ubuntu Server 8.04 LTS",donv,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-11-04 10:41:06.799,,,false,,,,,,,,,,,,,,,,,74955,,,Thu Feb 04 09:43:03 UTC 2010,,,,,,,,"0|i0rqwv:",160004,,,,,,,,,,,,,,,,,,,"04/Nov/09 10:41;dejanb;Fixed in svn revision 832701 

Incidentally, the patch that sorts tables on first column by default is added (thanks to Nishant - http://old.nabble.com/Admin-Console:-Sort-on-Queue-name-td25440691.html#a25440691)","03/Feb/10 19:59;winstonwaite;I had added this fix about a month ago and didn't pay too much attention to it. We changed to fuse 5.3 and I noticed a javascript error on the page. Perhaps this does not affect amq 5.3 but I bet it does.

The JS error is:

""opt_whenDone is not a function""

This occurs on the topics and queues pages. The fix is mentioned on the prettify.js page:

""
I get an error message ""a is not a function"" or ""opt_whenDone is not a function""

If you are calling prettyPrint via an event handler, wrap it in a function. Instead of doing

addEventListener('load', prettyPrint, false);
wrap it in a closure like
addEventListener('load', function (event) { prettyPrint() }, false);
so that the browser does not pass an event object to prettyPrint which will confuse it. 
""

Also.. when you click the ""home"" link on the admin page.. you get a different error:

""document.getElementsByTagName(""TH"")[0] is undefined""

I just made a quick fix... so there is probably something better to do... I changed the following:

var e = {};
var obj = document.getElementsByTagName(""TH"")[0].firstChild;
e.target = obj;
standardistaTableSorting.headingClicked(e);  // will sort Ascending 

to:

if(window.location.hostname.indexOf(""index.jsp"") != -1)
{
    var e = {};
    var obj = document.getElementsByTagName(""TH"")[0].firstChild; 
    e.target = obj;
    standardistaTableSorting.headingClicked(e);  // will sort Ascending 
}","03/Feb/10 20:00;winstonwaite;Using fuse 5.3 showed JS errors on the page. I had not noticed them in the past with amq 5.3... but I may have been running it out of firebug. I would imagine the same javascript errors exist.","03/Feb/10 20:10;winstonwaite;Sorry... wasn't thinking... the fix for the ""home"" page above wouldn't work... change:

if(window.location.hostname.indexOf(""index.jsp"") != -1)

to:

if(window.location.href.indexOf(""index.jsp"") === -1)","04/Feb/10 09:43;dejanb;Fixed in svn revision 906416.

I used 

{code}if (document.getElementsByTagName(""TH"")[0] != null) {
...
}{code}

to filter out pages where sorting isn't needed.

Thanks for the patches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException on invalid STOMP message,AMQ-2254,12483197,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,sa111,sa111,15/May/09 19:41,03/Feb/10 15:36,30/Jan/20 16:55,03/Feb/10 15:36,5.2.0,,,,,,,5.4.0,,,Broker,,,,0,"I discovered accidentally that the following invalid STOMP conversation will reliably cause a NullPointerException in activemq:

cli> CONNECT
cli> ['username: ', 'password: ']
srv> CONNECTED
srv> session:ID:slc1-40603-1242413649494-4:9
cli> SUBSCRIBE
cli> ['ack: client', 'destination: /queue/raw_input']

java.lang.NullPointerException
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:370)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:541)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:78)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:135)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSubscribe(ProtocolConverter.java:399)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommad(ProtocolConverter.java:183)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:67)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
        at java.lang.Thread.run(Thread.java:619)
","Linux (Ubuntu 8.04), x86, Java 1.6.0_07",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/09 20:40;gseben;AMQ-2254.patch;https://issues.apache.org/jira/secure/attachment/12461558/AMQ-2254.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-07-14 20:39:44.547,,,false,,,,,,,,,,,,,,,,,75010,,,Wed Feb 03 15:36:48 UTC 2010,,,,Patch Available,,,,"0|i0rqzr:",160017,,,,,,,,,,,,,,,,,,,"14/Jul/09 20:39;gseben;The invalid subscribe causes the problem. Added a simple check to the ProtocolConverter.","03/Feb/10 15:36;tabish;Patch applied in SVN: 906088.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Downloading Blob messages via FTP fails for files larger than 64KB,AMQ-2548,12483176,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,pea,pea,22/Dec/09 18:49,01/Feb/10 09:29,30/Jan/20 16:55,21/Jan/10 23:06,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,"The following code will only download 64 KB of any uploaded file greater than 64 KB.
The test file (ca. 15 MB) was completly  uploaded to the FTP-Server.

 

{code}

    File file = new File(directoryName+fileName);
    
    ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(URI);
    Connection connection = factory.createQueueConnection(); 

    connection.start();
    
    ActiveMQSession session = (ActiveMQSession) connection.createSession(
                                false, Session.AUTO_ACKNOWLEDGE);
    Destination destination = session.createQueue(""MyQ"");
    MessageProducer producer = session.createProducer(destination);
    MessageConsumer consumer = session.createConsumer(destination);
    BlobMessage message = session.createBlobMessage(file);
      
    producer.send(message);

    System.out.println(""Sent: "" + message);
    
    Thread.sleep(1000);
      
    // check message sent
    Message msg = consumer.receive();
    
    BlobDownloadStrategy strategy = new FTPBlobDownloadStrategy();
      
    InputStream input = strategy.getInputStream((ActiveMQBlobMessage)msg);

    File f=new File(fileName);
    OutputStream out=new FileOutputStream(f);
    byte buf[]=new byte[1024];
    int len;
    
    while((len=input.read(buf))>0){
      out.write(buf,0,len);
    }
    out.close();
    input.close(); 

    System.out.println(""Received: "" + message);
    
{code}

After examining org.apache.activemq.blob.FTPBlobDownloadStrategy it seemed suspicious that the FTPClient connection was destroyed before the input stream is processed.

{code}
public InputStream getInputStream(ActiveMQBlobMessage message) throws IOException, JMSException {
        URL url = message.getURL();
        
        setUserInformation(url.getUserInfo());
        String connectUrl = url.getHost();
        int port = url.getPort() < 1 ? 21 : url.getPort();

        FTPClient ftp = new FTPClient();
        try {
        	ftp.connect(connectUrl, port);
        } catch(ConnectException e) {
        	throw new JMSException(""Problem connecting the FTP-server"");
        }
        
        if(!ftp.login(ftpUser, ftpPass)) {
        	ftp.quit();
            ftp.disconnect();
            throw new JMSException(""Cant Authentificate to FTP-Server"");
        }
        String path = url.getPath();
        String workingDir = path.substring(0, path.lastIndexOf(""/""));
        String file = path.substring(path.lastIndexOf(""/"")+1);
        
        ftp.changeWorkingDirectory(workingDir);
        ftp.setFileType(FTPClient.BINARY_FILE_TYPE);
        InputStream input = ftp.retrieveFileStream(file);

        ftp.quit(); // really?
        ftp.disconnect(); // really?
        
        return input;
    }
{code}

After commenting those two last ftp calls, files larger than 64 KB were downloaded properly, but this should of course not be the final solution. 
Any suggestions?

Cheers, Toni",OS: Windows XP,pea,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-01-21 23:06:29.985,,,false,,,,,,,,,,,,,,,,,74898,,,Mon Feb 01 09:29:59 UTC 2010,,,,,,,,"0|i0rqwn:",160003,,,,,,,,,,,,,,,,,,,"21/Jan/10 23:06;tabish;Updated the test case to reproduce the problem and fixed the getInputStream method so that the FTP connection is not disconnected until the stream is closed.

Fixed in SVN rev 901911","01/Feb/10 09:29;gtully;merged to 5.3.1 branch in r905219",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQTextMessage.getSize() does not consider size of properties,AMQ-2585,12483219,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,magnus.e.persson,magnus.e.persson,28/Jan/10 14:01,29/Jan/10 18:46,30/Jan/20 16:55,29/Jan/10 18:42,5.3.0,,,,,,,5.4.0,,,JMS client,,,,0,"Checking the size of a text message only considers the body of a message, not the properties. I think this relates to a typo in the method:

{noformat}
    public int getSize() {
        if (size == 0 && content == null && text != null) {
            size = getMinimumMessageSize();
            if (marshalledProperties != null) {
                size += marshalledProperties.getLength();
            }
            size = text.length() * 2;
        }
        return super.getSize();
    }
{noformat}

This should perhaps be size += text.length() * 2?",,magnus.e.persson,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jan/10 14:02;magnus.e.persson;ReasonableTextMessageSize.patch;https://issues.apache.org/jira/secure/attachment/12461602/ReasonableTextMessageSize.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-01-29 18:42:38.204,,,false,,,,,,,,,,,,,,,,,74884,,,Fri Jan 29 18:46:08 UTC 2010,,,,Patch Available,,,,"0|i0rqyf:",160011,,,,,,,,,,,,,,,,,,,"28/Jan/10 14:02;magnus.e.persson;Test attached","29/Jan/10 18:42;gtully;thanks for the test case. I made some mods as the override of min message size is only relevant to the broker. The size is calculated on demand for consumers.
committed in r904585","29/Jan/10 18:46;gtully;one more thing, just for completeness, the properties were not marshaled by default with the vm transport so they did not appear in the size calculation. adding marshall=true to the vm url ensured they were part of the calculation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Async error occurred: java.lang.NullPointerException,AMQ-2473,12483152,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,joern,joern,02/Nov/09 09:46,18/Dec/09 13:05,30/Jan/20 16:55,17/Dec/09 08:47,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"Our log file contains a NullPointerException:

 WARN | Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.broker.region.Queue.send(Queue.java:401)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:443)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:619)","Ubuntu 8.10 Server, Java 1.6, Pure Master Slave Setup, but Slave failed",zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-12-11 10:25:12.418,,,false,,,,,,,,,,,,,,,,,74929,,,Thu Dec 17 08:47:03 UTC 2009,,,,,,,,"0|i0rr13:",160023,,,,,,,,,,,,,,,,,,,"11/Dec/09 10:25;dejanb;We found in our testing that this might be related to using <connectionDotFilePlugin/> and is connected to the issue seen in http://issues.apache.org/activemq/browse/AMQ-2513. It'd be great if you can test against the latest trunk and see if the exception still occurs.","17/Dec/09 08:47;gtully;resolved similar issue in r891582

jmstemplate and failover - replay of transactions messages needed to also replay dependent producers so message replay can succeed. 
When producers are always closed after transaction commit the extra tracking can be disabled though {code} failover:(...)?trackTransactionProducers=false{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FastProducer topics have typo in name,AMQ-2458,12483104,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,jamesc,jamesc,20/Oct/09 12:01,12/Nov/09 11:31,30/Jan/20 16:55,02/Nov/09 13:00,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,"* In AdvisorySupport, the name of the topic for fast producers was misspelled in a constant string

1-line patch attached.

",patch against trunk,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/09 12:01;jamesc;fastproducer.diff;https://issues.apache.org/jira/secure/attachment/12461311/fastproducer.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-11-02 13:00:43.871,,,false,,,,,,,,,,,,,,,,,74937,,,Mon Nov 02 13:00:43 UTC 2009,,,,Patch Available,,,,"0|i0rr33:",160032,,,,,,,,,,,,,,,,,,,"02/Nov/09 13:00;gtully;patch applied with thanks in r831888",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TimeStampingBrokerPlugin Not Working on Fuse 5.3.0.4,AMQ-2441,12483934,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,as972,as972,05/Oct/09 15:35,06/Oct/09 15:39,30/Jan/20 16:55,06/Oct/09 15:39,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"Due to the adding of the new properties to TimeStampingBrokerPlugin the ""message.setTimestamp()"" was misplaced and is set to early in the code.

The line need to be placed as the last line in the method send() as was in 5.2.

In addition the Plugin doesn't handle the scenario where the Broker is running ""behind"" its client. What is happening is that it's setting the Expiration and TimeStamp to historical values in the client perspective causing them to be discarded by the clients.

I have supplied a patch that solves both issues.",,as972,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/09 15:37;as972;TimeStampingBrokerPlugin.java;https://issues.apache.org/jira/secure/attachment/12461905/TimeStampingBrokerPlugin.java",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-10-06 15:39:00.039,,,false,,,,,,,,,,,,,,,,,74945,,,Tue Oct 06 15:39:00 UTC 2009,,,,Patch Available,,,,"0|i14cbr:",233460,,,,,,,,,,,,,,,,,,,"05/Oct/09 15:37;as972;Fix","06/Oct/09 15:39;dejanb;I applied modified patch. I set that ignoring setting values in the past is optional and off by default. It makes sense in some use cases, for example when all clients are on the same machine. But what if only some producers have wrong clocks and consumers are in the sync with the broker? The purpose of this plugin is to use broker time as relevant, but with this patch it will be also possible to prevent these changes. All you have to do is to set futureOnly property to true. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Frequent kahadb messages: ""KahaDB long enqueue time: Journal Add Took: 0 ms, Index Update took  125 ms""",AMQ-2404,12482882,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,cmacnaug,cmacnaug,23/Sep/09 16:02,23/Sep/09 19:47,30/Jan/20 16:55,23/Sep/09 19:47,,,,,,,,5.3.0,,,,,,,0,Perhaps the log level of these should be changed to warn?,Windows (at least),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-09-23 19:27:58.294,,,false,,,,,,,,,,,,,,,,,74956,,,Wed Sep 23 19:47:18 UTC 2009,,,,,,,,"0|i182rb:",255249,,,,,,,,,,,,,,,,,,,"23/Sep/09 19:27;chirino;well I assume you bean reduce the logging level instead of increase it.  Tell ya what, right now the message gets logged of the DB operation takes longer than 100 ms.  I'll change it so that number is configurable via a system property and bump up the default value a bit.","23/Sep/09 19:42;chirino;You will now be able to use a system property to set what is considered a slow access time.  For example you could pass this JVM option to the broker:
{code}
-Dorg.apache.activemq.store.kahadb.LOG_SLOW_ACCESS_TIME=300
{code}

Then if a kahadb operation is takes longer than 300 ms to complete, a log message will be produced.
Default is set to 500 now.  If you set it to 0, then no log messages are ever produced.
","23/Sep/09 19:47;chirino;committed. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getServices() method of BrokerService throws a ClassCastException,AMQ-2321,12483000,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,raphr,raphr,09/Jul/09 15:43,09/Jul/09 16:01,30/Jan/20 16:55,09/Jul/09 16:01,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"The getServices() method of org.apache.activemq.broker.BrokerService throws a ClassCastException on runtime.

    public Service[] getServices() {
        return (Service[]) services.toArray();
    }

must be replace with :

    public Service[] getServices() {
        return (Service[]) services.toArray(new Service[0]);
    }
",Java 1.6.0_13-b03,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-07-09 16:01:06.659,,,false,,,,,,,,,,,,,,,,,74984,,,Thu Jul 09 16:01:06 UTC 2009,,,,Patch Available,,,,"0|i14ce7:",233471,,,,,,,,,,,,,,,,,,,"09/Jul/09 16:01;gtully;fixed in r792591. thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RestFilter.java has a dependency on Sun JDK classes,AMQ-2310,12482831,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,philliph,philliph,27/Jun/09 11:03,29/Jun/09 08:34,30/Jan/20 16:55,29/Jun/09 08:34,5.2.0,,,,,,,5.3.0,,,,,,,0,"activemq/activemq-fileserver/src/main/java/org/apache/activemq/util/RestFilter.java depends on sun.net.www.protocol.http.HttpURLConnection. I think this is a rogue import and should have been java.net.HttpURLConnection
{code}
### Eclipse Workspace Patch 1.0
#P activemq
Index: activemq-fileserver/src/main/java/org/apache/activemq/util/RestFilter.java
===================================================================
--- activemq-fileserver/src/main/java/org/apache/activemq/util/RestFilter.java  (revision 768326)
+++ activemq-fileserver/src/main/java/org/apache/activemq/util/RestFilter.java  (working copy)
@@ -38,7 +38,7 @@
 import org.mortbay.log.Log;
 import org.mortbay.util.IO;
 import org.mortbay.util.URIUtil;
-import sun.net.www.protocol.http.HttpURLConnection;
+import java.net.HttpURLConnection;
 
 /**
  * <p>
{code}
This means that those of us without Sun JDKs can compile :)",All,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-06-29 08:34:53.057,,,false,,,,,,,,,,,,,,,,,74987,,,Mon Jun 29 08:34:53 UTC 2009,,,,Patch Available,,,,"0|i14cuv:",233546,,,,,,,,,,,,,,,,,,,"29/Jun/09 08:34;dejanb;Fixed in SVN revision 789258. Thanks for spotting this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
trying to access an ObjectMessage in the AMQ web console results in java.io.IOException: com.myclass...,AMQ-2154,12483017,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,tmielke,tmielke,10/Mar/09 16:27,10/Jun/09 12:47,30/Jan/20 16:55,16/Mar/09 18:23,5.1.0,,,,,,,5.3.0,,,Broker,,,,0,"The web console can be used to drill into individual message and display both their properties as well as payload. 
Displaying the payload generally works fine for TextMessages, etc but fails for ObjectMessages and probably other binary payload formats.
This is okay and kind of expected but rather than throwing an exception with a large stack trace back to the browser client, we should capture the ex and display at least the message properties and also a short message that the content cannot be displayed due to its binary content.

Error msg and stack trace that is thrown:
{code}
java.io.IOException: com.myclass
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)
	at org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:261)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:984)
	at org.apache.jsp.message_jsp._jspx_meth_c_out_0(org.apache.jsp.message_jsp:400)
	at org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:334)
	at org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:151)
	at org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:92)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:477)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:371)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:829)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
{code}","web console, ObjectMessage",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Mar/09 14:56;tmielke;AMQ-2154.patch;https://issues.apache.org/jira/secure/attachment/12461393/AMQ-2154.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-03-11 17:45:13.651,,,false,,,,,,,,,,,,,,,,,75050,,,Mon Mar 16 18:23:19 UTC 2009,,,,,,,,"0|i14c07:",233408,,,,,,,,,,,,,,,,,,,"11/Mar/09 14:53;tmielke;This can be reproduced easily. Simply construct an ObjectMessage of a non-simple type (i.e. none standard JDK type) and send it to a queue. Then using the web console http://localhost:8161/admin access the message body. The above exception will be displayed instead of a proper page.
","11/Mar/09 14:54;tmielke;This can be reproduced easily. Simply construct an ObjectMessage of a non-simple type (i.e. none standard JDK type) and send it to a queue. Then using the web console http://localhost:8161/admin access the message body. The above exception will be displayed instead of a proper page. ","11/Mar/09 14:56;tmielke;Attaching a possible fix for this issue. Catching the JMSException in MessageQueue.getBody() and returning it. That case it can be properly displayed in the generated html output in the browser. 
Also changing ActiveMQObjectMessage.getObject() to also propagate the root exception (in my test it was a ClassNotFoundException). ","11/Mar/09 17:45;gseben;I did some testing around this issue, and I found that adding the serializable object class to the broker's classpath will allow getBody() to return correctly. 
In the suggested test case, adding ""com.myclass"" to the broker classpath will  likely solve the problem, and would explain the ClassNotFoundException. It would probably be a good idea to return a friendly reminder about the possible cause of the problem along with the exception. ","12/Mar/09 11:01;tmielke;I fully agree with your points Giovani. However I don't think it should be a requirement to add application level classes to the brokers classpath in order to drill into individual messages. I can live with the fact that the message content cannot be displayed but it should not generate a fully blown up error with stack trace in the html page but some meaningful response. After all, the message properties can still be displayed. Hence my motivation for a fix. ","12/Mar/09 13:26;gseben;I agree with the fix too. I'm just saying that it would be nice to inform users about the reason why the broker can't deserialize the object. ","16/Mar/09 18:23;gtully;patch applied with thanks, r754973",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX Credentials Not Respected When Trying To Move Messages,AMQ-2232,12482943,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,docsys,docsys,27/Apr/09 19:18,02/Jun/09 12:49,30/Jan/20 16:55,02/Jun/09 12:49,5.2.0,,,,,,,5.3.0,,,Broker,JMX,,,0,"On a secured broker, with secured JMX, and secured Web Console, message move/copy actions fail to use established authentication mechanisms. Error returned is: User ActiveMQBroker is not authorized to write to: queue. The specified user(ActiveMQBroker) is not the user provided for JMX or Web Console access.

Disabling security will allow for message move/copy actions to complete successfully. All attempts to accomodate the username being used(ActiveMQBroker), by adding the user into authentication configs in the broker XML config or the jmx authentication files, have failed.  Changing our JMX users and passwords to match the simple authentication setup in the broker XML config also have had no effect.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-06-02 12:49:56.002,,,false,,,,,,,,,,,,,,,,,75018,,,Tue Jun 02 12:49:56 UTC 2009,,,,,,,,"0|i14bw7:",233390,,,,,,,,,,,,,,,,,,,"02/Jun/09 12:49;dejanb;Fixed in svn revision 781022 by adding checks for broker security context and a couple of minor changes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Admin console message.jsp references non-existant messageQuery.JMSMessageID field,AMQ-2219,12482936,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,jgro,jgro,22/Apr/09 03:25,22/Apr/09 09:15,30/Jan/20 16:55,22/Apr/09 09:15,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,"
The Admin console/webapp can display a list of messages pending in a queue.  When you click on the link provided for one of the messages, the message details are shown.  That is, unless the message is no longer pending, at which point the Admin console throws an exception:

{noformat}
javax.el.PropertyNotFoundException: The class 'org.apache.activemq.web.MessageQuery' does not have the property 'JMSMessageID'.
        at javax.el.BeanELResolver.getBeanProperty(BeanELResolver.java:547)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:249)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:984)
        at org.apache.jsp.message_jsp._jspx_meth_c_when_0(org.apache.jsp.message_jsp:189)
        at org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:153)
        at org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:99)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
etc...
{noformat}

The culprit is line 29 of message.jsp, which is

{code:title=message.jsp}
No message could be found for ID ${requestContext.messageQuery.JMSMessageID}
{code}


This should instead be 

{code:title=message.jsp}
No message could be found for ID ${requestContext.messageQuery.id}
{code}

",Windows XP,jgro,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-04-22 09:15:38.79,,,false,,,,,,,,,,,,,,,,,75021,,,Wed Apr 22 09:15:38 UTC 2009,,,,Patch Available,,,,"0|i182k7:",255217,,,,,,,,,,,,,,,,,,,"22/Apr/09 09:15;dejanb;Applied in SVN revision 767423. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp client hang after a long time pending,AMQ-2019,12482434,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,hongwu.lu,hongwu.lu,02/Dec/08 12:46,20/Feb/09 10:11,30/Jan/20 16:55,20/Feb/09 10:11,5.2.0,,,,,,,5.2.0,,,,,,,0,"i have a program which use stomp to receive messages from activemq,
when i start it and wait for several minutes before close it, everything is ok.
but if i wait for one hour, for example, when i close it, then i find from the management page, the two consumers are still there.
and if i restart the program with these tow hanging consumers, then i could not receive any message.
i do not know whether it is a bug or just my program problem, sorry for disturb you here for an analyse, please.
here is my program:
#!/usr/bin/perl -w
use strict;
use Switch;
use Time::HiRes qw(usleep ualarm gettimeofday tv_interval);

use Net::Stomp;

use Term::ANSIColor;
#for multithread
use threads;
use threads::shared;

#for ActiveMQ connection
my $aq_host = ""10.255.1.130"";
my $aq_port = '61613';
my $sSender;
my $sReceiver;
my $aReceiver;

my $queue1 = ""queue1"";
my $queue2 = ""queue2"";

my $running : shared = 1;

my $thread_th1; 
my $thread_th2;

sub cleanup()
{
	print colored (""\n.STOP received! \n"", 'red');
	$running=0;
	print "".Stopping  Thread1		...... "";
	my $r1 = $thread_th1->join();
	print colored (""$r1\n"", 'green');
	
	print "".Stopping Thread2		...... "";
	my $r2 = $thread_th2->join();
	print colored (""$r2\n"", 'green');
	
	print "".Disconnecting ActiveMQ connector	...... "";
	$sReceiver->disconnect();
	$aReceiver->disconnect();
	print colored (""OK\n"", 'green');

	print ""\n"";
	print colored (""ALL Nicely Stopped, see you!\n\n"", 'yellow');
}

sub th1()
{
	$sReceiver->subscribe({ destination => ""/queue/$queue1"",
				'ack' => 'client',
				'activemq.prefetchSize' => 1});
	while($running){

		if ($sReceiver->can_read({timeout=>'1'}))
		{
			my $frame = $sReceiver->receive_frame;
			my $body = $frame->body;

			#print ""get message from queue 1: $body \n"";
			ptMsg($body);
			#Ack msg for deleting after the procedure
			$sReceiver->ack({ frame => $frame});
		}
	}
	
	$sReceiver->unsubscribe({ destination => ""/queue/$queue1""});
	return ""OK"";
}

sub th2() 
{
	$aReceiver->subscribe({ destination => ""/queue/$queue2"",
							'ack' => 'client',
							'activemq.prefetchSize' => 1});
	while($running)
	{
		#get one message from queue
		if ($aReceiver->can_read({timeout=>'1'}))
		{
			my $frame = $aReceiver->receive_frame;
			my $body = $frame->body;
			#print ""get message from queue 2: $body"";
			ptMsg($body);
			$aReceiver->ack({ frame => $frame});
		}                                                                                
	}
	#when received cleanup message
	$aReceiver->unsubscribe({ destination => ""/queue/$queue2""});
	return ""OK"";
}

sub ptMsg
{
	my $msg = shift;
	print ""received message $msg \n"";
}
#################################################################
# 	main function start
#################################################################

print "".Creating ActiveMQ connector	...... "";
$sReceiver = Net::Stomp->new({ hostname => $aq_host, port => $aq_port});
$sReceiver->connect();
$aReceiver = Net::Stomp->new({ hostname => $aq_host, port => $aq_port});
$aReceiver->connect();
print colored (""OK\n"",'green');

$SIG{INT} = ""cleanup"";

print "".Starting Thread1	...... "";
$thread_th1 = threads->create(\&th1);
print colored (""OK\n"", 'green');

print "".Starting Thread2	...... "";
$thread_th2 = threads->create(\&th2);
print colored (""OK\n"", 'green');

#main process waiting for signal clean
print colored (""->running ......\n"", 'green');
print ""\n"";

while ($running) {
	usleep(5000000);
}",linux with perl 5.8.8 and stomp,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-12-02 15:14:44.316,,,false,,,,,,,,,,,,,,,,,75122,,,Fri Feb 20 10:11:30 UTC 2009,,,,,,,,"0|i0ttlj:",172104,,,,,,,,,,,,,,,,,,,"02/Dec/08 15:14;dejanb;It looks like a socket timeout problem. You can try increasing that time, but generally the better solution is to have a kind of a ""keep alive"" protocol. It is planed for Stomp v1.1. Until then you can send some dummy messages periodically to keep connection alive. Hope this helps.","20/Feb/09 10:11;hongwu.lu;without keep alive support of stomp, we could send some period msg to simulate keep alive.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removing a Destination with active subscribers causes the destination to be unable to be removed.,AMQ-2051,12482183,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,tabish,tabish,31/Dec/08 22:41,15/Jan/09 13:59,30/Jan/20 16:55,15/Jan/09 13:58,5.1.0,5.2.0,,,,,,5.3.0,,,Broker,,,,0,"While attempting to implement destination removal in the ActiveMQ-CPP client I noticed that when attempting to remove destination that had active subscribers the destination would be placed in a state that they could not be removed once the subscribers had all been removed.  

Sending a DestinationInfo command to the Broker while keeping my consumer open results in an exception which is expected since there are still subscribers.  

{code}
javax.jms.JMSException: Destination still has an active subscription: topic://TEST.FOO
	at org.apache.activemq.broker.region.AbstractRegion.removeDestination(AbstractRegion.java:158)
	at org.apache.activemq.broker.jmx.ManagedTopicRegion.removeDestination(ManagedTopicRegion.java:62)
	at org.apache.activemq.broker.region.RegionBroker.removeDestination(RegionBroker.java:289)
	at org.apache.activemq.broker.region.RegionBroker.removeDestinationInfo(RegionBroker.java:312)
	at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:218)
	at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:218)
	at org.apache.activemq.advisory.AdvisoryBroker.removeDestinationInfo(AdvisoryBroker.java:193)
	at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:218)
	at org.apache.activemq.broker.MutableBrokerFilter.removeDestinationInfo(MutableBrokerFilter.java:226)
	at org.apache.activemq.broker.TransportConnection.processRemoveDestination(TransportConnection.java:481)
	at org.apache.activemq.command.DestinationInfo.visit(DestinationInfo.java:124)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)
{code}

Once I removed my consumer and sent the command again I got no errors indicating that it couldn't be removed, however I could still see the Destination in the Web Console.

Looking into the Broker code I see that the RegionBroker class processes a removeDestination call by first removing the Destination from its map of Destinations and then attempting to remove it from the Region that it belongs to.  If this call fails the code will never again attempt to remove a Destination since its removed from the RegionBroker's map but it may not be removed from the specific region it resides in.  The code looks like it should first attempt to remove the Destination from the region before removing from its map, the addDestination method works in that way, adding it to region before adding it to its map so that if an exception occurs nothing is added.

RegionBroker.java : around line 283

{code}|
    public void removeDestination(ConnectionContext context, ActiveMQDestination destination, long timeout) throws Exception {

        if (destinations.remove(destination) != null) {
            switch (destination.getDestinationType()) {
            case ActiveMQDestination.QUEUE_TYPE:
                queueRegion.removeDestination(context, destination, timeout);
                break;
            case ActiveMQDestination.TOPIC_TYPE:
                topicRegion.removeDestination(context, destination, timeout);
                break;
            case ActiveMQDestination.TEMP_QUEUE_TYPE:
                tempQueueRegion.removeDestination(context, destination, timeout);
                break;
            case ActiveMQDestination.TEMP_TOPIC_TYPE:
                tempTopicRegion.removeDestination(context, destination, timeout);
                break;
            default:
                throw createUnknownDestinationTypeException(destination);
            }
        }

    }
{code}
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Dec/08 22:43;tabish;RemoveDestinationTest.java;https://issues.apache.org/jira/secure/attachment/12461313/RemoveDestinationTest.java","31/Dec/08 22:50;tabish;removeDestinationPatch.txt;https://issues.apache.org/jira/secure/attachment/12461271/removeDestinationPatch.txt",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2009-01-13 19:53:14.31,,,false,,,,,,,,,,,,,,,,,75102,,,Thu Jan 15 13:58:40 UTC 2009,,,,,,,,"0|i14cjz:",233497,,,,,,,,,,,,,,,,,,,"31/Dec/08 22:43;tabish;I've attached a unit test, I've not been able to find an easy way though to actually test that the Destination is completely removed.

","31/Dec/08 22:50;tabish;Potential Patch for this issue.  Probably need someone with more knowledge of the broker internals to ensure this won't break anything.","12/Jan/09 16:09;tabish;Gary, can you take a look at this one for me, we talked about this issue in December, would like to get your input on what I've found.","13/Jan/09 19:53;djencks;This doesn't seem to be a complete fix.  AFAICT the subscriptions still have the references to any messages that were in the queue when it was destroyed.  Trying to recreate the queue results in recovery failures as these references don't find the messages they refer to.

I have to say I'm confused about what should happen when you destroyDestination for a destination that has active consumers and messages in it.  In the case I am working with the consumer was discarded without being closed so it doesn't much matter what state the client end of the consumer is in but I wonder what should happen if the consumer is actually being used.","15/Jan/09 13:58;gtully;patch applied and modified test included, thanks. r734524

The remove implementation takes a timeout option, if the timeout is 0, it errors if there are consumers.
if the timeout > 0 it removes the subscribers and disposes the queue, which should purge the queue.

So to Davids question, I guess a removeDestination where the destination has messages should delete the messages, that is purge the store.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Changed link for jencks,AMQ-2037,12482657,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,tigredudesert,tigredudesert,18/Dec/08 09:18,18/Dec/08 16:52,30/Jan/20 16:55,18/Dec/08 16:52,5.2.0,,,,,,,5.3.0,,,Documentation,,,,0,"Link for jencks framework has changed.
Now link is : http://jencks.codehaus.org
",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-12-18 16:52:15.987,,,false,,,,,,,,,,,,,,,,,75110,,,Thu Dec 18 16:52:15 UTC 2008,,,,,,,,"0|i182br:",255179,,,,,,,,,,,,,,,,,,,"18/Dec/08 16:52;dejanb;I've fixed all links I could found (they should be active on a next site refresh). If you spot any that is missed, please let us know. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP - transaction header is not removed from messages received in a transaction,AMQ-1989,12482557,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,dejanb,dejanb,dejanb,29/Oct/08 13:36,15/Dec/08 10:18,30/Jan/20 16:55,15/Dec/08 10:18,5.2.0,,,,,,,5.3.0,,,Broker,,,,0,There is no need to keep this information in a message. This can make a problem if client tries to ack a message from other transaction (and just copy all headers from the message).,,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75136,,,Mon Dec 15 10:18:17 UTC 2008,,,,,,,,"0|i14cfr:",233478,,,,,,,,,,,,,,,,,,,"15/Dec/08 10:18;dejanb;Fixed in SVN revision 726668",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Xtream is not in the binary release of 5.1,AMQ-1743,12482494,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jeff.ward,jeff.ward,22/May/08 15:57,08/Oct/08 08:49,30/Jan/20 16:55,10/Sep/08 10:14,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"The 5.1.0 distribution does not include the xstream jars, which are needed for the new JSON / XML to Java Map translation that is part of the Stomp transport.",Linux binary distribution,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/08 12:33;dejanb;activemq-xstream-version.patch;https://issues.apache.org/jira/secure/attachment/12461055/activemq-xstream-version.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-20 12:33:48.819,,,false,,,,,,,,,,,,,,,,,84783,,,Wed Sep 10 10:14:38 UTC 2008,,,,,,,,"0|i1824n:",255147,,,,,,,,,,,,,,,,,,,"20/Jun/08 12:33;dejanb;The problem is a reference to the old packages name in common-bin.xml. I've also upgraded it to the newest 1.3 version ","10/Sep/08 10:14;dejanb;Patch applied in SVN revision 693767",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Negative ConsumerCount,AMQ-1946,12482668,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,joef,joef,22/Sep/08 17:01,08/Oct/08 08:49,30/Jan/20 16:55,22/Sep/08 18:39,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"Here's the scenario.

You have one or more active consumers for a particular queue. 
Via the JConsole, you invoke the DestinationView's resetStatistics() method for that queue
The consumer count is reset to 0, even though you still have one or more active consumers
If you shutdown the consumers and then refresh the 'Attributes' panel for the queue, you end up with a negative value for the ConsumerCount attribute. 
The negative number reflects the number of once active consumers.  So if you had 2 consumers, you'll see -2. 
If you then restart the consumers, the negative value is increased by the number of active consumers thus leaving you with an invalid consumer count. So if you previously had 2 consumers, when you bring 2 back up you'll end up with a 0 value for the ConsumerCount 

This probably also holds true for the ProducerCount. 

The resetStatistics() method shouldn't reset these two counts.  


",ActiveMQ 5.1,ghopper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/08 17:52;joef;DestinationStatistics.patch;https://issues.apache.org/jira/secure/attachment/12461150/DestinationStatistics.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-22 18:39:17.594,,,false,,,,,,,,,,,,,,,,,75164,,,Mon Sep 22 18:39:17 UTC 2008,,,,,,,,"0|i14b9b:",233287,,,,,,,,,,,,,,,,,,,"22/Sep/08 17:52;joef;I've attached a patch for review. ","22/Sep/08 18:39;rajdavies;Fixed by SVN revision 697937",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Incorrect log level for ""Transport failed, attempting to automatically reconnect due to: java.io.EOFException"" OR should not print stack trace",AMQ-1912,12482651,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,timtw,timtw,25/Aug/08 20:13,04/Sep/08 16:12,30/Jan/20 16:55,04/Sep/08 16:12,4.1.1,,,,,,,5.2.0,,,Transport,,,,0,"The message:

INFO  Transport failed, attempting to automatically reconnect due to: java.io.EOFException
java.io.EOFException
	at java.io.DataInputStream.readInt(Unknown Source)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:267)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:156)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
	at java.lang.Thread.run(Unknown Source)

should either be logged as DEBUG with the stack trace OR as INFO without the stack trace.
","Linux (SuSE 10.2, Red Hat ES 3), Windows Server 2003, Solaris 9;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,75177,,,2008-08-25 20:13:58.0,,,,,,,,"0|i1828v:",255166,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnectionFactory.setExclusiveConsumer has no effect,AMQ-1915,12482577,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,ehecht,ehecht,27/Aug/08 23:32,02/Sep/08 07:08,30/Jan/20 16:55,02/Sep/08 07:08,5.1.0,,,,,,,5.2.0,,,,,,,0,"Creating an {{ActiveMQConnectionFactory}}, and then calling {{setExclusiveConsumer(true)}}, does *not* cause queues created from that factory's connections to have the exclusive consumer feature. I'm pretty sure this is due to {{configureConnection()}} not calling {{setExclusiveConsumer()}} on new connections. This can be seen in the source code for {{ActiveMQConnectionFactory.configureConnection}}, release 5.1.",(irrelevant) Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,120,120,,0%,120,120,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-02 07:08:11.392,,,false,,,,,,,,,,,,,,,,,75175,,,Tue Sep 02 07:08:11 UTC 2008,,,,,,,,"0|i14bt3:",233376,,,,,,,,,,,,,,,,,,,"02/Sep/08 07:08;rajdavies;Fixed by SVN revision 691130",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.NullPointerException with jmx and durable topc subscription removal,AMQ-1808,12482619,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,gtully,gtully,18/Jun/08 11:12,22/Aug/08 10:27,30/Jan/20 16:55,18/Jun/08 19:30,5.1.0,,,,,,,5.2.0,,,Broker,,,,0,"ERROR ManagedRegionBroker            - Failed to register subscription SubscriptionInfo {subscribedDestination = null, destination = topic:/
/HQ_ProductFamilyT71, clientId = lando_VM7_SPAgent3_0, subscriptionName = SP_CallForOffersEH_3_EHID_1PF34, selector = null}
java.lang.NullPointerException
        at org.apache.activemq.broker.jmx.DurableSubscriptionView.<init>(DurableSubscriptionView.java:47)
        at org.apache.activemq.broker.jmx.InactiveDurableSubscriptionView.<init>(InactiveDurableSubscriptionView.java:42)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.addInactiveSubscription(ManagedRegionBroker.java:361)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.unregisterSubscription(ManagedRegionBroker.java:325)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.unregisterSubscription(ManagedRegionBroker.java:217)
        at org.apache.activemq.broker.jmx.ManagedTopicRegion.destroySubscription(ManagedTopicRegion.java:51)
        at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:327)
        at org.apache.activemq.broker.region.TopicRegion.removeSubscription(TopicRegion.java:143)
        at org.apache.activemq.broker.region.RegionBroker.removeSubscription(RegionBroker.java:409)
        at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:98)
        at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:98)
        at org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:98)
        at org.apache.activemq.broker.MutableBrokerFilter.removeSubscription(MutableBrokerFilter.java:105)
        at org.apache.activemq.broker.TransportConnection.processRemoveSubscription(TransportConnection.java:326)
        at org.apache.activemq.command.RemoveSubscriptionInfo.visit(RemoveSubscriptionInfo.java:83)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:197)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:184)
        at java.lang.Thread.run(Thread.java:595)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jun/08 12:26;gtully;AMQ-1808.patch;https://issues.apache.org/jira/secure/attachment/12461008/AMQ-1808.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-18 19:30:22.684,,,false,,,,,,,,,,,,,,,,,84762,,,Wed Jun 18 19:30:22 UTC 2008,,,,,,,,"0|i0ttnb:",172112,,,,,,,,,,,,,,,,,,,"18/Jun/08 12:26;gtully;sub can be null so check.
re enabled test case that shows the problem.","18/Jun/08 19:30;rajdavies;Patch applied in SVN revision 669263",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Access to ConnectionEventListeners in RA's ActiveMQManagedConnection is not synchronized,AMQ-1777,12482404,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,hudalla,hudalla,06/Jun/08 13:28,11/Jun/08 23:14,30/Jan/20 16:55,11/Jun/08 23:14,5.0.0,5.1.0,,,,,,5.2.0,,,JCA Container,,,,0,"When the RA's connection to the broker fails and the <i>ActiveMQManagedConnection.onException()</i> method is called, all the registered <i>ConnectionEventListener</i>s are notified.
At least in Glassfish, the registered listener then calls the <i>ActiveMQManagedConnection.removeConnectionEventListener()</i> to unregister itself. This causes a <i>java.util.ConcurrentModificationException</i> to be thrown since the <i>ConnectionEventListener</i> collection is modified while the <i>onException()</i> iterates over it.

Kai",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/08 13:31;hudalla;amq-1777.patch;https://issues.apache.org/jira/secure/attachment/12461142/amq-1777.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-11 23:14:23.139,,,false,,,,,,,,,,,,,,,,,84603,,,Wed Jun 11 23:14:23 UTC 2008,,,,Patch Available,,,,"0|i14bov:",233357,,,,,,,,,,,,,,,,,,,"06/Jun/08 13:31;hudalla;Patch that creates a shallow copy of the <i>ConnectionEventListener</i> collection before iterating over it.","11/Jun/08 23:14;rajdavies;Fixed by SVN revision 666887",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BlobUploader gets nulled out when copyMessageOnSend is set to true,AMQ-1770,12482466,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,joef,joef,05/Jun/08 04:12,05/Jun/08 15:19,30/Jan/20 16:55,05/Jun/08 15:19,5.1.0,,,,,,,5.2.0,,,JMS client,,,,0,"You have to set the ""copyMessageOnSend"" option to false in order to get the upload to work for an ActiveMQBlobMessage.

From a user forum thread

""When the message is created with activeMQSession.createBlobMessage(File), it sets the message's blobUploader field. When the ActiveMQBlobMessage.copy() method is called, it does not copy this field. The new message has a null blobUploader. Then, when the ActiveMQBlobMessage.onSend() gets called, it does not upload the file if the blobUploader field is null.""

I am assuming this to be a bug and not by design. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,"05/Jun/08 14:39;joef;blobpatch.txt;https://issues.apache.org/jira/secure/attachment/12461077/blobpatch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-05 15:19:13.986,,,false,,,,,,,,,,,,,,,,,84776,,,Thu Jun 05 15:19:13 UTC 2008,,,,,,,,"0|i14buf:",233382,,,,,,,,,,,,,,,,,,,"05/Jun/08 14:39;joef;Submitted patch for review. ","05/Jun/08 15:19;rajdavies;Fixed by SVN revision  663639",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TCPConnector doesn't listen on socket after stopping then starting it again...,AMQ-1699,12481800,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,seth.cleveland@amd.com,seth.cleveland@amd.com,29/Apr/08 20:21,01/May/08 06:40,30/Jan/20 16:55,01/May/08 06:40,5.0.0,,,,,,,5.2.0,,,Connector,,,,0,Patch attached.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Apr/08 20:21;seth.cleveland@amd.com;ASF.LICENSE.NOT.GRANTED--patch.txt;https://issues.apache.org/jira/secure/attachment/12461158/ASF.LICENSE.NOT.GRANTED--patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-05-01 06:40:09.359,,,false,,,,,,,,,,,,,,,,,38749,,,Thu May 01 06:40:09 UTC 2008,,,,Patch Available,,,,"0|i14bj3:",233331,,,,,,,,,,,,,,,,,,,"01/May/08 06:40;rajdavies;Fixed by SVN revision 652440",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sending message to deleted TemporaryQueue throws JMSException instead of IllegalDestinationException,AMQ-1651,12482161,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,jackrabbit,jackrabbit,09/Apr/08 14:21,09/Apr/08 15:12,30/Jan/20 16:55,09/Apr/08 15:12,5.0.0,,,,,,,5.1.0,,,,,,,0,"When sending a message to a deleted TemporaryQueue, a JMSException is thrown at ActiveMQSession.java:1583.
According to the JMS 1.1 spec, section 7.3 Standard Exceptions, an IllegalDestinationException should be thrown instead:
{quote}
_InvalidDestinationException_: This exception *must be* thrown when a
destination is either not understood by a provider or is no longer valid.
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-09 15:12:54.988,,,false,,,,,,,,,,,,,,,,,84623,,,Wed Apr 09 15:12:54 UTC 2008,,,,,,,,"0|i14bev:",233312,,,,,,,,,,,,,,,,,,,"09/Apr/08 15:12;rajdavies;Fixed by svn revision 646400",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS Compliance - Closing a closed connection should not throw an exception,AMQ-1616,12482344,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,gholden,gholden,11/Mar/08 17:45,07/Apr/08 16:38,30/Jan/20 16:55,07/Apr/08 16:38,5.0.0,,,,,,,5.1.0,,,,,,,0,"According to the JMS Spec, section 4.3.5, ""Closing a closed connection must NOT throw an exception.""",Ubuntu Linux,gholden,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Mar/08 17:45;gholden;ASF.LICENSE.NOT.GRANTED--close_connection.patch;https://issues.apache.org/jira/secure/attachment/12461024/ASF.LICENSE.NOT.GRANTED--close_connection.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-07 16:29:58.547,,,false,,,,,,,,,,,,,,,,,84634,,,Mon Apr 07 16:38:01 UTC 2008,,,,Patch Available,,,,"0|i14bqn:",233365,,,,,,,,,,,,,,,,,,,"07/Apr/08 16:29;chirino;That part of the spec is in conflict with JMS API documentation which states:

that the close() method throws ""JMSException - if the JMS provider fails to close the connection due to some internal error. For example, a failure to release resources or to close a socket connection can cause this exception to be thrown.""

So I don't think we are in violation of the spec.  If they really did not want an exception to be thrown, they would have not added the ""throws JMSException"" to the API.

","07/Apr/08 16:33;gholden;BY my reading of the spec and API documentation, an exception should be thrown in the case of any unexpected error, but it explicitly states that closing a connection that's previously been closed should not throw an exception.","07/Apr/08 16:38;chirino;Ahh that makes more sense :)  Sorry about that.  A simpler fix committed in rev 645601. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"out of date javadoc for org.apache.activemq.ActiveMQConnectionFactory.setDispatchAsync @param, default value is true on trunk",AMQ-1706,12482575,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,gtully,gtully,gtully,01/May/08 14:57,05/Mar/12 12:18,30/Jan/20 16:55,05/Mar/12 12:18,5.0.0,,,,,,,5.2.0,5.6.0,,Broker,,,,0,"Default value is now true in the code.
question, when did this change? 

I would be good to reference the change version in the [doco|http://activemq.apache.org/consumer-dispatch-async.html] created around this feature in 4.2. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-03-05 12:02:35.806,,,false,,,,,,,,,,,,,,,,,84608,,,Mon Mar 05 12:18:29 UTC 2012,,,,,,,,"0|i0akuv:",59652,,,,,,,,,,,,,,,,,,,"05/Mar/12 12:02;tagliola;In 5.5.0, in the javadoc @param for both ActiveMQConnectionFactory as well as ActiveMQConnection, it still states the default is false.","05/Mar/12 12:18;gtully;needs comment fix up in the code","05/Mar/12 12:18;gtully;fix in http://svn.apache.org/viewvc?rev=1297025&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnectionState.getTempDesinations() should be renamed to ConnectionState.getTempDestinations(),AMQ-3040,12483870,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,dejanb,norman,norman,16/Nov/10 08:18,20/Jan/11 13:45,30/Jan/20 16:55,20/Jan/11 13:45,,,,,,,,5.5.0,,,,,,,0,There is a type in the method name of ConnectionState.getTempDesinations(). This should be ConnectionState.getTempDestinations(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/10 08:18;norman;AMQ_spelling.diff;https://issues.apache.org/jira/secure/attachment/12461890/AMQ_spelling.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-20 13:45:39.387,,,false,,,,,,,,,,,,,,,,,14724,,,Thu Jan 20 13:45:39 UTC 2011,,,,,,,,"0|i0ak8n:",59552,,,,,,,,,,,,,,,,,,,"16/Nov/10 08:18;norman;here is the fix..","20/Jan/11 13:45;dejanb;Patch applied with 1061299. Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Typo ""DispachedCounter"" in response when running activemq-admin",AMQ-3084,12493249,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,dejanb,miketheman,miketheman,14/Dec/10 22:29,15/Dec/10 09:51,30/Jan/20 16:55,15/Dec/10 09:51,5.4.0,,,,,,,5.5.0,,,,,,,0,"Running ""activemq-admin query | grep Disp"" makes this very apparent.

Sampled output:


DispatchedQueueSize = 0
DispachedCounter = 0
DispatchedQueueSize = 0
DispachedCounter = 0
DispatchedQueueSize = 0
DispachedCounter = 0
DispatchedQueueSize = 0
DispachedCounter = 1043173
DispatchedQueueSize = 0
DispachedCounter = 1042918


I was able to grep out some instances of this here:

totem:activemq michael$ grep -iR dispached .
./activemq-core/src/main/java/org/apache/activemq/broker/jmx/.svn/text-base/SubscriptionView.java.svn-base:    public long getDispachedCounter() {
./activemq-core/src/main/java/org/apache/activemq/broker/jmx/.svn/text-base/SubscriptionViewMBean.java.svn-base:    long getDispachedCounter();
./activemq-core/src/main/java/org/apache/activemq/broker/jmx/SubscriptionView.java:    public long getDispachedCounter() {
./activemq-core/src/main/java/org/apache/activemq/broker/jmx/SubscriptionViewMBean.java:    long getDispachedCounter();
./activemq-web-console/src/main/webapp/connection.jsp:	<td><c:out value=""${consumer.dispachedCounter}"" /></td>
./activemq-web-console/src/main/webapp/queueConsumers.jsp:	<td>${row.dispachedCounter}</td>
./activemq-web-console/src/main/webapp/subscribers.jsp:<td>${row.dispachedCounter}</td>
./activemq-web-console/src/main/webapp/subscribers.jsp:<td>${row.dispachedCounter}</td>
","Linux, CentOS 5.5, activemq 5.4.0, Java Runtime: Sun Microsystems Inc. 1.6.0_17 /usr/java/jdk1.6.0_17/jre",miketheman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-15 09:51:50.445,,,false,,,,,,,,,,,,,,,,,14764,,,Wed Dec 15 09:51:50 UTC 2010,,,,,,,,"0|i0ak6f:",59542,,,,,,,,,,,,,,,,,,,"15/Dec/10 09:51;dejanb;Fixed with svn revision 1049466",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ensure activemq-fileserver web.xml conforms to schema,AMQ-2226,12482259,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,gtully,pdonald,pdonald,26/Apr/09 06:51,09/Aug/10 10:06,30/Jan/20 16:55,09/Aug/10 10:06,5.3.0,,,,,,,5.4.0,,,,,,,0,The web.xml for activemq-fileserver did not validate correctly. This patch just reorders elements so that the document is valid.,,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/09 06:51;pdonald;activemq-fileserver_web.xml.diff;https://issues.apache.org/jira/secure/attachment/12461497/activemq-fileserver_web.xml.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-09 10:06:39.592,,,false,,,,,,,,,,,,,,,,,75019,,,Mon Aug 09 10:06:39 UTC 2010,,,,Patch Available,,,,"0|i0rr5b:",160042,,,,,,,,,,,,,,,,,,,"09/Aug/10 10:06;gtully;patch applied in r983570",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
init.d script fails if RUN_AS_GROUP not defined due to typo,AMQ-2726,12483278,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,gtully,jamesc,jamesc,07/May/10 15:14,17/May/10 08:56,30/Jan/20 16:55,17/May/10 08:56,,,,,,,,5.4.0,,,Broker,,,,0,"In the supplied init.d scripts for linux there is a typo 

{{RUN_AS_GROUP=RUN_AS_USER}}

which should be 

{{RUN_AS_GROUP=$RUN_AS_USER}}

We have this in our patches on our production server so we must have hit the problem at some point, but looking at the code it's not even clear the case that this code would be called (RUN_AS_USER set to a user which does not have a primary group) could ever happen on a well-configured mahcine:

{code}
RUN_AS_GROUP=`groups $RUN_AS_USER | awk '{print $3}' | tail -1`
if [ ""X$RUN_AS_GROUP"" = ""X"" ]
then
    RUN_AS_GROUP=RUN_AS_USER
fi
{code}

Patch attached to do the change above, but perhaps the whole IF statement should be deleted.","activemq trunk, RHEL5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/May/10 15:22;jamesc;run-as-group-macosx.patch;https://issues.apache.org/jira/secure/attachment/12461695/run-as-group-macosx.patch","07/May/10 15:15;jamesc;run-as-group.patch;https://issues.apache.org/jira/secure/attachment/12461694/run-as-group.patch",,,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-05-17 08:56:01.386,,,false,,,,,,,,,,,,,,,,,74827,,,Mon May 17 08:56:01 UTC 2010,,,,Patch Available,,,,"0|i0rr4v:",160040,,,,,,,,,,,,,,,,,,,"07/May/10 15:22;jamesc;looks like the macosx script has the same problem","17/May/10 08:56;gtully;patch applied with thanks in r945032",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Space character inserted before subscriptionID in durable subscription info,AMQ-2654,12483253,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,dejanb,slewis,slewis,17/Mar/10 16:06,17/Mar/10 16:30,30/Jan/20 16:55,17/Mar/10 16:30,5.3.0,,,,,,,5.3.1,5.4.0,,Broker,,,,0,"When you check out the ObjectName of a durable subscription there's a space between ""Durable"" and subscriptionID:

{code}
org.apache.activemq:BrokerName=localhost,Type=Subscription,persistentMode=Durable, subscriptionID=James,destinationType=Topic
{code}

This patch removes that space.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Mar/10 16:07;slewis;patch.txt;https://issues.apache.org/jira/secure/attachment/12461660/patch.txt",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-03-17 16:30:51.462,,,false,,,,,,,,,,,,,,,,,74858,,,Wed Mar 17 16:30:51 UTC 2010,,,,Patch Available,,,,"0|i0rr4n:",160039,,,,,,,,,,,,,,,,,,,"17/Mar/10 16:30;dejanb;Patch applied. Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Locale dependent toUpperCase in IntrospectionSupport.,AMQ-2608,12483208,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,gtully,akos.baraz,akos.baraz,16/Feb/10 09:01,17/Feb/10 12:19,30/Jan/20 16:55,16/Feb/10 18:20,5.3.0,,,,,,,5.3.1,5.4.0,,,,,,0,"The org.apache.activemq.util.IntrospectionSupport.findSetterMethod uses name.substring(0, 1).toUpperCase(). What is local dependent. For example in turkish locale we won't get setter for 'initialReconnectDelay', because the uppercase of 'i' is not 'I'. 

I would suggest using Character.toUpperCase(name.charAt(0)) what is local independent.
",java,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-02-16 18:20:04.601,,,false,,,,,,,,,,,,,,,,,74876,,,Wed Feb 17 12:19:38 UTC 2010,,,,,,,,"0|i0rr53:",160041,,,,,,,,,,,,,,,,,,,"16/Feb/10 18:20;gtully;fix applied with thanks in r910637","17/Feb/10 12:19;gtully;fix applied to 5.3 branch for 5.3.1 in r910945",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MESSAGE frame should not have the ""receipt"" header",AMQ-1817,12483206,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,tabish,rgl,rgl,20/Jun/08 16:43,03/Feb/10 16:10,30/Jan/20 16:55,03/Feb/10 16:10,5.1.0,,,,,,,5.4.0,,,Broker,,,,1,"When a producer STOMP client SEND messages with a ""receipt"" header the consumer STOMP client MESSAGE should not contain the ""receipt"" header, mainly because that header is to be processed solely by AMQ (and only when it receives the SEND).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/09 16:30;jamesc;stomp-receipt.diff;https://issues.apache.org/jira/secure/attachment/12461434/stomp-receipt.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-11-17 16:30:33.455,,,false,,,,,,,,,,,,,,,,,84758,,,Wed Feb 03 16:10:29 UTC 2010,,,,,,,,"0|i0rr4f:",160038,,,,,,,,,,,,,,,,,,,"17/Nov/09 16:30;jamesc;Patch which removes the receipt header from a STOMP message. Tested to show that the header is no longer propagated to either STOMP or JMS clients.
","03/Feb/10 16:10;tabish;Patch applied in SVN: 906101.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong/missing OSGi metadata in activemq-core and kahadb,AMQ-2068,12482288,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,gtully,gertvanthienen,gertvanthienen,15/Jan/09 20:12,16/Jan/09 11:47,30/Jan/20 16:55,16/Jan/09 11:47,5.3.0,,,,,,,5.3.0,,,Broker,,,,0,"In order to be able to use ActiveMQ 5.3-SNAPSHOT inside an OSGi container (e.g. ServiceMix Kernel), two modifications are required:
- the org.apache.maven.* packages should be marked as optional imports from activemq-core
- kahadb needs to be packaged as an OSGi bundle",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jan/09 20:12;gertvanthienen;AMQ-2068.diff;https://issues.apache.org/jira/secure/attachment/12461316/AMQ-2068.diff",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-01-16 11:47:42.082,,,false,,,,,,,,,,,,,,,,,75094,,,Fri Jan 16 11:47:42 UTC 2009,,,,,,,,"0|i182d3:",255185,,,,,,,,,,,,,,,,,,,"15/Jan/09 20:12;gertvanthienen;This patch file fixes both issues.","16/Jan/09 11:47;gtully;patch applied with thanks: r734981",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ inflightcount queue statistics aren't decremented when using transactions or when messages are sent to the DLQ,AMQ-1838,12482478,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,rajdavies,seth.cleveland@amd.com,seth.cleveland@amd.com,03/Jul/08 20:26,31/Aug/08 06:51,30/Jan/20 16:55,31/Aug/08 06:51,5.1.0,,,,,,,5.2.0,,,Broker,,,,1,,,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/08 20:37;seth.cleveland@amd.com;AMQ-1838.patch;https://issues.apache.org/jira/secure/attachment/12461121/AMQ-1838.patch",,,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-08-31 06:51:57.917,,,false,,,,,,,,,,,,,,,,,84753,,,Sun Aug 31 06:51:57 UTC 2008,,,,Patch Available,,,,"0|i14biv:",233330,,,,,,,,,,,,,,,,,,,"03/Jul/08 20:38;seth.cleveland@amd.com;Patch is against trunk revision: 673787","31/Aug/08 06:51;rajdavies;Patch applied in SVN revision 690645",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
