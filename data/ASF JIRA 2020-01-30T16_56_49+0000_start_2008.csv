Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Duplicate),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Patch Info),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Regression),Custom field (Regression),Custom field (Release Note),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Tags),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
ActiveMQ  is not JCA1.5 compliant,AMQ-501,12483288,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,pvillacorta,richard_c,richard_c,23/Jan/06 12:42,12/May/10 14:47,30/Jan/20 16:56,03/May/06 23:06,4.0,4.0 RC2,,,,,4.0,,,Connector,,,,0,"When attempting to install the ActiveMQ RAR, these errors are thrown, and appear to be vaild and correct (verified by browsing the ActiveMQ source code). Classloading problems appear to prevent using ActiveMQ using the Foriegn JMS facility of Weblogic.

[1] The ra.xml <managedconnectionfactory-class> class 'org.activemq.ra.ActiveMQManagedConnectionFactory' must override both equals() and hashCode(), but doesn't.
[2] The ra.xml <managedconnectionfactory-class> class 'org.activemq.ra.ActiveMQManagedConnectionFactory' must override both equals() and hashCode(), but doesn't.
[3] The ra.xml <managedconnectionfactory-class> class 'org.activemq.ra.ActiveMQManagedConnectionFactory' must override both equals() and hashCode(), but doesn't.
[4] The ra.xml <activationspec-class> 'org.activemq.ra.ActiveMQActivationSpec' must implement java.io.Serializable but does not.","RHEL4, BEA Weblogic 9.0.1",richard_c,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/06 13:08;pvillacorta;ASF.LICENSE.NOT.GRANTED--rartest-new.ear;https://issues.apache.org/jira/secure/attachment/12460595/ASF.LICENSE.NOT.GRANTED--rartest-new.ear","31/Jan/06 18:45;richard_c;ASF.LICENSE.NOT.GRANTED--rartest.ear;https://issues.apache.org/jira/secure/attachment/12460608/ASF.LICENSE.NOT.GRANTED--rartest.ear",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-01-23 13:35:20.0,,,false,,,,,,,,,,,,,,,,,49164,,,Wed May 12 14:47:57 UTC 2010,,,,,,,,"0|i0rzlr:",161412,,,,,,,,,,,,,,,,,,,"23/Jan/06 13:35;rajdavies;Need to validate any *fix* works with weblogic server 9.0.1","24/Jan/06 16:22;chirino;Jonas,

I just commited changes to activemq 4 that add the missing bits that WL was complaining about.  Could you verify that it now works under WL 9.0.1??

Thanks!","25/Jan/06 00:02;jlim;we'll start testing on it","25/Jan/06 11:22;jlim;Was Able to replicate the issue on Weblogic 9.0 using AMQ M4.  Tested it against the latest snapshot from SVN head and the issues were resolved. 

We did noticed though that default configuration of the ra.xml (<connection-impl-class>) is pointing to a class that no longer exist on the rar (org.apache.activemq.ra.JMSConnectionProxy)
","31/Jan/06 18:40;richard_c;Got further this time, but some interfaces still don't appear to be implemented. Weblogic 9.0.1 log extract follows...

####<31-Jan-2006 16:10:45 o'clock GMT> <Error> <Deployer> <RARHAS03> <raserver> <[STANDBY] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1138723845681> <BEA-149202> <Encountered an exception while attempting to commit the 7 task for the application 'rartest'.>
####<31-Jan-2006 16:10:45 o'clock GMT> <Warning> <Deployer> <RARHAS03> <raserver> <[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1138723845713> <BEA-149004> <Failures were detected while initiating start task for application 'rartest'.>
####<31-Jan-2006 16:10:45 o'clock GMT> <Warning> <Deployer> <RARHAS03> <raserver> <[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1138723845714> <BEA-149078> <Stack trace for message 149004
weblogic.application.ModuleException: weblogic.connector.exception.RACommonException:

There are 1 nested errors:

javax.naming.NamingException [Root exception is java.rmi.RemoteException: org.apache.activemq.ActiveMQPrefetchPolicy; nested exception is:
        java.io.NotSerializableException: org.apache.activemq.ActiveMQPrefetchPolicy]
        at weblogic.jndi.internal.ExceptionTranslator.toNamingException(ExceptionTranslator.java:94)
        at weblogic.jndi.internal.WLContextImpl.translateException(WLContextImpl.java:421)
        at weblogic.jndi.internal.WLEventContextImpl.bind(WLEventContextImpl.java:295)
        at weblogic.jndi.internal.WLContextImpl.bind(WLContextImpl.java:389)
        at weblogic.connector.deploy.JNDIHandler.bindRA(JNDIHandler.java:604)
        at weblogic.connector.common.RAInstanceManager.putRAintoJNDITree(RAInstanceManager.java:1376)
        at weblogic.connector.common.RAInstanceManager.activate(RAInstanceManager.java:411)
        at weblogic.connector.deploy.ConnectorModule.activate(ConnectorModule.java:286)
        at weblogic.application.internal.flow.ModuleListenerInvoker.activate(ModuleListenerInvoker.java:104)
        at weblogic.application.internal.flow.DeploymentCallbackFlow$2.next(DeploymentCallbackFlow.java:339)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:68)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:60)
        at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:635)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:257)
        at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:154)
        at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:80)
        at weblogic.deploy.internal.targetserver.operations.AbstractOperation.activate(AbstractOperation.java:461)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.activateDeployment(ActivateOperation.java:130)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.doCommit(ActivateOperation.java:101)
        at weblogic.deploy.internal.targetserver.operations.StartOperation.doCommit(StartOperation.java:130)
        at weblogic.deploy.internal.targetserver.operations.AbstractOperation.commit(AbstractOperation.java:250)
        at weblogic.deploy.internal.targetserver.DeploymentManager.handleDeploymentCommit(DeploymentManager.java:785)
        at weblogic.deploy.internal.targetserver.DeploymentManager.activateDeploymentList(DeploymentManager.java:1174)
        at weblogic.deploy.internal.targetserver.DeploymentManager.handleCommit(DeploymentManager.java:410)
        at weblogic.deploy.internal.targetserver.DeploymentServiceDispatcher.commit(DeploymentServiceDispatcher.java:113)
Caused by: java.rmi.RemoteException: org.apache.activemq.ActiveMQPrefetchPolicy; nested exception is:
        java.io.NotSerializableException: org.apache.activemq.ActiveMQPrefetchPolicy
        at weblogic.jndi.internal.WLEventContextImpl.copyObject(WLEventContextImpl.java:395)
        at weblogic.jndi.internal.WLEventContextImpl.bind(WLEventContextImpl.java:289)
        at weblogic.jndi.internal.WLContextImpl.bind(WLContextImpl.java:389)
        at weblogic.connector.deploy.JNDIHandler.bindRA(JNDIHandler.java:604)
        at weblogic.connector.common.RAInstanceManager.putRAintoJNDITree(RAInstanceManager.java:1376)
        at weblogic.connector.common.RAInstanceManager.activate(RAInstanceManager.java:411)
        at weblogic.connector.deploy.ConnectorModule.activate(ConnectorModule.java:286)
        at weblogic.application.internal.flow.ModuleListenerInvoker.activate(ModuleListenerInvoker.java:104)
        at weblogic.application.internal.flow.DeploymentCallbackFlow$2.next(DeploymentCallbackFlow.java:339)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:68)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:60)
        at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:635)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:257)
        at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:154)
        at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:80)
        at weblogic.deploy.internal.targetserver.operations.AbstractOperation.activate(AbstractOperation.java:461)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.activateDeployment(ActivateOperation.java:130)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.doCommit(ActivateOperation.java:101)
        at weblogic.deploy.internal.targetserver.operations.StartOperation.doCommit(StartOperation.java:130)
        at weblogic.deploy.internal.targetserver.operations.AbstractOperation.commit(AbstractOperation.java:250)
        at weblogic.deploy.internal.targetserver.DeploymentManager.handleDeploymentCommit(DeploymentManager.java:785)
        at weblogic.deploy.internal.targetserver.DeploymentManager.activateDeploymentList(DeploymentManager.java:1174)
        at weblogic.deploy.internal.targetserver.DeploymentManager.handleCommit(DeploymentManager.java:410)
        at weblogic.deploy.internal.targetserver.DeploymentServiceDispatcher.commit(DeploymentServiceDispatcher.java:113)
        at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.doCommitCallback(DeploymentReceiverCallbackDeliverer.java:190)
        at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.access$200(DeploymentReceiverCallbackDeliverer.java:12)
        at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer$3.run(DeploymentReceiverCallbackDeliverer.java:76)
        at weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518)
        at weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
        at weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
Caused by: java.io.NotSerializableException: org.apache.activemq.ActiveMQPrefetchPolicy
        at java.io.ObjectOutputStream.writeObject0(Ljava.lang.Object;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.defaultWriteFields(Ljava.lang.Object;Ljava.io.ObjectStreamClass;)V(Unknown Source)
        at java.io.ObjectOutputStream.writeSerialData(Ljava.lang.Object;Ljava.io.ObjectStreamClass;)V(Unknown Source)
        at java.io.ObjectOutputStream.writeOrdinaryObject(Ljava.lang.Object;Ljava.io.ObjectStreamClass;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.writeObject0(Ljava.lang.Object;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.defaultWriteFields(Ljava.lang.Object;Ljava.io.ObjectStreamClass;)V(Unknown Source)
        at java.io.ObjectOutputStream.writeSerialData(Ljava.lang.Object;Ljava.io.ObjectStreamClass;)V(Unknown Source)
        at java.io.ObjectOutputStream.writeOrdinaryObject(Ljava.lang.Object;Ljava.io.ObjectStreamClass;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.writeObject0(Ljava.lang.Object;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.writeObject(Ljava.lang.Object;)V(Unknown Source)
        at weblogic.rmi.extensions.server.CBVOutputStream.writeObject(CBVOutputStream.java:84)
        at weblogic.jndi.internal.JNDIHelper.copyObject(JNDIHelper.java:85)
        at weblogic.jndi.internal.WLEventContextImpl.copyObject(WLEventContextImpl.java:390)
        at weblogic.jndi.internal.WLEventContextImpl.bind(WLEventContextImpl.java:289)
        at weblogic.jndi.internal.WLContextImpl.bind(WLContextImpl.java:389)
        at weblogic.connector.deploy.JNDIHandler.bindRA(JNDIHandler.java:604)
        at weblogic.connector.common.RAInstanceManager.putRAintoJNDITree(RAInstanceManager.java:1376)
        at weblogic.connector.common.RAInstanceManager.activate(RAInstanceManager.java:411)
        at weblogic.connector.deploy.ConnectorModule.activate(ConnectorModule.java:286)
        at weblogic.application.internal.flow.ModuleListenerInvoker.activate(ModuleListenerInvoker.java:104)
        at weblogic.application.internal.flow.DeploymentCallbackFlow$2.next(DeploymentCallbackFlow.java:339)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:68)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:60)
        at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:635)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:257)
        at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:154)
        at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:80)
        at weblogic.deploy.internal.targetserver.operations.AbstractOperation.activate(AbstractOperation.java:461)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.activateDeployment(ActivateOperation.java:130)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.doCommit(ActivateOperation.java:101)


        at weblogic.connector.deploy.ConnectorModule.activate(ConnectorModule.java:292)
        at weblogic.application.internal.flow.ModuleListenerInvoker.activate(ModuleListenerInvoker.java:104)
        at weblogic.application.internal.flow.DeploymentCallbackFlow$2.next(DeploymentCallbackFlow.java:339)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:68)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:60)
        at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:635)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:257)
        at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:154)
        at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:80)
        at weblogic.deploy.internal.targetserver.operations.AbstractOperation.activate(AbstractOperation.java:461)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.activateDeployment(ActivateOperation.java:130)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.doCommit(ActivateOperation.java:101)
        at weblogic.deploy.internal.targetserver.operations.StartOperation.doCommit(StartOperation.java:130)
        at weblogic.deploy.internal.targetserver.operations.AbstractOperation.commit(AbstractOperation.java:250)
        at weblogic.deploy.internal.targetserver.DeploymentManager.handleDeploymentCommit(DeploymentManager.java:785)
        at weblogic.deploy.internal.targetserver.DeploymentManager.activateDeploymentList(DeploymentManager.java:1174)
        at weblogic.deploy.internal.targetserver.DeploymentManager.handleCommit(DeploymentManager.java:410)
        at weblogic.deploy.internal.targetserver.DeploymentServiceDispatcher.commit(DeploymentServiceDispatcher.java:113)
        at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.doCommitCallback(DeploymentReceiverCallbackDeliverer.java:190)
        at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.access$200(DeploymentReceiverCallbackDeliverer.java:12)
        at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer$3.run(DeploymentReceiverCallbackDeliverer.java:76)
        at weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518)
        at weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
        at weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
java.io.NotSerializableException: org.apache.activemq.ActiveMQPrefetchPolicy
        at java.io.ObjectOutputStream.writeObject0(Ljava.lang.Object;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.defaultWriteFields(Ljava.lang.Object;Ljava.io.ObjectStreamClass;)V(Unknown Source)
        at java.io.ObjectOutputStream.writeSerialData(Ljava.lang.Object;Ljava.io.ObjectStreamClass;)V(Unknown Source)
        at java.io.ObjectOutputStream.writeOrdinaryObject(Ljava.lang.Object;Ljava.io.ObjectStreamClass;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.writeObject0(Ljava.lang.Object;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.defaultWriteFields(Ljava.lang.Object;Ljava.io.ObjectStreamClass;)V(Unknown Source)
        at java.io.ObjectOutputStream.writeSerialData(Ljava.lang.Object;Ljava.io.ObjectStreamClass;)V(Unknown Source)
        at java.io.ObjectOutputStream.writeOrdinaryObject(Ljava.lang.Object;Ljava.io.ObjectStreamClass;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.writeObject0(Ljava.lang.Object;Z)V(Unknown Source)
        at java.io.ObjectOutputStream.writeObject(Ljava.lang.Object;)V(Unknown Source)
        at weblogic.rmi.extensions.server.CBVOutputStream.writeObject(CBVOutputStream.java:84)
        at weblogic.jndi.internal.JNDIHelper.copyObject(JNDIHelper.java:85)
        at weblogic.jndi.internal.WLEventContextImpl.copyObject(WLEventContextImpl.java:390)
        at weblogic.jndi.internal.WLEventContextImpl.bind(WLEventContextImpl.java:289)
        at weblogic.jndi.internal.WLContextImpl.bind(WLContextImpl.java:389)
        at weblogic.connector.deploy.JNDIHandler.bindRA(JNDIHandler.java:604)
        at weblogic.connector.common.RAInstanceManager.putRAintoJNDITree(RAInstanceManager.java:1376)
        at weblogic.connector.common.RAInstanceManager.activate(RAInstanceManager.java:411)
        at weblogic.connector.deploy.ConnectorModule.activate(ConnectorModule.java:286)
        at weblogic.application.internal.flow.ModuleListenerInvoker.activate(ModuleListenerInvoker.java:104)
        at weblogic.application.internal.flow.DeploymentCallbackFlow$2.next(DeploymentCallbackFlow.java:339)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:68)
        at weblogic.application.internal.flow.DeploymentCallbackFlow.activate(DeploymentCallbackFlow.java:60)
        at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:635)
        at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
        at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:257)
        at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:154)
        at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:80)
        at weblogic.deploy.internal.targetserver.operations.AbstractOperation.activate(AbstractOperation.java:461)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.activateDeployment(ActivateOperation.java:130)
        at weblogic.deploy.internal.targetserver.operations.ActivateOperation.doCommit(ActivateOperation.java:101)
>
","31/Jan/06 18:45;richard_c;This is the test application. I can supply the build environment and source, but this should be sufficient.","02/Feb/06 13:06;jlim;Thanks Richard!, we're currently looking into the issue ","03/Feb/06 11:23;pvillacorta;We've committed changes to ActiveMQPrefetchPolicy and RedeliveryPolicy making them Serializable. The NotSerializableException was gone but we encountered these warnings:

<Feb 3, 2006 5:05:57 PM CST> <Warning> <EJB> <BEA-010096> <The Message-Driven EJB: EchoMDB is unable to connect to the JMS destination or bind to JCA resource adapter: activemq-ra-4.0-SNAPSHOT.rar. Connection failed after 2 attempts. The MDB will attempt to reconnect/rebind every 10 seconds. This log message will repeat every 600 seconds until the condition clears.>
<Feb 3, 2006 5:05:57 PM CST> <Warning> <EJB> <BEA-010221> <The Message-Driven EJB: EchoMDB is unable to bind to the JCA resource adapter: activemq-ra-4.0-SNAPSHOT.rar. The Error was:No deployed ResourceAdapter with adapter JNDI name = 'activemq-ra-4.0-SNAPSHOT.rar' was found.>


I noticed this element in activemq-ra-4.0-SNAPSHOT.rar -> weblogic-ra.xml
  <jndi-name>MyActiveMQRA</jndi-name>

And in rartest-ejbs.jar -> weblogic-ejb-jar.xml
      <resource-adapter-jndi-name>activemq-ra-4.0-SNAPSHOT.rar</resource-adapter-jndi-name>


In activemq-ra-4.0-SNAPSHOT.rar -> weblogic-ra.xml, I tried changing
  <jndi-name>MyActiveMQRA</jndi-name>
to
  <jndi-name>activemq-ra-4.0-SNAPSHOT.rar</jndi-name>
so the 2 JNDI elements would match.

The JNDI error was gone but I got new warnings. We're currently looking into these.","10/Feb/06 12:36;pvillacorta;This is warning mentioned above:

<Feb 8, 2006 2:34:12 PM CST> <Warning> <Connector> <BEA-190032> << MyActiveMQConnectionFactoryJNDI > ResourceAllocationException thrown by resource adapter on call to ManagedConnectionFactory.createManagedConnection(): ""javax.resource.spi.ResourceAdapterInternalException: Failed to create managed connection: java.lang.NullPointerException "">
<Feb 8, 2006 2:34:12 PM CST> <Warning> <Connector> <BEA-190024> << MyActiveMQConnectionFactoryJNDI > Error making initial connections for pool. Reason: javax.resource.spi.ResourceAdapterInternalException: Failed to create managed connection: java.lang.NullPointerException>","10/Feb/06 13:08;pvillacorta;ear file state that outputs the error in this comment:
http://jira.activemq.org/jira/browse/AMQ-501#action_35520","18/Mar/06 07:22;jstrachan;How are we getting on with this one? Any idea if SVN HEAD works or not. A stack trace for the NullPointerException would be handy :)","03/May/06 23:06;chirino;I created the https://svn.apache.org/repos/asf/incubator/activemq/trunk/systest/weblogic-test modules to test MDB and outbund jms connections.  They seemed to be working ok.  Closing as fixed.","12/May/10 06:20;lakshmipriya;I am stuck up with this error in weblogic. 
<< MyActiveMQConnectionFactoryJNDI > Error making initial connections for pool. Reason: javax.resource.spi.ResourceAdapterInternalException: Failed to create managed connection: java.lang.NullPointerException> 

The following link given by Hiram Chirino does not seem to be active now. On clicking it i get 404 error. 
"" https://svn.apache.org/repos/asf/incubator/activemq/trunk/systest/weblogic-test"" 

It would be helpful if the changes to be made to rectify the above mentioned error are mentioned and the link is enabled. Thanks in advance.
","12/May/10 09:17;gtully;can you try a later version, say version 5.3.2, this version is known to work ok. ","12/May/10 14:47;bsnyder;FWIW, the new location of the weblogic-test is here: 

[https://svn.apache.org/repos/asf/activemq/sandbox/systest/weblogic-test]

However, I don't know if the systest module has been kept in step with ActiveMQ over the years. ",,,,,,,,,,,,,,,,,,,,
Unable to deliver messages through a mixed version broker network,AMQ-1472,12482197,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,jpvasquez,jpvasquez,22/Oct/07 19:18,23/Nov/07 07:27,30/Jan/20 16:57,23/Nov/07 07:27,5.0.0,,,,,,5.0.0,,,,,,,0,"Setup:


|Client Producer:|5.0-SNAPSHOT|
|Broker A:|4.1.1|
|Broker B:|5.0-SNAPSHOT|
|Client Consumer:|5.0-SNAPSHOT|

Messages from the producer are sent to Broker A, which discovers Broker B via standard multicast discovery (each broker was given a unique name before starting).  Consumer is connected to Broker B, set to consume messages from the same queue.

After a small number of successful transfers, (I've seen between 0 and 7) Broker B will display this message on each send attempt by the producer, and break the network connection between Broker A and B  (which is re-established immediately):

{noformat}
ERROR AsyncDataManager               - Looking for key 1 but not found in fileMap: {}
ERROR QueueStorePrefetch             - Failed to fill batch
java.io.IOException: Failed to read to journal for: offset = 172, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data--1
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:558)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:444)
	at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:383)
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:68)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:98)
	at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:495)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.fillBatch(QueueStorePrefetch.java:167)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.hasNext(QueueStorePrefetch.java:109)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:129)
	at org.apache.activemq.broker.region.Queue.buildList(Queue.java:1022)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1005)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1068)
	at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:999)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:484)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:441)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:328)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:402)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:125)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:434)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:623)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:126)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:183)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:170)
	at java.lang.Thread.run(Thread.java:613)
Caused by: java.io.IOException: Could not locate data file data--1
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:285)
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:505)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:441)
	... 31 more
{noformat}

Seemed like this might be relevant -- here's the directory structure for Broker B's data directory -- note data file named {{data-kaha-1}} vs. {{data--1}}:

{noformat}
$ find data                                                                                                                         3:13PM
data
data/activemq.log
data/localhost50
data/localhost50/journal
data/localhost50/journal/data-control
data/localhost50/kr-store
data/localhost50/kr-store/data
data/localhost50/kr-store/data/data-kaha-1
data/localhost50/kr-store/data/data-queue-data-1
data/localhost50/kr-store/data/hash-index-blob_topic___ActiveMQ.Agent-Subscriptions
data/localhost50/kr-store/data/hash-index-queue-data_queue___DUMMY.QUEUE
data/localhost50/kr-store/data/hash-index-queue-data_queue___example.A
data/localhost50/kr-store/data/hash-index-topic-data_topic___ActiveMQ.Agent
data/localhost50/kr-store/data/index-blob
data/localhost50/kr-store/data/index-kaha
data/localhost50/kr-store/data/index-queue-data
data/localhost50/kr-store/data/index-topic-acks
data/localhost50/kr-store/data/index-topic-data
data/localhost50/kr-store/data/lock
data/localhost50/kr-store/state
data/localhost50/kr-store/state/data-kaha-1
data/localhost50/kr-store/state/data-store-state-1
data/localhost50/kr-store/state/hash-index-store-state_state
data/localhost50/kr-store/state/index-kaha
data/localhost50/kr-store/state/index-store-state
data/localhost50/kr-store/state/index-transactions-state
data/localhost50/kr-store/state/lock
data/localhost50/tmp_storage
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-11-23 07:27:11.618,,,false,,,,,,,,,,,,,,,,,84687,,,Fri Nov 23 07:27:11 UTC 2007,,,,,,,,"0|i0rzrz:",161440,,,,,,,,,,,,,,,,,,,"23/Nov/07 07:27;rajdavies;we only support 4.1.1 clients connecting to 5.0 brokers. The behaviour of networks between mixed brokers is undefined (not supported)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ Store deletes data files which are in use,AMQ-1479,12482150,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,rajdavies,rajdavies,27/Oct/07 04:11,28/Oct/07 09:39,30/Jan/20 16:57,28/Oct/07 09:39,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"The AMQ Store allocates entries in the data logs for commands (including messages/acknowledgements/transaction boundaries etc) - but relies on the reference store for keeping track of data files that are being used. Updates to the reference store happen at a checkpoint() - asynchronously. The problem is that for a fast producer, the current data file (one being written to) can move on past the last known data file to the reference store. As the cleanup() task is a scheduled task - and not coupled to check points - the cleanup task can remove data files that the reference store is not yet aware of AND have are previous to the current data file being written too. 

This issue can result in errors from the AMQ Store such as:

Message: java.io.IOException: Failed to read to journal for: offset = 
2374, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could 
not locate data file data--1 

see: http://www.nabble.com/Please-help-check-ActiveMQ-5.0.0-RC2-tf4692126s2354.html

Test case: org.apache.activemq.bugs.DurableConsumerTest
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84685,,,Sun Oct 28 09:39:53 UTC 2007,,,,,,,,"0|i0rzrr:",161439,,,,,,,,,,,,,,,,,,,"28/Oct/07 09:39;rajdavies;Fixed by SVN revision 589314 in trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pure Master/Slave configuration doesn't work,AMQ-1257,12481988,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,sparky2708,sparky2708,31/May/07 13:16,23/Jul/07 07:51,30/Jan/20 16:57,23/Jul/07 07:51,4.1.0,,,,,,5.0.0,,,Broker,,,,3,"From the discussion board. Please fix this issue as it is happening for us also and is a showstopper.

----------------------------------------------------------------------------------------------------------------------------------------------

Hi everybody, 

I made this post: 

http://www.nabble.com/Master-Slaver-persistent--t3681637s2354.html 

in the user Forum. Now I looked myself in the source to find out the mistake. It seems that the method 

protected void sendSyncToSlave(Command command){ 
        try{ 
        
            Response response=(Response) slave.request(command); 
            if (response.isException()){ 
                ExceptionResponse er=(ExceptionResponse)response; 
                log.error(""Slave Failed"",er.getException()); 
            } 

        }catch(Throwable e){ 
            log.error(""Slave Failed"",e); 
            
        } 
    } 

of the ""org.apache.activemq.broker.ft.MasterBroker"" will always throw an Exception. The next thing is that the method ""sendAsyncToSlave"" is called more than one time, if I just send one Message: 


INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendSync 
ERROR MasterBroker                - Slave Failed 
java.lang.AssertionError: Unsupported Method 
        at org.apache.activemq.transport.TransportSupport.request(TransportSuppo 
rt.java:71) 
        at org.apache.activemq.transport.TransportFilter.request(TransportFilter 
.java:92) 
        at org.apache.activemq.transport.TransportFilter.request(TransportFilter 
.java:92) 
        at org.apache.activemq.transport.MutexTransport.request(MutexTransport.j 
ava:55) 
        at org.apache.activemq.broker.ft.MasterBroker.sendSyncToSlave(MasterBrok 
er.java:364) 
        at org.apache.activemq.broker.ft.MasterBroker.sendToSlave(MasterBroker.j 
ava:333) 
        at org.apache.activemq.broker.ft.MasterBroker.send(MasterBroker.java:307 
) 
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilt 
er.java:136) 
        at org.apache.activemq.broker.TransportConnection.processMessage(Transpo 
rtConnection.java:498) 
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.jav 
a:604) 
        at org.apache.activemq.broker.TransportConnection.service(TransportConne 
ction.java:294) 
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportC 
onnection.java:185) 
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilt 
er.java:68) 
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireForm 
atNegotiator.java:133) 
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityM 
onitor.java:122) 
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSup 
port.java:84) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java: 
137) 
        at java.lang.Thread.run(Thread.java:595) 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
",,jwilcox,mlawrence,tcaine,tkruessm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-07-19 20:48:53.221,,,false,,,,,,,,,,,,,,,,,84451,,,Thu Jul 19 20:48:53 UTC 2007,,,,,,,,"0|i0jxfr:",114347,,,,,,,,,,,,,,,,,,,"19/Jul/07 20:48;mlawrence;AMQ-1079

I'm seeing the same issue, except only a single SendAsync

2007-07-19 22:40:20,584 [main] INFO  org.apache.activemq.broker.TransportConnector - Connector defaultSSL Started
2007-07-19 22:40:20,584 [main] INFO  org.apache.activemq.broker.BrokerService - ActiveMQ JMS Message Broker (ns-i-jms-m01, ID:ns-i-jms-m01-41598-1184899219647-1:0) started
2007-07-19 22:40:20,598 [main] DEBUG org.apache.xbean.spring.context.ClassPathXmlApplicationContext - Publishing event in context [org.apache.xbean.spring.context.ClassPathXmlApplicationContext;hashCode=26348010]: org.springframework.context.event.ContextRefreshedEvent[source=org.apache.xbean.spring.context.ClassPathXmlApplicationContext: display name [org.apache.xbean.spring.context.ClassPathXmlApplicationContext;hashCode=26348010]; startup date [Thu Jul 19 22:40:19 EDT 2007]; root of context hierarchy]
2007-07-19 22:40:35,014 [ActiveMQ Transport Server: tcp://localhost:61616] DEBUG org.apache.activemq.transport.WireFormatNegotiator - Sending: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, CacheSize=1024, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-07-19 22:40:35,065 [ActiveMQ Transport: tcp:///10.160.160.54:57884] DEBUG org.apache.activemq.transport.WireFormatNegotiator - Received WireFormat: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, CacheSize=1024, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-07-19 22:40:35,065 [ActiveMQ Transport: tcp:///10.160.160.54:57884] DEBUG org.apache.activemq.transport.WireFormatNegotiator - tcp:///10.160.160.54:57884 before negotiation: OpenWireFormat{version=2, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2007-07-19 22:40:35,066 [ActiveMQ Transport: tcp:///10.160.160.54:57884] DEBUG org.apache.activemq.transport.WireFormatNegotiator - tcp:///10.160.160.54:57884 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
2007-07-19 22:40:35,069 [ActiveMQ Transport: tcp:///10.160.160.54:57884] DEBUG org.apache.activemq.broker.TransportConnection - Setting up new connection: org.apache.activemq.broker.jmx.ManagedTransportConnection@d56b37
2007-07-19 22:40:35,086 [ActiveMQ Transport: tcp:///10.160.160.54:57884] DEBUG org.apache.activemq.broker.region.AbstractRegion - Adding destination: topic://ActiveMQ.Advisory.Connection
2007-07-19 22:40:35,102 [ActiveMQ Transport: tcp:///10.160.160.54:57884] DEBUG org.apache.activemq.broker.region.AbstractRegion - Adding destination: topic://ActiveMQ.Advisory.Topic
2007-07-19 22:40:35,111 [ActiveMQ Transport: tcp:///10.160.160.54:57884] INFO  org.apache.activemq.broker.TransportConnection - Slave Broker ns-i-jms-s01 is attached


2007-07-19 22:40:43,998 [ActiveMQ Transport Server: ssl://localhost:443] DEBUG org.apache.activemq.transport.WireFormatNegotiator - Sending: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, CacheSize=1024, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-07-19 22:40:44,228 [ActiveMQ Transport: ssl:///10.160.160.86:3084] DEBUG org.apache.activemq.transport.WireFormatNegotiator - Received WireFormat: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, CacheSize=1024, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-07-19 22:40:44,228 [ActiveMQ Transport: ssl:///10.160.160.86:3084] DEBUG org.apache.activemq.transport.WireFormatNegotiator - ssl:///10.160.160.86:3084 before negotiation: OpenWireFormat{version=2, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2007-07-19 22:40:44,228 [ActiveMQ Transport: ssl:///10.160.160.86:3084] DEBUG org.apache.activemq.transport.WireFormatNegotiator - ssl:///10.160.160.86:3084 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
2007-07-19 22:40:44,232 [ActiveMQ Transport: ssl:///10.160.160.86:3084] DEBUG org.apache.activemq.broker.TransportConnection - Setting up new connection: org.apache.activemq.broker.jmx.ManagedTransportConnection@173ec72
2007-07-19 22:40:44,283 [ActiveMQ Transport: ssl:///10.160.160.86:3084] DEBUG org.apache.activemq.broker.region.AbstractRegion - Adding consumer: ID:lawrence-dt-2181-1184873519591-0:0:-1:1
2007-07-19 22:40:54,878 [ActiveMQ Transport: ssl:///10.160.160.86:3084] DEBUG org.apache.activemq.broker.region.AbstractRegion - Adding destination: topic://ActiveMQ.Advisory.Producer.Queue.Nsirad.DICOM.Images


2007-07-19 22:40:55,211 [ActiveMQ Transport: ssl:///10.160.160.86:3084] ERROR org.apache.activemq.broker.ft.MasterBroker - Slave Failed
java.lang.AssertionError: Unsupported Method
	at org.apache.activemq.transport.TransportSupport.request(TransportSupport.java:71)
	at org.apache.activemq.transport.TransportFilter.request(TransportFilter.java:88)
	at org.apache.activemq.transport.TransportFilter.request(TransportFilter.java:88)
	at org.apache.activemq.transport.MutexTransport.request(MutexTransport.java:54)
	at org.apache.activemq.broker.ft.MasterBroker.sendSyncToSlave(MasterBroker.java:363)
	at org.apache.activemq.broker.ft.MasterBroker.sendToSlave(MasterBroker.java:333)
	at org.apache.activemq.broker.ft.MasterBroker.send(MasterBroker.java:307)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:498)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:604)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
	at java.lang.Thread.run(Thread.java:595)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
got an exception when running AMQStackOverFlowTest which causes the test suite to hang!,AMQ-1291,12481966,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,jstrachan,jstrachan,22/Jun/07 15:56,11/Jul/07 08:37,30/Jan/20 16:57,11/Jul/07 08:37,,,,,,,5.0.0,,,Broker,,,,0," Running org.apache.activemq.usecases.AMQStackOverFlowTest
22-Jun-2007 15:45:48 	Exception in thread ""ActiveMQ Task"" java.util.ConcurrentModificationException
22-Jun-2007 15:45:48 	        at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:617)
22-Jun-2007 15:45:48 	        at java.util.LinkedList$ListItr.next(LinkedList.java:552)
22-Jun-2007 15:45:48 	        at org.apache.activemq.memory.UsageManager.fireEvent(UsageManager.java:330)
22-Jun-2007 15:45:48 	        at org.apache.activemq.memory.UsageManager.setPercentUsage(UsageManager.java:312)
22-Jun-2007 15:45:48 	        at org.apache.activemq.memory.UsageManager.decreaseUsage(UsageManager.java:172)
22-Jun-2007 15:45:48 	        at org.apache.activemq.memory.UsageManager.decreaseUsage(UsageManager.java:166)
22-Jun-2007 15:45:48 	        at org.apache.activemq.command.Message.decrementReferenceCount(Message.java:569)
22-Jun-2007 15:45:48 	        at org.apache.activemq.broker.region.TopicSubscription$2.run(TopicSubscription.java:403)
22-Jun-2007 15:45:48 	        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:774)
22-Jun-2007 15:45:48 	        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:805)
22-Jun-2007 15:45:48 	        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:115)
22-Jun-2007 15:45:48 	        at org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26)
22-Jun-2007 15:45:48 	        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44)
22-Jun-2007 15:45:48 	        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
22-Jun-2007 15:45:48 	        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
22-Jun-2007 15:45:48 	        at java.lang.Thread.run(Thread.java:595) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46279,,,2007-06-22 15:56:54.0,,,,,,,,"0|i0rzpj:",161429,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
transportConnector using multicast,AMQ-944,12481954,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,gabrielk,gabrielk,27/Sep/06 14:41,07/Mar/07 18:39,30/Jan/20 16:57,07/Mar/07 13:04,4.0.1,4.0.2,,,,,5.0.0,,,,,,,0,"It seems that one can nto use multicast in a transportConnector.

Description of the test:
In the distribution, go into /example
Edit the build.xml in order to use multicast. for instance
Change the URL in the build.xml to :
<property name=""url"" value=""multicast://225.0.0.1:61620"" />
Start the producer: ant producer

Here is the output:
    [echo] Running producer against server at $url = multicast://225.0.0.1:61620 for subject $subject = Syntheses
    [java] Connecting to URL: multicast://225.0.0.1:61620
    [java] Publishing a Message with size 1000 to queue: Syntheses
    [java] Using non-durable publishing
    [java] Sleeping between publish 0 ms
    [java] DEBUG MulticastTransport             - Joining multicast address: /225.0.0.1
    [java] DEBUG UdpTransport                   - Consumer thread starting for: multicast://225.0.0.1:61620@0
    [java] DEBUG UdpTransport                   - Sending oneway from: multicast://225.0.0.1:61620@0 to target: /225.0.
0.1:61620 command: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = ID:ZOZMA-2042-1159347487015-0:
0, clientId = ID:ZOZMA-2042-1159347487015-1:0, userName = null, password = null, brokerPath = null, brokerMasterConnecto
r = false, manageable = true}
    [java] DEBUG DefaultReplayBuffer            - Adding command ID: 1 to replay buffer: org.apache.activemq.transport.
reliable.DefaultReplayBuffer@1b3f829 object: [B@698403
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 sending datagram: 1 to: /225.0
.0.1:61620
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 about to process: ConnectionIn
fo {commandId = 1, responseRequired = true, connectionId = ID:ZOZMA-2042-1159347487015-0:0, clientId = ID:ZOZMA-2042-115
9347487015-1:0, userName = null, password = null, brokerPath = null, brokerMasterConnector = false, manageable = true}
    [java] DEBUG ReliableTransport              - Still waiting for response on: multicast://225.0.0.1:61620@0 to comma
nd: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = ID:ZOZMA-2042-1159347487015-0:0, clientId = I
D:ZOZMA-2042-1159347487015-1:0, userName = null, password = null, brokerPath = null, brokerMasterConnector = false, mana
geable = true} sending replay message
    [java] DEBUG UdpTransport                   - Sending oneway from: multicast://225.0.0.1:61620@0 to target: /192.9.
211.39:61620 command: ReplayCommand {commandId = 2, firstNakNumber = 1, lastNakNumber = 1}
    [java] DEBUG DefaultReplayBuffer            - Adding command ID: 2 to replay buffer: org.apache.activemq.transport.
reliable.DefaultReplayBuffer@1b3f829 object: [B@d02b51
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 sending datagram: 2 to: /192.9
.211.39:61620
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 about to process: ReplayComman
d {commandId = 2, firstNakNumber = 1, lastNakNumber = 1}
    [java] DEBUG ReliableTransport              - Processing replay command: ReplayCommand {commandId = 2, firstNakNumb
er = 1, lastNakNumber = 1}
    [java] DEBUG DefaultReplayBuffer            - Buffer: org.apache.activemq.transport.reliable.DefaultReplayBuffer@1b
3f829 replaying messages from: 1 to: 1
*     [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 REDELIVERING datagram: 1 to: /
225.0.0.1:61620*
",A network that supports multicast,bde,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,"02/Feb/07 17:22;bde;AMQ-944.patch;https://issues.apache.org/jira/secure/attachment/12460625/AMQ-944.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-02-02 17:22:46.512,,,false,,,,,,,,,,,,,,,,,84379,,,Wed Mar 07 18:39:14 UTC 2007,,,,,,,,"0|i0rzon:",161425,,,,,,,,,,,,,,,,,,,"02/Feb/07 17:22;bde;I patched this against the 4.0.1 version.  AMQ was ignoring any multicast URI other than the ""multicast://default"" one.","02/Feb/07 20:03;bde;This also appears to affect 4.1.0.","07/Mar/07 13:04;jstrachan;patch applied with thanks!","07/Mar/07 18:39;jstrachan;Actually I just rolled back the patch as it was breaking some things; folks are used to using the URI like this...

{code}
mutlicast://group-name
{code}

if you want to override the discoveryURI then use

{code}
mutlicast://group-name?discoveryURI=someURI
{code}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"java.lang.ClassCastException: org.apache.activemq.ActiveMQConnectionConsumer, when trying to publish to a topic",AMQ-1189,12481935,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,chirino,ananner,ananner,06/Mar/07 19:56,07/Mar/07 16:15,30/Jan/20 16:57,07/Mar/07 16:04,4.1.0,,,,,,4.1.1,5.0.0,,,,,,0,"When publishing to a topic, a ClassCastException occurs:

----
Caused by: java.lang.ClassCastException: org.apache.activemq.ActiveMQConnectionConsumer
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:810)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:769)
	at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:360)
	at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:83)
	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:51)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:417)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:264)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:292)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:385)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:193)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:98)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:497)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:604)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
	at org.apache.activemq.transport.vm.VMTransport.syncOneWay(VMTransport.java:96)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:83)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:69)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:74)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1175)
	... 7 more
----

The problem seems to stem in the processDispatch() method of the org.apache.activemq.broker.TransportConnection class.  Specifically, it happens during the line:

Runnable sub=(Runnable) md.getConsumer();

It doesn't appear that ActiveMQConnectionConsumer implements the Runnable interface, so this is why the ClassCastException occurs.",Windows XP SP2,ananner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-07 16:04:26.34,,,false,,,,,,,,,,,,,,,,,84467,,,Wed Mar 07 16:15:58 UTC 2007,,,,,,,,"0|i0rzof:",161424,Regression,,,,,,,,,,,,,,,,,,"07/Mar/07 16:04;jstrachan;Issue fixed, many thanks.

Incidentally there was some background discussion on this here: http://www.nabble.com/question-on-AMQ-1189-and-TransportConnection---ActiveMQConnectionConsumer-tf3361343s2354.html","07/Mar/07 16:08;jstrachan;4.2 rev: 515524
4.1 rev: 515622","07/Mar/07 16:15;chirino;Fixed in rev 515625 in trunk and in rev 515631 in 4.1 branch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring AspectJ autoproxying breaks ActiveMQManagedConnectionFactory injection,AMQ-1147,12481886,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,cgs,cgs,02/Feb/07 05:32,07/Mar/07 14:11,30/Jan/20 16:57,07/Mar/07 14:11,4.1.0,,,,,,5.0.0,,,,,,,0,"The cast to the concrete class at ActiveMQManagedConnectionFactory:50 fails:

    public void setResourceAdapter(ResourceAdapter adapter) throws ResourceException {
        this.adapter = (ActiveMQResourceAdapter) adapter;

org.springframework.beans.TypeMismatchException: Failed to convert property value of type [$Proxy63] to required type [javax.resource.spi.ResourceAdapter] for property 'resourceAdapter'; nested exception is java.lang.ClassCastException: $Proxy63 cannot be cast to org.apache.activemq.ra.ActiveMQResourceAdapter
Caused by: java.lang.ClassCastException: $Proxy63 cannot be cast to org.apache.activemq.ra.ActiveMQResourceAdapter
    at org.apache.activemq.ra.ActiveMQManagedConnectionFactory.setResourceAdapter(ActiveMQManagedConnectionFactory.java:50)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:786)
[...]

Spring (2.0.3 build 66) config:

	<aop:aspectj-autoproxy />

	<aop:spring-configured />

	<bean id=""jms.managedConnectionFactory"" class=""org.apache.activemq.ra.ActiveMQManagedConnectionFactory"">
		<property name=""resourceAdapter"">
			<ref local=""jms.resourceAdapter"" />
		</property>
	</bean>

	<bean id=""jms.resourceAdapter"" class=""org.apache.activemq.ra.ActiveMQResourceAdapter"">
		<property name=""serverUrl"">
			<value>${amq.serverUrl}</value>
		</property>
	</bean>

There's probably a workaround for this, but it's still annoying.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Feb/07 14:22;cgs;AMQ-1147.patch;https://issues.apache.org/jira/secure/attachment/12460822/AMQ-1147.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-03-07 14:11:33.839,,,false,,,,,,,,,,,,,,,,,84480,,,Wed Mar 07 14:11:33 UTC 2007,,,,,,,,"0|i0rzpz:",161431,,,,,,,,,,,,,,,,,,,"02/Feb/07 14:22;cgs;This patch takes care of the issue.  It's really messy because I had to add Javadocs all over to get Eclipse to compile the files.  ( My project settings require Javadocs, comments in empty blocks, no unnecessary else blocks, etc., but I was too tired to change them.)  Here's basically what I had to do:

* Extract interfaces for ActiveMQActivationSpec and ActiveMQResourceAdapter
* AMQRAImpl: Fix a couple AMQActivationSpec  equality checks
* AMQRAImpl: Use method calls on the AMQRA interface instead of field access in equals
* AMQMCF: Added instanceof check in setResourceAdapter
","07/Mar/07 14:11;jstrachan;Patch applied with thanks! I made a minor change to keep the implementation class names of the activation spec & resource adapter the same - to avoid breaking anyones RA/RAR configurations - so called the 2 interfaces MessageActivationSpec and MessageResourceAdapter (not the worlds best names, but I'd rather avoid breaking things)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ 4.1 has crept in some Java 5 APIs, which prevent it from being used on Java 1.4 JVMs",AMQ-1185,12481965,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,jdillon,jdillon,01/Mar/07 22:47,03/Mar/07 22:24,30/Jan/20 16:57,03/Mar/07 22:24,4.1.1,,,,,,4.1.1,,,,,,,0,"A few bits of Java 5 API has made it into the AMQ 4.1 branch, which prevent 4.1 from being used on Java 1.4 JVMS.

Apache Geronimo v1.2 needs AMQ 4.1 running on Java 1.4.

So far I don't see anything major which prevents AMQ 4.1 from being compiled with Java 1.4... only a few minor changes to keep compatibility.  The alternative is of course to use the retrotranslator-maven-plugin to generate 1.4 compatible jars for each module (the new retrotranslator:translate-project makes this very easy to use, includes attaching jdk14 artifacts).

But IMO, that would just add more complexity for AMQ 4.1 when only a few simple changes will allow the it to be native 1.4... though you folks might consider using retrotranslator:translate-project for trunk to create 1.4 compatible jars for the new AMQ (> 4.1.x) bits.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/07 08:42;jdillon;AMQ-1185-2.diff;https://issues.apache.org/jira/secure/attachment/12461058/AMQ-1185-2.diff","02/Mar/07 08:41;jdillon;AMQ-1185-activeio-retro.diff;https://issues.apache.org/jira/secure/attachment/12461021/AMQ-1185-activeio-retro.diff","01/Mar/07 23:01;jdillon;AMQ-1185.diff;https://issues.apache.org/jira/secure/attachment/12460913/AMQ-1185.diff",,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,45258,,,Sat Mar 03 22:24:13 UTC 2007,,,,,,,,"0|i0ts73:",171877,,,,,,,,,,,,,,,,,,,"01/Mar/07 23:01;jdillon;Patch allows branches/activemq-4.1 to be built using JDK 1.4","02/Mar/07 03:59;jdillon;Ugh... appears there are a bunch of test failures with the above... though very hard to find them due to all of the output from the tests :-(

But they are failing with things like:

{noformat}
Test set: org.apache.activemq.spring.SpringTest
-------------------------------------------------------------------------------
Tests run: 5, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 11.035 sec <<< FAILURE!
testSenderWithSpringXml(org.apache.activemq.spring.SpringTest)  Time elapsed: 0.58 sec  <<< ERROR!
java.lang.NoClassDefFoundError: java/util/concurrent/ExecutionException
        at org.apache.activemq.store.DefaultPersistenceAdapterFactory.createJournal(DefaultPersistenceAdapterFactory.java:224)
        at org.apache.activemq.store.DefaultPersistenceAdapterFactory.getJournal(DefaultPersistenceAdapterFactory.java:132)
        at org.apache.activemq.store.DefaultPersistenceAdapterFactory.createPersistenceAdapter(DefaultPersistenceAdapterFactory.java:70)
        at org.apache.activemq.broker.BrokerService.createPersistenceAdapter(BrokerService.java:1320)
        at org.apache.activemq.broker.BrokerService.getPersistenceAdapter(BrokerService.java:631)
        at org.apache.activemq.broker.BrokerService.deleteAllMessages(BrokerService.java:888)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:387)
        at org.apache.activemq.transport.vm.VMTransportFactory.doCompositeConnect(VMTransportFactory.java:113)
        at org.apache.activemq.transport.vm.VMTransportFactory.doConnect(VMTransportFactory.java:52)
        at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:43)
        at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:77)
        at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:230)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:245)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:214)
        at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:161)
        at org.apache.activemq.spring.SpringConsumer.start(SpringConsumer.java:49)
        at org.apache.activemq.spring.SpringTest.assertSenderConfig(SpringTest.java:154)
        at org.apache.activemq.spring.SpringTest.testSenderWithSpringXml(SpringTest.java:91)
{noformat}

Which shows there is more Java 5 stuff lingering around... perhaps in some other dependency?","02/Mar/07 04:05;jdillon;Crap, crap, crap... there is a *ton* of Java 5 bits in activeio 3.1-SNAPSHOT, which ActiveMQ is using.

I missed this before, as I was still compiling with JDK 1.5, but set the compiler to generate 1.4 classes.  But, when compiling activeio with JDK 1.4 it pukes up a bunch more stuff.

Perhaps activeio 3.1 needs to be retrotranslated so that activemq 4.1 can use -jdk14 versions of this... pffff.","02/Mar/07 08:49;jdillon;I updated activeio/trunk to use the latest retrotranslator-maven-plugin's translate-project to make jdk14 versions of activeio (in the AMQ-1185-activeio-retro.diff patch).  And then I updated activemq/branches/activemq-4.1 to use the jdk14 jars (via classifier) plus a few other changes for compilation with JDK 1.4 (in the AMQ-1185-2.diff patch).  Re-ran the tests for activemq-core and _almost_ everything passed... 

{noformat}
Tests run: 1488, Failures: 0, Errors: 2, Skipped: 0
{noformat}

2 Errors were in:

 * {{org.apache.activemq.broker.region.cursors.KahaCursorDurableTest}}

With errors like:

{noformat}
java.io.IOException: Bad file descriptor
	at sun.nio.ch.FileChannelImpl.release0(Native Method)
	at sun.nio.ch.FileChannelImpl.implCloseChannel(FileChannelImpl.java:105)
	at java.nio.channels.spi.AbstractInterruptibleChannel.close(AbstractInterruptibleChannel.java:97)
	at java.io.RandomAccessFile.close(RandomAccessFile.java:523)
	at org.apache.activemq.kaha.impl.index.IndexManager.delete(IndexManager.java:119)
	at org.apache.activemq.kaha.impl.KahaStore.delete(KahaStore.java:137)
	at org.apache.activemq.store.kahadaptor.KahaPersistenceAdapter.deleteAllMessages(KahaPersistenceAdapter.java:164)
	at org.apache.activemq.broker.BrokerService.deleteAllMessages(BrokerService.java:888)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:387)
	at org.apache.activemq.broker.region.cursors.CursorDurableTest.createBroker(CursorDurableTest.java:212)
	at org.apache.activemq.broker.region.cursors.CursorDurableTest.setUp(CursorDurableTest.java:183)
	at junit.framework.TestCase.runBare(TestCase.java:125)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743)
{noformat}

Not sure, but this might have been due to not cleaning up the {{activemq-data}} directory (which really should by the way, be put into the target/ dir for testing, so that killing all target dirs will clean up all state).

I'm going to nuke everything... ugh... annoying that you folks have {{svn:ignore}} set to ignore {{activemq-data}} (as well as a bunch of other stuff)... so it makes it rather hard to use {{svn status}} to determine what is junk state outside of the target dir.  I suppose I will have to {{svn co ...}} again and re-apply the patches.","03/Mar/07 06:06;jdillon;It looks better now... though something else has popped up in the G 1.2 branch which is causing some major problems which prevent me from verifying that the current AMQ 4.1-SNAPSHOT resolves the spec compliance issues.  Hopefully we'll have that sorted out soonish. :-(","03/Mar/07 22:24;jdillon;Okay... we are good now... spec compliance problems are gone with the latest 4.1-SNAPSHOT of AMQ.

Hopefully 4.1.1 will be on its way to a friendly neighborhood maven repo soon :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kaha DB hangs on restart,AMQ-1121,12481968,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,vpesochi,vpesochi,06/Jan/07 02:05,01/Mar/07 19:25,30/Jan/20 16:57,01/Mar/07 19:25,4.1.0,,,,,,5.0.0,,,Message Store,,,,1,"I run a bunch or messages through AMQ, then restarted AMQ and it hangs. Following are the last messages that I see. AMQ is not listening on the configured port.

2007-01-06 01:35:29,723 [main           ] DEBUG DataManager                    - End of data file reached at (header was invalid): offset = 810, file = 1, size = 219
2007-01-06 01:35:29,754 [JMX connector  ] INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:11099/jmxrmi
2007-01-06 01:35:32,660 [main           ] DEBUG DataManager                    - End of data file reached at (header was invalid): offset = 88244949, file = 5, size = 100856","Windows XP, NetApp",a.reiter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-01-07 10:09:39.188,,,false,,,,,,,,,,,,,,,,,84487,,,Thu Mar 01 19:25:14 UTC 2007,,,,,,,,"0|i0rzov:",161426,,,,,,,,,,,,,,,,,,,"07/Jan/07 10:09;rajdavies;could you provide a test case ?","08/Jan/07 18:24;vpesochi;There are about 30 parties doing concurrent request / response messaging for about 20 minutes. At the end I stop AMQ and I get that error on restart. You just need to do more concurrent testing. It does not happen if I configure Journal JDBC with Derby. I am sorry I cannot write unit test at the moment.","11/Jan/07 18:22;homer@nwlight.com;I have run into a similar issue where AMQ gets hung on restart.  In my case, the KahaStore is stuck in an infinite loop because it finds two IndexItem objects from the file that point to each other.  It's a potential show stopper because there is no way to recover the data in the queue.

Here's a dump of the object variables from Eclipse:

item	IndexItem  (id=212)	

	active	false	

	keyFile	1	

	keyOffset	153495	

	keySize	61	

	next	null	

	nextItem	612	

	offset	765	

	prev	null	

	previousItem	51	

	valueFile	1	

	valueOffset	153561	

	valueSize	468	



item	IndexItem  (id=240)	

	active	false	

	keyFile	1	

	keyOffset	114687	

	keySize	61	

	next	null	

	nextItem	765	

	offset	612	

	prev	null	

	previousItem	51	

	valueFile	1	

	valueOffset	114753	

	valueSize	468	

","01/Mar/07 19:25;rajdavies;Fixed by SVN revision 513455",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Error when doing a ""mvn site"" in activemq-core",AMQ-1087,12481907,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,foconer,foconer,foconer,05/Dec/06 06:34,26/Feb/07 18:32,30/Jan/20 16:57,26/Feb/07 18:32,,,,,,,,,,,,,,1,"When doing a site build on activemq-core, the error is thrown.

[INFO] Generate ""Source Xref"" report.
Unable to processPath D:\logicblaze\working-source\activemq\activemq-core\src\main\java\org\apache\activemq\kaha\impl\data\WriteKey.java => D:\logicblaze\workin
g-source\activemq\activemq-core\target/site/xref\org\apache\activemq\kaha\impl\data\WriteKey.html
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] null
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.NullPointerException
        at org.apache.maven.jxr.JavaCodeTransform.getHeader(JavaCodeTransform.java:651)
        at org.apache.maven.jxr.JavaCodeTransform.transform(JavaCodeTransform.java:716)
        at org.apache.maven.jxr.JavaCodeTransform.transform(JavaCodeTransform.java:787)
        at org.apache.maven.jxr.JXR.transform(JXR.java:195)
        at org.apache.maven.jxr.JXR.processPath(JXR.java:114)
        at org.apache.maven.jxr.JXR.xref(JXR.java:335)
        at org.apache.maven.plugin.jxr.AbstractJxrReport.createXref(AbstractJxrReport.java:226)
        at org.apache.maven.plugin.jxr.AbstractJxrReport.executeReport(AbstractJxrReport.java:352)
        at org.apache.maven.reporting.AbstractMavenReport.generate(AbstractMavenReport.java:101)
        at org.apache.maven.plugins.site.ReportDocumentRenderer.renderDocument(ReportDocumentRenderer.java:67)
        at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.renderModule(DefaultSiteRenderer.java:239)
        at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.render(DefaultSiteRenderer.java:115)
        at org.apache.maven.plugins.site.SiteMojo.renderLocale(SiteMojo.java:124)
        at org.apache.maven.plugins.site.SiteMojo.execute(SiteMojo.java:92)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLi",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95674,,,Tue Dec 05 06:36:04 UTC 2006,,,,,,,,"0|i0rzrj:",161438,,,,,,,,,,,,,,,,,,,"05/Dec/06 06:36;foconer;It looks like that the java file org.apache.activemq.kaha.impl.data.WriteKey is an incomplete java class file. It only contains the following code.

""
package org.apache.activemq.kaha.impl.data;

import org.apache.activemq.kaha.StoreLocation;

""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Openwire client hangs after receiving 999 messages,AMQ-721,12481878,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,vincent.boilay,vincent.boilay,23/May/06 21:53,26/Feb/07 18:31,30/Jan/20 16:57,26/Feb/07 18:25,4.0,,,,,,4.1.1,,,JMS client,,,,2,"Openwire client hangs after receiving 999 messages
changing Session.Prefetch postpone the  problem...

Current code is :
   public class Session : ISession
    {
       :
       :
        private int prefetchSize = 1000;

this block at message #999

changing         private int prefetchSize = 2000 ==>  blocks at message #1999
",".NET 2.0 ,C# + trunk",feldrax,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-13 03:20:21.0,,,false,,,,,,,,,,,,,,,,,84349,,,Mon Feb 26 18:31:02 UTC 2007,,,,,,,,"0|i0rzo7:",161423,,,,,,,,,,,,,,,,,,,"13/Jun/06 03:20;chirino;Hi Vincent,

Could you submit a simple nunit test case showing this problem?","20/Jun/06 03:57;feldrax;I also had the same problem, but I was able to put together a hack that gets around this problem.  I don't recommend this as the solution going forward, but it appears to work on my test cases (which failed before I implemented it).  

First we need to change the dotNet dll client classes.
in class IMessageConsumer, add a new function:

IMessage AutoAcknowledge(IMessage message);

in class MessageConsumer, make AutoAcknowledge public rather then protected.

Then, create your dll.

Now, in your test app do the following:

Let's assume you've created a consumer called ""consumer"" and have defined the following:
consumer.Listener += new MessageListener(onMessage);

set up the listener function as follows:
public void onMessage(IMessage message)
{
     If (consumer != null) //just a good idea to check
         consumer.AutoAcknowledge(message);
     // whatever you want to do with your message goes here... I've just put a Console.WriteLine here, but do whatever you want here
    Console.WriteLine(""got Message:  "" + ((ActiveMQTextMessage)message).Text);
}

This isn't an ideal solution, because it requires the MessageListener to call AutoAcknowledge, but it seems to work.  I hope this helps folks who are trying to do this!

Jamie","20/Jun/06 04:01;feldrax;Oh, sorry, one more thing.  Make sure you're connecting with tcp://localhost:61616?jms.optimizeAcknowledge=false  (the jms.optimizeAcknowledge=false being the important part of that, at least until 4.0.1 is out which defaults to this)","23/Jun/06 06:33;hellweek;I also have been dealing with this issue.

While I dont know if this is the correct solution (Dont know the code well enough yet) however, it did fix the issue for me.

Th eonly change I made was to MessageConsumer::DispatchAsyncMessages I added a call to AutoAcknowledge.  This allowed me to get past the 1000 message Limit
[code]
public void DispatchAsyncMessages()
        {
            while (Listener != null)
            {
                IMessage message = dispatcher.DequeueNoWait();
                if (message != null)
                {
                    Listener(message);
                   **AutoAcknowledge(message);**
                }
                else
                {
                    break;
                }
            }
        }
[/code]","29/Jun/06 19:32;hellweek;This issue has been outstanding for some time.   While I could use another Language to allow me to use ActiveMQ it is not the prefered language.  As such I will not be able to use an ActiveMQ as a solution. 

Some input or some type of acknowledgment that this issue is being addressed would be fantastic,
","26/Feb/07 18:31;vincent.boilay;Thank you for your mail, please note Swapstream email addresses have changed from .net to .com please can you amend your address book.



Thanks 



Swapstream
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sending messages to a topic with an inactive durable subscription will hang producers,AMQ-845,12481792,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,cmihaly,cmihaly,25/Jul/06 16:37,22/Jan/07 21:14,30/Jan/20 16:57,24/Nov/06 20:01,4.0.1,,,,,,5.0.0,,,Broker,,,,2,"If you have a durable subsciber that is not on-line, and you have producers sending message, eventually the server will hang on that topic.

I have attached a zip file with a junit test case and my activemq configuration.  The test case has two tests, one that creates a durable subscription, that will succeed, and a second that starts publishing up to 100000 events, which will hang.  I don't really know how to interrupt the all, so the test case never finishes.  Anyway, it does show the problem and is 100% repeatable on my system.

The config file is set to use a SQLServer database, but the stock journal or a derby persistence manager will do the same thing.  I just switched to mssql server because I can then see what is going on in the database.  And records are being added to the database all the way up to when the server hangs. I also doubled the memory manager limit and moved the jmx rmi port to 1080 since I have another server running at 1099.

","Linux Red Hat Enterprise 4
java jdk 1.4.2-b28  (or 1.5.0_06-b05)
",priyapp,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/06 16:37;cmihaly;ASF.LICENSE.NOT.GRANTED--testcase.zip;https://issues.apache.org/jira/secure/attachment/12460677/ASF.LICENSE.NOT.GRANTED--testcase.zip","22/Jan/07 21:14;kaitchuc;patch.txt;https://issues.apache.org/jira/secure/attachment/12460851/patch.txt",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-08-29 08:13:38.0,,,false,,,,,,,,,,,,,,,,,84397,,,Mon Jan 22 21:14:41 UTC 2007,,,,,,,,"0|i0rznz:",161422,,,,,,,,,,,,,,,,,,,"29/Aug/06 08:13;ghostganz;If you give it a higher memory limit it will accept a few more messages before blocking the producer. It seems to keep stuff in memory, making it very limited in the queue depths it can handle.

We're also completely blocked by this, since our application requires large pending queues.
","03/Sep/06 17:37;rajdavies;currently working a solution to this","20/Oct/06 15:35;priyapp;Hi,

Could you please let me know what is the ETA for a fix for this ?

Thanks,
Priya","24/Nov/06 20:01;rajdavies;Use optional Store cursor to page messages into the broker from the persistent store
SVN revision 478967.","22/Jan/07 21:14;kaitchuc;I ment to add this file a while back and forgot, so it may be a little out of date, but it is a much better solution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in PrefetchSubscription,AMQ-1108,12481913,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rajdavies,rajdavies,rajdavies,23/Dec/06 12:51,24/Dec/06 08:58,30/Jan/20 16:57,24/Dec/06 08:58,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"see: http://www.nabble.com/Another-deadlock-showing-up-tf2874106.html#a8033006

The deadlock is as follows:

Found one Java-level deadlock:
=============================
""ActiveMQ Task"":
  waiting to lock monitor 0x080e4f3c (object 0x92b60db0, a
java.util.LinkedList),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:37496""
""ActiveMQ Transport: tcp:///127.0.0.1:37496"":
  waiting to lock monitor 0x080e4f7c (object 0x92b60d98, a
org.apache.activemq.broker.region.cursors.VMPendingMessageCursor),
  which is held by ""ActiveMQ Task""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Task"":
        at
org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:414)
        - waiting to lock <0x92b60db0> (a java.util.LinkedList)
        at
org.apache.activemq.broker.region.QueueSubscription.dispatch(QueueSubscription.java:172)
        at
org.apache.activemq.broker.region.PrefetchSubscription.dispatchMatched(PrefetchSubscription.java:397)
        - locked <0x92b60d98> (a
org.apache.activemq.broker.region.cursors.VMPendingMessageCursor)
        at
org.apache.activemq.broker.region.PrefetchSubscription.onDispatch(PrefetchSubscription.java:451)
        at
org.apache.activemq.broker.region.QueueSubscription.onDispatch(QueueSubscription.java:192)
        at
org.apache.activemq.broker.region.PrefetchSubscription$3.run(PrefetchSubscription.java:429)
        at
org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:778)
        at
org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:791)
        at
org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:111)
        at
org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26)
        at
org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44)
        at
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)
""ActiveMQ Transport: tcp:///127.0.0.1:37496"":
        at
org.apache.activemq.broker.region.PrefetchSubscription.dispatchMatched(PrefetchSubscription.java:383)
        - waiting to lock <0x92b60d98> (a
org.apache.activemq.broker.region.cursors.VMPendingMessageCursor)
        at
org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:219)
        - locked <0x92b60db0> (a java.util.LinkedList)
        at
org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:299)
        at
org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:397)
        at
org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:177)
        at
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at
org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:88)
        at
org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:491)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:179)
        at
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:287)
        at
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
        at
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)

Found 1 deadlock.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84721,,,Sun Dec 24 08:58:56 UTC 2006,,,,,,,,"0|i0rzpr:",161430,,,,,,,,,,,,,,,,,,,"24/Dec/06 08:58;rajdavies;This is fixed by revision 490007.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages Sent by JMS that contain header properties cause error when STOMP client registers a Subscriber,AMQ-725,12481708,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,chirino,wrpkm,wrpkm,26/May/06 02:17,08/Nov/06 23:58,30/Jan/20 16:57,03/Jul/06 00:00,4.0,,,,,,4.1.0,,,Transport,,,,0,"I am using the lastest 4.0 release build of ActiveMQ and I have been trying to produce messages in a JMS client and receive the messages in a STOMP client.

What I have found is that if the JMS Client adds header properties to the message to be delivered to ActiveMQ then when I subscribe with the STOMP client I am receiving the Error listed below.  If I remove all header properties then the message is transmitted correctly.  I have also found that if I send messages with a STOMP client that has header properties then everything works correctly.

java.lang.NullPointerException
at java.util.Hashtable.put(Unknown Source)
at java.util.Hashtable.putAll(Unknown Source)
at org.apache.activemq.transport.stomp.FrameBuilder.addHeaders(FrameBuilder.java:65)
at org.apache.activemq.transport.stomp.Subscription.receive(Subscription.java:76)
at org.apache.activemq.transport.stomp.StompWireFormat.writeCommand(StompWireFormat.java:154)
at org.apache.activemq.transport.stomp.StompWireFormat.marshal(StompWireFormat.java:305)
at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:124)
at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:211)
at org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:581)
at org.apache.activemq.broker.AbstractConnection.iterate(AbstractConnection.java:597)
at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:87)
at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

",Running on WinXP with Sun JDK1.5.0_06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-15 08:06:19.0,,,false,,,,,,,,,,,,,,,,,84347,,,Wed Nov 08 23:58:03 UTC 2006,,,,,,,,"0|i0rzp3:",161427,,,,,,,,,,,,,,,,,,,"15/Jun/06 08:06;chirino;Lets try to get this fix for the next release.","02/Jul/06 07:45;wrpkm;I have tested this with the new 4.01 release of ActiveMQ using the default configuration file and I am still having the problem.

After performing a TCP connections to the Broker on the listener defined as tcp://wrpkmnb:61613?wireFormat=stomp:

I transmit the connection message:

CONNECT\010login:billm\010passcode:billm\010client-id:webProcessor\010\010\000

After which I receive the message:

CONNECTED\010session:webProcessor\010\010\000\010

I then try to subscribe to a queue:

SUBSCRIBE\010destination:/queue/WebRequest\010id:webProcessorconsumer:2\010ack:client\010activemq.prefetchSize:1\010\010\000

And no response is returned from the Broker but the log shows the following message.

Exception in thread ""ActiveMQ Connection Dispatcher: 28939486"" java.lang.NullPointerException
    at java.util.Hashtable.put(Unknown Source)
    at java.util.Hashtable.putAll(Unknown Source)
    at org.apache.activemq.transport.stomp.FrameBuilder.addHeaders(FrameBuilder.java:65)
    at org.apache.activemq.transport.stomp.Subscription.receive(Subscription.java:76)
    at org.apache.activemq.transport.stomp.StompWireFormat.writeCommand(StompWireFormat.java:154)
    at org.apache.activemq.transport.stomp.StompWireFormat.marshal(StompWireFormat.java:305)
    at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:124)
    at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
    at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:211)
    at org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:581)
    at org.apache.activemq.broker.AbstractConnection.iterate(AbstractConnection.java:597)
    at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:87)
    at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
    at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

For readability I have replaced the linefeeds with \010 and the nulls with \000 representations.","03/Jul/06 00:00;chirino;I just tested against 4.1-SNAPSHOT and this is working.","08/Nov/06 23:58;wrpkm;
   [[ Old comment, sent by email on Tue, 20 Jun 2006 19:17:14 +0000 ]]

Hiram,

Sorry for the delay in responding, I have been out of the country.

I will put together a test case, in the next day or so, showing the data 
transmitted to and from the broker as I am not using the standard Stomp 
clients, I have implemented a Stomp client in the Progress 4GL programming 
language.

William MacDonald
Ontario, Canada

","08/Nov/06 23:58;wrpkm;
   [[ Old comment, sent by email on Sat, 01 Jul 2006 20:53:00 -0400 ]]

I have tested this with the new 4.01 release of ActiveMQ using the
default configuration file and I am still having the problem.

After performing a TCP connections to the Broker on the listener defined
as tcp://wrpkmnb:61613?wireFormat=stomp:

I transmit the connection message:

*CONNECT\010login:billm\010passcode:billm\010client-id:webProcessor\010\010\000*

After which I receive the message:
*
CONNECTED\010session:webProcessor\010\010\000\010*

I then try to subscribe to a queue:

*SUBSCRIBE\010destination:/queue/WebRequest\010id:webProcessorconsumer:2\010ack:client\010activemq.prefetchSize:1\010\010\000*

And no response is returned from the Broker but the log shows the
following message.

*Exception in thread ""ActiveMQ Connection Dispatcher: 28939486""
java.lang.NullPointerException
    at java.util.Hashtable.put(Unknown Source)
    at java.util.Hashtable.putAll(Unknown Source)
    at
org.apache.activemq.transport.stomp.FrameBuilder.addHeaders(FrameBuilder.java:65)
    at
org.apache.activemq.transport.stomp.Subscription.receive(Subscription.java:76)
    at
org.apache.activemq.transport.stomp.StompWireFormat.writeCommand(StompWireFormat.java:154)
    at
org.apache.activemq.transport.stomp.StompWireFormat.marshal(StompWireFormat.java:305)
    at
org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:124)
    at
org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
    at
org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
    at
org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
    at
org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:211)
    at
org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:581)
    at
org.apache.activemq.broker.AbstractConnection.iterate(AbstractConnection.java:597)
    at
org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:87)
    at
org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
    at
org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)*

For readability I have replaced the linefeeds with \010 and the nulls
with \000 representations.

William


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix the uberjar to tidy up the notice/license files to make it absolutely clear whats going on,AMQ-752,12481653,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,jstrachan,jstrachan,13/Jun/06 15:35,15/Jun/06 21:28,30/Jan/20 16:57,15/Jun/06 21:28,,,,,,,4.0.1,4.1.0,,,,,,0,"all the various LICENSEs need to be appended into a single LICENSE and the notices consolidated.

Also we might want to...

* the MANIFEST lacks a Implementation-Vendor-Id. not reported harmful but is
in the spec. suggested value: org.apache.

* the MANIFEST lacks a Specification-Version but has an
Implementation-Version. suggested value 4.0.

* better if the source extracts into a directory with a different name from
the binary distribution. for example, incubator-activemq-src for the source
and incubator-activemq for the binary (say.

* i would prefer the binaries and distributions names to contain apache. for
example apache-incubator-activemq.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-14 04:31:04.0,,,false,,,,,,,,,,,,,,,,,92703,,,Thu Jun 15 21:28:15 UTC 2006,,,,,,,,"0|i0rzrb:",161437,,,,,,,,,,,,,,,,,,,"14/Jun/06 04:31;robertburrelldonkin;Uber jar licensing seems like a thorny issue to me and probably one that's quite a bit bigger than just ActiveMQ. Once I find some time, I should raise this on legal, write up some documentation in the release and then talk to the maveneers. If I don't before you're next release, please feel free to kick me (gently).","15/Jun/06 21:14;chirino;I've changed the build so that NOTICE and LICENSE files do not overwrite one another anymore.  Those files are moved
the the META-INF/${jar-name/ directory before we extract the next jar into the uber jar.  So it's now possible to look at the original LICENSE, DISCLAIMER,NOTICE, and COPYRIGHT files that were include in each jar of the uber jar.

Please let me know if that's still does not meet the requirements.","15/Jun/06 21:21;chirino;I updated the project name to apache-incubator-activemq so that distributions include the apache in it.  Fixing the issues with the META-INF and the having the src distro extract to directory with -src on it, I think will involve getting some help from the maven team.","15/Jun/06 21:28;chirino;Applied changes to 4.1 and partially to 4.0... I think changing the module name on a big fix release would be in bad form.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 4   exception with with DB2,AMQ-679,12481396,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,klate,klate,06/Apr/06 22:54,25/Apr/06 18:46,30/Jan/20 16:57,20/Apr/06 18:28,4.0 RC2,,,,,,4.0 RC3,,,Message Store,,,,0,"If start broker  i get this message:

WARNING: Database driver NOT recognized: 
[ibm_db2_jdbc_universal_driver_architecture].  Will use default JDBC 
implementation.

But this seems to be o.k. so far, because after starting the broker, two new 
tables (activemq_msgs/acks) get created. 

Testing a Consumer to receive Messages
the broker throws this exception:

2006-04-05 17:13:03,304 [.168.1.52:52134] 
INFO  Service                        - Sync error occurred: java.io.IOException: Non-atomic batch failure.  The batch was submitted, but at least one exception occurred on an individual member of the batch. Use getNextException() to retrieve the exceptions for specific batched elements.
java.io.IOException: Non-atomic batch failure.  The batch was submitted, but at least one exception occurred on an individual member of the batch. Use getNextException() to retrieve the exceptions for specific batched elements.
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:42)
	at org.apache.activemq.store.jdbc.TransactionContext.close(TransactionContext.java:125)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:73)
	at org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:223)
	at org.apache.activemq.store.memory.MemoryTransactionStore$1.addMessage(MemoryTransactionStore.java:116)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:246)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:196)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:307)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:108)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:120)
	at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:346)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:590)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:196)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:88)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
	at java.lang.Thread.run(Thread.java:570)","IBM Blade JS20 AIX 5.3
DB2 DataBase 8.2
Driver 2.5.33

Configuration:

<jdbcPersistenceAdapter  class=""org.activemq.store.jdbc.adapter.DefaultJDBCAdapter"" dataSource= ""#db2-ds""/>

<bean id=""db2datasource"" class=""org.apache.commons.dbcp.BasicDataSource"">
    <property name=""driverClassName"" value=""com.ibm.db2.jcc.DB2Driver""/>
    <property name=""url"" value=""URL""/>
    <property name=""username"" value=""USER""/>
    <property name=""password"" value=""PASS""/>   
  </bean>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-04-06 23:08:51.0,,,false,,,,,,,,,,,,,,,,,49304,,,Tue Apr 25 18:46:28 UTC 2006,,,,,,,,"0|i0rzpb:",161428,,,,,,,,,,,,,,,,,,,"06/Apr/06 23:08;jstrachan;I've added a first cut at a configuration for your DB driver; so at least we'll recognise it now; it might take a few attempts to get things working properly. I wonder could you try SVN HEAD now - or wait for the new snapshot build tomorrow?

http://cvs.apache.org/repository/incubator-activemq/distributions/","20/Apr/06 14:23;klate;With the new DB2JDBCAdapter    (Snapshot 19.04.2006) it works fine.","20/Apr/06 18:28;jstrachan;Thanks for letting us know its working","25/Apr/06 18:46;klate;In the RC3 Snapshot  I cant*t  find the DB2Adapter.  (incubator-activemq-4.0-RC3.zip    25.04.2006) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Composite Destination persisted messages never get cleaned up, halt message producers",AMQ-674,12481621,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,psmith@apache.org,psmith@apache.org,04/Apr/06 13:01,04/Apr/06 17:18,30/Jan/20 16:57,04/Apr/06 16:04,3.2.1,,,,,,4.0 RC2,,,Broker,Message Store,,,0,"well, we've just got bit by something huge.  

Previously we have been shipping messages from producer to consumer via a named Queue 'Index2.EntityIncrementalIndexer', where the machine index2 has a consumer called ""EntityIncrementalIndexer"" using persisted messages.

The design used Composite destinations so that the destination could be:

""Index1.EntityIncrementalIndexer,Index2.EntityIncrementalIndexer"" 

and have the 2 hosts get sent the same message simply, and if one goes down, it'll catch up later.  This gave us the ability to have a mirrored configuration, and go tertiary later if we want simply by adding a new name in the composite destation.

With a single name, this works great, been working fine for months.  Yesterday we activated the _true_ composite destination, and both machines started getting their messages fine.  

no problems so far, BUT, 12 hours later we have noticed that the broker has now stopped accepting messages, and a look at the activemq_msgs table shows 33228 messages ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-04-04 16:04:47.0,,,false,,,,,,,,,,,,,,,,,49300,,,Tue Apr 04 17:18:53 UTC 2006,,,,,,,,"0|i0rznj:",161420,,,,,,,,,,,,,,,,,,,"04/Apr/06 13:03;psmith@apache.org;hmm, it snipped my SQL

select container, count(*) from activemq_msgs group by container

Index2.EntityIncrementalIndexer                                                                                                                                                                                                                            6
Index2.EntityIncrementalIndexer,Index1.EntityIncrementalIndexer                                                                                                                                                                                            33228


activemq.log:

14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  memory limit low - forced to remove expired messages: PROCESSED_REQUESTS
14:45:03 WARN  memory limit low - forced to remove expired messages: INCOMING_REQUESTS
14:45:03 WARN  memory limit low - forced to remove expired messages: Index2.EntityFullIndexer
14:45:03 WARN  memory limit low - forced to remove expired messages: Index1.EntityFullIndexer
14:45:03 WARN  memory limit low - forced to remove expired messages: Index2.EntityIncrementalIndexer,Index1.EntityIncrementalIndexer
14:45:03 WARN  memory limit low - forced to remove expired messages: Index1.EntityIncrementalIndexer
14:45:03 WARN  memory limit low - forced to remove expired messages: Index2.EntityIncrementalIndexer
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.
14:45:03 WARN  Queue is full, waiting for it to be dequeued.","04/Apr/06 13:11;psmith@apache.org;We're using SQL 2000 as the JDBC store btw.","04/Apr/06 16:04;jstrachan;This is a known issue with the architecture of 3.x; once you hit queue full; the system generally pauses until you consume more messages. You're only option is to increase the RAM limit - but it is generally delaying the inevitable.

We recommend upgrading to 4.x which has this issue resolved","04/Apr/06 16:28;psmith@apache.org;Just to be clear, so persistent Composite Destination support is basically useless in the 3.x series?

You see, the consumers are definitely keeping up with the producers, we definitely do not have slow consumers here.  THere's no way that there is 32,000 unconsumed messages.  (In fact the consumer nodes are sitting there doing nothing, not being delivered anything)

I don't mind upgrading to 4.x (they don't call me the upgrade-a-tron for nothing), just want to clarify that there is no point pursuing a 3.2x fix?

cheers,

Paul","04/Apr/06 16:35;jstrachan;:)

The issue isn't with Composite Destinations per se - they are pretty trivial things, just a 1-many relationship of destinations. The issue is when you run out of RAM due to too many messages stuck on some queue, things kinda lock up until messages get consumed.

So I definitely recommend you upgrade to 4.0-RC2...
http://people.apache.org/~chirino/incubator-activemq-4.0-RC2/

which has all these issues fixed.

Note I'm a little confused when you talk about Index1.Foo and Index2.Foo and machines index1/index2. Index1.Foo is a queue which will exist on the broker your producer talks to right? Are you networking 2 brokers together in a store/forward network?


BTW one other benefit of 4.x is you can use JMX to view all the queues & their queue depths to easily grok whats going on...
http://activemq.org/JMX
","04/Apr/06 17:10;psmith@apache.org;There is a logical queue within our system called ""EntityIncrementalIndexer' (don't think JMS here, just thing in-out pipeline), which updates to mail & docs in our app are sent as incremental update messages to index nodes.

Each index node, (Index1 & Index2) need to have their own queue, and we use the Composite Destination feature to clone a message to both destinations:


producer -> JMS -> Index1
                               -> Index2

The producer is configured to know how many nodes in the cluster, and sends queue messages via composite destinations, at startup it sets aa variable about the index node list, and creates a Desitaniotn of the form ""Index1.EntityIncrementalIndexer,Index2.EntityIncrementalIndex"".  I thought each Index node would then read from it's own queue, with ActiveMQ pushing the 1 sent message into BOTH queues.

If your immediate thought is ""Shouldn't this be done via Durable Subscription topics?"", you are probably right, but I've been bitten by vendors Durable Subscription implementation before, and thought the Composite Destination approach might be simpler, and more elegant.  (wrong! :))

Now, I'm confused by your comment about RAM.  You see I don't believe any of teh messages sent since we started using 2 nodes in the composite destination ever got 'missed'.   That is from our logs I believe that all messages arrived and were consumed by the destination.  I believe the messages are being persisted, but not marked as consumed.

","04/Apr/06 17:17;jstrachan;I'm with you now. Composite destinations should work fine for you - its a way of using multiple queues to simulate durable topics - which is a good thing in general. (I'd like to provide queue-topic unification at some point so you can see durable topics as being like multiple virtual queues which multiple consumers can consume on the same queue to get load balancing - while avoiding the multiple-persistence of the message to each queue which happens now with composite destinations - but thats another topic).

My mention of RAM is that this error messsage...

14:45:03 WARN Queue is full, waiting for it to be dequeued.

is created when the queue dispatcher uses up its available RAM because it keeps all unconsumed queue messages in RAM until they are consumed. So its sounding like some messages on some queue are not getting consumed. Unfortunately in 3.x there's no easy way to look and see for sure - if you used 4.x you could just use JConsole to see all the queues and what messages are on each etc.

","04/Apr/06 17:18;jstrachan;BTW in 4.x the queue dispatch mechanism has been completely changed so that we can deal with massive queues with millions of messages on them; we don't have to keep around the entire queue contents in RAM in 4.x so you should not see the ""WARN Queue is full, waiting for it to be dequeued. "" messages in 4.x",,,,,,,,,,,,,,,,,,,,,,,,,,,
Acked persistent messages redelivered after broker restart.,AMQ-659,12481357,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,chirino,chirino,chirino,27/Mar/06 09:31,28/Mar/06 05:30,30/Jan/20 16:57,28/Mar/06 05:30,4.0 RC2,,,,,,4.0 RC2,,,,,,,0,"Originally reported on http://www.nabble.com/Message-Redelivery-after-startup%2C-potential-BUG-with-easy-test-case-t1337282.html#a3574070

I confirmed that this is happening.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49286,,,Tue Mar 28 05:30:33 UTC 2006,,,,,,,,"0|i0rztz:",161449,Regression,,,,,,,,,,,,,,,,,,"28/Mar/06 05:28;chirino;making a blocker since this is a very nasty bug.","28/Mar/06 05:30;chirino;Committed fix in revision 389258",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to create ACTIVEMQ_ACK table,AMQ-533,12481557,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,nwhite,nwhite,07/Feb/06 00:23,23/Mar/06 20:59,30/Jan/20 16:57,17/Mar/06 18:54,3.2.2,,,,,,4.0 RC2,,,Message Store,,,,0,"I received the following error when trying to run ActiveMQ for the first time in the above environment:

""Specified key was too long; max key length is 1024 bytes...""

when ActiveMQ tries to create the ACTIVEMQ_ACKS table. It looks like the pk for that table involves two columns which are defined in DefaultStatementProvider.java as being VARCHAR(250)s. In in UTF-8 characterset each char is composed of 3 bytes such that in this case the pk will be 1500 bytes which exceeds the max length for a InnoDB primary key.

Is there a spec. which stipulates that containernameDataType and subscriptionIdDataType should be VARCHAR(250)? Could these be changed to say VARCHAR(128) or some such so that the pk on that table will fall within the 1024 byte limit?
","MySQL 4.1.11 (InnoDB engine, UTF-8 default characterset), MySQL 3.1.8 connector/J, Java 1.5.0_06, Windows XP SP2, ActiveMQ 3.2.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 18:53:27.0,,,false,,,,,,,,,,,,,,,,,49188,,,Thu Mar 23 20:59:43 UTC 2006,,,,,,,,"0|i0rzq7:",161432,,,,,,,,,,,,,,,,,,,"17/Mar/06 18:53;chirino;ActiveMQ has not been enhanced so that the SQL statements used can be tuned.

In you case, you would want to used something similar to...

  <broker useJmx=""false"">

    <persistenceAdapter>
      <journaledJDBC useJournal=""false"">
        <statements>
          <statements stringIdDataType =""VARCHAR(128)""/>
        </statements>
      </journaledJDBC>
    </persistenceAdapter>

  </broker>

For more info on what attributes can be set on the statements element, see:
http://activemq.codehaus.org/maven/apidocs/org/apache/activemq/store/jdbc/Statements.html
All the settable bean properties can be used as attributes of the <statements> element.
","23/Mar/06 20:59;shantharama;Here is the complete solution, this resolved isse for us,  update the datasource configuration as below 

<persistenceAdapter>
      <journaledJDBC  useJournal=""false""  journalLogFiles=""5"" dataDirectory=""../activemq-data"" dataSource=""#ds""/>
      <statements>
          <statements stringIdDataType =""VARCHAR(128)"" msgIdDataType=""VARCHAR(128)"" containerNameDataType=""VARCHAR(128)""/>
        </statements>
    </persistenceAdapter>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consuming multiple messages in a transaction breaks the JournalMessageStore,AMQ-619,12481640,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,chirino,teppic,teppic,08/Mar/06 06:10,17/Mar/06 17:39,30/Jan/20 16:57,17/Mar/06 17:39,4.0 M4,,,,,,4.0 RC2,,,,,,,0,If more than one message is consumed in a transaction all but one of the messages will be recovered on restart.,"Windows XP, JDK 5, ActiveMQ standalone.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-08 10:21:29.0,,,false,,,,,,,,,,,,,,,,,49254,,,Fri Mar 17 17:39:09 UTC 2006,,,,,,,,"0|i0rzt3:",161445,,,,,,,,,,,,,,,,,,,"08/Mar/06 10:21;jstrachan;Fancy taking a stab at this one?","08/Mar/06 10:59;teppic;To reproduce with Hermes:

- Start ActiveMQ.
- Start Hermes.
- Create a new queue in Hermes.
- Drag a group of test messages to the queue.
- Browse the queue.
- Select the messages and delete them.
- Refresh the browse window. The queue will appear empty.
- Restart ActiveMQ.
- Refresh the browse window in Hermes. All but one of the messages will be back in the queue.

I had a look at this in a debugger. I'm not that familiar with the code but it appeared that the client was acking a range of messages and the server was issuing removes for all the acked messages with the same message id (the last one in the range).","09/Mar/06 01:30;teppic;Logging:

DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:777579
DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:777770
DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:777961
DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:778152
DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:778343
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:777579
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:777770
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:777961
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:778152
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-2499-1141767651583-0:1:1:1:2, at: 0:778343

The msgid_seq is not changing. ","09/Mar/06 01:33;teppic;I checked out the project from SVN. It seems to work now:

DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-3329-1141858418941-0:22:1:1:1, at: 0:1828
DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-3329-1141858418941-0:22:1:1:2, at: 0:2059
DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-3329-1141858418941-0:22:1:1:3, at: 0:2290
DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-3329-1141858418941-0:22:1:1:4, at: 0:2521
DEBUG JournalMessageStore            - Journalled transacted message remove for: ID:foo-3329-1141858418941-0:22:1:1:5, at: 0:2752
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-3329-1141858418941-0:22:1:1:1, at: 0:1828
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-3329-1141858418941-0:22:1:1:2, at: 0:2059
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-3329-1141858418941-0:22:1:1:3, at: 0:2290
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-3329-1141858418941-0:22:1:1:4, at: 0:2521
DEBUG JournalMessageStore            - Transacted message remove commit for: ID:foo-3329-1141858418941-0:22:1:1:5, at: 0:2752
","17/Mar/06 17:39;chirino;working.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Keystore files used for unit test in Optional module have expired,AMQ-417,12481573,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,maguro,drw_web,drw_web,21/Nov/05 21:07,17/Mar/06 14:24,30/Jan/20 16:57,17/Mar/06 14:24,3.2,3.2.1,,,,,4.0 RC2,,,,,,,0,"Performing full maven build, the following JUnit test for the optional module fails due to expired certificates used in the test -

    [junit] [ERROR] TEST org.activemq.transport.ssl.SslTransportChannelTest FAILED

Both of the certs in the modules\optional\src\test\client.keystore and server.keystore files have expired -
Your keystore contains 1 entry

Alias name: mykey
Creation date: Feb 3, 2005
Entry type: keyEntry
Certificate chain length: 1
Certificate[1]:
Owner: CN=localhost, OU=activemq.org, O=activemq.org, L=LA, ST=CA, C=US
Issuer: CN=localhost, OU=activemq.org, O=activemq.org, L=LA, ST=CA, C=US
Serial number: 4202b790
Valid from: 2/3/05 6:45 PM until: 5/4/05 7:45 PM
Certificate fingerprints:
         MD5:  C1:E4:37:34:0F:A3:C3:C4:6F:AA:F1:AC:59:B1:1D:00
         SHA1: 75:FF:D1:D0:AD:89:88:9A:68:57:B4:06:80:A1:79:80:4F:91:74:F5


Testsuite: org.activemq.transport.ssl.SslTransportChannelTest
Tests run: 4, Failures: 4, Errors: 0, Time elapsed: 2.718 sec

------------- Standard Output ---------------
Server has started
addClient() with receiver: TcpTransportChannel: Socket[addr=/127.0.0.1,port=2420,localport=61617]
Sending packets
Reason: javax.net.ssl.SSLHandshakeException: certificate expired
Receiver has started
Reason: javax.net.ssl.SSLHandshakeException: certificate expired
Stopping sender
Receiver will be closed by the server
Stopping server
Server has started
addClient() with receiver: TcpTransportChannel: Socket[addr=/127.0.0.1,port=2421,localport=61617]
Reason: javax.net.ssl.SSLHandshakeException: certificate expired
Reason: javax.net.ssl.SSLHandshakeException: certificate expired
Receiver has started
Stopping sender
Receiver will be closed by the server
Stopping server
Server has started
addClient() with receiver: TcpTransportChannel: Socket[addr=/127.0.0.1,port=2422,localport=61617]
Reason: javax.net.ssl.SSLHandshakeException: certificate expired
Reason: javax.net.ssl.SSLHandshakeException: certificate expired
Receiver has started
Reason: java.net.SocketException: Socket is closed
Stopping sender
Receiver will be closed by the server
Stopping server
Server has started
addClient() with receiver: TcpTransportChannel: Socket[addr=/127.0.0.1,port=2423,localport=61617]
Reason: javax.net.ssl.SSLHandshakeException: certificate expired
Stopping sender
Receiver will be closed by the server
Stopping server
Reason: javax.net.ssl.SSLHandshakeException: certificate expired
Receiver has started
------------- ---------------- ---------------
------------- Standard Error -----------------
Failure starting receiver: 
javax.jms.JMSException: start failed: certificate expired
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:199)
	at org.activemq.transport.TransportChannelTestSupport.configureReceiver(TransportChannelTestSupport.java:285)
	at org.activemq.transport.TransportChannelTestSupport.addClient(TransportChannelTestSupport.java:331)
	at org.activemq.transport.TransportServerChannelSupport.addClient(TransportServerChannelSupport.java:98)
	at org.activemq.transport.tcp.TcpTransportServerChannel.run(TcpTransportServerChannel.java:158)
	at java.lang.Thread.run(Thread.java:570)
Caused by: javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.FilterInputStream.read(FilterInputStream.java:86)
	at org.activemq.io.WireFormatLoader.getWireFormat(WireFormatLoader.java:67)
	at org.activemq.transport.tcp.TcpTransportChannel.readWireFormat(TcpTransportChannel.java:208)
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:178)
	... 5 more
javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.FilterInputStream.read(FilterInputStream.java:86)
	at org.activemq.io.WireFormatLoader.getWireFormat(WireFormatLoader.java:67)
	at org.activemq.transport.tcp.TcpTransportChannel.readWireFormat(TcpTransportChannel.java:208)
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:178)
	at org.activemq.transport.TransportChannelTestSupport.configureReceiver(TransportChannelTestSupport.java:285)
	at org.activemq.transport.TransportChannelTestSupport.addClient(TransportChannelTestSupport.java:331)
	at org.activemq.transport.TransportServerChannelSupport.addClient(TransportServerChannelSupport.java:98)
	at org.activemq.transport.tcp.TcpTransportServerChannel.run(TcpTransportServerChannel.java:158)
	at java.lang.Thread.run(Thread.java:570)
Sender got an exception:
javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired
	at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
	at org.activemq.transport.tcp.TcpTransportChannel.doClose(TcpTransportChannel.java:513)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:330)
	at java.lang.Thread.run(Thread.java:570)
Caused by: javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.DataInputStream.readByte(DataInputStream.java:358)
	at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:230)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:313)
	... 1 more
javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.DataInputStream.readByte(DataInputStream.java:358)
	at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:230)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:313)
	at java.lang.Thread.run(Thread.java:570)
Sender got an exception:
javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired
	at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
	at org.activemq.transport.tcp.TcpTransportChannel.doClose(TcpTransportChannel.java:513)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:330)
	at java.lang.Thread.run(Thread.java:570)
Caused by: javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.DataInputStream.readByte(DataInputStream.java:358)
	at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:230)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:313)
	... 1 more
Failure starting receiver: 
javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.DataInputStream.readByte(DataInputStream.java:358)
	at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:230)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:313)
	at java.lang.Thread.run(Thread.java:570)
javax.jms.JMSException: start failed: certificate expired
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:199)
	at org.activemq.transport.TransportChannelTestSupport.configureReceiver(TransportChannelTestSupport.java:285)
	at org.activemq.transport.TransportChannelTestSupport.addClient(TransportChannelTestSupport.java:331)
	at org.activemq.transport.TransportServerChannelSupport.addClient(TransportServerChannelSupport.java:98)
	at org.activemq.transport.tcp.TcpTransportServerChannel.run(TcpTransportServerChannel.java:158)
	at java.lang.Thread.run(Thread.java:570)
Caused by: javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.FilterInputStream.read(FilterInputStream.java:86)
	at org.activemq.io.WireFormatLoader.getWireFormat(WireFormatLoader.java:67)
	at org.activemq.transport.tcp.TcpTransportChannel.readWireFormat(TcpTransportChannel.java:208)
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:178)
	... 5 more
javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.FilterInputStream.read(FilterInputStream.java:86)
	at org.activemq.io.WireFormatLoader.getWireFormat(WireFormatLoader.java:67)
	at org.activemq.transport.tcp.TcpTransportChannel.readWireFormat(TcpTransportChannel.java:208)
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:178)
	at org.activemq.transport.TransportChannelTestSupport.configureReceiver(TransportChannelTestSupport.java:285)
	at org.activemq.transport.TransportChannelTestSupport.addClient(TransportChannelTestSupport.java:331)
	at org.activemq.transport.TransportServerChannelSupport.addClient(TransportServerChannelSupport.java:98)
	at org.activemq.transport.tcp.TcpTransportServerChannel.run(TcpTransportServerChannel.java:158)
	at java.lang.Thread.run(Thread.java:570)
Failure starting receiver: 
javax.jms.JMSException: start failed: certificate expired
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:199)
	at org.activemq.transport.TransportChannelTestSupport.configureReceiver(TransportChannelTestSupport.java:285)
	at org.activemq.transport.TransportChannelTestSupport.addClient(TransportChannelTestSupport.java:331)
	at org.activemq.transport.TransportServerChannelSupport.addClient(TransportServerChannelSupport.java:98)
	at org.activemq.transport.tcp.TcpTransportServerChannel.run(TcpTransportServerChannel.java:158)
	at java.lang.Thread.run(Thread.java:570)
Caused by: javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.FilterInputStream.read(FilterInputStream.java:86)
	at org.activemq.io.WireFormatLoader.getWireFormat(WireFormatLoader.java:67)
	at org.activemq.transport.tcp.TcpTransportChannel.readWireFormat(TcpTransportChannel.java:208)
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:178)
	... 5 more
Sender got an exception:
javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired
	at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
	at org.activemq.transport.tcp.TcpTransportChannel.doClose(TcpTransportChannel.java:513)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:330)
	at java.lang.Thread.run(Thread.java:570)
Caused by: javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.DataInputStream.readByte(DataInputStream.java:358)
	at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:230)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:313)
	... 1 more
Sender got an exception:
javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.FilterInputStream.read(FilterInputStream.java:86)
	at org.activemq.io.WireFormatLoader.getWireFormat(WireFormatLoader.java:67)
	at org.activemq.transport.tcp.TcpTransportChannel.readWireFormat(TcpTransportChannel.java:208)
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:178)
	at org.activemq.transport.TransportChannelTestSupport.configureReceiver(TransportChannelTestSupport.java:285)
	at org.activemq.transport.TransportChannelTestSupport.addClient(TransportChannelTestSupport.java:331)
	at org.activemq.transport.TransportServerChannelSupport.addClient(TransportServerChannelSupport.java:98)
	at org.activemq.transport.tcp.TcpTransportServerChannel.run(TcpTransportServerChannel.java:158)
	at java.lang.Thread.run(Thread.java:570)
javax.jms.JMSException: asyncSend failed: java.net.SocketException: Socket is closed
	at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
	at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:483)
	at org.activemq.transport.TransportChannelSupport.asyncSendWithReceipt(TransportChannelSupport.java:160)
	at org.activemq.transport.TransportChannelSupport.send(TransportChannelSupport.java:145)
	at org.activemq.transport.TransportChannelTestSupport.testRpc(TransportChannelTestSupport.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:325)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:536)
Caused by: java.net.SocketException: Socket is closed
	at java.net.Socket.getSoTimeout(Socket.java:964)
	at com.ibm.sslite.be.getSoTimeout(Unknown Source)
	at com.ibm.sslite.be.a(Unknown Source)
	at com.ibm.sslite.be.<init>(Unknown Source)
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.b.a(Unknown Source)
	at com.ibm.jsse.b.write(Unknown Source)
	at org.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:109)
	at java.io.DataOutputStream.flush(DataOutputStream.java:126)
	at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:475)
	... 18 more
javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.DataInputStream.readByte(DataInputStream.java:358)
	at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:230)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:313)
	at java.lang.Thread.run(Thread.java:570)
java.net.SocketException: Socket is closed
	at java.net.Socket.getSoTimeout(Socket.java:964)
	at com.ibm.sslite.be.getSoTimeout(Unknown Source)
	at com.ibm.sslite.be.a(Unknown Source)
	at com.ibm.sslite.be.<init>(Unknown Source)
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.b.a(Unknown Source)
	at com.ibm.jsse.b.write(Unknown Source)
	at org.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:109)
	at java.io.DataOutputStream.flush(DataOutputStream.java:126)
	at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:475)
	at org.activemq.transport.TransportChannelSupport.asyncSendWithReceipt(TransportChannelSupport.java:160)
	at org.activemq.transport.TransportChannelSupport.send(TransportChannelSupport.java:145)
	at org.activemq.transport.TransportChannelTestSupport.testRpc(TransportChannelTestSupport.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:325)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:536)
Sender got an exception:
Failure starting receiver: 
javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired
	at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
	at org.activemq.transport.tcp.TcpTransportChannel.doClose(TcpTransportChannel.java:513)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:330)
	at java.lang.Thread.run(Thread.java:570)
Caused by: javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.DataInputStream.readByte(DataInputStream.java:358)
	at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:230)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:313)
	... 1 more
javax.jms.JMSException: start failed: certificate expired
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:199)
	at org.activemq.transport.TransportChannelTestSupport.configureReceiver(TransportChannelTestSupport.java:285)
	at org.activemq.transport.TransportChannelTestSupport.addClient(TransportChannelTestSupport.java:331)
	at org.activemq.transport.TransportServerChannelSupport.addClient(TransportServerChannelSupport.java:98)
	at org.activemq.transport.tcp.TcpTransportServerChannel.run(TcpTransportServerChannel.java:158)
	at java.lang.Thread.run(Thread.java:570)
Caused by: javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.FilterInputStream.read(FilterInputStream.java:86)
	at org.activemq.io.WireFormatLoader.getWireFormat(WireFormatLoader.java:67)
	at org.activemq.transport.tcp.TcpTransportChannel.readWireFormat(TcpTransportChannel.java:208)
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:178)
	... 5 more
javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.DataInputStream.readByte(DataInputStream.java:358)
	at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:230)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:313)
	at java.lang.Thread.run(Thread.java:570)
javax.net.ssl.SSLHandshakeException: certificate expired
	at com.ibm.jsse.bv.a(Unknown Source)
	at com.ibm.jsse.a.a(Unknown Source)
	at com.ibm.jsse.a.read(Unknown Source)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:200)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:218)
	at java.io.FilterInputStream.read(FilterInputStream.java:86)
	at org.activemq.io.WireFormatLoader.getWireFormat(WireFormatLoader.java:67)
	at org.activemq.transport.tcp.TcpTransportChannel.readWireFormat(TcpTransportChannel.java:208)
	at org.activemq.transport.tcp.TcpTransportChannel.start(TcpTransportChannel.java:178)
	at org.activemq.transport.TransportChannelTestSupport.configureReceiver(TransportChannelTestSupport.java:285)
	at org.activemq.transport.TransportChannelTestSupport.addClient(TransportChannelTestSupport.java:331)
	at org.activemq.transport.TransportServerChannelSupport.addClient(TransportServerChannelSupport.java:98)
	at org.activemq.transport.tcp.TcpTransportServerChannel.run(TcpTransportServerChannel.java:158)
	at java.lang.Thread.run(Thread.java:570)
------------- ---------------- ---------------
Testcase: testSendPacket(org.activemq.transport.ssl.SslTransportChannelTest):	FAILED
Exceptions were thrown: [javax.jms.JMSException: start failed: certificate expired, javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired]
junit.framework.AssertionFailedError: Exceptions were thrown: [javax.jms.JMSException: start failed: certificate expired, javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired]
	at org.activemq.transport.TransportChannelTestSupport.tearDown(TransportChannelTestSupport.java:254)


Testcase: testAsyncSendWithReceipt(org.activemq.transport.ssl.SslTransportChannelTest):	FAILED
Exceptions were thrown: [javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired, javax.jms.JMSException: start failed: certificate expired]
junit.framework.AssertionFailedError: Exceptions were thrown: [javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired, javax.jms.JMSException: start failed: certificate expired]
	at org.activemq.transport.TransportChannelTestSupport.tearDown(TransportChannelTestSupport.java:254)


Testcase: testRpc(org.activemq.transport.ssl.SslTransportChannelTest):	FAILED
Exceptions were thrown: [javax.jms.JMSException: start failed: certificate expired, javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired, javax.jms.JMSException: asyncSend failed: java.net.SocketException: Socket is closed]
junit.framework.AssertionFailedError: Exceptions were thrown: [javax.jms.JMSException: start failed: certificate expired, javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired, javax.jms.JMSException: asyncSend failed: java.net.SocketException: Socket is closed]
	at org.activemq.transport.TransportChannelTestSupport.tearDown(TransportChannelTestSupport.java:254)


Testcase: testForceDisconnect(org.activemq.transport.ssl.SslTransportChannelTest):	FAILED
Exceptions were thrown: [javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired, javax.jms.JMSException: start failed: certificate expired]
junit.framework.AssertionFailedError: Exceptions were thrown: [javax.jms.JMSException: Error reading socket: javax.net.ssl.SSLHandshakeException: certificate expired, javax.jms.JMSException: start failed: certificate expired]
	at org.activemq.transport.TransportChannelTestSupport.tearDown(TransportChannelTestSupport.java:254)


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49103,,,2005-11-21 21:07:50.0,,,,,,,,"0|i0rzsv:",161444,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bug in redelivery logic in JMS client,AMQ-460,12481373,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,chirino,jstrachan,jstrachan,30/Dec/05 15:37,16/Feb/06 11:30,30/Jan/20 16:57,05/Jan/06 09:14,,,,,,,4.0 M4,,,Broker,,,,0,"It seems that after the first message is redelivered the maximum amount of times (and then sent to the DLQ), rollbacks to future messages never actually rollback.

See the DeadLettterTest case in activemq-core.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49135,,,Thu Jan 05 09:14:10 UTC 2006,,,,,,,,"0|i0rzlb:",161410,,,,,,,,,,,,,,,,,,,"05/Jan/06 09:14;jstrachan;Thanks for fixing this Hiram!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover protocol does not work for networkConnectors,AMQ-416,12481368,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,chirino,dennis@bevocal.com,dennis@bevocal.com,17/Nov/05 20:13,24/Nov/05 00:52,30/Jan/20 16:57,24/Nov/05 00:52,,,,,,,,,,,,,,0,"If  the failover protocol is specified in a <networkConnector> element, the broker will not complete startup from a script.

Example using the following uri:

<networkConnector uri=""failover://(tcp://localhost:62626)""/>

generates the following exception:

Exception in thread ""main"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.activemq.network.NetworkConnector' defined in class path resource [activemq.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyAccessExceptionsException: PropertyAccessExceptionsException (1 errors); nested propertyAccessExceptions are: [org.springframework.beans.MethodInvocationException: Property 'uri' threw exception; nested exception is java.io.IOException: Could not create discovery agent: failover://(tcp://localhost:62626)]
PropertyAccessExceptionsException (1 errors)
org.springframework.beans.MethodInvocationException: Property 'uri' threw exception; nested exception is java.io.IOException: Could not create discovery agent: failover://(tcp://localhost:62626)
java.io.IOException: Could not create discovery agent: failover://(tcp://localhost:62626)
	at org.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:26)
	at org.activemq.transport.discovery.DiscoveryAgentFactory.createDiscoveryAgent(DiscoveryAgentFactory.java:56)
	at org.activemq.network.NetworkConnector.setUri(NetworkConnector.java:166)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:860)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:733)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:890)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValues(BeanWrapperImpl.java:917)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValues(BeanWrapperImpl.java:906)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:823)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:345)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBeanDefinition(BeanDefinitionValueResolver.java:147)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:96)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:109)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1012)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:823)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:345)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:275)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:318)
	at org.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:158)
	at org.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:48)
	at org.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:42)
	at org.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.activemq.broker.Main.run(Main.java:217)
	at org.activemq.broker.Main.main(Main.java:118)
Caused by: java.io.IOException: Could not find factory class for resource: META-INF/services/org/activemq/transport/discoveryagent/failover
	at org.activeio.FactoryFinder.doFindFactoryProperies(FactoryFinder.java:74)
	at org.activeio.FactoryFinder.newInstance(FactoryFinder.java:44)
	at org.activeio.FactoryFinder.newInstance(FactoryFinder.java:33)
	at org.activemq.transport.discovery.DiscoveryAgentFactory.createDiscoveryAgent(DiscoveryAgentFactory.java:47)
	... 34 more




",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-11-24 00:52:02.0,,,false,,,,,,,,,,,,,,,,,49102,,,Thu Nov 24 00:52:02 UTC 2005,,,,,,,,"0|i0ts7r:",171880,,,,,,,,,,,,,,,,,,,"24/Nov/05 00:52;chirino;Dennis,

The network connector expects a discovery agent URI instead of a transport URI.. if you want to use a static list, use:

use this instead:
<networkConnector uri=""static:(failover:(tcp://localhost:62626))""/> 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages on a queue are lost when multiple brokers exist if not every broker has a subscriber to the queue,AMQ-168,12481160,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,mgaffney,mgaffney,mgaffney,11/Jan/05 07:21,20/Sep/05 17:15,30/Jan/20 16:57,11/Jan/05 07:40,1.5,2.0,,,,,2.0,,,Broker,Transport,,,0,"Here's the scenario:
B1 (Broker 1)
B2 (Broker 2)
B3 (Broker 3)

Q1 (Queue 1)
T1 (Topic 1)

QC1 (Queue Consumer 1)
QP1 (Queue Producer 1)
TC1 (Topic Consumer 1)

B1 <-> B2 <-> B3 <-> B1  (All the brokers are connected)

QC1 -> B1  (QC1 connected to B1)
QP1 -> B2  (QP1 connected to B2)
TC1 -> B3  (TC1 connected to B3)

QP1 sends 10 messages to Q1  
QC1 receives only 5 messages from Q1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48901,,,2005-01-11 07:21:08.0,,,,,,,,"0|i0ts6n:",171875,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connector delivers multiple messages to an MDB between beforeDelivery() and afterDelivery() is called.,AMQ-150,12481101,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,mgaffney,mgaffney,mgaffney,09/Dec/04 00:58,10/Sep/05 19:16,30/Jan/20 16:57,14/Dec/04 22:15,1.2,1.3,,,,,1.4,,,Connector,,,,0,"The connector is delivering multiple messages to a MessageEndpoint (an MDB in this case) in between the beforeDelivery() and afterDelivery() method calls.  This violates the J2EE Connector Architecture (JCA) Specification version 1.5.  

From the JCA v1.5 spec - Section 12.5.6: 
""There must not be more than one message delivery in-between a single beforeDelivery and afterDelivery method call pair. The application server must reject beforeDelivery or afterDelivery calls that are out of sequence by throwing an IllegalStateException.""

Here is a logging entry from JBoss 4.0.1-RC2 showing the violation:

2004-12-08 16:19:28,706 INFO  [org.codehaus.activemq.ActiveMQSession] Caught :java.lang.IllegalStateException: Multiple message delivery between before and after delivery is not allowed for message endpoint local/BaselineUpdateProcessorBean@4
java.lang.IllegalStateException: Multiple message delivery between before and after delivery is not allowed for message endpoint local/BaselineUpdateProcessorBean@4
	at org.jboss.ejb.plugins.inflow.MessageEndpointInterceptor.delivery(MessageEndpointInterceptor.java:220)
	at org.jboss.ejb.plugins.inflow.MessageEndpointInterceptor.invoke(MessageEndpointInterceptor.java:117)
	at org.jboss.proxy.ClientMethodInterceptor.invoke(ClientMethodInterceptor.java:59)
	at org.jboss.proxy.ClientContainer.invoke(ClientContainer.java:86)
	at $Proxy61.onMessage(Unknown Source)
	at org.codehaus.activemq.ActiveMQSession.run(ActiveMQSession.java:557)
	at org.codehaus.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:137)
	at org.jboss.resource.work.WorkWrapper.execute(WorkWrapper.java:200)
	at org.jboss.util.threadpool.BasicTaskWrapper.run(BasicTaskWrapper.java:232)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:743)
	at java.lang.Thread.run(Thread.java:534)


I will start working on a test case to reproduce it, but I wanted to file the bug report first.",JBoss 4.0.1-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48885,,,Tue Dec 14 22:15:27 UTC 2004,,,,,,,,"0|i0ts6v:",171876,,,,,,,,,,,,,,,,,,,"14/Dec/04 22:14;mgaffney;I'm reopening this just to edit it's 'fixed in' field.","14/Dec/04 22:15;mgaffney;Changed the 'Fix Version' from None to 1.4.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use of reliable in NetworkConnector failing (rev 401),AMQ-315,12481348,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,rsaba,dennis@bevocal.com,dennis@bevocal.com,22/Jul/05 18:11,23/Jul/05 14:20,30/Jan/20 16:57,23/Jul/05 14:20,,,,,,,3.1,,,Transport,,,,0,"Just tested revision 401 and found that a NetworkConnection cannot be reestablished after the initial connection is lost.

This is a sample of the networkConnector definitions that I use:

    <networkConnector>
      <networkChannel remoteBrokerName=""roadrash-B-62626"" maximumRetries=""0"" reconnectSleepTime=""15000"" uri=""reliable:(tcp://localhost:62626?keepAliveTimeout=600000)?establishConnectionTimeout=604800000""/>
    </networkConnector>

This should allow an almost infinate test for lost connection to a pear broker.  However it seems that once a broker loses the connection it not reconnect again after the peer is available.  It never seems to hit the ReliableTransportChannel.doReconnect() method.

I will include more details as I continue research.","win and rh9.0, jdk1.4.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-22 21:15:08.0,,,false,,,,,,,,,,,,,,,,,49027,,,Sat Jul 23 14:20:15 UTC 2005,,,,,,,,"0|i0rztr:",161448,,,,,,,,,,,,,,,,,,,"22/Jul/05 18:29;dennis@bevocal.com;The problem seems to be located in the NetworkChannel class.  The statusChanged() method is call for the releaseRemote() which in turn calls for a stop() on the channel object.  In this case it is the ReliableTransportChannel, which effectively disables it for recovery purposes.

There have been major changes to the NetworkChannel class in the past few weeks.  I hope some can jump in here and provide some guidance.","22/Jul/05 19:49;dennis@bevocal.com;Okay, this one seems to be beyond anything I can personally address. Changes for issue AMQ-287 attempted to fix problems with missing messages, but caused the problem with unable to reconnect.  I suspect that just backing that change out would be to simplistic.  I will have to leave it to someone with better understanding protocol of networked brokers.  ","22/Jul/05 21:15;rsaba;Hi Dennis, could you please attach the steps to reproduce the problem?

Using rev 401, I successfully performed this test:
1- Run broker 1 (port 61616)
2- Run broker 2 (port 61617)
3- Stop broker 1
4- Start broker 1
5- ant consumer -Durl=tcp://localhost:61616
6- ant producer -Durl=tcp://localhost:61617

This test works fine, ie produced messages are successfully consumed.
","22/Jul/05 23:11;dennis@bevocal.com;Sorry, never was able to get things setup to run tests via ant, but I can understand that the test you defined would work.  Here is the

1) broker 1 started (waits for connection to broker 2)
2) broker 2 started (broker 2 creates network channel broker 1, broker 1 creates network channel to broker 2)
3) broker 1 stopped (broker 2 network channel remoteConnection is now close)
4) broker 1 started (broker 1 creates network channel to broker 2)

Since broker 1 has created a network channel with broker 2, broker 2 can forward messages to clients attached to broker 1.  However the reverse is not true since broker 2 never reestablishes the network connectin with broker 1.

If you were to reverse you  consunmer / producer relationship, the test would fail

","23/Jul/05 14:20;rsaba;Should be fixed in SVN HEAD.  Removed calls to releaseRemote() on channel disconnect.  Also added fix to handle channel reconnects - looks like a broker restart was always problematic before the consumer has had a chance to establish a networkBridge.

Steps to test the fix:
1- Start broker1 (port 61616)
2- Start broker2 (port 61617)
3- Restart broker1
4- ant consumer -Durl=tcp://localhost:61617
5- ant producer -Durl=tcp://localhost:61616",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing queue messages,AMQ-221,12481081,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,jstrachan,dennis@bevocal.com,dennis@bevocal.com,22/Mar/05 06:11,23/Mar/05 04:28,30/Jan/20 16:57,22/Mar/05 23:57,3.0,,,,,,3.0,,,Transport,,,,0,"In the method NetworkChannel.removeConsumerInfo(ConsumerInfo info) the following test must evaluate TRUE for in ordre for a NetworkMessageBridge to be stopped.

if (currefcnt <= 0 && !bridge.isDurableTopic() &&
 (bridge.getDestination().isTopic() || bridge.getDestination().isTemporary()))

I do not think this test is correct.  If a consumer creates a subscription on a queue, an then disconnects, the above expression evaluates false and the NetworkMessageBridge is left open.  I put out a log statement showing the values tested for the closure of a queue subscriber:

 RefCnt=0 isDurableTopic=false isTopic=false isTemp=false

I do not understand the last condition of the above test.  Why only stop the bridge if the destation is a Topic or Temporary Queue?  Why would it not be appropriate to stop the bridge a non-temporary queue when the subscriber is gone.  It seems contrary to the documentation that indicates messages are only transfered between brokers when a subcriber is attached. I think this is the reason that it appears that messages go missing.  The messages are not missing, they just end up on a broker that has not subscriber to receive them.  If you start up the subcriber process again, the missing messages reapear.  
",w2k java 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-03-22 10:30:08.0,,,false,,,,,,,,,,,,,,,,,48946,,,Wed Mar 23 04:28:55 UTC 2005,,,,,,,,"0|i0rztj:",161447,,,,,,,,,,,,,,,,,,,"22/Mar/05 10:30;jstrachan;Fancy taking a look?","22/Mar/05 23:57;jstrachan;I think this is now fixed in the latest SVN. Dennis could you double check things look OK to you please?","23/Mar/05 04:28;dennis@bevocal.com;My tests are now passing.  This looks okay.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No 'webserver' target in 1.3,AMQ-148,12481186,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,yuansong,yuansong,08/Dec/04 22:40,03/Feb/05 10:46,30/Jan/20 16:57,09/Dec/04 00:32,1.3,,,,,,2.0,,,Broker,,,,0,"I am trying to build 'maven webserver' with ActiveMQ 1.3. Turns out there is no 'webserver' target. I would like to run the web samples and look into how to use REST (with HTTP C Client).

Thanks.","ActiveMQ-1.3
JBoss-4.0.1RC1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48883,,,Thu Dec 09 00:32:47 UTC 2004,,,,,,,,"0|i0ts6f:",171874,,,,,,,,,,,,,,,,,,,"09/Dec/04 00:32;yuansong;michael pointed me to assembly dir, webserver is defined there. Still getting errors in running 'maven webserver', but will close this one for now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages on a distributed queue are being delivered and redelivered multiple times,AMQ-161,12481289,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,stewie,mgaffney,mgaffney,18/Dec/04 00:09,03/Feb/05 09:23,30/Jan/20 16:57,07/Jan/05 19:56,1.5,,,,,,2.0,,,Broker,,,,0,"Here's the scenario:

B1 = Broker 1
B2 = Broker 2
R1 = Polling Message consumer connected to B1
R2 = Polling Message consumer connected to B2
S1 = Message producer connected to B1

B1 and B2 are started -- they find each other and ""hookup""
R1 and R2 are started -- they connect and call receive() on Q
S1 is started -- connects and sends 10 messages to Q.

R1 receives messages: 0,2,4,6,8
R2 receives messages: 1,3,5,7,9

Restart R1 (complete shutdown of JVM)  --- here's where the bug starts showing

R1 receives messages: 3,7
R2 receives messages: 1,5,9

Restart R2 (complete shutdown of JVM)  --- nothing happens (no
messages are redelivered)

Restart R1

R1 receives messages: 5
R2 receives messages: 1,9

Restart R1

R1 receives messages: 9
R2 receives messages: 1

Restart R1

R1 receives messages: <nothing>
R2 receives messages: 1

And if you keep restarting R1 the final loop happens over and over again.

I'll attach a sample with instructions on how to run it.",,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-01-07 19:56:21.0,,,false,,,,,,,,,,,,,,,,,48895,,,Fri Jan 07 19:56:21 UTC 2005,,,,,,,,"0|i0ts7j:",171879,,,,,,,,,,,,,,,,,,,"18/Dec/04 00:18;mgaffney;To run the test:
-unzip the broker-test.zip file and run maven on in it's root directory
-startup a broker using broker1.xml  
-startup a second broker using broker2.xml  
-open three command windows
-in window 1 --> run maven r1
-in window 2 --> run maven r2
-in window 3 --> run maven s1

after maven s1 completes:
-in window 1 --> ctrl-break
-in window 1 --> run maven r1 (again)
  ---> you should see the messages being redelivered
* continue this ""ctrl-break + run maven r1"" in window 1","07/Jan/05 19:56;stewie;This is fixed in the latest version 2 snapshot",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQActivationSpec prevents integration with JBoss,AMQ-121,12481244,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,mgaffney,mgaffney,30/Oct/04 03:39,01/Nov/04 12:39,30/Jan/20 16:57,01/Nov/04 12:39,1.2,,,,,,1.2,,,,,,,0,"I'm working on deploying the activemq-ra module to JBoss 4.0 and I'm running into a problem.  

Without going into to much detail, it seems that JBoss is assuming that any JMS connector is implementing the JCA specs recommended set of JavaBeans properties for a JMS ActivationSpec class (see J2EE Connector Architecture Specification 1.5 - Appendix B - Sections B.2 - B.3) and incorrectly tries to set default values for each of the recommended properties.  This fails with the ActiveMQ connector because the ActiveMQActivationSpec class does not implement the recommended properties.

Even though the spec lists these properties as only recommendations, I think it would be in everyone's best interest to implement these properties as outlined in the spec.  It would certainly make integration with other AppServers much easier.

I've attached a patch, with unit tests, that implements the properties.",,mgaffney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-01 12:39:14.0,,,false,,,,,,,,,,,,,,,,,48859,,,Mon Nov 01 12:39:14 UTC 2004,,,,,,,,"0|i0ts67:",171873,,,,,,,,,,,,,,,,,,,"30/Oct/04 03:40;mgaffney;Here's the patch.","01/Nov/04 12:39;jstrachan;Many thanks for the patch Michael - applied with thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave does not detect master failover when master is solaris and slave on windows,AMQ-593,12481571,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,aco,rajdavies,rajdavies,24/Feb/06 22:08,06/Oct/15 15:56,30/Jan/20 16:57,02/Mar/06 12:34,4.0 M4,,,,,,,,,,,,,0,clients on windows don't failover to slave - see http://forums.activemq.org/posts/list/409.page,solaris/windows,githubbot,ledelste,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Feb/06 00:31;ledelste;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460781/ASF.LICENSE.NOT.GRANTED--activemq.xml","28/Feb/06 00:33;ledelste;ASF.LICENSE.NOT.GRANTED--masterlog.txt;https://issues.apache.org/jira/secure/attachment/12460754/ASF.LICENSE.NOT.GRANTED--masterlog.txt","28/Feb/06 00:31;ledelste;ASF.LICENSE.NOT.GRANTED--myconfig.xml;https://issues.apache.org/jira/secure/attachment/12460844/ASF.LICENSE.NOT.GRANTED--myconfig.xml","28/Feb/06 00:36;ledelste;ASF.LICENSE.NOT.GRANTED--slavelog.txt;https://issues.apache.org/jira/secure/attachment/12460549/ASF.LICENSE.NOT.GRANTED--slavelog.txt","28/Feb/06 00:29;ledelste;ASF.LICENSE.NOT.GRANTED--stacktrace.txt;https://issues.apache.org/jira/secure/attachment/12460780/ASF.LICENSE.NOT.GRANTED--stacktrace.txt",,,,5.0,,,,,,,,,,,,,,,,,,,,2006-02-28 00:26:53.0,,,false,,,,,,,,,,,,,,,,,49232,,,Tue Oct 06 15:56:52 UTC 2015,,,,,,,,"0|i0s00f:",161478,,,,,,,,,,,,,,,,,,,"28/Feb/06 00:26;ledelste;I changed my configuration the way Rob asked (I think) but no joy yet.  

I have three clients, two durably consuming a topic, one producing the topic.  All three connect to the broker with this URL: failover:(tcp://<hostname>:<port>)?maxReconnectAttempts=1

What happens now is that, when I kill the master, one of the clients dies when calling MessageProducer.send(Message) - the JMSException contains a ConnectException which says ""Connection refused: connect"".  The other two clients just keep waiting on MessageConsumer.receive().  The slave broker prints messages that make it look like it's ready for action - ""Master failed, starting all connectors"", etc. - but never gets the chance, apparently.

I'll attach a stack trace, broker logs, and the config files for the brokers after I post this.","28/Feb/06 00:29;ledelste;the stack trace from the client that failed","28/Feb/06 00:31;ledelste;Config file for the slave broker","28/Feb/06 00:31;ledelste;Config file for the master broker","28/Feb/06 00:33;ledelste;A capture of the log from the master.  Next time I'll try to specify a log file...","28/Feb/06 00:36;ledelste;The log from the slave broker.  I've left in the results of a lot of runs, but you can find the last one by looking for the text ""THE LAST FAILURE STARTS HERE"".","28/Feb/06 03:43;ledelste;FYI, I've done some tracing, and in this case, the failure is detected, but it doesn't look like the client was ever apprised of the slave URL.  On the client, in the onCommand(Command) method of the subclass of TransportListener that's an anonymous inner class of FailoverTransport, the value returned from BrokerInfo.getPeerBrokerInfos() is a null array.  I'm new at this code, but it seems like it ought to have the URL for the slave broker there.","28/Feb/06 04:13;ledelste;I've verified that the same problems occur when the master is on Windows and the slave on Solaris, or vice versa.","02/Mar/06 12:34;jstrachan;I think from our IRC conversations that this is working now right? 

Let us know if its not and we can reopen. If you find other issues it might be easier to track to open new JIRAs?","06/Oct/15 15:56;githubbot;GitHub user czobrisky opened a pull request:

    https://github.com/apache/activemq/pull/149

    AMQ-593 - Updated jodatime to 2.8.2

    https://issues.apache.org/jira/browse/AMQ-5931

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/czobrisky/activemq AMQ-5931

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/149.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #149
    
----
commit 10c68966567759dd25904c52c40c379c8d188019
Author: Chad Zobrisky <czobrisky@gmail.com>
Date:   2015-10-06T15:54:44Z

    Updated jodatime to 2.8.2

----
",,,,,,,,,,,,,,,,,,,,,,,,,
Channel was inactive for too long.,AMQ-1482,12482386,12482387,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,edwardsk2003,edwardsk2003,31/Oct/07 14:38,23/Mar/11 01:58,30/Jan/20 16:57,10/Jun/08 12:59,5.1.0,,,,,,,,,Connector,,,,16,"603422 [AcitveMQ Connection Worker: tcp://localhost/127.0.0.1:61616] ERROR JMS Connection Service - exception occurred in JMS connection; restarting
javax.jms.JMSException: Channel was inactive for too long.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1638)
	at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1655)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:155)
	at org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:100)
	at org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:50)
	at org.apache.activemq.thread.Scheduler$SchedulerTimerTask.run(Scheduler.java:36)
	at java.util.TimerThread.mainLoop(Unknown Source)
	at java.util.TimerThread.run(Unknown Source)
Caused by: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.
	... 5 more","Windows XP, Eclipse, OSGi ",akuhtz,antoniogmc,calan,gil_guo,jhaile,jmontanez@emn8.com,justinpitts@gmail.com,konrad_a,lansa,lbennett,rajdavies,rgavlin,sparky2708,tmielke,tpounds,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-31 10:12:13.638,,,false,,,,,,,,,,,,,,,,,84815,,,Wed Mar 23 01:58:49 UTC 2011,,,,,,,,"0|i0ku1b:",119684,,,,,,,,,,,,,,,,,,,"31/Oct/07 14:45;edwardsk2003;It appears that the channel is inactive for too long, 
Then a check confirms that the Consumer is closed
And then an error is thrown stating that the socket is closed.
The consumer messages reoccur a number of times, 
Eventually, (we have a connection manager that monitors and handles regaining a connection to AMQ, our connection manager will successfully regain a connection...

Below is a more complete stack trace:
60219 [AcitveMQ Connection Worker: tcp://localhost/127.0.0.1:61616] ERROR JMS Connection Service - exception occurred in JMS connection; restarting
javax.jms.JMSException: Channel was inactive for too long.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1638)
	at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1655)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:155)
	at org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:100)
	at org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:50)
	at org.apache.activemq.thread.Scheduler$SchedulerTimerTask.run(Scheduler.java:36)
	at java.util.TimerThread.mainLoop(Unknown Source)
	at java.util.TimerThread.run(Unknown Source)
Caused by: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.
	... 5 more
60219 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60219 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60219 [AcitveMQ Connection Worker: tcp://localhost/127.0.0.1:61616] ERROR JMS Connection Service - exception occurred in JMS connection; restarting
javax.jms.JMSException: socket closed
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1638)
	at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1655)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:155)
	at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:95)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:180)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.SocketException: socket closed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(Unknown Source)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
	at java.io.DataInputStream.readInt(Unknown Source)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:196)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:188)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:176)
	... 1 more
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60234 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60250 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60250 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60250 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60250 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60250 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)
60250 [JmsConnectionManager] INFO JMS Connection Service - JMS connection to broker created successfully
60250 [testAgentID:JMS Receiver Thread] ERROR Test Agent - error receiving JMS message
javax.jms.IllegalStateException: The Consumer is closed
	at org.apache.activemq.ActiveMQMessageConsumer.checkClosed(ActiveMQMessageConsumer.java:672)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:502)
	at net.fractech.ops.daq.agent.AbstractAgent.run(AbstractAgent.java:108)
	at java.lang.Thread.run(Unknown Source)


","31/Jan/08 10:12;sbucci;I don't know if i can close this issue.
But in the current SNAPSHOT 5.1, it's resolved.","22/Feb/08 06:17;sparky2708;Not true, I just checked SNAPSHOT 5.1 and issue is still there","02/Apr/08 16:47;gdaswani;This issue is definitely still there.  Just tried the latest 5.1 snapshot available - apache-activemq-5.1-20080401.230627-74.tar.gz    and the following error still on a client after a while

Channel was inactive for too long: machine/192.168.1.10:61616
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1670)
	at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1687)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:99)
	at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:114)","14/Apr/08 16:11;rajdavies;I can't reproduce this on the latest 5.1 snapshot  - please provide a junit test case.
There's been a lot of work in this area recently - so I'm keen to verify that it is fixed or still an issue","17/Apr/08 19:20;yaussy;Please see AMQ-1671, as it may be related?
","16/May/08 19:13;rajdavies;I can't reproduce this - is it now fixed?","16/May/08 19:21;justinpitts@gmail.com;I have reproduced it on 5.1, using the PooledConnectionFactory in conjuntion with Spring's SimpleMessageListenerContainer. If I dont use the PooledConnectionFactory, I don't see the inactivity issue. 
","10/Jun/08 07:30;klauskurz;Info:

- I am sending continous ~300 msg/sec over the ActiveMQ for log shipping.
- with the 5.0.0 version I got...
{{
   WARN  ActiveMQConnection - Async exception with no exception listener: org.apache.activemq.transport.InactivityIOException: 
   Channel was inactive for too long: /x.x.x.x:61616
   org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: /x.x.x.x:61616
           at org.apache.activemq.transport.InactivityMonitor$4.run(InactivityMonitor.java:108)
   WARN  ActiveMQConnection - Async exception with no exception listener: java.net.SocketException: Socket closed
   java.net.SocketException: Socket closed
   ...
}}
after some minutes runtime.

- with version 5.1.0 it is running now for 14 hours without this error.

","10/Jun/08 12:59;edwardsk2003;I believe this was a config/setup error","17/Jul/08 13:35;jhaile;Kevin, can you please share what the config/setup error was?  We are experiencing this problem on 5.1.0 using the PooledConnectionFactory: 

[09:36:37,011,LoggingSimpleMappingExceptionResolver] An Unexpected Error has occured 
org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: Channel was inactive for too long: localhost/127.0.0.1:61616; nested exception is org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: localhost/127.0.0.1:61616 
    	at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:289) 
    	at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:172) 
    	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:450) 
    	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:514) 
    	at org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:624) 
    	at org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:612) 
    	at wildfire.event.JmsEventPublisher.publish(JmsEventPublisher.java:99) ","22/Mar/11 10:04;gil_guo;Hi Kevin,

I met the same issue. Could you please provide the configuration options since you said it was a config/setup error.

Thanks,
Gil","22/Mar/11 12:09;lbennett;Can you please explain this.

","23/Mar/11 01:58;gil_guo;I met the same issue. Please see below for the error message:

SEVERE: Channel was inactive for too long: localhost/127.0.0.1:61616
org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1216)
org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1208)
org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1643)
org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:227)
org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:269)

For the issue I saw in previous thread Kevin said: ""I believe this was a config/setup error"". So I would like to know how to modify the config/setup. I didn't know why the issue was closed.
",,,,,,,,,,,,,,,,,,,,,
The connection is already closed at MDB's rollback in ra,AMQ-1431,12481208,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,ikim,ikim,20/Sep/07 21:50,15/Apr/09 15:47,30/Jan/20 16:57,15/Apr/09 15:47,4.1.1,,,,,,5.3.0,,,Connector,,,,3,"The exception occures in RA during rollback and causes message loss

javax.transaction.xa.XAException: The connection is already closed
      at org.apache.activemq.TransactionContext.toXAException(TransactionContext.java:619)
      at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:420)
      at org.apache.activemq.ra.LocalAndXATransaction.rollback(LocalAndXATransaction.java:129)
      at oracle.j2ee.connector.transaction.XAResourceWrapper.rollback(XAResourceWrapper.java:156)
      at com.evermind.server.TransactionEnlistment.rollback(TransactionEnlistment.java:76)
      at com.evermind.server.ApplicationServerTransaction.rollbackResource(ApplicationServerTransaction.java:580)
      at com.evermind.server.ApplicationServerTransaction.rollbackResources(ApplicationServerTransaction.java:567)
      at com.evermind.server.ApplicationServerTransaction.rollback(ApplicationServerTransaction.java:544)
      at com.evermind.server.ApplicationServerTransaction.rollback(ApplicationServerTransaction.java:527)
      at com.evermind.server.ApplicationServerTransactionManager.rollback(ApplicationServerTransactionManager.java:439)
      at com.evermind.server.ejb.EJBTransactionManager.end(EJBTransactionManager.java:129)
      at com.evermind.server.ejb.MessageDrivenHome.afterDelivery(MessageDrivenHome.java:968)
      at oracle.j2ee.connector.messageinflow.MessageEndpointBaseState.afterDelivery(MessageEndpointBaseState.java:93)
      at oracle.j2ee.connector.messageinflow.MessageEndpointWaitingForAfterDeliveryState.afterDelivery(MessageEndpointWaitingForAfterDeliveryState.java:30)
      at oracle.j2ee.connector.messageinflow.MessageEndpointImpl.afterDelivery(MessageEndpointImpl.java:202)
      at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.afterDelivery(MessageEndpointProxy.java:126)
      at org.apache.activemq.ra.MessageEndpointProxy.afterDelivery(MessageEndpointProxy.java:65)
      at org.apache.activemq.ra.ServerSessionImpl.afterDelivery(ServerSessionImpl.java:216)
      at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:751)
      at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:165)
      at oracle.j2ee.connector.work.WorkWrapper.runTargetWork(WorkWrapper.java:242)
      at oracle.j2ee.connector.work.WorkWrapper.doWork(WorkWrapper.java:215)
      at oracle.j2ee.connector.work.WorkWrapper.run(WorkWrapper.java:190)
      at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:819)
      at java.lang.Thread.run(Thread.java:595)
Caused by: org.apache.activemq.ConnectionClosedException: The connection is already closed
      at org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1245)
      at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1232)
      at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:404)
      ... 23 more","OC4J 10.1.3.2, OC4J 10.1.3.3, Oracle AS 10.1.3.2",antoniogmc,ikim,jerryshea,sg26565,vadimos,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/07 21:50;ikim;ASF.LICENSE.NOT.GRANTED--Test2MDB.java;https://issues.apache.org/jira/secure/attachment/12460837/ASF.LICENSE.NOT.GRANTED--Test2MDB.java","20/Sep/07 21:50;ikim;ASF.LICENSE.NOT.GRANTED--ejb-jar.xml;https://issues.apache.org/jira/secure/attachment/12460997/ASF.LICENSE.NOT.GRANTED--ejb-jar.xml","20/Sep/07 21:50;ikim;ASF.LICENSE.NOT.GRANTED--orion-ejb-jar.xml;https://issues.apache.org/jira/secure/attachment/12460644/ASF.LICENSE.NOT.GRANTED--orion-ejb-jar.xml",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2008-06-18 19:55:02.044,,,false,,,,,,,,,,,,,,,,,84539,,,Wed Apr 15 15:47:27 UTC 2009,,,,,,,,"0|i0rzzr:",161475,,,,,,,,,,,,,,,,,,,"18/Jun/08 19:55;sg26565;Same issue with OpenEJB 3.0 and ActiveMQ 5.1.0","15/Apr/09 15:47;gtully;this should be sorted by trunk http://svn.apache.org/viewvc?rev=748258&view=rev

also related is AMQ-2128",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build of current trunk with Maven2 fails,AMQ-1017,12482620,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,bwellhoefer,bwellhoefer,31/Oct/06 07:57,22/Sep/08 06:41,30/Jan/20 16:57,07/Mar/07 15:41,4.1.0,,,,,,,,,,,,,0,A build of a fresh checkout from https://svn.apache.org/repos/asf/incubator/activemq/trunk with Maven2 fails. See the attached log of the build.,"Windows XP, Maven 2.0.4, Java 1.5.0_06",,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Oct/06 07:57;bwellhoefer;ASF.LICENSE.NOT.GRANTED--mvn.log;https://issues.apache.org/jira/secure/attachment/12460755/ASF.LICENSE.NOT.GRANTED--mvn.log","09/Nov/06 15:23;michael.murphree;mvn-472933.log;https://issues.apache.org/jira/secure/attachment/12460816/mvn-472933.log","09/Nov/06 08:00;bwellhoefer;mvn.log;https://issues.apache.org/jira/secure/attachment/12460733/mvn.log","07/Nov/06 19:45;bwellhoefer;mvn.log;https://issues.apache.org/jira/secure/attachment/12460744/mvn.log",,,,,4.0,,,,,,,,,,,,,,,,,,,,2006-11-07 16:39:20.0,,,false,,,,,,,,,,,,,,,,,84500,,,Wed Mar 07 15:41:41 UTC 2007,,,,,,,,"0|i0ts8n:",171884,,,,,,,,,,,,,,,,,,,"07/Nov/06 16:39;jstrachan;The build works perfectly for me on OS X and Linux. I guess it must be some windows issue.

I wonder does trashing your ~/.m2/repository help? Am wondering if you've got some old version of some jar in your local repo? You definitely have the latest from trunk right?
","07/Nov/06 18:01;aco;I just built the trunk and its working fine for me (WinXP). Though, I did see this once, but was unable to reproduce it. Are you able to consistently reproduce this? Maybe you can try ""mvn install -U""","07/Nov/06 19:42;bwellhoefer;I just did a fresh update to revision number 472216. I also removed all content under ~/.m2/repository.

I still run into the build error and will attach the output of ""mvn -Dmaven.test.skip=true -U clean install > mvn.log"".","07/Nov/06 19:45;bwellhoefer;The output of ""mvn -Dmaven.test.skip=true -U clean install ""","08/Nov/06 17:04;jstrachan;I've just patched the pom for activemq-xmpp to see if that helps any - I wonder could you try give it another go please and see if this fixes it for you?","09/Nov/06 07:59;bwellhoefer;I updated to revision number 472803. The build is still failing.","09/Nov/06 08:00;bwellhoefer;The output for ""mvn -U -X -Dmaven.test.skip=true install > mvn.log"" and rev number 472803.
","09/Nov/06 08:02;bwellhoefer;I just had the idea whether trashing your ~/.m2/repository could make the issue reproducable on your side. May your local repo contains old jars that I do not get from the repo server.","09/Nov/06 08:13;jstrachan;I've tried trashing the local repo too - and it still works fine for me. I'm kinda mystified why its failing for you.","09/Nov/06 08:14;jstrachan;I guess we need someone else with a windows machine to trash their local repo and try again - it could be a windows-only-with-no-local-repo issue","09/Nov/06 08:20;bwellhoefer;jcdesrochers wrote (see http://www.nabble.com/Latest-4.1-SNAPSHOT-tf2516871.html) that for him the build also fails. You could ask him to help out.","09/Nov/06 15:22;michael.murphree;Greetings.  I'm trying to build 472933 and I'm experiencing a similar issue.  I'm building with Maven 2.0.4, Java 1.5.0_08, on Windows XP SP2, working behind a proxy / firewall.  I can get through Jaas, Core, Console, and web stuff, but mine collapses on XMPP.

I don't get quite as far as Bernhard does, however.  I fail with this error:

[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Unable to build project for plugin 'org.jvnet.jaxb2.maven2:maven-jaxb2-plugin': Error getting POM for 'org.jvnet.jaxb2.maven2:maven-jaxb2-plugin' from the repository: Error transferring file
  org.jvnet.jaxb2.maven2:maven-jaxb2-plugin:pom:0.1

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  codehaus (http://repository.codehaus.org/),
  apache.snapshots (http://people.apache.org/repo/m2-snapshot-repository),
  maven2-repository.dev.java.net (https://maven2-repository.dev.java.net/nonav/repository),
  maven-repository.dev.java.net (https://maven-repository.dev.java.net/nonav/repository),
  apache.incubating.releases (http://people.apache.org/repo/m2-incubating-repository)

I suspect this may be a Maven configuration issue, though.  I will attach the full Maven log.

Regards,

Michael

","09/Nov/06 15:23;michael.murphree;This log shows a build of revision 472933.","09/Nov/06 18:42;aco;I just did a fresh checkout of https://svn.apache.org/repos/asf/incubator/activemq/trunk with rev 473001.

Running in WinXP, did a mvn install -Dmaven.test.skip=true with a clean repo and it built successfully for me. :-/","09/Nov/06 18:43;aco;Also using maven-2.0.4 and java version ""1.5.0_07""","10/Nov/06 00:58;jlim;I did  a fresh checkout with rev 473056 and build against a clean repository.  Runnng Windows Server 2003, java version 1.5.0_05  and using maven 2.0.4. The build was also succesful for me when I did a mvn install -Dtest=

I wonder if this is a case of ibiblio sometimes  being overloaded?  If you  already have  downloaded the repository on your machine  before maybe you can try an offline mode for your build (ie. mvn -o ). ","10/Nov/06 09:05;bwellhoefer;A build using Debian Sarge works fine.

But a 4.2 ActiveMQ version was build, not a 4.1. As I said I'm trying to compile https://svn.apache.org/repos/asf/incubator/activemq/trunk which is regarding to http://www.activemq.org/site/source.html) the 4.1 SNAPSHOT version. I just detected that https://svn.apache.org/repos/asf/incubator/activemq/branches/activemq-4.1 exists. Is this the 4.1 tree?","16/Nov/06 12:38;nmittler;I was having a similar problem at work on my windows box, but it looks like we have a solution ... Thanks to Tim Bish!

It comes down to a proxy issue for https.  We had to set the environment variables ""https.proxyHost"" and ""https.proxyPort"". The proxy configuration in the maven settings.xml only seems to work for http, not https.

Once we defined those, it built just fine.

Hope this helps.","16/Nov/06 13:53;bwellhoefer;Hello Nathan,

hhmm I do not use a HTTP[s] proxy. So should I just set the host and port to an empty value? An why do I not need these settings under Debian in the same local network?

","07/Mar/07 14:03;jstrachan;Bernhard - do you still have  your maven build issues? FWIW it does seem like your issues are more to do with having issues on your platform running Maven rather than anything to do with the ActiveMQ build per se - I wonder if the Maven User List could help you nail any remaining Maven problems you've got?

http://maven.apache.org/mail-lists.html","07/Mar/07 15:20;bwellhoefer;James, yes I still have the problem building the ActiveMQ trunk sources. 

Since we did not localize the problem, we do not know whether the ActiveMQ build process or Maven causes the problem. If this is a Maven problem, then it is a very special one. We build all our projects with Maven and do not have any problems...","07/Mar/07 15:41;jstrachan;Am gonna mark this issue as resolved for now; as I'm not aware of anything actually wrong with the Maven build - rather Maven has some issue on your platform (which is an issue for Maven rather than ActiveMQ). If you're still struggling though, do let us know and we can try reopen this to track it ",,,,,,,,,,,,,
When in XA Transaction Active-MQ integrated with OpenEJB hangs in the isSameRM method of LocalAndXATransaction. ,AMQ-1438,12482377,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,djencks,manucet,manucet,03/Oct/07 07:29,07/Apr/08 22:16,30/Jan/20 16:57,07/Apr/08 22:16,4.1.1,,,,,,4.1.2,,,Connector,Transport,,,2," I was facing a problem with the AMQ 4.1 with the LocalAndXATransaction class's isSameRM waiting indefinitely. The wait is because waitForBrokerInfo calls brokerInfoReceived.await()
where brokerInfoReceived is a countdown latch. Once this is waiting it
never gets resumed.

To trigger it the method onCommand(final Object o) has to be called on
org.apache.activemq.ActiveMQConnection. 
",All,antoniogmc,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/07 06:45;manucet;AMQ-1438.patch;https://issues.apache.org/jira/secure/attachment/12460800/AMQ-1438.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-03-24 07:59:52.157,,,false,,,,,,,,,,,,,,,,,84538,,,Mon Apr 07 22:16:03 UTC 2008,,,,,,,,"0|i0rrpr:",160134,,,,,,,,,,,,,,,,,,,"03/Oct/07 07:45;manucet;https://issues.apache.org/jira/browse/OPENEJB-702 is blocked because of this","03/Oct/07 07:47;manucet;https://issues.apache.org/jira/browse/GERONIMO-3354 is depending on this ","10/Oct/07 06:45;manucet;This fixes the issue. Running the tests shows the same no of failures as before applying the patch so assuming it doesn't break anything.","11/Oct/07 10:43;manucet;I believe I owe an explanation for the JIRA.

The problem faced is a hang in the method below when the Geronimo TM calls it.

   public boolean isSameRM(XAResource other) throws XAException {
       if (other instanceof WrapperNamedXAResource) {
           return
xaResource.isSameRM(((WrapperNamedXAResource)other).xaResource);
       }
       return false;
   }

The hang is because this method invokes org,apache.activemq.ActiveMQConnection.getResourceManagerId()

This method is shown below

    public String getResourceManagerId() throws JMSException {
        waitForBrokerInfo();
        if( brokerInfo==null )
            throw new JMSException(""Connection failed before Broker info was received."");            
        return brokerInfo.getBrokerId().getValue();
    }

The waitForBrokerInfo() method is shown below

 private void waitForBrokerInfo() throws JMSException {
        try {
            brokerInfoReceived.await();
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
            throw JMSExceptionSupport.create(e);
        }
    }

Once await is called on brokerInfoReceived which is a countdown latch currently brokerInfoReceived.countDown() never gets called. Actually this should get called on the 
else if ( command.isBrokerInfo() ) {
                this.brokerInfo = (BrokerInfo)command;
                brokerInfoReceived.countDown();
                this.optimizeAcknowledge &= !this.brokerInfo.isFaultTolerantConfiguration();
            }

block of the onCommand method of org.apache.activemq.ActiveMQConnection.

This is not getting called. 

On investigating and with some help from AMQ IRC , I found that there are two methods in org.apache.activemq.transport.vm.VMTransport. They are given below

    protected void syncOneWay(Object command){
        final TransportListener tl=peer.transportListener;
        prePeerSetQueue=peer.prePeerSetQueue;
        if(tl==null){
            prePeerSetQueue.add(command);
        }else{
            tl.onCommand(command);
        }
    }
    
    protected void asyncOneWay(Object command) throws IOException{
        messageQueue=getMessageQueue();
        try{
            messageQueue.put(command);
            wakeup();
        }catch(final InterruptedException e){
            log.error(""messageQueue interupted"",e);
            throw new IOException(e.getMessage());
        }
    }

The problem here is even when i set async=true for the VMTransport when the command BrokerInfo is sent syncOneWay is called. At that time TransportListener tl=null. So it gets added to prePeerSetQueue. The reason for this happening is that in org.apache.activemq.transport.vm.VMTransportFactory when the below lines are called a brokerInfo is sent as server.connect() is called. The async=true is not yet set resulting in the syncOneWay getting called. Only after that IntrospectionSupport.setProperties(vmtransport,options); is called and async is set to true. Due to this inconsistency the BrokerInfo command gets lost.

VMTransport vmtransport=server.connect();
IntrospectionSupport.setProperties(vmtransport,options);

I hope I made the issue clear. Can someone verify the patch or make a fix for this.


","24/Mar/08 07:59;djencks;Applied modified version of the patch in rev 640340.  Passed options into server.connect method so that correct TransportAcceptListener is sure to be used.","07/Apr/08 22:16;djencks;Would be a good idea to check if it works in 5.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RecoveryListenerAdapter - Message id ID... could not be recovered from the data store!,AMQ-1445,12482248,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,sits,sits,05/Oct/07 06:30,21/Jan/08 14:52,30/Jan/20 16:57,21/Jan/08 14:52,5.0.0,,,,,,5.1.0,,,Message Store,,,,1,"My application works correctly with JDBC persistence using derby, or indeed with no persistence turned on.

If I use the AMQ store however, very early on in the application's run, I get the following error, and then my application hangs.  This happens for both the VM and TCP transports.

[VMTransport] 35346 ERROR org.apache.activemq.store.amq.RecoveryListenerAdapter - Message id ID:tamarama-60079-1191564856100-2:2:3:3:4 could not be recovered from the data store!

I have attached a debug trace of the application, which shows the lifetime of message tamarama-60079-1191564856100-2:2:3:3:4.


",,donv,lhotari,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/07 06:30;sits;ASF.LICENSE.NOT.GRANTED--log.txt;https://issues.apache.org/jira/secure/attachment/12460900/ASF.LICENSE.NOT.GRANTED--log.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-10-07 04:42:50.585,,,false,,,,,,,,,,,,,,,,,84691,,,Mon Jan 21 14:52:27 UTC 2008,,,,,,,,"0|i0rzvz:",161458,,,,,,,,,,,,,,,,,,,"05/Oct/07 06:38;sits;Forgot to mention: I observed this behaviour with revision 582029.


","07/Oct/07 04:42;rajdavies;Fixed by revision 582574","08/Oct/07 01:46;sits;Hi Rob,

Many thanks - I can confirm that this has fixed the issue.

Cheers,
David
","18/Jan/08 15:54;lhotari;I have this same problem with ActiveMQ 5.0.0 version that I downloaded 2 days ago. I don't think that this is fixed in the release build.

The log has only this row:
2008-01-18 17:29:10,769 [/127.0.0.1:2257] ERROR RecoveryListenerAdapter        - Message id ID:mycomputer-2250-1200669948525-0:1:30:8:1 could not be recovered from the data store!

ActiveMQ stalls after I do this: send 300 message to a queue, another app replies to each message to another queue.  There's a short delay and I after I try again it will always stall after the 1. message. Really strange. Restarting ActiveMQ doesn't help. The data directory has to be deleted.
The messages sent to the queue are non-persistent. I'm using Kaha store.

Both sides are using Jencks + ActiveMQ RA + Spring TransactionTemplate + JdbcTemplate. The receiving side uses Jencks POJO (inbound) + JDBCTemplate (Jencks outbound configuration), inside XA transaction using Spring Transaction configuration for Jencks. I tested with non-persistent and persistent messages and the result is the same.

I also tried Jdbc persistence (derby), but then some messages are lost (EOFException on client before problem, server side says that some acknowledge cannot be matched).

Maybe Jencks is causing problems? Are there test cases that use Jencks + ActiveMQ RA?","18/Jan/08 17:59;lhotari;Some other people also have this problem:
http://www.nabble.com/5.0-release-having-%22RecoveryListenerAdapter%22-error-that-stop-msg-fetching-tp14423016s2354p14423016.html","18/Jan/08 18:03;lhotari;maybe this is the same problem. it also contains a test case.","21/Jan/08 14:52;rajdavies;Resolved in trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock in Usage & Topic,AMQ-1475,12482121,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,aburgel,aburgel,23/Oct/07 15:12,21/Jan/08 14:23,30/Jan/20 16:57,21/Jan/08 14:23,5.0.0,,,,,,5.1.0,,,Broker,,,,0,"Found one Java-level deadlock:
=============================
""ActiveMQ Task"":
  waiting to lock monitor 0x081615fc (object 0xa3ba9c38, a java.util.LinkedList),
  which is held by ""ActiveMQ Transport: tcp:///192.168.1.119:40586""
""ActiveMQ Transport: tcp:///192.168.1.119:40586"":
  waiting to lock monitor 0x08161598 (object 0xa3badb80, a java.lang.Object),
  which is held by ""ActiveMQ Task""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Task"":
        at org.apache.activemq.broker.region.Topic$1.run(Topic.java:94)
        - waiting to lock <0xa3ba9c38> (a java.util.LinkedList)
        at org.apache.activemq.usage.Usage.fireEvent(Usage.java:255)
        - locked <0xa3badb80> (a java.lang.Object)
        at org.apache.activemq.usage.Usage.setPercentUsage(Usage.java:232)
        - locked <0xa3badb80> (a java.lang.Object)
        at org.apache.activemq.usage.MemoryUsage.decreaseUsage(MemoryUsage.java:149)
        at org.apache.activemq.command.Message.decrementReferenceCount(Message.java:602)
        - locked <0xa73f5628> (a org.apache.activemq.command.ActiveMQObjectMessage)
        at org.apache.activemq.broker.region.TopicSubscription$2.run(TopicSubscription.java:422)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:773)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:801)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:619)
""ActiveMQ Transport: tcp:///192.168.1.119:40586"":
        at org.apache.activemq.usage.Usage.notifyCallbackWhenNotFull(Usage.java:354)
        - waiting to lock <0xa3badb80> (a java.lang.Object)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:346)
        - locked <0xa3ba9c38> (a java.util.LinkedList)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:328)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:402)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:125)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:434)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:623)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:126)
        - locked <0xa5d116e8> (a org.apache.activemq.transport.InactivityMonitor$1)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:183)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:170)
        at java.lang.Thread.run(Thread.java:619)

using snapshot apache-activemq-5.0-20071022.150246-30

java 1.6.0_01 on linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-10-23 16:55:38.592,,,false,,,,,,,,,,,,,,,,,84686,,,Mon Jan 21 14:23:23 UTC 2008,,,,,,,,"0|i0s0b3:",161526,,,,,,,,,,,,,,,,,,,"23/Oct/07 16:55;nickysandhu;Interesting. Similar to the fix for 1467
Usage line #255 should probably be getExecutor.execute(callback); instead of callback.run() ?","21/Jan/08 14:23;rajdavies;Fixed by svn revision 613899",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can not unsubscribe topic,AMQ-1533,12481526,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,billrichard,billrichard,02/Jan/08 08:06,02/Jan/08 08:17,30/Jan/20 16:57,02/Jan/08 08:17,5.0.0,,,,,,5.1.0,,,Connector,,,,0,NullPointerException throw by org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore   removeSubscriberMessageContainer,all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-02 08:17:06.047,,,false,,,,,,,,,,,,,,,,,84664,,,Wed Jan 02 08:17:06 UTC 2008,,,,,,,,"0|i0rzuf:",161451,,,,,,,,,,,,,,,,,,,"02/Jan/08 08:17;rajdavies;Fixed by svn revision 608034",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HasPage overflow results in indexOutOfBoundsException in AMQStore,AMQ-1528,12482217,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,rajdavies,rajdavies,20/Dec/07 14:26,20/Dec/07 20:43,30/Jan/20 16:57,20/Dec/07 14:29,5.0.0,,,,,,5.1.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84667,,,Thu Dec 20 20:43:39 UTC 2007,,,,,,,,"0|i0rzu7:",161450,,,,,,,,,,,,,,,,,,,"20/Dec/07 14:29;rajdavies;Fixed by svn revision revision 605940","20/Dec/07 20:43;rajdavies;Also svn revision 606022 to fix a null pointer in page index overflow",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InactivityMonitor incorrectly assumes there isn't activity on a Transport,AMQ-1525,12482115,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,rajdavies,rajdavies,19/Dec/07 20:52,19/Dec/07 21:10,30/Jan/20 16:57,19/Dec/07 21:10,5.0.0,,,,,,5.1.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84668,,,Wed Dec 19 21:10:10 UTC 2007,,,,,,,,"0|i0s0an:",161524,,,,,,,,,,,,,,,,,,,"19/Dec/07 21:10;rajdavies;Fixed by SVN revision 605698",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock between ActiveMQTransport and ActiveMQScheduler,AMQ-1468,12482250,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,nickysandhu,nickysandhu,17/Oct/07 21:09,22/Oct/07 19:02,30/Jan/20 16:57,22/Oct/07 19:02,,,,,,,5.0.0,,,,,,,0,"The ActiveMQTransport thread waits on InactivityMonitor and the ActiveMQScheduler waits on ManagedTransportConnection and each thread owns the monitor on the other. Here are the details against svn rev # 585186
{code}
----------------------------------------------------------------------------------------------------------------------------------------------
Name: ActiveMQ Scheduler
State: BLOCKED on org.apache.activemq.broker.jmx.ManagedTransportConnection@1578fa owned by: ActiveMQ Transport: tcp:///167.235.7.27:4470
Total blocked: 8  Total waited: 1,931

Stack trace: 
org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:865)
org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:40)
org.apache.activemq.broker.TransportConnection.serviceTransportException(TransportConnection.java:206)
org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:185)
org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:155)
org.apache.activemq.transport.InactivityMonitor.writeCheck(InactivityMonitor.java:81)
   - locked org.apache.activemq.transport.InactivityMonitor$2@d7122b
org.apache.activemq.transport.InactivityMonitor$2.run(InactivityMonitor.java:56)
org.apache.activemq.thread.Scheduler$SchedulerTimerTask.run(Scheduler.java:36)
java.util.TimerThread.mainLoop(Timer.java:512)
java.util.TimerThread.run(Timer.java:462)

--------------------------------------------------------------------------------------------------------------------------------------------------
Name: ActiveMQ Transport: tcp:///167.235.7.27:4470
State: BLOCKED on org.apache.activemq.transport.InactivityMonitor$2@d7122b owned by: ActiveMQ Scheduler
Total blocked: 1  Total waited: 2

Stack trace: 
org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:135)
org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:82)
org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:91)
org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
   - locked java.lang.Object@1738e80
org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1147)
org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:766)
org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:727)
org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:459)
   - locked org.apache.activemq.broker.region.QueueSubscription@ddca7a
org.apache.activemq.broker.region.QueueSubscription.dispatch(QueueSubscription.java:166)
org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:123)
   - locked org.apache.activemq.broker.region.QueueSubscription@ddca7a
org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:252)
   - locked java.util.LinkedList@f1e312
   - locked org.apache.activemq.broker.region.Queue@1c20eb2
org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:262)
   - locked java.lang.Object@72b85b
org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:335)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:79)
org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:525)
   - locked org.apache.activemq.broker.jmx.ManagedTransportConnection@1578fa
org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:334)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:124)
   - locked org.apache.activemq.transport.InactivityMonitor$1@1e9f5b1
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:183)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:170)
java.lang.Thread.run(Thread.java:619)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/07 17:04;nickysandhu;patch-deadlock-inactivitymonitor.txt;https://issues.apache.org/jira/secure/attachment/12460873/patch-deadlock-inactivitymonitor.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-10-19 19:20:50.187,,,false,,,,,,,,,,,,,,,,,95795,,,Mon Oct 22 19:02:35 UTC 2007,,,,,,,,"0|i0s04v:",161498,,,,,,,,,,,,,,,,,,,"18/Oct/07 17:04;nickysandhu;This works... strategy of using a spawned thread to do the cleanup","19/Oct/07 19:20;rajdavies;Hiram - noticed you just looked at InactivityMonitor - is this patch still valid ?","22/Oct/07 18:44;chirino;Update wiki formating of description for better viewing","22/Oct/07 19:01;chirino;Yeah patch was not really applicable since synchronization are now more fine gained.","22/Oct/07 19:02;chirino;need to assing fix for version.","22/Oct/07 19:02;chirino;resolved.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock between FilePendingMessageCursor and MemoryUsage,AMQ-1467,12482116,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,nickysandhu,nickysandhu,16/Oct/07 16:16,19/Oct/07 19:07,30/Jan/20 16:57,19/Oct/07 19:07,,,,,,,5.0.0,,,Broker,,,,0,"Deadlock detected by jconsole. Fairly easy to reproduce with a maven-perf-test-plugin using journaled jdbc persistence. Using the latest 5.0-SNAPSHOT build


ActiveMQ Task
Name: ActiveMQ Task
State: BLOCKED on java.lang.Object@1ba1894 owned by: ActiveMQ Transport: tcp:///167.235.7.27:4215
Total blocked: 1,001  Total waited: 1,002

Stack trace: 
org.apache.activemq.usage.MemoryUsage.increaseUsage(MemoryUsage.java:126)
org.apache.activemq.usage.MemoryUsage.increaseUsage(MemoryUsage.java:122)
org.apache.activemq.command.Message.incrementReferenceCount(Message.java:585)
org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:198)
   - locked org.apache.activemq.broker.region.cursors.FilePendingMessageCursor@1347d75
org.apache.activemq.broker.region.cursors.StoreQueueCursor.next(StoreQueueCursor.java:129)
   - locked org.apache.activemq.broker.region.cursors.StoreQueueCursor@14f3d22
org.apache.activemq.broker.region.Queue.buildList(Queue.java:1020)
   - locked org.apache.activemq.broker.region.cursors.StoreQueueCursor@14f3d22
   - locked org.apache.activemq.broker.region.Queue@1b2591c
org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1002)
org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1065)
org.apache.activemq.broker.region.Queue.iterate(Queue.java:938)
org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
java.lang.Thread.run(Thread.java:619)

ActiveMQ Transport: tcp://....:xxxx
Name: ActiveMQ Transport: tcp:///167.235.7.27:4215
State: BLOCKED on org.apache.activemq.broker.region.cursors.FilePendingMessageCursor@1347d75 owned by: ActiveMQ Task
Total blocked: 46  Total waited: 2

Stack trace: 
org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.onUsageChanged(FilePendingMessageCursor.java:260)
org.apache.activemq.usage.Usage.fireEvent(Usage.java:254)
org.apache.activemq.usage.Usage.setPercentUsage(Usage.java:224)
   - locked java.lang.Object@1ba1894
org.apache.activemq.usage.MemoryUsage.decreaseUsage(MemoryUsage.java:149)
org.apache.activemq.usage.MemoryUsage.decreaseUsage(MemoryUsage.java:142)
org.apache.activemq.command.Message.decrementReferenceCount(Message.java:601)
   - locked org.apache.activemq.command.ActiveMQTextMessage@960b08
org.apache.activemq.broker.region.IndirectMessageReference.drop(IndirectMessageReference.java:137)
   - locked org.apache.activemq.broker.region.IndirectMessageReference@ae7918
org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:56)
org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:193)
   - locked org.apache.activemq.broker.region.QueueSubscription@1e13a2c
org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:340)
org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:427)
org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:478)
org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:319)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:216)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:124)
   - locked org.apache.activemq.transport.InactivityMonitor$1@10e2558
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:183)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:170)
java.lang.Thread.run(Thread.java:619)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/07 17:26;nickysandhu;patch-usage-fireevent.txt;https://issues.apache.org/jira/secure/attachment/12460871/patch-usage-fireevent.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-10-18 14:09:15.92,,,false,,,,,,,,,,,,,,,,,95794,,,Fri Oct 19 19:07:42 UTC 2007,,,,,,,,"0|i0s053:",161499,,,,,,,,,,,,,,,,,,,"16/Oct/07 16:52;nickysandhu;The above stack trace could not be correlated to revision number. here's the stack trace with activemq-core revision # 585186
----------------- Thread : ActiveMQ Task ----------------------------------
Name: ActiveMQ Task
State: BLOCKED on java.lang.Object@fcc6e8 owned by: ActiveMQ Transport: tcp:///167.235.7.27:4773
Total blocked: 4,249  Total waited: 4,257

Stack trace: 
org.apache.activemq.usage.MemoryUsage.decreaseUsage(MemoryUsage.java:146)
org.apache.activemq.usage.MemoryUsage.decreaseUsage(MemoryUsage.java:142)
org.apache.activemq.command.Message.decrementReferenceCount(Message.java:602)
   - locked org.apache.activemq.command.ActiveMQTextMessage@450ae7
org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.remove(FilePendingMessageCursor.java:209)
   - locked org.apache.activemq.broker.region.cursors.FilePendingMessageCursor@166c37e
org.apache.activemq.broker.region.cursors.StoreQueueCursor.remove(StoreQueueCursor.java:135)
   - locked org.apache.activemq.broker.region.cursors.StoreQueueCursor@cece16
org.apache.activemq.broker.region.Queue.buildList(Queue.java:1021)
   - locked org.apache.activemq.broker.region.cursors.StoreQueueCursor@cece16
   - locked org.apache.activemq.broker.region.Queue@156f770
org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1002)
org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1065)
org.apache.activemq.broker.region.Queue.iterate(Queue.java:938)
org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
java.lang.Thread.run(Thread.java:619)

------------------ Thread ActiveMQ Transport ---------------------------------------
Name: ActiveMQ Transport: tcp:///167.235.7.27:4773
State: BLOCKED on org.apache.activemq.broker.region.cursors.FilePendingMessageCursor@166c37e owned by: ActiveMQ Task
Total blocked: 69  Total waited: 0

Stack trace: 
org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.onUsageChanged(FilePendingMessageCursor.java:260)
org.apache.activemq.usage.Usage.fireEvent(Usage.java:254)
org.apache.activemq.usage.Usage.setPercentUsage(Usage.java:224)
   - locked java.lang.Object@fcc6e8
org.apache.activemq.usage.MemoryUsage.decreaseUsage(MemoryUsage.java:149)
org.apache.activemq.usage.MemoryUsage.decreaseUsage(MemoryUsage.java:142)
org.apache.activemq.command.Message.decrementReferenceCount(Message.java:602)
   - locked org.apache.activemq.command.ActiveMQTextMessage@13c2797
org.apache.activemq.broker.region.IndirectMessageReference.drop(IndirectMessageReference.java:137)
   - locked org.apache.activemq.broker.region.IndirectMessageReference@4b5011
org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:56)
org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:193)
   - locked org.apache.activemq.broker.region.QueueSubscription@5cb0bb
org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:340)
org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:427)
org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:440)
org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:124)
   - locked org.apache.activemq.transport.InactivityMonitor$1@1b8b810
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:183)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:170)
java.lang.Thread.run(Thread.java:619)
","16/Oct/07 17:26;nickysandhu;Taking a page from the Swing/AWT event dispatch book I started a new thread for actually notifiying the listeners. This avoids this and other potential callback deadlocks for Usage.

Reran the load tests using maven-perftest-plugin and things seem to be stable so far","18/Oct/07 14:09;rajdavies;Fixed by svn revision 585967","18/Oct/07 20:14;nickysandhu;Deadlocked again.... I uncommented these lines @ line # 272 in Usage.java
            getExecutor().execute(listenerNotifier);

And now it seems to work great. Please fix. ","19/Oct/07 19:05;rajdavies;DOH! can't believe I did that! - I was chasing down another bug","19/Oct/07 19:07;rajdavies;svn revision 586581",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate messages dispatched when using AMQ Store,AMQ-1452,12482107,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,sits,sits,09/Oct/07 05:21,19/Oct/07 19:02,30/Jan/20 16:57,19/Oct/07 19:02,5.0.0,,,,,,5.0.0,,,Message Store,,,,0,"This issue was originally reported on activemq-user here: http://www.nabble.com/Duplicate-message-delivered-to-consumers-on-queue-with-kaha-persistence-tf4560327s2354.html.

When I initially reported this issue, Rob suggested to not use Kaha persistence, but using the AMQ store.  This seemed to resolve the issue.

Unfortunately, I have seen another situation where a duplicate message is being re-delivered, it turns out to the same consumer.  I have tried in vain to create a unit test to reproduce this, but have been unable to do so.

The offending message ID is ID:tamarama-63606-1191905255404-2:2:3:3:1, and if you look at the attached debug trace, you can see it being sent to a queue, read from a queue, and then being dispatched a second time.  The same worker thread in this case was the producer and the consumer of message.

This issue does not occur when persistence is not enabled.

This is seen with revision 583015.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/07 05:21;sits;ASF.LICENSE.NOT.GRANTED--duplicate.log;https://issues.apache.org/jira/secure/attachment/12460777/ASF.LICENSE.NOT.GRANTED--duplicate.log",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-10-19 19:02:34.891,,,false,,,,,,,,,,,,,,,,,84689,,,Fri Oct 19 19:02:34 UTC 2007,,,,,,,,"0|i0s0af:",161523,,,,,,,,,,,,,,,,,,,"19/Oct/07 19:02;rajdavies;Fixed by svn revision 586580",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect redelivery behavior and counters,AMQ-1038,12482156,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,sbate,sbate,09/Nov/06 20:20,03/Oct/07 23:34,30/Jan/20 16:57,03/Oct/07 23:34,4.0.1,,,,,,5.0.0,,,,,,,1,"Our understanding is that the RedeliveryPolicy maxRedeliveryCount controls the maximum number of times a message will be redelivered (assumed to be a global count and not a per-consumer count). The behavior we are seeing is that messages are redelivered more times than we specified. The problem may be related to the way the redelivery counter is being maintained. We see the redelivery counter incrementing by one for redeliveries to a specific consumer, but then it resets to a lower number when the message is redelivered to a different consumer.

I have attached a test case to demonstrate the problem. The first test is a simple baseline example that passes. The second test shows that messages are being redelivered too many times for the redelivery policy. The third tests catches a regression in the delivery count (redelivery count + 1) when sending a rolled back message to a new consumer.

The test suite uses an embedded broker using the VM protocol so it should be standalone.","Windows XP Pro
java version ""1.5.0_06""
",sbate,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/06 20:20;sbate;ASF.LICENSE.NOT.GRANTED--RedeliveryTest.java;https://issues.apache.org/jira/secure/attachment/12460555/ASF.LICENSE.NOT.GRANTED--RedeliveryTest.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-01-19 20:55:09.159,,,false,,,,,,,,,,,,,,,,,84370,,,Wed Oct 03 23:34:59 UTC 2007,,,,,,,,"0|i0rzvr:",161457,,,,,,,,,,,,,,,,,,,"19/Jan/07 20:55;memelet;Any chance that this will get some attention? The current behavior pretty much requires that redelivery be implemented in client code by incrementing a message property and putting a cloned message back on the queue.","03/Oct/07 23:34;chirino;We have now fixed this in rev 581747.  

The test case need to be sightly adjusted because every time rollback() occurs the redelivery counter is increased and when the consumer  holding the dispatched message is closed, the redelivery counter is also increased.  So by the time the fist consumer in the test case closes out it's session, the message will be marked redelivered as 4 times (test case assumes it will only be redelivered 3 times, 1 for each rollback).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ 4.1 branch faied to build,AMQ-1239,12481262,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,mickolka,mickolka,01/May/07 10:32,01/May/07 12:54,30/Jan/20 16:57,01/May/07 12:54,4.1.0,,,,,,,,,,,,,0,"Seems like not committed file :(
Build log

H:\workspace\activemq-4.1>mvn -Dmaven.test.skip=true install
[INFO] Scanning for projects...
[INFO] Reactor build order:
[INFO]   ActiveMQ
[INFO]   ActiveMQ :: JAAS
[INFO]   ActiveMQ :: Core
[INFO]   ActiveMQ :: Console
[INFO]   Openwire Generator
[INFO]   ActiveMQ :: Optional
[INFO]   ActiveMQ :: RA
[INFO]   ActiveMQ :: RAR
[INFO]   ActiveMQ :: Atomikos System Test
[INFO]   ActiveMQ Tooling
[INFO]   ActiveMQ :: Memory Usage Test Plugin
[INFO]   ActiveMQ :: Performance Test Plugin
[INFO]   ActiveMQ :: StartUp Plugin
[INFO]   ActiveMQ :: Web
[INFO]   ActiveMQ :: Web Demo
[INFO]   ActiveMQ :: XMPP
[INFO]   ActiveMQ :: Web Console
[INFO]   ActiveMQ :: Assembly
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ
[INFO]    task-segment: [install]
[INFO] ----------------------------------------------------------------------------
[INFO] [site:attach-descriptor]
[INFO] [install:install]
[INFO] Installing H:\workspace\activemq-4.1\pom.xml to C:\Documents and Settings\Mykola Palienko\.m2\repository\org\apa
he\activemq\activemq-parent\4.1-SNAPSHOT\activemq-parent-4.1-SNAPSHOT.pom
[INFO] [maven-one-plugin:install-maven-one-repository {execution: default}]
[INFO] Installing H:\workspace\activemq-4.1\pom.xml to C:\Documents and Settings\Mykola Palienko\.maven\repository\org.
pache.activemq\poms\activemq-parent-4.1-SNAPSHOT.pom
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ :: JAAS
[INFO]    task-segment: [install]
[INFO] ----------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
Downloading: http://people.apache.org/repo/m2-incubating-repository/directory-protocols/kerberos-protocol/0.5/kerberos-
rotocol-0.5.pom
Downloading: http://repo1.maven.org/maven2/directory-protocols/kerberos-protocol/0.5/kerberos-protocol-0.5.pom
Downloading: http://people.apache.org/repo/m2-incubating-repository/directory-protocols/ldap-protocol/0.9.2/ldap-protoc
l-0.9.2.pom
Downloading: http://repo1.maven.org/maven2/directory-protocols/ldap-protocol/0.9.2/ldap-protocol-0.9.2.pom
[INFO] [compiler:compile]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:testCompile]
[INFO] Not compiling test sources
[INFO] [surefire:test]
[INFO] Tests are skipped.
[INFO] [jar:jar]
[INFO] Building jar: H:\workspace\activemq-4.1\activemq-jaas\target\activemq-jaas-4.1-SNAPSHOT.jar
[INFO] [install:install]
[INFO] Installing H:\workspace\activemq-4.1\activemq-jaas\target\activemq-jaas-4.1-SNAPSHOT.jar to C:\Documents and Set
ings\Mykola Palienko\.m2\repository\org\apache\activemq\activemq-jaas\4.1-SNAPSHOT\activemq-jaas-4.1-SNAPSHOT.jar
[INFO] [maven-one-plugin:install-maven-one-repository {execution: default}]
[INFO] Installing H:\workspace\activemq-4.1\activemq-jaas\target\activemq-jaas-4.1-SNAPSHOT.jar to C:\Documents and Set
ings\Mykola Palienko\.maven\repository\org.apache.activemq\jars\activemq-jaas-4.1-SNAPSHOT.jar
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Core
[INFO]    task-segment: [install]
[INFO] ----------------------------------------------------------------------------
[INFO] artifact org.codehaus.mojo:build-helper-maven-plugin: checking for updates from apache.incubating.releases
[WARNING] While downloading javacc:javacc:3.2
  This artifact has been relocated to net.java.dev.javacc:javacc:3.2.


[INFO] [javacc:javacc {execution: default}]
[INFO] Nothing to process - all grammars are up to date
[INFO] [xbean:mapping {execution: default}]
Checking: org.apache.activemq.memory.UsageManager
Checking: org.apache.activemq.store.rapid.RapidPersistenceAdapter
Checking: org.apache.activemq.store.jdbc.adapter.ImageBasedJDBCAdaptor
Checking: org.apache.activemq.store.jdbc.adapter.InformixJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.StreamJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.AxionJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.BlobJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.OracleJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.BytesJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.DB2JDBCAdapter
Checking: org.apache.activemq.store.jdbc.Statements
Checking: org.apache.activemq.store.jdbc.JDBCPersistenceAdapter
Checking: org.apache.activemq.store.memory.MemoryPersistenceAdapter
Checking: org.apache.activemq.store.journal.JournalPersistenceAdapter
Checking: org.apache.activemq.store.journal.QuickJournalPersistenceAdapter
Checking: org.apache.activemq.store.kahadaptor.KahaPersistenceAdapter
Checking: org.apache.activemq.store.PersistenceAdapterFactoryBean
Checking: org.apache.activemq.xbean.XBeanBrokerService
Checking: org.apache.activemq.spring.ActiveMQConnectionFactory
Checking: org.apache.activemq.spring.ActiveMQXAConnectionFactory
Checking: org.apache.activemq.security.LDAPAuthorizationMap
Checking: org.apache.activemq.security.JaasCertificateAuthenticationPlugin
Checking: org.apache.activemq.security.DefaultAuthorizationMap
Checking: org.apache.activemq.security.SimpleAuthenticationPlugin
Checking: org.apache.activemq.security.SimpleAuthorizationMap
Checking: org.apache.activemq.security.AuthorizationPlugin
Checking: org.apache.activemq.security.AuthorizationEntry
Checking: org.apache.activemq.security.JaasAuthenticationPlugin
Checking: org.apache.activemq.proxy.ProxyConnector
Checking: org.apache.activemq.broker.region.virtual.CompositeTopic
Checking: org.apache.activemq.broker.region.virtual.VirtualTopic
Checking: org.apache.activemq.broker.region.virtual.CompositeQueue
Checking: org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor
Checking: org.apache.activemq.broker.region.group.SimpleMessageGroupMapFactory
Checking: org.apache.activemq.broker.region.group.MessageGroupHashBucketFactory
Checking: org.apache.activemq.broker.region.policy.FixedSizedSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.StrictOrderDispatchPolicy
Checking: org.apache.activemq.broker.region.policy.TimedSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.VMPendingQueueMessageStoragePolicy
Checking: org.apache.activemq.broker.region.policy.PrefetchRatePendingMessageLimitStrategy
Checking: org.apache.activemq.broker.region.policy.QueryBasedSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy
Checking: org.apache.activemq.broker.region.policy.LastImageSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.FixedCountSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.OldestMessageWithLowestPriorityEvictionStrategy
Checking: org.apache.activemq.broker.region.policy.NoSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.FilePendingDurableSubscriberMessageStoragePolicy
Checking: org.apache.activemq.broker.region.policy.PolicyEntry
Checking: org.apache.activemq.broker.region.policy.RoundRobinDispatchPolicy
Checking: org.apache.activemq.broker.region.policy.OldestMessageEvictionStrategy
Checking: org.apache.activemq.broker.region.policy.VMPendingDurableSubscriberMessageStoragePolicy
Checking: org.apache.activemq.broker.region.policy.ConstantPendingMessageLimitStrategy
Checking: org.apache.activemq.broker.region.policy.SharedDeadLetterStrategy
Checking: org.apache.activemq.broker.region.policy.SimpleDispatchPolicy
Checking: org.apache.activemq.broker.region.policy.PolicyMap
Checking: org.apache.activemq.broker.region.policy.StorePendingDurableSubscriberMessageStoragePolicy
Checking: org.apache.activemq.broker.jmx.ManagementContext
Checking: org.apache.activemq.broker.ft.MasterConnector
Checking: org.apache.activemq.broker.view.ConnectionDotFilePlugin
Checking: org.apache.activemq.broker.view.DestinationDotFilePlugin
Checking: org.apache.activemq.broker.util.TimeStampingBrokerPlugin
Checking: org.apache.activemq.broker.util.MulticastTraceBrokerPlugin
Checking: org.apache.activemq.broker.util.LoggingBrokerPlugin
Checking: org.apache.activemq.broker.util.UDPTraceBrokerPlugin
Checking: org.apache.activemq.broker.util.CommandAgent
Checking: org.apache.activemq.broker.TransportConnector
Checking: org.apache.activemq.network.jms.InboundQueueBridge
Checking: org.apache.activemq.network.jms.OutboundQueueBridge
Checking: org.apache.activemq.network.jms.JmsTopicConnector
Checking: org.apache.activemq.network.jms.JmsQueueConnector
Checking: org.apache.activemq.network.jms.InboundTopicBridge
Checking: org.apache.activemq.network.jms.SimpleJmsMessageConvertor
Checking: org.apache.activemq.network.jms.OutboundTopicBridge
Checking: org.apache.activemq.network.ForwardingBridge
Checking: org.apache.activemq.network.DemandForwardingBridge
Checking: org.apache.activemq.network.MulticastNetworkConnector
Checking: org.apache.activemq.network.CompositeDemandForwardingBridge
Checking: org.apache.activemq.network.DiscoveryNetworkConnector
Checking: org.apache.activemq.command.ActiveMQQueue
Checking: org.apache.activemq.command.ActiveMQTopic
Checking: org.apache.activemq.filter.DefaultDestinationMapEntry
Checking: org.apache.activemq.ActiveMQPrefetchPolicy
Checking: org.apache.activemq.RedeliveryPolicy
[INFO] Generating META-INF properties file: H:\workspace\activemq-4.1\activemq-core\target\xbean\META-INF\services\org\
pache\xbean\spring\http\activemq.org\config\1.0 for namespace: http://activemq.org/config/1.0
[INFO] Generating Spring 2.0 handler mapping: H:\workspace\activemq-4.1\activemq-core\target\xbean\META-INF\spring.hand
ers for namespace: http://activemq.org/config/1.0
[INFO] Generating Spring 2.0 schema mapping: H:\workspace\activemq-4.1\activemq-core\target\xbean\META-INF\spring.schem
s for namespace: http://activemq.org/config/1.0
[INFO] Generating HTML documentation file: H:\workspace\activemq-4.1\activemq-core\target\xbean\activemq.xsd.html for n
mespace: http://activemq.org/config/1.0
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.security.AuthorizationEntry: java.lang.ClassNotFoundException: org.a
ache.activemq.security.AuthorizationEntry
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.network.DemandForwardingBridgeSupport: java.lang.ClassNotFoundExcept
on: org.apache.activemq.network.DemandForwardingBridgeSupport
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.broker.region.policy.PolicyEntry: java.lang.ClassNotFoundException:
rg.apache.activemq.broker.region.policy.PolicyEntry
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
[INFO] Generating XSD file: H:\workspace\activemq-4.1\activemq-core\target\xbean\activemq.xsd for namespace: http://act
vemq.org/config/1.0
[INFO] Generating WIKI documentation file: H:\workspace\activemq-4.1\activemq-core\target\xbean\activemq.xsd.wiki for n
mespace: http://activemq.org/config/1.0
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.NetworkConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.NetworkConnector
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.network.jms.InboundQueueBridge: java.lang.ClassNotFoundException: or
.apache.activemq.network.jms.InboundQueueBridge
Warning, could not load class: org.apache.activemq.network.jms.OutboundQueueBridge: java.lang.ClassNotFoundException: o
g.apache.activemq.network.jms.OutboundQueueBridge
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
[INFO] ...done.
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:compile]
[INFO] Compiling 329 source files to H:\workspace\activemq-4.1\activemq-core\target\classes
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure

H:\workspace\activemq-4.1\activemq-core\src\main\java\org\apache\activemq\thread\Scheduler.java:[55,34] cannot find sym
ol
symbol  : class RunnableScheduledFuture
location: class org.apache.activemq.thread.Scheduler

H:\workspace\activemq-4.1\activemq-core\src\main\java\org\apache\activemq\thread\Scheduler.java:[56,33] cannot find sym
ol
symbol  : class RunnableScheduledFuture
location: class org.apache.activemq.thread.Scheduler


[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 minutes 28 seconds
[INFO] Finished at: Tue May 01 13:15:49 EEST 2007
[INFO] Final Memory: 26M/55M
[INFO] ------------------------------------------------------------------------","WinXP maven 2.0.6, revision 533993",mickolka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-05-01 12:54:42.735,,,false,,,,,,,,,,,,,,,,,84455,,,Tue May 01 12:54:42 UTC 2007,,,,,,,,"0|i0rzzz:",161476,,,,,,,,,,,,,,,,,,,"01/May/07 10:45;mickolka;Scheduler.java does not contain import RunnableScheduledFuture
How is this possible to commit code that does not compile?
do you use continuous integration in AMQ for all major branches?. 
I see it is open source but there are many open source projects with a good quality.","01/May/07 10:51;mickolka;please add
import edu.emory.mathcs.backport.java.util.concurrent.RunnableScheduledFuture;
to the Scheduled.java, 

and please use continuous integration for major branches, having maven scripts it should be very easy","01/May/07 12:54;jstrachan;the Java 6 code is now removed from trunk and 4.1 branches",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduler.cancel uses incorrect argument to shutdown threads,AMQ-1235,12481887,12482234,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,aburgel,aburgel,24/Apr/07 13:03,01/May/07 12:51,30/Jan/20 16:57,30/Apr/07 13:17,4.1.1,,,,,,4.1.2,5.0.0,,,,,,0,"looking at the code from 4.1.1 in org.apache.activemq.thread.Scheduler, in the cancel method:

the Runnable task argument is passed to clockDaemon.remove(). i think this is incorrect. ScheduledFuture ticket should be passed to clockDaemon.remove().

the javadocs of ScheduledThreadPoolExecutor.remove discuss the possibility that Runnables might be stored in some other form internally, so calling remove with a plain Runnable might not do anything. I think the solution is to call remove with a ScheduledFuture, which is how they are stored internally in ScheduledThreadPoolExecutor.


i came across this bug after upgrading to the java 5 version of backport-util-concurrent 3.0. that version makes more assumptions about the types that are passed into ScheduledThreadPoolExecutor.remove, so when you pass in a regular Runnable you'll get a ClassCastException.


this is trivial to fix, so i don't think a patch is necessary. also i think this might address the memory leak mentioned in AMQ-1205",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Apr/07 21:42;aburgel;scheduler.patch;https://issues.apache.org/jira/secure/attachment/12460999/scheduler.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-04-30 13:17:57.881,,,false,,,,,,,,,,,,,,,,,84581,,,Tue May 01 12:51:46 UTC 2007,,,,,,,,"0|i0s09j:",161519,,,,,,,,,,,,,,,,,,,"24/Apr/07 21:11;aburgel;a quick clarification....

you can't call ScheduledThreadPoolExecutor.remove with a ScheduledFuture, because it expects a Runnable.

two alternatives are

1) don't call ScheduledThreadPoolExecutor.remove at all... which is equivalent to the current behavior, tho this wil leave the executor with lots of cancelled tasks (see AMQ-1205)

2) cast ticket to RunnableScheduledFuture, and call remove on that. this will work because in this case ticket is a RunnableScheduledFuture, tho its probably worthwhile adding an instanceof check just to be sure.","24/Apr/07 21:42;aburgel;here's a patch.","30/Apr/07 13:17;chirino;Good patch!  Thanks for figuring this out.  Applied.","01/May/07 12:51;jstrachan;I made an amendment to the patch to check for instanceof Runnable rather than RunnableScheduledFuture which is a Java 6 specific class",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failing to acquire exclusive lock - MySQL and other strange errors,AMQ-1236,12481982,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,mickolka,mickolka,26/Apr/07 07:09,30/Apr/07 12:41,30/Jan/20 16:57,30/Apr/07 12:41,4.1.1,,,,,,4.1.2,5.0.0,,Message Store,,,,0,"The issue prevents us from using AMQ 
discussion http://www.nabble.com/Failing-to-acquire-exclusive-lock---MySQL-t3598830s2354.html#a10051767

I'm new to ActiveMQ so probably I misconfigure it somehow.
Problem: I'm trying to setup jdbcPersistenceAdapter in AMQ 4.1.1 to store journal into the MySQL 5.0.24 with Connector mysql-connector-java-5.0.4 under Windows XP
My config file is very simple

------------------------CONFIG-------------------------------

<beans>

  <!-- Allows us to use system properties as variables in this configuration file -->
  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
 
  <broker brokerName=""localhost"" useJmx=""true"" xmlns=""http://activemq.org/config/1.0"">
 
    <!--  Use the following to set the broker memory limit
    <memoryManager>  
        <usageManager id=""memory-manager"" limit=""20 MB""/>
    </memoryManager>
    -->
   
    <!-- Use the following to configure how ActiveMQ is exposed in JMX
    <managementContext>
       <managementContext connectorPort=""1099"" jmxDomainName=""org.apache.activemq""/>
    </managementContext>
    -->

 
 
    <persistenceAdapter>
      <jdbcPersistenceAdapter dataSource=""#mysql-ds""/>
    </persistenceAdapter>
 
    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/>
       <transportConnector name=""ssl""     uri=""ssl://localhost:61617""/>
       <transportConnector name=""stomp""   uri=""stomp://localhost:61613""/>
    </transportConnectors>
   
    <networkConnectors>
      <!-- by default just auto discover the other brokers -->
      <networkConnector name=""default-nc"" uri=""multicast://default""/>
      <!--
      <networkConnector name=""host1 and host2"" uri=""static://(tcp://host1:61616,tcp://host2:61616)"" failover=""true""/>
      -->
    </networkConnectors>
   
  </broker>
 
  <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
    <property name=""url"" value=""jdbc:mysql://localhost/sonoportal?relaxAutoCommit=true&profileSQL=true""/>
    <property name=""username"" value=""root""/>
    <property name=""password"" value=""""/>
    <property name=""poolPreparedStatements"" value=""true""/>
  </bean>

</beans>
------------------------ END CONFIG-------------------------------

I've also set profileSQL=true to be able to debug the reason of the problem
As a result I have following error log in ActiveMQ window console


---------------------------- LOG ---------------------------------


D:\java\tools\apache-activemq-4.1.1\bin>activemq.bat
ACTIVEMQ_HOME: D:\java\tools\apache-activemq-4.1.1\bin\..
ACTIVEMQ_BASE: D:\java\tools\apache-activemq-4.1.1\bin\..
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - ActiveMQ 4.1.1 JMS Message Broker (localhost) is starting
INFO  BrokerService                  - For help or more information please see: http://incubator.apache.org/activemq/
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET NAMES latin1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 47 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET character_set_results = NULL
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 1, resultset-id: 1, message: SHOW VARIABLES
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 1, resultset-id: 1
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 1, resultset-id: 1, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW VARIABLES

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.loadServerVariables(Connection.java:4317)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3936)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:881)
        at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:855)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 2, resultset-id: 2, message: SHOW COLLATION
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 2, resultset-id: 2
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 2, resultset-id: 2, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW COLLATION

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.buildCollationMapping(Connection.java:1645)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3938)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:881)
        at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:855)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 312, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 312, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 312, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 16 ms, connection-id: 312, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET NAMES latin1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET character_set_results = NULL
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 3, resultset-id: 3, message: SHOW VARIABLES
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 3, resultset-id: 3
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 3, resultset-id: 3, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW VARIABLES

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.loadServerVariables(Connection.java:4317)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3936)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)
        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:95)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 4, resultset-id: 4, message: SHOW COLLATION
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 4, resultset-id: 4
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 4, resultset-id: 4, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW COLLATION

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.buildCollationMapping(Connection.java:1645)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3938)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)
        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:95)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
INFO  JDBCPersistenceAdapter         - Database driver recognized: [mysql-ab_jdbc_driver]
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.j
ava:72) duration: 0 ms, connection-id: 313, statement-id: 5, resultset-id: 5, message: SHOW FULL TABLES FROM `sonoportal` LIKE 'ACTIVEMQ_MSGS'
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.j
ava:72) duration: 0 ms, connection-id: 313, statement-id: 5, resultset-id: 5
Wed Apr 25 14:38:20 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.j
ava:72) duration: 0 ms, connection-id: 313, statement-id: 5, resultset-id: 5, message: The following query was executed with a bad index, use 'EXPLAIN' for more
 details: SHOW FULL TABLES FROM `sonoportal` LIKE 'ACTIVEMQ_MSGS'

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.DatabaseMetaData$9.forEach(DatabaseMetaData.java:4379)
        at com.mysql.jdbc.DatabaseMetaData$IterateBlock.doForAll(DatabaseMetaData.java:76)
        at com.mysql.jdbc.DatabaseMetaData.getTables(DatabaseMetaData.java:4357)
        at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.java:72)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:159)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: commit
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: commit
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: commit
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:220) duration
: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: rollback
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:220) duration
: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:21 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:21 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:22 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:22 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:23 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:23 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0



---------------------------- END LOG ---------------------------------


All mentioned in errors commands are easily executed from MySQL Console. Tables are get created in the schema, I've no idea about what problem is. Has anyone tried to run it with MySQL persistence?

Thanks in advance for any help.

",AMQ 4.1.1 MySQL 5.0.24 mysql-connector-java-5.0.4 under Windows XP,mickolka,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-04-30 12:41:40.451,,,false,,,,,,,,,,,,,,,,,84580,,,Mon Apr 30 12:41:40 UTC 2007,,,,,,,,"0|i0s02v:",161489,,,,,,,,,,,,,,,,,,,"30/Apr/07 12:41;jstrachan;This issue has been fixed for some time in 4.2 trunk. I've just applied the patch to 4.1 branch too for the next 4.1.2 release.

rev: 533725",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connections are not being properly disposed of.,AMQ-1211,12481919,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,janv,janv,20/Mar/07 23:10,20/Mar/07 23:17,30/Jan/20 16:57,20/Mar/07 23:17,4.1.1,,,,,,,,,,,,,0,"The connection pool on the broker grew until no more connections could be made.  I did notice, that the connections that were supposed to have been disposed, have their ConnectionId set to 'Unavailable' when viewed using JConsole. That was the only difference between truly active connections and ones that should have been closed.

For now, we have fixed it by going back to 4.0.2. 



","Latest  trunk version (As of March 20, 2007) of AMQ .NET client, windows 2000 (for the broker)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84583,,,Tue Mar 20 23:17:30 UTC 2007,,,,,,,,"0|i0ts9z:",171890,,,,,,,,,,,,,,,,,,,"20/Mar/07 23:17;janv;Created a new issue where the Broker was specified as a component",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network connections do not reconnect when using static: with failover=true,AMQ-734,12481897,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,taoyonggang,taoyonggang,31/May/06 15:30,07/Mar/07 15:25,30/Jan/20 16:57,07/Mar/07 15:25,4.0,,,,,,4.1.1,5.0.0,,Connector,,,,6,"If I pull out RJ45 port from net card ,waiting a time ,then put  RJ45 port net card .Network is resume.Other computer always throw errors and net channel can't work.",winxp java1.5.6,jgearhart,jmoran,kaitchuc,woode,,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/06 15:37;ASF.LICENSE.NOT.GRANTED--Amq734Test.java;https://issues.apache.org/jira/secure/attachment/12460845/ASF.LICENSE.NOT.GRANTED--Amq734Test.java","22/Nov/06 15:36;Amq734Test.java;https://issues.apache.org/jira/secure/attachment/12460627/Amq734Test.java","22/Nov/06 15:37;DemandForwardingBridgeSupport.java;https://issues.apache.org/jira/secure/attachment/12460654/DemandForwardingBridgeSupport.java","22/Nov/06 15:37;DiscoveryNetworkConnector.java;https://issues.apache.org/jira/secure/attachment/12460585/DiscoveryNetworkConnector.java",,,,,4.0,,,,,,,,,,,,,,,,,,,,2006-06-04 21:47:37.0,,,false,,,,,,,,,,,,,,,,,84344,,,Wed Mar 07 15:18:05 UTC 2007,,,,,,,,"0|i0s01z:",161485,,,,,,,,,,,,,,,,,,,"04/Jun/06 21:47;j_cooper;(using active-mq-snapshot-30-may / linux)

Some comments:

Given a network of brokers in a demand forwarding environment: Broker A + Broker B in a _real_ network on different hosts (a lot of bugs are not reproducable in a localhost-environment)

UseCase 1:
Start Broker A
Start Broker B
Do a network-split (aka ""unplugging the cable"") [There is an exception attached that will be generated in such a case]
Create new message m1 on Broker A (that is stored for later delivery)
Reconnect network
Brokers will reconnect with exception (see below)

It is actually possible to LOSE MESSAGES that way. I found out that under certain circumstances message m1 will not be delivered. Even restarting every broker does not help in such a case. 


EXCEPTION ON UPLUGGING:
INFO Service:185 - Async error occurred: java.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:develop-43781-1149388950450-3:0
java.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:develop-43781-1149388950450-3:0
	at org.apache.activemq.broker.AbstractConnection.lookupConnectionState(AbstractConnection.java:241)
	at org.apache.activemq.broker.AbstractConnection.processRemoveConnection(AbstractConnection.java:519)
	at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:59)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportInterupted(DemandForwardingBridgeSupport.java:138)
	at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
	at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
	at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:223)
	at org.apache.activemq.transport.failover.FailoverTransport.access$300(FailoverTransport.java:53)
	at org.apache.activemq.transport.failover.FailoverTransport$1.onException(FailoverTransport.java:111)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:94)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:120)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)
	at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:100)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:156)
	at java.lang.Thread.run(Thread.java:595)

EXCEPTION ON RECONNECTING:
INFO Service:185 - Async error occurred: javax.jms.InvalidClientIDException: Broker: develop - Client: NC_testbroker_inbounddevelop already connected
javax.jms.InvalidClientIDException: Broker: develop - Client: NC_testbroker_inbounddevelop already connected
	at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:176)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:69)
	at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:69)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:69)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:82)
	at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:507)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:118)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:215)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$3.run(DemandForwardingBridgeSupport.java:184)


Question: Why is necessary that the localClientId is created in a fixed way?

  From DemandForwardingBridgeSupport.java:
    localClientId=""NC_""+remoteBrokerName+""_inbound""+name;

How about changing that to e.g.
    localClientId=""NC_""+remoteBrokerName+""_inbound""+name + ""_"" + System.currentTimemillis();

If a broker crashes and is restarted it would have a new ClientId -> no exceptions on reconnect.","09/Jun/06 15:31;rajdavies;the reason for the fixed client_id is durable topic consumers. The network bridge amalgamates multiple durable subscribers on the same topic in to one durable subscriber - to avoid duplicates and improve performance. 

There is a keep alive protocol used with the tcp connector that should detect the network outage - needs some more investigation to see why this doesn't appear to be working","12/Jun/06 22:21;chirino;The subsequent error seems related to the first ""Cannot lookup a connection that had not been registered"" error.  When a remote connection is 'interruted', the connection fails, the bridge destroys it's local connection to the local broker to avoid producing a slow consumer situation.

It seems that the wrong connection id was referred to when the remove command was sent localy.  This is now fix in both trunk and the 4.0 branch.","20/Jul/06 17:18;jgearhart;Hello,

I can reproduce this issue in the 4.0.1 release.  The test is performed as in the original post.  I am producing messages to a queue, from a demandForwarding environment.  One possible difference is the producer is in a stateless session bean under JBoss (ActiveMQ RA version is 4.0.2).

Here's the output from the broker..
---------------------------------------------------------------------------------------------
D:\ActiveMQ\bin>activemq
ACTIVEMQ_HOME: d:\ActiveMq
Loading message broker from: xbean:activemq.xml
Created MBeanServer with ID: 3dc0bb:10c8cef3623:-8000:fist:1
INFO  JournalPersistenceAdapter      - Journal deleted:
INFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby_embedded_jdbc_driver]
INFO  BrokerService                  - ActiveMQ 4.0.1 JMS Message Broker (fist) is starting
INFO  BrokerService                  - For help or more information please see: http://incubator.apache.org/activemq/
RMIConnectorServer started at: service:jmx:rmi://fist/jndi/rmi://localhost:16617/jmxrmi
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi://fist/jndi/rmi://localhost:16617/jmxrmi
INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 5 x 20.0 Megs at: D:\ActiveMQ\activemq-data\journal
INFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in transactions recovered.
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://fist:61616
INFO  TransportConnector             - Connector default Started
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://fist:61613?wireFormat=stomp
INFO  TransportConnector             - Connector stomp Started
INFO  NetworkConnector               - Establishing network connection between from vm://fist?network=true to failover:tcp://204.62.234.33:61616
INFO  VMTransportFactory             - binding to broker: fist
INFO  TransportConnector             - Connector vm://fist Started
INFO  DemandForwardingBridge         - Starting a network connection between vm://fist#0 and unconnected has been established.
INFO  NetworkConnector               - Network Connector Burnt Started
INFO  BrokerService                  - ActiveMQ JMS Message Broker (fist, ID:fist-2678-1153415721687-1:0) started
INFO  DemandForwardingBridge         - Network connection between vm://fist#0 and tcp://204.62.234.33:61616(burnt) has been established.
WARN  DemandForwardingBridge         - Outbound transport to burnt interrupted ...
INFO  DemandForwardingBridge         - Outbound transport to burnt resumed
INFO  DemandForwardingBridge         - Network connection between vm://fist#0 and tcp://204.62.234.33:61616(burnt) has been established.
INFO  Service                        - Async error occurred: java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been regis
tered: ID:fist-2678-1153415721687-3:1
java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1
        at org.apache.activemq.broker.AbstractConnection.lookupConnectionState(AbstractConnection.java:223)
        at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:356)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:178)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$5.onCompletion(DemandForwardingBridgeSupport.java:490)
        at org.apache.activemq.transport.FutureResponse.set(FutureResponse.java:59)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:89)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:105)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)
        at java.lang.Thread.run(Thread.java:534)
WARN  DemandForwardingBridge         - Unexpected local command: ConnectionError {commandId = 7, responseRequired = false, connectionId = null, exception = java
.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1}
INFO  Service                        - Async error occurred: java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been regis
tered: ID:fist-2678-1153415721687-3:1
java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1
        at org.apache.activemq.broker.AbstractConnection.lookupConnectionState(AbstractConnection.java:223)
        at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:356)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:178)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$5.onCompletion(DemandForwardingBridgeSupport.java:490)
        at org.apache.activemq.transport.FutureResponse.set(FutureResponse.java:59)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:89)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:105)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)
        at java.lang.Thread.run(Thread.java:534)
WARN  DemandForwardingBridge         - Unexpected local command: ConnectionError {commandId = 8, responseRequired = false, connectionId = null, exception = java
.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1}
INFO  Service                        - Async error occurred: java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been regis
tered: ID:fist-2678-1153415721687-3:1
java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1
        at org.apache.activemq.broker.AbstractConnection.lookupConnectionState(AbstractConnection.java:223)
        at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:356)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:178)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$5.onCompletion(DemandForwardingBridgeSupport.java:490)
        at org.apache.activemq.transport.FutureResponse.set(FutureResponse.java:59)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:89)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:105)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)
        at java.lang.Thread.run(Thread.java:534)
WARN  DemandForwardingBridge         - Unexpected local command: ConnectionError {commandId = 9, responseRequired = false, connectionId = null, exception = java
.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1}
","26/Oct/06 17:20;woode;We can reproduce this issue using the current build of 4.0.2.  We are running a distributed queue between two embedded brokers over an unreliable network (wireless).  We had been using 4.0.1, but the brokers did not reestablish the bridge when it was stopped due to inactivity timeout.  We tried 4.0.2 and it worked great for a while, but eventually one of the reconnect attempts failed.  On the receiver side broker (called CTSServer) we see in the logs wire format negotiation taking place, but on the send side broker (called CTSClient) we get the following in the log:
 
     [java] 12:42:12,236 DEBUG DurableConduitBridge:69 - Forwarding messages for durable destination: queue://TEST.FOO
     [java] 12:42:12,237 DEBUG DemandForwardingBridge:289 -  stopping CTSClient bridge to CTSServer is disposed already ? false
     [java] 12:42:12,240 DEBUG DemandForwardingBridge:308 - CTSClient bridge to CTSServer stopped
     [java] 12:42:12,241 DEBUG DemandForwardingBridge:289 -  stopping CTSClient bridge to CTSServer is disposed already ? true
     [java] 12:42:12,242 DEBUG DemandForwardingBridge:308 - CTSClient bridge to CTSServer stopped
     [java] 12:42:12,244  INFO NetworkConnector:96 - Establishing network connection between from vm://CTSClient?network=true to tcp://10.134.0.1:61616
     [java] 12:42:15,986 DEBUG WireFormatNegotiator:65 - Sending: WireFormatInfo { version=1, properties={TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
     [java] 12:42:15,987 DEBUG TcpTransport:133 - TCP consumer thread starting
     [java] 12:42:18,957 DEBUG WireFormatNegotiator:95 - Received WireFormat: WireFormatInfo { version=1, properties={StackTraceEnabled=true, TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
     [java] 12:42:18,957 DEBUG WireFormatNegotiator:102 - tcp:///10.134.0.1:61616 before negotiation: OpenWireFormat{version=1, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
     [java] 12:42:18,958 DEBUG WireFormatNegotiator:113 - tcp:///10.134.0.1:61616 after negotiation: OpenWireFormat{version=1, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
     [java] 12:42:21,838 DEBUG Service:221 - Async error occurred: javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected
     [java] javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected
     [java]     at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:180)
     [java]     at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:70)
     [java]     at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:70)
     [java]     at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:70)
     [java]     at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:83)
     [java]     at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:633)
     [java]     at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:120)
     [java]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)
     [java]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:61)
     [java]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
     [java]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
     [java]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:77)
     [java]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:45)
     [java]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
     [java]     at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:225)
     [java]     at org.apache.activemq.network.DemandForwardingBridgeSupport$3.run(DemandForwardingBridgeSupport.java:191)
     [java] 12:42:21,840  INFO DemandForwardingBridge:230 - Network connection between vm://CTSClient#728 and tcp:///10.134.0.1:61616(CTSServer) has been established.
     [java] 12:42:21,851  INFO DemandForwardingBridge:432 - Network connection between vm://CTSClient#728 and tcp:///10.134.0.1:61616 shutdown due to a local error: javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected
     [java] 12:42:21,854 DEBUG DemandForwardingBridge:433 - The local Exception was:javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected
     [java] javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected
     [java]     at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:180)
     [java]     at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:70)
     [java]     at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:70)
     [java]     at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:70)
     [java]     at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:83)
     [java]     at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:633)
     [java]     at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:120)
     [java]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)
     [java]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:61)
     [java]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
     [java]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
     [java]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:77)
     [java]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:45)
     [java]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
     [java]     at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:225)
     [java]     at org.apache.activemq.network.DemandForwardingBridgeSupport$3.run(DemandForwardingBridgeSupport.java:191)

This sequence just repeats continuously until the broker is stopped.
","27/Oct/06 20:56;woode;To add some further clarification.  We verified (via logs) that the receive side broker had timed out the send side broker.  Then, when the send side broker tries to reconnect, the receive side broker says ""invalid client id"" apparently because it did not unregister the client when it timed out?  During this test, we had numerous timeouts and successful recoveries, and then suddenly it broke down.  Looking at the previous posts a little more closely, I am now wondering if this is a different issue?  Should I create a new issue?","08/Nov/06 23:58;jef@tpssys.com;
   [[ Old comment, sent by email on Fri, 27 Oct 2006 16:09:56 -0500 ]]

Hi Eric,

I guess that's up to you.  I believe the problem you and I both posted, 
however, are side effects of the overall problem.  The failover 
transport 'reconnection' works, but restoration of the state of the 
previous connection is broken in multiple places (e.g. subscriptions, 
clientIds).

I've peeked into the code a little bit, and I think both side effects 
could be addressed simultaneously, so my opinion is to just leave both 
descriptions here. 



","14/Nov/06 17:21;chirino;I've got a feeling that this was related to the timing issues addressed in issue:
https://issues.apache.org/activemq/browse/AMQ-1044
which is now fixed.

Could one you guys retest against a source build from the 4.1 branch and let me know if it resolves this issue?","20/Nov/06 18:21;woode;Hiram,

The issue was intermittent, so the best we can do is run it for long
periods of time.  So far we have run with 4.1 for over ten hours total,
failed the network connection about 20 times, including both active and
natural failures, and it has recovered every time and we had 0 message
loss.  With 4.0.2 we were successful in reproducing the error nearly
every time we caused a failure.  So it seems that the problem is
resolved, but we still want to do more testing.  We are noticing a large
number of inactivity timeouts.  Our network is fairly low bandwidth/high
latency, so we were wondering if there is a way, or one could be added,
to adjust the inactivity timeout value.  We think we could improve our
throughput if we didn't timeout so often.  If you'd like, I'll open a
separate JIRA case for this.

Regards,

Eric

","20/Nov/06 18:42;chirino;No separate jira need.  See: http://activemq.com/site/configuring-wire-formats.html","22/Nov/06 15:38;chrish;I've got what I think is a fix for AMQ-734.  However, the fix is possibly heavy-handed in its implementation, so I'd like for someone to review it and provide comments regarding any potential unintended side effects.

I've attached to the issue in JIRA a junit case that is able to reproduce the issue 100% of the time as well as the necessary updates to DiscoveryNetworkConnector and DemandForwardingBridgeSupport.

Basically, the classes were stopping the local broker and bridge whenever any exception was encountered on the transport.  However, some of the exceptions are ""ok"" and should not result in a stop.  These include InvalidClientIDException, BrokerStoppedException, InvalidStateException, and SocketException.  With the fix, for these specific exceptions, the broker/bridge are not stopped and fireServiceFailed is never called.  For all other exceptions, they still are called.

In addition, the TransportListener.transportResumed implementation in DemandForwardingBridgeSupport never started the local/remote broker and never called triggerRemoteStartBridge.  With this fix, they now do.

I've run the whole suite of tests and all of the tests that passed prior to my modifications continue to pass.  In addition, the test case attached to the JIRA fails without the fixes and passes with the fixes 100% of the time.

Comments?  
","22/Nov/06 15:51;woode;We ran extensively this week with our encryption hardware because we wanted to confirm that didn't cause an issue.  So far I would say we have run for about 25 hours total, had well over 30 network failures and it has recovered every time.  At this point we believe that our issue is fixed by 4.1.  Thanks for the quick turnaround.","22/Nov/06 16:38;chrish;Sorry - I forgot to mention that my previous comment applied strictly to 4.0.2 - I did not test against 4.1

Nonetheless, if anyone has any comments regarding the proposed fix, I'd be very interested as I'd prefer to use 4.0.2 for a production deployment until 4.1 is released.","07/Mar/07 15:18;chirino;the functionality of the failover option is now built into the ""static:"" discovery agent.  The failover option will no longer be supported.
In the next version of ActiveMQ, the failover property will be removed.  Change commited in version 515602.

I ran your test case without the failover=true option and it passed.",,,,,,,,,,,,,,,,,,,,,
4.0 M4 NullPointerException while shutting down,AMQ-528,12481938,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,lhu,lhu,03/Feb/06 20:43,07/Mar/07 14:23,30/Jan/20 16:57,07/Mar/07 14:23,4.0,,,,,,5.0.0,,,,,,,1,"Setup: 

3 networked brokers, B1, B2, and B3, on 3 servers, connected using multicast discovery. activemq.xml: 

 <broker useJmx=""false"" brokerName=""B1""> 
  
 <persistenceAdapter> 
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""foo"" dataSource=""#mysql-ds""/> 
 </persistenceAdapter> 
  
 <transportConnectors> 
 <transportConnector uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/> 
 </transportConnectors> 
  
 <networkConnectors> 
 <networkConnector uri=""multicast://default""/> 
 </networkConnectors> 
  
 </broker> 
  
 <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close""> 
           <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/> 
           <property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/> 
                 <property name=""username"" value=""activemqUser""/> 
                 <property name=""password"" value=""activemqPwd""/> 
                 <property name=""poolPreparedStatements"" value=""true""/> 
 </bean> 

Similar for B2 and B3. 

Two queues: Q1 and Q2. 

Two producers, one for each queue, both producers connected to B1. 

One Q1 cosumer connected to B1, another Q1 consumer on B2. 

One Q2 consumer connected to B2, another Q2 consumer connected to B3. 

Steps: 

Start the brokers and start sending messages to the queue. 

After a while, stop the brokers (Sequence does not matter) 

See the errors in catalina.out of the Tomcat that has a broker with both producers and consumers connected 

The problems:

1. 

Exception in thread ""ActiveMQ Scheduler"" java.lang.NullPointerException
         at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils$SunPerfProvider.nanoTime(Utils.java:219)
         at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils.nanoTime(Utils.java:99)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor.now(ScheduledThreadPoolExecutor.java:88)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay(ScheduledThreadPoolExecutor.java:137)
 Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler""      at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:154)
         at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
         at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
         at java.lang.Thread.run(Thread.java:595)
 java.lang.NullPointerException
         at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils$SunPerfProvider.nanoTime(Utils.java:219)
 Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler""      at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils.nanoTime(Utils.java:99)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor.now(ScheduledThreadPoolExecutor.java:88)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay(ScheduledThreadPoolExecutor.java:137)
         at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:154)
         at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
 Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler""       at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
         at java.lang.Thread.run(Thread.java:595)

2. The same exception is logged to the log file (in my case catalina.out) for hundreds of times, resulting a log file exceeding 150 MB in 2 minutes. ","RedHat Linux Enterprise Server 3, Tomcat 5.5.15, MySQL 5.0.18 for Linux",h2o,hhoffstätte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-06 20:09:34.0,,,false,,,,,,,,,,,,,,,,,43785,,,Wed Mar 07 14:23:53 UTC 2007,,,,,,,,"0|i0s02n:",161488,,,,,,,,,,,,,,,,,,,"06/Mar/06 20:09;jstrachan;Given that in the stack trace this exception is being caused inside the backport-util-concurrent code (and there is no ActiveMQ code involved) I'm wondering if this is due to

http://jira.activemq.org/jira/browse/AMQ-605","07/Mar/06 09:02;jstrachan;We've just fixed AMQ-605 - I wonder if you can try reproduce the issue using the latest SVN code? (e.g. using tomorrow's SNAPSHOT build)","17/Mar/06 11:38;jstrachan;I've not heard back so am assuming this is now resolved due to the upgrade of backport-util-concurrent.jar. Please let us know if you are still having problems and we can reopen this issue again","23/Jun/06 05:05;nextcoder;Using:
---------
backport-util-concurrent-2.1.jar
activemq-core-4.0.jar
activemq-ra-4.0.jar
jencks-all-1.1.3.jar

broker.xml:
---------------
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://activemq.org/config/1.0"">
  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>

  <broker useJmx=""false"" persistent=""false"">

<!--
    <persistenceAdapter>
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""foo""/>
    </persistenceAdapter>
-->

    <transportConnectors>
      <transportConnector uri=""tcp://localhost:51616""/>
    </transportConnectors>

  </broker>

</beans>

Exception when shutting down tomcat:
----------------------------------------------------

tomcat@jupiter:~/dev/env/apache-tomcat-5.5.15/bin$ ./shutdown.sh
Using CATALINA_BASE:   /home/tomcat/dev/env/apache-tomcat-5.5.15
Using CATALINA_HOME:   /home/tomcat/dev/env/apache-tomcat-5.5.15
Using CATALINA_TMPDIR: /home/tomcat/dev/env/apache-tomcat-5.5.15/temp
Using JRE_HOME:       /usr/lib/j2sdk1.5-sun
Jun 22, 2006 4:53:19 PM org.apache.coyote.http11.Http11BaseProtocol pause
INFO: Pausing Coyote HTTP/1.1 on http-8080
tomcat@jupiter:~/dev/env/apache-tomcat-5.5.15/bin$ Jun 22, 2006 4:53:20 PM org.a
pache.catalina.core.StandardService stop
INFO: Stopping service Catalina
Jun 22, 2006 4:53:22 PM org.apache.coyote.http11.Http11BaseProtocol destroy
INFO: Stopping Coyote HTTP/1.1 on http-8080
Jun 22, 2006 4:53:22 PM org.apache.catalina.core.AprLifecycleListener lifecycleE
vent
INFO: Failed shutdown of Apache Portable Runtime
Exception in thread ""AcitveMQ Connection Worker: tcp://localhost/127.0.0.1:51616
"" Exception in thread ""AcitveMQ Connection Worker: tcp://localhost/127.0.0.1:516
16"" java.lang.NullPointerException
        at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils$SunPerfP
rovider.nanoTime(Utils.java:223)
Exception in thread ""AcitveMQ Connection Worker: tcp://localhost/127.0.0.1:51616
""       at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils.nanoTime
(Utils.java:103)
        at edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.po
ll(LinkedBlockingQueue.java:336)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.get
Task(ThreadPoolExecutor.java:482)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Wor
ker.run(ThreadPoolExecutor.java:674)
Exception in thread ""AcitveMQ Connection Worker: tcp://localhost/127.0.0.1:51616
""       at java.lang.Thread.run(Thread.java:595)
java.lang.NullPointerException
        at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils$SunPerfP
rovider.nanoTime(Utils.java:223)
        at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils.nanoTime
(Utils.java:103)
Exception in thread ""AcitveMQ Connection Worker: tcp://localhost/127.0.0.1:51616
""       at edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.po
ll(LinkedBlockingQueue.java:336)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.get
Task(ThreadPoolExecutor.java:482)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Wor","23/Jun/06 20:34;h2o;This one is *really* weird so I decided to ask Dawid Kurzyniec what might cause this. Here's his reply:

Dawid Kurzyniec wrote:
> Holger Hoffstätte wrote:
>> Hello Dawid -
>>
>> Could you please have a quick look at
>> https://issues.apache.org/activemq/browse/AMQ-528 and maybe post a
>> comment if you have any idea what might be going wrong there? It's very weird.
>>
> 
> I think the exception may be originating from native code
> (perf.highResCounter()). I suppose that something is freed in the JVM in
> the course of the shutdown, making it respond badly to highResCounter
> and resulting in the exception. (I've seen some analogous behavior with
> Java 1.4 logging: the loggers won't initialize during shutdown, so they
> won't print anything unless they did before the shutdown initiated).
> 
> If this is the case, there's not much there can be done about it, except
> 1) trying a different JVM, or 2) switching to a different NanoTimer (for
> instance,
>-Dedu.emory.mathcs.backport.java.util.concurrent.NanoTimerProvider=edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils.MillisProvider,
> or to use a custom nanotimer if you need more than ms granularity).
> 
> Regards,
> Dawid
> 

I'll try to see if the native JDK 1.5 nanoTimer could be used dynamically; this might help. The other thing that the stack traces show is that the queue in question is the work queue of an ExecutorService, so it seems to me that properly shutting down that service would also solve the problem of the timer going away prematurely.
","23/Jun/06 20:51;h2o;Quick follow-up:

>> Thanks a lot for clearing this up. Would it be possible for the nanoTimer
>> to discover the native JDK 1.5 timer when running on JDK 1.5+? That would
>> not help with the bug on JDK 1.4 but it could be a start. I guess with
>> more people using the backport but running on JDK 1.5 anyway this
>> would be
>> nice to have.
>>   
> Yes; in fact, I am planning to create a version of the backport for 1.5
> that would perform with native speed (using native atomics etc). Next
> release of the backport will probably have that.
> 
>> I guess another way would be to prevent the queues (further up the stack)
>> from running before the timer is shut down internally and gets a
>> chance to explode.
>>   
> 
> That would probably work, if you can ensure it.
> 
> Regards,
> Dawid

So it seems a proper shutdown of the Executor will solve this.
","24/Jun/06 21:36;nextcoder;Holger wrote:

> So it seems a proper shutdown of the Executor will solve this.

Is this something that can be done from the application code? 
or do I have to wait for the new version of the backport-*.jar? what's the ETA if I may ask?

I tried to use the backport MillisProvider but I can't get the JVM to see the class (ClassNotFoundException) no matter where i put the backport*.jar file (I even tried it in tomcat's /shared/lib and it still can't find the class).  Yet the class is there, albeit it looks like an inner class (??)

Until Sun releases the next jvm after 1.5_06 for Linux, I don't have any other JVM to go to.
","24/Jun/06 21:49;h2o;Note: I'm not a dev on AMQ or the backport; I just use them myself.

>Is this something that can be done from the application code?

No, it is a bug in ActiveMQ (as far as I can tell) so it needs to be fixed there.

Holger
","02/Jul/06 02:07;chirino;Ajusted target fix version so that it shows up on the roadmap right.","11/Jul/06 21:39;chirino;Hi Holger,

Do you have a patch that you think might fix this issue?  I've never seen this bug so without a test case to reproduce it's going to be hard to build a fix for it.","11/Jul/06 22:08;h2o;I did not originally experience this bug and don't have a fix for it - I just got curious what might be causing the NPE inside the backport. However if you read my mail exchange with Dawid it seems to me that the problem is a GC race on shutdown between the deallocated timer and the Executor that has not yet been shut down properly. Obviously it is difficult to devise a ""simple"" test case & patch for a GC race, however it seems obvious from the stack trace that there's a still-running Executor somewhere that tries to use the freed counter. This is a typical problem with the badly designed VM shutdownHook mechanism which does not allow for dependenies or hook ordering. (admittedly this is a difficult problem)
So long story short, no I don't know what to do. You can try to run the ""main"" AMQ shutdown hook with a higher priority but that is not what I would call reliable.
","07/Mar/07 14:23;jstrachan;I'm hopeful this issue is resolevd in 4.2 as we'll be using Java 5's concurrent libraries and not rely on issues in backport-util-concurrent. Do let us know if it shows up again and we can reopen",,,,,,,,,,,,,,,,,,,,,,,
Messages are read from queue but not removed,AMQ-962,12481939,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,rlp82,rlp82,06/Oct/06 21:08,07/Mar/07 14:21,30/Jan/20 16:57,07/Mar/07 14:21,4.0.1,,,,,,5.0.0,,,Broker,JMS client,,,0,"Using Spring, configured a VM message broker (non-persistant) and a message consumer that reads messages from queue.

Messages are read from queue, but despite calling message.acknowledge(); messages remain on the queue (and consume memory).

I turned off optimiseAcknowledge.

May be related to bug# AMQ-716.

	  <amq:broker id=""broker"" useJmx=""true"" persistent=""false"">
	    <amq:transportConnectors>
	      <amq:transportConnector uri=""tcp://localhost:0"" />
	    </amq:transportConnectors>
	  </amq:broker>

	 <!-- a pooling based JMS provider -->
	  <bean id=""jmsFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"">
	    <property name=""connectionFactory"">
	      <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
	        <property name=""brokerURL"">
	          <value>vm://localhost</value>
	        </property>
	        <property name=""optimizeAcknowledge"">
	          <value>false</value>
	        </property>	        
	      </bean>
	    </property>
	  </bean>

	  <bean id=""simpleJmsTemplate"" class=""org.springframework.jms.core.JmsTemplate"">
	    <property name=""connectionFactory"">
	    	<ref local=""jmsFactory"" />
	    </property>
	  </bean>

","Java Virtual Machine: Java HotSpot(TM) Server VM version 1.5.0_06-b05JIT 
compiler:  HotSpot Server Compiler
Operating System:  Windows XP 5.1
Architecture: x86
Number of processors:  1
Total physical memory:   1,048,048 kbytes
Free physical memory:     107,240 kbytes
Committed virtual memory:     374,048 kbytes
Total swap space:   2,518,944 kbytes
Free swap space:     721,416 kbytes
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-10-10 06:31:26.0,,,false,,,,,,,,,,,,,,,,,84376,,,Wed Mar 07 14:21:07 UTC 2007,,,,,,,,"0|i0s04f:",161496,,,,,,,,,,,,,,,,,,,"10/Oct/06 06:31;hbruch;I encountered a similar problem when using the PooledConnectionFactory, which is currently intended for sending messages only. In my case, it was caused by a concurrency issue when the session is closed and messages are still processed by the consumer. The PooledSession does not halt the underlying session's executor, so that messages are still delivered when the session is about to close. These messages might in your case be read, but not acknowledged.
","07/Mar/07 14:21;jstrachan;I think this should now be fixed. Let us konw if you can still reproduce it",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SocketWrite hangs indefinitely,AMQ-898,12481864,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,etolson,etolson,28/Aug/06 15:51,07/Mar/07 14:19,30/Jan/20 16:57,07/Mar/07 14:19,4.0.1,,,,,,,,,,,,,0,"We routinely have our message distribution locked up permanently and without means of recovery by a socketWrite0 call that hangs indefinitely in a thread holding a number of the Active MQ locks.  Here is a stack trace of such a locked up thread:

        at java.net.SocketOutputStream.socketWrite0(Native Method)
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:95)
        at java.io.DataOutputStream.write(DataOutputStream.java:90)
        - locked <0x4bc298c8> (a java.io.DataOutputStream)
        at org.apache.activemq.openwire.v1.BaseDataStreamMarshaller.tightMarshalByteSequence2(BaseDataStreamMarshaller.java:403)
        at org.apache.activemq.openwire.v1.MessageMarshaller.tightMarshal2(MessageMarshaller.java:160)
        at org.apache.activemq.openwire.v1.ActiveMQMessageMarshaller.tightMarshal2(ActiveMQMessageMarshaller.java:88)
        at org.apache.activemq.openwire.v1.ActiveMQObjectMessageMarshaller.tightMarshal2(ActiveMQObjectMessageMarshaller.java:88)
        at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:240)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:124)
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:78)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:77)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x4bac2b80> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1111)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1553)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:462)
        at com.hb.jms.api.util.JmsSession.sendObjects(JmsSession.java:345)
        - locked <0x4aca1230> (a org.apache.activemq.ActiveMQSession)
        at com.hb.jms.api.util.JmsSession.sendObjects(JmsSession.java:307)
        at com.hb.jms.api.util.JmsSession$QueueProcessor.sendFromSessionQueue(JmsSession.java:1002)
        - locked <0x6adc9f80> (a com.hb.jms.api.util.JmsSession$SessionQueue)
        at com.hb.jms.api.util.JmsSession$QueueProcessor.run(JmsSession.java:981)
        at java.lang.Thread.run(Thread.java:595)","Linux, Java 1.5, JBoss appserver",etolson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-07 14:19:48.426,,,false,,,,,,,,,,,,,,,,,84387,,,Wed Mar 07 14:19:48 UTC 2007,,,,,,,,"0|i0s01r:",161484,,,,,,,,,,,,,,,,,,,"07/Mar/07 14:19;jstrachan;This just looks like a blocked TCP/IP socket. There's not a whole lot the ActiveMQ client can do other than wait for the socket to unblock. I wonder if its OS/network related.

I wonder if your producer is blocking...
http://activemq.apache.org/my-producer-blocks.html

which is stopping the broker reading from the socket, which is causing the socket to block?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
POM error means I can't use a dependency on 4.1-incubator-SNAPSHOT,AMQ-862,12481863,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,ammulder,ammulder,04/Aug/06 18:42,07/Mar/07 14:17,30/Jan/20 16:57,07/Mar/07 14:17,4.1.0,,,,,,,,,,,,,0,"I'm trying to build jencks, which has a dependency on ActiveMQ 4.1-incubator-SNAPSHOT.  I get the following unresolved dependencies:

org.apache.activemq:activemq-core:jar:4.1-incubator-SNAPSHOT
org.apache.activemq:activemq-core:test-jar:tests:4.1-incubator-SNAPSHOT

What it's actually trying to download is:

http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/activemq-core/4.1-incubator-SNAPSHOT/activemq-core-4.1-incubator-20060801.170356-6.jar
http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/activemq-core/4.1-incubator-SNAPSHOT/activemq-core-4.1-incubator-20060801.170356-2-tests.jar

Those are invalid versions.  When I asked about this on the maven IRC, I was told:

the problem is here: http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/activemq-parent/4.1-incubator-SNAPSHOT/activemq-parent-4.1-incubator-20060804.071007-16.pom
In the dependencyManagement they're using, they have expressions for the versions.  Those resolve to the current POM's (the one specifying the dependencies) version, instead of resolving them as snapshots.  It's a common problem when using that expression for shortcuts.


It would be great if this could be fixed so that I could build jencks.  Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-09 08:35:22.0,,,false,,,,,,,,,,,,,,,,,84511,,,Wed Mar 07 14:17:25 UTC 2007,,,,,,,,"0|i0s093:",161517,,,,,,,,,,,,,,,,,,,"09/Aug/06 08:35;jstrachan;Do you know how to fix this? A patch would be nice :)","07/Mar/07 14:17;jstrachan;I'm guessing this is now fixed as you can just use the 4.1.0 release (or 4.1.1 release thats about to go out). If not, do let us know exactly what is required to hack the poms and we can do it",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConduitBridge can malfunction when first of a set of consumers goes away,AMQ-776,12481697,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,yaussy,yaussy,26/Jun/06 20:56,30/Dec/06 07:30,30/Jan/20 16:57,30/Dec/06 07:30,4.0.1,,,,,,5.0.0,,,Broker,,,,1,"When the following scenario is followed, any of the subsequent consumers will stop receiving messages.  I've reproduced this using the ConsumerTool, and ProducerTool supplied in the example area of the distribution.

+++++++++++++++++++++++
Start Broker A

Start Broker B

Start Consumer 1, connecting to Broker B, consuming FOO

Start Consumer 2, connecting to Broker B, consuming FOO

Start Publisher, connecting to Broker A, publishing FOO

Ctl-C out of Consumer 1

Consumer 2 stops receiving messages
+++++++++++++++++++

Seems to me that ConduitBridge is supposed to track all consumers for a given subscription, by way of DemandSubscription.  It is seeding DemandSubscription with the originating consumer, but when subsequent consumers are added, the ConduitBridge::addToAlreadyInterestedConsumers re-adds the original subscriber to the DemandSubscription's map - so the map only ever has the original subscription.

I've attached a patch.  Hope the change is good.
",,teppic,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/06 20:56;yaussy;ASF.LICENSE.NOT.GRANTED--ConduitBridge.patch;https://issues.apache.org/jira/secure/attachment/12460578/ASF.LICENSE.NOT.GRANTED--ConduitBridge.patch","14/Aug/06 20:32;yaussy;DemandForwardingBridgeSupport.patch;https://issues.apache.org/jira/secure/attachment/12460686/DemandForwardingBridgeSupport.patch",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-08-10 09:20:40.0,,,false,,,,,,,,,,,,,,,,,84407,,,Sat Dec 30 07:30:57 UTC 2006,,,,Patch Available,,,,"0|i0s01b:",161482,,,,,,,,,,,,,,,,,,,"08/Jul/06 02:43;yaussy;I found another scenario, but have not had time to discover whether it is due to problem in ConduitBridge or not.  But, it seems likely:

+++++++++++++++++++++++++++
Start Broker A

Start Publisher, connecting to Broker A, publishing FOO

Start Broker B

Start Consumer, connecting to Broker B, consuming FOO (needs to use failover on connect url, but just connect to Broker B)

kill-9 Broker B

Restart Broker B

Consumer no longer gets FOO
+++++++++++++++++++++++++++++++++

This problem happens regardless of whether the patched ConduitBridge code is used. ","19/Jul/06 18:30;yaussy;Any reason why ""clearDownSubscriptions"" in DemandForwardingBridgeSupport is uncoded?  Or perhaps overridden in ConduitBridge?

I've coded an override method in ConduitBridge and this seems to take care of the issue.

Maybe you coded it once, but some test cases failed?","10/Aug/06 09:20;rajdavies;Hi Kevin,

not sure I understood the last comment ? :) - clearDownSubscriptions in DemandForwardingBridgeSupport clears the subscription maps - do you do something different ?","14/Aug/06 13:45;yaussy;Rob,

The code for clearDownSubscriptions in DemandForwardingBridgeSupport.java is not present (empty method) in 4.0.1.  Perhaps you are looking at 4.0.2 or 4.1?  I haven't downloaded those versions yet.","14/Aug/06 20:31;yaussy;I'll attach a patch file for DemandForwardingBridgeSupport.java which is baselined on the 4.0.1 version.  It includes the logging changes from my other call, which you've already applied to 4.0.2.

When I was analyzing the problem, it looked to me like there was more to the problem than just clearing out the subscription maps (which is what the 4.0.2 code does).  It needed to forward the subscription removal to the broker, which is why my patch calls removeSubscription, which forwards the removal to the broker code, but also removes the entry from the local subscription map.  It did not make any difference whether I cleared the remote subscription map, so that step is not in the patch (but could be for cleanliness).

I've downloaded the current 4.0.2 snapshot, and applied this change (replacing the 4.0.2 version of clearDownSubscriptions).  However, the problem still persists in 4.0.2.  So, given other changes in 4.0.2, the change is not compatible - which is bad.

The first patch for this call, ConduitBridge.patch, is applicable to 4.0.2.","02/Oct/06 16:48;chirino;This issue looks like it's still not resolved.","03/Oct/06 12:36;yaussy;Hiram,

I have been very busy with some other items around here, so I've not worked on this for about a month.  I'm planning on downloading the recent 4.0.2 and looking there again.  But, also, it looks like 4.1 is pretty active?  I'll download that and test this scenario there as well.","09/Oct/06 14:24;yaussy;Hiram,

With help from Holger Bruch on AMQ-961, this issue I think can be resolved.  For AMQ 4.0.2, apply the ConduitBridge patch, which fixes the first part of this issue.  Apply Holger's patch from AMQ-961 to DemandForwardingBridgeSupport.  That fixes the issue from AMQ-961, but also the second part of this issue.
","30/Dec/06 07:30;rajdavies;patch applied for associated issue: http://issues.apache.org/activemq/browse/AMQ-961",,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with subscription passing with network of brokers in AMQ 4.0.2,AMQ-961,12481898,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,yaussy,yaussy,06/Oct/06 19:57,30/Dec/06 07:29,30/Jan/20 16:57,30/Dec/06 07:29,4.0.2,,,,,,5.0.0,,,Broker,,,,0,"There's an occasional problem with subscription propagation when using a network of brokers.  Test scenario uses ConsumerTool and PublisherTool in examples area of distribution.

1) Start broker A (has a network connection to broker B)
2) Start broker B (has a network connection to broker A)
3) start consumer C against broker A, on FOO
4) start publisher P against broker B, on FOO

Messages do not flow to consumer C.  In the broker B log, there's no indication it got any subscriptions from broker A.  Again, this is occasional.

I've taken a kill-3 on the brokers, both when this condition appears, and when everything is fine.  There's an obvious difference in one of the threads that hopefully will bring light to the problem.  I've not gone into the code yet to try and find the issue, but figured I would open this issue first.

Stack trace of broker A when subscriptions did NOT pass, and message flow is broken:
""ActiveMQ Transport: tcp://perfgc1a/170.137.15.169:5112"" prio=10 tid=0x0030e160 nid=0x3f in Object.wait() [0x8
e2ff000..0x8e2ff8f0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x9b2b00d0> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
        at java.lang.Object.wait(Object.java:474)
        at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:179)
        - locked <0x9b2b00d0> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.waitStarted(DemandForwardingBridgeSupport
.java:830)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBrid
geSupport.java:329)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport
.java:130)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:117)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:124)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)


Stack trace of broker A when everything works correctly:

""ActiveMQ Transport: tcp://perfgc1a/170.137.15.169:5112"" prio=10 tid=0x01955fc8 nid=0x3f runnable [0x8e2cf000..0x8e2cfaf0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:49)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:56)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)

",,teppic,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Oct/06 06:15;hbruch;RestartDFBOnResume.diff;https://issues.apache.org/jira/secure/attachment/12460717/RestartDFBOnResume.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-10-09 06:15:18.0,,,false,,,,,,,,,,,,,,,,,84435,,,Sat Dec 30 07:29:56 UTC 2006,,,,,,,,"0|i0s02f:",161487,,,,,,,,,,,,,,,,,,,"09/Oct/06 06:15;hbruch;Might relate to the problem I encountered in http://www.nabble.com/Failover-and-DemandForwardingBridge-tf2383410.html#a6642973.
Apparently, the DemandForwardingBridge does not resume correctly after a network interruption.
For me, the attached patch worked, but I'm not aware of any side effects, so please check.","09/Oct/06 12:32;yaussy;Thanks.  I will apply this patch and try it out.
","09/Oct/06 14:01;yaussy;This does appear to fix the problem.  I'd had a similar problem with AMQ 4.0.1, reported in AMQ-776, which I had fixed.  But, for the second part of that problem, the original patch did not work.  This issue and the second part of AMQ-776, are fixed now by your patch.  I'll update AMQ-776, too.
","30/Dec/06 07:29;rajdavies;Applied patch in SVN revision 491185

thanks kevin Yaussy!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client deadlock during failover,AMQ-1093,12481828,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,jurna,jurna,12/Dec/06 07:05,14/Dec/06 15:25,30/Jan/20 16:57,14/Dec/06 15:25,4.1.0,,,,,,5.0.0,,,Transport,,,,0,"In 4.1.0 there's deadlock on connection failover. There is the scenario: 
1. Client consumes message using message listener 
2. Conection is lost 
3. Client sends message to another queue from messagle listener and waits until connection is restored. 
4. Reconnect task blocks on reconnecting. 
 
This bug is new to 4.1.0. The problem is in ActiveMQMessageConsumre.dispatch . There is new lock on unconsumedMessages.getMutex() . So the reconnect task cannot invoke ActiveMQMessageConsumre.clearMessagesInProgress(), because lock is acquired by message listener, which waits untill message is sent (untill connection is resumed). Here is stack traces: 
 
""ActiveMQ Session Task"" daemon prio=1 tid=0x0000002b27774260 nid=0x4778 in Object.wait() [0x0000000040ef3000..0x0000000040ef4db0] 
        at java.lang.Object.wait(Native Method) 
        - waiting on <0x0000002b0020a7c8> (a edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar) 
        at java.lang.Object.wait(Object.java:474) 
        at edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar.await(CondVar.java:75) 
        - locked <0x0000002b0020a7c8> (a edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar) 
        at edu.emory.mathcs.backport.java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:318) 
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:42) 
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:75) 
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1171) 
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1548) 
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465) 
        at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:75) 
        - locked <0x0000002b173fa480> (a org.apache.activemq.ActiveMQMessageProducer) 
        at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:60) 
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:537) 
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:513) 
        at org.springframework.jms.core.JmsTemplate$2.doInJms(JmsTemplate.java:479) 
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:430) 
        at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:477) 
        at lt.elitnet.dbp.das.impl.storage.HI2StorageImpl.storeHI2Message(HI2StorageImpl.java:57) 
        at lt.elitnet.dbp.das.impl.hi2.HI2PersistanceBase.saveIRIContent(HI2PersistanceBase.java:77) 
        at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
        at java.lang.reflect.Method.invoke(Method.java:585) 
        at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:203) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:162) 
        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:107) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) 
        at org.springframework.orm.hibernate3.HibernateInterceptor.invoke(HibernateInterceptor.java:104) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) 
        at lt.elitnet.dbp.das.impl.alarming.DataBaseConnectionAlarmsPublisher.invoke(DataBaseConnectionAlarmsPublisher.java:59) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) 
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:209) 
        at $Proxy24.saveIRIContent(Unknown Source) 
        at lt.elitnet.dbp.das.impl.hi2.HI2MessageListener.onMessage(HI2MessageListener.java:40) 
        at lt.elitnet.dbp.commons.messaging.TextMessageListener.deliverMessage(TextMessageListener.java:84) 
        at lt.elitnet.dbp.commons.messaging.TextMessageListener.onMessage(TextMessageListener.java:50) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:854) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:793) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:763) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:743) 
        at org.springframework.jms.listener.SimpleMessageListenerContainer$2.onMessage(SimpleMessageListenerContainer.java:190) 
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:840) 
        - locked <0x0000002b1771ddc0> (a java.lang.Object) 
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:96) 
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:165) 
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:111) 
        at org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26) 
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) 
        at java.lang.Thread.run(Thread.java:595) 
 
""ActiveMQ Transport: tcp:///192.168.2.55:61616"" prio=1 tid=0x0000002b2e814660 nid=0x4773 waiting for monitor entry [0x0000000040e82000..0x0000000040e82c30] 
        at org.apache.activemq.MessageDispatchChannel.clear(MessageDispatchChannel.java:135) 
        - waiting to lock <0x0000002b1771ddc0> (a java.lang.Object) 
        at org.apache.activemq.ActiveMQMessageConsumer.clearMessagesInProgress(ActiveMQMessageConsumer.java:546) 
        at org.apache.activemq.ActiveMQSession.clearMessagesInProgress(ActiveMQSession.java:524) 
        at org.apache.activemq.ActiveMQConnection.transportInterupted(ActiveMQConnection.java:1547) 
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:100) 
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:100) 
        at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:236) 
        at org.apache.activemq.transport.failover.FailoverTransport.access$300(FailoverTransport.java:55) 
        at org.apache.activemq.transport.failover.FailoverTransport$1.onException(FailoverTransport.java:120) 
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:96) 
        at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:147) 
        at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:150) 
        at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:97) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:150) 
        at java.lang.Thread.run(Thread.java:595)","Linux 2.6, java 1.5.0",bde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-12-14 15:25:45.0,,,false,,,,,,,,,,,,,,,,,84492,,,Thu Dec 14 15:25:45 UTC 2006,,,,,,,,"0|i0s0d3:",161535,,,,,,,,,,,,,,,,,,,"14/Dec/06 15:25;jstrachan;I've just committed a patch to trunk for this which I think resolves the issue. 

There's no test case to easily verify its resolved though (its a tad hard to recreate) so I wonder could you try and see if this is now fixed - if not let us know and we can reopen this issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible 4.0 consumer client memory leak?,AMQ-735,12481654,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jstrachan,skarthik74,skarthik74,01/Jun/06 21:48,04/Dec/06 05:28,30/Jan/20 16:57,12/Jun/06 15:19,4.0,,,,,,4.0.1,,,JMS client,,,,0,"On running the attached test programs (one producer on a topic, one consumer on a topic), the consumer eventually encounters OutOfMemoryError after receiving around 64 MB of messages). Default JVM heap size is used (64 MB).
The problem does not happen with RC2 build.

 The test programs allows specification of message payloads of different sizes and different message rates, as well number of  producer/consumer threads/instances., topics and topic connection factories, via user environment variables.


http://www.nabble.com/4.0+Consumer+OutOfMemoryError+bug--t1707655.html#a4660556","windows xp pro, jdk 1.5, AMQ 4.0 (incubator)",skarthik74,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jun/06 21:48;skarthik74;ASF.LICENSE.NOT.GRANTED--jmsmon.zip;https://issues.apache.org/jira/secure/attachment/12460789/ASF.LICENSE.NOT.GRANTED--jmsmon.zip","08/Jun/06 04:52;fwang;activemq_735.zip;https://issues.apache.org/jira/secure/attachment/12460735/activemq_735.zip","08/Jun/06 22:06;fwang;instance.zip;https://issues.apache.org/jira/secure/attachment/12460655/instance.zip",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2006-06-08 04:51:36.0,,,false,,,,,,,,,,,,,,,,,84343,,,Thu Jul 13 01:15:41 UTC 2006,,,,,,,,"0|i0s00v:",161480,,,,,,,,,,,,,,,,,,,"08/Jun/06 04:51;fwang;
I have run JProbe and I suspect that maybe MessageDispatch has the memory leak. Please see the attached screen shot.

Feng","08/Jun/06 15:21;jstrachan;I'm not sure I understand those pictures. Is the number after the types the number of instances created? If so from those pictures it seems like you've got tons of JMS Session objects (124596 of them!). Why so many JMS sessions? Those are objects your code creates and manages; so I suspect its your code not closing them down and letting them garbage collect?

Whic one of the 2 programs is it you ran the profiler on?","08/Jun/06 15:39;jstrachan;BTW if those numbers are not the number of instances in the JVM - which could be true (they might be hashcodes rather than instance counts) - then the pictures are not helpful - we need to know how many instances of each type there are - i.e. to find a memory leak we need to know what objects are using up all the RAM","08/Jun/06 22:04;fwang;
I profiled DumpDumpJMSMsg.java because that is the one will throw ""out of memory"" error very quickly.

I have attached the image for the instance count (instance.png).  As you can see, byte array took the most of memory. But the counts of MessageDispatch, ActiveMQObjectMessage  and MessageId keep increasing.  In the previouslyploaded pictures,
there was a loop in MessageDispatch reference graph.   Usually it is a sign of memory leak. 

I guess that in Release 4  you start to use concurrent packge from emory universiy (but not RC2 build). CopyOnWriteArrayList 
is from concurrent package and take a look at middle.png. CopyOnWriteArrayList has a reference to object[1]. 

Since I am quite new to ActiveMQ  and emory  concurrent package (only 2 days), I am not sure where the problem is. 





","10/Jun/06 10:24;jstrachan;So having about 809 Message objects in RAM doesn't particularly seem like a memory leak. The ActiveMQ JMS client will cache a pre-fetch size of messages in RAM

http://incubator.apache.org/activemq/what-is-the-prefetch-limit-for.html

the default for topics is about 4000 messages. You could set this to a really small value, like 10 if you like.","12/Jun/06 15:18;jstrachan;I'm not yet convinced there is any memory leak. If you can find some leak we can always reopen this issue. As I said on the mail list, to reduce RAM overhead try use optimizeAcknowledge=false and reduce the prefetch value.","12/Jun/06 15:19;jstrachan;Am gonna mark this one as fixed as I think the optimiseAcknowledge being disabled in 4.0.1 will further reduce your RAM footprint","13/Jul/06 01:15;niclas;Does that mean ActiveMQ will also not throw away acknowledged messages and hold them around as well?

We are looking at a 1 message per 2 seconds which are consumed in milliseconds, and yet (in 4.0.1) we are running out of memory. That is true for transacted/non-transacted as well as auto-acknowledge and client-acknowledge. 
However, we also see that Lingo has no such problems, so perhaps we should try to look into the Lingo sources to check how it uses ActiveMQ. Any pointer?

Btw, not sure if spring-jms throws anything particular into the mix either...",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Closing consumer does not free server memory, server heap overflows",AMQ-1062,12481911,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,jk@penguinsfan.com,jk@penguinsfan.com,19/Nov/06 22:32,24/Nov/06 20:01,30/Jan/20 16:57,24/Nov/06 20:01,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"I am using the store durable pending cursor.

Create a producer for a topic and let it run continuously for the remainder of the test.
Create a durable consumer and kill it immediately.  (So now messages are piling up for the consumer, but memory usage is low thanks to the store cursor.)
Wait a few minutes.
Now, start the same durable consumer again.
Memory usage will increase considerably at this point (I get it around 20%).
Now, stop the consumer.
Memory usage DOES NOT go down.
Now, reconnect the same durable consumer.  It is possible to get a heap overrun that nukes the server!

This is a problem when there are many consumers, and  the general use case is that many of them are not active at the same time.  I am classifying this as ""critical bug"" due to the heap overflow whenI try to reconnect, but it would be great if the memory usage went down as soon as disconnect.

I image there may also be problems like this with queues, but did not test.

2006-11-19 17:24:20,015 [/127.0.0.1:3278] DEBUG PrefetchSubscription           - Prefetch limit.
2006-11-19 17:24:21,281 [/127.0.0.1:3278] DEBUG Service                        - Error occured while processing sync command: java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
","Windows XP Professional, Java HotSpot(TM) Client VM version 1.5.0_09-b01",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-24 20:01:11.0,,,false,,,,,,,,,,,,,,,,,84729,,,Fri Nov 24 20:01:11 UTC 2006,,,,,,,,"0|i0s09r:",161520,,,,,,,,,,,,,,,,,,,"24/Nov/06 20:01;rajdavies;SVN revision 478967.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory usage jumps > 100% with durable subscription and stays there,AMQ-1061,12481895,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,jk@penguinsfan.com,jk@penguinsfan.com,19/Nov/06 20:06,24/Nov/06 20:00,30/Jan/20 16:57,24/Nov/06 20:00,5.0.0,,,,,,5.0.0,,,,,,,0,"Using the store pending cursor, activemq.xml configured to use 200M of RAM and Kaha store.  JVM started with options -Xms512M -Xmx512M -Xmn100M.  Messages are 10KB in size, prefetch is default. 

I am seeing the memory usage immediately jump up really high (>100) as soon as a durable consumer is activated when a large number of messages are waiting for that consumer. 

The producer hangs under this situation. 

If the consumer is killed before memory usage drops to normal, memory usage does not drop (i.e., the server locks forever).

Sometimes, it is possible to exhaust the Java heap and actually crash the server.

Here is the kind of things I'm seeing in the DEBUG log: 

2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 10, to: 9 
2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 9, to: 8 
2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 8, to: 7 
2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 7, to: 6 
2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 6, to: 5 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 5, to: 4 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 4, to: 3 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 3, to: 2 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 2, to: 1 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 1, to: 0 
2006-11-19 13:51:53,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 58, to: 59 
2006-11-19 13:51:53,593 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 59, to: 60 
2006-11-19 13:51:53,812 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 60, to: 61 
2006-11-19 13:51:53,843 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 61, to: 62 
2006-11-19 13:51:53,890 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 62, to: 63 
2006-11-19 13:51:54,015 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 63, to: 64 
2006-11-19 13:51:54,015 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 64, to: 65 
2006-11-19 13:51:54,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 65, to: 66 
2006-11-19 13:51:54,062 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 66, to: 67 
2006-11-19 13:51:54,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 67, to: 68 
2006-11-19 13:51:54,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 68, to: 69 
2006-11-19 13:51:54,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 69, to: 70 
2006-11-19 13:51:54,125 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 70, to: 71 
2006-11-19 13:51:54,171 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 71, to: 72 
2006-11-19 13:51:54,171 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 72, to: 73 
2006-11-19 13:51:54,171 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 73, to: 74 
2006-11-19 13:51:54,187 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 74, to: 75 
2006-11-19 13:51:54,234 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 75, to: 76 
2006-11-19 13:51:54,234 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 76, to: 77 
2006-11-19 13:51:54,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 77, to: 78 
2006-11-19 13:51:54,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 78, to: 79 
2006-11-19 13:51:54,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 79, to: 80 
2006-11-19 13:51:54,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 80, to: 81 
2006-11-19 13:51:54,281 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 81, to: 82 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 82, to: 83 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 83, to: 84 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 84, to: 85 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 85, to: 86 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 86, to: 87 
2006-11-19 13:51:54,359 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 87, to: 88 
2006-11-19 13:51:54,390 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 88, to: 89 
2006-11-19 13:51:54,390 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 89, to: 90 
2006-11-19 13:51:54,406 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 90, to: 91 
2006-11-19 13:51:54,406 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 91, to: 92 
2006-11-19 13:51:54,406 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 92, to: 93 
2006-11-19 13:51:54,421 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 93, to: 94 
2006-11-19 13:51:54,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 94, to: 95 
2006-11-19 13:51:54,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 95, to: 96 
2006-11-19 13:51:54,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 96, to: 97 
2006-11-19 13:51:54,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 97, to: 98 
2006-11-19 13:51:54,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 98, to: 99 
2006-11-19 13:51:54,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 99, to: 100 
2006-11-19 13:51:54,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 100, to: 101 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 101, to: 102 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 102, to: 103 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 103, to: 104 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 104, to: 105 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 105, to: 106 
2006-11-19 13:51:54,562 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 106, to: 107 
2006-11-19 13:51:54,562 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 107, to: 108 
2006-11-19 13:51:54,562 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 108, to: 109 
2006-11-19 13:51:54,593 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 109, to: 110 
2006-11-19 13:51:54,609 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 110, to: 111 
2006-11-19 13:51:54,609 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 111, to: 112 
2006-11-19 13:51:54,609 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 112, to: 113 
2006-11-19 13:51:54,609 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 113, to: 114 
2006-11-19 13:51:54,625 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 114, to: 115 
2006-11-19 13:51:54,687 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 115, to: 116 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 116, to: 117 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 117, to: 118 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 118, to: 119 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 119, to: 120 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 120, to: 121 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 121, to: 122 
2006-11-19 13:51:54,734 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 122, to: 123 
2006-11-19 13:51:54,734 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 123, to: 124 
2006-11-19 13:51:54,750 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 124, to: 125 
2006-11-19 13:51:54,765 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 125, to: 126 
2006-11-19 13:51:54,781 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 126, to: 127 
2006-11-19 13:51:54,781 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 127, to: 128 
2006-11-19 13:51:54,812 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 128, to: 129 
2006-11-19 13:51:54,828 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 129, to: 130 
2006-11-19 13:51:54,828 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 130, to: 131 
2006-11-19 13:51:54,828 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 131, to: 132 
2006-11-19 13:51:54,843 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 132, to: 133 
2006-11-19 13:51:54,984 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 133, to: 134 
2006-11-19 13:51:54,984 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 134, to: 135 
2006-11-19 13:51:54,984 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 135, to: 136 
2006-11-19 13:51:55,031 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 136, to: 137 
2006-11-19 13:51:55,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 137, to: 138 
2006-11-19 13:51:55,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 138, to: 139 
2006-11-19 13:51:55,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 139, to: 140 
2006-11-19 13:51:55,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 140, to: 141 
2006-11-19 13:51:55,062 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 141, to: 142 
2006-11-19 13:51:55,062 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 142, to: 143 
2006-11-19 13:51:55,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 143, to: 144 
2006-11-19 13:51:55,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 144, to: 145 
2006-11-19 13:51:55,234 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 145, to: 146 
2006-11-19 13:51:55,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 146, to: 147 
2006-11-19 13:51:55,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 147, to: 148 
2006-11-19 13:51:55,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 148, to: 149 
2006-11-19 13:51:55,281 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 149, to: 150 
2006-11-19 13:51:55,281 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 150, to: 151 
2006-11-19 13:51:55,281 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 151, to: 152 
2006-11-19 13:51:55,375 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 152, to: 153 
2006-11-19 13:51:55,390 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 153, to: 154 
2006-11-19 13:51:55,406 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 154, to: 155 
2006-11-19 13:51:55,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 155, to: 156 
2006-11-19 13:51:55,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 156, to: 157 
2006-11-19 13:51:55,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 157, to: 158 
2006-11-19 13:51:55,453 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 158, to: 159 
2006-11-19 13:51:55,453 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 159, to: 160 
2006-11-19 13:51:55,453 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 160, to: 161 
2006-11-19 13:51:55,484 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 161, to: 162 
2006-11-19 13:51:55,484 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 162, to: 163 
2006-11-19 13:51:55,531 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 163, to: 164 
2006-11-19 13:51:55,562 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 164, to: 165","Windows XP Professional, JVM 1.5.0_09",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-24 20:00:33.0,,,false,,,,,,,,,,,,,,,,,84730,,,Fri Nov 24 20:00:33 UTC 2006,,,,,,,,"0|i0s09z:",161521,,,,,,,,,,,,,,,,,,,"19/Nov/06 22:06;jk@penguinsfan.com;Looking closer at this, it appears I goofed and didn't set the 200M in my config file.

However, this is still an issue because it is possible for a client to send a single big message (or several big messages in succession) and kill the server.

It would be nice if the prefetch/page in could be configured in terms of bytes, not just number of messages.  Also, some kind of global optimization that looks at the current memory usage percentage and tries to keep it below some threshold.

My application has some use cases where big messages will be going into the queues, where the queues usually contain lots of small messages but there can be much larger ones and possible even streams of larger ones in succession.  It would be great if the server could handle this gracefully.","24/Nov/06 20:00;rajdavies;SVN revision 478967.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some tools from Command line not works properly,AMQ-1048,12481881,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,aco,lucasgpl,lucasgpl,14/Nov/06 20:53,16/Nov/06 21:12,30/Jan/20 16:57,16/Nov/06 21:12,4.0.1,,,,,,4.1.1,5.0.0,,Broker,,,,0,"Some command line not works properly, just return de prompt 
Example: 
query -QQueue=* 

query --objname Type=Connect,BrokerName=localhost -xQNetworkConnector=* 

etc...",Tested in Windows XP Professional and Linux Debian Sarge,,,,,,,,,,,,,,,,,,172800,172800,,0%,172800,172800,,,AMQ-1050,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-16 21:12:06.0,,,false,,,,,,,,,,,,,,,,,84368,,,Thu Nov 16 21:12:06 UTC 2006,,,,,,,,"0|i0s09b:",161518,,,,,,,,,,,,,,,,,,,"16/Nov/06 21:12;aco;I've added a fix for this in the 4.1 (r475929) and 4.2 (r475901) branch.

The fix is only for the format parameter -QXXX=YYY. The --objname parameter seems to be working fine. I'd try adding quotes to the param when using in WinXP (I'm not sure about linux though). i.e. query ""-QTopic=XXX"" ""--objname"" ""Type=Topic,Destination=XXX"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQStreamMessage should support large text format in writeString.,AMQ-942,12481773,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,aco,aco,aco,27/Sep/06 10:46,04/Oct/06 08:35,30/Jan/20 16:57,04/Oct/06 08:35,4.0.2,4.1.0,,,,,4.1.0,,,JMS client,,,,0,"I was wondering if ActiveMQStreamMessage should support large text messages also, since MapMessage is also able to support this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84441,,,Wed Oct 04 08:35:51 UTC 2006,,,,,,,,"0|i0s03z:",161494,,,,,,,,,,,,,,,,,,,"04/Oct/06 08:35;aco;rev: r452793
Added support for writing and reading of large strings in ActiveMQStreamMessage. Also, refactored ActiveMQStreamMessage to also use the MarshallingSupport utility.

NOTE: Refactoring the ActiveMQStreamMessage to use the MarshallingSupport utility will make it incompatible with previous versions as the wireformat has been changed. It is advisable to clear existing messages and use clients with the same version.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception thrown when compiling activemq-optional.,AMQ-902,12481805,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,foconer,foconer,foconer,30/Aug/06 07:05,30/Aug/06 09:33,30/Jan/20 16:57,30/Aug/06 09:33,,,,,,,4.0.1,,,Transport,,,,0,"The exception below is thrown when compiling activemq-optional.

""[WARNING] Unable to get resource from repository central (http://ibiblio.org/maven2/)
[INFO] [compiler:compile]
Compiling 12 source files to D:\logicblaze\working-source\activemq\activemq-optional\target\classes
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure

D:\logicblaze\working-source\activemq\activemq-optional\src\main\java\org\apache\activemq\transport\https\HttpsTransportServer.java:[51,36] cannot find symbol
symbol  : method setAlgorithm(java.lang.String)
location: class org.mortbay.jetty.security.SslSocketConnector""

--------------------------------------------------------------------------------

There was an update made on jetty dependency version from 6.0.0rc0 to 6.0.0rc2 wherein the method ""setAlgorithm(String)"" of ""org.mortbay.jetty.security.SslSocketConnector"" was changed to a more specific methods ""setSecureRandomAlgorithm(String), setSslKeyManagerFactoryAlgorithm(String) and setSslTrustManagerFactoryAlgorithm(String)"". This change caused the class ""HttpsTransportServer."" to throw an exception since it can no longer find the ""setAlgorithm(String)"" method. 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,92770,,,2006-08-30 07:05:27.0,,,,,,,,"0|i0s04n:",161497,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create a super pom for tooling projects in activemq so we can create a nightly build of the various maven plugins,AMQ-858,12481736,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,foconer,jstrachan,jstrachan,03/Aug/06 01:58,04/Aug/06 07:36,30/Jan/20 16:57,04/Aug/06 07:36,,,,,,,4.1.0,,,,,,,0,"We need to move all the m2 plugins under tooling/ (they nearly all are) then create a pom.xml there for building all the tooling plugings.

Folks from there can then do 'mvn clean install' to build and install all the m2 plugins. We can then create a nightly build of the m2 plugins easily.

(Right now plugins are not always auto-downloaded when folks try to use stuff in say activemq-perftest module)....

e.g.

macstrac:/workspace/eclipse/activemq jstrachan$ cd activemq-perftest/
macstrac:/workspace/eclipse/activemq/activemq-perftest jstrachan$ mvn activemq-perf:broker
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'activemq-perf'.
[INFO] org.apache.maven.plugins: checking for updates from apache-snapshots
[INFO] org.codehaus.mojo: checking for updates from apache-snapshots
[INFO] artifact org.apache.maven.plugins:maven-compiler-plugin: checking for updates from apache-snapshots
[INFO] snapshot org.apache.maven.plugins:maven-compiler-plugin:2.1-SNAPSHOT: checking for updates from apache-snapshots
[INFO] artifact org.apache.maven.plugins:maven-eclipse-plugin: checking for updates from apache-snapshots
[INFO] snapshot org.apache.maven.plugins:maven-eclipse-plugin:2.3-SNAPSHOT: checking for updates from apache-snapshots
[INFO] snapshot org.apache.maven.plugins:maven-plugins:2-SNAPSHOT: checking for updates from apache-snapshots
[INFO] artifact org.apache.activemq:maven-activemq-memtest-plugin: checking for updates from apache-snapshots
[INFO] artifact org.apache.activemq:maven-activemq-memtest-plugin: checking for updates from central
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] The plugin 'org.apache.activemq:maven-activemq-memtest-plugin' does not exist or no valid version could be found
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 13 seconds
[INFO] Finished at: Thu Aug 03 02:55:57 BST 2006
[INFO] Final Memory: 3M/5M
[INFO] ------------------------------------------------------------------------",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-04 07:36:28.0,,,false,,,,,,,,,,,,,,,,,92754,,,Fri Aug 04 07:36:28 UTC 2006,,,,,,,,"0|i0s047:",161495,,,,,,,,,,,,,,,,,,,"04/Aug/06 07:36;foconer;done, also moved the maven-bundle-plugin and maven-gram-plugin to tooling. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnectionDotFileInterceptor not thread safe.,AMQ-749,12481738,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,ning.li,ning.li,13/Jun/06 02:04,15/Jun/06 21:34,30/Jan/20 16:57,15/Jun/06 21:34,4.0,,,,,,4.0.1,4.1.0,,,,,,0,"Unable to run multithreaded MQ application, even for the simplest case.

This is the peudo code, modified the ProducerTool.java

For ( thread 1 to 30 )
{
    Connection  connection = createConnection();
    Session session = createSession(connection);
   Producer producer = createProducer(session);
   sendMessages(producer, 20);  //send 20 messages to broker using all default settings
}

these are the exceptions from broker:
Caught: javax.jms.JMSException: java.util.ConcurrentModificationException
[cp://localhost/127.0.0.1:61616] ActiveMQConnection             WARN  Async exception with no exception listener: java.util.ConcurrentModificationException
java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:787)
	at java.util.HashMap$EntryIterator.next(HashMap.java:829)
	at java.util.HashMap$EntryIterator.next(HashMap.java:827)
	at org.apache.activemq.broker.view.ConnectionDotFileInterceptor.printProducers(ConnectionDotFileInterceptor.java:157)
	at org.apache.activemq.broker.view.ConnectionDotFileInterceptor.generateFile(ConnectionDotFileInterceptor.java:140)
	at org.apache.activemq.broker.view.DotFileInterceptorSupport.generateFile(DotFileInterceptorSupport.java:47)
	at org.apache.activemq.broker.view.ConnectionDotFileInterceptor.addProducer(ConnectionDotFileInterceptor.java:85)
	at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:90)
	at org.apache.activemq.broker.AbstractConnection.processAddProducer(AbstractConnection.java:397)
	at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:100)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)
	at java.lang.Thread.run(Thread.java:595)


and exception in the client side:
javax.jms.JMSException: java.util.ConcurrentModificationException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:45)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1137)
	at org.apache.activemq.AdvisoryConsumer.<init>(AdvisoryConsumer.java:45)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1227)
	at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:435)
	at com.businessobjects.framework.services.mq.ToolSupport.createConnection(ToolSupport.java:51)
	at com.businessobjects.framework.services.mq.ProducerTool.run(ProducerTool.java:106)",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-13 03:29:45.0,,,false,,,,,,,,,,,,,,,,,84339,,,Thu Jun 15 21:34:25 UTC 2006,,,,,,,,"0|i0s07j:",161510,,,,,,,,,,,,,,,,,,,"13/Jun/06 03:29;chirino;As a simple workaround, disable the dot file broker plugin.","15/Jun/06 21:34;chirino;Added synchronization to make thread safe.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bidirectional channel that is sending data each other in two AciveMQ cann't resume when network was interrupt and resumed.,AMQ-489,12481414,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,taoyonggang,taoyonggang,16/Jan/06 02:32,13/Jun/06 03:22,30/Jan/20 16:57,13/Jun/06 03:22,3.2.1,,,,,,4.0,,,Transport,,,,0,"But ,If unilateralism channel it can be resumed.

I used bidirectional channel.

I have test one way channel that's no bug.but bidirectional channel cann't resume.

config one:
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC ""-//ACTIVEMQ//DTD//EN"" ""http://activemq.org/dtd/activemq.dtd"">
<beans>

<!-- ==================================================================== -->
<!-- ActiveMQ Broker Configuration -->
<!-- ==================================================================== -->
<broker name =""tao-111"">

<connector >
<tcpServerTransport uri=""tcp://localhost:61616"" backlog=""1000"" useAsyncSend=""true"" maxOutstandingMessages=""50"" />
</connector>
<connector>
<tcpServerTransport uri=""tcp://128.64.7.64:62001"" />
</connector>
<connector>
<serverTransport uri=""stomp://localhost:61626""/>
</connector>


<networkConnector>
<networkChannel uri=""reliable:tcp://128.64.7.27:62001"" />
<localPrefetchPolicy queuePrefetch=""100"" queueBrowserPrefetch=""100"" topicPrefetch=""100"" durableTopicPrefetch=""100""/>
<remotePrefetchPolicy topicPrefetch=""100"" durableTopicPrefetch=""100"" queuePrefetch=""100"" queueBrowserPrefetch=""100"" />
</networkConnector>


config two:

<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC ""-//ACTIVEMQ//DTD//EN"" ""http://activemq.org/dtd/activemq.dtd"">
<beans>

<!-- ==================================================================== -->
<!-- ActiveMQ Broker Configuration -->
<!-- ==================================================================== -->
<broker name =""tao-1"">

<connector >
<tcpServerTransport uri=""tcp://localhost:61616"" backlog=""1000"" useAsyncSend=""true"" maxOutstandingMessages=""50""/>
</connector>
<connector>
<tcpServerTransport uri=""tcp://128.64.7.27:62001"" />
</connector>
<connector>
<serverTransport uri=""stomp://localhost:61626"" />
</connector>


<networkConnector>
<networkChannel uri=""reliable:tcp://128.64.7.64:62001""/>
<localPrefetchPolicy queuePrefetch=""100"" queueBrowserPrefetch=""100"" topicPrefetch=""100"" durableTopicPrefetch=""100""/>
<remotePrefetchPolicy topicPrefetch=""100"" durableTopicPrefetch=""100"" queuePrefetch=""100"" queueBrowserPrefetch=""100"" />

</networkConnector>
.... 

",winxp sp2  jdk5.0 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-13 03:22:27.0,,,false,,,,,,,,,,,,,,,,,49155,,,Tue Jun 13 03:22:27 UTC 2006,,,,,,,,"0|i0s07r:",161511,,,,,,,,,,,,,,,,,,,"16/Jan/06 02:38;taoyonggang;I used Bidirectional channel ,but data is unilateralism( One queue only  send data one direction). It's can work good when network is good,but network be interrup and resumed .Then Bidirectional channel cann't resumed.","13/Jun/06 03:22;chirino;Fixed in 4.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot add a new connector using ActiveMQManagerGBean,AMQ-727,12481604,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,pmcmahan,pmcmahan,27/May/06 01:01,07/Jun/06 03:48,30/Jan/20 16:57,07/Jun/06 03:48,3.2.4,,,,,,3.2.4,,,Geronimo Integration,,,,0,"Trying to create a new connector from the Admin Console in Geronimo v1.1 fails with the following ST:

11:06:48,041 ERROR [JMSConnectorPortlet] Unable to process portlet action
java.lang.IllegalArgumentException: GBeanInfo must have a source class set
at org.apache.geronimo.system.configuration.GBeanOverride.<init>(GBeanOverride.java:76)
at org.apache.geronimo.system.configuration.LocalAttributeManager.addGBean(LocalAttributeManager.java:320)
at org.apache.geronimo.system.configuration.LocalAttributeManager$$FastClassByCGLIB$$b20ef545.invoke(<generated>)
at net.sf.cglib.reflect.FastMethod.invoke(FastMethod.java:53)
at org.apache.geronimo.gbean.runtime.FastMethodInvoker.invoke(FastMethodInvoker.java:38)
at org.apache.geronimo.gbean.runtime.GBeanOperation.invoke(GBeanOperation.java:122)
at org.apache.geronimo.gbean.runtime.GBeanInstance.invoke(GBeanInstance.java:817)
at org.apache.geronimo.gbean.runtime.RawInvoker.invoke(RawInvoker.java:57)
at org.apache.geronimo.kernel.basic.RawOperationInvoker.invoke(RawOperationInvoker.java:35)
at org.apache.geronimo.kernel.basic.ProxyMethodInterceptor.intercept(ProxyMethodInterceptor.java:96)
at org.apache.geronimo.kernel.config.PersistentConfigurationList$$EnhancerByCGLIB$$d01f9f2b.addGBean(<generated>)
at org.apache.geronimo.kernel.config.EditableKernelConfigurationManager.addGBeanToConfiguration(EditableKernelConfigurationManager.java:127)
at org.apache.geronimo.kernel.config.EditableKernelConfigurationManager.addGBeanToConfiguration(EditableKernelConfigurationManager.java:60)
at org.apache.geronimo.kernel.config.EditableKernelConfigurationManager$$FastClassByCGLIB$$daeffab3.invoke(<generated>)
at net.sf.cglib.reflect.FastMethod.invoke(FastMethod.java:53)
at org.apache.geronimo.gbean.runtime.FastMethodInvoker.invoke(FastMethodInvoker.java:38)
at org.apache.geronimo.gbean.runtime.GBeanOperation.invoke(GBeanOperation.java:122)
at org.apache.geronimo.gbean.runtime.GBeanInstance.invoke(GBeanInstance.java:817)
at org.apache.geronimo.gbean.runtime.RawInvoker.invoke(RawInvoker.java:57)
at org.apache.geronimo.kernel.basic.RawOperationInvoker.invoke(RawOperationInvoker.java:35)
at org.apache.geronimo.kernel.basic.ProxyMethodInterceptor.intercept(ProxyMethodInterceptor.java:96)
at org.apache.geronimo.kernel.config.EditableConfigurationManager$$EnhancerByCGLIB$$e6ae163a.addGBeanToConfiguration(<generated>)
at org.activemq.gbean.management.ActiveMQManagerGBean.addConnector(ActiveMQManagerGBean.java:207)
at org.activemq.gbean.management.ActiveMQManagerGBean$$FastClassByCGLIB$$a78b116e.invoke(<generated>)
at net.sf.cglib.reflect.FastMethod.invoke(FastMethod.java:53)
at org.apache.geronimo.gbean.runtime.FastMethodInvoker.invoke(FastMethodInvoker.java:38)
at org.apache.geronimo.gbean.runtime.GBeanOperation.invoke(GBeanOperation.java:122)
at org.apache.geronimo.gbean.runtime.GBeanInstance.invoke(GBeanInstance.java:817)
at org.apache.geronimo.gbean.runtime.RawInvoker.invoke(RawInvoker.java:57)
at org.apache.geronimo.kernel.basic.RawOperationInvoker.invoke(RawOperationInvoker.java:35)
at org.apache.geronimo.kernel.basic.ProxyMethodInterceptor.intercept(ProxyMethodInterceptor.java:96)
at org.activemq.gbean.ActiveMQManager$$EnhancerByCGLIB$$1f9d3f5e.addConnector(<generated>)
at org.apache.geronimo.console.util.PortletManager.createJMSConnector(PortletManager.java:275)
at org.apache.geronimo.console.jmsmanager.server.JMSConnectorPortlet.processAction(JMSConnectorPortlet.java:80)
at org.apache.pluto.core.PortletServlet.dispatch(PortletServlet.java:229)
at org.apache.pluto.core.PortletServlet.doGet(PortletServlet.java:158)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:595)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:688)
at org.apache.pluto.core.PortletServlet.service(PortletServlet.java:153)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)
at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:574)
at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:499)
at org.apache.pluto.invoker.impl.PortletInvokerImpl.invoke(PortletInvokerImpl.java:120)
at org.apache.pluto.invoker.impl.PortletInvokerImpl.action(PortletInvokerImpl.java:68)
at org.apache.pluto.PortletContainerImpl.processPortletAction(PortletContainerImpl.java:164)
at org.apache.pluto.portalImpl.core.PortletContainerWrapperImpl.processPortletAction(PortletContainerWrapperImpl.java:82)
at org.apache.pluto.portalImpl.Servlet.doGet(Servlet.java:227)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:595)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:688)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
at org.apache.geronimo.tomcat.valve.DefaultSubjectValve.invoke(DefaultSubjectValve.java:52)
at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:524)
at org.apache.geronimo.tomcat.GeronimoStandardContext$SystemMethodValve.invoke(GeronimoStandardContext.java:342)
at org.apache.geronimo.tomcat.valve.GeronimoBeforeAfterValve.invoke(GeronimoBeforeAfterValve.java:31)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:541)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:667)
at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
at java.lang.Thread.run(Thread.java:534)

The problem seems to be that ActiveMQConnectorGBean.java doesn't provide a source class in its gbean info.  See the attached patch.

Also, please see the following GERONIMO JIRA which describes a similar problem with persisting a new connector across Geronimo restarts (it provides a patch).
    http://issues.apache.org/jira/browse/GERONIMO-1451", activemq 3.2.4 running in geronimo 1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/May/06 01:01;pmcmahan;ASF.LICENSE.NOT.GRANTED--ACTIVEMQ-gbeaninfo.patch;https://issues.apache.org/jira/secure/attachment/12460587/ASF.LICENSE.NOT.GRANTED--ACTIVEMQ-gbeaninfo.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-06-07 03:48:40.0,,,false,,,,,,,,,,,,,,,,,84282,,,Wed Jun 07 03:48:40 UTC 2006,,,,,,,,"0|i0s0dj:",161537,,,,,,,,,,,,,,,,,,,"07/Jun/06 03:48;chirino;Patch applied against revision 1119",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker is not delivering all messages to slow consumer,AMQ-736,12481614,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,jurna,jurna,03/Jun/06 04:58,05/Jun/06 21:12,30/Jan/20 16:57,05/Jun/06 20:48,4.0,,,,,,4.0.1,,,Broker,,,,0,"When producer produces more messages than consumer can handle, after some time some messages are not delivered to the consumer (they are just skipped). To get those messages from the broker, you need to reconnect the consumer. It seems that this bug only occures if message persistance is turned on in the broker.",Linux/Windows Java 1.5.0_06,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jun/06 04:58;jurna;ASF.LICENSE.NOT.GRANTED--SlowConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12460676/ASF.LICENSE.NOT.GRANTED--SlowConsumerTest.java","05/Jun/06 04:50;jurna;slowConsumer.patch;https://issues.apache.org/jira/secure/attachment/12460541/slowConsumer.patch",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-06-05 17:38:52.0,,,false,,,,,,,,,,,,,,,,,38747,,,Mon Jun 05 21:12:08 UTC 2006,,,,Patch Available,,,,"0|i0s08v:",161516,,,,,,,,,,,,,,,,,,,"05/Jun/06 04:49;jurna;The problem is not in the broker, but in JournalMessageStore. Whet JoiurnalMessageStore is performing checkpoint, consumers doesn't receive messages during that checkpoint. 
The bug is that during checkpoint, messages are removed from cpAddedMessageIds list, and as I understand, this is temporal message store used during checkpoint. And during checkpoint messages shouldn't be removed from there, because consumer is using this member to get messages, which are already removed from short term storage, but not yet added to long term storage. So fix is preatty simple.
I'm adding the patch against the main trunk of ActiveMQ.
Hope some ActiveMQ developers will take a look.","05/Jun/06 17:38;jstrachan;Have committed your test case - many thanks for that - its here...

https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/bugs/SlowConsumerTest.java

I made one or two minor changes (using a name local to the test case for the queue to avoid tests treading on each others toes and failing rather than hanging if enough messages are not returned in time). The test case works fine on OS X - both before my changes and after them - before applying your patch to fix the test case. Will investigate further","05/Jun/06 20:48;jstrachan;Patch and test case applied - many thanks!","05/Jun/06 21:12;jstrachan;added patch available flag",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker is not re-connecting to a network of brokers after going down and then being brought back up,AMQ-639,12481643,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,bdiesenhaus,bdiesenhaus,16/Mar/06 20:06,01/May/06 22:03,30/Jan/20 16:57,01/May/06 22:03,4.0 M4,,,,,,4.0,,,Broker,,,,0,"I have set up a network of brokers with the following configuration:

<beans xmlns=""http://activemq.org/config/1.0"">

  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
  
  <broker brokerName=""bfe-${HOSTNAME}"" useJmx=""true"" persistent=""false"" managementContext=""#mc""> 
    <destinationPolicy>
      <policyMap>
        <policyEntries>
          <policyEntry queue="">"" memoryLimit=""5000000""/>
        </policyEntries>
      </policyMap>
   </destinationPolicy>
   <memoryManager>
     <usageManager limit=""100000000""/>
    </memoryManager> 
 
    <transportConnectors>
    	<transportConnector uri=""tcp://localhost:61616"" discoveryUri=""multicast://bfe2""/> 
    </transportConnectors>
    
    <networkConnectors>
      <!-- by default just auto discover the other brokers -->
      <networkConnector uri=""multicast://bfe2""/>
    </networkConnectors>
   </broker>
  
 <bean id=""mc"" class=""org.apache.activemq.broker.jmx.ManagementContext"">
    <property name=""connectorPort"" value=""1099""/>
    <property name=""connectorPath"" value=""/jmxrmibfe-1""/>
  </bean>
 
</beans>

I then run a series of tests (producing and consuming on the network of brokers). Then I shut one broker down and then start it up again  it can't see the other brokers in the network but the other brokers can see it. ",,sjivan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 07:41:22.0,,,false,,,,,,,,,,,,,,,,,49272,,,Mon May 01 22:03:04 UTC 2006,,,,,,,,"0|i0s00n:",161479,Regression,,,,,,,,,,,,,,,,,,"17/Mar/06 07:41;chirino;Thanks for the report!  Fixed.","17/Mar/06 19:11;bdiesenhaus;I did some testing this morning and here is what I found: 
1. The broker is re-connecting. Looking at the connection in the JMX console all the brokers can see each other. This was not the case before. 
2. The brokers that were not brought down are throwing the below exception when the broker re-connects. 
3. Running the test again after the broker comes up only about 1/3 of the message make it to the broker that was brought back up and then it .


INFO: Async error occurred: javax.jms.InvalidClientIDException: Broker: bfe-grieg - Client: NC_bfe-holst_inboundbfe-grieg already connected
javax.jms.InvalidClientIDException: Broker: bfe-grieg - Client: NC_bfe-holst_inboundbfe-grieg already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:151)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:64)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:67)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:64)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:76)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:500)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:196)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:88)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:75)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:55)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:175)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$3.run(DemandForwardingBridgeSupport.java:147)
","17/Mar/06 19:35;jstrachan;BTW I wonder if the exception you are getting is related to this fix...

http://jira.activemq.org/jira/browse/AMQ-600

which was causing InvalidClientIDException to be thrown when network errors occur by handling the IOException in the wrong way","17/Mar/06 19:35;jstrachan;(BTW that issue was fixed in the last hour or so in SVN)","17/Mar/06 21:27;bdiesenhaus;I pulled the latest code with the fix for AMQ-600 and I am still seeing the following issues: 
1. The brokers that were not brought down are still throwing the InvalidClientIDException when the broker that was brought down tries to re-connect.  
2. Only about 1/3 of the message make it to the broker that was brought back up after running the test again. 

","25/Apr/06 20:25;chirino;I've tried to setup a similar scenario.  And I do see some message loss but when the broker is taken down but that can be expected since the messages are not persistent.  Once the broker is brought back online, processing continues without message loss.  When a broker is shutdown, any transient messages he had in it's queues will be dropped.  Do you think this could explain the lost messages you've been seeing?","01/May/06 22:03;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in ManagedRegionBroker,AMQ-683,12481540,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,rajdavies,rajdavies,09/Apr/06 06:10,01/May/06 21:48,30/Jan/20 16:57,12/Apr/06 12:33,4.0 RC2,,,,,,4.0,,,Broker,,,,0,A memory leak in the ManagedRegionBroker - not critical because the work around currently is to set the property on the broker useJmx=false,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49307,,,Wed Apr 12 12:33:26 UTC 2006,,,,,,,,"0|i0s0db:",161536,,,,,,,,,,,,,,,,,,,"12/Apr/06 12:33;rajdavies;No memory leaks currently found",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple durable topics don't work with network of brokers,AMQ-687,12481683,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,rajdavies,yaussy,yaussy,11/Apr/06 00:12,11/Apr/06 01:19,30/Jan/20 16:57,11/Apr/06 01:19,4.0 RC2,,,,,,4.0 RC3,,,Broker,,,,0,"There is a problem with a network of brokers with regards to a single consumer subscribing to multiple durable topics.  

To recreate the issue, I changed examples/ConsumerTool.java to subscribe to two durable topics, with the createDurableSubscriber calls changed to look like this:
                consumer = session.createDurableSubscriber(topic1, topic1.getTopicName() );
                consumer2 = session.createDurableSubscriber( topic2, topic2.getTopicName() );
This ensures that the name of the durable subscriptions are unique, rather than using the ""consumerName"" as the base example code does.

The problem is with any remote brokers: it appears that the broker-to-broker code for durable subscriptions does not *uniquely* set the subscription name for multiple durable subscriptions to different topics.  Here is the message and exception information from the remote broker:

<INFO> <org.apache.activemq.broker.AbstractConnection.Service> < Mon 2006/04/10 10:50:52:660 > <org.apache.activemq.broker.AbstractConnection.se
rviceException> <Thread[tcp://sbtmdgca/170.137.15.64:61618,5,main]> Async error occurred: javax.jms.JMSException: Durable consumer is in use for
 client: NC_ProdDN3AsbtmdgcasbtmdgcAMQDN_inboundProdDN3Bsbtgc0bsbtgc0AMQDN and subscriptionName: ProdDN3Bsbtgc0bsbtgc0AMQDN
<INFO> Stack Trace follows:
javax.jms.JMSException: Durable consumer is in use for client: NC_ProdDN3AsbtmdgcasbtmdgcAMQDN_inboundProdDN3Bsbtgc0bsbtgc0AMQDN and subscriptio
nName: ProdDN3Bsbtgc0bsbtgc0AMQDN
        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:81)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:276)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:69)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:75)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:69)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:81)
        at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:422)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:291)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:196)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:88)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:75)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:55)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.addSubscription(DemandForwardingBridgeSupport.java:344)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteConsumerAdvisory(DemandForwardingBridgeSupport.java:324)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:274)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:120)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:88)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:103)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:139)
        at java.lang.Thread.run(Thread.java:595)


You can see that the ""subscriptionName"" used from the originating broker is the brokerName.  This will never handle multiple durable subscriptions (different topics) from the same consumer.

Perhaps in addition to the brokerName, the original topic name could be used?  Or, just the topic name, since clientId is supposed to make it unique anyway.
","AMQ RC2, Solaris 8 / 10, JDK 1.5",yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-04-11 01:19:02.0,,,false,,,,,,,,,,,,,,,,,84300,,,Tue Apr 11 01:19:02 UTC 2006,,,,,,,,"0|i0s013:",161481,,,,,,,,,,,,,,,,,,,"11/Apr/06 01:19;rajdavies;fix applied to generate subscriberName based on brokerName plus destination name",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Infinite Loop after message resend,AMQ-662,12481277,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,jpederzolli,jpederzolli,27/Mar/06 23:43,07/Apr/06 23:10,30/Jan/20 16:57,07/Apr/06 23:10,4.0 RC2,,,,,,3.2.4,4.0 RC3,,Broker,,,,0,"when a runtime exception in onMessage the messages are getting rolledback/resent as expected, however AMQ appears to go into an infinite loop at this point taking up 100% of the CPU. Turning debug on shows the following repeated:
...
[DEBUG] 2006-03-21 16:55:37,586 - org.apache.activemq.ra.ServerSessionImpl:1 (ServerSessionImpl.java:159)- run loop start
[DEBUG] 2006-03-21 16:55:37,586 - org.apache.activemq.ra.ServerSessionImpl:3 (ServerSessionImpl.java:172)- run loop end
[DEBUG] 2006-03-21 16:55:37,586 - org.apache.activemq.ra.ServerSessionImpl:22 (ServerSessionImpl.java:172)- run loop end
[DEBUG] 2006-03-21 16:55:37,586 - org.apache.activemq.ra.ServerSessionImpl:11 (ServerSessionImpl.java:159)- run loop start
[DEBUG] 2006-03-21 16:55:37,586 - org.apache.activemq.ra.ServerSessionImpl:0 (ServerSessionImpl.java:172)- run loop end
[DEBUG] 2006-03-21 16:55:37,586 - org.apache.activemq.ra.ServerSessionImpl:17 (ServerSessionImpl.java:172)- run loop end
[DEBUG] 2006-03-21 16:55:37,586 - org.apache.activemq.ra.ServerSessionImpl:1 (ServerSessionImpl.java:172)- run loop end 

The resend (and resulting infinte loop) was triggered by throwing a RuntimeException in the onMessage method of the POJO MDB.

This is being used alongside Spring 1.2.7, Jencks 1.1.1 in a POJO message driven bean setup. Attached are the configurations producing the error. 
",JDK 1.5,jpederzolli,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/06 23:43;jpederzolli;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460785/ASF.LICENSE.NOT.GRANTED--activemq.xml","27/Mar/06 23:43;jpederzolli;ASF.LICENSE.NOT.GRANTED--applicationContext.xml;https://issues.apache.org/jira/secure/attachment/12460721/ASF.LICENSE.NOT.GRANTED--applicationContext.xml",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-04-07 23:10:44.0,,,false,,,,,,,,,,,,,,,,,49289,,,Fri Apr 07 23:10:44 UTC 2006,,,,,,,,"0|i0s007:",161477,,,,,,,,,,,,,,,,,,,"30/Mar/06 11:45;jpederzolli;I've been looking into this further and it appears to be a synchronization issue in or related to ServerSessionImpl.java. If I individually send messages which are then forced to resend, everything works fine. This infinite loop only occurs when I send several messages in a row. ","05/Apr/06 00:25;jpederzolli;
I found what seems to be the source of the infinite loop - in MessageDispatchChannel.java, in the method dequeueNoWait (line 91):

    public MessageDispatch dequeueNoWait() {
        synchronized (mutex) {
            if (closed || !running || list.isEmpty()) {
                return null;
            }
            return (MessageDispatch) list.removeFirst();
        }
    }

The thread that keeps on spinning has values of closed=false, running=false, and a nonEmpty list. With those values, a null is returned up to the run() method of ActiveMqSession.java (line 640), causing it do do nothing and then finally up to ServerSessionImpl.java's run() method (line 156) where in the finally block the following code that is responsible for breaking out of the while loop (line 170):

            finally {
                InboundContextSupport.unregister(this);                
                log.debug(""run loop end"");            
                synchronized (runControlMutex) {
                    // This endpoint may have gone stale due to error
                    if( stale) {
                        runningFlag = false;
                        pool.removeFromPool(this);
                        break;
                    }
                    if( !session.hasUncomsumedMessages() ) {
                        runningFlag = false;
                        pool.returnToPool(this);
                        break;
                    }                
                }

Neither break statement is hit since the endpoint is not stale and it has unconsumed messages - and the infinite loop begins. ","07/Apr/06 23:10;chirino;fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages are sometimes sent twice,AMQ-444,12481578,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,mafoo,mafoo,16/Dec/05 10:26,18/Mar/06 07:04,30/Jan/20 16:57,18/Mar/06 07:04,3.2,,,,,,4.0 RC2,,,Transport,,,,0,"When using the STOMP c-client messages are sometimes delivered twice. See attached communication dump. See below for the comm flow;

--> CONNECT
<-- CONNECTED
--> SUBSCRIBE /queue/FOO.BAR
--> SEND /queue/FOO.BAR, msg-123, Hello World!
<-- MESSAGE Hello World!
<-- RECEIPT msg-123
<-- MESSAGE Hello World!
",WinXP & RHEL4,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/05 10:26;mafoo;ASF.LICENSE.NOT.GRANTED--log.txt;https://issues.apache.org/jira/secure/attachment/12460638/ASF.LICENSE.NOT.GRANTED--log.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-03-01 15:06:43.0,,,false,,,,,,,,,,,,,,,,,49122,,,Sat Mar 18 07:04:15 UTC 2006,,,,,,,,"0|i0s0dr:",161538,,,,,,,,,,,,,,,,,,,"01/Mar/06 15:06;jlim;
could you attach the c client  code you're using  so  we can test it out ourselves?  

tried reproducing the issue  using a java client  but can't seem to reproduce it","18/Mar/06 07:04;jstrachan;From all of our testing this appears to be resolved now in 4.0-M5. Let us know if you have any other issues",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Oracle JDBC Driver error as Persistance backend,AMQ-513,12483917,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,ronald,ronald,30/Jan/06 16:45,02/Mar/06 12:46,30/Jan/20 16:57,02/Mar/06 12:46,4.0,,,,,,4.0 RC2,,,Message Store,,,,0,"Oracle driver is not supported. This because the getBlob is not implemented.


---------------------------------------stacktrace:
java.lang.IndexOutOfBoundsException
	at java.io.DataInputStream.readFully(DataInputStream.java:263)
	at org.apache.activemq.openwire.BooleanStream.unmarshal(BooleanStream.java:88)
	at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:213)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
	at java.lang.Thread.run(Thread.java:534)

2006-01-30 15:28:06,959 DEBUG [tcp:///127.0.0.1:1376] region.AbstractRegion (AbstractRegion.java:75)     - Adding destination: queue://queue
2006-01-30 15:28:07,037 DEBUG [tcp:///127.0.0.1:1376] broker.AbstractConnection (AbstractConnection.java:194)     - Sync error occurred: java.io.IOException: Failed to recover container. Reason: java.sql.SQLException: Invalid column type: getBLOB not implemented for class oracle.jdbc.driver.T4CNumberAccessor
java.io.IOException: Failed to recover container. Reason: java.sql.SQLException: Invalid column type: getBLOB not implemented for class oracle.jdbc.driver.T4CNumberAccessor
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:30)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.recover(JDBCMessageStore.java:158)
	at org.apache.activemq.store.ProxyMessageStore.recover(ProxyMessageStore.java:49)
	at org.apache.activemq.broker.region.Queue.<init>(Queue.java:88)
	at org.apache.activemq.broker.region.QueueRegion.createDestination(QueueRegion.java:59)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:76)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:188)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:122)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:137)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:122)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:134)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:134)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:255)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:66)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:74)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:66)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:78)
	at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:413)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:275)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:190)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
	at java.lang.Thread.run(Thread.java:534)
Caused by: java.sql.SQLException: Invalid column type: getBLOB not implemented for class oracle.jdbc.driver.T4CNumberAccessor
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:125)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:162)
	at oracle.jdbc.driver.Accessor.unimpl(Accessor.java:387)
	at oracle.jdbc.driver.Accessor.getBLOB(Accessor.java:1324)
	at oracle.jdbc.driver.OracleResultSetImpl.getBLOB(OracleResultSetImpl.java:1223)
	at oracle.jdbc.driver.OracleResultSetImpl.getBlob(OracleResultSetImpl.java:1414)
	at org.apache.commons.dbcp.DelegatingResultSet.getBlob(DelegatingResultSet.java:269)
	at org.apache.commons.dbcp.DelegatingResultSet.getBlob(DelegatingResultSet.java:269)
	at org.apache.activemq.store.jdbc.adapter.OracleJDBCAdapter.getBinaryData(OracleJDBCAdapter.java:62)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doRecover(DefaultJDBCAdapter.java:343)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.recover(JDBCMessageStore.java:147)
	... 25 more","java version ""1.4.2_01""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_01-b06)
Java HotSpot(TM) Client VM (build 1.4.2_01-b06, mixed mode)

Specification-Version:  ""Oracle JDBC Driver version - 10.1.0.2.0
",,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Feb/06 22:03;dgynn;ASF.LICENSE.NOT.GRANTED--amq513.patch.txt;https://issues.apache.org/jira/secure/attachment/12460813/ASF.LICENSE.NOT.GRANTED--amq513.patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-02-11 22:02:22.0,,,false,,,,,,,,,,,,,,,,,49173,,,Thu Mar 02 12:46:10 UTC 2006,,,,,,,,"0|i0s08n:",161515,,,,,,,,,,,,,,,,,,,"11/Feb/06 22:02;dgynn;The problem is that getBlob is being called on the wrong column in OracleJDBCAdapter.
Line 62 should be:
        Blob aBlob = rs.getBlob(index);
instead of:
        Blob aBlob = rs.getBlob(1);
","11/Feb/06 22:03;dgynn;Fix to OracleJDBCAdapter","02/Mar/06 12:46;jstrachan;Many thanks for the patch! Patch applied in SVN if you wanna try it out - otherwise it'll be in 4.0-M5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The ActiveMQ  Channel between two AMQ Server Cann't  resume when network is after interrupted.,AMQ-457,12481426,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,taoyonggang,taoyonggang,29/Dec/05 06:46,02/Feb/06 18:25,30/Jan/20 16:57,02/Feb/06 18:25,3.2.1,,,,,,3.2.2,,,,,,,0,"If physics network is interrupted and resumed ,the two server channels cann't resume.",winxp  and HP-UX11  ,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-466,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-02 18:25:32.0,,,false,,,,,,,,,,,,,,,,,49132,,,Thu Feb 02 18:25:32 UTC 2006,,,,,,,,"0|i0ts9b:",171887,,,,,,,,,,,,,,,,,,,"02/Feb/06 18:25;chirino;The networks should be using the reliable protocol between them.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscriptions are not working in the Resource Adapter,AMQ-169,12481155,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,mgaffney,mgaffney,mgaffney,11/Jan/05 20:23,20/Sep/05 07:11,30/Jan/20 16:57,13/Jan/05 19:41,2.0,,,,,,2.0,,,Connector,,,,0,Creating an MDB that is a durable subscriber does not work.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48902,,,2005-01-11 20:23:23.0,,,,,,,,"0|i0tsa7:",171891,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multicast is broken and going into infinite loop due to ack problems,AMQ-277,12481309,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,maguro,sbailliez,sbailliez,25/Jun/05 10:09,15/Aug/05 20:24,30/Jan/20 16:57,15/Aug/05 20:24,3.1,,,,,,3.1,3.2,,Transport,,,,0,"Multicast transport is broken in AMQ certainly due to ack problems. Messages are sent over and over, completely flooding the network.

The behavior can be easily shown using the ProducerTool and ConsumerTool (in examples/src)
Using the following command lines:

'java ConsumerTool multicast://224.1.2.3:200 true subject false 100 4321 false'
'java ProducerTool multicast://224.1.2.3:200 true subject false 100 1234 false'
(replace that by your favorite Ant or Maven command)

Here is a sample of what you get in the Consumer console. As you can see it is a mix of messages.

     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 2 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 2 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 2 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 2 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 3 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 2 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 3 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 2 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 4 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 3 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 0 sent at: Sat Jun 25 11:47:01 CEST 2005 ...
     [java] Received: Message: 2 sent at: Sat Jun 25 11:47:02 CEST 2005 ...
     [java] Received: Message: 4 sent at: Sat Jun 25 11:47:02 CEST 2005 ...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-08-15 06:10:30.0,,,false,,,,,,,,,,,,,,,,,48997,,,Mon Aug 15 06:48:45 UTC 2005,,,,,,,,"0|i0rzuv:",161453,,,,,,,,,,,,,,,,,,,"25/Jun/05 20:39;sbailliez;The same is true with jgroups which goes crazy over the messages.

I have been trying to go back to activemq 2.1 and it does not work as well though it displays warning message on the consumer side:

     [java] We are about to wait until we consume: 100 message(s) then we will shutdown
     [java] Received: Message: 0 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 1 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 2 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 3 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 4 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 5 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 6 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 7 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 8 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 9 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] Received: Message: 10 sent at: Sat Jun 25 22:07:20 CEST 2005...
     [java] Received: Message: 0 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] 22:07:20,770 WARN  [TransportChannelSupport] No Packet found to match Receipt correlationId: 1
     [java] Received: Message: 11 sent at: Sat Jun 25 22:07:20 CEST 2005...
     [java] Received: Message: 1 sent at: Sat Jun 25 22:07:20 CEST 2005 ...
     [java] 22:07:20,810 WARN  [TransportChannelSupport] No Packet found to match Receipt correlationId: 3
     [java] Received: Message: 12 sent at: Sat Jun 25 22:07:20 CEST 2005...
     [java] Received: Message: 13 sent at: Sat Jun 25 22:07:20 CEST 2005...","15/Aug/05 06:10;maguro;We no longer send messages back to the sender.","15/Aug/05 06:48;maguro;Not quite the proper fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Leaking pooled threads,AMQ-313,12481297,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,dennis@bevocal.com,dennis@bevocal.com,20/Jul/05 18:53,02/Aug/05 00:13,30/Jan/20 16:57,02/Aug/05 00:13,3.0,,,,,,3.1,,,Transport,,,,0,"While looking for another problem I pulled a Full Thread dump on the broker.  I found several dozen threads
with the following stack trace and they look very troublesome to me. If an error occurs on an async send, 
due to a broken client connection, the close is failing in such a manner as to lock up the pooled thread.

This looks to me like there could be some sort of bug in the concurrent-1.3.4.jar library code.  
""Thread-292"" daemon prio=1 tid=0x085b6008 nid=0x6663 in Object.wait() [5cd59000..5cd59cd8]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x47eb41c0> (a EDU.oswego.cs.dl.util.concurrent.PooledExecutor)
        at java.lang.Object.wait(Object.java:429)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor.awaitTerminationAfterShutdown(Unknown Source)
        - locked <0x47eb41c0> (a EDU.oswego.cs.dl.util.concurrent.PooledExecutor)
        at org.activemq.util.ExecutorHelper.stopExecutor(ExecutorHelper.java:50)
        at org.activemq.transport.TransportChannelSupport.stopExecutor(TransportChannelSupport.java:487)
        at org.activemq.transport.tcp.TcpTransportChannel.stop(TcpTransportChannel.java:218)
        at org.activemq.broker.impl.BrokerClientImpl.close(BrokerClientImpl.java:694)
        at org.activemq.broker.impl.BrokerClientImpl.onException(BrokerClientImpl.java:137)
        at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445)
        at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:489)
        at org.activemq.transport.tcp.TcpTransportChannel$1.run(TcpTransportChannel.java:261)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:534)
 
","RH 9.0 linux, jdk 1.4.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-08-02 00:13:31.0,,,false,,,,,,,,,,,,,,,,,49025,,,Tue Aug 02 00:13:31 UTC 2005,,,,,,,,"0|i0s03r:",161493,,,,,,,,,,,,,,,,,,,"02/Aug/05 00:13;chirino;Changed to using the awaitTerminationAfterShutdown(long timeout) method of the PooledExecutor.  This should resolve the issue as now we wait up to 5 seconds instead of blocking indefinatly for the thread pool threads to shutdown.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
memory leak in JMSStatsImpl,AMQ-299,12481038,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,jesion,jesion,13/Jul/05 13:19,15/Jul/05 18:19,30/Jan/20 16:57,15/Jul/05 18:19,,,,,,,3.1,,,JMS client,,,,0,There seems to be memory leak regarding JMSStatsImpl class. It holds references to all connections (opened and closed). And because of following asociations - the reference tree grows huge. Simple test code just opening and closing connection causes memory usage to grow up to out of memory error.,,jesion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-15 18:19:11.0,,,false,,,,,,,,,,,,,,,,,49017,,,Fri Jul 15 18:19:11 UTC 2005,,,,,,,,"0|i0rzzj:",161474,,,,,,,,,,,,,,,,,,,"15/Jul/05 18:19;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak in TcpTransportServerChannel,AMQ-223,12481059,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,yuri,yuri,24/Mar/05 06:53,06/Apr/05 14:24,30/Jan/20 16:57,06/Apr/05 14:24,2.1,,,,,,3.0,,,Broker,,,,0,"We are having OutOfMemoryErrors in the broker.  Its configured for vmPersistence, messages have 60 second TTL.  I have checked Queues using Hermes (what a bitch that is to setup with ActiveMQ) and they are empty as expected.  We are using RPC style messaging, with TemporaryQueues for responses, if that helps at all.

The broker can run for a week before running out of memory, but it is related to how many connections are made.  We run 2-3 batch processes each morning that create a few thousand Connections.  Our broker continually grows, even when all consumers and producers are shutdown.

Profiling with YourKit shows the 63% of the broker memory (after GC) is held by 3292 instances of TcpTransportChannel, held by TcpTransportServerChannel.  Note, as mentioned above there are no active connections, so this doesn't appear to be a bug in our code.

This is possibly related to AMQ-125 (fixed 1.2), and AMQ-222.  It seems to be the same problem as mentioned by Charles Anthony ""Possible Memory Leak ?"" on activemq-user.  I could not find any update on that thread.

We will workaround this, by holding connections in a ThreadLocal, since there are only a few threads in a few daily processes.  But regardless, we can expect this growth to continue albeit a much slower pace.","JDK 1.4 (windows)
vmPersistence ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48948,,,Tue Mar 29 03:18:09 UTC 2005,,,,,,,,"0|i0s03j:",161492,,,,,,,,,,,,,,,,,,,"29/Mar/05 03:18;yuri;After implementing the workaround, activemq.bat memory usage is down from a peak of around 500MB to stable at around 12MB, although still expected to grow over time.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reliable reconnection process is broken,AMQ-211,12481144,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,dennis@bevocal.com,dennis@bevocal.com,09/Mar/05 05:22,12/Mar/05 02:54,30/Jan/20 16:57,12/Mar/05 02:54,,,,,,,3.0,,,Connector,,,,0,"I found a problem with the use of the Reliable protocol.  If you list multiple servers and the connection to the initial fails, the reconnect process will not complete properly.  This is cause because of the firing order of status events.  In the TcpTransportChannel.doClose() method the call to onAsyncException() will cause the Reliable class to fire a status event for disconnected, then after establishing the connection to the next server it will fire a status event for reconnected.  Finally after control returns to the doClose() method another status event for disconnected is fired.  All of these events are received by the ActiveMQConnection.statusChanged() method and are interpreted to set the ActiveMQConnection.isTransportOK member.  With the series of events as listed above:

disconnected
reconnected
disconnected

you can see why the state of ActiveMQConnection.isTransportOK is incorrect after a reconnect.

I did not know if it were safe to actually remove the final fireStatusEvent() call from the TcpTransportChannel.doClose(), so did the next best thing.  I moved it up before the the call to onAsyncException() .  This changed the order of the events to:

disconnected
disconnected
reconnected

This fixed my problem, but I am not sure it is the proper fix.
",W2k java 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48937,,,2005-03-09 05:22:08.0,,,,,,,,"0|i0s0cv:",161534,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnectionInfo is not resent on reconnect leaving subscriptions dead,AMQ-99,12481296,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,stewie,daggerrz,daggerrz,30/Sep/04 17:26,03/Feb/05 10:44,30/Jan/20 16:57,06/Oct/04 18:54,1.1,,,,,,2.0,,,Transport,,,,0,"When ActiveMQConnection.reconnect() is called after the transport channel is reconnected, sendConnectionInfoToBroker() is called to reinitialise the connection with the broker. This method checks if the connection info has already been sent by checking isConnectionInfoSentToBroker and silently avoid sending the information is the flag i set. This means that the connection won't be initialised correctly and no messages will be delivered to the connection. 

The problem can be solved by adding 

  isConnectionInfoSentToBroker = false;

before 

  sendConnectionInfoToBroker();

in doReconnect().

The problem can be reproduces by starting a broker and a consumer with a reliable tcp connection, kill and restart the broker and then send some messages to the consumer (they won't be correctly dispatched).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-10-04 12:13:46.0,,,false,,,,,,,,,,,,,,,,,48838,,,Wed Oct 06 18:54:25 UTC 2004,,,,,,,,"0|i0tsan:",171893,,,,,,,,,,,,,,,,,,,"04/Oct/04 12:13;jstrachan;I thought you'd fixed this one - couldn't remember","06/Oct/04 18:54;stewie;This now done - there is a usecase to test this",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq / jboss connector - transactions fail,AMQ-152,12481342,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,mgaffney,sorgnard,sorgnard,09/Dec/04 17:04,16/Dec/04 00:10,30/Jan/20 16:57,16/Dec/04 00:10,1.2,1.3,1.4,,,,1.4,,,Connector,,,,0,"Test :
running the MDB tests (activemq-jboss-test / panacya-mdb-test-1.0.jar) described at http://docs.codehaus.org/display/ACTIVEMQ/JBoss+Integration

1) launching 
 maven sendt (send on a topic)

=> seems to work fine at the first call (at least no exception, but a strange message on Jboss) :
14:40:22,265 WARN  [ServerSessionImpl] Local transaction had not been commited. Commiting now.

2) lauching a second time throws an exception (see stack trace)
This problem occurs sometimes on the simple test queue too,(not in activeMQ 1.4) when launching many time maven sendq. It seems related to transaction. It occurs on all version 1.2, 1.3, 1.4 snapshot)


Here is the complete trace on Jboss :


14:46:41,187 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.SimpleM
essageReceiverBean
14:46:41,203 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.setMess
ageDrivenContext
14:46:41,203 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.ejbCrea
te
14:46:41,203 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.onMessa
ge
14:46:41,203 INFO  [SimpleMessageReceiverBean] Message received: hello ActiveMQ
world
14:46:41,203 INFO  [SenderClient] Looking up Sender: java:comp/env/ejb/Sender
14:46:41,234 INFO  [SenderClient] Sending message: hello ActiveMQ world
14:46:41,375 INFO  [SenderClient] Message sent
14:46:41,375 INFO  [SimpleMessageReceiverBean] Begin delay...
14:46:46,375 INFO  [SimpleMessageReceiverBean] ...end delay
>> THE STRANGE MESSAGE...
14:46:46,375 WARN  [ServerSessionImpl] Local transaction had not been commited.
 Commiting now.
14:47:03,203 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.SimpleM
essageReceiverBean
14:47:03,203 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.setMess
ageDrivenContext
14:47:03,203 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.ejbCrea
te
14:47:03,203 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.onMessa
ge
14:47:03,203 INFO  [SimpleMessageReceiverBean] Message received: hello ActiveMQ
world
14:47:03,203 INFO  [SenderClient] Looking up Sender: java:comp/env/ejb/Sender
14:47:03,203 INFO  [SenderClient] Sending message: hello ActiveMQ world
14:47:03,250 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.onMessa
ge
14:47:03,250 INFO  [SimpleMessageReceiverBean] Message received: hello ActiveMQ
world
14:47:03,250 INFO  [SenderClient] Looking up Sender: java:comp/env/ejb/Sender
14:47:03,250 INFO  [SenderClient] Sending message: hello ActiveMQ world
14:47:03,265 INFO  [SenderClient] Message sent
14:47:03,265 INFO  [SimpleMessageReceiverBean] Begin delay...
14:47:03,296 INFO  [SenderClient] Message sent
14:47:03,296 INFO  [SimpleMessageReceiverBean] Begin delay...
14:47:08,265 INFO  [SimpleMessageReceiverBean] ...end delay
14:47:08,296 INFO  [SimpleMessageReceiverBean] ...end delay
14:47:08,296 INFO  [SimpleMessageReceiverBean] SimpleMessageReceiverBean.ejbRemo
ve

>> THE EXCEPTION (RELATED TO TRANSACTION MANAGEMENT?)

14:47:08,296 ERROR [LogInterceptor] RuntimeException in method: public abstract
void javax.jms.MessageListener.onMessage(javax.jms.Message):
java.lang.IllegalStateException: setRollbackOnly must only be called in the cont
ext of a transaction (EJB 2.0 - 15.5.1)
        at org.jboss.ejb.MessageDrivenEnterpriseContext$MessageDrivenContextImpl
.setRollbackOnly(MessageDrivenEnterpriseContext.java:208)
        at com.panacya.platform.service.bus.mdb.SimpleMessageReceiverBean.rollba
ck(SimpleMessageReceiverBean.java:105)
        at com.panacya.platform.service.bus.mdb.SimpleMessageReceiverBean.send(S
impleMessageReceiverBean.java:98)
        at com.panacya.platform.service.bus.mdb.SimpleMessageReceiverBean.handle
Message(SimpleMessageReceiverBean.java:67)
        at com.panacya.platform.service.bus.mdb.SimpleMessageReceiverBean.onMess
age(SimpleMessageReceiverBean.java:47)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.jboss.invocation.Invocation.performCall(Invocation.java:345)
        at org.jboss.ejb.MessageDrivenContainer$ContainerInterceptor.invoke(Mess
ageDrivenContainer.java:475)
        at org.jboss.resource.connectionmanager.CachedConnectionInterceptor.invo
ke(CachedConnectionInterceptor.java:185)
        at org.jboss.ejb.plugins.MessageDrivenInstanceInterceptor.invoke(Message
DrivenInstanceInterceptor.java:87)
        at org.jboss.ejb.plugins.CallValidationInterceptor.invoke(CallValidation
Interceptor.java:48)
        at org.jboss.ejb.plugins.AbstractTxInterceptor.invokeNext(AbstractTxInte
rceptor.java:105)
        at org.jboss.ejb.plugins.TxInterceptorCMT.runWithTransactions(TxIntercep
torCMT.java:280)
        at org.jboss.ejb.plugins.TxInterceptorCMT.invoke(TxInterceptorCMT.java:1
46)
        at org.jboss.ejb.plugins.RunAsSecurityInterceptor.invoke(RunAsSecurityIn
terceptor.java:94)
        at org.jboss.ejb.plugins.LogInterceptor.invoke(LogInterceptor.java:191)
        at org.jboss.ejb.plugins.ProxyFactoryFinderInterceptor.invoke(ProxyFacto
ryFinderInterceptor.java:122)
        at org.jboss.ejb.MessageDrivenContainer.internalInvoke(MessageDrivenCont
ainer.java:389)
        at org.jboss.ejb.Container.invoke(Container.java:856)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatch
er.java:144)
        at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:72)
        at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.
java:249)
        at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
        at org.jboss.invocation.local.LocalInvoker$MBeanServerAction.invoke(Loca
lInvoker.java:155)
        at org.jboss.invocation.local.LocalInvoker.invoke(LocalInvoker.java:104)

        at org.jboss.invocation.InvokerInterceptor.invoke(InvokerInterceptor.jav
a:90)
        at org.jboss.proxy.TransactionInterceptor.invoke(TransactionInterceptor.
java:46)
        at org.jboss.ejb.plugins.inflow.MessageEndpointInterceptor.delivery(Mess
ageEndpointInterceptor.java:237)
        at org.jboss.ejb.plugins.inflow.MessageEndpointInterceptor.invoke(Messag
eEndpointInterceptor.java:117)
        at org.jboss.proxy.ClientMethodInterceptor.invoke(ClientMethodIntercepto
r.java:59)
        at org.jboss.proxy.ClientContainer.invoke(ClientContainer.java:86)
        at $Proxy58.onMessage(Unknown Source)
        at org.codehaus.activemq.ActiveMQSession.run(ActiveMQSession.java:558)
        at org.codehaus.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java
:137)
        at org.jboss.resource.work.WorkWrapper.execute(WorkWrapper.java:200)
        at org.jboss.util.threadpool.BasicTaskWrapper.run(BasicTaskWrapper.java:
232)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExec
utor.java:743)
        at java.lang.Thread.run(Thread.java:534)
14:47:08,296 INFO  [ActiveMQSession] Caught :javax.ejb.EJBException: RuntimeExce
ption; CausedByException is:
        setRollbackOnly must only be called in the context of a transaction (EJB
 2.0 - 15.5.1)
javax.ejb.EJBException: RuntimeException; CausedByException is:
        setRollbackOnly must only be called in the context of a transaction (EJB
 2.0 - 15.5.1)
        at org.jboss.ejb.plugins.LogInterceptor.handleException(LogInterceptor.j
ava:381)
        at org.jboss.ejb.plugins.LogInterceptor.invoke(LogInterceptor.java:195)
        at org.jboss.ejb.plugins.ProxyFactoryFinderInterceptor.invoke(ProxyFacto
ryFinderInterceptor.java:122)
        at org.jboss.ejb.MessageDrivenContainer.internalInvoke(MessageDrivenCont
ainer.java:389)
        at org.jboss.ejb.Container.invoke(Container.java:856)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatch
er.java:144)
        at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:72)
        at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.
java:249)
        at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
        at org.jboss.invocation.local.LocalInvoker$MBeanServerAction.invoke(Loca
lInvoker.java:155)
        at org.jboss.invocation.local.LocalInvoker.invoke(LocalInvoker.java:104)

        at org.jboss.invocation.InvokerInterceptor.invoke(InvokerInterceptor.jav
a:90)
        at org.jboss.proxy.TransactionInterceptor.invoke(TransactionInterceptor.
java:46)
        at org.jboss.ejb.plugins.inflow.MessageEndpointInterceptor.delivery(Mess
ageEndpointInterceptor.java:237)
        at org.jboss.ejb.plugins.inflow.MessageEndpointInterceptor.invoke(Messag
eEndpointInterceptor.java:117)
        at org.jboss.proxy.ClientMethodInterceptor.invoke(ClientMethodIntercepto
r.java:59)
        at org.jboss.proxy.ClientContainer.invoke(ClientContainer.java:86)
        at $Proxy58.onMessage(Unknown Source)
        at org.codehaus.activemq.ActiveMQSession.run(ActiveMQSession.java:558)
        at org.codehaus.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java
:137)
        at org.jboss.resource.work.WorkWrapper.execute(WorkWrapper.java:200)
        at org.jboss.util.threadpool.BasicTaskWrapper.run(BasicTaskWrapper.java:
232)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExec
utor.java:743)
        at java.lang.Thread.run(Thread.java:534)
java.lang.IllegalStateException: setRollbackOnly must only be called in the cont
ext of a transaction (EJB 2.0 - 15.5.1)
        at org.jboss.ejb.MessageDrivenEnterpriseContext$MessageDrivenContextImpl
.setRollbackOnly(MessageDrivenEnterpriseContext.java:208)
        at com.panacya.platform.service.bus.mdb.SimpleMessageReceiverBean.rollba
ck(SimpleMessageReceiverBean.java:105)
        at com.panacya.platform.service.bus.mdb.SimpleMessageReceiverBean.send(S
impleMessageReceiverBean.java:98)
        at com.panacya.platform.service.bus.mdb.SimpleMessageReceiverBean.handle
Message(SimpleMessageReceiverBean.java:67)
        at com.panacya.platform.service.bus.mdb.SimpleMessageReceiverBean.onMess
age(SimpleMessageReceiverBean.java:47)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.jboss.invocation.Invocation.performCall(Invocation.java:345)
        at org.jboss.ejb.MessageDrivenContainer$ContainerInterceptor.invoke(Mess
ageDrivenContainer.java:475)
        at org.jboss.resource.connectionmanager.CachedConnectionInterceptor.invo
ke(CachedConnectionInterceptor.java:185)
        at org.jboss.ejb.plugins.MessageDrivenInstanceInterceptor.invoke(Message
DrivenInstanceInterceptor.java:87)
        at org.jboss.ejb.plugins.CallValidationInterceptor.invoke(CallValidation
Interceptor.java:48)
        at org.jboss.ejb.plugins.AbstractTxInterceptor.invokeNext(AbstractTxInte
rceptor.java:105)
        at org.jboss.ejb.plugins.TxInterceptorCMT.runWithTransactions(TxIntercep
torCMT.java:280)
        at org.jboss.ejb.plugins.TxInterceptorCMT.invoke(TxInterceptorCMT.java:1
46)
        at org.jboss.ejb.plugins.RunAsSecurityInterceptor.invoke(RunAsSecurityIn
terceptor.java:94)
        at org.jboss.ejb.plugins.LogInterceptor.invoke(LogInterceptor.java:191)
        at org.jboss.ejb.plugins.ProxyFactoryFinderInterceptor.invoke(ProxyFacto
ryFinderInterceptor.java:122)
        at org.jboss.ejb.MessageDrivenContainer.internalInvoke(MessageDrivenCont
ainer.java:389)
        at org.jboss.ejb.Container.invoke(Container.java:856)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatch
er.java:144)
        at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:72)
        at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.
java:249)
        at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
        at org.jboss.invocation.local.LocalInvoker$MBeanServerAction.invoke(Loca
lInvoker.java:155)
        at org.jboss.invocation.local.LocalInvoker.invoke(LocalInvoker.java:104)

        at org.jboss.invocation.InvokerInterceptor.invoke(InvokerInterceptor.jav
a:90)
        at org.jboss.proxy.TransactionInterceptor.invoke(TransactionInterceptor.
java:46)
        at org.jboss.ejb.plugins.inflow.MessageEndpointInterceptor.delivery(Mess
ageEndpointInterceptor.java:237)
        at org.jboss.ejb.plugins.inflow.MessageEndpointInterceptor.invoke(Messag
eEndpointInterceptor.java:117)
        at org.jboss.proxy.ClientMethodInterceptor.invoke(ClientMethodIntercepto
r.java:59)
        at org.jboss.proxy.ClientContainer.invoke(ClientContainer.java:86)
        at $Proxy58.onMessage(Unknown Source)
        at org.codehaus.activemq.ActiveMQSession.run(ActiveMQSession.java:558)
        at org.codehaus.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java
:137)
        at org.jboss.resource.work.WorkWrapper.execute(WorkWrapper.java:200)
        at org.jboss.util.threadpool.BasicTaskWrapper.run(BasicTaskWrapper.java:
232)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExec
utor.java:743)
        at java.lang.Thread.run(Thread.java:534)
14:47:08,343 WARN  [ServerSessionImpl] Local transaction had not been commited.
 Commiting now.","JBoss 4.0.1RC1 / different version of ActiveMQ (1.2, 1.3, SNAPSHOT 1.4) / activeMQ connector / on windows JDK 1.4.2_05",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-12-16 00:10:21.0,,,false,,,,,,,,,,,,,,,,,48887,,,Thu Dec 16 00:10:21 UTC 2004,,,,,,,,"0|i0ts8f:",171883,,,,,,,,,,,,,,,,,,,"16/Dec/04 00:10;mgaffney;This was a problem in my sample application not in the ActiveMQ connector.  I updated the sample to remove the problem and also updated the deployment descriptors to use ActiveMQ 1.4.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connector doesn't use proper JavaBean property names in deployment descriptor,AMQ-149,12481103,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,mgaffney,mgaffney,mgaffney,08/Dec/04 23:42,08/Dec/04 23:48,30/Jan/20 16:57,08/Dec/04 23:48,1.2,1.3,,,,,1.4,,,,,,,0,"Deploying an MDB that uses the ActiveMQ connector fails on JBoss 4.0.1-RC2 but works on JBoss 4.0.1-RC1.  

JBoss changed the way they resolve the 'activation-config-property-name' entries in the EJB deployment descriptor with the equivalent entries in the ra.xml deployment descriptors.  They are now using JavaBean's introspection which causes a problem when if a property name in the ra.xml file begins with a capital letter.

I looked through the EJB 2.1 spec and the JCA 1.5 spec to see if either had anything to say about this.  Unfortunately neither one gives a clear cut 'all entries MUST begin with a ...', the only guidance comes from the examples in the specs, and they conflict.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48884,,,2004-12-08 23:42:45.0,,,,,,,,"0|i0tsaf:",171892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JBoss Integration: XA transactions not working,AMQ-129,12481228,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,chirino,mgaffney,mgaffney,09/Nov/04 04:12,19/Nov/04 18:57,30/Jan/20 16:57,19/Nov/04 18:57,1.2,,,,,,1.2,,,,,,,1,"I'm working on integrating ActiveMQ with JBoss and I'm running into some problems with message delivery to an MDB.  I'm not sure if the bug is in JBoss or in the ActiveMQ connector but I'm hitting a wall so I'm hoping someone can help.  Here is the scenario:

1.  ActiveMQ broker running on local machine but outside of JBoss. 
2.  Deploy ActiveMQ connector (activemq.rar) as standalone connector - successful
3.  Deploy ejb-jar file containing an MDB and a jboss.xml file that hooks the MDB to an ActiveMQ queue - successful
4.  Client places first message on queue and exits - successful 
5.  MDB receives first message - partially-successful (see below)
6.  Client places second message on queue and exits - successful
7.  MDB receives second message - failure - The following exception is thrown: javax.transaction.xa.XAException: Transaction '< a JBoss xid number>' has not been started.

The other interesting thing is that if I shutdown JBoss, then restart it, both messages reappear in the queue and delivery is attempted again, which is why I listed #5 above as only 'partially-successful'.  

I'll add sample code with instructions on how to reproduce this shortly.",JBoss 4.0.1 RC1,mgaffney,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-09 19:17:44.0,,,false,,,,,,,,,,,,,,,,,48866,,,Fri Nov 19 18:57:00 UTC 2004,,,,,,,,"0|i0rro7:",160127,,,,,,,,,,,,,,,,,,,"09/Nov/04 04:16;mgaffney;To reproduce this you'll need the following:

1.  Latest ActiveMQ source code from cvs
2.  JBoss 4.0.1RC1
3.  Sample code in the attached zip file.

Setup: 
1.  Build the ActiveMQ source code
2.  Download and install JBoss 4.0.1RC1
3.  Unzip the attached zip file and run 'maven default' on it.

Running the test (for windows):
1.  Run <activemq_cvs_home>\modules\assembly\target\activemq-1.2-SNAPSHOT\bin\activemq.bat 
2.  Run <jboss-4.0.1RC1_home>\bin\run.bat
3.  Copy <activemq_cvs_home>\modules\ra\target\activemq-ra-1.2-SNAPSHOT.rar to <jboss-4.0.1RC1_home>\server\default\deploy
4.  Wait a second or two for JBoss to complete the rar file deployment
5.  Copy <mdb_test_home>\target\mdb-test-1.0.jar to <jboss-4.0.1RC1_home>\server\default\deploy
6.  Open a command window at <mdb_test_home>
7.  Run 'maven send-message' 
8.  Run 'maven send-message' again

I'll add a log file that traces many of the method calls from the above shortly.","09/Nov/04 04:18;mgaffney;To help debug this, I created an aspectj module that logged every method call plus the parameters passed into the method and every method exit.  If you look in the attached file 'trace.log' you can see the calls being made in the connector.  I only logged method calls within classes in the following packages:
  -org.codehaus.activemq.ra 
  -org.codehaus.activemq
  -org.codehaus.activemq.broker 
  -org.codehaus.activemq.broker.impl 
  -org.codehaus.activemq.store.vm

The log file has five columns as follows:
Column 1: timestamp
Column 2: thread
Column 3: log4j NDC (set by JBoss)
Column 4: method entry/exit and call stack depth indicator
Column 5: class and method name with method parameters listed on method entry

Column 4 indicates method entry with an arrow like this: --> and method exit with an arrow like this <-- .  A dash is added or removed to indicate depth within the call stack.

Here are a couple of key moments within the log file:
Line 24 - the rar file finishes deployment
Line 232 - the ejb jar file finishes deployment
Line 428 - processing of message one finishes
Line 723 - processing of message two finishes
Line 1018 - processing of message three finishes
Line 1105 - JBoss finishes shutdown (last entry)

If you look at the processing of the first message, it appears to me that JBoss is following the JCA inflow XA protocol for a one phase commit.  You can see the following calls in the log file: 
  -start (lines 346-357)
  -message delivery (lines 358-367)
  -end (lines 368-375)
  -commit (lines 376-383)

I also noticed that after the XA commit is called, the ActiveMQSession.messageDelivered gets called (lines 389-412) and within that call, a local transaction is started by the ActiveMQRASession.doStartTransaction method (lines 394-405) but it appears that it is never committed.  That seems odd to me.  Is that the correct behavior?  Does this have anything to do with the exception being thrown when delivery of the second message is attempted? 

Aside from the local transaction question above, I still can't figure out why the XA transaction commit call does not result in the removal of the message from queue.  Is that the correct behavior?

This is all of the analysis I've been able to do up till now.  I'm finding it difficult to go much further because I don't yet understand how the broker works to support XA transactions.  Any help on this would be greatly appreciated.","09/Nov/04 19:17;chirino;Just want to say great bug report!  I will they were all this detailed!    MDB have not been working in Geronimo either.  Starting to dig into this.","09/Nov/04 19:33;mgaffney;Thanks!  Please let me know if I can help.  I'm still learning my way around the code base, so any pointers on which direction to look would be great.","11/Nov/04 18:40;mgaffney;I've been doing a ton of work on this issue for the last two days.  Lots of learning about the system and transactions (great stuff!).  Do you mind if I take over as the assignee?  I know you have lots on your plate and I would hate for us to be duplicating effort.","12/Nov/04 10:34;jstrachan;Michael, if you wanna be able to assign stuff to yourself, mail me your email address you used to register with JIRA and I can grant you karma.","19/Nov/04 18:57;mgaffney;Hiram's changes of the ServerSessionImpl class to use the MessageEndpoint's beforeDelivery(..) and afterDelivery() methods resolved this issue.  Thanks Hiram!",,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-ra doesn't adhere to the 'Equality Constraints' section of the JCA Spec,AMQ-124,12481016,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,mgaffney,mgaffney,03/Nov/04 01:54,03/Nov/04 10:53,30/Jan/20 16:57,03/Nov/04 10:53,1.2,,,,,,1.2,,,,,,,0,I noticed that certain classes in the activemq-ra module do not follow the 'Equality Constraints' as defined by the Java Connector Architecture Specificat v1.5 (see section 16.4).  I'm submitting a patch that contains a fixes and a bunch of unit tests.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-03 10:53:22.0,,,false,,,,,,,,,,,,,,,,,48861,,,Wed Nov 03 10:53:22 UTC 2004,,,,,,,,"0|i0ts93:",171886,,,,,,,,,,,,,,,,,,,"03/Nov/04 01:55;mgaffney;Here's the patch...","03/Nov/04 10:53;jstrachan;Patch applied - thanks Michael!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client may shtudown when failover connection is reconnecting.  We need to maintain at least 1 non-daemon thread alive.,AMQ-796,12483294,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chirino,chirino,05/Jul/06 20:28,22/Oct/18 15:20,30/Jan/20 16:57,18/Apr/12 10:53,4.0,5.3.0,,,,,4.0.3,5.6.0,,,,,,2,"Dejan Reported on the User lists:

Hi,

after some experiments I found that this problem only exists if there are no
other threads in the application. It seems like connection thread dies
before it manages to reconnect. By starting another thread in the
application, it succeeds to recover from master failure and reconnect to the
slave broker. So I have a workaround for now, but it would be nice to make
this work even for simple (single-threaded) clients.

Regards,
Dejan",,babramson,buchi,fdegir,johnbing,kimmking,siick,tabish,TuoDi,wangyin,xbhanu,zgl,,,,,,,,,,,,,,,,,"29/Apr/10 00:01;garyw;AMQ-796.cmd;https://issues.apache.org/jira/secure/attachment/12461686/AMQ-796.cmd","10/Jan/17 07:05;TuoDi;Sender.java;https://issues.apache.org/jira/secure/attachment/12846507/Sender.java","17/Jul/12 12:23;xbhanu;jstack_amq_5.6.0;https://issues.apache.org/jira/secure/attachment/12536809/jstack_amq_5.6.0","08/Oct/13 11:35;xbhanu;jstack_v5.8.0;https://issues.apache.org/jira/secure/attachment/12607348/jstack_v5.8.0","10/Jan/17 07:05;TuoDi;threadDump.txt;https://issues.apache.org/jira/secure/attachment/12846506/threadDump.txt",,,,5.0,,,,,,,,,,,,,,,,,,,,2010-03-09 09:58:13.32,,,false,,,,,,,,,,,,,,,,,84328,,,Mon Oct 22 15:20:21 UTC 2018,,,,,,,,"0|i0akxb:",59663,,,,,,,,,,,,,,,,,,,"23/Oct/07 13:37;chirino;Fix in rev 587504

   The threads associated with the session are now setup to be non-daemon so that if you 
   setup a MessageListener and let the main thread exit, your program will not terminate
   if there are no active transport threads which is the case when the failover transport
   is in the middle of reconnecting to a broker.","09/Mar/10 09:58;dejanb;This issue occurs again on the trunk","29/Apr/10 00:01;garyw;This is a Windows cmd script that uses 2 instances of the ProducerTool sample app to create 2 embedded brokers, and the single-threaded ConsumerTool with a failover URI to demonstrate the problem.","06/May/10 15:23;jim_mccabe;The solution to this should be simple - just make sure the thread that performs the failover logic does NOT call setDaemon(true).

Since this bug was fixed three years ago and came back to life, it would be nice if the code took more steps to prevent this from happening in the future, for example:

- Override setDaemon(boolean) on that thread so that it never allows itself to be flagged as a daemon.  If it is called in that way, output a stack trace with a message specifically refering to this bug (AMQ-796).

- Add unit tests that would fail if another part of the code set the failover thread as a daemon.  This seems like it would be a lot harder than the override approach above, but would be nice if it were possible.","18/Apr/12 10:53;rajdavies;Fixed by Subversion: Committed revision 1327443","17/Jul/12 12:24;xbhanu;This issue still persists. attaching the jstack on broker. It still doesn't show any non-daemon thread which would have fixed the issue i guess.","28/Dec/12 06:29;kimmking;This issue occurs again on the trunk and Version 5.7.0.
Using:
1. start a broker in command line
2. create and run a connection with a consumer and TransportListener(for track reconnecting) in eclipse
3. stop the broker and restart the broker
4. then we can see client transportInterupted and transportResumed
5. stop the broker again 
6. the client process will quit!!!

The early fix for this bug is to remove daemon=true on ActiveMQ Connection Executor,
but sometimes this executor does not create new thread.

The solution is to make the reconnectTask thread is non-daemon:
// FailoverTransport.java row: 132 
reconnectTaskFactory = new TaskRunnerFactory();
reconnectTaskFactory.setDaemon(false); // to set daemon=false by kimmking
reconnectTaskFactory.init();

After the fix, the reconnecting of this client works well during broker's stop for many times.","28/Dec/12 06:36;wangyin;We just found that non-daemon thread for the executor in the connection may not fix this issue.
The executor in the connection is used to async take action when internal exceptions occur.
If no internal exceptions the executor will not be initiated by filling up with non-daemon threads.
In this case client still can shutdown when failover connection is reconnecting 
because non-daemon threads do not exist in JVM .
One simple solution is to keep the thread attached with the reconnectTask non-daemon.
","28/Dec/12 06:52;kimmking;Another suggestion, named the reconnectTask thread：
reconnectTaskFactory = new TaskRunnerFactory();
in FailoverTransport.java line 132 is modified to 
reconnectTaskFactory = new TaskRunnerFactory(""FailoverTransport-ReconnectTask"");","04/Jan/13 10:44;fdegir;We see same behaviour with our simple producer/consumer with 5.7.0. If we attach TransportListener to consumer then things work fine.
Poducer doesn't have issues as noted by others.
","08/Oct/13 11:27;xbhanu;Still an issue with ActiveMQ v5.8 !!  Can somebody resolve this please...","08/Oct/13 11:35;xbhanu;Attaching the jstack output for v5.8. The only non-daemon thread is the main thread which I stopped from exiting only for the purpose of taking a jstack snapshot.","08/Oct/13 15:01;johnbing;This is really very strange since the creation time for this issue is 2006. Is it really this tough to make the relevant thread non-daemon?","09/Oct/13 14:16;xbhanu;Ping! Any updates here ?","09/Oct/13 14:25;tabish;Use a 5.9-SNAPSHOT, should get you sorted. ","29/Aug/16 12:25;babramson;This issue still seem to exists with client version 5.14.0 using a MessageListener and single threaded application. The reconnect tasks are still daemon threads.

Thread output:

""ActiveMQ Task-2"" #14 daemon prio=5 os_prio=0 tid=0x000000001e616000 nid=0x11b4 waiting on condition [0x000000001f5cf000]
""ActiveMQ Task-1"" #11 daemon prio=5 os_prio=0 tid=0x000000001e3df000 nid=0x7cc waiting on condition [0x000000001ef8e000]

Cause:

When the FailoverTransport is created the associated task runner will have daemon = true set. Code path:

FailoverTransport.java: 

 136         reconnectTaskFactory = new TaskRunnerFactory();
 137         reconnectTaskFactory.init();


TaskRunnerFactory.java:

  58     public TaskRunnerFactory() {
  59         this(""ActiveMQ Task"");
  60     }
  61 
  62     public TaskRunnerFactory(String name) {
  63         this(name, Thread.NORM_PRIORITY, true, 1000);
  64     }

The third parameter (daemon = true) is the culpit. 

It seems that the simplest solution is what has been suggested previously, explicitly setting daemon = false on the reconnect factory:

reconnectTaskFactory.setDaemon(false);


","10/Jan/17 07:01;TuoDi;Yes,we have the some problem in activemq 5.10.0 and 5.13.4. we use failover tcp protocol like:
failover://(tcp://127.0.0.1:61624,tcp://127.0.0.1:61626)?nested.wireFormat.maxInactivityDuration=3000&nested.connectionTimeout=2000&maxReconnectAttempts=2&timeout=2000&randomize=false&initialReconnectDelay=50&startupMaxReconnectAttempts=2&maxReconnectDelay=100

first keep all Mq server up
then shutdown one of the server
see the log keep create a new connection on the up server and then closed the new connection and the recreate a new connection on the up server ...... dead loop....

threaddump the thread and see the threadDump.txt and the test code Sender.java in the attach file.

""ActiveMQ Task-1"" daemon prio=6 tid=0x000000000d5c3800 nid=0x2bc8 waiting on condition [0x000000000dc2e000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000db305ec8> (a java.util.concurrent.CountDownLatch$Sync)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1033)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:282)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:97)
	at org.apache.activemq.transport.failover.FailoverTransport.restoreTransport(FailoverTransport.java:841)
	at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1020)
	- locked <0x0000000090c6a228> (a java.lang.Object)
	at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
	- locked <0x0000000090c6a238> (a java.lang.Object)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
","22/Oct/18 15:20;siick;Just a small reminder to tells that this issue is still in 5.12.1.

Adding these in FailoverTransport.class fix the issue like [~kimmking] said before..
{code:java}
reconnectTaskFactory = new TaskRunnerFactory();
reconnectTaskFactory.setDaemon(false); // to set daemon=false by kimmking
reconnectTaskFactory.init();
{code}
If i look that Jira this issue is solved from 5.6.0 but we are a lot here to explain that it is not corrected because we have to edit FailoverTRansport.class by ourselves. So he's it the only workaround for now or maybe is resolved in the last version?

 ",,,,,,,,,,,,,,,,,
org.apache.activemq.store.memory.MemoryPersistenceAdapter - Expected an instance of MemoryMessageStore but was: org.apache.activemq.store.memory.MemoryTransactionStore$2@a0f3d1,AMQ-1446,12482388,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,sits,sits,05/Oct/07 07:00,21/Dec/14 14:46,30/Jan/20 16:57,09/Apr/08 08:31,5.0.0,,,,,,5.1.0,,,Message Store,,,,0,"I have an application which ran with persistence off, but with transactions.  I noticed just before stopping the broker, I see the following messages:

WARN  org.apache.activemq.store.memory.MemoryPersistenceAdapter - Expected an instance of MemoryMessageStore but was: org.apache.activemq.store.memory.MemoryTransactionStore$2@a0f3d1
WARN  org.apache.activemq.store.memory.MemoryPersistenceAdapter - Expected an instance of MemoryMessageStore but was: org.apache.activemq.store.memory.MemoryTransactionStore$1@e7332d
WARN  org.apache.activemq.store.memory.MemoryPersistenceAdapter - Expected an instance of MemoryMessageStore but was: org.apache.activemq.store.memory.MemoryTransactionStore$1@d10008

It doesn't seem to have affected anything, but I thought it was worth reporting.  I see this in revision 582029.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-10-05 09:51:00.523,,,false,,,,,,,,,,,,,,,,,84690,,,Sun Dec 21 14:46:28 UTC 2014,,,,,,,,"0|i14bg7:",233318,,,,,,,,,,,,,,,,,,,"05/Oct/07 09:51;rajdavies;Hi David,

A test case for this would be good - 

thanks,

Rob","28/Nov/07 21:09;rajdavies;This seems fixed - please re-open if not the case","12/Dec/07 00:35;sits;I have updated to 603420 and I still see this issue I am afraid.
","07/Feb/08 10:16;rajdavies;This should be fixed by svn revision  619347","21/Dec/14 14:46;JeremyGood;I see dozens of these messages whenever I shut down my app that uses ActiveMQ 5.9 with persistence off.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Journaled JDBC checkpoint fails with java.io.IOException: Already started.,AMQ-1063,12483810,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,jk@penguinsfan.com,jk@penguinsfan.com,20/Nov/06 00:28,02/Apr/14 22:20,30/Jan/20 16:57,09/Dec/13 17:04,5.0.0,,,,,,5.10.0,5.9.1,,Broker,,,,19,"I am running trunk using JDBC against MySQL 5.0.27.  I am seeing the above mentioned IOException.  Do not have specific instructions on how to reproduce at the current time, but I was using durable subscriptions with the store durable cursor if that helps.  (I'll post if I find out more information.)

      <persistenceAdapter>
   
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""../activemq-data"" dataSource=""#mysql-ds""/>

    </persistenceAdapter>

  <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
    <property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/>
    <property name=""username"" value=""*** OMITTED ***""/>
    <property name=""password"" value=""*** OMITTED *** ""/>
    <property name=""poolPreparedStatements"" value=""true""/>
  </bean>  

Log trace:

2006-11-19 19:19:48,078 [/127.0.0.1:4898] DEBUG JournalPersistenceAdapter      - Waking for checkpoint to complete.
2006-11-19 19:19:48,078 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2006-11-19 19:19:48,078 [eckpoint Worker] ERROR JournalPersistenceAdapter      - Failed to checkpoint a message store: java.util.concurrent.ExecutionException: java.io.IOException: Already started.
java.util.concurrent.ExecutionException: java.io.IOException: Already started.
	at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:205)
	at java.util.concurrent.FutureTask.get(FutureTask.java:80)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:386)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$2.iterate(JournalPersistenceAdapter.java:129)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:88)
	at org.apache.activemq.thread.DedicatedTaskRunner.access$0(DedicatedTaskRunner.java:76)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:39)
Caused by: java.io.IOException: Already started.
	at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:145)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:358)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.beginTransaction(JournalPersistenceAdapter.java:189)
	at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
	at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:247)
	at org.apache.activemq.store.journal.JournalTopicMessageStore.checkpoint(JournalTopicMessageStore.java:162)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$5.call(JournalPersistenceAdapter.java:373)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:269)
	at java.util.concurrent.FutureTask.run(FutureTask.java:123)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
2006-11-19 19:19:48,109 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.","Windows XP Professional, JVM 1.5.0_09, MySQL 5.0.27",arboz,bananeman,davsclaus,ddossot,donv,frank1russo,grigory,gtully,guillon,hondong,julien.dubois,pnidl,rkraus,subendu,twalters,vkothiyal,vpesochi,,,,,,,,,,,"06/May/10 18:06;hondong;activemq.log.zip;https://issues.apache.org/jira/secure/attachment/12461693/activemq.log.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-11-20 06:24:31.0,,,false,,,,,,,,,,,,,,,,,84728,,,Mon Dec 09 17:04:31 UTC 2013,,,,,,,,"0|i0am6v:",59868,,,,,,,,,,,,,,,,,,,"20/Nov/06 06:24;kgallo;Do you have the mysql-connector-java.jar in the lib folder?
Do you have an activemq schema in your db?

It works in my Windows XP, Java 1.5.0_06, MySQL 5.0.24 environment.","26/Dec/06 22:03;arboz;I have the same problem with MS SQL 2005. 
Symptomis the same as was described - plus 
many durable queue produsers and consumers, large queue size.
Exception occurs suddenly, after 6-7-24 hours of fine work.","26/Dec/06 22:09;arboz;Can I use JDBC Persistence without Journaling as walkaround? 
Thank you for replay, It's very critical for me. Thank you.

","14/Feb/07 14:49;frank1russo;We are having the same issue using Oracle. Here is our config:

        <persistenceAdapter>
                <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.home}/activemq-data"" dataSource=""#oracle-ds""/>
        </persistenceAdapter>
        
        <bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
                <property name=""driverClassName"" value=""oracle.jdbc.driver.OracleDriver""/>
                <property name=""url"" value=""***""/>
                <property name=""username"" value=""***""/>
                <property name=""password"" value=""***""/>
                <property name=""poolPreparedStatements"" value=""true""/>
        </bean>

Any ideas what could cause this?

Thanks...","12/Jun/07 10:28;jstrachan;updated affected version","31/Jul/07 19:44;vpesochi;And we also have been having ""this"" issue since Feb 2007 in 4.1.0 on Derby

Other people, also having this issue:

http://www.nabble.com/failed-to-checkpoint-a-message-store--tf3156345s2354.html#a8752776
http://www.nabble.com/Failed-to-checkpoint-a-messaeg-store-tf1758021s2354.html#a4781889


Config:

        <persistenceAdapter>
            <journaledJDBC journalLogFiles=""5"" dataDirectory=""${messageStoreDir}"" dataSource=""#derby-ds""/>
        </persistenceAdapter>
    <bean id=""derby-ds"" class=""org.apache.derby.jdbc.EmbeddedDataSource"">
        <property name=""databaseName"" value=""derbydb""/>
        <property name=""createDatabase"" value=""create""/>
    </bean>

SEVERE: Failed to checkpoint a message store: edu.emory.mathcs.backport.java.util.concurrent.ExecutionException: java.io.IOException: Not started.
edu.emory.mathcs.backport.java.util.concurrent.ExecutionException: java.io.IOException: Not started.
 at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.getResult(FutureTask.java:299)
 at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.get(FutureTask.java:118)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:386)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter$2.iterate(JournalPersistenceAdapter.java:129)
 at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:88)
 at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:25)
 at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:39)
Caused by: java.io.IOException: Not started.
 at org.apache.activemq.store.jdbc.TransactionContext.rollback(TransactionContext.java:168)
 at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.rollbackTransaction(JDBCPersistenceAdapter.java:368)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter.rollbackTransaction(JournalPersistenceAdapter.java:197)
 at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:62)
 at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:247)
 at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:221)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter$4.call(JournalPersistenceAdapter.java:356)
 at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.run(FutureTask.java:176)
 at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
 at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
 at java.lang.Thread.run(Thread.java:595)
org.apache.activemq.store.journal.JournalPersistenceAdapter doCheckpoint
","31/Jul/07 19:50;vpesochi;After that happens the first time I keep seeing this every second or so about 30 times and after that AMQ is dead. No messages are delivered anymore. Once in this state I cannot pull up messages via jconsole / operations / Browse As Table.","12/Oct/07 22:06;twalters;I've been looking at the 4.1.1 code for checkpointing and think I've found a problem.

JDBC statements for copying messages to the longterm storage are handled by a TransactionContext object. If a SQLException is raised during execution of TransactionContext.commit(), the finally clause will close the JDBC connection and clear the 'inTx' flag showing a current transaction. However the exception will cause a TransactionContext.rollback() to be called, which will see the cleared 'inTx' flag and throw an exception with the 'Not started' message in the logs above. Also, the JDBC rollback() and statement close() methods won't be called correctly which could cause leaks or partial data commits.

JDBCPersistenceAdapter.log only logs SQL errors at the debug level, so the root cause of this problem is likely to be missing from the logs. My guess is that the different reports above might each reflect a different SQL error.

It looks like the minimal changes which should be made here are:

- Log SQL errors during commit() at a error level
- Make sure rollback() can be called after the commit() error.
","10/Nov/08 16:39;guillon;Is there any known workaround to this issue ?

I currently use this configuration for persistence:

<persistenceAdapter>
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""/data/activemq-data"" dataSource=""#datasource"" createTablesOnStartup=""false"" useDatabaseLock=""false""/>
</persistenceAdapter>

Thanks.
","09/Sep/09 15:34;vkothiyal;I am getting same error messages with mysql as message store :( with AMQ 5.2.0. any workaround for this issue?","10/Sep/09 09:50;vkothiyal;Using Jdbc persistence without jornaling seems to ahve done the trick, I know it's BAD for performace but better then the whole meesage queue getting frozen.
Any better suggestions?

Cheers
V
","22/Sep/09 14:44;subendu;I am facing the same issue with MySql 5.1 and activemq 5.3 (on Fuse 3.4.04) lib folder. Here is my configuration.

<amq:persistenceAdapter>
	  <amq:journaledJDBC journalLogFiles=""5"" dataDirectory=""./data/activemq-data"" dataSource=""#ors-activemq-ds"" createTablesOnStartup=""true"" useDatabaseLock=""false""/> 
</amq:persistenceAdapter>

<bean id=""ors-activemq-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
 		<property name=""driverClassName"" value=""${activemq.jdbc.driver}"" /> 
		<property name=""url"" value=""${activemq.jdbc.url}"" /> 
		<property name=""username"" value=""${activemq.jdbc.username}"" /> 
		<property name=""password"" value=""${activemq.jdbc.password}"" /> 
		<property name=""poolPreparedStatements"" value=""true"" /> 
</bean> 

java.util.concurrent.ExecutionException: java.io.IOException: Already started.
        at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)
        at java.util.concurrent.FutureTask.get(FutureTask.java:83)
        at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:421)
        at org.apache.activemq.store.journal.JournalPersistenceAdapter$1.iterate(JournalPersistenceAdapter.java:124)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.IOException: Already started.
        at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:148)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:399)
        at org.apache.activemq.store.journal.JournalPersistenceAdapter.beginTransaction(JournalPersistenceAdapter.java:216)
        at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
        at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:258)
        at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:233)
        at org.apache.activemq.store.journal.JournalPersistenceAdapter$4.call(JournalPersistenceAdapter.java:391)
        at org.apache.activemq.store.journal.JournalPersistenceAdapter$4.call(JournalPersistenceAdapter.java:390)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
","28/Oct/09 09:20;bananeman;[Here|http://www.nabble.com/failed-to-checkpoint-a-message-store--td8752776.html] I read that a workaround is to just not pool prepared statements. So I have now put:
{code}
<property name=""poolPreparedStatements"" value=""false""/>
{code}

in our (Oracle) datasource definition in activemq.xml.

Has anyone else tried this? And does it really solve the issue?","28/Oct/09 10:09;bananeman;I am confused. Is this the same issue as AMQ-1611 or not?

And if so, will upgrading to ActiveMQ to 5.3.0 (we are now at 5.2.0) simply fix this issue?","15/Apr/10 14:59;vkothiyal;^^no upgrade to 5.3.0 doesn't fix it. also <property name=""poolPreparedStatements"" value=""false""/> doesn't fix it.","15/Apr/10 15:30;gtully;Vipul, is it reproducible? Can you upload the output of the broker with debug logging enabled, that may help","15/Apr/10 15:36;vkothiyal;Hi Gary,
It's an intermittent issue for us, happens every now and then, a restart of the broker fixes till next occurrence. We don't have debugging enabled in our logs, but I'll do and post the output when it happens next time around. 
Cheers
V","05/May/10 05:14;hondong;We even have the same Issue under ActiveMQ 4.1.2 and Oracle DS
It seems, that it appear under heavy Load?

I´ll try to reproduce it with debugging enabled...","06/May/10 17:55;hondong;Hi,

here is the Log with this error in Debug Mode. 
I´ll Attach it to this issue, but I think this is the interesting part for you:

2010-05-06 19:20:49,275 [5fda:6db0:61938] DEBUG AbstractRegion                 - Removing consumer: aa82a0e0-dc97-47ef-b34a-6d89a9826915:399:45359
2010-05-06 19:20:50,289 [5fda:6db0:61938] DEBUG AbstractRegion                 - Adding consumer: aa82a0e0-dc97-47ef-b34a-6d89a9826915:399:45360
2010-05-06 19:20:50,382 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint started.
2010-05-06 19:20:50,398 [5fda:6db0:61938] DEBUG AbstractRegion                 - Removing consumer: aa82a0e0-dc97-47ef-b34a-6d89a9826915:399:45360
2010-05-06 19:20:50,585 [eckpoint Worker] ERROR JournalPersistenceAdapter      - Failed to checkpoint a message store: edu.emory.mathcs.backport.java.util.concurrent.ExecutionException: java.io.IOException: Already started.
edu.emory.mathcs.backport.java.util.concurrent.ExecutionException: java.io.IOException: Already started.
	at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.getResult(FutureTask.java:299)
	at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.get(FutureTask.java:118)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:386)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$2.iterate(JournalPersistenceAdapter.java:129)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:101)
	at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:25)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:39)
Caused by: java.io.IOException: Already started.
	at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:145)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:358)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.beginTransaction(JournalPersistenceAdapter.java:189)
	at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
	at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:247)
	at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:221)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$4.call(JournalPersistenceAdapter.java:356)
	at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.run(FutureTask.java:176)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:619)
2010-05-06 19:20:50,585 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Marking journal at: 190:18104176
2010-05-06 19:20:50,585 [eckpoint Worker] ERROR JournalPersistenceAdapter      - Failed to mark the Journal: org.apache.activeio.journal.InvalidRecordLocationException: The location is less than the last mark.
org.apache.activeio.journal.InvalidRecordLocationException: The location is less than the last mark.
	at org.apache.activeio.journal.active.JournalImpl.setMark(JournalImpl.java:340)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:403)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$2.iterate(JournalPersistenceAdapter.java:129)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:101)
	at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:25)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:39)
2010-05-06 19:20:50,585 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleaning up old messages.
2010-05-06 19:20:50,585 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
2010-05-06 19:20:50,585 [eckpoint Worker] DEBUG DefaultJDBCAdapter             - Deleted 0 old message(s).
2010-05-06 19:20:50,585 [eckpoint Worker] DEBUG JDBCPersistenceAdapter         - Cleanup done.
2010-05-06 19:20:50,585 [eckpoint Worker] DEBUG JournalPersistenceAdapter      - Checkpoint done.","06/May/10 18:06;hondong;Here are the Debug Log Files...","22/Oct/12 10:16;pnidl;I've analyzed the problem for 5.6.0 release. It happens when org.apache.activemq.store.journal.JournalPersistenceAdapter starts new transaction during checkpoint and fails to retrieve the database connection for this task. The main cause is in org.apache.activemq.store.jdbc.TransactionContext.begin() method (lines 153-159):

public void begin() throws IOException {
  if (inTx) {
    throw new IOException(""Already started."");
  }
  inTx = true;
  connection = getConnection();
}

Lines 157 and 158 should be switched because currently the TransactionContext instance is marked as ""inTx"" even though the getConnection() method throws an exception. From that moment the TransactionContext instance is marked as ""inTx"" forever and will never start new transaction again.","03/Nov/13 10:56;davsclaus;Thanks for reporting.

And Petr Nídl for the suggested fix.","04/Nov/13 07:53;rkraus;I'm sorry for comment to fixed issue. But IMHO the fix suggested by Petr Nidl isn't 100% correct. We already tried to use this fix. It seams, that really solved the {{java.io.IOException: Already started.}} problem. But after this fix we faced to new problems:
# invoke a commit on Firebird connection, which is set as {{autocommit = true}} (already reported in [AMQ-4836|https://issues.apache.org/jira/browse/AMQ-4836] by Jiri Patera)
# (*most important*) possibility to set the connection as {{autocommit = true}}, even if the connection is configured as {{autocommit = false}} on datasource level, when transaction is started ({{TransactionContext.begin()}} method is invoked), see the {{getConnection()}} method. The reason for this behavior is ""line switching""  in suggested fix. I don't know all places and ways, where transactions are used, but IMHO it seams as problem, when the transaction is started and connection is configured as {{autocommit = true}}

Maybe I miss something, but thought that this comment can be useful.","09/Dec/13 16:40;gtully;there is indeed a problem with this fix as pointed out above.

getConnection depends on the inTx flag.

maybe the correct fix is to clear the inTx flag in TransactionContext.getConnection() before we throw the ioe.","09/Dec/13 17:04;gtully;the change to the inTx flag is sorted in
https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=b7c430d0",,,,,,,,,,
ActiveMQ connectionFactory ignores redeliveryPolicy,AMQ-1152,12482151,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gchen77,gchen77,06/Feb/07 19:11,15/Nov/13 18:49,30/Jan/20 16:57,11/Sep/09 18:21,4.1.0,,,,,,5.3.0,,,,,,,7,"Run mvn -Dtest=JmsTest test in the attached sample application.
Redelivery is ignored and failed messages will not stop redelivering.",,david_syer,gchen77,john.greeley,svenpanko,tsigelnik,vadimos,yvonnedaher,,,,,,,,,,,,,,,,,,,,,"06/Feb/07 19:11;gchen77;ASF.LICENSE.NOT.GRANTED--jms.tar.bz2;https://issues.apache.org/jira/secure/attachment/12460636/ASF.LICENSE.NOT.GRANTED--jms.tar.bz2",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-03-13 17:24:37.07,,,false,,,,,,,,,,,,,,,,,84479,,,Fri Sep 11 18:21:26 UTC 2009,,,,,,,,"0|i0s1jb:",161725,,,,,,,,,,,,,,,,,,,"12/Mar/07 23:22;gchen77;Can someone at least respond to this?
This seems like a very key feature of ActiveMQ that is missing.","13/Mar/07 17:24;jstrachan;I wonder; could you test that the XML configuration really is configuring the connection factories RedeliveryPolicy? i.e. is ths some kinda bug in the XML configuration stuff or is there really an issue with the redelivery.","14/Mar/07 22:06;gchen77;If you mean if this is due to using xbean then no it isn't.
I have the same configuration using standard spring configurations on a live project that doesn't use xbean configuration and it is the same.","23/May/07 10:20;jstrachan;Incidentally I've created a test case (method testUseURIToConfigureRedeliveryPolicy()) in [ActiveMQConnectionFactoryTest|http://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/ActiveMQConnectionFactoryTest.java] which configures the redelivery policy via URI and shows its passed through into the consumer. Am unsure how to reproduce this issue","23/May/07 16:30;gnodet;The problem with spring jms support for consuming messages is that it each time a message is consumed, a new jms consumer is created.  And the redelivery policy is handled on the consumer side, not on the broker side.  Hence, the broker redispatch the message immediately.

Here is a diff to fix a small bug on 4.1.1 found while debugging this issue, but as explained above, the problem lies elsewhere.

{code}
Index: src/main/java/org/apache/activemq/ActiveMQMessageConsumer.java
===================================================================
--- src/main/java/org/apache/activemq/ActiveMQMessageConsumer.java      (revision 540956)
+++ src/main/java/org/apache/activemq/ActiveMQMessageConsumer.java      (working copy)
@@ -598,7 +598,9 @@
             if ((session.isTransacted() || session.isDupsOkAcknowledge())) {
                 acknowledge();
             }
-            deliveredMessages.clear();
+            if (!session.isTransacted()) {
+                deliveredMessages.clear();
+            }
             unconsumedMessages.close();
             this.session.removeConsumer(this);
         }
{code}","12/Jun/07 14:45;jstrachan;does setting the caching level in the spring message listener stuff help?","21/Aug/07 10:41;phammer;I had a similar problem (Spring+ActiveMQ, redelivery kept going if an exception was thrown in my listener). Setting <property name=""cacheLevelName"" value=""CACHE_CONSUMER"" />  on my DefaultMessageListenerContainer fixed the problem, and my consumer now only receives the message once - with no redelivery if the consumer throws an exception.

This is a workable solution for my circumstance, but I won't pretend to know enough about the JMS spec to say if it's the Correct Behaviour or not.","31/Oct/07 19:06;yvonnedaher;I have the same problem:
I set a redeliverypolicy with a max redelivery of 1 (I want to disable redeliveries) but I keep on receiving the messages... For information : in my message listener, message.getJMSRedelivered() returns true.

I cannot set the cacheLevel to CACHE_CONSUMER in my application and I find it really weird to have the redelivery count per consumer.

Did anyone find a solution to that ?","11/Sep/09 18:21;rajdavies;This looks fixed to me in 5.3 ?",,,,,,,,,,,,,,,,,,,,,,,,,,
JVM crash with AMQ 4.1.0 (jdk1.6.0 on linux),AMQ-1190,12481848,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,fredrikj,fredrikj,07/Mar/07 09:24,05/Nov/13 09:32,30/Jan/20 16:57,07/Mar/07 10:24,4.1.0,,,,,,4.1.1,,,,,,,0,"The activemq process (jvm) crashed after about a week of low intensive use on a default configured (out of the box) installation of activemq.

With low intensive, I mean 
 * about one queueconnection connecting/disconnecting per minute (24/7).
 * A couple of constantly connected message listeners.
 * less than 10 queues in use.
 * Very few messages, say 10 per minute.

I suspect this is related to the memory leak issues reported before (and that supposedly should be fixed in
4.1.1), but as it involved a jvm _crash_ i figured I'd report it anyway.

Attached is the jvm crash report.","Debian Sarge Linux 2.6.8-2-686-smp #1 SMP Tue Aug 16 12:08:30 UTC 2005 i686 GNU/Linux
java version ""1.6.0""
Java(TM) SE Runtime Environment (build 1.6.0-b105)
Java HotSpot(TM) Client VM (build 1.6.0-b105, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Mar/07 09:24;fredrikj;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460801/ASF.LICENSE.NOT.GRANTED--activemq.xml","07/Mar/07 09:24;fredrikj;ASF.LICENSE.NOT.GRANTED--hs_err_pid21535.log;https://issues.apache.org/jira/secure/attachment/12460922/ASF.LICENSE.NOT.GRANTED--hs_err_pid21535.log",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-03-07 10:24:33.104,,,false,,,,,,,,,,,,,,,,,84466,,,Wed Mar 07 10:40:42 UTC 2007,,,,,,,,"0|i1811z:",254973,,,,,,,,,,,,,,,,,,,"07/Mar/07 10:24;jstrachan;This looks more like a JVM bug as the JVM itself terminated with an internal error - so its not an ActiveMQ error. 

Please could you post the log to the sun bug tracker mentioned at the top of the log...
   http://java.sun.com/webapps/bugreport/crash.jsp

BTW its no big deal if you want to create connections every few minutes, but ideally you'd cache/pool them...
http://activemq.apache.org/how-do-i-use-jms-efficiently.html","07/Mar/07 10:34;fredrikj;Thanks for the feedback.

I'll report  it to sun as suggested. I just wanted to confirm that it wasn't solely related to activemq first. ","07/Mar/07 10:40;jstrachan;Cool - thanks for checking! :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The blob of a blob-message will never be deleted,AMQ-1529,12483373,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,davsclaus,marcobuss,marcobuss,27/Dec/07 07:57,13/Nov/12 09:39,30/Jan/20 16:57,07/Oct/12 12:36,5.0.0,5.1.0,5.2.0,,,,5.6.0,,,Message Store,,,,1,"In a blob-message you can specify that the broker can delete the blob if the message is delivered or outdated.
But actual onle the message with the reference to the blob is deletet, the use-data in the repository not. The problem is the separation of the blob from the message itself.

My idea is to extend the persistence store to check at delete if it is a blob message and then delete the blob from the repository. I have done this in the jdbc- and kaha message store (see patch).

JDBC message store:
- created a new table with all blob url`s which must be delete if the message is deleted
| ID (primary Key) | MSGID (reference to ID in MESSAGE table) | URL |
- on message add check if it is a blob-message and if the broker must delete the message add the information to the new table
- in cleanup a query on that table finds all urls with no existing reference in the MESSAGE table (becaus the message is deleted) and then deletes this blobs

KAHA message store:
- TopicSubAck has a new attribute remotBlobUrl
- on message add check if it is a blob-message and if the broker must delete the message add the url to the TopicSubAck
- on acknowledge at delete check if the attribute is set an if it is set delete the blob

THINGS TO DO
- add a similar mechanism to the other message stores
- only the first delete is successfull, every other delete request ends in an 500 errorcode from the server","Windows vista, java 6",davsclaus,gibking,marcobuss,pnidl,,,,,,,,,,,,,,,,,,,,,,,,"27/Dec/07 07:57;marcobuss;ASF.LICENSE.NOT.GRANTED--patch.txt;https://issues.apache.org/jira/secure/attachment/12460908/ASF.LICENSE.NOT.GRANTED--patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-03-10 14:17:02.18,,,false,,,,,,,,,,,,,,,,,84666,,,Tue Nov 13 09:39:10 UTC 2012,,,,Patch Available,,,,"0|i05x1z:",32452,,,,,,,,,,,,,,,,,,,"27/Dec/07 14:55;marcobuss;The error 500 occours due to the fact that is an lock on the file.
I think this happens on jetty becaus the server holds the connection for a time. And so when the message is consumed and a GET is invoked for this file the lock ois set until the connection will be closed.","10/Mar/10 14:17;vekili;I have checked the error 500 in the activemq-fileserver. 
The problem is that streams are not closed when the file is uploaded on the server.

this would fix the problem
{code:title=org.apache.activemq.util.RestFilter.java}
    protected void doPut(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        // some code missing here...

        FileOutputStream out = new FileOutputStream(file);
        try {
            IO.copy(request.getInputStream(), out);
        } catch (IOException e) {
            Log.warn(Log.EXCEPTION, e); // is this obsolete?
            throw e;
        }finally{
            out.close();
        }

        response.setStatus(HttpURLConnection.HTTP_NO_CONTENT); // we return no
                                                                // content
    }
{code}

Also in KahaMessageStore.java should be added removing the blob files when the message is removed.
","07/Oct/12 12:36;davsclaus;AMQ-2430 fixed this.","13/Nov/12 09:39;pnidl;This issue is not fixed in 5.7.0.
org.apache.activemq.command.ActiveMQBlobMessage.deleteFile() method is the only (and I suppose that advisable) way to delete the actual BLOB but it is never called from ActiveMQ classes (not even for messages marked as ""deletedByBroker"").
For acknowledged messages you can use simple workaround and define custom acknowledge callback that calls the delete method. But for expired messages I see no elegant way to force ActiveMQ to delete the BLOB. Marco's patch could work but it is not used in 5.7.0 release.
Is there some other way that broker deletes BLOB messages or am I right that this feature doesn't work?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JNDI name unable to accept slash charactor ""/""",AMQ-140,12481052,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jsherman,jsherman,25/Nov/04 23:12,03/May/12 13:00,30/Jan/20 16:57,07/Dec/04 17:04,1.3,,,,,,1.3,,,JMS client,,,,0,"While using the JNDI properties file I am not able to look a Queue name ""jms/Queue"". I think the forward slash is causing an issue.
The jndi.properties file was:

java.naming.factory.initial = org.codehaus.activemq.jndi.ActiveMQInitialContextFactory
brokerURL = tcp://localhost:61616
queue.jms/Queue = example.MyQueue",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-05-03 12:59:55.609,,,false,,,,,,,,,,,,,,,,,48875,,,Thu May 03 13:00:32 UTC 2012,,,,,,,,"0|i0tt7z:",172043,,,,,,,,,,,,,,,,,,,"03/May/12 12:59;paarsar;try this


java.naming.factory.initial = org.codehaus.activemq.jndi.ActiveMQWASInitialContextFactory
brokerURL = tcp://localhost:61616
java.naming.queue.jms.RUNDMCQ = example.MyQueue","03/May/12 13:00;paarsar;sorry

java.naming.factory.initial = org.codehaus.activemq.jndi.ActiveMQWASInitialContextFactory
brokerURL = tcp://localhost:61616
java.naming.queue.jms.Queue = example.MyQueue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate topic messages received with network of brokers and selectors,AMQ-1509,12482544,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,hoorner,hoorner,30/Nov/07 17:59,09/Nov/11 11:59,30/Jan/20 16:57,19/Feb/09 09:14,4.1.1,,,,,,5.3.0,,,Broker,Transport,,,0,"If you create a network of two brokers, A and B, one publisher publishing to A, and n (where n is > 1) receivers with selectors, each receiver recieves n messages for every 1 message sent.  The key here is to have a selector.   It would appear that the conduitSubscriptions flag does not work when using selectors.  The conduit does not properly reconcile consumers if they have selectors.  A suggested soltuion would be that ather than process each selector independantly, each selector should be or'ed together and if any selector results in true then a single message should be sent to the other broker.

In doing research, it would appear that this problem was introduced with bug fix AMQ-810.  Another user reported it via email back to the assignee of AMQ-810 and a short dialog transpired.  See http://www.mail-archive.com/activemq-users@geronimo.apache.org/msg05198.html.  

",,gtoff,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/08 13:23;gtoff;ActiveMQActor.java;https://issues.apache.org/jira/secure/attachment/12461031/ActiveMQActor.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-01-16 19:53:20.196,,,false,,,,,,,,,,,,,,,,,84524,,,Wed Nov 09 11:50:38 UTC 2011,,,,,,,,"0|i0s0en:",161542,,,,,,,,,,,,,,,,,,,"11/Jan/08 02:18;hoorner;I do not see any subversion commits listed nor do I see code changes in files I would have expected to change on the main subversion trunk.  Is there a way to get the code changes associated with this resolution?   Thanks!

","16/Jan/08 19:53;vuinguyen;Hello Rob. I have been assigned to fix this bug for a version of activemq at work. Since we need this fix fairly soon and it would be a shame to have to reinvent the wheel, I'd really appreciate it if you could share your solution to this bug. I'm actually working on this task for Howard Orner, who submitted the previous comments. Thanks.","24/Apr/08 14:57;gtoff;Hi all,

I'm also wondering how to get to the patch for this issue, it seems it's not included in the RC4 release of 5.1.0 as I can still reproduce it using 4 brokers.
Did anybody manage to solve the problem?

Thank you.","25/Apr/08 23:58;hoorner;Here's a description of how to fix it.  Sorry, I don't have the source available to me right now to upload it, but it's pretty straight forward.  I'm also doing this from memory so you may have to look at the code a bit and make sure I'm not missing anything.

The ideal solution would actually apply an 'or' of all selectors before forwarding message between brokers.  However that appears very difficult to do because of all the classes involved and the fact that the selector is parsed and cached where its used in other places.  So instead, the org.apache.activemq.network.ConduitBridge and DurableConduitBridge were modified to change all incoming subscription selectors to null before adding the subscription to the list of interested consumers.  This results in excess network traffic because all messages get forwarded regardless of whether the 'other' brokers will actually deliver them after they apply individual selectors.  But it works.

In ConduitBridge.addToAlreadyInterestedConsumers() remove the lines that check for a selector.  Then put in a line that sets the selector to null before doCreateDemandSubscrition is called in createDemandSubcription.  Do basically the same in DurableConduitBridge.

Rob - If this hasn't really been fixed (it appears not to be), I and I'm sure others would appreciate it if you would incorporate this into the code.  It would be better to take my original suggestion of 'or'ing selectors together, but that looks like a lot of code changes, so this at least fixes the bug with just a few lines of code.  


","26/Apr/08 15:53;gtoff;Thank you Howard.

I'm afraid the temporary fix you propose wouldn't be of much use in my case. I am currently working at comparing how well our in-house distributed pub/sub solution routes packets  with respect to ActiveMQ on a generic network of brokers: if I implement the temporary fix ActiveMQ performance wouldn't probably be as good as it should invalidating my test. I guess I'll have to find another MOM for the experiments while ActiveMQ gets fixed. Did any of you ever use any other JMS implementation supporting generic (cyclic) networks of brokers? 

Using pub/sub on networks of brokers must not be so common after all, I would have expected this bug to receive much more comments.

Thank you again.","29/Apr/08 10:55;rajdavies;Yep - not fixed","30/Apr/08 06:25;rajdavies;The only 'safe' way to do this is the simple fix suggested by Howard. If we try and OR selectors together - we have to deal with the timing around updating  that selector state - and this could be prone to some difficult to track down timing issues.

If you want to shape the traffic across networks, the best way would be to use destinations, wilcards and network filters.","23/May/08 13:21;gtoff;Hi Rob,

I saw you committed the changes to fix issue AMQ-1509. I downloaded the latest svn snapshot on may the 8th and tested it  on the (for me usual) 4-nodes-in-a-cycle topology. It seems your patch improves the whole thing as now my test runs end nicely (before the duplication was so massive clients were not able to finish their workload), alas, my clients keep receiving duplicate messages.

I will attach the code of my clients for completeness, either there's something wrong with them or the bug is still there for bigger cyclic topologies. ","23/May/08 13:23;gtoff;This are the clients I use to reproduce the bug on cyclic topologies.","19/Feb/09 09:14;dejanb;We did some refactoring in this area for another issue, but this generally should be working.

Here's the test case that tries to reproduce the problem (org.apache.activemq.usecases.ThreeBrokerQueueNetworkTest)

{code}
    public void testABandBCbrokerNetworkWithSelectors() throws Exception {
        // Setup broker networks
        bridgeBrokers(""BrokerA"", ""BrokerB"", dynamicOnly, 2, true);
        bridgeBrokers(""BrokerB"", ""BrokerC"", dynamicOnly, 2, true);

        startAllBrokers();

        // Setup destination
        Destination dest = createDestination(""TEST.FOO"", true);

        // Setup consumers
        MessageConsumer clientA = createConsumer(""BrokerC"", dest, ""dummy = 33"");
        MessageConsumer clientB = createConsumer(""BrokerC"", dest, ""dummy > 30"");
        MessageConsumer clientC = createConsumer(""BrokerC"", dest, ""dummy = 34"");

        // let consumers propogate around the network
        Thread.sleep(2000);
        // Send messages
        // Send messages for broker A
        HashMap<String, Object> props = new HashMap<String, Object>();
        props.put(""dummy"", 33);
        sendMessages(""BrokerA"", dest, MESSAGE_COUNT, props);
        props.put(""dummy"", 34);
        sendMessages(""BrokerA"", dest, MESSAGE_COUNT * 2, props);

        // Get message count
        MessageIdList msgsA = getConsumerMessages(""BrokerC"", clientA);
        MessageIdList msgsB = getConsumerMessages(""BrokerC"", clientB);
        MessageIdList msgsC = getConsumerMessages(""BrokerC"", clientC);

        msgsA.waitForMessagesToArrive(MESSAGE_COUNT);
        msgsB.waitForMessagesToArrive(MESSAGE_COUNT * 3);
        msgsC.waitForMessagesToArrive(MESSAGE_COUNT * 2) ;

        assertEquals(MESSAGE_COUNT, msgsA.getMessageCount());
        assertEquals(MESSAGE_COUNT * 3, msgsB.getMessageCount());
        assertEquals(MESSAGE_COUNT *2, msgsC.getMessageCount());
    }{code}

If you find it still not working, please submit the test case similar to the one above","09/Nov/11 11:50;gtoff;Hi Dejan,

just by chance I started looking again at this issue. I don't think the problem is fixed: as soon as there are more than one ( at least 2 hops ) paths between brokers message duplication occurs.

Here's a little example:

{code:title=FourBrokerTopicNetworkTest}

public class FourBrokerTopicNetworkTest extends JmsMultipleBrokersTestSupport implements MessageListener {
	protected static final int MESSAGE_COUNT = 5;
	public boolean dynamicOnly;

	public void initCombosForTestABandBCbrokerNetworkWithSelectors() {
		addCombinationValues(""dynamicOnly"", new Object[] { true, false });
	}

	/**
	 * A simple square topology BrokerA <-> BrokerB BrokerA <-> BrokerC BrokerB
	 * <-> BrokerD BrokerD <-> BrokerC
	 * 
	 */
	public void testSquareConnectedBrokerNetwork2() throws Exception {
		int networkTTL = 2;
		boolean conduitSubs = true;
		boolean dynamicOnly = false;

		// Setup broker networks
		bridgeBrokers(""BrokerA"", ""BrokerB"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerB"", ""BrokerA"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerA"", ""BrokerC"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerC"", ""BrokerA"", dynamicOnly, networkTTL,
				conduitSubs);

		bridgeBrokers(""BrokerD"", ""BrokerC"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerC"", ""BrokerD"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerD"", ""BrokerB"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerB"", ""BrokerD"", dynamicOnly, networkTTL,
				conduitSubs);

		startAllBrokers();

		// Setup destination
		Destination dest = createDestination(""TEST.FOO"", true);

		// Setup consumers
		MessageConsumer clientA = createConsumer(""BrokerA"", dest, ""msgId > 0"");
		MessageConsumer clientB = createConsumer(""BrokerB"", dest, ""msgId > 0"");
		MessageConsumer clientC = createConsumer(""BrokerC"", dest, ""msgId > 0"");
		MessageConsumer clientD = createConsumer(""BrokerD"", dest, ""msgId > 0"");
		// let consumers propogate around the network
		Thread.sleep(5000);
		
		clientD.setMessageListener(this);

		// Send messages
		String[] brokers = { ""BrokerA"", ""BrokerB"", ""BrokerC"", ""BrokerD"" };
		HashMap<String, Object> props = new HashMap<String, Object>();
		for (String broker : brokers) {
			props.put(""sender"", broker);
			for (int i = 1; i <= MESSAGE_COUNT; i++) {
				props.put(""msgId"", i);
				sendMessages(broker, dest, 1, props);
			}
		}

		// Get message count
		MessageIdList msgsA = getConsumerMessages(""BrokerA"", clientA);
		MessageIdList msgsB = getConsumerMessages(""BrokerB"", clientB);
		MessageIdList msgsC = getConsumerMessages(""BrokerC"", clientC);
		MessageIdList msgsD = getConsumerMessages(""BrokerD"", clientD);

		msgsA.waitForMessagesToArrive(MESSAGE_COUNT * 4);
		msgsB.waitForMessagesToArrive(MESSAGE_COUNT * 4);
		msgsC.waitForMessagesToArrive(MESSAGE_COUNT * 4);
		msgsD.waitForMessagesToArrive(MESSAGE_COUNT * 4);
		
		System.out.println(msgsA.toString());

		assertEquals(MESSAGE_COUNT * 4, msgsA.getMessageCount());
		assertEquals(MESSAGE_COUNT * 4, msgsB.getMessageCount());
		assertEquals(MESSAGE_COUNT * 4, msgsC.getMessageCount());
		assertEquals(MESSAGE_COUNT * 4, msgsD.getMessageCount());
	}

	/**
	 * A simple square topology BrokerA <-> BrokerB BrokerA <-> BrokerC BrokerB
	 * <-> BrokerD BrokerD <-> BrokerC
	 * 
	 */
	public void testSquareConnectedBrokerNetwork() throws Exception {
		int networkTTL = 2;
		boolean conduitSubs = true;
		boolean dynamicOnly = false;

		// Setup broker networks
		bridgeBrokers(""BrokerA"", ""BrokerB"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerB"", ""BrokerA"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerA"", ""BrokerC"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerC"", ""BrokerA"", dynamicOnly, networkTTL,
				conduitSubs);

		bridgeBrokers(""BrokerD"", ""BrokerC"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerC"", ""BrokerD"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerD"", ""BrokerB"", dynamicOnly, networkTTL,
				conduitSubs);
		bridgeBrokers(""BrokerB"", ""BrokerD"", dynamicOnly, networkTTL,
				conduitSubs);

		startAllBrokers();

		// Setup destination
		Destination dest = createDestination(""TEST.FOO"", true);

		// Setup consumers
		MessageConsumer clientA = createConsumer(""BrokerA"", dest);
		MessageConsumer clientB = createConsumer(""BrokerB"", dest);
		MessageConsumer clientC = createConsumer(""BrokerC"", dest);
		MessageConsumer clientD = createConsumer(""BrokerD"", dest);
		// let consumers propogate around the network
		Thread.sleep(5000);

		// Send messages
		sendMessages(""BrokerA"", dest, MESSAGE_COUNT);
		sendMessages(""BrokerB"", dest, MESSAGE_COUNT);
		sendMessages(""BrokerC"", dest, MESSAGE_COUNT);
		sendMessages(""BrokerD"", dest, MESSAGE_COUNT);

		// Get message count
		MessageIdList msgsA = getConsumerMessages(""BrokerA"", clientA);
		MessageIdList msgsB = getConsumerMessages(""BrokerB"", clientB);
		MessageIdList msgsC = getConsumerMessages(""BrokerC"", clientC);
		MessageIdList msgsD = getConsumerMessages(""BrokerD"", clientD);

		msgsA.waitForMessagesToArrive(MESSAGE_COUNT * 4);
		msgsB.waitForMessagesToArrive(MESSAGE_COUNT * 4);
		msgsC.waitForMessagesToArrive(MESSAGE_COUNT * 4);
		msgsD.waitForMessagesToArrive(MESSAGE_COUNT * 4);

		assertEquals(MESSAGE_COUNT * 4, msgsA.getMessageCount());
		assertEquals(MESSAGE_COUNT * 4, msgsB.getMessageCount());
		assertEquals(MESSAGE_COUNT * 4, msgsC.getMessageCount());
		assertEquals(MESSAGE_COUNT * 4, msgsD.getMessageCount());
	}

	public void setUp() throws Exception {
		super.setAutoFail(true);
		super.setUp();
		String options = new String(""?persistent=false&useJmx=false"");
		createBroker(new URI(""broker:(tcp://localhost:61616)/BrokerA"" + options));
		createBroker(new URI(""broker:(tcp://localhost:61617)/BrokerB"" + options));
		createBroker(new URI(""broker:(tcp://localhost:61618)/BrokerC"" + options));
		createBroker(new URI(""broker:(tcp://localhost:61619)/BrokerD"" + options));
	}

	public static Test suite() {
		return suite(FourBrokerTopicNetworkTest.class);
	}

	@Override
	public void onMessage(Message message) {
		try {
			System.err.println(message.getStringProperty(""sender"") + "" msgID:"" + message.getIntProperty(""msgId"") );
		} catch (JMSException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
}

{code}

I don't know if there's anything wrong with this test, or if I should use different configurations of TTL, conduit, and dynamicOnly. I tested it with the latest AMQ I could get (5.5.1).

As you can see delivered messages are more than 20, they are 25. The reason behind it can be seen in the testSquareConnectedBrokerNetwork2 method: clientD will print all messages coming from BrokerA twice as they are forwarded by both BrokerB and BrokerC on two different paths.
And of course this is a major problem whenever a broker network has multiple paths as message duplication becomes so severe that it basically kills the whole thing.

Please let me know if the test is correct as I'd like to have some more insight about why this is happening. Also my colleagues and I have some ideas about the correct way to fix it.

Regards,

g",,,,,,,,,,,,,,,,,,,,,,,,
Design error in MulticastDiscoveryAgent use of FailoverTransportConnector?,AMQ-492,12483301,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,17/Jan/06 19:02,05/Oct/11 14:38,30/Jan/20 16:57,05/Oct/11 14:38,4.0,,,,,,NEEDS_REVIEW,,,Connector,,,,0,"I have been trying to get my head around the multicast discovery mechanism.  In particular its use of the FailoverTransport class is bothering me.  The issue presented itself when viewing the DEBUG level log entries that were generated after one broker of a pair, connected using this discovery mechanism, was stopped.  The FailoverTransport went into a very tight endless loop of attempts to reconnect.

My first thought to tweak the Failover properties in the network connector URI.  But alais, the uri was for the multicast not the failover.  No problem, just duplicate the failover properties on the multicast agent.  After doing so, I started to think why is failover needed at all  wont the connection be reestablished when the broker returns and advertises itself again?

Can someone comment on this issue?  Is the bug that the failover properties where not available or is the problem that failover was used at all?
",w2k and linux w java 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 17:59:01.0,,,false,,,,,,,,,,,,,,,,,46468,,,Wed Oct 05 14:38:09 UTC 2011,,,,,,,,"0|i0am8f:",59875,Regression,,,,,,,,,,,,,,,,,,"17/Jan/06 19:22;dennis@bevocal.com;Maybe jumped the gun again.  Looking a little further I found that the NetworkConnector member failover=true, so if it is explicitly set off, then the multicast discovery transport works more like I expected.

But then that still leave to question what would the purpose of ""failover"" mode be with used of multicast discovery.  And if it has a purpose then all the failover properties should be exposed and passed through the multicast discovery again uri.
","17/Jan/06 19:34;dennis@bevocal.com;Okay, walking back out onto the limb again.  While setting the failover value to false on the network connector forces use of the TcpTransportConnector, I am not sure that the bridge is fully established again after the missing broker is seen found.  There are entries in the log such as:

2006-01-17 11:16:37,882 [Discovery: null] INFO  NetworkConnector               - Establishing network connection between vm://roadrashA?network=true and null at tcp://harley:61616
2006-01-17 11:16:37,913 [Discovery: null] INFO  TransportConnector             - Accepting connection on: vm://roadrashA
2006-01-17 11:16:38,038 [Discovery: null] INFO  DemandForwardingBridge         - Starting a network connection between vm://roadrashA#0 and tcp://harley/172.16.12.88:61616 has been established.
2006-01-17 11:17:07,101 [Discovery: null] DEBUG AbstractConnection             - Sync error occurred: javax.jms.InvalidClientIDException: No clientID specified for connection disconnect request

at the time of the initial connection with the remote broker.  However when the connection is broken then re-established, the only entries in the log indicating such is:

2006-01-17 11:18:14,820 [.16.12.88:32972] DEBUG TcpTransport                   - TCP consumer thread starting
2006-01-17 11:18:15,007 [.16.12.88:32972] DEBUG AbstractConnection             - Async error occurred: javax.jms.InvalidClientIDException: No clientID specified for connection request

I will run some additional tests, but logs do not look promising.
","17/Mar/06 17:59;chirino;There was a question of why use failover??  If you don't expect a node in the cluster to be taken offline for an extended period of time, using reliable helps the stablebility between the brokers since by using failover, if a node in the cluster a transient outage, the rest of the cluster will see him as still being online.

I think the gist of the last comment is that that broker was not reconnecting when a clustered broker is bounced.

If so, then this is related to AMQ-639 which is now fixed.  ","20/Dec/06 09:57;tryma;Hi,

We have been experiencing a strange issue with our setup of paired brokers (using incubator-activemq-4.1).
Running our brokers with the Rootlogger set to DEBUG level we experience the same issues with the FailoverTransport going into a very tight endless loop of reconnection attempts upon shutdown of one broker of a pair.

Our environment:

We have two servers (dev1 and dev2) where we have a broker running on each. They both share the same Oracle datasource. Starting the broker on either server, this broker becomes the Master-broker on the datasource, whereas the second broker will report ""Attempting to acquire the exclusive lock to become the Master broker"" upon startup.

This is all fine. The problem occurs however when attempting to shutdown the Master-broker where we expect the slave-broker to become the new Master-broker. Running under DEBUG-level, the Master-broker hangs indefinitely.

Changing to log-level INFO fixes the problem.

Please advise if there is some bug connected to the FailoverTransport if the log-level happens to be DEBUG.","23/Oct/07 14:18;chirino;Hi Trym could you attach a test case to this issue?  I have not seen this behavior so far.  A test case would help us validate the problem.","05/Oct/11 14:38;tabish;4.x broker is EOL",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp protocol does not correctly check authentication (security hole),AMQ-1272,12483348,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tom@samplonius.org,tom@samplonius.org,12/Jun/07 06:25,05/Oct/11 14:33,30/Jan/20 16:57,05/Oct/11 14:33,5.0.0,,,,,,5.x,,,Broker,,,,2,"ActiveMQ does not correctly validate the username and password of Stomp clients.  A security exception is generated, but ignored, leaving the client connected, and with full and unrestricted access to ActiveMQ.

Further description, and a partial patch:

http://www.nabble.com/Getting-Stomp-support-to-a-usable-state...-tf3858629s2354.html#a11060452 


BTW, while the patch in the above post, is crude, however, leaving unauthenticated users connected with full-access makes ActiveMQ and Stomp pretty unusable.  So please apply the path, rather than do nothing.",4.2-SNAPSHOT,ijsklont,john.greeley,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Aug/08 13:39;drwoods;AMQ1272-stomp-auth-v412.patch;https://issues.apache.org/jira/secure/attachment/12461107/AMQ1272-stomp-auth-v412.patch","16/Dec/07 20:12;dejanb;stomp-auth.patch;https://issues.apache.org/jira/secure/attachment/12461065/stomp-auth.patch","24/Jun/07 06:02;tom@samplonius.org;stomp.diff;https://issues.apache.org/jira/secure/attachment/12460712/stomp.diff",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:48:09.44,,,false,,,,,,,,,,,,,,,,,46465,,,Wed Oct 05 14:33:55 UTC 2011,,,,,,,,"0|i0am4v:",59859,,,,,,,,,,,,,,,,,,,"12/Jun/07 09:48;jstrachan;added an affected version","16/Jun/07 08:09;tom@samplonius.org;I have tested the patch that Pieter  posted, and it doesn't make any changed.

It doesn't seem like this should be a hard problem to fix.  I'd fix it, but I'm wish I understand the interaction between the various protocol classes and the core.","22/Jun/07 12:05;ijsklont;I am the author of the patch mentioned. It worked for me (the patch was against apache-activemq-4.2-20070510.230653-54 snapshot). Without the patch applied, SecurityException's were already visible in the debug log, however the were silently dropped (there is a try/catch block somewhere in the connection handler that handles this. It then creates an ExceptionResponse which is passed to the handler in onStompConnect, where the response isn't checked anymore). If these were not visbile, I guess something else is wrong with the authentication setup.

I'm using the simple authenticator btw, but this shouldn't matter.","24/Jun/07 05:57;tom@samplonius.org;I have re-tested the patch.  I applied the patch (more or less) to activemq-5.0-20070621

The behaviour is a bit strange.  A Stomp producer simply blocks (I'm using Net::Stomp).  A Stomp consumer does too.  Very odd.  At least unauthenticated Stomp clients can't steal messages.

I'm going to try to attach my patch (context diff).","24/Jun/07 06:02;tom@samplonius.org;Patch to Stomp ProtocolConverter.java

This is just an adapted from Pieter's patch, but to activemq-5.0-20070621, as a context diff.","24/Jun/07 08:56;tom@samplonius.org;Here is the config that I'm using:

    <plugins>
      <simpleAuthenticationPlugin>
         <users>
           <authenticationUser username=""system"" password=""manager"" groups=""producers,consumers,admins"" />
           <authenticationUser username=""frontend"" password=""manager"" groups=""producers"" />
           <authenticationUser username=""backend"" password=""manager"" groups=""consumers"" />
         </users>
       </simpleAuthenticationPlugin>
       <authorizationPlugin>
         <map>
           <authorizationMap>
             <authorizationEntries>
               <authorizationEntry queue="">"" read=""backend"" write=""frontend"" admin=""admins"" />
             </authorizationEntries>
           </authorizationMap>
         </map>
       </authorizationPlugin>
    </plugins>
","24/Jun/07 09:48;tom@samplonius.org;Just some further clarification.  activemq-5.0-20070621 with the patch has the following behavior:

1.  If a Stomp client uses the wrong password and/or wrong user name, it will just block forever when trying to send to a destination.

2.  If a Stomp client uses a matching username and password, but that user does not have permission to write to the queue (as in the above nonsensical auth configuration, where none of the groups match), ActiveMQ will just eat the message and log an exception for each message:

 ERROR Service                        - Async error occurred: java.lang.SecurityException: User system is not authorized to write to: queue://foo
java.lang.SecurityException: User system is not authorized to write to: queue://foo


So the client is never disconnected, and never is sent an error.  It is a step in the right direction.","24/Jun/07 14:23;ijsklont;I'm using the PHP Stomp client, that might explain the difference in the behaviour with incorrecht auth details. I don't have access to the setup right now, I will report the exact behaviour when I do. I guess it's possible that the Net::Stomp code expects a Stomp ERROR frame, which isn't sent, or a CONNECTED frame (which isn't sent either). Perhaps it's waiting for these frames, I don't know the code. I think in my case the socket was disconnected, but I'm not sure. I will investigate.","16/Jul/07 02:58;tom@samplonius.org;Well, the Perl Net::Stomp client definitely notices if the socket goes away, because if I kill ActiveMQ, my client reports an immediate error:

Error reading command:  at /usr/local/lib/perl5/site_perl/5.8.8/Net/Stomp/Frame.pm line 37, <GEN0> line 25076.


This is expected though.  When the receive_frame() method is called, Net::Stomp does a blocking read on a socket.  If that socket is closed, the read will return with an error code.  And then the Net::Stomp kicks out an ""Error reading command"" exception.

I have also retested this with a 5.0 snapshot from July 12, with the stomp.diff patch that I posed above.  The behavior is the same.  A Stomp client will just block during login.  I can see in netstat that there is a one 61613 socket open as well, so it is not definitely not being closed by ActiveMQ.

","16/Dec/07 20:12;dejanb;I've refactored a ProtocolConverter, StompTest and added a few tests to make all this work.

Here's a list of things that has been done:

- added xbean resources to set up a test broker with configured authentication
- modified existing tests to connect with system/manager user so that they have right privileges
- modified protocolconverter.onStompConnect to send ""error"" frame on connect attempt with wrong credentials
- modified protocolConverter.createResponseHandler to send ""error"" frame on security exception on any other command
- added test cases to assert proper behavior on connect, send and subscribe","20/Dec/07 14:39;chirino;Applied Dejan's patch.","25/Aug/08 13:31;drwoods;This security fix also needs to be applied to the 4.1 branch, for users like Geronimo who have not upgraded to AMQ 5.1.0 yet.","25/Aug/08 13:39;drwoods;Patch created against branches/activemq-4.1  Rev647819 (current as of 20080825)","25/Jun/09 09:22;gtully;patch requested against 4.1.x  - fix is on on trunk.","05/Oct/11 14:33;tabish;This has since been resolved",,,,,,,,,,,,,,,,,,,,
Broker cannot shutdown cleanly due to hanging non-daemon threads.,AMQ-1447,12483818,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,wlam,wlam,05/Oct/07 15:16,04/Oct/11 23:34,30/Jan/20 16:57,04/Oct/11 23:34,4.1.1,,,,,,5.4.2,,,Broker,,,,2,"Running with an embedded broker inside an application, the application failed to shutdown cleanly due to some hanging ActiveMQ non-daemon threads, sample stacktace as below.

""ActiveMQ Transport: tcp://oat-dualcore113/172.17.0.113:61616"" prio=5 tid=0x041b8658 nid=0x12f4 in Object.wait() [6c7f000..6c7fdc0]
	at java.lang.Object.wait(Native Method)
	- waiting on <0x168c0490> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
	at java.lang.Object.wait(Object.java:429)
	at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:178)
	- locked <0x168c0490> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.waitStarted(DemandForwardingBridgeSupport.java:842)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:332)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:131)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
	at java.lang.Thread.run(Thread.java:534)


It may be caused by other invalid broker connection attempts (not sure how) and TcpTransport is waiting for a successful connection to the remote broker.  

Various ways to workaround that failed,
- TcpTransport is not being exposed to the application by any means (unlike ActiveMQConnection - even though it is package not public)
- no means to set the TcpTransport as daemon since it is set on the constructor

Have to put in some 'custom' code in the application to find all 'ActiveMQ' non-daemon threads and stop() them.  Note interrupt() won't work since InterruptedException was ignored.

I am using the default multicast for broker discovery  (tried that with other multicast address, same problem)

    <networkConnectors>
      <networkConnector name=""default"" uri=""multicast://default"" failover=""false""/>
    </networkConnectors>
","Windows XP, JDK 1.4.2",henryju,mpierce,wlam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-07-08 13:39:07.764,,,false,,,,,,,,,,,,,,,,,46109,,,Tue Oct 04 23:34:24 UTC 2011,,,,,,,,"0|i0rpm7:",159794,,,,,,,,,,,,,,,,,,,"08/Jul/09 13:39;gtully;on trunk at least, adding a query parameter of daemon=true to the networkConnector urls should eliminate this if it is still a daemon thread.","19/Mar/10 22:09;scotte;This still appears to be an issue in 5.3.0. I am using activemq-core-5.3.0.jar, but ActiveMQ Transport threads are not daemon:

""ActiveMQ Transport: tcp://xyz/127.0.0.1:61616"" prio=1 tid=0x6a651420 nid=0x6d62 runnable [0x69ef8000..0x69ef9000]

Unfortunately this results in not being able to bring Tomcat application servers down gracefully.

Note that the ActiveMQ Scheduler thread is setup correctly, so this appears specific to the Transport code:

""ActiveMQ Scheduler"" daemon prio=1 tid=0x0973deb8 nid=0x6d68 in Object.wait() [0x697fe000..0x697fed80]

NOTE: Environment is linux 2.6.31-19-generic-pae #56-Ubuntu SMP

EDIT: Whoops, My note turned into a link due to square brackets. Fixed...","19/Mar/10 22:41;mpierce;Scott, I was able to get tomcat to shutdown cleanly using this configuration:

<Resource name=""jms/queueConnectionFactory""
auth=""Container"" 
type=""org.apache.activemq.ActiveMQConnectionFactory"" 
factory=""org.apache.activemq.jndi.JNDIReferenceFactory"" 
brokerURL=""failover:(tcp://127.0.0.1:61616?daemon=true)?maxReconnectDelay=5000"" />","23/Sep/10 13:53;henryju;Thanks for the workaround. Note that for me, appending ?daemon=true was enough to have a clean shutdown. No need to use failover: and maxReconnectDelay (I'm running activemq 5.4.1).","04/Oct/11 23:34;tabish;Workaround exists, add daemon=true to the URI as commented in the issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dead lock during XA recovery when activeMq 5.0.0 is used with Atomikos,AMQ-1569,12483349,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mbaril,mbaril,25/Jan/08 18:31,27/Sep/11 21:08,30/Jan/20 16:57,27/Sep/11 21:08,5.0.0,,,,,,,,,,,,,1,"Hi,

I developed an application that runs in an OSGI environment (Equinox). My application is developed using Spring Dynamic Modules 1.0-rc2, ActiveMq 5.0.0 and Atomikos 3.2.2.

Sometimes (50% of the time) when I start my application, the bundle that declare the connection factories to the jms broker runs into deadlock.

This is the declaration of my connection factories:

<bean id=""activemq.connectionFactory"" class=""com.trilliantnetworks.griffin.utils.CustomXAJMSConnectionFactory"">
    <property name=""brokerURL"" value="" failover:(tcp://software2:61616,tcp://software1:61616)"" />
  </bean>
  
  <!-- Configure the JMS connector; call init to register for recovery! -->
  <bean id=""atomikos.connectionFactory""
        class=""com.atomikos.jms.TopicConnectionFactoryBean"" init-method=""init"">
    <property name=""resourceName"" value="" jms.connectionFactory""/>
    <property name=""xaTopicConnectionFactory"" ref="" activemq.connectionFactory ""/>
  </bean>
  
  <bean id=""listen.jms.spring.singleConnectionFactory"" class=""org.springframework.jms.connection.SingleConnectionFactory"" destroy-method=""destroy"">
    <constructor-arg ref=""atomikos.connectionFactory ""/>
  </bean>

Looking deeper in the code I found that the application block when init is called in com.atomikos.jms.TopicConnectionFactoryBean.

The init method calls the method isSameRM of org.apache.activemq.TransactionContext that eventually calls waitForBrokerInfo in org.apache.activemq.ActiveMQConnection. The method blocks on brokerInfoReceived.await(). So I tried to found why brokerInfoReceived.countDown() is never called...

I found that this is because createTransportListener of org.apache.activemq.transport.failover.FailoverTransport is sometimes called before the member variable transportListener was set. createTransportListener is called by the Thread ActiveMQ Transport: tcp://software2/192.9.200.182:61616 while setTransportListener is called by the main Thread that initialize my bundle.

I am unable to reproduce the issue with activeMQ 4.1.1 so I think that is issue has been introduced with version 5.0.0.

Also, when I use the connection URL ""tcp://software2:61616"" instead of ""failover:(tcp://software2:61616,tcp://software1:61616)"" my application always start correctly.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-18 14:43:43.65,,,false,,,,,,,,,,,,,,,,,33643,,,Tue Sep 27 21:08:18 UTC 2011,,,,,,,,"0|i0rrqv:",160139,,,,,,,,,,,,,,,,,,,"18/Jun/08 14:43;augusto.rodriguez;Hi, 

We're experiencing the same problem with ActiveMQ 5.1 (using a ActiveMQXAConnectionFactory) and Atomikos 3.2.3. 

Cheers,
Augusto","20/Jun/08 09:27;augusto.rodriguez;It looks like this issue was fixed by AMQ-1771","27/Sep/11 21:08;tabish;Commenter reports issue fixed, no test case given to test the issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
There should be no active/inactive disction in JMX Type=Subscription MBean,AMQ-819,12483351,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,colincrist,colincrist,12/Jul/06 20:55,20/Sep/11 11:01,30/Jan/20 16:57,20/Sep/11 11:01,4.0.1,,,,,,5.6.0,,,Broker,,,,0,"There is currently a distinction between inactive and active durable subscription MBeans. They should really be the same with the same ObjectName and all properties available at broker startup so a management console can interrogate them. Note there are typos in the attributes in this MBean and some properties such as SubsctiptionName are not available on broker startup.

There is background in the following thread:

http://www.nabble.com/ActiveMQ-JMX-Questions..-tf1917262.html#a5288393

Version tested with was 4.1-SNAPSHOT of 10/7/06

",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-14 11:17:33.915,,,false,,,,,,,,,,,,,,,,,60054,,,Tue Sep 20 11:01:34 UTC 2011,,,,,,,,"0|i0akx3:",59662,,,,,,,,,,,,,,,,,,,"14/Aug/11 11:17;tabish;The method of organizing the durable subscription name was updated by AMQ-3442","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug when setting transportConnector URI options in activemq.xml,AMQ-1233,12482187,12482910,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,davidmc,davidmc,20/Apr/07 09:17,25/Aug/11 23:23,30/Jan/20 16:57,25/Aug/11 23:23,5.2.0,,,,,,NEEDS_REVIEW,,,Broker,,,,0,"As you may know, there are some problems when setting options in the URI for a TransportConnector in the broker configuration file activemq.xml (at least for me when launching the console with the Main class and the start command).
For example, the option 'socket.tcpNoDelay=true' works fine in a producer or consumer URI, but doesn't make the broker have TCP_NODELAY sockets when it is set in the activemq.xml file.

I think I have this more or less nailed down, I will try to explain.
During all my explanation, I'm using the last source from SVN at the time of writing.

Let's imagine you have the following piece of xml in your activemq.xml file:

    <transportConnectors>
      <transportConnector uri=""tcp://localhost:61616?trace=true&foo=bar""/>
    </transportConnectors>

(side note: i have not found in the documentation the need to use ' & a m p ;' in this file, instead of just '&' like in Java code, would be a nice addition for clueless people like myself)
(side note 2: in the forum the & a m p ; appears as just &, but you have to write '& a m p ;' without the spaces of course).

How do these options get processed? Well at some point the method 'org.apache.activemq.transport.tcp.TcpTransportFactory.doBind' gets executed.

    public TransportServer doBind(String brokerId, final URI location) throws IOException {
        try {
            Map options = new HashMap(URISupport.parseParamters(location));

We now have a nice HashMap with our options: {trace=true, foo=bar}

            ServerSocketFactory serverSocketFactory = createServerSocketFactory();
            TcpTransportServer server = createTcpTransportServer(location, serverSocketFactory);
            server.setWireFormatFactory(createWireFormatFactory(options));
            IntrospectionSupport.setProperties(server, options);

'IntrospectionSupport.setProperties' is a method who uses reflexion to find the setter methods of a class, and if there is a setter method with the same name as a key of our HashMap, sets the value.
The 'doBind' method finishes wish

            Map transportOptions = IntrospectionSupport.extractProperties(options, ""transport."");
            server.setTransportOption(transportOptions);
            server.bind();
           
            return server;
        }
        catch (URISyntaxException e) {
            throw IOExceptionSupport.create(e);
        }
    }

This is what happens when you start the broker.
Now, what happens when a client connects and the broker has to create a Transport object for the connection?
The method org.apache.activemq.transport.tcp.TcpTransportServer.run() gets executed:

    [some stuff]
                        HashMap options = new HashMap();
                        options.put(""maxInactivityDuration"", new Long(maxInactivityDuration));
                        options.put(""minmumWireFormatVersion"", new Integer(minmumWireFormatVersion));
                        options.put(""trace"", new Boolean(trace));
                        options.putAll(transportOptions);
                        WireFormat format = wireFormatFactory.createWireFormat();
                        Transport transport = createTransport(socket, format);
                        Transport configuredTransport = transportFactory.serverConfigure(transport, format, options);
                        getAcceptListener().onAccept(configuredTransport);
    [more stuff]

As you see this method constructs a new HashMap options object, which is used to configure the Transport with the line:
                        Transport configuredTransport = transportFactory.serverConfigure(transport, format, options);
If you have a look at this method, you will see that after a call to another method, the properties of the Transport are set again with 'IntrospectionSupport.setProperties'.

So what's the problem? The problem is that for the properties to be recognized, they have to be declared as setters in 2 classes. In this case, TcpTransport and TcpTransportServer.
When a property is set in the connection URI of a client, the ActiveMQ classes don't use TcpTransportServer. They directly set the options on the TcpTransport.
However in a broker, the execution path goes through the TcpTransportServer class. If the options don't have setters declared, and are not later put into the 'options' object in the The method 'org.apache.activemq.transport.tcp.TcpTransportServer.run()' method, the Transport created by the broker does not have these options set.

In our example, trace=true will be recognized but not foo=bar.

If you have a look at the TcpTransportServer class, you will see that the only options accepted are:
-maxInactivityDuration
-minmumWireFormatVersion (small mispelling btw)
-trace
-transport.* options

Furthermore, the way things work, if you put another option on the URI, it will be silently ignored. You can put 'foo=bar' or 'socket.tcpNoDelay=true' and no error message appears. So people may have been using options and thinking they had no effect, where in fact they were ignored without warning, like in the TCP_NODELAY case.

I don't know how the ActiveMQ devs want to design this class, but I see 2 solutions:
-manually add the missing options to TcpTransportServer, and update the docs so that they are synchronized with the actual options that have to be used (like socket.tcpNoDelay=true instead of wireFormat.tcpNoDelayEnabled=true).
-somehow eliminate the double IntrospectionSupport.setProperties usage, and pass the options directly to the TcpTransport class. This will save the need to remember to put options in 2 classes every time one is added. And of course, there is still the need to keep the docs synchronized... :)

If you want to reproduce my analysis, I used Eclipse, executing ActiveMQ source using the console Main class, in debug mode, and using breakpoints in the methods above mentioned.",,davidmc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-11-20 19:58:16.899,,,false,,,,,,,,,,,,,,,,,41763,,,Thu Aug 25 23:23:45 UTC 2011,,,,,,,,"0|i0am5b:",59861,,,,,,,,,,,,,,,,,,,"13/Jun/07 07:24;davidmc;This bug is most probably the reason why the option ""wireFormat.tcpNoDelayEnabled=true"" is still ignored in the broker's activemq.xml file.","13/Jun/07 08:00;davidmc;Also, I think this bug / problem should be given a higher priority, since it affects the ActiveMQ-CPP people.
ActiveMQ-CPP was recently updated so that the c++ client's sockets could have TCP_NODELAY set to true.
But that's not 100% useful if the ActiveMQ broker's sockets cannot have TCP_NODELAY set to true (unless you hack the code to make all sockets have TCP_NODELAY=true).
In my description, I already describe where I think the problem i. I don't want to write a patch myself since it would imply changing the insides of the code and I don't know how you guys would like it to be done.

Just my 2 cents...

David","20/Nov/09 19:58;bsnyder;This appears to be fixed by AMQ-1156, no? ","25/Aug/11 23:23;tabish;Appears to be fixed, reopen with test case if its still an issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 4.1.1 client can write to but not read from ActiveMQ 5.0 server,AMQ-1359,12483129,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,erharold,erharold,08/Aug/07 19:03,09/Jul/11 20:56,30/Jan/20 16:57,09/Jul/11 20:56,5.0.0,,,,,,AGING_TO_DIE,,,,,,,0,"I have some code that worked fairly well with the release version of ActiveMQ 4.1 using OpenWire. One of my colleagues upgraded the server to the latest snapshot of ActiveMQ 5, and suddenly while I could still write to the queues on that server I could no longer read from them. 

Upgrading my client's jar to 5.0 cured the problem. The client was now able to read from and write to the 5.0 server. However the client and server versions should not need to be in such close sync. 

For example, this simple program to write a couple of messages and then read them back fails until I change the jar archive to match the server's:

{code}
import javax.jms.*;
import org.apache.activemq.*;
import org.apache.activemq.command.*;

public class CompletedRead {

   
    private static String url = ""tcp://queue.example.com:61616"";
    private static String queue = ""foo"";

        public static void main(String[] args) throws JMSException {
           
            ConnectionFactory out = new ActiveMQConnectionFactory(url);
            Connection connection = out.createConnection();
            Destination destination = new ActiveMQQueue( queue );
            connection.start();            
            Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
            MessageProducer producer = session.createProducer(destination);
            TextMessage message = session.createTextMessage();
            message.setText(""118652"");
            producer.send(message);
            message.setText(""118653"");
            producer.send(message);
           
            producer.close();
            session.close();
            connection.close();
           
            receive();
        }

        private static void receive() throws JMSException {
            ConnectionFactory in = new ActiveMQConnectionFactory(url);
            Connection connection = in.createConnection();
            Destination destination = new ActiveMQQueue( queue );
            connection.start();            
            Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
           
            MessageConsumer consumer = session.createConsumer(destination);
            TextMessage message = (TextMessage) consumer.receive(10000);
            System.out.println(message.getText());
            message = (TextMessage) consumer.receive(10000);
            System.out.println (message.getText());
           
            consumer.close();
            session.close();
            connection.close();
           
        }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-09 20:56:04.336,,,false,,,,,,,,,,,,,,,,,68652,,,Sat Jul 09 20:56:04 UTC 2011,,,,,,,,"0|i0tsyn:",172001,,,,,,,,,,,,,,,,,,,"09/Jul/11 20:56;tabish;OBE.  4.x is EOL",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ERROR RecoveryListenerAdapter - Message id xxxxxx could not be recovered from the data store! (when using Spring's DefaultMessageListenerContainer with more than 1 concurrentConsumers to dispatch JMS messages),AMQ-1544,12481947,12482248,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,wgluow,wgluow,10/Jan/08 18:32,27/May/11 12:36,30/Jan/20 16:57,21/Jan/08 14:51,5.0.0,,,,,,5.1.0,,,Broker,,,,1,"I am seeing a problem in using ActiveMQ5.0.0 (AMQ Message Store) with Spring's DefaultMessageListenerContainer. Whenever we set the DefaultMessageListenerContainer currentConsumer value to more than 1 (i.e. multiple concurrent consumers), it causes activeMQ broker to produce error shown below:

ERROR RecoveryListenerAdapter - Message id xxxxxx could not be recovered from the data store!

After this point, no further messages will be dispatched from the ActiveMQ JMS queue, and new messages send to the JMS queue seems to disappear and are not logged into the persistence store. The error seem to indicate problem with the persistence store. We are making use of the new activemq5.0.0 AMQ Message Store.

I have included a test program (packaged in TestCase.zip) that will re-produce the issue. The testcase contains the following content:

- activemq.xml : contains the config to start the ActiveMQ broker used by the test program. It contains a basic stripped down configuration (using default config settings on AMQ Message Store).
- JmsQueueSender.java : util class making use of Spring's JmsTemplate to send JMS messages.
- ActiveMQTestClass.java : main class that needs to be started. It loads the sender class via spring, and also starts up the Spring's DefaultMessageListenerContainer to dispatch messages. It will use the sender class JmsQueueSender to send 100 messages every 10sec.
- DefaultMessageListener.java : JMS Pojo class that will be called to handle the messages dispatched from the configured Spring's DefaultMessageListenerContainer class. It currently just prints the message content and sleeps for 200 millisec. The sleep is intentional, as it simulate the time it takes in our real application to process the message content. It also somehow (along with the printing of the message content) seem to make the error/program to occur more quickly.
- testSpring.xml : Spring configuration used by the test program. One main thing to note is the DefaultMessageListenerContainer class is configured with 10 concurrentConsumers. When setting this value to 1, the problem doesn't seem to happen, but as soon as this value is set beyond 1, it causes problem in the ActiveMQ broker, relating to problem in unable to recover from datastore.

I have included the ActiveMQ broker logfile (activemq.log) which has debug turned on (to provide more info). As soon as the error shown below is logged, the consumer is unable to dispatch any more messages from the ActiveMQ queue. The errors reported are:

2008-01-10 16:37:24,474 [/127.0.0.1:3432] ERROR RecoveryListenerAdapter        - Message id ID:B00118579B7DA-3430-1199983032693-0:1:1:1:99 could not be recovered from the data store!

2008-01-10 16:37:24,474 [/127.0.0.1:3432] ERROR RecoveryListenerAdapter        - Message id ID:B00118579B7DA-3430-1199983032693-0:1:1:1:99 could not be recovered from the data store!

2008-01-10 16:37:24,474 [/127.0.0.1:3432] ERROR RecoveryListenerAdapter        - Message id ID:B00118579B7DA-3430-1199983032693-0:1:1:1:99 could not be recovered from the data store!

The error doesn't seem to happen at predictable fixed points, which is why the test program will send 100 message every 10sec, and over a number of iterations, it will eventually show the problem in the broker.

Let me know if further information is required. I would really like to get the concurrent consumer to dispatch the messages, in order to reduce the time it takes to process multiple burst of messages.
",Windows XP and Sun Solaris on x86,airover,freetwix,isnogood,lhotari,tlaukkanen,wgluow,,,,,,,,,,,,,,,,,,,,,,"10/Jan/08 18:32;wgluow;ASF.LICENSE.NOT.GRANTED--TestCase.zip;https://issues.apache.org/jira/secure/attachment/12460672/ASF.LICENSE.NOT.GRANTED--TestCase.zip","10/Jan/08 18:32;wgluow;ASF.LICENSE.NOT.GRANTED--activemq.log;https://issues.apache.org/jira/secure/attachment/12460646/ASF.LICENSE.NOT.GRANTED--activemq.log",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-01-21 14:51:28.453,,,false,,,,,,,,,,,,,,,,,84660,,,Mon Sep 07 08:34:31 UTC 2009,,,,,,,,"0|i0s2u7:",161936,,,,,,,,,,,,,,,,,,,"21/Jan/08 14:51;rajdavies;This issue could not be replicated from trunk - there has been a lot of fixes in this area recently","17/Feb/09 17:15;jhaile;We are seeing this issue in 5.2.0.  We are using Spring 2.5.5 and using DefaultMessageListenerContainer.  Our logs are full of this when starting up with multiple consumers:
{quote}
2009-02-17 12:13:57,679 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:13:57,756 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:13:58,839 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:13:59,125 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:13:59,195 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:14:00,076 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:14:00,305 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:14:00,538 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:14:00,895 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:14:00,963 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:14:01,416 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
2009-02-17 12:14:01,567 [actionPerformed] ERROR RecoveryListenerAdapter        - Message id ID:smithwicks-34271-1234883750803-0:21:40:1:1 could not be recovered from the data store - already dispatched
{quote}","17/Feb/09 17:19;jhaile;Or maybe this is related to AMQ-1976?  We're seeing this issue using the latest 5.2.0","17/Feb/09 17:34;gtully;when you say the latest 5.2.0, do you mean a current 5.3-SNAPSHOT?","01/May/09 23:26;freetwix;I just had the same failure with an activemq 5.2 as shown as logfile entries in the first comment here. 
we are using a stomp connector and after restarting a bunch of durable consumers, the message appears repeatingly in the logfile (seems to be just one message causing the problem).
after this, the whole message processing for all durable consumers stops and the pending queue size is increasing. any consumers of queues are not affected. 
is there a way to recovery the message processing from this state of the broker?

greets","03/Aug/09 09:10;tlaukkanen;I'm having the same problem with ActiveMQ 5.2. Only way I can ""recover"" from this error is to add deleteAllMessagesOnStartup=""true"" attribute to broker config and restart the broker. This will delete all my messages which is not that nice...

Are there any other solutions to this yet?","07/Sep/09 08:34;marc_dexet;I have the same issue with ActiveMQ 5.2. 
If  I activate only a TopicSubscriber, I got the issue.
If I activate only the Producer, I don't get the issue.
The only way to recover I've found is to delete the store directory. Rather bully it isn't ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with STOMP C++ Client connecting with a AMQ Broker having Authorization and Authentication Plugins installed,AMQ-1035,12483141,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,avindeshmukh,avindeshmukh,08/Nov/06 09:18,26/Feb/11 15:43,30/Jan/20 16:57,26/Feb/11 15:43,4.0.2,,,,,,5.5.0,,,,,,,1,"Hi,

We have an AMQ Broker [4.1.0 incubator SNAPSHOT] running as a standalone java application.
 
The AMQ Broker has Authentication and Authorization plugins installed by virtue of which only users with the correct credentials may get authenticated onto the Broker, and further Access roles and permissions with respect to users and admin have been set up using the Authorization plugin.

The above broker supports both TCP and STOMP.


CASE 1:

When we connect using TCP and a JAVA written client, both the plugins work correctly and as expected.


CASE 2:

When we connect using STOMP and the Java written client:

 - The program stalls at ""connection.start(); Does not proceed further from here...


CASE 3:

When we use C++ and STOMP following are our observations:


[1] When connecting using the STOMP client with incorrect credentials, the AMQ Broker throws SecurityException [which is expected], however the STOMP client receives a message 'CONNECTED'

[2] The STOMP client does not get notified that there was a SecurityException while connecting [when connecting using wrong credentials].



Questions are:

[1] Why does the program execution not proceed in case of CASE 2 ?

[2] How does the C++ STOMP client get notified of any Authentication or Authorization exceptions that may be generated at the AMQ Broker end ?

Thanks in anticipation.

Aditya",,ijsklont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-05-14 13:44:01.211,,,false,,,,,,,,,,,,,,,,,46505,,,Sat Feb 26 15:43:40 UTC 2011,,,,,,,,"0|i0akwn:",59660,,,,,,,,,,,,,,,,,,,"14/May/07 13:44;ijsklont;Case 3 happens also for PHP stomp clients. I saw there was a patch on the mailing list, but unfortunately the link to the patch doesn't work anymore. ActiveMQ should send an error frame and disconnect when a securityexception occurs. Now, it just continues, and the client can read/write messages without any problem, thus the authentication is useless for the stomp protocol.","26/Feb/11 15:43;tabish;This has been fixed for some time now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MySQL doesn't honor lock in JDBC Master Slave configuration?,AMQ-992,12482640,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,slotito,slotito,18/Oct/06 18:19,21/Dec/10 09:40,30/Jan/20 16:57,25/Jun/09 09:20,4.1.0,,,,,,5.3.0,,,,,,,2,"I have been attempting to get the new 4.1 JDBC Master Slave configuration working with MySQL.

The log from the first broker to start up states:
2006-10-18 09:35:08,558 [main           ] INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
2006-10-18 09:35:08,559 [main           ] INFO  DefaultDatabaseLocker          - Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@136d9d8

The 2nd broker to start up has an identical message and both brokers listen for connections.

The 2nd broker should be waiting for the lock and NOT accepting connections, if I understand http://www.activemq.org/site/jdbc-master-slave.html correctly...

Oracle exhibits the expected behavior:
When running the exact same configuration (except using an Oracle datasource), the first broker has the same log message as above,  while the 2nd broker halts at the ""Attempting to acquire the exclusive lock to become the Master broker"" message until I fail the master.  Then it becomes the master.

Is this a known issue?  I was able to replicate it using both MySql 4 and 5 (trying both the MySQL Connector/J 3.1 and MySQL Connector/J 5.0 drivers)
","RHEL 4
MySQL 4.x, 5.x
mysql-ab_jdbc_driver",john.greeley,palmsun,slotito,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/06 18:19;slotito;ASF.LICENSE.NOT.GRANTED--mysql_obtain_lock.txt;https://issues.apache.org/jira/secure/attachment/12460862/ASF.LICENSE.NOT.GRANTED--mysql_obtain_lock.txt","28/Jan/08 05:26;palmsun;patch.txt;https://issues.apache.org/jira/secure/attachment/12461038/patch.txt",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-10-25 14:46:14.0,,,false,,,,,,,,,,,,,,,,,84504,,,Tue Dec 21 09:40:54 UTC 2010,,,,,,,,"0|i0s22v:",161813,,,,,,,,,,,,,,,,,,,"25/Oct/06 14:46;jstrachan;You're the first one to notice this issue. I wonder how else to create an exclusive table lock in MySQL. I wonder if they are even supported? It might be we need to use different SQL for MySQL maybe?","25/Oct/06 14:52;jstrachan;I wonder if some SQL statement like the following works for MysQL...

LOCK TABLE foo IN ACCESS EXCLUSIVE MODE;","18/Nov/06 23:18;slotito;The following should work for MySQL 5.x and the tables that are generated...

SET AUTOCOMMIT = 0;
LOCK TABLE activemq.ACTIVEMQ_LOCK WRITE;","14/Mar/07 14:53;jstrachan;Backported to 4.1 trunk via rev: 518161 and 518164","04/Jul/07 18:39;skaffman;I'm re-opening this issue because it may be that the fix was unnecessary.  In MySQL, SELECT FOR UPDATE only works with InnoDB tables.  The default table type in MySQL - MyISAM - does not support SELECT FOR UPDATE - it executes the select, but doesn't hold the lock, resulting in Steven's problem.  There's no need for specific MySQL behaviour here.

However, when it comes to creating the tables, MySQL will create the table according to the server's default table type, which is MyISAM unless specific in MySQL's startup config.  Ideally, ActiveMQ would specify InnoDB in the CREATE TABLE clause.","28/Jan/08 04:15;palmsun;The current  lock statement with MyISAM tables has led to very unstable databases (MySQL 5.x) in our environment. After a few hours of use, the MySQL database becomes progressively  slower and eventually no other process can get any database lock. The only option is to kill the slave broker and to restart the database. Has anyone else observed this problem? ","28/Jan/08 05:26;palmsun;Assuming that the change of the MySQL tables from MyISAM to InnoDB does fix this problem, I've created a patch to alter the tables to use InnoDB storage engine. I think using ALTER instead of updating the create statements minimizes the code change. I've tested this patch to make sure that it works, but have not yet ran it over a period of time to see if I observe the kind of database slow down that was evident with MyISAM tables.","25/Jun/09 09:20;gtully;resolving this issue as 5.3 uses INNODB for all create table statements.","21/Dec/10 09:40;alm4asf;I still seem to run into this problem. I have MySQL 5.1, I have InnoDB-Tables, but Slaves do not start up. The first process becomes master. The others block while trying to become master. They never become slaves. They try to execute 

SELECT * FROM ACTIVEMQ_LOCK FOR UPDATE. 

This waits for the lock to be available and finally ends with a timeout. The next line in the log is: 

Failed to acquire lock.  Sleeping for 1000 milli(s) before trying again...

This keeps going forever. 

1) If I switch to Derby, the problem goes away.

2) In MySQL, I had some luck with changing the lock statement to 

SELECT * FROM ACTIVEMQ_LOCK LOCK IN SHARE MODE

but then Failover does not work. Once I kill the master, no slave becomes master.
",,,,,,,,,,,,,,,,,,,,,,,,,,
Thread.currentThread().getContextClassLoader() null in FactoryFinder.newInstance,AMQ-1229,12482519,12485942,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jmcleroy,jmcleroy,16/Apr/07 18:02,27/Nov/10 05:16,30/Jan/20 16:57,12/Jun/07 13:53,,,,,,,5.0.0,,,Transport,,,,1,"org.apache.activemq.util.FactoryFinder.doFindFactoryProperies() correctly consults the current class's loader if Thread.currentThread().getContextClassLoader() is null:

        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        if (classLoader == null) classLoader = getClass().getClassLoader();

newInstance(), however, generates a null pointer exception if Thread.currentThread().getContextClassLoader() is null:

        Class clazz;
        try {
            clazz = Thread.currentThread().getContextClassLoader().loadClass(className);
        } catch (ClassNotFoundException e) {
            clazz = FactoryFinder.class.getClassLoader().loadClass(className);
        }",,jmcleroy,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,"16/Apr/07 18:02;jmcleroy;ASF.LICENSE.NOT.GRANTED--FactoryFinder.java;https://issues.apache.org/jira/secure/attachment/12460958/ASF.LICENSE.NOT.GRANTED--FactoryFinder.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-06-12 13:53:52.999,,,false,,,,,,,,,,,,,,,,,95718,,,Fri Jan 30 07:28:25 UTC 2009,,,,Patch Available,,,,"0|i0s1z3:",161796,,,,,,,,,,,,,,,,,,,"12/Jun/07 13:53;jstrachan;Patch applied, many thanks!","18/Jun/07 17:16;jans70;I just encountered the same issue in 4.1.1.  Looking at the patched version above, I think it subtly changes the behavior of the newInstance() method.  The old version would first try to load the class with the thread context classloader, then if that failed to load it, it would try the FindFactory class' own classloader.  As patched above, it will only ever try the first classloaders it finds.  I don't know what is the intended behavior, just want to make sure that the change is what is actually wanted.

I've patched this myself like this instead:

        Class clazz = null;
        try {
			ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
			if (contextClassLoader != null) {
	            clazz = contextClassLoader.loadClass(className);
			}
        } catch (ClassNotFoundException e) {
            ; // Ignore this here, try this class' class loader first.
        }
        if (clazz == null) {
			clazz = FactoryFinder.class.getClassLoader().loadClass(className);
		}

This means that if the thread context class loader is set, but doesn't find the class, it will try the next classloader as well.

","30/Jan/09 07:28;davsclaus;Sorry I was looking at CAMEL-1301 that had a link to this one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ 5.0 Fanout Regression  ,AMQ-1464,12483263,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,joef,joef,15/Oct/07 18:14,24/May/10 18:44,30/Jan/20 16:57,24/May/10 18:44,5.0.0,,,,,,5.4.0,,,JMS client,,,,1,"On 4.1.1, the fanout transport works as expected. My producer is fanning out message sends (queues) to two unrelated message brokers and clients connected to both those brokers get the messages.

However, when I run the same exact test under 5.0 (the 10/10 SNAPSHOT), fanout no longer works as expected   Only the 5.0 broker that my producer first connects with gets the messages. The second broker never gets the messages and hurls this exception.

ERROR Service      - Async error occurred: java.lang.IllegalStateException: Cannot remove a consumer that had not been registered: ID:DIEGO-3739-1192470567781-0:0:-1:1
java.lang.IllegalStateException: Cannot remove a consumer that had not been registered: ID:DIEGO-3739-1192470567781-0:0:-1:1
        at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(
TransportConnection.java:547)
        at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:64)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:124)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:183)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:170)
        at java.lang.Thread.run(Thread.java:595)

Joe
 ",AMQ 5.0 - the 10/10/07 SNAPSHOT,mcarter,mkelley63,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/09 03:14;mcarter;illegal-state-test-2009-02-19.txt;https://issues.apache.org/jira/secure/attachment/12461353/illegal-state-test-2009-02-19.txt","19/Feb/09 03:14;mcarter;illegal-state-test-output-2009-02-19.txt;https://issues.apache.org/jira/secure/attachment/12461277/illegal-state-test-output-2009-02-19.txt",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-10-22 14:29:39.11,,,false,,,,,,,,,,,,,,,,,42094,,,Mon May 24 18:44:07 UTC 2010,,,,,,,,"0|i0rpyv:",159851,Regression,,,,,,,,,,,,,,,,,,"22/Oct/07 14:29;chirino;Hi Joe,

So are you saying that you are trying to fan out to two JMS Queues??  It seems like you are trying to deliver the message to two consumer, and if that's the case, you should be using Topics instead.","22/Oct/07 15:02;joef;Hi Hiram,

Yes, I am trying to fanout to two queues, each on two 'unrelated' brokers.
It works great on 4.1.1, but doesn't on 5.0. 

Joe

 

","22/Oct/07 17:30;chirino;Um..  I think the problem is that this was 'fixed' since 4.1
Logically it does not make sense to fanout queues since messages sent to queues should only be consumed once.  I'll add a option to the transport so that fanout on queues is also supported in the 5.0 release.  Right now fanout is only fanning out messages to Topics.","22/Oct/07 18:06;joef;Hmm, here is what the fanout transport reference page states.

""The Fanout transport layers reconnect and replication logic on top of any
of the other transports. It is used replicate commands to multiple brokers.""

Perhaps I am missing it, but nowhere in the documentation does it state that
the fanout can only be used for Topics.

My apologies for not properly interpreting the purpose of the fanout and
thus not using it in a logical manner; however, we do have a need to have a
producer ""replicate"" a message to two completely different systems and we
want the message consumed only once on each of those systems. The two
systems are completely separate from one another (i.e., the brokers and
consumers on those systems are not interconnected).  


","22/Oct/07 18:41;chirino;Hi 

As of revision 587188 the broker will now support at fanOutQueues option the defaults to false which enables fanning out on queues too.  So to enable just update your URI to something like:

fanout://( discovery-agent )?fanOutQueues=true","01/Nov/07 21:48;garyw;It appears that the Queues versus Topics issue has been resolved, with the addition of the new fanOutQueues option. However, the problem of java.lang.IllegalStateException remains.

I am using Topics with the 10/28/07 5.0 Snapshot. I have 2 standalone brokers, each connected to a Topic consumer. I start a Topic producer that uses fanout to connect to the 2 brokers. The messages that are sent by the producer are received by each consumer (good), but after the producer closes the session, one of the the brokers throws the exception ""ERROR Service      - Async error occurred: java.lang.IllegalStateException: Cannot remove a consumer that had not been registered"" as Joe reported.","30/Jul/08 15:13;hadrian;I added a test to the FanoutTransportBrokerTest for that and I cannot reproduce it.  Please let us know if this is still an issue for you, or we could close it with a could not reproduce.  Adding a unit test will also help a lot.

One other (quite important) thing I noticed is that the initial description mentioned that the feature did work in 4.1.1 so I assume that had to be topics not queues and Gary tested with topics too.  I don't know how much sense would make to implement fan-out for queues as topics should be used in such a case.  Could you please give more details why fan-out would be needed for queues?","08/Sep/08 17:15;gtully;partial fix helps and IllegalStateException cannot be reproduced. To progress further if necessary, a unit test would be required.","19/Feb/09 03:10;mcarter;I'm using activeMQ 5.2.0 and I get this exact issue. I'll attach a test that causes it on my machine as well as the output from that test
","19/Feb/09 03:14;mcarter;Here are the aforementioned test and test output files.","19/Feb/09 03:25;mcarter;I should also point out that while that test doesn't have the 'fanOutQueues=true' option explicitly specified, I get the same output when using that option as well.","24/May/10 18:44;dejanb;Fixed with svn revision 947757",,,,,,,,,,,,,,,,,,,,,,,
Active MQ does not correctly bind to the JNDI when deployed as a RAR in JBoss,AMQ-1240,12483243,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tnine,tnine,02/May/07 21:26,25/Mar/10 17:47,30/Jan/20 16:57,25/Mar/10 17:47,4.1.1,,,,,,5.4.0,,,JCA Container,,,,1,"I am unable to use the broker-config.xml file to configure the data source via a JNDI data source.  The data source is configured correctly, and does appear in the JNDI when viewed via the JMX console.  I receive the following error.

ObjectName: jboss.jca:service=RARDeployment,name='activemq-rar-4.1.1.rar'
  State: FAILED
  Reason: javax.resource.spi.ResourceAdapterInternalException: Failed to startup an embedded broker: xbean:broker-config.xml, due to: org.springfra
mework.beans.factory.BeanCreationException: Error creating bean with name 'activemq-ds' defined in class path resource [broker-config.xml]: Invocat
ion of init method failed; nested exception is javax.naming.NameNotFoundException: ActiveMQDS not bound
  Depends On Me:
    jboss.jca:service=ManagedConnectionFactory,name=activemq/QueueConnectionFactory
    jboss.jca:service=ManagedConnectionFactory,name=activemq/TopicConnectionFactory
","Red Hat Enterprise Linux 4, 32bit.",tnine,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/May/07 21:26;tnine;ASF.LICENSE.NOT.GRANTED--activemq-ds.xml;https://issues.apache.org/jira/secure/attachment/12461010/ASF.LICENSE.NOT.GRANTED--activemq-ds.xml","02/May/07 21:26;tnine;ASF.LICENSE.NOT.GRANTED--activemq-jms-ds.xml;https://issues.apache.org/jira/secure/attachment/12460956/ASF.LICENSE.NOT.GRANTED--activemq-jms-ds.xml","02/May/07 21:26;tnine;ASF.LICENSE.NOT.GRANTED--broker-config.xml;https://issues.apache.org/jira/secure/attachment/12460917/ASF.LICENSE.NOT.GRANTED--broker-config.xml","02/May/07 21:27;tnine;activemq-ds.xml;https://issues.apache.org/jira/secure/attachment/12460945/activemq-ds.xml","02/May/07 21:26;tnine;ra.xml;https://issues.apache.org/jira/secure/attachment/12460649/ra.xml",,,,5.0,,,,,,,,,,,,,,,,,,,,2010-03-25 17:47:48.929,,,false,,,,,,,,,,,,,,,,,84579,,,Thu Mar 25 17:47:48 UTC 2010,,,,,,,,"0|i0rpxz:",159847,,,,,,,,,,,,,,,,,,,"02/May/07 21:31;tnine;I am using JBoss 4.0.5 GA and build 1.5.0_11-b03","25/Mar/10 17:47;gtully;This seems to work ok now: see https://issues.apache.org/activemq/browse/AMQ-2670 for a working example with recovery",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove expired messages from Store and update Message cursors,AMQ-1112,12482850,12483590,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rajdavies,rajdavies,28/Dec/06 20:39,24/Mar/10 16:04,30/Jan/20 16:57,16/Nov/09 10:36,5.0.0,,,,,,5.3.1,5.4.0,,Broker,,,,14,Ensure messages that are expired are removed from message store and message cursrors are also updated consistently,,atooni,bdarfler,danttran,donv,ebarlas,jacovt,joachimm@yahoo.com,john.greeley,manav,siim_kaalep,,,,,,,,,,,,,,,,,AMQ-2481,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:48:08.629,,,false,,,,,,,,,,,,,,,,,84720,,,Wed Mar 24 15:51:41 UTC 2010,,,,,,,,"0|i0rq53:",159879,,,,,,,,,,,,,,,,,,,"12/Jun/07 09:48;jstrachan;added an affected version","07/Apr/09 09:17;gtully;Am guessing this jira is still open because the mechanism for expiry is non deterministic, It occurs on ack and on message dispatch but not independently. For example a message enqueue with no more work on the broker will not be removed when it expires. 
There needs to be a task that periodically checks and expriies messages independent of normal message processing.
Current behavior is that expired messages will not  be delivered to a consumer, but they remain till some destination activity occurs.

I imagine a destinationPolicy.expiryPeriod=60000 - which indicates that a task will fire every minute and iterate through the in memory messages and expiry any that warrent it.
Possilby there is another destinationPolicy,expireStoredMessages=true which indicates that the expiry task will iterate through the entire store to locate messages that have expired. there may even be a limit, destinationPolicy.expiryTaskDuration=500 that limits a task duration to some period.

In all these would make message expiry deterministic for a destination.
","07/Apr/09 09:21;gtully;some further context from the user list:
http://www.nabble.com/Expired-messages-are-not-being-removed-from-queues-tt21967682.html#a22773666","09/Apr/09 13:59;gtully;just fyi I am highlighting the workaround from the post linked above.
{quote}In the end I implemented a workaround that was simply a thread that periodically cleared my queues of expired messages. The way it did so was to use a MessageConsumer and use a JMSSelector to consume only those messages that had expired. I don't believe the consumer itself actually ever receives any messages, but the act of looking for them causes ActiveMQ to expunge the expired messages.

e.g:
                MessageConsumer c = sess.createConsumer(dest, ""JMSExpiration < "" + System.currentTimeMillis());
                Message m = c.receiveNoWait();
                if (m != null) log.error(""Returned an expired message"");
{quote}
","16/May/09 01:31;bdarfler;I created a quick python script that hits the web ui, finds all the queues and then browses each which causes any expired messages to actually be removed from the queue.  We put this as a cron job that runs every 5 min.

If you pass no arguments it looks at localhost otherwise you can pass in as many host names as you want to hit.

I tried attaching it but no go so here is the source.

--------------------------------------------------------------------------------

#! /usr/bin/env python

import sys, urllib2, re

pattern = re.compile('browse.jsp\?JMSDestination=([a-zA-Z.]*)')

def expireMsgs(host='localhost'):
    url = 'http://' + host + ':8161'
    html = urllib2.urlopen(url + '/admin/queues.jsp').read()
    for queue in set(pattern.findall(html)):
        urllib2.urlopen(url + '/admin/browse.jsp?JMSDestination=' + queue).read()

if not sys.argv[1:]:
    expireMsgs()
else:
    for arg in sys.argv[1:]:
        expireMsgs(arg)","26/May/09 19:58;bdarfler;warning, my above fix runs into this 

https://issues.apache.org/activemq/browse/AMQ-2169","07/Jul/09 16:01;gtully;r791881
Added a new expireMessagesPeriod (default 30 seconds) periodic task on a queue that iterates though maxExpirePageSize(default 400) queued messages (or draws them into memory) to implement deterministic message expiry. Can be disabled by setting expireMessagesPeriod==0 through a PolicyEntry. A producer with no consumer will not longer be blocked on memory limits if a message expiry is configured on a message as they will be actively expired every 30 seconds.
There is an additional expiredCount attribute in the destination statistics to track the count of expired messages.","26/Aug/09 11:37;jacovt;Need to update the schema to allow the configuration of  the expireMessagesPeriod attribute using activemq-broker.xml.

Currently activemq fails with a org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException if you try define the attribute.

---Jaco","26/Aug/09 11:53;gtully;schema updated in r807969","07/Sep/09 08:46;dejanb;optimizedDispatch makes this test hang, so I commented it out for the moment. It should be investigated more.","07/Sep/09 08:49;dejanb;optimizedDispatch makes this test hang (producer hangs)","07/Sep/09 16:09;gtully;issue with optimizedDispatch resolved in 812214 ","25/Sep/09 16:41;dejanb;Modified test so that it has larger expiry time, which helps it pass on slower machines. But if you have small enough expiry time, it will fail","16/Nov/09 10:36;gtully;last piece of this resolved by https://issues.apache.org/activemq/browse/AMQ-2481","16/Nov/09 10:37;gtully;last piece resolved by AMQ-2481","24/Mar/10 15:51;gtully;This fix only applies to queues. Topics are a different matter as there is only persistence when there are durable consumers. there are pending message limit strategies that control the build up of messages for slow consumers. See: 
http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/MessageEvictionTest.java?view=markup for an example of configured message eviction.",,,,,,,,,,,,,,,,,,,
Exception does not lead to redelivery for AUTO_ACKNOWLEDGE,AMQ-906,12482912,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,aioaneid,aioaneid,31/Aug/06 14:47,01/Mar/10 15:51,30/Jan/20 16:57,01/Mar/10 15:51,4.0.1,,,,,,5.4.0,,,,,,,4,"I have a message driven pojo configured configured with with auto_acknowledge, nontransactional and some persistent message in a queue. All my mdp does it to throw new RuntimeException(""please retry"") but unfortunately the messages are not retried:

SEVERE: error dispatching message: 
java.lang.RuntimeException: Please retry
	at net.activem.jms.ExceptionTestOutboundMdp.onMessage(ExceptionTestOutboundMdp.java:46)
	at org.jencks.LocalTransactionEndpoint.onMessage(LocalTransactionEndpoint.java:68)
	at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy.java:120)
	at org.apache.activemq.ra.MessageEndpointProxy.onMessage(MessageEndpointProxy.java:60)
	at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:692)
	at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:163)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)

Looking in the ActiveMQ source code I think the problem might be in these lines:

            try { 
                messageListener.onMessage(message);
            } catch ( Throwable e ) {  
                // TODO: figure out proper way to handle error.
                log.error(""error dispatching message: "",e);
                connection.onAsyncException(e);
            }

	at java.lang.Thread.run(Thread.java:595)


found in org.apache.activemq.ActiveMQSession.

According to JMS spec, I'd say that with auto_ack a msg should be retried in case the message listener throws an exception, even if the operation is non-transactional:

http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html#AUTO_ACKNOWLEDGE

public static final int AUTO_ACKNOWLEDGE

    With this acknowledgment mode, the session automatically acknowledges a client's receipt of a message either when the session has successfully returned from a call to receive or when the message listener the session has called to process the message successfully returns.

",,aioaneid,jmorille,john.greeley,memelet,,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/09 12:33;gtully;AMQ-906.test.patch.diff;https://issues.apache.org/jira/secure/attachment/12461284/AMQ-906.test.patch.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-01-30 12:33:17.4,,,false,,,,,,,,,,,,,,,,,84383,,,Mon Mar 01 15:51:39 UTC 2010,,,,Patch Available,,,,"0|i0rq67:",159884,,,,,,,,,,,,,,,,,,,"30/Jan/09 12:33;gtully;failing test case for this behavior, does seem wrong to me.","01/Mar/10 15:51;gtully;fix committed in svn r916936",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages delivered from HttpTunnelServlet connected broker are limited to 64K bytes.,AMQ-1308,12483205,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,eddie_epstein,eddie_epstein,03/Jul/07 20:31,16/Feb/10 13:40,30/Jan/20 16:57,03/Feb/10 14:04,4.1.1,,,,,,5.4.0,,,Transport,,,,4,"In TextWireFormat.java: the methods writeUTF/readUTF are used in the code path to deliver messages from an HTTP connected broker.

    public void marshal(Object command, DataOutput out) throws IOException {
        out.writeUTF(marshalText(command));
    }

    public Object unmarshal(DataInput in) throws IOException {
        String text = in.readUTF();
        return unmarshalText(text);
	}

These methods limit the max message size to 64K. Messages sent to an HTTP connected broker do not have the same limitation.

Problem first reported in activemq-users with the subject ""UTFDataFormatException in broker when using a http transportConnector"".

THanks,
Eddie",Java consumer receiving messages using HTTP connector,eddie_epstein,john.greeley,wanderingwalrus,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/07 16:05;eddie_epstein;HttpProblems.patch;https://issues.apache.org/jira/secure/attachment/12460930/HttpProblems.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-02-03 14:04:20.372,,,false,,,,,,,,,,,,,,,,,84563,,,Wed Feb 03 14:04:20 UTC 2010,,,,Patch Available,,,,"0|i0rpwv:",159842,,,,,,,,,,,,,,,,,,,"11/Jul/07 16:17;eddie_epstein;TextWireFormat.patch fixes this issue. The data is written out in UTF8, which has the same size wire format as that previously created by writeUTF, and is preceded by a 4 byte length. There is an extra copy of the data created on both sending and receiving sides, but then again, it works.","24/Jul/07 14:42;eddie_epstein;The patch submitted did in fact ""work"", but only for restricted message content: ascii characters.

Somewhat embarrassed,
Eddie","27/Jul/07 16:05;eddie_epstein;Turns out there is another bug: the HTTP connector is completely broken for multi-byte UTF-8 characters. The attached patch file includes fixes for both the 64K limit (same fix as previously submitted) and for the bad decode of the Http request body.","03/Feb/10 14:04;rajdavies;Fixed by SVN revision 906049",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable/Persistant topics via Stomp on 5.0 snapshot don't seem to work,AMQ-1505,12483213,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tango,tango,27/Nov/07 15:21,16/Jan/10 19:53,30/Jan/20 16:57,16/Jan/10 19:53,5.0.0,,,,,,5.4.0,,,Broker,,,,1,"I noticed a problem where durable/persistent topic messages are not being sent to offline consumers in 5.0 when the consumer is reconnected.

The following test code works in activemq-4.1.1, but does not in 5.0-snapshot (5.0-20071120.092745)

I have the following test perl code using Net::Stomp

  #publisher
  use strict;
  use warnings;
  use Net::Stomp;
  my $stomp = Net::Stomp->new( { hostname => 'localhost', port => '61613' } );
  $stomp->connect( { login => 'hello', passcode => 'there' } );
  $stomp->send( { destination => '/topic/foo', body => 'test message', persist => 'true' } );
  $stomp->disconnect;

And the following consumer:

  # subscribe to messages from the topic 'foo'
  use strict;
  use warnings;
  use Net::Stomp;
  my $stomp = Net::Stomp->new( { hostname => 'localhost', port => '61613' } );
  $stomp->connect (
      {
          login => 'hello',
          passcode => 'there' ,
          'client-id' => 'tango',
      }
  );
  $stomp->subscribe(
      {   destination             => '/topic/foo',
          'ack'                   => 'client',
          'activemq.prefetchSize' => 1,
          'activemq.subscriptionName' => 'tango',
      }
  );
  while (1) {
    my $frame = $stomp->receive_frame;
    warn $frame->body; # do something here
    $stomp->ack( { frame => $frame } );
  }
  $stomp->disconnect;

On activemq 4.1.1, the subscription is durable/persistent (i can disconnect the consumer and any messages sent by the producer will be received by the consumer when the consumer is reconnected).  However, on the 5.0 snapshot, i cannot get any messages that are sent by the producer when the consumer is offline to be received by the consumer when the consumer is reconnected.  ","Linux, Centos-4 (RHEL clone), activemq snapshot (apache-activemq-5.0-20071120.092745)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-12-06 19:30:15.321,,,false,,,,,,,,,,,,,,,,,84676,,,Sat Jan 16 19:53:09 UTC 2010,,,,,,,,"0|i0rqef:",159921,,,,,,,,,,,,,,,,,,,"06/Dec/07 19:30;jourzua;Hi

I'm using ""persistent"" instead of ""persist"" and it works fine:

 $stomp->send( { destination => '/topic/foo', body => 'test message', persistent => 'true' } );

and I'm using postgres and mysql persistenceAdapter and apache-activemq-5.0-20071128.111935-4 ","16/Jan/10 19:53;tabish;Similar tests using the C++ and .NET clients for durable subscriptions work fine on 5.3 and 5.4-SNAPSHOTs",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker doens't start anymore!,AMQ-1498,12483113,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,goldi,goldi,19/Nov/07 19:34,02/Dec/09 17:21,30/Jan/20 16:57,02/Dec/09 17:21,5.0.0,,,,,,5.3.1,5.4.0,,,,,,0,"Killing ActiveMQ-Broker and trying to restart it I got the following exception:

java.io.IOException: Recovery Failed: The subscription does not exist: ID:Dev-AG-1992-1195220522906-3:2:-1:2
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:110)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:153)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:153)
        at org.apache.activemq.broker.MutableBrokerFilter.start(MutableBrokerFilter.java:163)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:422)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:46)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1201)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1171)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:425)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:251)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:156)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:248)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:160)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:287)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:352)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:91)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:51)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:112)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:51)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:104)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:51)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:76)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:222)
        at org.apache.activemq.console.Main.main(Main.java:106)
Caused by: java.lang.IllegalArgumentException: The subscription does not exist: ID:Dev-AG-1992-1195220522906-3:2:-1:2
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:336)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:427)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.TransactionBroker$1.recover(TransactionBroker.java:100)
        at org.apache.activemq.store.amq.AMQTransactionStore.recover(AMQTransactionStore.java:196)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:92)
        ... 32 more
2007-11-16 14:50:53,047 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, null) is shutting down
2007-11-16 14:50:53,047 [MQ ShutdownHook] INFO  TransportConnector             - Connector openwire Stopped
2007-11-16 14:50:54,329 [MQ ShutdownHook] ERROR AMQPersistenceAdapter          - Could not stop service: AMQPersistenceAdapter(C:\ESBActiveMQ5.0\Active_Broker\bin\..\data\localhost). Reason: java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.store.amq.AMQTxOperation.writeExternal(AMQTxOperation.java:113)
        at org.apache.activemq.store.kahadaptor.AMQTxMarshaller.writePayload(AMQTxMarshaller.java:60)
        at org.apache.activemq.store.kahadaptor.AMQTxMarshaller.writePayload(AMQTxMarshaller.java:34)
        at org.apache.activemq.kaha.impl.data.SyncDataFileWriter.storeItem(SyncDataFileWriter.java:58)
        at org.apache.activemq.kaha.impl.data.DataManagerImpl.storeDataItem(DataManagerImpl.java:151)
        at org.apache.activemq.kaha.impl.container.MapContainerImpl.write(MapContainerImpl.java:516)
        at org.apache.activemq.kaha.impl.container.MapContainerImpl.put(MapContainerImpl.java:301)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStoreAdapter.savePreparedState(KahaReferenceStoreAdapter.java:270)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.stop(AMQPersistenceAdapter.java:263)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:457)
        at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:1586)

with the result that the Broker don't starts anymore (Trying it 3 times). ",,jfe,tranchida,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-12-11 11:11:13.432,,,false,,,,,,,,,,,,,,,,,84679,,,Wed Dec 02 17:21:41 UTC 2009,,,,,,,,"0|i0rpvj:",159836,,,,,,,,,,,,,,,,,,,"11/Dec/07 11:11;rajdavies;Are you sure this is the case in the latest ?","02/Jul/08 07:46;jfe;I am reopening this issue because I just had this problem in production on 5.1.0. I am unable to restart ActiveMQ with the following log :

{{
2008-07-02 09:25:56,731 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - AMQStore starting using directory: ../../data/quark1
2008-07-02 09:25:56,762 [erSimpleAppMain] INFO  KahaStore                      - Kaha Store using data directory ../../data/quark1/kr-store/state
2008-07-02 09:25:56,811 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Active data files: []
2008-07-02 09:25:56,814 [erSimpleAppMain] WARN  AMQPersistenceAdapter          - The ReferenceStore is not valid - recovering ...
2008-07-02 09:25:56,843 [erSimpleAppMain] INFO  KahaStore                      - Kaha Store successfully deleted data directory ../../data/quark1/kr-store/data
2008-07-02 09:25:56,845 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)
2008-07-02 09:25:56,876 [erSimpleAppMain] INFO  KahaStore                      - Kaha Store using data directory ../../data/quark1/kr-store/data
2008-07-02 09:26:29,189 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Recovered 348180 operations from redo log in 32.343 seconds.
2008-07-02 09:26:29,189 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Finished recovering the ReferenceStore
2008-07-02 09:26:29,385 [erSimpleAppMain] ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Recovery Failed: The subscription does not exist: ID:quarkb1.mrs.experian.fr-57145-1213887853982-0:4:-1:2
java.io.IOException: Recovery Failed: The subscription does not exist: ID:quarkb1.mrs.experian.fr-57145-1213887853982-0:4:-1:2
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:110)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:153)
        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:153)
        at org.apache.activemq.broker.MutableBrokerFilter.start(MutableBrokerFilter.java:160)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:444)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:50)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1288)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1257)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:438)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:383)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:353)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:169)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:400)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:736)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:369)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:111)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:73)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:222)
        at org.apache.activemq.console.Main.main(Main.java:106)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.lang.IllegalArgumentException: The subscription does not exist: ID:quarkb1.mrs.experian.fr-57145-1213887853982-0:4:-1:2
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:357)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
        at org.apache.activemq.broker.TransactionBroker$1.recover(TransactionBroker.java:100)
        at org.apache.activemq.store.amq.AMQTransactionStore.recover(AMQTransactionStore.java:196)
        at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:92)
        ... 42 more
}}
","30/Nov/09 16:53;dejanb;I made some improvements in this area with SVN revision http://svn.apache.org/viewvc?view=revision&revision=885488
I didn't however managed to reproduce this issue fully. If someone can give the latest trunk a chance and share more details on the usecase when this exception is encountered (xa transactions, failover, crash???) I will revisit it and try to make a reproducible test case.","02/Dec/09 17:21;dejanb;This should be resolved now on the trunk (and 5.3 branch)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
transaction commit does not fail even though parts of transactions raised exception,AMQ-1043,12482160,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,massive.boisson,massive.boisson,14/Nov/06 11:21,20/Nov/09 20:58,30/Jan/20 16:57,20/Nov/09 20:58,4.0.1,,,,,,5.3.0,,,Broker,,,,0,"quoting Hiram ""I think we need to enhance our broker so that it keeps track of any errors that occurred that were part of a transaction and to force that transaction to fail on the commit. ""

This problem is demonstrated in a related JIRA issue: https://issues.apache.org/activemq/browse/AMQ-1022

","windows, 4.0.1, transacted session, perssistent queues",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-11-20 20:58:18.733,,,false,,,,,,,,,,,,,,,,,84369,,,Fri Nov 20 20:58:18 UTC 2009,,,,,,,,"0|i0tt0f:",172009,,,,,,,,,,,,,,,,,,,"14/Nov/06 11:30;massive.boisson;AMQ-1022 is an example occurance of AMQ-1043","20/Nov/09 20:58;bsnyder;Fixed by AMQ-1022. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bean property 'limitMb' is not writable or has an invalid setter method,AMQ-1138,12483162,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,sandeepchayapathi,sandeepchayapathi,24/Jan/07 19:54,20/Nov/09 20:36,30/Jan/20 16:57,20/Nov/09 20:36,4.1.0,,,,,,,,,Documentation,,,,0,"The XBean XML reference says that the usageManager element supports ""limit"", ""limitMb"" and ""limitKb"" properties:
http://incubator.apache.org/activemq/xbean-xml-reference-41.html#XBeanXMLReference4.1-usageManagerelement

However, setting either ""limitMb"" or ""limitKb"" throws the following error, while activemq is started:

---
Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'limitMb' of bean class [org.apache.activemq.memory.UsageManager]: Bean property 'limitMb' is not writable or has an invalid setter method. Did you mean 'limit'?
---

Also the default activemq.xml, has ""limit"" property set as ""20 MB"", where as the documentation says, the ""limit"" property, ""Sets the memory limit in bytes"". ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-11-20 20:36:53.693,,,false,,,,,,,,,,,,,,,,,84484,,,Fri Nov 20 20:36:53 UTC 2009,,,,,,,,"0|i0tsxb:",171995,,,,,,,,,,,,,,,,,,,"20/Nov/09 20:36;bsnyder;Looking at the XSD for the 4.1.2 release, this was resolved. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SslTransport doesn't set the client certificate chain as transportContext,AMQ-1330,12483940,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,erikjogi,erikjogi,19/Jul/07 08:04,20/Nov/09 18:54,30/Jan/20 16:57,20/Nov/09 18:54,4.1.1,,,,,,5.1.0,,,Transport,,,,4,"org.apache.activemq.transport.tcp.SslTransport is supposed to override the doConsume() method of TransportSupport and set the client certificate chain as transportContext. 

However the method signature is incorrect - instead of overriding:

public void doConsume(Object command)

it defines a new method:

public void doConsume(Command command)

which is never called.

So it is fixed very easily - just change Command to Object in the method signature.",,bmccoy,john.greeley,rgl,,,,,,,,,,,,,,,60,60,,0%,60,60,,,AMQ-1381,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-09-06 15:15:37.61,,,false,,,,,,,,,,,,,,,,,84557,,,Fri Nov 20 18:54:52 UTC 2009,,,,,,,,"0|i0ttiv:",172092,,,,,,,,,,,,,,,,,,,"06/Sep/07 15:15;jonsiddle;Having just submitted AMQ-1381, I realise that this is the same issue (I didn't spot it while I've been debugging what I thought was a configuration problem for the past three days).

As Erik says, the fix is simple, and I've even attached a patch to the issue I submitted.","20/Nov/09 18:54;bsnyder;Fixed by AMQ-1381. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client Certificates do not work due to incorrectly overriden method in SslTransport.java,AMQ-1381,12482394,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jonsiddle,jonsiddle,06/Sep/07 15:09,20/Nov/09 18:54,30/Jan/20 16:57,07/Apr/08 16:33,4.1.1,5.0.0,,,,,5.1.0,,,Transport,,,,1,"The peer certificates never get added to the {{ConnectionInfo}} ({{setTransportContext}})
since {{doConsume()}} in {{SslTransport}} has the wrong signature.

The correct signature is:

{{doConsume(Object command)}}

but SslTransport defines a method with the following signature:

{{doConsume(Command command)}}

Which will obviously never get called.

In its current state, it is impossible for client certificates to work.

See attached patch for fix. Apply with {{patch -p0 < activemq-clientcert.patch}} or simply change {{Command}} to {{Object}}
in {{SslTransport.java}}",All,snstanton,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/07 15:09;jonsiddle;ASF.LICENSE.NOT.GRANTED--activemq-clientcert.patch;https://issues.apache.org/jira/secure/attachment/12461061/ASF.LICENSE.NOT.GRANTED--activemq-clientcert.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-07 16:33:37.804,,,false,,,,,,,,,,,,,,,,,84543,,,Mon Apr 07 16:33:37 UTC 2008,,,,Patch Available,,,,"0|i0s1tr:",161772,,,,,,,,,,,,,,,,,,,"07/Apr/08 16:33;chirino;Patch applied fixed in rev 645599.  Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TwoBrokerTopicSendReceiveLotsOfMessagesUsingTcpTest  fails,AMQ-1372,12482688,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,bsnyder,romikk,romikk,24/Aug/07 15:42,20/Nov/09 18:43,30/Jan/20 16:57,20/Nov/09 18:43,4.1.1,,,,,,5.3.0,,,Broker,,,,0,"Works when running in intellij idea, but fails when running with maven.

-------------------------------------------------------------------------------
Test set: org.apache.activemq.usecases.TwoBrokerTopicSendReceiveLotsOfMessagesUsingTcpTest
-------------------------------------------------------------------------------
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 24.563 sec <<< FAILURE!
testSendReceive(org.apache.activemq.usecases.TwoBrokerTopicSendReceiveLotsOfMessagesUsingTcpTest)  Time elapsed: 24.437 sec  <<< FAILURE!
junit.framework.ComparisonFailure: Message: 3049 expected:<Text for message: 3[049] at Fri Aug 24 19:13...> but was:<Text for message: 3[153] at Fri Aug 24 19:13...>
	at junit.framework.Assert.assertEquals(Assert.java:81)
	at org.apache.activemq.test.JmsSendReceiveTestSupport.assertMessageValid(JmsSendReceiveTestSupport.java:187)
	at org.apache.activemq.test.JmsSendReceiveTestSupport.assertMessagesReceivedAreValid(JmsSendReceiveTestSupport.java:174)
	at org.apache.activemq.test.JmsSendReceiveTestSupport.assertMessagesAreReceived(JmsSendReceiveTestSupport.java:150)
	at org.apache.activemq.test.JmsSendReceiveTestSupport.testSendReceive(JmsSendReceiveTestSupport.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:164)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743)
","JDK 1.5
maven 2.0.6
win xp",romikk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-11-20 18:43:38.622,,,false,,,,,,,,,,,,,,,,,84548,,,Fri Nov 20 18:43:38 UTC 2009,,,,,,,,"0|i0tsnr:",171952,Unit Test Broken,,,,,,,,,,,,,,,,,,"20/Nov/09 18:43;bsnyder;Running org.apache.activemq.usecases.TwoBrokerTopicSendReceiveLotsOfMessagesUsingTcpTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.936 sec",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite Queue causes duplicate keys in JDBC store,AMQ-1430,12483156,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ddossot,ddossot,20/Sep/07 20:17,20/Nov/09 18:17,30/Jan/20 16:57,20/Nov/09 18:17,,,,,,,5.1.0,,,Broker,,,,0,"Using this CQ config:

					<compositeQueue name=""A"">
						<forwardTo>
							<queue physicalName=""B"" />
							<queue physicalName=""C"" />
						</forwardTo>
					</compositeQueue>

and this JDBC config:

			<journaledJDBC journalLogFiles=""5""
				dataDirectory=""${esb.data.dir}/activemq/data""
				dataSource=""#derby-ds"" />

I create a subscriber to queue B and one to queue C. I start a publisher that sends 20 messages.

The subscriber to queue B receives 20 messages ; the one on queue C receives 0.

The server prints this error for each message:

Sep 20, 2007 1:11:04 PM org.apache.activemq.util.TransactionTemplate run
SEVERE: Having to Rollback - caught an exception: java.io.IOException: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by 'SQL070920011040920' defined on 'ACTIVEMQ_MSGS'.
Sep 20, 2007 1:11:04 PM org.apache.activemq.store.journal.JournalPersistenceAdapter doCheckpoint
SEVERE: Failed to checkpoint a message store: java.util.concurrent.ExecutionException: java.io.IOException: Not started.
java.util.concurrent.ExecutionException: java.io.IOException: Not started.
	at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:205)
	at java.util.concurrent.FutureTask.get(FutureTask.java:80)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:397)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$1.iterate(JournalPersistenceAdapter.java:118)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:613)
Caused by: java.io.IOException: Not started.
	at org.apache.activemq.store.jdbc.TransactionContext.rollback(TransactionContext.java:174)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.rollbackTransaction(JDBCPersistenceAdapter.java:366)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.rollbackTransaction(JournalPersistenceAdapter.java:200)
	at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:59)
	at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:257)
	at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:232)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$4.call(JournalPersistenceAdapter.java:367)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$4.call(JournalPersistenceAdapter.java:366)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:269)
	at java.util.concurrent.FutureTask.run(FutureTask.java:123)
	... 3 more","apache-activemq-5.0-20070920.154726-5, JVM 1.5.0_07, Mac OS X",ddossot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-11-10 21:30:04.883,,,false,,,,,,,,,,,,,,,,,95780,,,Fri Nov 20 18:17:12 UTC 2009,,,,,,,,"0|i0tslj:",171942,,,,,,,,,,,,,,,,,,,"10/Nov/08 21:30;cpettitt;I ran into this issue with ActiveMQ in the 4.1.1 branch and found that it had been fixed in changeset 646880 (I manually bisected about 12 changesets to find this).

The brokerSequenceId for a Message is used as its unique identifier in the persistence store. In code preceding 646880 the brokerSequenceId is never changed for a message after it has been copied (as by CompositeQueue), so it is possible to have an ID collision in the database. 646880 resolved this by setting a new brokerSequenceId (the regionBroker's sequence ID) immediately before sending the message to the persistence store in the Queue (and Topic) class.
","20/Nov/09 18:17;bsnyder;Fixed by AMQ-1656. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak in Resource Adapator?,AMQ-1437,12483155,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,sbuberl,sbuberl,28/Sep/07 16:14,20/Nov/09 18:09,30/Jan/20 16:57,20/Nov/09 18:09,,,,,,,5.3.0,,,JMS client,,,,13,"I think it is a memory leak that calling close() on a org.apache.activemq.ra.ManagedSessionProxy does not remove it from the session list of the org.apache.activemq.ra.ManagedConnectionProxy that created it.  Some programs (like mine) run on a Jboss bean thats generating messages every few seconds and I like to keep a Connection open to ActiveMQ and create a new session for each new batch of messages.  When I close these sessions (which are really ManagedSessionProxy's), the actual ActiveMQSession wrapped inside closes but a lot of its data remains referenced inside it.   Also, the reference to the ManagedSessionProxy stays in the ManagedConnectionProxy's session list.  So since the ManagedSessionProxy has to stay in the ManagedConnectionproxy's session list, it stays in memory and so does the ActiveMQSession, and so all these sessions (thousands of them) stay in memory until the ManagedConnectionProxy is closed which my program only calls when the server shuts down.

To generate this, create a simple message producing program that uses the resource adaptor's ActiveMQConnectionFactory to generate one connection.  Then run a loop that creates a session on that connection, sends a message or two, and closes the session.  May need to run this loop at least 100 times appreciate what I'm saying and how quickly it affects things.

I think this will be a simple fix and hopefully will be resolved soon.","Ran on ActiveMQ 4.1.1 but ActiveMQ 5.0's code is the same
",ahempel@atlassian.com,antoniogmc,ikoblik,john.greeley,kwark,mbaril,msiegenthaler,sbuberl,,,,,,,,,,,,,,,,,,AMQ-2166,,"03/Oct/08 14:30;ikoblik;mem-histo.2008.10.03.txt;https://issues.apache.org/jira/secure/attachment/12461152/mem-histo.2008.10.03.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-10-03 14:30:34.717,,,false,,,,,,,,,,,,,,,,,95784,,,Fri Nov 20 18:09:54 UTC 2009,,,,,,,,"0|i0tslb:",171941,,,,,,,,,,,,,,,,,,,"08/Oct/07 20:57;sbuberl;In hopes of providing some evidence and encouragement, I'm posted a memory snapshot of the top 24 ActiveMQ classes by the amount of memory all its live objects take up.  The server is a Jboss server that uses ActiveMQ for all its messaging, and the server has been runing for 6 days straight.  Its sorted by total size of all reachable/live objects of the class to show you how much higher the count and total memory size of the top tier are from the rest.

{quote}
        Count  ... Total Size ... Class

	37189 ... 2360k ... org.apache.activemq.management.CountStatisticImpl
	
	18596 ... 1616k ... org.apache.activemq.management.TimeStatisticImpl
	
	9295 .... 1098k ... org.apache.activemq.management.JMSSessionStatsImpl
	
	9295 .... 1080k ... org.apache.activemq.ActiveMQSession
	
	27945 ... 436k .... org.apache.activemq.util.LongSequenceGenerator
	
	9307 .... 399k .... org.apache.activemq.command.SessionId
	
	9295 .... 335k .... org.apache.activemq.command.SessionInfo
	
	9295 .... 299k .... org.apache.activemq.ActiveMQSessionExecutor
	
	9295 .... 236k .... org.apache.activemq.MessageDispatchChannel
	
	3836 .... 194k .... org.apache.activemq.command.ProducerId
	
	9278 .... 154k .... org.apache.activemq.ra.ManagedSessionProxy
	
	24 ...... 96k ..... org.apache.activemq.command.DataStructure[]
	
	922 ..... 28k ..... org.apache.activemq.command.XATransactionId
	
	76 ...... 19k ..... org.apache.activemq.command.ActiveMQTextMessage
	
	76 ...... 6k ...... org.apache.activemq.command.MessageDispatch
	
	160 ..... 3k ...... org.apache.activemq.util.ByteSequence
	
	76 ...... 3k ...... org.apache.activemq.command.MessageId
	
	12 ...... 3k ...... org.apache.activemq.ActiveMQConnection
	
	12 ...... 1k ...... org.apache.activemq.transport.tcp.TcpTransport
	
	31 ...... 1k ...... org.apache.activemq.command.ActiveMQTopic
	
	28 ...... 1k ...... org.apache.activemq.command.ConsumerId
	
	14 ...... 1k ...... org.apache.activemq.command.ConsumerInfo
	
	21 ...... 1k ...... org.apache.activemq.TransactionContext
{quote}

And I'd like to note at any given time, on my server there are only about 15 ActiveMQSessions being used by the beans at a time but 9000 more along with all their stats and ids are stuck in memory too.","03/Oct/08 14:30;ikoblik;We seem to have same problem. Complete memory histogram is attached to the issue.","27/Oct/08 12:32;ikoblik;It looks like we didn't use sessions right. We were opening them but not closing afterwards, it was OK when we had a new connection per message, but as soon as we moved to the single connection factory, memory leak became apparent.","06/Jul/09 15:26;msiegenthaler;Duplicate of AMQ-2166 (contains a fix)

Actually mine was the duplicate of this (didn't find it then, I appologize)","20/Nov/09 18:09;bsnyder;Fixed by AMQ-2166",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network bridge keeps falling down,AMQ-1455,12482846,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,ddossot,ddossot,09/Oct/07 18:34,13/Sep/09 10:43,30/Jan/20 16:57,13/Sep/09 10:43,5.0.0,,,,,,5.3.0,,,Transport,,,,2,"The bridge between two nodes keeps falling down after a few minutes of use.


This is maybe a misconfiguration and totally my bad, so here is the network config:

		<transportConnectors>
			<transportConnector uri=""vm://${esb.node.name}"" />
			<transportConnector uri=""tcp://localhost:58080"" discoveryUri=""rendezvous://dev-esb-node"" />
		</transportConnectors>

		<networkConnectors>
			<networkConnector conduitSubscriptions=""true"" decreaseNetworkConsumerPriority=""true"" dynamicOnly=""true""
				networkTTL=""64"" uri=""rendezvous://dev-esb-node"" userName=""broker"" password=""XXX"" />
		</networkConnectors>


${esb.node.name} resolves to ""backbone-node-8080"" on one box and ""collection-node-8080"" on the other.


And here are the errors when the bridge crashes:

11:04:46,241 DEBUG [org.apache.activemq.network.DemandForwardingBridge] backbone-node-8080 Forwarding sub on vm://backbone-node-8080#4 from collection-node-8080 :  ConsumerInfo {commandId = 4, responseRequired = true, consumerId = ID:ddo-mbp.local-51198-1191953085196-0:0:1:1, destination = queue://esb.admin.errors, prefetchSize = 500, maximumPendingMessageLimit = 0, browser = true, dispatchAsync = false, selector = null, subscriptionName = null, noLocal = false, exclusive = false, retroactive = false, priority = 0, brokerPath = null, optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null}
11:04:46,250 INFO  [org.apache.activemq.network.DemandForwardingBridge] Network connection between vm://backbone-node-8080#4 and tcp://esb-backbone-node2.dev.com/10.20.116.14:58
080 shutdown due to a local error: java.lang.NullPointerException
11:04:46,254 DEBUG [org.apache.activemq.network.DemandForwardingBridge] The local Exception was:java.lang.NullPointerException
java.lang.NullPointerException
        at org.apache.activemq.network.DemandForwardingBridgeSupport.configureMessage(DemandForwardingBridgeSupport.java:539)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:561)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:137)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:102)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1184)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:803)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:838)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:619)
11:04:46,259 DEBUG [org.apache.activemq.network.DemandForwardingBridge]  stopping backbone-node-8080 bridge to collection-node-8080 is disposed already ? false
11:04:46,261 INFO  [org.apache.activemq.network.DemandForwardingBridge] backbone-node-8080 bridge to collection-node-8080 stopped
","apache-activemq-5.0-20071008.215641-19, RHEL 4, JDK 1.6.0_02",ddossot,jfe,mlukica,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-05-09 19:37:35.048,,,false,,,,,,,,,,,,,,,,,43767,,,Sun Sep 13 10:43:08 UTC 2009,,,,,,,,"0|i0s293:",161841,,,,,,,,,,,,,,,,,,,"09/Oct/07 23:33;ddossot;The NPE is thrown on this line:

     Message message = md.getMessage().copy();

By following the code before this line, md can not be null, so this is getMessage() that is null.

Is this because I am erroneously using the VM transport? The reason I am using this transport is because my brokers are embedded in Java apps that connect to the local broker using the VM adapter.","10/Oct/07 18:17;ddossot;I have stopped using VM transport altogether from my embedded client application, but the problem still happens: the bridge keeps falling down.

I noticed the issue seems to happen if I have a queue browser (from Hermes) on the same distributed queue my application is using.

I recognize the issue is hard to reproduce on your side, but in the mean time can the bridge be made more resilient to runtime exceptions so it recovers and does not stop?

","10/Oct/07 18:41;ddossot;Interestingly AMQ-805 gives the impression the bridge should auto-reconnect...","09/May/08 19:37;aricooperman;This same exact thing happens for me as well. I am also using embedded brokers with VM transport","13/Sep/09 10:43;rajdavies;This should be resolved in 5.3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring integration: wrong entry in spring.schemas,AMQ-1461,12483933,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gwieser@creative-it.com,gwieser@creative-it.com,15/Oct/07 13:52,13/Sep/09 10:36,30/Jan/20 16:57,13/Sep/09 10:36,4.1.1,,,,,,5.3.0,,,,,,,6,"META-INF/spring.schemas in the active mq jar contains in release 4.1.1:

http\://activemq.org/config/1.0=activemq.xsd

this is wrong in the sense that here the namespace is mapped against the relative location of the XSD in the classpath. instead of the namespace the XSD location from the XML config should be used.

Think about the following spring XML application context header:
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:amq=""http://activemq.org/config/1.0""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
				        http://activemq.org/config/1.0 http://activemq.apache.org/schema/core/activemq-core-4.1.1.xsd"">

spring resolves the URL 
http://activemq.apache.org/schema/core/activemq-core-4.1.1.xsd
by first looking up the classpath for files that match ""META-INF/spring.schema"", and if it finds one ore more it looks inside to read the property within these files. it than tries to match the key of the property against the schema location entry of the xsi:schemaLocation entry, which in this example would be a match of ""http://activemq.apache.org/schema/core/activemq-core-4.1.1.xsd"" and NOT ""http://activemq.org/config/1.0"".

i have locally fixed this bug by modifying the META-INF/spring.schemas file to:

http\://activemq.apache.org/schema/core/activemq-core-4.1.1.xsd=activemq.xsd

with this setting it works fine here. with the original setting there was no chance to get it up and running, which is strange because of the following examples:
http://activemq.apache.org/xml-reference.html

for details on spring and spring.schemas see
http://erik.jteam.nl/?p=27","w/ spring 2.0.7, jdk 1.4.2",ahempel@atlassian.com,anders,john.greeley,kweiner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84532,,,2007-10-15 13:52:11.0,,,,,,,,"0|i181q7:",255082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"transport won't shutdown, stuck in countdownlatch",AMQ-1252,12482898,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,aburgel,aburgel,23/May/07 19:35,12/Sep/09 06:46,30/Jan/20 16:57,12/Sep/09 06:46,4.1.1,,,,,,5.3.0,,,Broker,,,,0,"i have a network of brokers setup. when i shutdown the brokers, one of them always gets stuck waiting. i've pasted the relevant part of a thread dump below. you can see that the tcp transport is stuck waiting for the connection to host 10.4.7.108 to start up. the problem is that this host has already been shutdown. so the other host will be stuck waiting forever.

this post seems to be relevant to the issue:

http://www.nabble.com/Network-connector-failover-problems-tf3659372s2354.html#a10275742

""ActiveMQ Transport: tcp:///10.4.7.108:40623"" prio=1 tid=0xb08f28a8 nid=0x4f84 waiting on condition [0x8490a000..0x8490a500]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:118)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:681)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:837)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1144)
        at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.waitStarted(DemandForwardingBridgeSupport.java:842)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:332)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:131)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84576,,,2007-05-23 19:35:01.0,,,,,,,,"0|i181db:",255024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Producer advisory topic is not always deleted with the related destination,AMQ-1347,12482878,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mteira,mteira,27/Jul/07 09:11,11/Sep/09 19:40,30/Jan/20 16:57,11/Sep/09 19:40,4.1.1,5.2.0,,,,,5.3.0,,,Broker,,,,0,"When a destination is deleted, the AdvisoryBroker tries to delete the producer and consumer related advisories, in AdvisoryBroker.removeDestination and AdvisoryBroker.removeDestinationInfo. But consider the following scenario:

HostA holds a consumer on q0.
HostB wants to send a message and get a reply from HostA. So, it creates a producer on q0, and a temporary Queue tq on the same session. Then, sends a request message to q0 with the jmsReplyTo pointing to tq.
HostA gets the message, and creates a producer on the temporary queue. This fires the AdvisoryBroker producer advisory topic creation for the temporary queue. 
HostA sends a new message on the temporary queue producer, and *closes it*.
HostB gets the message, closes the session (what automatically closes the temporary queue consumer and the q0 producer) and *removes the temporary queue*.  When HostB removes the temporary queue, the AdvisoryBroker tries to delete the related consumer and advisory topics related with the temporary queue.

Two things can happen:
# If HostA removeProducer command reaches the Broker before HostB removeDestination for the temporary queue, everything works fine.
# If HostB removeDestination command reaches the broker before HostB removeProducer, the producer advisory topic for the temporary queue is deleted and then autocreated again at the AbstractRegion domain, because removeProducer fires a producer advisory message. This time, the producer advisory topic is never released, causing leakage and grief.

As a ""temporary"" solution, I've disabled producer advisories for temporary queues, and things seems to work, as I don't need those advisories, using something like this in AdvisoryBroker:

{code:title=AdvisoryBroker.java}
  public void addProducer(ConnectionContext context, ProducerInfo info) throws Exception {
        next.addProducer(context, info);

        // Don't advise advisory topics.        
        if( info.getDestination()!=null && !AdvisorySupport.isAdvisoryTopic(info.getDestination()) 
                && !info.getDestination().isTemporary()) { 
            ActiveMQTopic topic = AdvisorySupport.getProducerAdvisoryTopic(info.getDestination());
            fireAdvisory(context, topic, info);
            producers.put(info.getProducerId(), info);
        }
    }
{code}

and the same thing for removeProducer.

I think the problem not only applies to the temporary queues, but with their usage pattern, this bug is really problematic. 
Consider this as a dirty hack. I expect a better and brilliant solution to be released by the activemq brains. ;-)
","Sun Ultrasparc under Solaris 10, Oracle JDBC, no journal. activemq svn 4.1 branch or trunk",ecorral,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84554,,,2007-07-27 09:11:11.0,,,,,,,,"0|i0s29z:",161845,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't produce messages after consumer goes down.,AMQ-1478,12482836,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,arpit.shah,arpit.shah,26/Oct/07 14:50,11/Sep/09 18:59,30/Jan/20 16:57,11/Sep/09 18:59,4.1.1,,,,,,5.3.0,,,,,,,1,"
Configuration is attached below.

Behavior:

Set the persistent to be true in the broker configuration and created a durable topic to consume messages. 

Everything was fine until the consumer went down. During that time producer keeps producing messages. Restart consumer to catch all the missed messages but didn't catch them. After that the whole application hangs. can't produce any more messages, hence can't consume them. The heap usage size keeps increasing on the producer side.

Increased memory size, which didn't work either. The received log is shown below on the broker side when it comes up and the message that shows up on the produce client window.

Here is the message from the producer window:

response from futureResponse was invalid
        FILE: ..\src\main\activemq\transport\filters\ResponseCorrelator.cpp, LIN
E: 146
        FILE: ..\src\main\activemq\transport\filters\ResponseCorrelator.cpp, LIN
E: 153
        FILE: ..\src\main\activemq\connector\openwire\OpenWireFormatNegotiator.c
pp, LINE: 105
        FILE: ..\src\main\activemq\connector\openwire\OpenWireConnector.cpp, LIN
E: 1454
        FILE: ..\src\main\activemq\connector\openwire\OpenWireConnector.cpp, LIN
E: 924
        FILE: ..\src\main\activemq\core\ActiveMQSession.cpp, LINE: 675
        FILE: ..\src\main\activemq\core\ActiveMQProducer.cpp, LINE: 194
        FILE: ..\src\main\activemq\core\ActiveMQProducer.cpp, LINE: 149
        FILE: ..\src\main\activemq\core\ActiveMQProducer.cpp, LINE: 108


Here is broker log:

2007-10-25 15:56:32,576 [main           ] INFO  BrokerService                  - ActiveMQ 4.1.1 JMS Message Broker (localhost) is starting
2007-10-25 15:56:32,576 [main           ] INFO  BrokerService                  - For help or more information please see: http://incubator.apache.org/activemq/
2007-10-25 15:56:32,654 [JMX connector  ] INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
2007-10-25 15:56:33,154 [main           ] INFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby_embedded_jdbc_driver]
2007-10-25 15:56:33,904 [main           ] INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
2007-10-25 15:56:33,904 [main           ] INFO  DefaultDatabaseLocker          - Becoming the master on dataSource: org.apache.derby.jdbc.EmbeddedDataSource@8a2023
2007-10-25 15:56:34,748 [main           ] INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 5 x 20.0 Megs at: C:\ActiveMQ\apache-activemq-4.1.1\apache-activemq-4.1.1\activemq-data\journal
2007-10-25 15:56:34,764 [main           ] INFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in transactions recovered.
2007-10-25 15:56:34,967 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: tcp://PCSHAH:61616
2007-10-25 15:56:34,967 [main           ] INFO  TransportConnector             - Connector openwire Started
2007-10-25 15:56:35,280 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: ssl://PCSHAH:61617
2007-10-25 15:56:35,280 [main           ] INFO  TransportConnector             - Connector ssl Started
2007-10-25 15:56:35,280 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: stomp://PCSHAH:61613
2007-10-25 15:56:35,280 [main           ] INFO  TransportConnector             - Connector stomp Started
2007-10-25 15:56:35,358 [main           ] INFO  NetworkConnector               - Network Connector default-nc Started
2007-10-25 15:56:35,358 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:PCSHAH-2327-1193342192311-1:0) started
2007-10-25 15:56:51,421 [85.37.184:44137] INFO  KahaStore                      - Kaha Store deleted data directory activemq-data\localhost\tmp_storage
","Producer box( Windows - running a broker - Producer configuration: persistent messages)
Consumer box(Linux - with durable topics for persistence)
",john.greeley,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/07 14:50;arpit.shah;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460839/ASF.LICENSE.NOT.GRANTED--activemq.xml",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-11-07 04:27:04.094,,,false,,,,,,,,,,,,,,,,,84530,,,Wed Nov 07 04:27:04 UTC 2007,,,,,,,,"0|i0s28v:",161840,,,,,,,,,,,,,,,,,,,"07/Nov/07 04:27;ggsize;Saw exact same exception but in different environment. On one Windows box, CPP2.1 as producer, 4.1.1 for broker and receiver and producers. Nothing persistent or durable. No errors in broker log.

Repeatedly restarting the CPP producer gave same error. However when I took down all my java producer/receivers and restarted them, then the CPP producer worked fine. 

Have been using 4.1.1 since May, and CPP2.1 for a week with no problems before. (run 100msg/second everyday)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Producer Blocks even after emptying out queues on v 4.2,AMQ-1209,12482671,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,dparekh1,dparekh1,19/Mar/07 19:35,11/Sep/09 18:26,30/Jan/20 16:57,11/Sep/09 18:26,5.0.0,,,,,,5.3.0,,,Broker,,,,0,"Using non-peristant JMS queues.

I have downloaded the active mq  distribution  apache-activemq-4.2-20070313.102814-31.zip to test the new message cursor functionality.  We are testing the spooling functionality after running out of RAM buffer. We modified the existing ProducerTool and ConsumerTool examples that were provided so that we could send messages that are about 80KB in size. We set the memory in the xml config file to 512Mb.

When we first run the Producer tool to publish 40, 000 messages, it runs fine and publishes all 40,000 messages. On version 4.1.1, we could only publish out about ~5,000 messages before being blocked.

After running the Producer tool, we ran the ConsumerTool to read all the messages in the queue. It successfully read out all 40, 000 messages.

We then re-ran the Publisher tool to publish 40,000 messsages. However, the publisher would only publish 10 messages and just block.   We assumed then that 10 messages are in the queue. We ran the Consumer but it would retrieve 0 messages. It acted as if there were no messages on the queue. Subsequent attempt to run Publisher would only publish out 10 messages while subsequent attempts to running the Consumer would retreive 0 messages.


Any assistance with this would be greatly appreciated. We are in the process of migrating off the Sun MQ producer and are looking at some open source alternatives. With the design of our application, we need functionality analgous to message cursors. Re-designing the application is not an option.","WinXP SP2
JDK 1.5.0_11
P4 duo core @2.16GHz
",dparekh1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84710,,,2007-03-19 19:35:03.0,,,,,,,,"0|i0s23b:",161815,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect handling of disconecting client in ClientAckMode,AMQ-852,12482238,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bigsam72,bigsam72,31/Jul/06 14:17,09/Sep/09 10:05,30/Jan/20 16:57,09/Sep/09 10:05,4.0.1,,,,,,5.3.0,,,Broker,,,,0,"When you run ""my test program"" and end this process  with Ctrl+C/ kill/ kill -9 ( i mostly used Ctrl+C) sometimes during let say 100 iteration ""communication between client and broker is damaged"". This results in situation when after restart ( new pid ) client program is unable to create producer.  call to   consumer = rec_session->createConsumer( rec_queue );
 hangs client program. Sometimes this results with exception as you can see in output of my program. I think that this only occurs when the session is in ClienAckMode. From my point of view is there incorrect handling of situation when client receives message from broker and than terminates connection without ack/nack this receive in certatin circumstances ...

output:
 ./amqtest tcp://lxstaflik:61616 PH_Q_IN_10 PH_Q_OUT_10
Setting connection URL to 'tcp://lxstaflik:61616'
Setting receive queue name to 'PH_Q_IN_10'
Setting send queue name to 'PH_Q_OUT_10'
Init ...
Creating connection factory ...
Connection factory created, creating connection ...
Connection created, creating receive session...
receive session created, creating sending session ...
send session created, creating receive queue...'PH_Q_IN_10'
receive queue created, creating consumer for this queue ...
setting listener ...
Error on connection Unmarshal failed; unknown data structure type 49, at src/main/cpp/activemq/protocol/openwire/OpenWireMarshaller.cpp line 711Exiting read loop due to exception: Unmarshal failed; unknown data structure type 49, at src/main/cpp/activemq/protocol/openwire/OpenWireMarshaller.cpp line 711


Here is source code of my example:
#include <stdio.h>
#include <unistd.h>

#include <exception>
#include <iostream>
#include <map>
#include <string>

#include ""cms/IConnection.hpp""
#include ""cms/IConnectionFactory.hpp""
#include ""activemq/ConnectionFactory.hpp""
#include ""activemq/Connection.hpp""
#include ""activemq/Session.hpp""
#include ""ppr/TraceException.hpp""
#include ""ppr/net/Uri.hpp""
#include ""ppr/util/ifr/p""

using namespace apache::activemq;
using namespace apache::cms;
using namespace apache::ppr;
using namespace apache::ppr::net;
using namespace ifr;
using namespace std;


class ActiveMQTest : public IExceptionListener, public IMessageListener {
  private:
        p<Uri>                  uri;
        p<IConnectionFactory>   factory;
        p<IConnection>          connection;
        p<ISession>             rec_session;
        p<ISession>             snd_session;
        p<IQueue>               rec_queue;
        p<IQueue>               snd_queue;
        p<IMessageProducer>     producer;
        p<IMessageConsumer>     consumer;
        p<ITextMessage>         txtmsg;
        char szRecQueue[128];
        char szSndQueue[128];
  public:
        ActiveMQTest();
        virtual ~ActiveMQTest();
        virtual void setUri(const char *);
        virtual void init();
        virtual void done();
        virtual void onException(exception& error);
        virtual void onMessage(p<IMessage> message);
        virtual void ActiveMQTest::setSndQueue(const char *szQueue);
        virtual void ActiveMQTest::setRecQueue(const char *szQueue);
};

void ActiveMQTest::onMessage( p<IMessage> message) {
   p<ITextMessage>      snd_message;

   this->txtmsg = p_dyncast<ITextMessage>(message);

   p<string> string_request = txtmsg->getText();

   if (string_request != NULL ) {
     printf(""Received message : %s"",string_request->c_str());
   }

   sleep(10);

   message->acknowledge();

   snd_message = snd_session->createTextMessage() ;
   snd_message->setText(""TEST\n"") ;
   snd_message->setJMSPersistent(1);
   // Send message
   producer->send(message) ;
}

void ActiveMQTest::done() {
   rec_session->close();
   snd_session->close();
}

void ActiveMQTest::setUri(const char * uri) {
    this->uri = new Uri(uri) ;
}

void ActiveMQTest::setSndQueue(const char *szQueue) {
  strcpy(szSndQueue,szQueue);
}

void ActiveMQTest::setRecQueue(const char *szQueue) {
  strcpy(szRecQueue,szQueue);
}

ActiveMQTest::ActiveMQTest() {
  this->connection = NULL;
  this->rec_session = NULL;
  this->snd_session = NULL;
  memset(szRecQueue,0x0,sizeof(szRecQueue));
  memset(szSndQueue,0x0,sizeof(szSndQueue));
}

ActiveMQTest::~ActiveMQTest() {
}

void ActiveMQTest::init() {
  try {
    cout.rdbuf(cerr.rdbuf());
    printf(""1 Creating connection factory ... \n"");
    factory = new ConnectionFactory( uri );

    printf(""Connection factory created, creating connection ...\n"");
    connection = factory->createConnection();

    printf(""Connection created, creating receive session...\n"");
    p_cast<Connection>(connection)->setExceptionListener( smartify( this ) );
    //rec_session = connection->createSession(AutoAckMode);
    rec_session = connection->createSession(ClientAckMode);

    printf(""receive session created, creating sending session ...\n"");
    snd_session = connection->createSession(AutoAckMode);

    printf(""send session created, creating receive queue...'%s'\n"",szRecQueue);
    rec_queue = rec_session->getQueue( szRecQueue );


    printf(""receive queue created, creating consumer for this queue ...\n"");
    consumer = rec_session->createConsumer( rec_queue );


    printf(""setting listener ...\n"");
    snd_queue = snd_session->getQueue( szSndQueue );
    consumer->setMessageListener( smartify( this ) );
    producer = snd_session->createProducer( snd_queue );

    (p_dyncast<apache::activemq::Session>(rec_session))->dispatch(0);

    printf(""Init Ok.\n"");

  } catch ( TraceException& e ) {
    printf(""Error during init  ... \n"");
  }
}

void ActiveMQTest::onException( exception& error ) {
  printf(""Error on connection %s"", error.what() );
}


int main(int argc,char *argv[]) {
  ActiveMQTest* myAq;


  if ( argc < 3 ) {
    printf(""Usage: amqtest <connection_url> <receive_queue> <send_queue>\n"");
    exit(0);
  }

  myAq = new ActiveMQTest;

  printf(""Setting connection URL to '%s'\n"",argv[1]);
  myAq->setUri(argv[1]);

  printf(""Setting receive queue name to '%s'\n"",argv[2]);
  myAq->setRecQueue( argv[2] );

  printf(""Setting send queue name to '%s'\n"",argv[3]);
  myAq->setSndQueue( argv[3] );

  printf(""Init ...\n"");
  myAq->init();


int i=0;
  while( i < 3000 ) {
    printf(""Idle ... \n"");
    sleep( 1 );
    i++;
  }

  myAq->done();

  return 0;
}


",Linux IA32/RHEL AS 4.0 ( Broker version 4.0.1 ) and client program uses OpenWire protocol (C++) CMS devel version. ,,,,,,,,,,,,,,,,,,2419200,2419200,,0%,2419200,2419200,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84395,,,2006-07-31 14:17:13.0,,,,,,,,"0|i180c7:",254857,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"when client is not authorized to write to A_QUEUE, producer.send to A_QUEUE does not raise exception",AMQ-1022,12482842,12482160,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,massive.boisson,massive.boisson,02/Nov/06 13:07,04/Sep/09 18:44,30/Jan/20 16:57,04/Sep/09 18:44,4.0.1,,,,,,5.3.0,,,Broker,,,,0,"Using amq 4.0.1, transacted session, jms.useAsyncSend=false, security features described on http://incubator.apache.org/activemq/security.html and client NOT authorized to write to A_QUEUE, producer.send to that A_QUEUE does NOT raise an exception. Instead an asynchronous exception is raised to ExceptionListener. 

This way the data from the message is essentially lost, because it is not possible to connect exception to the message that should have cause the exception.","Windows, amq 4.0.1, using security features described on http://incubator.apache.org/activemq/security.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-12 14:04:49.0,,,false,,,,,,,,,,,,,,,,,84372,,,Mon Nov 13 21:07:04 UTC 2006,,,,,,,,"0|i180r3:",254924,,,,,,,,,,,,,,,,,,,"12/Nov/06 14:04;nmittler;Please give this test build a try and let me know how it goes ...

http://people.apache.org/~nmittler/apache-activemq-4.2-incubator-SNAPSHOT.tar.gz
","12/Nov/06 14:17;nmittler;Ignore my previous comment - this build is for a different issue.","13/Nov/06 21:07;massive.boisson;This needs clarification: this is a transacted session, and a perssistent queue. 
producer.send does NOT raise an exception
session.commit does NOT raise an excepton. 
Instead an asynchronous exception is raised to ExceptionListener.
Still the same problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
While running mule and making a connection with Activemq a backport error is reported.,AMQ-1374,12482776,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,claudio.carta,claudio.carta,30/Aug/07 09:29,04/Sep/09 18:25,30/Jan/20 16:57,04/Sep/09 18:25,4.1.1,,,,,,5.3.0,,,Test Cases,,,,1,"I am making a connection with activemq while running a test case of mule on Eclipse.  But when trying to connect with mule i am getting   the following error.

Exception in thread ""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" java.lang.ClassCastException: org.apache.activemq.transport.InactivityMonitor$1
	at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo(ScheduledThreadPoolExecutor.java:189)
	at edu.emory.mathcs.backport.java.util.PriorityQueue.remove(PriorityQueue.java:507)
	at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.remove(DelayQueue.java:379)
	at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.remove(ScheduledThreadPoolExecutor.java:707)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.remove(ThreadPoolExecutor.java:1582)
	at org.apache.activemq.thread.Scheduler.cancel(Scheduler.java:55)
	at org.apache.activemq.transport.InactivityMonitor.stopMonitorThreads(InactivityMonitor.java:176)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)
	at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:97)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:150)
	at java.lang.Thread.run(Unknown Source)

The backport utility used is version3.

Can you please help?","Windows Xp, Mule1.4.1",h2o,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-10-21 14:40:11.525,,,false,,,,,,,,,,,,,,,,,84547,,,Fri Sep 04 18:25:59 UTC 2009,,,,,,,,"0|i0s26v:",161831,,,,,,,,,,,,,,,,,,,"21/Oct/07 14:40;h2o;Duplicate of AMQ-1383, see http://mule.mulesource.org/jira/browse/MULE-2496 for more.
","04/Sep/09 18:25;rajdavies;Mule issue looks closed - so resolving this one",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages sent and retrieved via STOMP sticking around,AMQ-832,12482981,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bmitchener,bmitchener,19/Jul/06 17:52,29/Aug/09 06:21,30/Jan/20 16:57,29/Aug/09 06:21,4.0.1,,,,,,5.3.0,,,,,,,0,"I'm sending and receiving messages entirely through STOMP and messages are getting stuck in the queue (using 4.0.1).

This is pretty inconvenient as when I restart my processes and they re-subscribe, the messages get re-delivered to them.

incubator-activemq-4.0.1/bin$ ./browse --amqurl tcp://localhost:61616 something/game/0
JMS_CUSTOM_FIELD:_timestamp = 2006-07-19 10:23:43.847049
JMS_HEADER_FIELD:JMSDestination = something/game/0
JMS_HEADER_FIELD:JMSDeliveryMode = non-persistent
JMS_HEADER_FIELD:JMSMessageID = ID:hotei-60326-1153156802410-3:589:-1:1:8
JMS_BODY_FIELD:JMSBytes:1 =
JMS_HEADER_FIELD:JMSExpiration = 0
JMS_HEADER_FIELD:JMSPriority = 0
JMS_HEADER_FIELD:JMSRedelivered = false
JMS_HEADER_FIELD:JMSTimestamp = 0

JMS_CUSTOM_FIELD:_timestamp = 2006-07-19 10:23:45.535995
JMS_HEADER_FIELD:JMSDestination = something/game/0
JMS_HEADER_FIELD:JMSDeliveryMode = non-persistent
JMS_HEADER_FIELD:JMSMessageID = ID:hotei-60326-1153156802410-3:589:-1:1:9
JMS_BODY_FIELD:JMSBytes:1 =
JMS_HEADER_FIELD:JMSExpiration = 0
JMS_HEADER_FIELD:JMSPriority = 0
JMS_HEADER_FIELD:JMSRedelivered = false
JMS_HEADER_FIELD:JMSTimestamp = 0

I'm not using durable subscriptions, persistence messaging, etc.

Is there something that I'm doing wrong that might cause this?

The messages randomly get stuck .. it isn't always repeatable and is much less frequent with 4.0.1 than it was with 4.0 prereleases.

This software is going into production soon, so would it be safe to try out a 4.0.2 or 4.1 snapshot?  Would they be likely to fix this given the current sets of changes in them?
","Java 1.5, Linux, AMD64
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84401,,,2006-07-19 17:52:47.0,,,,,,,,"0|i17zzb:",254799,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't deploy RAR on weblogic 9.1,AMQ-774,12482963,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,madparker,madparker,23/Jun/06 04:29,29/Aug/09 06:06,30/Jan/20 16:57,29/Aug/09 06:06,4.0.1,,,,,,5.3.0,,,Broker,,,,0,"I've been through the doc:

http://www.activemq.org/site/how-to-deploy-activemq-ra-versionrar-to-weblogic.html

However, when I attempt to deploy the broker on Weblogic 9.1 (actually, when i click on ""activate changes""), i get the following error:

weblogic.connector.exception.RAException: There are 1 nested errors: javax.resource.spi.ResourceAdapterInternalException: Failed to startup an embedded broker: file://../broker-config.xml, due to: java.io.IOException: Could load file factory:java.io.IOException: Could not find factory class for resource: META-INF/services/org/apache/activemq/broker/file at org.apache.activemq.ra.ActiveMQResourceAdapter.start(ActiveMQResourceAdapter.java:82) at weblogic.connector.security.layer.AdapterLayer.start(AdapterLayer.java:979) at weblogic.connector.common.RAInstanceManager.initialize(RAInstanceManager.java:1139) at weblogic.connector.common.RAInstanceManager.<init>(RAInstanceManager.java:333) at weblogic.connector.deploy.ConnectorModule.prepare(ConnectorModule.java:178) at weblogic.application.internal.flow.ModuleListenerInvoker.prepare(ModuleListenerInvoker.java:90) at weblogic.application.internal.flow.DeploymentCallbackFlow$1.next(DeploymentCallbackFlow.java:318) at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26) at weblogic.application.internal.flow.DeploymentCallbackFlow.prepare(DeploymentCallbackFlow.java:53) at weblogic.application.internal.flow.DeploymentCallbackFlow.prepare(DeploymentCallbackFlow.java:43) at weblogic.application.internal.BaseDeployment$1.next(BaseDeployment.java:620) at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26) at weblogic.application.internal.BaseDeployment.prepare(BaseDeployment.java:231) at weblogic.application.internal.DeploymentStateChecker.prepare(DeploymentStateChecker.java:147) at weblogic.deploy.internal.targetserver.AppContainerInvoker.prepare(AppContainerInvoker.java:61) at weblogic.deploy.internal.targetserver.operations.ActivateOperation.createAndPrepareContainer(ActivateOperation.java:183) at weblogic.deploy.internal.targetserver.operations.ActivateOperation.doPrepare(ActivateOperation.java:84) at weblogic.deploy.internal.targetserver.operations.AbstractOperation.prepare(AbstractOperation.java:219) at weblogic.deploy.internal.targetserver.DeploymentManager.handleDeploymentPrepare(DeploymentManager.java:750) at weblogic.deploy.internal.targetserver.DeploymentManager.prepareDeploymentList(DeploymentManager.java:1209) at weblogic.deploy.internal.targetserver.DeploymentManager.handlePrepare(DeploymentManager.java:246) at weblogic.deploy.internal.targetserver.DeploymentServiceDispatcher.prepare(DeploymentServiceDispatcher.java:157) at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.doPrepareCallback(DeploymentReceiverCallbackDeliverer.java:157) at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.access$000(DeploymentReceiverCallbackDeliverer.java:12) at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer$1.run(DeploymentReceiverCallbackDeliverer.java:45) at weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518) at weblogic.work.ExecuteThread.execute(ExecuteThread.java:207) at weblogic.work.ExecuteThread.run(ExecuteThread.java:179) Caused by: java.io.IOException: Could load file factory:java.io.IOException: Could not find factory class for resource: META-INF/services/org/apache/activemq/broker/file at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:24) at org.apache.activemq.broker.BrokerFactory.createBrokerFactoryHandler(BrokerFactory.java:42) at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:55) at org.apache.activemq.ra.ActiveMQResourceAdapter.start(ActiveMQResourceAdapter.java:79) ... 27 more Caused by: java.io.IOException: Could not find factory class for resource: META-INF/services/org/apache/activemq/broker/file at org.apache.activeio.util.FactoryFinder.doFindFactoryProperies(FactoryFinder.java:87) at org.apache.activeio.util.FactoryFinder.newInstance(FactoryFinder.java:57) at org.apache.activeio.util.FactoryFinder.newInstance(FactoryFinder.java:46) at org.apache.activemq.broker.BrokerFactory.createBrokerFactoryHandler(BrokerFactory.java:40) ... 29 more",BEA Weblogic 9.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84408,,,2006-06-23 04:29:15.0,,,,,,,,"0|i17zsf:",254768,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActivemMQ slows down after a rather small number of messages,AMQ-903,12482960,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,aioaneid,aioaneid,30/Aug/06 13:56,29/Aug/09 06:05,30/Jan/20 16:57,29/Aug/09 06:05,4.0.1,,,,,,5.3.0,,,,,,,0,"I have activemq with a postgresql backend running as a standalone server, and a client application that produces persistent messages in 50 threads. Each time I run my app it pushes as many msg as it can for about 62.5 seconds after which it quits. Although initially it works fast, every time I run my app it produces less messages:

enqueue speed 50 threads: msg/second: 334.18333333333334
             second time: msg/second: 194.15
              third time: msg/second: 123.0
             fourth time: msg/second: 58.61666666666667
              fifth time: msg/second: 19.433333333333334
              sixth time: msg/second: 33.81666666666667
            seventh time: msg/second: 11.783333333333333
              eigth time: msg/second: 24.733333333333334
             ninght time: msg/second: 10.883333333333333

After I ran the above test there seem to be 50241 msg in that queue.

activemq=> select count(1) from activemq_msgs ;
 count
-------
 50241
(1 row)

activemq=> select count(1) from activemq_acks ;
 count
-------
     0
(1 row)

Note that I don't have any message consumers active for this test.

Here is the way the client app connects:

	<bean id=""jmsResourceAdapter""
		class=""org.apache.activemq.ra.ActiveMQResourceAdapter"">
		<property name=""serverUrl"" value=""tcp://localhost:61616?wireFormat.cacheEnabled=false&amp;wireFormat.tightEncodingEnabled=false"" />
	</bean>
",,aioaneid,carloc,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/06 13:56;aioaneid;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460667/ASF.LICENSE.NOT.GRANTED--activemq.xml",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-08-29 06:05:12.923,,,false,,,,,,,,,,,,,,,,,84385,,,Sat Aug 29 06:05:12 UTC 2009,,,,,,,,"0|i0s1b3:",161688,,,,,,,,,,,,,,,,,,,"30/Aug/06 14:04;aioaneid;Every time I ran my test app, the CPU usage staid on 100% so an artificial sleep-like delay doesn't seem to be involved.","31/Aug/06 10:14;aioaneid;Just found out that while using the default DerbyDB db, the behaviour doesn't happen. Here are some numbers I got at consecutive tests with such a configuration:

ActiveMQ/DerbyDb
msg/second: 258.3833333333333
msg/second: 293.15
msg/second: 296.78333333333336
msg/second: 273.0833333333333
msg/second: 275.1333333333333

with the same test application.
","05/Sep/06 13:24;aioaneid;It seems that by specifying jms.useAsyncSend=true in the connection url, the throughput stays more or less constant even with a postgresql backend, and a single producer thread is enough to get the maximum performance.","29/Aug/09 06:05;rajdavies;Looks resolved in current release",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signature typo shows off in JMX MBean view and problem with resubscribing to durable topic + PATCH,AMQ-1150,12483011,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,tvijlbrief,tvijlbrief,03/Feb/07 13:48,29/Aug/09 06:03,30/Jan/20 16:57,29/Aug/09 06:03,5.0.0,,,,,,5.3.0,,,Broker,,,,1,"I had a problem with durable topics. Scenario: a durable topic client is interrupted (CTRL-C) while it is
fetching messages from the topic. When the client is restarted it does not receive the remaining messages!

After stopping the broker and restarting it, the remaining messages will be delivered when the client
is restarted, so they are not lost.

While investigating this I found that there is a typo in the signature of various methods (subcription instead of subScription).
This typo is visible in the MBeans jconsole environment. (see screendump)

I created a patch for this (see attachment) and surprise,
I cannot reproduce the durable topic problem...",Testing against current SVN version with Java1.5 on Linux,fullung,tvijlbrief,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/07 13:48;tvijlbrief;ASF.LICENSE.NOT.GRANTED--SubscriptionPatch.txt;https://issues.apache.org/jira/secure/attachment/12460788/ASF.LICENSE.NOT.GRANTED--SubscriptionPatch.txt","03/Feb/07 13:48;tvijlbrief;ASF.LICENSE.NOT.GRANTED--mbean.png;https://issues.apache.org/jira/secure/attachment/12460640/ASF.LICENSE.NOT.GRANTED--mbean.png",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-02-03 14:40:31.109,,,false,,,,,,,,,,,,,,,,,84715,,,Fri Jul 13 08:37:42 UTC 2007,,,,Patch Available,,,,"0|i0s1br:",161691,,,,,,,,,,,,,,,,,,,"03/Feb/07 14:40;fullung;There's another MBean where Dispatch is misspelled as Dispach.","04/Feb/07 08:05;tvijlbrief;I could reproduce the problem again, but it does not always happen.

I'll try to create a unit test.

If someone else wants to take a look at it,
you can reproduce it by running my jmstransfer program:

http://www.v7f.eu/public/jms/

If you transfer a file of a few megabytes and interrupt the
durable receiver halfway then restarting it will often
block the receiver. Rebooting ActiveMQ
fixes this...

Scenario: Send the file:

jmsstream --topic topic/BigDurable --dest demo --timeout 0 /vmlinuz

Start the receiver and interrupt it:

jmsstream --topic topic/BigDurable --ident MyName --dest demo --prefix ./ --verbose
New dest: .//vmlinuz
Request: 1
Request: 2
Request: 3
CTRL-C typed here

When you restart the receiver it just hangs with 4 messages in the queue



","12/Jun/07 09:48;jstrachan;added an affected version","12/Jun/07 10:30;jstrachan;Fancy taking a stab at these Adrian? :)","13/Jul/07 08:37;aco;Hi James,

Just wondering, theres some typo in the openwire classes regarding the spelling of subscription, wondering if we can just change it. I've noticed that some of the classes deprecated the wrongly spelled method, should I use this approach also?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leak: OutOfMemoryException throws if TopicSubscriber.receive(timeout) is used to pull JMS messages,AMQ-1115,12482935,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,samjoe9998,samjoe9998,04/Jan/07 15:36,29/Aug/09 05:55,30/Jan/20 16:57,29/Aug/09 05:55,4.1.0,,,,,,5.3.0,,,JMS client,,,,0,"Attached sources can generate OutOfMemoryException when ActiveMQ pulls messages by using TopicSubscriber.receive(timeout), on the other hand, if I use callback TopicSubscriber.onMessage(), all the messages are received without any problem. Please see README.TXT for detail usage of the program.

Assume I set prefetch=50, publisherCount=10, subscriberCount=10, each publisher publishs 500 messages, and each message size is 100kb,

If I use callback (option -msgcallback given in command line), e.g., TopicSubscriber.onMessage(), all 50,000 messages are received without error. 

if I don't use callback (option -msgcallback not given in command line), e.g., TopicSubscriber.receive(timeout), after receiving about a thousand of messages, OutOfMemory error occurs, and the program starts to throw Exception.


","Windows XP Professional, JDK 1.5",carloc,samjoe9998,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/07 15:36;samjoe9998;ASF.LICENSE.NOT.GRANTED--ActiveMq Tester.zip;https://issues.apache.org/jira/secure/attachment/12460830/ASF.LICENSE.NOT.GRANTED--ActiveMq+Tester.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-08-29 05:55:42.14,,,false,,,,,,,,,,,,,,,,,84488,,,Sat Aug 29 05:55:42 UTC 2009,,,,,,,,"0|i0s1av:",161687,,,,,,,,,,,,,,,,,,,"29/Aug/09 05:55;rajdavies;Set a suitable pre-fetch policy for the subscriber",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveIO does not close ControlFile ,AMQ-1380,12483018,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,jpkutner,jpkutner,05/Sep/07 16:15,24/Jul/09 08:33,30/Jan/20 16:57,24/Jul/09 08:33,4.1.1,,,,,,5.3.0,,,Broker,,,,7,"The following exception is thrown from an ActiveMQ instance that is in Slave mode that causes it to crash.

java.io.FileNotFoundException: ***/*******/*****/*******/journal/control.dat (Too many open files)
        at java.io.RandomAccessFile.open(Native Method)
        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)
        at org.apache.activeio.journal.active.ControlFile.<init>(ControlFile.java:60)
        at org.apache.activeio.journal.active.LogFileManager.initialize(LogFileManager.java:119)
        at org.apache.activeio.journal.active.LogFileManager.<init>(LogFileManager.java:102)
        at org.apache.activeio.journal.active.JournalImpl.<init>(JournalImpl.java:101)
        at org.apache.activemq.store.DefaultPersistenceAdapterFactory.createJournal(DefaultPersistenceAdapterFactory.java:224)
        at org.apache.activemq.store.DefaultPersistenceAdapterFactory.getJournal(DefaultPersistenceAdapterFactory.java:132)
        at org.apache.activemq.store.DefaultPersistenceAdapterFactory.createPersistenceAdapter(DefaultPersistenceAdapterFactory.java:70)
        at org.apache.activemq.store.PersistenceAdapterFactoryBean.getObject(PersistenceAdapterFactoryBean.java:35)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectFromFactoryBean(AbstractBeanFactory.java:994)
        ... 41 more

The problem is that each time ActiveIO checks to see if control.dat is locked it creates a new java.io.RandomAccessFile.  If the control.dat file is locked, it fails to close the RandomAccessFile.

This exception always will be thrown from an instance in Shared-File-System Slave mode that continues to check the Journal file (which the Master has locked).  But the rate at which is is thrown depends on the maximum number of files the OS allows to be open.  You can check how many files are open with 'ulimit -a'",All,akuhtz,jmoran,john.greeley,palmsun,vschrader,,,,,,,,,,,,,,,,,,,,,,,"05/Sep/07 16:15;jpkutner;ASF.LICENSE.NOT.GRANTED--patch.txt;https://issues.apache.org/jira/secure/attachment/12460809/ASF.LICENSE.NOT.GRANTED--patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-09-11 10:03:06.361,,,false,,,,,,,,,,,,,,,,,84544,,,Fri Jul 24 08:33:57 UTC 2009,,,,Patch Available,,,,"0|i0s1c7:",161693,,,,,,,,,,,,,,,,,,,"11/Sep/07 10:03;lauvigne;I'm having the same problem.

This patch solve it.

Could you add this issue at 4.1.2 RoadMap. 

Thanks Joe for this patch.","28/Jan/08 04:20;palmsun;This patch is still not part of ActiveMQ 5.0,  where slave file handle leaks are still an issue. I manually applied this patch and it fixed the problem. Why is this patch not part of 5.0? Running a master/slave (persistence based on journal file-system) using a conf file below, leads to the crash of the slave after a few hours, due to running out of open files. If you monitor the number of open files (lsof | wc -l), you'll see that the number of open files keeps increasing every 10 seconds. With this patch, this is no-longer a problem. Please include this patch in the release. Here is the conf file that I've used for master/slave (the only difference is that the value of the IP address in the  broker name and the  transport connector)

<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.org/config/1.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.org/config/1.0 http://activemq.apache.org/schema/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

  <!-- Allows us to use system properties as variables in this configuration file -->
  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
  
  <broker xmlns=""http://activemq.org/config/1.0"" brokerName=""10.0.1.200"" useJmx=""false"">
  
    <!-- The transport connectors ActiveMQ will listen to -->
    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://10.0.1.200:61616?trace=true""/>
    </transportConnectors>
	<persistenceAdapter>
	      <journaledJDBC dataDirectory=""/Users/sjavey/amq-broker-data""/>
	</persistenceAdapter>

  </broker>

  <!-- An embedded servlet engine for serving up the Admin console -->
  <jetty xmlns=""http://mortbay.com/schemas/jetty/1.0"">
    <connectors>
      <nioConnector port=""8161"" />
    </connectors>

    <handlers>
      <webAppContext contextPath=""/admin"" resourceBase=""${activemq.base}/webapps/admin"" logUrlOnStart=""true"" />
    </handlers>
  </jetty>
  
</beans>","28/Jan/08 06:04;palmsun;Why the activeio-core in ActiveMQ lib (activeio-core-3.1-SNAPSHOT.jar) is still labeled as SNAPSHOT? is this a bug in the build label? It is odd to have 5.0 as a released version but it still includes a SNAPSHOT jar. ","09/Apr/08 13:52;chirino;Patch applied in rev 646352","12/Sep/08 00:14;vadimos;It does not look like the patch made it into activeio-core-3.1.0 which is included in 5.1.0","03/Nov/08 13:54;dmiranda;hello Friends!

I'd like to know how can I apply that patch? I've tried to find a way, but I can't find out anything. 

can anybody give some help?

Thank you!
","24/Jul/09 08:33;dejanb;ActiveIO 3.1.2 has just been released with this patch included. It will be included by default in 5.3.0. For earlier versions, download the jar from https://repository.apache.org/content/repositories/releases/org/apache/activemq/activeio-core/3.1.2/ and put it in lib/optional folder.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
dangling thread after shutdown broker with a managed transport,AMQ-1118,12482606,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,chrish,chrish,05/Jan/07 14:47,08/Jul/09 13:32,30/Jan/20 16:57,08/Jul/09 13:32,4.0,4.0.1,4.0.2,,,,5.3.0,,,Broker,,,,0,"I ran into a problem in which I end up with an orphaned thread every time I bounce a broker with a managed transport.  I realize this may not be a big deal in many scenarios, but we may end up bouncing our broker everytime a user changes some configuration settings in our application and we need the app to run indefinitely.  So orphaned threads are a concern to me.
 
I traced it down to BrokerService.startTransportConnector().
 
In this function, if isUseJmx() returns true, the connector is decorated/replaced through a call to connector.asManagedConnector(). Turns out the broker never stores the reference to the newly created managed connector anywhere.  I added transportConnectors.add(connector)
to add the new managed connector to the broker's container of connectors and it seems to work in that all threads are shutdown cleanly even when the transport connector is managed.
 ","Windows XP, demand forwarding, failover == true",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-07-08 13:32:15.881,,,false,,,,,,,,,,,,,,,,,84308,,,Wed Jul 08 13:32:15 UTC 2009,,,,,,,,"0|i180yf:",254957,,,,,,,,,,,,,,,,,,,"08/Jul/09 13:32;gtully;through code inspection, this appears to be fixed on trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad conversion of nonexistent data in MapMessage,AMQ-1282,12482987,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,eharold,eharold,14/Jun/07 19:20,07/Jul/09 05:34,30/Jan/20 16:57,07/Jul/09 05:34,4.1.1,,,,,,5.3.0,,,JMS client,,,,0,"Consider simple reception code like this:

        MapMessage message = (MapMessage) consumer.receive(1000);
        int x = message.getInt(""foo""));

I notice that x is now set to zero even though there was no ""foo"" value in the map. I would have expected an exception.

According to Gaurav Hariani <gaurav@blackspark.com> 	

also from the spec api: http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MapMessage.html

    Attempting to read a null value as a primitive type must be treated as calling the primitive's corresponding valueOf(String) conversion method with a null value. Since char does not support a String conversion, attempting to read a null value as a char must throw a NullPointerException.

.. so you are right that it is a bug ... since Integer.valueOf(null) throws an Exception",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Jun/07 13:58;eharold;MapMessageTest.java;https://issues.apache.org/jira/secure/attachment/12460882/MapMessageTest.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-02 16:35:02.869,,,false,,,,,,,,,,,,,,,,,84572,,,Tue Jul 07 05:34:28 UTC 2009,,,,,,,,"0|i14c7j:",233441,,,,,,,,,,,,,,,,,,,"15/Jun/07 13:56;eharold;In fact this fails for all types except char and boolean as the following unit tests demonstrate:


import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.MapMessage;
import javax.jms.Session;

import org.apache.activemq.ActiveMQConnectionFactory;

import junit.framework.TestCase;

public class MapMessageTest extends TestCase {

    private ConnectionFactory factory;
    private Connection connection;   
    private MapMessage message;
    
    protected void setUp() throws Exception {
        factory = new ActiveMQConnectionFactory(""vm://localhost?broker.persistent=false"");
        connection = factory.createConnection();
        connection.start();             
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        message = session.createMapMessage();
        super.setUp();
    }
    
    protected void tearDown() throws Exception {
        connection.close();
        super.tearDown();
    }    
    
    
    public void testUnmappedBooleanMessage() throws JMSException {
        
        Object expected;
        try {
            expected = Boolean.valueOf(null);
        }
        catch (Exception ex) {
            expected = ex;
        }

        try {
            Boolean actual = message.getBoolean(""foo"");
            assertEquals(expected, actual);
        }
        catch (Exception ex) {
            assertEquals(expected, ex);
        }
        
    }
    
    public void testUnmappedIntegerMessage() throws JMSException {
        
        Object expected;
        try {
            expected = Integer.valueOf(null);
        }
        catch (Exception ex) {
            expected = ex;
        }

        try {
            Integer actual = message.getInt(""foo"");
            assertEquals(expected, actual);
        }
        catch (Exception ex) {
            assertEquals(expected, ex);
        }
        
    }
    
    
    public void testUnmappedShortMessage() throws JMSException {
        
        Object expected;
        try {
            expected = Short.valueOf(null);
        }
        catch (Exception ex) {
            expected = ex;
        }

        try {
            Short actual = message.getShort(""foo"");
            assertEquals(expected, actual);
        }
        catch (Exception ex) {
            assertEquals(expected, ex);
        }
        
    }
    
    
    public void testUnmappedLongMessage() throws JMSException {
        
        Object expected;
        try {
            expected = Long.valueOf(null);
        }
        catch (Exception ex) {
            expected = ex;
        }

        try {
            Long actual = message.getLong(""foo"");
            assertEquals(expected, actual);
        }
        catch (Exception ex) {
            assertEquals(expected, ex);
        }
        
    }
    
    
    public void testUnmappedStringMessage() throws JMSException {
        Object expected;
        try {
            expected = String.valueOf(null);
        }
        catch (Exception ex) {
            expected = ex;
        }

        try {
            String actual = message.getString(""foo"");
            assertEquals(expected, actual);
        }
        catch (Exception ex) {
            assertEquals(expected, ex);
        }
    }
   

    public void testUnmappedCharMessage() throws JMSException {
        try {
            message.getChar(""foo"");
            fail(""should have thrown NullPointerException"");
        }
        catch (NullPointerException success) {
            assertNotNull(success);
        }
    } 
    
    public void testUnmappedByteMessage() throws JMSException {
        Object expected;
        try {
            expected = Byte.valueOf(null);
        }
        catch (Exception ex) {
            expected = ex;
        }

        try {
            Byte actual = message.getByte(""foo"");
            assertEquals(expected, actual);
        }
        catch (Exception ex) {
            assertEquals(expected, ex);
        }


    }
    
    public void testUnmappedDoubleMessage() throws JMSException {

        Object expected;
        try {
            expected = Double.valueOf(null);
        }
        catch (Exception ex) {
            expected = ex;
        }

        try {
            Double actual = message.getDouble(""foo"");
            assertEquals(expected, actual);
        }
        catch (Exception ex) {
            assertEquals(expected, ex);
        }


    }
    
    public void testUnmappedFloatMessage() throws JMSException {
        
        Object expected;
        try {
            expected = Float.valueOf(null);
        }
        catch (Exception ex) {
            expected = ex;
        }

        try {
            Float actual = message.getFloat(""foo"");
            assertEquals(expected, actual);
        }
        catch (Exception ex) {
            assertEquals(expected, ex);
        }

    }
    
}","15/Jun/07 13:58;eharold;JUnit test case demonstrating bugs in MapMessage class with conversion of unmapped values","02/Sep/08 16:35;memelet;#getBytes also appears to be incorrect in two ways. 

First, from  [MapMessage.html|http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MapMessage.html] this method should return null if the entry does not exist. From the code, it appears as if MessageFormatException is thrown instead.

Second, if an attempt is made to MessageFormatException for a null value, an NPE will be generated due to the ""value.getClass().getName()"".

{code}
public byte[] getBytes(String name) throws JMSException {
        initializeReading();
        Object value = map.get(name);
        if (value instanceof byte[]) {
            return (byte[])value;
        } else {
            throw new MessageFormatException("" cannot read a byte[] from "" + value.getClass().getName());
        }
    }
{code}
","07/Jul/09 05:34;rajdavies;Fixed by SVN revision 791708",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't use SQL Server 2005 for persistence,AMQ-1086,12482595,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,tony.voss,tony.voss,04/Dec/06 18:19,24/Jun/09 12:09,30/Jan/20 16:57,24/Jun/09 12:09,4.1.0,,,,,,5.3.0,,,Message Store,,,,3,"When using SQL Server 2005 for persistence the following exception is thrown:

java.sql.SQLException: Line 1: FOR UPDATE clause allowed only for DECLARE CURSOR.
        at net.sourceforge.jtds.jdbc.SQLDiagnostic.addDiagnostic(SQLDiagnostic.java:365)
        at net.sourceforge.jtds.jdbc.TdsCore.tdsErrorToken(TdsCore.java:2781)
        at net.sourceforge.jtds.jdbc.TdsCore.nextToken(TdsCore.java:2224)
        at net.sourceforge.jtds.jdbc.TdsCore.getMoreResults(TdsCore.java:628)
        at net.sourceforge.jtds.jdbc.JtdsStatement.processResults(JtdsStatement.java:525)
        at net.sourceforge.jtds.jdbc.JtdsStatement.executeSQL(JtdsStatement.java:487)
        at net.sourceforge.jtds.jdbc.JtdsPreparedStatement.execute(JtdsPreparedStatement.java:475)
        at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.start(DefaultDatabaseLocker.java:59)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:175)
        at org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:223)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:63)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:159)
        at org.apache.activemq.console.Main.main(Main.java:91)",,aguther,fretzlaff,john.greeley,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1191,"06/Jan/07 00:08;dbaskar;MSSql2005.zip;https://issues.apache.org/jira/secure/attachment/12460630/MSSql2005.zip","12/Jun/07 20:50;mythz;activemq2000.log;https://issues.apache.org/jira/secure/attachment/12460742/activemq2000.log","12/Jun/07 20:50;mythz;activemq2005.log;https://issues.apache.org/jira/secure/attachment/12460645/activemq2005.log",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2007-01-06 00:09:56.443,,,false,,,,,,,,,,,,,,,,,84493,,,Wed Jun 24 12:09:49 UTC 2009,,,,,,,,"0|i0s20f:",161802,Regression,,,,,,,,,,,,,,,,,,"06/Jan/07 00:09;dbaskar;I was learning Persistence using SQL 2005 and I got the same error mentioned.  Please see MSSql2005.zip file attached. It seemed to have resolved the issue.","12/Jun/07 10:01;jstrachan;AFAIK this is now resolved in 5.0.0. Any chance you could test it to confirm? Let us know if not and we can reopen this issu","12/Jun/07 20:45;mythz;This is still an issue using the latest snapshot taken on 07 June 2007.

This problem exists using both 2000 and 2005 JDBC drivers.","12/Jun/07 20:46;mythz;log file using 2005 JDBC drivers","12/Jun/07 20:50;mythz;I have attached the log files using both SQL 2000 and 2005 JDBC drivers.
This issue is still outstanding. A fix for this issue is here https://issues.apache.org/activemq/browse/AMQ-1191","24/Jun/09 12:09;gtully;Fix from  https://issues.apache.org/activemq/browse/AMQ-1191 applied ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with REST,AMQ-1480,12481984,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,marlet,marlet,29/Oct/07 12:19,26/May/09 09:05,30/Jan/20 16:57,26/May/09 09:05,5.0.0,,,,,,5.3.0,,,,,,,2,"Every time I read one message (with REST/GET) from a queue with more than 1 message,  two messages are deleted.",linux / jdk 1.5.0,john.greeley,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/07 20:29;marlet;patch.txt;https://issues.apache.org/jira/secure/attachment/12460896/patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-05-26 09:05:58.71,,,false,,,,,,,,,,,,,,,,,84684,,,Tue May 26 09:05:58 UTC 2009,,,,,,,,"0|i0s2vr:",161943,,,,,,,,,,,,,,,,,,,"29/Oct/07 13:11;marlet;http://www.nabble.com/REST-problem-tf4707322s2354.html","02/Nov/07 07:50;marlet;Please commit!","07/Jan/08 16:47;marlet;Lets assume we want to consume one message from a queue that contains two messages, using ActiveMQ's REST Interface with a HTTP GET request.
Looking at MessageServlet.java in the activemq-web module, the method doGet() calls the method doMessages() :
{noformat}
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        doMessages(request, response, -1);
    }
{noformat}

As we are not using AJAX, the variable maxMessages gets the value 1:
{noformat}
protected void doMessages(HttpServletRequest request, HttpServletResponse response, int maxMessages) throws ServletException,  IOException {
    ...
    boolean ajax = isRicoAjax(request);
    if (!ajax) {
        maxMessages = 1;
    }
    ...
}
{noformat}

In the synchronized()-block, we are consuming the first message in the queue:
{noformat}
synchronized(consumer){
    ...
    // Look for any available messages
    message = consumer.receiveNoWait();
    ...
}
{noformat}
Then, as message is not null and maxMessages has the value 1, we are entering the while-block:
{noformat}
               // send a response for each available message (up to max
               // messages)
               while ((maxMessages < 0 || messages < maxMessages) && message != null) {
                        // System.err.println(""message[""+messages+""]=""+message);
                        if (ajax) {
                            writer.print(""<response type='object' id='"");
                            writer.print(request.getParameter(""id""));
                            writer.println(""'>"");
                        } else {
                            // only ever 1 message for non ajax!
                            setResponseHeaders(response, message);
                        }

                        writeMessageResponse(writer, message);

                        if (ajax) {
                            writer.println(""</response>"");
                        }

                        // look for next message
                        message = consumer.receiveNoWait();
                        messages++;
                    } 
{noformat}
And here sitts the bug in my opinion. The method consumer.receiveNoWait() is called a second time. That means, our second message gets deleted from the queue.

So I put the receiveNoWait() call in an if(ajax) block:
{noformat}                        
                       if (ajax){
                        	// look for next message
                        	message = consumer.receiveNoWait();
                        }
{noformat}

This works fine for me.","26/May/09 09:05;rajdavies;This problem looks resolved now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Setting ""time to live"" to >0 fails delivery from linux to window",AMQ-975,12482891,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,seeshuen,seeshuen,13/Oct/06 19:45,23/May/09 09:00,30/Jan/20 16:57,23/May/09 09:00,4.0,4.0.1,,,,,5.3.0,,,JMS client,,,,1,"I found this problem on 4.0 and 4.0.1 running on Linux. 

Problem reproduction steps: 
1. start activemq server on a linux server 
2. start a consumer client on a window XP 
3. start a producer client on same linux machine, setting timeToLive to any value > 0 
4. consumer client will not receive any messages 

5. set the time to live to 0, the consumer client will receive messages, or 
6. set time to live to 0 or not, consumer client running on linux will receive messages too, or 
7. no problem too if producer runs on xp and consumer runs on linux 

And apparently it does not really matter where the activemq server runs, linix or xp. 
","Linux, window XP",chily,seeshuen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-03-05 21:37:12.392,,,false,,,,,,,,,,,,,,,,,84314,,,Sat May 23 09:00:46 UTC 2009,,,,,,,,"0|i0s2af:",161847,,,,,,,,,,,,,,,,,,,"05/Mar/09 21:37;troydm;Same problem on activemq 5.2.0 running on opensolaris server 
message producer is running on the same server publishing messages on topic with time to live set to 30000
message consumer was tested both on windows xp client and linux box client... not even single message was recieved

on contrary
both message producer and consumer running on windows xp with the same settings work just fine..

I think the problem is in message producer code when it's running on unix type operating system","06/Mar/09 14:50;felixehm;Hi Dmitry,

have you checked that the time on your machine is synchronized? If not there is a high chance that the message expires before the other machine can get  it. Then you will never be able to receive it.

ActiveMQSession.send(..) does the following to determine the expiration : 
expiration = timeToLive + System.currentTimeMillis();


Cheers,
Felix
","06/Apr/09 21:12;chily;i my case i don't have syncrhonized the machines, because producers, consumers and brokers (broker network) runs in differents countriesand are administrated by different people.
I am trying to find where the broker does the control for message expiration  (timeToLive) for MessageListener.","23/May/09 09:00;rajdavies;You should set the  timestamp on messages on your broker by using the TimeStampBrokerPlugin - 
http://activemq.apache.org/maven/activemq-core/apidocs/org/apache/activemq/broker/util/TimeStampingBrokerPlugin.html

see http://activemq.apache.org/interceptors.html for info on how to set a broker interceptor",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""TimeToLive"" doesn't work on MessageListener",AMQ-1072,12482958,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,void,void,27/Nov/06 11:44,06/Apr/09 21:30,30/Jan/20 16:57,30/Jul/07 16:03,4.0.1,,,,,,5.0.0,,,JMS client,,,,2,"When a queue message is consumed using MessageListener throught the setMessageListener method,
it could recieve the messages even if they are expired. (While using consumer.receive() will discard them).

Reproduce Steps:
1. deliver a number of message to a queue with a short expire time.
2. wait until the message should be expired.
3. use MessageConsumer.receive() method to receive the messages,
     -- You should not receive any messages, and through the monitor console, you should see some
         messages are left and not discarded.
4. stop the receive() method.
5. add a MessageListener to the same queue, the messages which found left is received by the
     onMessage() method.

ps. if step3 is skipped, likely you would receive all the expired message.

",,chily,ephemeron,scottdawson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-29 08:55:16.0,,,false,,,,,,,,,,,,,,,,,84365,,,Mon Apr 06 21:30:20 UTC 2009,,,,,,,,"0|i0s1a7:",161684,,,,,,,,,,,,,,,,,,,"29/Nov/06 08:55;jstrachan;This has been fixed in 4.1","09/Jan/07 13:02;cisco26;
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12847
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12846
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12845
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12844
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12843
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12840
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12835
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12834
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12832
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12831
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12828
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12827
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12826
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12825
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12824
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12823
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12822
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12821
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12820
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12819
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12818
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12817
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12816
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12815
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12814
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12813
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12812
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12811
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12810
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12808
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12807
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12806
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12805
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12804
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12802
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12801
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12800
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12799
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12798
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12797
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12796
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12795
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12794
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12793
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12792
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12791
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12790
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12789
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12788
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12787
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12786
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12785
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12784
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12783
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12782
http://www.srcf.ucam.org/curling/forum/phpBB-2.0.17/phpBB2/viewtopic.php?t=12780

http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=451
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=450
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=449
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=448
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=447
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=446
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=445
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=444
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=443
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=442
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=441
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=440
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=439
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=438
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=437
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=436
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=435
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=434
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=433
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=432
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=431
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=430
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=429
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=428
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=427
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=426
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=425
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=424
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=423
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=422
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=421
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=420
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=419
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=418
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=417
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=416
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=415
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=414
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=413
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=412
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=411
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=410
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=409
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=408
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=407
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=406
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=405
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=404
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=403
http://www.ibiblio.org/uncstv/forum/viewtopic.php?t=402
http://tnij.org/qlk
http://tnij.org/qlm
http://tnij.org/qlq
http://tnij.org/qlt
http://tnij.org/qlu
http://tnij.org/qlv
http://tnij.org/qlw
http://tnij.org/qly
http://tnij.org/qlz
http://tnij.org/ql0
http://tnij.org/ql1
http://tnij.org/ql2
http://tnij.org/ql3
http://tnij.org/ql4
http://tnij.org/ql5
http://lame.name/1365
http://lame.name/1366
http://lame.name/1367
http://lame.name/1368
http://lame.name/1369
http://lame.name/1370
http://lame.name/1371
http://lame.name/1372
http://lame.name/1373
http://lame.name/1374
http://lame.name/1375
http://lame.name/1376
http://lame.name/1377
http://lame.name/1378
http://lame.name/1379
http://lame.name/1380
http://lame.name/1381
http://lame.name/1382
http://lame.name/1383
http://lame.name/1384
http://lame.name/1385
http://lame.name/1386
http://lame.name/1387
http://lame.name/1388
http://lame.name/1389
http://lame.name/1390
http://lame.name/1391
http://lame.name/1392
http://lame.name/1393
http://lame.name/1394
http://lame.name/1395
http://lame.name/1396
http://lame.name/1397
http://lame.name/1398
http://lame.name/1399
http://lame.name/1400
http://lame.name/1401
http://lame.name/1402
http://lame.name/1403
http://lame.name/1404
http://lame.name/1405
http://lame.name/1406
http://lame.name/1407
http://lame.name/1408
http://lame.name/1409
http://lame.name/1410
http://lame.name/1411
http://lame.name/1412
http://lame.name/1413
http://lame.name/1414
http://lame.name/1415
http://lame.name/1416
http://lame.name/1417
http://lame.name/1418
http://lame.name/1419
http://lame.name/1420
http://lame.name/1421
http://lame.name/1422
http://lame.name/1423
http://lame.name/1424
http://lame.name/1425
http://lame.name/1426
http://lame.name/1427
http://lame.name/1428
http://lame.name/1429
http://lame.name/1430
http://lame.name/1431
http://lame.name/1432
http://lame.name/1433
http://lame.name/1434
http://lame.name/1435
http://lame.name/1436
http://lame.name/1437
http://lame.name/1438
http://lame.name/1439
http://lame.name/1440
http://lame.name/1441
http://lame.name/1442
http://lame.name/1443
http://lame.name/1444
http://lame.name/1445
http://lame.name/1447
http://lame.name/1448
http://lame.name/1449
http://lame.name/1450
http://lame.name/1451
http://lame.name/1452
http://lame.name/1453
http://lame.name/1454
http://lame.name/1455
http://lame.name/1456
http://lame.name/1457
http://lame.name/1458
http://lame.name/1459
http://lame.name/1460
http://lame.name/1461
http://lame.name/1462
http://lame.name/1463
http://lame.name/1464
http://lame.name/1465
http://www.board-z.de/board12739/
http://www.board-z.de/board12739/forum51689.html
http://www.board-z.de/board12739/topic65887.html
http://www.board-z.de/board12739/topic65886.html
http://www.board-z.de/board12739/topic65885.html
http://www.board-z.de/board12739/topic65884.html
http://www.board-z.de/board12739/topic65883.html
http://www.board-z.de/board12739/topic65882.html
http://www.board-z.de/board12739/topic65881.html
http://www.board-z.de/board12739/topic65880.html
http://www.board-z.de/board12739/topic65879.html
http://www.board-z.de/board12739/topic65878.html
http://www.board-z.de/board12739/topic65876.html
http://www.board-z.de/board12739/topic65875.html
http://www.board-z.de/board12739/topic65874.html
http://www.board-z.de/board12739/topic65873.html
http://www.board-z.de/board12739/topic65872.html
http://www.board-z.de/board12739/topic65871.html
http://www.board-z.de/board12739/topic65870.html
http://www.board-z.de/board12739/topic65868.html
http://www.board-z.de/board12739/topic65866.html
http://www.board-z.de/board12739/topic65865.html
http://www.board-z.de/board12739/topic65863.html
http://www.board-z.de/board12739/topic65862.html
http://www.board-z.de/board12739/topic65861.html
http://www.board-z.de/board12739/topic65860.html
http://www.board-z.de/board12739/topic65859.html
http://www.board-z.de/board12739/topic65857.html
http://www.board-z.de/board12739/topic65856.html
http://www.board-z.de/board12739/topic65855.html
http://www.board-z.de/board12739/topic65854.html
http://www.board-z.de/board12739/topic65853.html
http://www.board-z.de/board12739/topic65852.html
http://www.board-z.de/board12739/topic65850.html
http://www.board-z.de/board12739/topic65849.html
http://www.board-z.de/board12739/topic65848.html
http://www.board-z.de/board12739/topic65847.html
http://www.board-z.de/board12739/topic65846.html
http://www.board-z.de/board12739/topic65844.html
http://www.board-z.de/board12739/topic65843.html
http://www.board-z.de/board12739/topic65840.html
http://www.board-z.de/board12739/topic65838.html
http://www.board-z.de/board12739/topic65837.html
http://www.board-z.de/board12739/topic65836.html
http://www.board-z.de/board12739/topic65835.html
http://www.board-z.de/board12739/topic65834.html
http://www.board-z.de/board12739/topic65833.html
http://www.board-z.de/board12739/topic65832.html
http://www.board-z.de/board12739/topic65830.html
http://www.board-z.de/board12739/topic65829.html
http://www.board-z.de/board12739/topic65823.html
http://www.board-z.de/board12739/topic65822.html
http://www.board-z.de/board12739/topic65821.html
http://www.board-z.de/board12739/topic65820.html
http://www.board-z.de/board12739/topic65819.html
http://www.board-z.de/board12739/topic65818.html
http://www.board-z.de/board12739/topic65817.html
http://www.board-z.de/board12739/topic65816.html
http://www.board-z.de/board12739/topic65815.html
http://www.board-z.de/board12739/topic65814.html
http://www.board-z.de/board12739/topic65813.html
http://www.board-z.de/board12739/topic65812.html
http://www.board-z.de/board12739/topic65811.html
http://www.board-z.de/board12739/topic65809.html
http://www.board-z.de/board12739/topic65808.html
http://www.board-z.de/board12739/topic65806.html
http://www.board-z.de/board12739/topic65805.html
http://www.board-z.de/board12739/topic65804.html
http://www.board-z.de/board12739/topic65803.html
http://www.board-z.de/board12739/topic65802.html
http://www.board-z.de/board12739/topic65801.html
http://www.board-z.de/board12739/topic65800.html
http://www.board-z.de/board12739/topic65799.html
http://www.board-z.de/board12739/topic65798.html
http://www.board-z.de/board12739/topic65797.html
http://www.board-z.de/board12739/topic65795.html
http://www.board-z.de/board12739/topic65794.html
http://www.board-z.de/board12739/topic65793.html
http://www.board-z.de/board12739/topic65791.html
http://www.board-z.de/board12739/topic65790.html
http://www.board-z.de/board12739/topic65788.html
http://www.board-z.de/board12739/topic65787.html
http://www.board-z.de/board12739/topic65786.html
http://www.board-z.de/board12739/topic65783.html
http://www.board-z.de/board12739/topic65782.html
http://www.board-z.de/board12739/topic65780.html
http://www.board-z.de/board12739/topic65779.html
http://www.board-z.de/board12739/topic65778.html
http://www.board-z.de/board12739/topic65777.html
http://www.board-z.de/board12739/topic65775.html
http://www.board-z.de/board12739/topic65773.html
http://www.board-z.de/board12739/topic65771.html
http://www.board-z.de/board12739/topic65768.html
http://www.board-z.de/board12739/topic65767.html
http://www.board-z.de/board12739/topic65766.html
http://www.board-z.de/board12739/topic65765.html
http://www.board-z.de/board12739/topic65764.html
http://www.board-z.de/board12739/topic65763.html
http://www.board-z.de/board12739/topic65761.html
http://www.board-z.de/board12739/topic65759.html
http://www.board-z.de/board12739/topic65758.html
http://www.board-z.de/board12739/topic65756.html
http://www.board-z.de/board12739/topic65728.html
http://www.board-z.de/board12739/topic65723.html
http://www.board-z.de/board12739/topic65722.html
http://www.board-z.de/board12739/topic65681.html
http://www.board-z.de/board12739/topic65679.html
http://www.board-z.de/board12739/topic65678.html
http://www.board-z.de/board12739/topic65677.html
http://www.board-z.de/board12739/topic65673.html
http://www.board-z.de/board12739/topic65671.html
http://www.board-z.de/board12739/topic65664.html



","04/Jun/07 22:30;kosmada;I believe this issue still exists.

The JmsSendReceiveWithMessageExpirationTest unit test verifies that messages consumed with the receive() method expire properly.  However, if a MessageListener is configured, the messages are received long after they expire.  The unit test does not use a MessageListener, so it does not catch this case.
 
BTW: This is probably the same issue as 936.

","24/Jul/07 15:04;ephemeron;I believe this issue may be related to the behavior I'm observing.  Maybe this is the desired implementation, but it appears to me that in 4.1.1 (possibly others) timeToLive is only enforced by the MessageConsumer receive() method, not the MessageProducer.  This has (for me) the undesired side effect of allowing expired messages to pile up in the MessageProducer queue until the JVM runs out of RAM and the application fails unless a MessageConsumer is connected.  This would also cause MessageListeners to receive all messages, expired or not.

Is that behavior intended?","30/Jul/07 16:03;rajdavies;Fixed by SVN revision 561026","06/Apr/09 21:30;chily;Context:
3 host,  (linux debian) all with DEFERENTS dates (not synchronized)

1- start a broker on machine 1
2- start a producer on machine 2
3- producer send a couple of messages with a short timeToLive (2 or 3 seconds)
4- wait for 5 seconds (or more)
5- start a messageListener on machine 3
6-  surprisingly messageListener recveibe all the messages sent by producer in step 3, when they should not (because of the timeToLive)

The problem is the host where the listener (consumer) runs have a date two or three hours prior of the host for the consumer, and beacause off that the Expiration is always greater than the Listener (consumer) date.

I think expiration should be managed entirelly in the broker not in clientes (ActiveMQQueueReceiver,  etc)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock when shutting down client that is configured with failover=true and is presently disconnected from broker,AMQ-1116,12482172,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chrish,chrish,04/Jan/07 16:32,29/Mar/09 01:08,30/Jan/20 16:57,07/Feb/08 10:03,4.0.2,,,,,,5.1.0,,,Transport,,,,2,"Sounds like a great idea to me :) Please go ahead and submit a jira with the patch and we'll get it integrated ASAP

On 1/4/07, Chris Hofstaedter <chrish@nmwco.com> wrote:
> I ran into this issue as well on <= 4.0.2.  I never tested it against
> 4.1.    The FailoverTransport doesn't shutdown if it is disconnected at
> the time of the shutdown.
>
> I believe that the root cause is in the 
> FailoverTransport.oneway(Command
> command) function which will hold onto the command and keep trying to
> reconnect until the message is sent or the transport is disposed.
>
> I applied a local patch that seems to solve the problem.  Note that 
> I've only tested the patch against 4.0.2.
>
> Specifically, I early return from the oneway function if the command 
> is ShutdownInfo and the connectedTransport is null.  This seems to 
> solve the problem in that I get clean shutdowns on the client when 
> failover is true and the client is presently disconnected.
>
> Does this seem like a reasonable patch?  Should I create a JIRA with 
> this info?
>
>
>
> -----Original Message-----
> From: James Strachan [mailto:james.strachan@gmail.com]
> Sent: Tuesday, December 12, 2006 4:46 AM
> To: activemq-users@geronimo.apache.org
> Subject: Re: failover mode and client shutdown
>
> There could be a bug relating to closes with the failover transport 
> possibly, but the ActiveMQConnection does wait up to the closeTimeout 
> for a close to succeed before shutting down - so you could try reduce 
> the timeout.
>
> http://incubator.apache.org/activemq/maven/activemq-core/apidocs/org/a
> pa
> che/activemq/ActiveMQConnection.html#setCloseTimeout(int)
>
>
> On 12/12/06, Keith Irwin <keith.irwin@gmail.com> wrote:
> > Folks--
> >
> > When we have clients running and we take down AMQ (<= 4.1.0), then 
> > attempt to shutdown the clients with Control-C (rather than kill the 
> > JVM with a -9), the clients won't shut down.  It's as if a ""close"" 
> > on the failover connection never reaches the amq client classes.
> >
> > I note that in the 4.1.0 release notes, this issue is referenced, 
> > and the advice is to set the maxReconnectAttempts (or similar) 
> > property to something non-zero.
> >
> > The problem is that we don't want there to be a max number of 
> > attempts.  Unless we specifically want to take down the client (say, 
> > for an apt-get package upgrade), we want it to keep on trying 
> > forever.
> >
> > SO, my question: Is there an architectural reason for not being able 
> > to close a failover connection if AMQ is down?
> >
> > If it isn't impossible due to tradeoffs elsewhere in the code base, 
> > we might be willing to submit a patch to fix the issue.
> >
> > Our only other recourse is to attempt to close the connections in 
> > separate threads, then timeout those threads after a while and fall 
> > out the end of the java process.
> >
> > For instance:
> >
> >   Thread th = new Thread(new Runnable() {
> >       public void run() {
> >          connection.close();
> >       }
> >    });
> >    th.start();
> >
> >    // give up after 2 seconds
> >    Thread.currentThread().join(2000);
> >
> > I guess this is do-able, but it seems, you know, some how, well,
> wrong.
> >
> > So, is it worth investigating a patch to AMQ?
> >
> > Keith
> >
",,alewando,bhumphre,cameronbraid,jbrosenberg,tsigelnik,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/08 05:47;jbrosenberg;ConnectionPool.java;https://issues.apache.org/jira/secure/attachment/12460920/ConnectionPool.java","28/Mar/07 13:25;chrish;DemandForwardingBridgeSupport.java;https://issues.apache.org/jira/secure/attachment/12460952/DemandForwardingBridgeSupport.java","07/Feb/08 05:47;jbrosenberg;FailoverTransport.java;https://issues.apache.org/jira/secure/attachment/12460881/FailoverTransport.java","28/Mar/07 13:25;chrish;FailoverTransport.java;https://issues.apache.org/jira/secure/attachment/12460892/FailoverTransport.java","17/May/07 13:45;alewando;FailoverTransport_AMQ-1116.patch;https://issues.apache.org/jira/secure/attachment/12460741/FailoverTransport_AMQ-1116.patch",,,,5.0,,,,,,,,,,,,,,,,,,,,2007-03-28 10:41:10.044,,,false,,,,,,,,,,,,,,,,,84418,,,Sun Mar 29 01:08:50 UTC 2009,,,,,,,,"0|i0s1jz:",161728,,,,,,,,,,,,,,,,,,,"28/Mar/07 10:41;cameronbraid;Is there any chance that this could be fixed for 4.1.1 ?
","28/Mar/07 13:25;chrish;Cameron's recent comment made me realize that I never attached the files with my local patches in them for this issue.  So here they are.  These are 4.0.2 files.  Also there are patches for multiple issues in here.  You can find the blocks of code that patch this issue (for me anyway) by searching for ""AMQ-1116 fix""","17/May/07 13:45;alewando;Patch to prevent ShutdownInfo or RemoveInfo commands from being sent when transport is not connected","17/May/07 13:48;alewando;Just a confirmation that this is still an issue. I've submitted a patch that does basically the same thing that Chris's does, but only affects FailoverTransport. In addition to ignoring ShutdownInfo commands when not connected, it also short-circuits a reply to RemoveInfo, which was also causing a problem.","05/Feb/08 08:56;jbrosenberg;I can confirm that I am seeing this issue, under the latest 5.1-SNAPSHOT.....

The record shows the fixed version is 5.2.0....Is that being actively developed now, or is that just a placeholder to indicate this issue is being scheduled for work after the current 5.1 cycle?

Jason","05/Feb/08 18:20;jbrosenberg;Wanted to add, I applied Adam's patch to the latest 5.1-SNAPSHOT version, and it appears to be working great.

Jason","07/Feb/08 05:47;jbrosenberg;I've attached a patch that I created for several issues, against a recent 5.1-SNAPSHOT revision (svn rev 618082).

The file FailoverTransport.java, includes fixes for 4 issues, including Adam's fix for this issue.

The other issues that this patch includes fixes for are:

AMQ-1116
AMQ-1575
AMQ-1577
AMQ-1581

The file ConnectionPool.java is also needed for the fix for AMQ-1581

I've added comments in the code that clearly indicate which sections apply to which issue, so you can easily take edit to include only the fixes you want specifically.

Jason","07/Feb/08 10:03;rajdavies;Fixed by svn revision 619336","10/Dec/08 04:57;jrepko;I'm not sure that this is actually fixed.   I am currently trying it out with a broker in one VM and a client in another.  If I kill the broker forcibly and then try to execute the close method of ActiveMQConnection, I get stuck in the failover transport until the reconnect tries expires after 10 minutes. 

It gets stuck in the close when it calls doSyncSendPacket() 
<code>
                    if (isConnectionInfoSentToBroker) {
                        // If we announced ourselfs to the broker.. Try to let
                        // the broker
                        // know that the connection is being shutdown.
                        doSyncSendPacket(info.createRemoveCommand(), closeTimeout);
                        doAsyncSendPacket(new ShutdownInfo());
                    }
</code>

This is because another message ack is waiting for the transport to reconnect to be sent and so is holding the writerMutex in MutexTransport.

","29/Mar/09 00:56;bhumphre;I agree with Jay Repko.  I'm using AMQ 5.1.0, I've got the following JUnit test to try to reproduce what I'm experiencing:
{noformat}
  @Test(timeout=15000)
  public void testRetryServerConnectionURLWithNoServer() throws Exception
  {
      final String url=""tcp://localhost:61620"";
      final String clientUrl = ""failover://("" + url + "")?maxReconnectAttempts=0"";
      ActiveMQConnectionFactory activeMQConnectionFactory = new ActiveMQConnectionFactory(clientUrl);
      activeMQConnectionFactory.setTransportListener(new PrintingTransportListener());
      final Connection conn = activeMQConnectionFactory.createConnection();
      ((ActiveMQConnection)conn).setCloseTimeout(5);
      Thread clientThread=new Thread(""AMQTestClientThread"")
      {
          public void run()
          {
              try
              {
                  conn.start();
                  Thread.sleep(2000);
                  conn.stop();
                  conn.close();
              }
              catch(Exception e)
              {
                  thrownException = e;
              }
          }
      };

      clientThread.start();
      Thread.sleep(2000);
      System.out.println(""Attempting to shutdown"");
      conn.close();
      System.out.println(""Shutdown, joining."");
      clientThread.join();
      if(thrownException !=null)
      {
          throw thrownException;
      }
  }

{noformat} 

This test always times out after 15 seconds, setCloseTimeout doesn't seem to change any behavior.

Further, when I kill -3 this, I get the following three thread stack traces (The client thread, the reconnecting thread & the stopping thread:

{noformat} 
""AMQTestClientThread"" prio=1 tid=0x00002aaafc0069f0 nid=0x6f69 in Object.wait() [0x000000004101d000..0x000000004101dc80]
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00002aaadf2bc5f8> (a java.lang.Object)
	at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:407)
	- locked <0x00002aaadf2bc5f8> (a java.lang.Object)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x00002aaadf2bc158> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:74)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:79)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1195)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1289)
	- locked <0x00002aaadf2ab250> (a org.apache.activemq.ActiveMQConnection)
	at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:456)
	at com.kentrox.objectproxy.jms.test.JMSConnectionStateTesting$2.run(JMSConnectionStateTesting.java:235)

""ActiveMQ Task"" daemon prio=1 tid=0x00002aaafc02ab80 nid=0x6f68 in Object.wait() [0x0000000040f1c000..0x0000000040f1ce00]
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00002aaadf2bc618> (a java.lang.Object)
	at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:735)
	- locked <0x00002aaadf2bc618> (a java.lang.Object)
	at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:114)
	- locked <0x00002aaadf2bc608> (a java.lang.Object)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)

""pool-1-thread-1"" prio=1 tid=0x00002aaafc001670 nid=0x6f67 waiting for monitor entry [0x0000000040e1b000..0x0000000040e1bd80]
	at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1258)
	- waiting to lock <0x00002aaadf2ab250> (a org.apache.activemq.ActiveMQConnection)
	at org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:497)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:552)
	at com.kentrox.objectproxy.jms.test.JMSConnectionStateTesting.testRetryServerConnectionURLWithNoServer(JMSConnectionStateTesting.java:250)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)
	at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)
	at org.junit.internal.runners.MethodRoadie$1$1.call(MethodRoadie.java:55)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:269)
	at java.util.concurrent.FutureTask.run(FutureTask.java:123)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
{noformat} 

This may be updated in 5.2.0 but this issue suggests it is fixed in 5.1.0 and I don't believe that to be the case.","29/Mar/09 01:08;bhumphre;Running the same JUnit test as above, 5.2.0 seems to fix this deadlock issue.",,,,,,,,,,,,,,,,,,,,,,,,
Messages received count increases when queue is browsed,AMQ-1368,12482826,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dejanb,anishpathadan,anishpathadan,21/Aug/07 09:41,27/Feb/09 13:17,30/Jan/20 16:57,27/Feb/09 13:17,5.0.0,,,,,,5.2.0,,,,,,,0,"Initialy I had 5 messages in TestQueue, When I browsed the Q and again took the queus page the messages received count became 10.Every time I browses the Q the messages received count keeps on increasing by the initial count.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2009-02-27 13:17:13.166,,,false,,,,,,,,,,,,,,,,,84694,,,Fri Feb 27 13:17:13 UTC 2009,,,,,,,,"0|i181pr:",255080,,,,,,,,,,,,,,,,,,,"27/Feb/09 13:17;dejanb;This has been fixed in 5.2 version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WireFormatNegotiator could hang a client or server connection if the peer disconnects before sending the wire format info,AMQ-789,12481778,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,02/Jul/06 02:00,17/Feb/09 23:18,30/Jan/20 16:57,17/Feb/09 23:18,4.0,,,,,,4.0.2,4.1.0,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-768,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-12-13 15:50:17.554,,,false,,,,,,,,,,,,,,,,,84329,,,Tue Feb 17 23:18:21 UTC 2009,,,,,,,,"0|i1805r:",254828,,,,,,,,,,,,,,,,,,,"02/Jul/06 02:02;chirino;Fix in trunk revision 418497

We now wait up to 15 seconds before timeing out the wireformat negociation phase.","20/Jul/06 05:39;chirino;This should also be backported to 4.0 branch","20/Jul/06 05:40;chirino;A hang could also happen if the transport is stop()ed while a send is being concurrently done.","20/Jul/06 06:02;chirino;commited in 4.0 branch in rev 423792","13/Dec/07 15:50;michaelshaw;I think I might be seeing this in 4.1.1.  
2007-12-13 01:08:16,917 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - Thread-3 - Waking up reconnect task
2007-12-13 01:08:16,965 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - ActiveMQ Task - Attempting connect to: tcp://***.***.***.***:***?wireFormat.maxInactivityDuration=600000&soTi
meout=10000
2007-12-13 01:08:17,232 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Task - Sending: WireFormatInfo { version=2, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDi
sabled=false, TcpNoDelayEnabled=true, MaxInactivityDuration=600000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-12-13 01:08:17,236 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - ActiveMQ Task - Connection established
2007-12-13 01:08:17,237 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - Thread-3 - Started.
2007-12-13 01:08:17,240 INFO [com.highergear.lead.jms.JMSFactoryConnectionUtil] - Thread-3 - Created Connection
... That's all it says for hours.

Upon restarting both broker and client:

2007-12-13 08:46:40,633 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - Thread-3 - Waking up reconnect task
2007-12-13 08:46:40,680 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - ActiveMQ Task - Attempting connect to: tcp://***.***.***.***:***?wireFormat.maxInactivityDuration=600000&soTi
meout=10000
2007-12-13 08:46:40,955 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Task - Sending: WireFormatInfo { version=2, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDi
sabled=false, TcpNoDelayEnabled=true, MaxInactivityDuration=600000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-12-13 08:46:40,959 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - ActiveMQ Task - Connection established
2007-12-13 08:46:40,961 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - Thread-3 - Started.
2007-12-13 08:46:40,963 INFO [com.highergear.lead.jms.JMSFactoryConnectionUtil] - Thread-3 - Created Connection
2007-12-13 08:46:40,999 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Transport: tcp:///***.***.***.***:*** - Received WireFormat: WireFormatInfo { version=2, properties={Cache
Size=1024, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=false, MaxInactivityDuration=600000, TightEncodingEnabled=false, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-12-13 08:46:41,001 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Transport: tcp:///***.***.***.***:*** - tcp:///***.***.***.***:*** before negotiation: OpenWireFormat{version
=2, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2007-12-13 08:46:41,001 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Transport: tcp:///***.***.***.***:*** - tcp:///***.***.***.***:*** after negotiation: OpenWireFormat{version=
2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=false, sizePrefixDisabled=false}
2007-12-13 08:46:41,158 INFO [com.highergear.lead.jms.JMSFactoryConnectionUtil] - Thread-3 - Started Connection

The WireFormatNegotiation is not completing and no timeout occurs that allows the client to recognize the connection is bad.
","17/Dec/08 20:01;robbugh@earthlink.net;I'm seeing this issue in 4.1.1 as well. Looking at the code I don't see the 15 sec. timeout mentioned in the JIRA.","16/Feb/09 19:58;robbugh@earthlink.net;What is the status of this issue? Has the fix been rolled into a release yet? --Rob","17/Feb/09 23:17;robbugh@earthlink.net;OK, the first comment answered my question. Fixed in  418497.

","17/Feb/09 23:18;robbugh@earthlink.net;Already fixed",,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in BrokerService.setConsumerUsage,AMQ-1481,12482717,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vgeshel,vgeshel,29/Oct/07 21:25,28/Dec/08 08:05,30/Jan/20 16:57,28/Dec/08 08:05,5.0.0,,,,,,5.3.0,,,Broker,,,,0,"BrokerService.java:

    public void setConsumerSystemUsage(SystemUsage consumerUsageManager) {
        if (this.consumerSystemUsage != null) {
            removeService(this.consumerSystemUsage);
        }
        this.consumerSystemUsage = consumerUsageManager;
        addService(this.producerSystemUsage);
    }

The last line should read
        addService(this.consumerUsage);
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84683,,,2007-10-29 21:25:32.0,,,,,,,,"0|i181tr:",255098,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
discoveryUri in transportConnector and uri in networkConnector partially ignored if multicast,AMQ-1489,12482730,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,geraldloeffler,geraldloeffler,07/Nov/07 12:20,23/Dec/08 09:45,30/Jan/20 16:57,08/Sep/08 11:31,4.1.1,5.0.0,,,,,5.2.0,,,Connector,,,,0,"This bug relates to the MulticastDiscoveryAgent and was discovered when 

1. the discoveryUri of a transportConnector is a multicast-uri such as

{code:xml}
<transportConnector uri=""..."" discoveryUri=""multicast://239.3.7.0:37000"" />
{code}

or

2. the uri of a networkConnector is a multicast-uri such as

{code:xml}
<networkConnector name=""..."" uri=""multicast://239.3.7.0:37000"">
{code}

In these cases, the uri is partially ignored by the MulticastDiscoveryAgent: the host-name of the uri (239.3.7.0) is extracted and used as the group name by the MulticastDiscoveryAgent. But the actual multicast group IP is always 239.255.2.3 and the multicast port is always 6155, regardless of what the actual uri is in the configuration.

The reason for this is that MulticastDiscoveryAgentFactory creates a new MulticastDiscoveryAgent and sets the group based on the uri's host, but fails to set the discoveryURI itself. MulticastDiscoveryAgentFactory should be corrected to do this:

{code:java}
MulticastDiscoveryAgent rc = new MulticastDiscoveryAgent();
rc.setDiscoveryURI(uri); // missing
rc.setGroup(uri.getHost());
{code}

Without the above setting of the discoveryURI the MulticastDiscoveryAgent always uses the DEFAULT_DISCOVERY_URI_STRING which is ""multicast://239.255.2.3:6155"", explaining the erroneous behaviour described above.

  kind regards,
  gerald

http://www.gerald-loeffler.net
",,atrieger@trieger.org,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/08 15:38;joef;patchfile.txt;https://issues.apache.org/jira/secure/attachment/12461095/patchfile.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-03-24 23:09:31.543,,,false,,,,,,,,,,,,,,,,,84528,,,Mon Sep 08 11:31:24 UTC 2008,,,,Patch Available,,,,"0|i0s25r:",161826,,,,,,,,,,,,,,,,,,,"24/Mar/08 23:09;djencks;Fixed rev 640636.","28/Mar/08 14:31;aricooperman;This fix is missing in 5.+","28/Mar/08 19:32;djencks;I'm no expert in how this is supposed to work, but the comment in the trunk code makes me wonder if the patch is correct.

Without the patch, a URI with ?discoveryURI=foo will result in setting the discoveryURI and other URIs will use the default.

With the patch, IIUC, the default will never be used.","29/Mar/08 16:39;djencks;After further thought I've reverted the patch as I think it can't possibly be correct to always overwrite the default multicast info.  I don't understand how this is supposed to work well enough to fix it without help.

It looks to me as if it is possible to specify the discoveryURI with the current code by using configurations like

{code}
<transportConnector uri=""..."" discoveryUri=""multicast://239.3.7.0:37000?discoveryURI=multicast://239.3.7.0:37000"" />
{code}
and
{code}
<networkConnector name=""..."" uri=""multicast://239.3.7.0:37000?discoveryURI=multicast://239.3.7.0:37000"">
{code}

i.e. specifying the discoveryURI as a uri query parameter even when directly specifying the discoveryURI.  If this is the expected usage then perhaps a documentation update is what is required, although the first example looks weird to me.  Perhaps a flag as to whether the uri is intended to be the discovery URI would be more appropriate or perhaps the code processing the first case could add the discoveryURI as a parameter itself.","07/Apr/08 22:22;djencks;Did not get fixed in 4.1.2","17/Jul/08 15:38;joef;Submitted the patch for review. With this patch, you don't have to use a query parameter to specify a host:port. You can simply specify it  as follows: multicast://<host>:<port>. However, the patch doesn't preclude you from specifying the discoveryURI via a query paramter; doing so will override <host>:<port> provided via the URI.  

Also, the default group value, which is ""default"", can only be overriden via a query parameter; as I think it should. For example, with the URI below, the agent will end up using the default IP and port number, but is given a group name of ""foo"".  

multicast://default?group=foo ","05/Sep/08 05:48;rajdavies;Patch applied in SVN revision 692340","05/Sep/08 20:42;gtully;bunch of unit test failures (14) with this fix, needs some investigation. eg BrokerServiceTest
java.net.UnknownHostException: group-1220646703756: group-1220646703756
	at java.net.InetAddress.getAllByName0(InetAddress.java:1145)
	at java.net.InetAddress.getAllByName(InetAddress.java:1072)
	at java.net.InetAddress.getAllByName(InetAddress.java:1008)
	at java.net.InetAddress.getByName(InetAddress.java:958)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:300)
	at org.apache.activemq.network.DiscoveryNetworkConnector.handleStart(DiscoveryNetworkConnector.java:164)
	at org.apache.activemq.network.NetworkConnector$1.doStart(NetworkConnector.java:56)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.network.NetworkConnector.start(NetworkConnector.java:197)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1873)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:480)
	at org.apache.activemq.broker.BrokerServiceTest.testAddRemoveNetworkWithJMX(BrokerServiceTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

","08/Sep/08 11:31;gtully;a bunch of unit tests made use of the group being taken from the unused host portion of the url. changing them to default?group="""" resolved the failures. FWIR the group was added to help test isolation on the same subnet.",,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp client is not removed from the broker on client disconnect,AMQ-724,12482206,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jurna,jurna,26/May/06 00:13,12/Dec/08 12:41,30/Jan/20 16:57,07/Jul/08 19:25,4.0,,,,,,5.2.0,,,Transport,,,,3,"If Stomp client crashes (or disconnects unexpectedly) when there are unconsumed messages in the broker, the subscriptions are not removed from the broker and some phantom consumer is still consuming messages. If you connect other client, it receives only half messages (other half messages goes to that phantom consumer still left afrter client disconnect). There are no error logs in activemq logs. We are using stomp client, whith client acknowledge mode, so on broker restart, all messages are delivered properly. You can also see in jmx console, that subscription still exists whithout any connection left.","Linux, Java 1.5.0_06",feldrax,jurna,mronner,tvijlbrief,,,,,,,,,,,,,,,,,,,,,,AMQ-844,,"05/Dec/06 06:45;jurna;SessionState.patch;https://issues.apache.org/jira/secure/attachment/12460888/SessionState.patch","29/Jan/07 14:25;mronner;StompScriptComplete.txt;https://issues.apache.org/jira/secure/attachment/12460763/StompScriptComplete.txt","29/Jan/07 14:25;mronner;StompScriptNoDisconnect.txt;https://issues.apache.org/jira/secure/attachment/12460545/StompScriptNoDisconnect.txt","29/May/06 07:17;jurna;StompSubscriptionRemoveTest.java;https://issues.apache.org/jira/secure/attachment/12460784/StompSubscriptionRemoveTest.java","28/Jan/07 11:46;tvijlbrief;dumpemu4.png;https://issues.apache.org/jira/secure/attachment/12460793/dumpemu4.png","28/Jan/07 14:26;tvijlbrief;patch.txt;https://issues.apache.org/jira/secure/attachment/12460819/patch.txt","30/Jan/07 18:30;tvijlbrief;patchInactivityMonitor.txt;https://issues.apache.org/jira/secure/attachment/12460572/patchInactivityMonitor.txt",,7.0,,,,,,,,,,,,,,,,,,,,2006-07-02 20:43:32.0,,,false,,,,,,,,,,,,,,,,,84348,,,Fri Dec 12 12:41:48 UTC 2008,,,,,,,,"0|i0s1lj:",161735,,,,,,,,,,,,,,,,,,,"29/May/06 07:17;jurna;TestCase which shows this bug - takes time to complete.
","29/May/06 07:24;jurna;The problem I found is whith both stomp transport and broker iself.
Somehow Stomp subscription starts prefetching and sending messages before it adds Consumer to the broker. If connection during this prefetching is lost, connection is removed, but subscription is still added.

There is quick  hack for that in AbstractConnection.processAddConsumer(): 

    public Response processAddConsumer(ConsumerInfo info) throws Exception {
        SessionId sessionId = info.getConsumerId().getParentId();
        ConnectionId connectionId = sessionId.getParentId();
        ConnectionState cs = lookupConnectionState(connectionId);
        SessionState ss = cs.getSessionState(sessionId);
        if( ss == null )
            throw new IllegalStateException(""Cannot add a consumer to a session that had not been registered: ""+sessionId);
        log.trace(""Adding consumer to broker. Stomp client blocks here - waiting for prefetching to complete."");
        broker.addConsumer(cs.getContext(), info);
        try {
        		lookupConnectionState(connectionId);
        } catch (IllegalStateException ex) {
        		// If during broker.addConsumer() exception occures, connection is destroyed. We need to remove consumer
        		log.warn(""Cannot find connection after adding subscription! Probably error when prefetching messages"", ex);
        		broker.removeConsumer(cs.getContext(), info);
        		throw ex;
        }
        ss.addConsumer(info);
        return null;
    }","02/Jul/06 20:43;chirino;Expanded your 'hack' so that it's less hacky.  The connection and session state now keep track if they are being shutdown.

Fix committed to trunk revision 418592.","02/Jul/06 21:30;chirino;Fix apply to 4.0 trunk also.","13/Oct/06 04:37;snacktime;This is not fixed as of 4.0.2 RC4, or at least there is another bug with the exact same behavior.  Wasn't hard to duplicate either, just kill a stomp connection while it's reading and bam, phantom consumer. ","05/Dec/06 06:44;jurna;I wonder how this bug has slipped through unit tests. I'm adding patch for org.apache.activemq.state.SessionState","05/Dec/06 06:45;jurna;This patch is against 4.0 branch. This bug is also in 4.1 branch","12/Jan/07 06:23;jurna;Is is possible for the provided patch to be applied for 4.2 version?","28/Jan/07 11:44;tvijlbrief;When using the C++ Openwire client I'm having the same problems when the client crashes.

I'm testing against the current SVN repo version.

After 5 runs I have 5 pending openwire connections, although ""netstat -t""
shows that they are closed.

","28/Jan/07 11:46;tvijlbrief;Pending connections although the TCP connections are really closed","28/Jan/07 14:26;tvijlbrief;PATCH
======

Not sure if it is this simple but this patch seems to work OK.

The connections are now freeed when a fresh client connects...

","29/Jan/07 05:41;tvijlbrief;Retried the tests without the patch applied but see no difference now, so you can ignore it.
Apparently a fix was already in the SVN version, my  patch is a no-op. :-/

Terminating the Stomp connections in the current SVN version seems to work OK.

Terminating OpenWire connections from a  CPP client still leaves connections hanging.

I'll try to investigate this problem further.","29/Jan/07 06:40;jurna;There is a clear bug in SessionState class. EIther you have to fix this bug, o remove SessionState functionality, if it's not used.
When broker shuts down session, it sets shutdown flag on session state. But currently in the code instead of true it sets false (which means that session is not shut down).
The bug is not releted with connections which are not removed. The problem occures when connection is removed, but subscription is not. It's not easy to reproduce this bug. You have to kill stomp connection during message prefetch (within a second after connection is established and subscribtion is made).","29/Jan/07 14:25;mronner;That's how you can reproduce it:

{{$ netcat -v -c localhost 61613 < StompScriptComplete.txt}}
*CONNECT*, *SEND* a message and *DISCONNECT* properly.

{{$ netcat -v -c localhost 61613 < StompScriptNoDisconnect.txt}}
*CONNECT*, *SEND* a message and closes the connection {color:red}without{color} *DISCONNECT*.
","30/Jan/07 10:40;mronner;Try {{netcat}} also without {{-c}} (close connection on EOF from stdin)...

The connection will be closed by the server in the first example.
In the second example you have to break it {{^C}} manually. This leaves an open session on the server.
","30/Jan/07 18:29;tvijlbrief;I'm confused. When I try the netcat example with NoDisconnect in the current SVN version
everything is rock solid.

When I interrupt a C++ OpenWire client than I get non closed connections.

I found a possible cure for the last problem. The InactivityMonitor code reads:

public void onException(IOException error) {
    	if( monitorStarted.get() ) {
	        stopMonitorThreads();
	        getTransportListener().onException(error);
    	}
    }

So if monitorStarted is false the EOFException is completely ignored!
I assume it should be:

public void onException(IOException error) {
    	if( monitorStarted.get() ) {
	        stopMonitorThreads();
    	}
    	getTransportListener().onException(error); // tom.vijlbrief
    }


Attached a patch. With this patch the OpenWire sessions are closed.","30/Jan/07 18:30;tvijlbrief;Patch for pending OpenWire connections","23/Feb/07 06:04;jstrachan;I've just applied Tom's latest patch for OpenWire connections - thanks Tom!","07/Jul/08 19:25;rajdavies;The associated patches no longer look valid for the current 5.2/trunk codebase.
You can on the broker url in the broker config to define options to directly close the sockets - instead of using a separate thread in 5.2 - 
e.g tcp://localhost:61616?socket.closeAsync=false","10/Dec/08 19:27;kfrugia;Is there a similar option to socket.closeAsync for activemq cpp?  Is this documented anywhere?","11/Dec/08 14:37;dejanb;socket.closeAsync is a broker-side configuration option, so it should work with cpp as well.","11/Dec/08 16:48;kfrugia;Ok.  It would be nice if this was documented in the activemq cpp documentation.  Other URI options are documented.  I was looking for something like this, but was unaware this was an option.","12/Dec/08 12:41;dejanb;I've updated tcp transport reference page (http://cwiki.apache.org/confluence/display/ACTIVEMQ/TCP+Transport+Reference). Thanks",,,,,,,,,,,,
ActiveMQ Task/Transport Deadlock when using Stomp,AMQ-1059,12482672,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,willix,willix,17/Nov/06 21:45,08/Oct/08 08:49,30/Jan/20 16:57,23/Sep/08 06:57,4.0.2,,,,,,5.2.0,,,Transport,,,,1,"This happened after about a day running monitoring script that uses Perl stomp client to connect to JMS.

Found one Java-level deadlock:
=============================
""ActiveMQ Task"":
  waiting to lock monitor 0x0807ae74 (object 0x7ee3a898, a java.lang.Object),
  which is held by ""ActiveMQ Transport: tcp:///10.1.111.14:60270""
""ActiveMQ Transport: tcp:///10.1.111.14:60270"":
  waiting to lock monitor 0x0807b474 (object 0x7ee3caa8, a java.lang.Object),
  which is held by ""ActiveMQ Task""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Task"":
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:70)
        - waiting to lock <0x7ee3a898> (a java.lang.Object)
        at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:71)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommad(ProtocolConverter.java:476)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:52)
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:142)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:45)
        - locked <0x7ee3caa8> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:215)
        at org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:722)
        at org.apache.activemq.broker.AbstractConnection.iterate(AbstractConnection.java:738)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:111)
        at org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at java.lang.Thread.run(Unknown Source)
""ActiveMQ Transport: tcp:///10.1.111.14:60270"":
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:45)
        - waiting to lock <0x7ee3caa8> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:215)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:70)
        - locked <0x7ee3a898> (a java.lang.Object)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:112)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:197)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommad(ProtocolConverter.java:132)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:60)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Unknown Source)

Found 12 deadlocks","Linux Redhat EL3, Java 1.4.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-08-08 15:06:48.267,,,false,,,,,,,,,,,,,,,,,84422,,,Tue Sep 23 06:57:29 UTC 2008,,,,,,,,"0|i180mv:",254905,,,,,,,,,,,,,,,,,,,"08/Aug/08 15:06;quirozca;Hi

I have found almost exactly the same  deadlock it happens when a client sends messages quickly and gets their responses almost immediately. I'm using ActiveMQ 5.1.0
I get this dump:

INFO   | jvm 1    | 2008/08/08 17:38:45 | Found one Java-level deadlock:
INFO   | jvm 1    | 2008/08/08 17:38:45 | =============================
INFO   | jvm 1    | 2008/08/08 17:38:45 | ""ActiveMQ Connection Dispatcher: /127.0.0.1:43864"":
INFO   | jvm 1    | 2008/08/08 17:38:45 |   waiting to lock monitor 0x0a66d3e4 (object 0xb2635ba8, a java.lang.Object),
INFO   | jvm 1    | 2008/08/08 17:38:45 |   which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:43864""
INFO   | jvm 1    | 2008/08/08 17:38:45 | ""ActiveMQ Transport: tcp:///127.0.0.1:43864"":
INFO   | jvm 1    | 2008/08/08 17:38:45 |   waiting to lock monitor 0x0a480f84 (object 0xb2635bc8, a java.lang.Object),
INFO   | jvm 1    | 2008/08/08 17:38:45 |   which is held by ""ActiveMQ Connection Dispatcher: /127.0.0.1:43864""
INFO   | jvm 1    | 2008/08/08 17:38:45 |
INFO   | jvm 1    | 2008/08/08 17:38:45 | Java stack information for the threads listed above:
INFO   | jvm 1    | 2008/08/08 17:38:45 | ===================================================
INFO   | jvm 1    | 2008/08/08 17:38:45 | ""ActiveMQ Connection Dispatcher: /127.0.0.1:43864"":
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:80)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       - waiting to lock <0xb2635ba8> (a java.lang.Object)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:71)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommad(ProtocolConverter.java:552)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:59)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       - locked <0xb2635bc8> (a java.lang.Object)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1228)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:816)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:853)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
INFO   | jvm 1    | 2008/08/08 17:38:45 | ""ActiveMQ Transport: tcp:///127.0.0.1:43864"":
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       - waiting to lock <0xb2635bc8> (a java.lang.Object)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1228)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:816)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:775)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:183)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:80)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       - locked <0xb2635ba8> (a java.lang.Object)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:134)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:245)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommad(ProtocolConverter.java:172)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
INFO   | jvm 1    | 2008/08/08 17:38:45 |       at java.lang.Thread.run(Thread.java:619)
INFO   | jvm 1    | 2008/08/08 17:38:45 |
INFO   | jvm 1    | 2008/08/08 17:38:45 | Found 1 deadlock.
INFO   | jvm 1    | 2008/08/08 17:38:45 |
INFO   | jvm 1    | 2008/08/08 17:38:45 | Heap
INFO   | jvm 1    | 2008/08/08 17:38:45 |  PSYoungGen      total 80448K, used 22996K [0xadca0000, 0xb42c0000, 0xb4e60000)
INFO   | jvm 1    | 2008/08/08 17:38:45 |   eden space 74880K, 24% used [0xadca0000,0xaee95950,0xb25c0000)
INFO   | jvm 1    | 2008/08/08 17:38:45 |   from space 5568K, 82% used [0xb25c0000,0xb2a3f7b0,0xb2b30000)
INFO   | jvm 1    | 2008/08/08 17:38:45 |   to   space 6144K, 0% used [0xb3cc0000,0xb3cc0000,0xb42c0000)
INFO   | jvm 1    | 2008/08/08 17:38:45 |  PSOldGen        total 18368K, used 9935K [0x74e60000, 0x76050000, 0xadca0000)
INFO   | jvm 1    | 2008/08/08 17:38:45 |   object space 18368K, 54% used [0x74e60000,0x75813fe0,0x76050000)
INFO   | jvm 1    | 2008/08/08 17:38:45 |  PSPermGen       total 54656K, used 33288K [0x70e60000, 0x743c0000, 0x74e60000)
","14/Aug/08 13:36;quirozca;I can confirm that this bug reappears on AMQ 5.1.0. It appears when one thread acquires MutexTransport.oneway which acquires writeMutex and then StompTransportFilter.sendtToActiveMQ which acquires sendToActiveMQMutex, this happens when sending an acknowledgment in AUTO_ACK mode. 

At the same time other thread sends a message which first calls StompTransportFilter.sendToActiveMQ  which acquires sendToActiveMQMutex. This will inturn call MutexTransport,oneway and will produce a deadlock.

","23/Sep/08 06:57;rajdavies;Fixed by SVN revision 698103",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid Schema URL for example config file,AMQ-1014,12481932,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,bwellhoefer,bwellhoefer,30/Oct/06 17:07,22/Sep/08 06:42,30/Jan/20 16:57,13/Jun/07 06:59,4.1.0,,,,,,4.1.2,5.0.0,,Test Cases,,,,2,The config file https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-core/src/test/resources/spring-embedded-xbean.xml should ise http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd as schema URL for Spring 2.0. Moreover and more worse the used schema URL (http://activemq.org/config/1.0 http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd) for ActiveMQ points to a schema file which is not valid. ,,alewando,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/06 17:11;bwellhoefer;XMLSpy1.png;https://issues.apache.org/jira/secure/attachment/12460678/XMLSpy1.png","30/Oct/06 17:11;bwellhoefer;XMLSpy2.png;https://issues.apache.org/jira/secure/attachment/12460617/XMLSpy2.png","29/May/07 06:50;aco;activemq.xsd;https://issues.apache.org/jira/secure/attachment/12460812/activemq.xsd",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2007-05-29 06:50:48.109,,,false,,,,,,,,,,,,,,,,,84502,,,Wed Jun 13 06:59:22 UTC 2007,,,,,,,,"0|i0tsrb:",171968,,,,,,,,,,,,,,,,,,,"30/Oct/06 17:11;bwellhoefer;XMLSpy error message for the schema behind http://activemq.org/config/1.0 http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd","30/Oct/06 17:11;bwellhoefer;XMLSpy error message for the schema behind http://activemq.org/config/1.0 http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd","13/Nov/06 22:10;bwellhoefer;Why was the fix moved to 4.2? Will 4.1 be always a developer only version? If 4.1 will be released for non developer users, then please move the fix version back to 4.1.","29/May/07 06:50;aco;Hi,

Wonder if you can try the newly generated xsd if its valid against xml spy. :) See attached.","13/Jun/07 06:59;aco;Updated the spring-embedded.xml xsd to use the spring 2.0 one and changed the AMQ xsd to use http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-SNAPSHOT.xsd.

trunk (5.0) - http://svn.apache.org/viewvc?view=rev&rev=546755
4.1 branch - http://svn.apache.org/viewvc?view=rev&rev=546754",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Networks of Brokers"" web page has errors",AMQ-1000,12482660,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,bwellhoefer,bwellhoefer,24/Oct/06 14:24,22/Sep/08 06:41,30/Jan/20 16:57,11/Jul/07 08:42,5.0.0,,,,,,,,,Documentation,,,,0,"Hello,

The page http://incubator.apache.org/activemq/networks-of-brokers.html has two errors:

1) Under ""NetworkConnector Properties"" the bridgeTempDestinations property is missing.

2) The examples under ""Example Configuration using NetworkConnector properties"" are not valid XML files. The properties name, dynamicOnly, conduitSubscriptions and decreaseNetworkConsumerPriority have to be XML attributes to the networkConnector element.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 10:02:10.308,,,false,,,,,,,,,,,,,,,,,84732,,,Tue Jun 12 10:02:10 UTC 2007,,,,,,,,"0|i0tt3j:",172023,,,,,,,,,,,,,,,,,,,"30/Oct/06 16:55;bwellhoefer;I fixed 2). Please review my change.","12/Jun/07 10:02;jstrachan;Being Mr Networks; any chance you could review/fix this please? :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Homepage download page points to wrong directory for 4.x,AMQ-986,12482663,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bwellhoefer,bwellhoefer,17/Oct/06 15:54,22/Sep/08 06:40,30/Jan/20 16:57,18/Oct/06 23:35,5.2.0,,,,,,,,,Documentation,,,,0,"The www.activemq.org web page points for the 4.1 distro under Download/""Latest Release"" to the wrong download directory.

Currently it points to http://people.apache.org/repository/incubator-activemq/distributions, but here the oldest distro is from Jul 2006. The ocrrect URL is http://people.apache.org/maven-snapshot-repository/org/apache/activemq/apache-activemq/4.1-incubator-SNAPSHOT.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-10-18 23:35:27.0,,,false,,,,,,,,,,,,,,,,,92795,,,Wed Oct 18 23:35:27 UTC 2006,,,,,,,,"0|i0tt27:",172017,,,,,,,,,,,,,,,,,,,"17/Oct/06 15:54;bwellhoefer;Please see the discussion under http://www.nabble.com/Where-to-find-org.apache.activemq.spring.ActiveMQConnectionFactory-tf2457849.html .","18/Oct/06 23:35;chirino;download page update.  Thanks for the tip!  Simplified it down and added more detailed section about where our maven repositories are located.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix example source code,AMQ-965,12481495,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,bwellhoefer,bwellhoefer,10/Oct/06 12:33,22/Sep/08 06:40,30/Jan/20 16:57,10/Apr/08 08:15,4.0.2,,,,,,5.1.0,,,Documentation,,,,0,"Hello,

The example at http://www.activemq.org/site/hello-world.html uses not valid packages for Main and ActiveMQConnectionFactory.",,,,,,,,,,,,,,,,,,,,,,,1800,1800,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-10 08:15:34.943,,,false,,,,,,,,,,,,,,,,,84433,,,Thu Apr 10 08:15:34 UTC 2008,,,,,,,,"0|i0tti7:",172089,,,,,,,,,,,,,,,,,,,"10/Apr/08 08:15;rajdavies;current docs looks good  copied the source - compiled and ran it. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix documentation to show Maven2 usage,AMQ-964,12482158,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,janstey,bwellhoefer,bwellhoefer,09/Oct/06 13:57,22/Sep/08 06:39,30/Jan/20 16:57,22/Sep/08 00:42,4.0.2,,,,,,5.3.0,,,Documentation,,,,0,"Several pages under http://www.activemq.org discuss how to compile, test, run ... ActiveMQ using Maven 1. Please enhance these pages (e.g. http://www.activemq.org/site/getting-started.html) how to use Maven2.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-22 00:42:49.895,,,false,,,,,,,,,,,,,,,,,84434,,,Mon Sep 22 00:42:49 UTC 2008,,,,,,,,"0|i0tsvj:",171987,,,,,,,,,,,,,,,,,,,"22/Sep/08 00:42;janstey;This is a really old ticket! :) The instructions have been updated to maven2 for some time I imagine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
durable topic messages received in reverse order after consumer restart,AMQ-1226,12482641,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dvain,dvain,10/Apr/07 23:55,04/Sep/08 18:13,30/Jan/20 16:57,04/Sep/08 18:13,4.0.2,4.1.0,4.1.1,,,,5.2.0,,,Broker,,,,1,"Setup:
1 Publisher (single thread)
1 Subscriber
1 DurableTopic
1 Broker (Default configuration)

Steps to reproduce:
1) Publisher sends MapMessages that include a message number (1, 2, 3, ...)

2) Subscriber receives messages and makes sure the message numbers are in order

3) Stop the subscriber and let some messages accumulate on the broker.  Let's assume the last message received was number 11.

4) Restart the subscriber.

5) First several messages can be in reverse order.  I.E.  16, 15, 14, 13, 12

6) Then messages start coming in order.  I.E.   17, 18, 19, ...

Cause:
org.apache.activemq.broker.region.DurableTopicSubscription.deactivate()
When the consumer stops, the deactivate method moves messages that have been dispatched but not acknowledged from the ""dispatched"" LinkedList to the ""pending""  PendingMessageCursor (which is backed by a LinkedList).  These messages must be placed at the beginning of the ""pending"" list because the dispatched messages are chronologically before the pending messages already in the list.  The deactivate method iterates over the ""dispatched"" list and adds each message to the beginning of the ""pending"" list one at a time.  This reverses the order of the messages.

If the messages in question get written to JDBC, the problem can be hidden because the messages get queried in the correct order.

If the prefetch size is set to 1 the problem does not present because there will only be 1 message in the ""dispatched"" list.

Solution:
In the deactivate method, iterate the ""dispatched"" list in reverse order.

Patch against 4.1.1 attached.
","Linux (Suse 9.3 and Gentoo), WinXP, JDK 1.5.0",sandeepchayapathi,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Apr/07 23:55;dvain;ASF.LICENSE.NOT.GRANTED--patchfile.txt;https://issues.apache.org/jira/secure/attachment/12460647/ASF.LICENSE.NOT.GRANTED--patchfile.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-09-04 18:13:02.834,,,false,,,,,,,,,,,,,,,,,84416,,,Thu Sep 04 18:13:02 UTC 2008,,,,Patch Available,,,,"0|i0s22n:",161812,,,,,,,,,,,,,,,,,,,"04/Sep/08 18:13;rajdavies;This behaviour has been fixed in 5.2 - we don't patch old versions - as we don't maintain branches",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
High message frequency causes ActiveMQ to freeze,AMQ-1557,12482612,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,waeller,waeller,21/Jan/08 09:39,04/Sep/08 15:22,30/Jan/20 16:57,04/Sep/08 15:22,5.0.0,5.1.0,,,,,5.2.0,,,,,,,8,"ActiveMQ freezes in a test setup with very high message frequency of persistent messages and multiple producers and consumers running on multiple machines:
- Host 1: Multiple Producers send messages very fast to queue1 
- Host 2: Multiple Processors consume message from queue1 and send a new message for each consumed message to queue2, also very fast.
- Host 3: ActiveMQ server and 1 consumer reads messages from queue2.

With producerFlowControl enabled, the system freezes very soon (a bit more than 1000 messages).
With producerFlowControl disabled, it seems to run longer at first, but it still freezes later.
Using transactions or not does not seem to make a difference.

See this thread in user mailing list for more details:
http://www.nabble.com/High-message-frequency-causes-ActiveMQ-to-freeze-to14919292s2354.html

See attachment for code of test cases and the batch files to start them.","observed on Windows XP Professional SP2, Sun JDK 1.5.01_11, but probably affects all platforms",antoniogmc,carloc,isnogood,jerryshea,mkelley63,robertbrown,svenpanko,tpounds,vodnik12,,,,,,,,,,,,,,,,,,,"23/Apr/08 13:59;waeller;stresstest.zip;https://issues.apache.org/jira/secure/attachment/12461135/stresstest.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-01-21 12:12:38.933,,,false,,,,,,,,,,,,,,,,,84654,,,Thu Sep 04 15:22:15 UTC 2008,,,,,,,,"0|i0s21b:",161806,,,,,,,,,,,,,,,,,,,"21/Jan/08 12:12;marcobuss;I can see the same with topics async send and producer flow control. The persistence store was derby and mysql. 
I used 3 Topics with 9 diferent subscribers for each topic. 5 of this subscribers were slow (they pause for 60 seconds after every message). All looks fine as long as the topic reaches 1000 Messages. Then the cpu amount used increse to 90% and no message can be delivered, but the Consumers already get the Messages.","04/Apr/08 23:58;grantsmith;This still occurs with today's SNAPSHOT. Any updates on getting this fixed ?","05/Apr/08 00:02;grantsmith;For me I'm getting :

ERROR RecoveryListenerAdapter        - Message id ID:gsdev2.marathon-man.com-58448-1207350845238-0:0:1:1:2122 could not be recovered from the data store - already dispatched
ERROR RecoveryListenerAdapter        - Message id ID:gsdev2.marathon-man.com-58448-1207350845238-0:0:1:1:2123 could not be recovered from the data store - already dispatched

multiple times under high bandwidth conditions. It appears to be a manifestation of 

https://issues.apache.org/activemq/browse/AMQ-1544 which appears to NOT be resolved ?
","23/Apr/08 12:43;rajdavies;Before we even schedule this issue - the attachment needs to be Granted to the ASF (tick the check box) and all files should be Apache licenced - could you delete and reapply?","23/Apr/08 14:00;waeller;re-attached with ""Grant license...""","29/Apr/08 16:16;fhanik;I'm able to consistently reproduce the error with 5.0.0 and 5.1.0
I haven't been able to try it out trunk, since it doesn't build when I check it out. 

java.lang.OutOfMemoryError: Java heap space
Dumping heap to java_pid3448.hprof ...
Heap dump file created [212044211 bytes in 14.203 secs]
Exception in thread ""ActiveMQ Transport: tcp:///127.0.0.1:1206"" java.lang.OutOfMemoryError: Java heap space
        at org.apache.activemq.openwire.v3.BaseDataStreamMarshaller.tightUnmarshalByteSequence(BaseDataStreamMarshaller.
java:441)
        at org.apache.activemq.openwire.v3.MessageMarshaller.tightUnmarshal(MessageMarshaller.java:68)
        at org.apache.activemq.openwire.v3.ActiveMQMessageMarshaller.tightUnmarshal(ActiveMQMessageMarshaller.java:67)
        at org.apache.activemq.openwire.v3.ActiveMQTextMessageMarshaller.tightUnmarshal(ActiveMQTextMessageMarshaller.ja
va:67)
        at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:361)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:192)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:184)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
        at java.lang.Thread.run(Thread.java:595)

Here is the info

1. Configuration file
http://people.apache.org/~fhanik/activemq.xml

2. Modified example code
http://people.apache.org/~fhanik/example.zip

Steps to reproduce
1. Apply the activemq.xml file
2. start the activemq server
3. start the consumer 'ant consumer' in the example directory (from example.zip)
4. start the producer 'ant producer'  in the example directory (from example.zip)

Just sit and watch, eventually it starts slowing down, and finally it throws an OutOfMemoryError

As long as the consumer is connected, it's not skipping or discarding any messages. 
I was expecting the consumer to receive only the latst, but as long as the consumer is connected, not a single message gets discarded, or at least it appears that way, until the server runs out of java heap.

Filip","29/Apr/08 18:30;fhanik;
If I reconfigure the dead letter strategy
            <deadLetterStrategy>  
              <sharedDeadLetterStrategy processExpired=""false"" processNonPersistent=""false"" />  
            </deadLetterStrategy>

and turn off the flooding of the logs that it causes

log4j.logger.org.apache.activemq.broker.region.RegionBroker=ERROR


The system seems to stay up, in this case, my client (consumer) OOMs, and during the time it OOMS, the producer freezes up again,
it seems that the producer is synchronized on a connected consumer, and there is no asynchronicity between the two

Filip","04/Sep/08 15:22;rajdavies;Resolved in 5.2",,,,,,,,,,,,,,,,,,,,,,,,,,,
InactivityMonitor hangs raising an exception,AMQ-1512,12482112,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,04/Dec/07 17:21,11/Aug/08 13:02,30/Jan/20 16:57,04/Dec/07 17:24,5.0.0,,,,,,5.0.0,,,,,,,0,Deadlock caused by synching the readchecker object before throwing an Inactivity Exception,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-08-11 13:02:37.763,,,false,,,,,,,,,,,,,,,,,84673,,,Mon Aug 11 13:02:37 UTC 2008,,,,,,,,"0|i181uf:",255101,,,,,,,,,,,,,,,,,,,"04/Dec/07 17:24;rajdavies;Fixed by SVN revision 601011","11/Aug/08 13:02;slv07;Hello,
  can some one help me reproduce this bug?
Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get duplicate message after restart Topic subscriber.,AMQ-1195,12482362,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,thiamteck,thiamteck,08/Mar/07 10:01,21/Jun/08 14:03,30/Jan/20 16:57,21/Jun/08 14:03,4.1.0,,,,,,5.1.0,,,,,,,0,"originally pposted at: http://www.nabble.com/Getting-duplicate-message-from-JMS-Topic-after-subscriber-restart-tf3362466s2354.html#a9371377

After restart a durable subscriber of a topic (by Ctrl-C in console windows), subscriber will get 2 copy of same message. And after another restart, it will get 3 copy.

It will recover after restart ActiveMQ server.

Tested on ActiveMQ 4.0.2 and this problem do not occurs.

The subscriber client connect via tcp, is a durable subscription. Receive message via MessegaListener interface onMessage() method.Acknowledgment mode is AUTO_ACKNOWLEDGE. Subscriber client program do close the subscription, session, and connection in the program shutdown hook.

Publisher publish message as persistent message. ","MS Windows XP SP2, MySQL 5, JRE 1.4.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-20 15:50:02.554,,,false,,,,,,,,,,,,,,,,,84464,,,Sat Jun 21 14:03:30 UTC 2008,,,,,,,,"0|i1811b:",254970,,,,,,,,,,,,,,,,,,,"20/Jun/08 15:50;rhealey;Does anyone know if this issue is resolved in version 5.2?  I am new to this forum and I am confused by the fact that in the ""Fix Version/s:"" it has version 5.2 but the status of the issue is still open.","21/Jun/08 14:03;rajdavies;see http://www.nabble.com/AMQ-1195-Get-duplicate-message-after-restart-Topic-subscriber.-tp18035270p18035270.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatabaseLocker implementation impedes database replication,AMQ-1244,12482281,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,marsangr,marsangr,11/May/07 06:33,19/Jun/08 22:45,30/Jan/20 16:57,19/Jun/08 22:45,4.1.1,,,,,,5.2.0,,,Message Store,,,,0,"The current implementation of the JDBC Master/Slave feature makes one broker (the master) acquire a lock on a database object. In Sybase, this has been implemented with the command:

LOCK TABLE foo IN EXCLUSIVE MODE

This command can only be executed within a transaction, see:
http://manuals.sybase.com/onlinebooks/group-as/asg1250e/sqlug/@Generic__BookTextView/54552;pt=54651

This implies that for the whole lifespan of the ActiveMQ-process there is an open transaction in the RDBMS. This is a problem in a professional environment making use of a database replication server: The open transaction impedes that the transaction log in the active database is emptied, then the stable queue at the replication server won't be purged and will steadily grow up to infinitum. We have been able to observe this behaviour.","Latest ActiveMQ snapshot, Sybase ASE 12.5.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 08:25:45.711,,,false,,,,,,,,,,,,,,,,,84578,,,Thu Jun 19 22:45:43 UTC 2008,,,,,,,,"0|i14blz:",233344,,,,,,,,,,,,,,,,,,,"12/Jun/07 08:25;jstrachan;A few thoughts. Firstly note that this locking transaction never updates any data and never needs to be replicated.

Couldn't the replication server just ignore the lock table? Or we could allow the lock table to be in a different schema (logical database) if that helps?

There needs to be some table used for locking; as we need to ensure multiple brokers don't write to the same logical database. Though by all means suggest a suitable workaround that works for you with database replication; would ignoring the table, or moving it to a separate logical database/schema work?

Worst case scenario; we could use a completely separate database entirely (even a different JDBC provider! :) but I'd rather reuse the same DataSource if we can (it makes things much simpler to code and removes a multitude of possible issues such as folks using a local Derby DB for the lock :)","03/Jul/07 12:00;marsangr;Our DBAs confirm that configuring the replication server to ignore the lock-table is a possible workaround with our system. This might be manufacturer-dependent. Using a lock table in a different logical database (not to be replicated) is another possible solution.

Wouldn't it though be easier and much more portable to actually insert a (dummy) row in the lock-table as the inter-broker communication mechanism? This wouldn't require a transaction to be kept open for the whole lifetime of the broker.","03/Jul/07 14:51;jstrachan;The idea of keeping the transaction open is to keep a lock; so that if the connection/transaction fails, the broker stops being the master, then all the brokers fight to get the lock again.

Inserting a row in a database doesn't really help; if the master dies; how do the slaves know?

If you can come up with a workable alternative I'm all ears. (Especially if its with [a patch|http://activemq.apache.org/contributing.html] :) but until then, I think the long transaction is the only real alternative we have. 

You could experiement with the SQL (the Statements class)  so that the lock table is named to be in a different logical database; yet using the same DataSource .
","04/Jul/07 08:57;marsangr;I assume that the only communication channel that two brokers have in common is the database. What about leveraging on the usual concept of a heartbeat? Let the Lock-Table have a datetime row and let the active broker update periodically the row with the current (database) time. If the standby broker detects that the row value diverges from the current time more than a delta, then the active broker is stalled/dead. Advantages of this technique:
a) No transaction kept open for an undetermined time window
b) To my eyes, this is even more effective in detecting a failure that the current mechanism, for it requires now the active broker to actually undertake an action,and not just remain inactive holding a token.

Comments?","19/Jun/08 18:17;jasonrtheune;We have addressed an issue mentioned in TS-1244 with a snippet of code.
We would like to contribute our fix to the ActiveMQ 5.2 code base for consideration for permanent inclusion.

This fix has proven out in our customer environment, and our customer is happy with the code.
We would now like to be sure our fix gets into the main branch so we do not have to patch a one off version with every release.

Any chance in getting this patch accepted to the community through any channel that works?  
The fix is fairly simple in that it basically does what James Strachan suggests in the ticket...
   (i.e., optionally use a different data source for the lock).  

This code change is submitted by Jason Theune on behalf of Rod Cope.

Here's the changed and added code in JDBCPersistenceAdapter.java:
 ======================================================
    // Added by Rod Cope of OpenLogic to allow the lock table to
    // reside in a separate database.  This makes sure that the
    // main database's transaction logs don't fill up because
    // the ActiveMQ lock transaction never closes.
    private DataSource lockDataSource;
 
    // Modified by Rod Cope of OpenLogic to allow the lock table to
    // reside in a separate database.  This makes sure that the
    // main database's transaction logs don't fill up because
    // the ActiveMQ lock transaction never closes. 
    protected DatabaseLocker createDatabaseLocker() throws IOException {
        return new DefaultDatabaseLocker(getLockDataSource(), getStatements());
    }

 
    // Added by Rod Cope of OpenLogic to allow the lock table to
    // reside in a separate database.  This makes sure that the
    // main database's transaction logs don't fill up because
    // the ActiveMQ lock transaction never closes.
    public DataSource getLockDataSource() throws IOException {
        if (lockDataSource == null) {
            lockDataSource = getDataSource();
            if (lockDataSource == null) {
                throw new IllegalArgumentException(""No dataSource property has been configured"");
            }
        } else {
            LOG.info(""Using a separate dataSource for locking: "" + lockDataSource);
        }
        return lockDataSource;
    }
    // Added by Rod Cope of OpenLogic to allow the lock table to
    // reside in a separate database.  This makes sure that the
    // main database's transaction logs don't fill up because
    // the ActiveMQ lock transaction never closes.
    public void setLockDataSource(DataSource dataSource) {
        this.lockDataSource = dataSource;
    }
 
Of course, it's fine if they resolve the issue in some other way that makes sense and/or change any comments.  
I'd just like to avoid having our customer on a forked version because support efforts would be complicated.
","19/Jun/08 22:45;rajdavies;Fixed by SVN revision 669733",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
threads not stopping causing memory leaks which can lead to OutOfMemoryError,AMQ-1214,12482173,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,txtoth,txtoth,27/Mar/07 15:02,19/Jun/08 15:38,30/Jan/20 16:57,19/Jun/08 15:38,4.1.0,,,,,,5.2.0,,,,,,,2,Threads started by ActiveMQ on behalf of a client persist in a ThreadGroup despite calling the 'interrupt' method on the group thereby leaking memory.  ,Fedora Core 6,alexiskinsella,fkoschmieder,gvaghjiani,stefan.reuter,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/07 15:02;txtoth;ASF.LICENSE.NOT.GRANTED--threadleak.tar.gz;https://issues.apache.org/jira/secure/attachment/12460680/ASF.LICENSE.NOT.GRANTED--threadleak.tar.gz","30/Apr/07 10:25;anishpathadan;test.java;https://issues.apache.org/jira/secure/attachment/12460996/test.java",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-04-30 15:35:03.966,,,false,,,,,,,,,,,,,,,,,84460,,,Thu Jun 19 15:38:57 UTC 2008,,,,,,,,"0|i0s1k7:",161729,,,,,,,,,,,,,,,,,,,"30/Apr/07 15:35;anishpathadan;Hi All,
      This bug can be closed as the threads persisted are valid.

If we run the original test case(ie threadleaker.tar.gz), we can see the threads which persisted are two ""ActiveMQ Scheduler"" threads. These threads are executed using ScheduledThreadPoolExecutor with a pool size of 5. Pool size of 5 means a maximum of 5 such threads will be available in the pool and these threads will be used to execute n number of ""ActiveMQ Scheduler"" threads. 

If connection is created and closed a lot of times, a maximum of 5 ""ActiveMQ Scheduler"" threads and  lots of ""ActiveMQ Connection worker""  threads will be created.The latter  thread is created to be timed out after 5 seconds of creation.

This can be verified by executing the attached test.java . This testcase prints the total number of threads in the system after a  connection.start() and connection.close() is called.The total  number of threads never increases to a very high number  as the initial threads are getting timed out. 

Thanks,
Anish","01/May/07 12:47;jstrachan;Thanks for the heads up Anish!","20/Jul/07 21:51;stefan.reuter;I have two problems with this issue:
1. You shouldn't set the resolution to ""fixed"" when you didn't fix anything :-)
2. ""threads persisted are valid"" - this depends on what you consider valid.

When deployed to a web container like Tomcat the threads are not shut down and cause a PermGen leak. The fix would be quite easy: Just shut it down in some destroy method or at least make it clear to user's that they have to take care of the clean up.

More information:

http://www.mail-archive.com/activemq-users@geronimo.apache.org/msg05687.htmlvv
http://www.mail-archive.com/activemq-users@geronimo.apache.org/msg05706.html

http://blogs.reucon.com/srt/2007/07/20/java_lang_outofmemoryerror_permgen_space.html","19/Jun/08 15:38;rajdavies;Fix applied in SVN revision 669512",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EOFException on idling listener,AMQ-1538,12482237,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,hackingbear,hackingbear,06/Jan/08 00:15,10/Jun/08 13:45,30/Jan/20 16:57,10/Jun/08 13:45,5.0.0,,,,,,5.1.0,,,JMS client,,,,1,"Ever since I switched over to 5.0.0, I got these EOFException in the onException() callback of the listener when it is sitting idle. I also notice that similar exception is thrown in the MQ broker, especially after Windows wakes up from idling.

This does not happen in 4.1.

Is this a bug in 5.0?

thx
----

ERROR Server [AcitveMQ Connection Worker: tcp://localhost/127.0.0.1:61616|] JMS connection received asynchronous exception
javax.jms.JMSException: java.io.EOFException
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
        at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1642)
        at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1659)
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
        at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
        at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
        at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:169)
        at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:95)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:176)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.EOFException
        at java.io.DataInputStream.readInt(DataInputStream.java:375)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:192)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:184)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
        ... 1 more ","JDK 1.6, Windows Vista",duribe,justinpitts@gmail.com,konrad_a,marcusn,mkelley63,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84662,,,2008-01-06 00:15:07.0,,,,,,,,"0|i0s1n3:",161742,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkConnector parameters are not passed back over a duplex connection,AMQ-1542,12482282,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,tpounds,tpounds,08/Jan/08 20:37,15/May/08 14:47,30/Jan/20 16:57,15/May/08 14:47,5.0.0,,,,,,5.2.0,,,,,,,0,"This issue has been described in the following mainly pertaining to networkTTL parameter but this bug actually affects all parameters one wishes to propagate to the remote broker via a duplex connection.

see: http://www.nabble.com/NetworkTTL-and-Duplex-Problem-to14428941s2354.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/08 20:39;tpounds;networkTTL.diff;https://issues.apache.org/jira/secure/attachment/12460935/networkTTL.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-01-09 16:17:32.192,,,false,,,,,,,,,,,,,,,,,84661,,,Thu May 15 14:26:15 UTC 2008,,,,,,,,"0|i14bb3:",233295,,,,,,,,,,,,,,,,,,,"08/Jan/08 20:39;tpounds;Contributing patch to fix described networkTTL deficiency.","09/Jan/08 16:17;rajdavies;Applied patch - svn revision  610432","30/Apr/08 19:33;rajdavies;Need to pass all configuration options across for duplex network connections","01/May/08 06:07;rajdavies;Fixed by SVN revision 652437","15/May/08 13:53;joef;Need to add this line before calling remoteBroker.oneway(brokerInfo);

brokerInfo.setBrokerId(this.localBrokerId);

This allows the remote to id its duplex partner and make proper decisions (e.g., whether to forward a message or not).  This is also related to 

http://issues.apache.org/activemq/browse/AMQ-1661

 

","15/May/08 13:56;joef;Please see previous comment ","15/May/08 14:26;rajdavies;Fixed by SVN revision 656679",,,,,,,,,,,,,,,,,,,,,,,,,,,,
release 5.0.0 depends on SNAPSHOT version of activeio,AMQ-1520,12482226,12482162,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,pkozelka,pkozelka,14/Dec/07 21:07,29/Apr/08 18:06,30/Jan/20 16:57,10/Apr/08 18:44,,,,,,,5.1.0,,,,,,,8,"(from $HOME/.m2/repository/org/apache/activemq/activemq-parent/5.0.0/activemq-parent-5.0.0.pom)

The release 5.0.0 of ActiveMQ, as published on Maven Central Repository, depends on activeio version 3.1-SNAPSHOT

This is probably result of a bug in maven release plugin that allows such obscurity.

It makes the library difficult to use and is also logically a nonsense. Please fix this in a next release. 
Thanks",,cw_krebs,isnogood,jmoran,john.greeley,pkozelka,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95812,,,2007-12-14 21:07:50.0,,,,,,,,"0|i0s1m7:",161738,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ RA serialization issue on Glassfish,AMQ-765,12482131,12482373,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rhavyn,rhavyn,21/Jun/06 00:09,28/Apr/08 16:56,30/Jan/20 16:57,12/Feb/08 13:10,4.0,4.0.1,,,,,5.1.0,,,Connector,,,,2,"I've been trying to work through an issue with a NullPointerException run using the JCA 1.5 resource adapter on Glassfish.  In the course of debugging, Siva from the Glassfish team provided this information:

""Thanks for trying out GlassFish. Since I have only the trace snippet above, I tried to debug this problem by going through ActiveMQ RA's source available at https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-ra/src/main/java/org/apache/activemq/ra/

This is what I understand happens. Please correct me if there are errors. When ActiveMQConnectionFactory [https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-ra/src/main/java/org/apache/activemq/ra/ActiveMQConnectionFactory.java] is created at the createConnectionFactory method of https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-ra/src/main/java/org/apache/activemq/ra/ActiveMQManagedConnectionFactory.java, the ConnectionManager is initialized to a *transient* variable ""manager"". Since ConnectionFactory instances can be serialized/deserialized while publishing to JNDI (as is the case in Project GlassFish), the connectionManager reference is lost and hence the NPE. The fix ideally should be in the ActiveMQRA's code. You could copy me [sivakumart AT sun DOT com] while you are discussing this with ActiveMQ, if you wish. If you still have any issues, please provide a copy of your domain.xml [connector connection pool, resource configuratin information] and the entire trace in server.log."" ",Glassfish,michalk,rhavyn,zombiepeanutbutter,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jan/08 15:50;hudalla;ASF.LICENSE.NOT.GRANTED--RA.patch;https://issues.apache.org/jira/secure/attachment/12461063/ASF.LICENSE.NOT.GRANTED--RA.patch","07/Nov/07 15:29;michalk;finest-log.txt;https://issues.apache.org/jira/secure/attachment/12461014/finest-log.txt","06/Nov/07 23:35;michalk;log.txt;https://issues.apache.org/jira/secure/attachment/12460947/log.txt",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2006-10-06 18:32:53.0,,,false,,,,,,,,,,,,,,,,,84335,,,Wed Apr 16 15:46:03 UTC 2008,,,,,,,,"0|i0s1j3:",161724,,,,,,,,,,,,,,,,,,,"21/Jun/06 00:10;rhavyn;The mailing list discussion related to this issue can be found at: http://www.nabble.com/NullPointerException-with-RA-on-Glassfish-t1814940.html#a4959128","06/Oct/06 18:32;zombiepeanutbutter;The same thing happens on oracle (oc4j) 10.1.3, except that I am using ActiveMQTopicConnectionFactory, instead of the managed connection factory.
Same error, same line.

Details:
-I deploy the resource adapter exactly as it comes packaged in v4.0.1
-I'm using an external broker, running on the same machine.
-I create one topic connection factory
-I create one topic

In the code, the context lookups for the topics go through just fine (the objects are found), but upon calling factory.createTopicConnection(), I get the NPE.  Setting UseInboundSession to true lets this go through just fine, but I'm not writing a message driven bean, so this doesn't help me out very much.
","12/Jun/07 14:51;jstrachan;Does anyone know if this is still an issue with 4.1.1 or 5.0.0?","06/Nov/07 23:31;michalk;It is still an issue in 4.1.1. ","06/Nov/07 23:35;michalk;The exception log I get on ActiveMQ 4.1.1  with
Sun Java System Application Server 9.1 (build b58g-fcs)","07/Nov/07 15:29;michalk;After further investigation :

In version 4.1.1 the manager is not transient and not null, but I think I am getting the same error with the transient managed connection factory. 

Everything starts here:

        @Resource(mappedName = ""jms/UserUpdateConnectionFactory"")
	private ConnectionFactory jmsConnectionFactory;

	@PostConstruct
	public void jmsConfigure()
	{
                        {....}
			jmsConnection = jmsConnectionFactory.createConnection(); //at this point the jmsConnectionFactory is of class ActiveMQConnectionFactory but it's managed connection factory is null
                         {....}
        }

Iam not sure if this because I didnt configure something or because of the fact that managed connection factory is transient.

after calling ActiveMQConnectionFactory.createConnection the null mcf is passed to ConnectionManagerImpl.allocateConnection.
(http://fisheye5.cenqua.com/browse/glassfish/appserv-core/src/java/com/sun/enterprise/connectors/ConnectionManagerImpl.java?r=1.6#l231)

in this method there is a check:

if(_logger.isLoggable(Level.INFO)){
            if (! freshMCF.equals(mcf)) {
                _logger.info(""conmgr.mcf_not_equal"");
            }
        }

the fresh mcf retrieved from pool meta data PoolMetaData pmd = registry.getPoolMetaData( poolName );   ManagedConnectionFactory freshMCF = pmd.getMCF(); is a proper activemq mcf but the value is used only for logging purposes: 

this conmgr.mcf_not_equal translates to The mcf being used to allocate the connection and the MCF in the pool are not equal. in the attached log-finest.txt log file.

Finally when ConnectorAllocator.createResource method is called the mcf is null :
http://fisheye5.cenqua.com/browse/glassfish/appserv-core/src/java/com/sun/enterprise/resource/ConnectorAllocator.java?r=1.6#l136





","24/Dec/07 16:33;hudalla;I have tried to work around the problem described by Michal by simply declaring the factory property of ActiveMQConnectionFactory to not be transient. However, after running my test driver for accessing a ConnectionFactory managed by the ActiveMQ RA, I ran into the following problem:

Caused by: java.lang.RuntimeException: Cant copy Serializable object:
        at com.sun.enterprise.naming.NamingUtils.makeCopyOfObject(NamingUtils.java:82)
        at com.sun.enterprise.naming.NamingManagerImpl.lookup(NamingManagerImpl.java:842)
        at com.sun.enterprise.naming.java.javaURLContext.lookup(javaURLContext.java:173)
        ... 66 more
Caused by: java.io.NotSerializableException: com.sun.enterprise.connectors.BootstrapContextImpl
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1156)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
        at com.sun.enterprise.naming.NamingUtils.makeCopyOfObject(NamingUtils.java:64)
        ... 68 more


After having spent some time looking at the RA source code of version 5.0.0 my feeling is that the ActiveMQManagedConnectionFactory violates the javax.resource.spi.ManagedConnectionFactory contract because it is not Serializable.

 ActiveMQManagedConnectionFactory has a property of type org.apache.activemq.ra.MessageResourceAdapter which extends the javax.resource.spi.ResourceAdapter interface which itself does NOT extend Serializable, i.e. implementors are not required to be serializable. The ActiveMQResourceAdapter implementing the MessageResourceAdapter interface, however, claims to be serializable but does have a property of type javax.resource.spi.BootstrapContext. But BootstrapContext implementations are not required to be Serializable. In case of glassfish the passed in com.sun.enterprise.connectors.BootstrapContextImpl class is NOT serializable.

Therefore, declaring the factory property to NOT be transient is not working because ActiveMQManagedConnectionFactory is not serializable as mandated by the JCA spec.

Any thoughts?

Kai","14/Jan/08 15:49;hudalla;Hi,

I have spent some time fixing the Resource Adapter's serialization issue in order to make it work in glassfish v2. Therefore I made some changes to ActiveMQConnectionFactory, ActiveMQManagedConnectionFactory and ActiveMQResourceAdapter. I have also created additional test cases and updated the existing ones to reflect my changes. I have successfully tested it in my local environment using glassfish v2 and v2 UR1 on JDK 1.5.0_14. I have also attached a patch for the 5.1 SNAPSHOT code in SVN. Could someone test it against Geronimo in order to see if it's still working there?

Regards,
Kai","14/Jan/08 15:50;hudalla;Patch to fix serialization issue on glassfish.","12/Feb/08 13:09;hudalla;Already fixed in 5.1 instead of 5.2","12/Feb/08 13:10;hudalla;Resource Adapter has been fixed to support serialization of RA components as performed by glasfish.","01/Apr/08 07:59;gdaswani;Is this problem really fixed on the latest 5.1 snapshots?  I tried the 03/29/08 5.1-SNAPSHOT but I'm still running into the following error

---------------------- CUT -------------------
javax.jms.JMSException: Error in allocating a connection. Cause: null
	at org.apache.activemq.ra.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:98)
	at org.apache.activemq.ra.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:64)
---------------------- CUT -------------------

when trying to use outbound connections","16/Apr/08 15:46;rajdavies;Applied patch to trunk - in SVN Committed revision 648727",,,,,,,,,,,,,,,,,,,,,,
"Kaha crashes after database recovery looking for ""data--2""",AMQ-1264,12482411,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,tom@samplonius.org,tom@samplonius.org,05/Jun/07 01:54,28/Apr/08 10:15,30/Jan/20 16:57,19/Jul/07 07:42,5.0.0,,,,,,5.0.0,,,Broker,Message Store,,,0,"  There is a problem when using the default persistence settings, and ActiveMQ is shutdown uncleanly with messages in a queue.  After a restart (and log recovery), and attempt to read a message out of the queue, generates the following error (and ActiveMQ hangs).

  It appears that there are too many ""-"" in a concatenation somewhere, as the logfiles are ""data-1"", ""data-2"", etc, not ""data--1"", which is probably is what is generating the exception.

  This is with 4.2-SNAPSHOT-20070602.


ERROR AsyncDataManager               - Looking for key 1 but not found in fileMap: {3=data-3 number = 3 , length = 9051046 refCount = 3}
ERROR QueueStorePrefetch             - Failed to fill batch
java.io.IOException: Failed to read to journal for: offset = 20785811, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data--1
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:31)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:529)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:409)
        at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:382)
        at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:52)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recover(KahaReferenceStore.java:63)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:89)
        at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:477)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.fillBatch(QueueStorePrefetch.java:159)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.hasNext(QueueStorePrefetch.java:110)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:122)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1007)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:992)
        at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:215)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:241)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:341)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:87)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:79)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:87)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:97)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:566)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:313)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:282)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:119)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSubscribe(ProtocolConverter.java:351)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommad(ProtocolConverter.java:149)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:71)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Could not locate data file data--1
        at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:259)
        at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:477)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:406)
        ... 30 more","apache-activemq-4.2-20070602

tom@light:~/activemq$ java -version
java version ""1.5.0""
Java(TM) 2 Runtime Environment, Standard Edition (build diablo-1.5.0-b01)
Java HotSpot(TM) Server VM (build diablo-1.5.0_07-b01, mixed mode)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:48:09.177,,,false,,,,,,,,,,,,,,,,,84704,,,Mon Apr 28 10:15:58 UTC 2008,,,,,,,,"0|i181bj:",255016,,,,,,,,,,,,,,,,,,,"12/Jun/07 09:48;jstrachan;added an affected version","12/Jun/07 16:07;jstrachan;given your recent work on the Kaha/AMQStore I figured this was for you :)","24/Jun/07 06:44;tom@samplonius.org;I tested this again in activemq-5.0-20070621.

I used a Net::Stomp based client to produce 250,000 mesages into a queue.  And then used a consumer to grab messages.  After consuming 85,000 of the message, I ""kill -9"" (immediate exit) the java process, and then started ActiveMQ again.

ActiveMQ starts a Kaha recovery:

INFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)
INFO  AMQPersistenceAdapter          - Recovered 176328 operations from redo log in 2905.979 seconds.

(which takes a really long time, as you can see)

And it still does this.  This looks like a trivial bug?  It looks someone just appended two hypens to ""data"".  Probably because the DataManager starts with ""data-"" (as logged above), and then adds ""-1"" afterwards.

ERROR AsyncDataManager               - Looking for key 1 but not found in fileMap: {2=data-2 number = 2 , length = 33554395 refCount = 0, 4=data-4 number = 4 , length = 3913200 refCount = 3, 3=data-3 number = 3 , length = 33554195 refCount = 0}
ERROR QueueStorePrefetch             - Failed to fill batch
java.io.IOException: Failed to read to journal for: offset = 28983199, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data--1
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:31)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:541)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:421)
...","11/Jul/07 08:39;rajdavies;this should be fixed - I can't reproduce - can you confirm Tom ?","16/Jul/07 02:41;tom@samplonius.org;I have tested with a 5.0 snapshot from July 12, and it seems to be fine now.

But you'll want to avoid crashes, as a Kaha recovery on a message store after 200,000 messages have been queued, and then 55,000 removed, takes about a half-hour.

I guess all of the dead-space in the Kaha log files takes a while to scan.  Would reducing the file size help?  I think Kaha removes files that no longer contain any active data as messages are consumed.  So if the log files are smaller, the log recovery should be faster right?","19/Jul/07 07:42;rajdavies;reducing the size of the log files should help - I'll make it configurable on the AMQStore - thanks for the help Tom!","19/Jul/07 07:42;rajdavies;This now appaears fixed","28/Apr/08 10:15;dfrodrig;Hello, 

I think I am not supposed to re-open this issue, but the fact is, if there is a crash, recovery takes a  huge amount of time. 

2008-04-28 11:32:21,123 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Recovered 722013 operations from redo log in 3801.997 seconds.

I understand this might have to be recovered once.  But, suppose we have a SAN master-slave configuration, basing it on AMQStore: the fact it's taking more than half an hour to recover renders this topology unusable! 


Moreover, it seems like kaha is not removing log files not containing any more active-data.

For instance, a recent log in a crash:
 
2008-04-28 10:28:59,126 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)
2008-04-28 10:28:59,146 [msg.performance] DEBUG AMQMessageStore                - Doing batch update... adding: 0 removing: 0
2008-04-28 10:28:59,147 [msg.performance] DEBUG AMQMessageStore                - Batch update done.
2008-04-28 10:29:02,798 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: CHECKPOINT Tue Apr 15 13:49:33 CEST 2008
2008-04-28 10:29:56,556 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: CHECKPOINT Tue Apr 15 13:50:33 CEST 2008
(Repeats same Tracing until) 
2008-04-28 10:32:07,354 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: CHECKPOINT Thu Apr 17 15:23:33 CEST 2008
2008-04-28 10:32:07,354 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: RECOVERED Thu Apr 17 15:26:50 CEST 2008
2008-04-28 10:32:07,354 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: RECOVERED Thu Apr 17 16:04:16 CEST 2008
2008-04-28 10:32:07,354 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: RECOVERED Fri Apr 18 10:38:25 CEST 2008
2008-04-28 10:32:07,354 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: RECOVERED Fri Apr 18 14:43:28 CEST 2008
2008-04-28 10:32:07,355 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: RECOVERED Fri Apr 18 16:52:44 CEST 2008
2008-04-28 10:32:07,355 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: RECOVERED Fri Apr 18 17:00:09 CEST 2008
2008-04-28 10:32:11,196 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: CHECKPOINT Wed Apr 23 11:41:09 CEST 2008
(Repeats same tracing until)
2008-04-28 11:32:21,091 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: CHECKPOINT Mon Apr 28 10:26:09 CEST 2008
2008-04-28 11:32:21,091 [erSimpleAppMain] DEBUG AMQPersistenceAdapter          - TRACE Entry: CHECKPOINT Mon Apr 28 10:27:09 CEST 2008
2008-04-28 11:32:21,123 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Recovered 722013 operations from redo log in 3801.997 secon
ds.
2008-04-28 11:32:21,123 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Finished recovering the ReferenceStore



So, only very few operations were recovered, and most of the time the recovering time seems to have been spent unecessarily.

Even assuming this is necessary once, why is it necessary to go back this much in time if we failover again?


Thanks,
daniel",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Destroying durable subscription, does not entirely destory the durable subsciber",AMQ-1135,12482389,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,sandeepchayapathi,sandeepchayapathi,23/Jan/07 16:01,25/Apr/08 06:34,30/Jan/20 16:57,25/Apr/08 06:34,4.1.0,,,,,,5.1.0,,,Broker,,,,4,"Destroying a durable subcriber, via jconsole or by programmatically, does not remove the durable subscriber. Over a period of time, once the memory reaches the memorymanager limit, is causing ""out of memory"" exception.

Steps to duplicate:

1. start activemq, with a memorymanager limit of 10 MB
2. start a consumer, as a durable subscriber (you can use the bundled example ConsumerTool.java), for a topic.
3. start a producer to send messages to the topic
4. kill the consumer, followed by the producer
5. use jconsole to connect to the activemq server
6. select the brokers ""Operations"" tab 
7. delete the durable subscriber - notice the earlier subscription is never removed, instead moved to a ""false"" subscription state
8. start the producer again - notice the memory usage increases, upto the 10MB limit, and a ""out of memory"" exception is thrown

Attached is a screenshot of my jconsole showing the ""false"" subscription state.

This never occurred in AMQ 4.0.2 or 4.0.1, hence this must be a regression bug.

I would appreciate either a fix/patch or a workaround solution for this issue, as this is one of the issues holding us from moving AMQ to a production setup.","Linux 2.6.9-34.EL i686 i686 i386, Intel(R) Pentium(R) 4 CPU 2.80GHz, 2GB memory",sandeepchayapathi,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/07 16:01;sandeepchayapathi;ASF.LICENSE.NOT.GRANTED--jconsole.gif;https://issues.apache.org/jira/secure/attachment/12460762/ASF.LICENSE.NOT.GRANTED--jconsole.gif",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-05-15 13:19:30.861,,,false,,,,,,,,,,,,,,,,,42093,,,Mon Oct 29 14:50:04 UTC 2007,,,,,,,,"0|i0s1tj:",161771,Regression,,,,,,,,,,,,,,,,,,"15/May/07 13:19;terris;For me, AMQ1077 did not resolve this issue in versions 4.1.1 or 4.2.0. Removing the subscription via JMX (say, jconsole.exe) is not acceptable.","29/Oct/07 14:50;sparky2708;Also same problem. It was OK in AMQ 4.0.1 & 4.0.2 but started happening when we switched to 4.1.1. I am now getting:

javax.jms.InvalidClientIDException: Broker: localhost - Client: com.pgam.messaging.services.EQSecurityDescService already connected
	at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:204)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
	at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:70)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:92)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:706)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:86)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:121)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.ClassCastException: org.apache.activemq.command.BrokerId ,AMQ-1169,12482396,12482268,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vpesochi,vpesochi,22/Feb/07 17:51,25/Apr/08 06:29,30/Jan/20 16:57,25/Apr/08 06:29,4.1.0,,,,,,5.1.0,,,Broker,,,,0,"There were a lot of "": Channel was inactive for too long"" messages before and after the ClassCastException. I do not know if the system would recover from this by itself.

java.lang.ClassCastException: org.apache.activemq.command.BrokerId
at org.apache.activemq.openwire.v2.MessageDispatchMarshaller.tightUnmarshal(MessageDispatchMarshaller.java:70)
at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:347)
at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:273)
at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:156)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
at java.lang.Thread.run(Thread.java:595)",winxp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-08-17 10:14:50.35,,,false,,,,,,,,,,,,,,,,,84475,,,Thu Nov 01 15:30:46 UTC 2007,,,,,,,,"0|i1814v:",254986,,,,,,,,,,,,,,,,,,,"22/Feb/07 22:44;vpesochi;this is most likely result of having different version of amq jars on the client and server sides","17/Aug/07 10:14;lhotari;I'm experiencing the same problem on the client side. 

Exception in thread ""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" java.lang.ClassCastException: org.apache.activemq.command.BrokerId
	at org.apache.activemq.openwire.v2.MessageMarshaller.looseUnmarshal(MessageMarshaller.java:193)
	at org.apache.activemq.openwire.v2.ActiveMQMessageMarshaller.looseUnmarshal(ActiveMQMessageMarshaller.java:101)
	at org.apache.activemq.openwire.v2.ActiveMQStreamMessageMarshaller.looseUnmarshal(ActiveMQStreamMessageMarshaller.java:101)
	at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:349)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:273)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:156)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
	at java.lang.Thread.run(Thread.java:595)

I think this problem is caused by using backport-util-concurrent 3.0 on the client side.
That's mentioned here:
https://issues.apache.org/jira/browse/GERONIMO-2995

Could AMQ client be made backport-util-concurrent 3.0 compatible?

I'm using ActiveMQ 4.1.1 . On the client side there's backport-util-concurrent 3.0 (server has backport-util-concurrent 2.1).
","17/Aug/07 10:21;lhotari;This problem exists in 4.1.1 , please make client backport-util-concurrent 3.0 compatible. more details in the comments I've just added to this issue.","17/Aug/07 11:24;lhotari;backport-util-concurrent 3.0 works on server and client, but it doesn't seem to perform as well as 2.1 version.","20/Aug/07 07:40;lhotari;This issue has probably nothing to do with backport-util-concurrent version...

I'm getting ClassCastExceptions in my test environment several times a week. The ActiveMQ version is 4.1.1 running on Sun Java 1.5.0_11

It's hard to understand why this exception is possible:
Exception in thread ""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" java.lang.ClassCastException: org.apache.activemq.command.BrokerId
at org.apache.activemq.openwire.v2.MessageMarshaller.looseUnmarshal(MessageMarshaller.java:193)
at org.apache.activemq.openwire.v2.ActiveMQMessageMarshaller.looseUnmarshal(ActiveMQMessageMarshaller.java:101)
at org.apache.activemq.openwire.v2.ActiveMQStreamMessageMarshaller.looseUnmarshal(ActiveMQStreamMessageMarshaller.java:101)
at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:349)
at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:273)
at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:156)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
at java.lang.Thread.run(Thread.java:595)

It's expecting a ProducerId object, but it receives a BrokerId object.
","01/Nov/07 15:30;lhotari;My problem went away after using backport-util-concurrent 2.1 on client (and server).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.0.0 release depends on SNAPSHOT version of xbean,AMQ-1522,12482162,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tpounds,tpounds,17/Dec/07 20:28,22/Apr/08 23:34,30/Jan/20 16:57,22/Apr/08 23:34,5.0.0,,,,,,5.1.0,,,,,,,6,The ActiveMQ 5.0.0 release is depending on a SNAPSHOT version of xbean which causes the build not to work properly with the maven release plugin.,,cw_krebs,jmoran,john.greeley,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84669,,,Tue Apr 22 23:34:51 UTC 2008,,,,,,,,"0|i0s1jr:",161727,,,,,,,,,,,,,,,,,,,"17/Dec/07 20:29;tpounds;Linking to similar issue with activeio snapshot.","22/Apr/08 23:34;tpounds;Fixed in ActiveMQ trunk (SVN r648836) and 5.1.0 release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory queues don't disappear for TEMPORARY queues/topics,AMQ-1255,12481967,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,sparky2708,sparky2708,30/May/07 19:14,14/Apr/08 15:59,30/Jan/20 16:57,14/Apr/08 15:59,4.1.0,,,,,,5.1.0,,,Broker,,,,0,My ActiveMQ clients create TEMPORARY queues and I have been looking through the active queues recently and I noticed a number of advisory queues are sticking around (mostly ones that have ActiveMQ.Advisory.Producer.*) that refer to the temporary queues that I created. It seems that even though the temporary queues are gone the advisory topics are still there. Over time this looks like it degrades the performance of ActiveMQ.,,fullung,mooseroy,sparky2708,yossishm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-10-04 15:33:38.729,,,false,,,,,,,,,,,,,,,,,84453,,,Mon Apr 14 15:59:56 UTC 2008,,,,,,,,"0|i0s2v3:",161940,,,,,,,,,,,,,,,,,,,"04/Oct/07 15:33;rajdavies;Denis - is this still a problem on the latest?","25/Feb/08 23:40;sparky2708;Tried 5.1 snapshot and still seems like it is happening.","02/Mar/08 01:23;mooseroy;I am having similar problems with Advisory queues not disappearing after a topic is destroyed, and have found one code path that leaks advisory topics in my application.  If I create a topic, add a consumer for said topic, send some messages, remove the consumer, and explicitly destroy the topic, there are times that advisory topics for the topic are left behind.  The path that lead to this situation in my app was in AdvisoryBroker.addConsumer.  When I create the topic in the client, no addDestination occurs on the server, but when I add the consumer, the addConsumer occurs.  The AdvisoryBroker's addConsumer method does:
ActiveMQTopic topic = AdvisorySupport.getConsumerAdvisoryTopic(info.getDestination());
consumers.put(info.getConsumerId(), info);
fireConsumerAdvisory(context, topic, info);

Which in turn causes an addDestination to occur within the RegionBroker when the advisory event is sent to the ConsumerAdvisoryTopic created above.  What seems to be missing is when the removeDestination  method occurs, it looks within the AdvisoryBroker's destinations map for an entry for the destination getting closed, but in my situation there is no entry for my topic since addDestination never occured within the AdvisoryBroker.  This leaves behind the ConsumerAdvisoryTopic for my topic within the RegionBroker.

I'm not at all familiar with the inner workings of the Advisory system, but for my system I was able to greatly reduce the leaks by changing the addConsumer to look like this:

ActiveMQTopic topic = AdvisorySupport.getConsumerAdvisoryTopic(info.getDestination());
consumers.put(info.getConsumerId(), info);
if(!destinations.containsKey(info.getDestination())) {
  DestinationInfo destInfo = new DestinationInfo(context.getConnectionId(), DestinationInfo.ADD_OPERATION_TYPE, topic);
  fireAdvisory(context, topic, destInfo);
  destinations.put(info.getDestination(), destInfo);
}
 fireConsumerAdvisory(context, topic, info);

By doing this, when a destination is destroyed, the AdvisoryBroker has an entry in the map for the destination, so is able to remove the advisory topics from the RegionBroker.  I also did something similar in the addProducer.

As I said, this was simply a blind attempt to solve the leak within my application without any knowledge of the Advisory system, so I have no idea if this will cause side effects or unwanted behavior, but it might point someone with more understanding to the source of the problem.
","10/Apr/08 06:29;rajdavies;Cannot reproduce this on snapshot for 5.1","11/Apr/08 13:09;rajdavies;my mistake - problem is there","14/Apr/08 15:59;rajdavies;Resolved by SVN revision 647872",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Infinite recovery loop.,AMQ-732,12481606,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mfateev,mfateev,31/May/06 05:08,10/Apr/08 17:42,30/Jan/20 16:57,10/Apr/08 17:42,4.0,,,,,,4.0.3,5.1.0,,Broker,,,,0,"The simplest way to reproduce the problem:
1. Remove storage directory. 
2. Start broker using the following code:


 public static void main(String[] args)  throws Exception {
           BrokerService broker = new BrokerService();
           broker.setPersistent(true);
           DefaultPersistenceAdapterFactory pFactory = new DefaultPersistenceAdapterFactory();
           pFactory.setJournalLogFiles(1);
           pFactory.setJournalLogFileSize(2048);
           broker.setPersistenceFactory(pFactory);
           broker.setUseJmx(false);
           broker.addConnector(""tcp://localhost:61616"");
           broker.start();
           Thread.sleep(1000000000000l);
   }
3. Shutdown the broker.
4. Start broker.
It enters infinite loop

[                          main] BrokerService                  INFO  ActiveMQ null JMS Message Broker (localhost) is starting
[                          main] BrokerService                  INFO  For help or more information please see: http://incubator.apache.org/activemq/
[                          main] JDBCPersistenceAdapter         INFO  Database driver recognized: [apache_derby_embedded_jdbc_driver]
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE TABLE ACTIVEMQ_MSGS(ID INTEGER NOT NULL, CONTAINER VARCHAR(250), MSGID_PROD VARCHAR(250), MSGID_SEQ INTEGER, EXPIRATION BIGINT, MSG BLOB, PRIMARY KEY ( ID ) )
[                          main] DefaultJDBCAdapter             DEBUG Could not create JDBC tables; The message table already existed. Failure was: CREATE TABLE ACTIVEMQ_MSGS(ID INTEGER NOT NULL, CONTAINER VARCHAR(250), MSGID_PROD VARCHAR(250), MSGID_SEQ INTEGER, EXPIRATION BIGINT, MSG BLOB, PRIMARY KEY ( ID ) ) Message: Table/View 'ACTIVEMQ_MSGS' already exists in Schema 'APP'. SQLState: X0Y32 Vendor code: 20000
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE INDEX ACTIVEMQ_MSGS_MIDX ON ACTIVEMQ_MSGS (MSGID_PROD,MSGID_SEQ)
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE INDEX ACTIVEMQ_MSGS_CIDX ON ACTIVEMQ_MSGS (CONTAINER)
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE INDEX ACTIVEMQ_MSGS_EIDX ON ACTIVEMQ_MSGS (EXPIRATION)
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE TABLE ACTIVEMQ_ACKS(CONTAINER VARCHAR(250) NOT NULL, CLIENT_ID VARCHAR(250) NOT NULL, SUB_NAME VARCHAR(250) NOT NULL, SELECTOR VARCHAR(250), LAST_ACKED_ID INTEGER, PRIMARY KEY ( CONTAINER, CLIENT_ID, SUB_NAME))
[                          main] DefaultJDBCAdapter             DEBUG Could not create JDBC tables; The message table already existed. Failure was: CREATE TABLE ACTIVEMQ_ACKS(CONTAINER VARCHAR(250) NOT NULL, CLIENT_ID VARCHAR(250) NOT NULL, SUB_NAME VARCHAR(250) NOT NULL, SELECTOR VARCHAR(250), LAST_ACKED_ID INTEGER, PRIMARY KEY ( CONTAINER, CLIENT_ID, SUB_NAME)) Message: Table/View 'ACTIVEMQ_ACKS' already exists in Schema 'APP'. SQLState: X0Y32 Vendor code: 20000
[                          main] JDBCPersistenceAdapter         DEBUG Cleaning up old messages.
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
[                          main] DefaultJDBCAdapter             DEBUG Deleted 0 old message(s).
[                          main] JDBCPersistenceAdapter         DEBUG Cleanup done.
[                          main] JournalPersistenceAdapter      INFO  Journal Recovery Started from: Active Journal: using 1 x 0.001953125 Megs at: /workplace/fateev/install/activemq-4.0-SNAPSHOT/activemq-core/activemq-data/journal
[                          main] JournalPersistenceAdapter      DEBUG TRACE Entry: RECOVERED
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=53
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=97
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=0
[                          main] JournalPersistenceAdapter      DEBUG TRACE Entry: RECOVERED
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=53
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=97
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=0
[                          main] JournalPersistenceAdapter      DEBUG TRACE Entry: RECOVERED
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=53
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=97
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=0

The log entry from getNextDataRecordLocation is coming from log statement I've added to LogFileManager.getNextDataRecordLocation:

   public Location getNextDataRecordLocation(Location lastLocation) throws IOException, InvalidRecordLocationException {
        RecordInfo ri = readRecordInfo(lastLocation);
        while (true) {

            int logFileId = ri.getLocation().getLogFileId();
            int offset = ri.getNextLocation();
            log.debug(""getNextDataRecordLocation offset="" + offset);
            // Are we overflowing into next logFile?
            if (offset >= ri.getLogFileState().getAppendOffset()) {
                LogFileNode nextActive = ri.getLogFileState().getNextActive();
                log.debug(""getNextDataRecordLocation overflowing into next logFile="" + (nextActive == null ? ""null""  : String.valueOf(nextActive.getId())));
                if (nextActive == null) {
                    return null;
                }
                logFileId = nextActive.getId();
                offset = 0;
            }

            try {
                ri = readRecordInfo(new Location(logFileId, offset));
            } catch (InvalidRecordLocationException e) {
                return null;
            }

            // Is the next record the right record type?
            if (ri.getHeader().getRecordType() == DATA_RECORD_TYPE) {
                return ri.getLocation();
            }
            // No? go onto the next record.
        }
    }

It looks like recovery doesn't take into account that journaling storage file should have some end at some point. 

Similar problem happens if multiple files of bigger size are used. It happens every time one of the log files grows bigger then size specified in pFactory.setJournalLogFileSize(...) call.

",Linux RHEL 3,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/06 03:45;mfateev;activemq-data-1-journal.tar.gz;https://issues.apache.org/jira/secure/attachment/12460681/activemq-data-1-journal.tar.gz","09/Jun/06 03:47;mfateev;activemq-data-2-journal.tar.gz;https://issues.apache.org/jira/secure/attachment/12460824/activemq-data-2-journal.tar.gz",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-06-05 22:32:13.0,,,false,,,,,,,,,,,,,,,,,84345,,,Tue Jul 11 21:49:40 UTC 2006,,,,,,,,"0|i0s0i7:",161558,,,,,,,,,,,,,,,,,,,"01/Jun/06 01:53;mfateev;I was able to reproduce problem with default journal configuration. 
1. Remove content of storage directory.
2. Start broker. 
3. Enqueue 30000 messages.
4. Stop broker.
5. Start broker.
6. Dequeue 30000 messages.
7. Stop broker.
8. Start broker.
9. Enqueue 30000 messages.
10. Stop broker.
11. Recovery never ends looping through log files:

fateev@fateev:/workplace/fateev/install/activemq-4.0-SNAPSHOT/activemq-core/activemq-data> grep overflowing server.log
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=4
57352 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=4
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=3
73287 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=3
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=4
118821 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=4
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=3
122112 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=3
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=4
164157 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=4
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=3
166746 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=3
","05/Jun/06 22:32;chirino;How big were the messages?  Can the shiped example producer and consumer in the examples directory reproduce the issue?","07/Jun/06 02:15;mfateev;I don't know message size as I use shipped producer and consumer. Here are commands used to enqueue and dequeue messages:

activemq/assembly/target/activemq-4.0-SNAPSHOT/bin/activemq-4.0-SNAPSHOT/example> ant producer -Ddurable=true -Dmax=10000
activemq/assembly/target/activemq-4.0-SNAPSHOT/bin/activemq-4.0-SNAPSHOT/example> ant consumer -Ddurable=true -Dmax=10000
","07/Jun/06 02:17;mfateev;Also note that my first entry shows how to reproduce the problem without ANY consumers and producers.","08/Jun/06 01:32;mfateev;One possible clue is that I'm running broker from eclipse. And eclipse kills processes without running their shutdown handlers. So it might be that to reproduce you'll need to kill broker with kill -9.","08/Jun/06 05:34;mfateev;After more testing it looks like the root cause is not executing usual shutdown sequence of a broker. When I stop broker in normal way I cannot reproduce the problem. When I stop it through ""kill -9"" or through eclipse it fails in the way described in contact. 

For me it looks like Journal design issue. It has to tolerate catastrofic shutdown but by design shutdown code has to be executed to leave journal in consistent state. Is any way to force journal into consistent state after every modification?","08/Jun/06 17:47;jstrachan;Great investigation Maxim; sounds like you are on to something.

In an ideal world we'd have an automated system test which did a kill -9 on a running broker and tested it recovers fine and so forth.

In the meantime, I wonder if you could give us a tarball of the journal files created after a kill -9 and we can use recovery of those files as an automated test case.","08/Jun/06 17:51;jstrachan;BTW you should be able to attach a zipped up tarball of the activemq-data directory for a broker which can't recover and we can get it working","09/Jun/06 03:45;mfateev;storage of first failure case when single log file is used an no messages where published.","09/Jun/06 03:47;mfateev;Storage that reproduces infinite recovery loop with two files configured through the following code:

            DefaultPersistenceAdapterFactory pFactory = new DefaultPersistenceAdapterFactory();
            pFactory.setJournalLogFiles(2);
            pFactory.setJournalLogFileSize(10240);
            broker.setPersistenceFactory(pFactory);","09/Jun/06 03:48;mfateev;I've attached storatge files. ","12/Jun/06 02:34;chirino;Thanks Maxim,

Those journal files helped me reproduce and fix the problem!  I've committed the fix against the 4.1 and 4.0 branch.  A subsequent nighly snapshot should include the fix.","12/Jun/06 23:38;mfateev;Thanks for quick fix. 
Could you provide more info on the root cause? It would be nice to include such information as well as check in number every time you close an issue.","13/Jun/06 00:41;chirino;Here's the diff:

http://svn.apache.org/viewvc/incubator/activemq/trunk/activeio/activeio-core/src/main/java/org/apache/activeio/journal/active/LogFileManager.java?view=diff&r1=413520&r2=413521&pathrev=413521

We were iterating though all the records in the journal, when we got to the last record, and ask for the subsequent record, instead of getting null, we would get the first record in the journal again.  This only happened when all the files in the journal were 'active', they held records that were recorded after the mark.  Fixed the logic so that we don't go past the last record.","19/Jun/06 23:24;chirino;ah.. just noticed that 4.0.1 did not build a new activeio and ship with the new version.  I guess this will make it into 4.0.2 then.","11/Jul/06 21:49;chirino;We need to build activeio beta-4 and ship with that.",,,,,,,,,,,,,,,,,,,
compatibility issue when integrating/embedding with JBossAS,AMQ-1442,12482472,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bershath,bershath,04/Oct/07 13:33,10/Apr/08 13:43,30/Jan/20 16:57,10/Apr/08 13:43,4.1.1,,,,,,5.1.0,,,Broker,,,,0,"ActiveMQ binary distribution (apache-activemq-4.1.1.tar.gz) has a compatibility issue with the bundled spring binary. xbean-spring-2.8.jar binary is depending on spring-1.2.x binary but the mentioned ActiveMQ distribution comes with spring-2.x binary and it's not compatible. it throws the following exception when you have the default spring-2.x binary :

18:36:34,069 WARN  [ServiceController] Problem starting service jboss.jca:service=RARDeployment,name='activemq-ra.rar'
javax.resource.spi.ResourceAdapterInternalException: Failed to startup an embedded broker: xbean:broker-config.xml, due to: org.springframework.beans.factory.BeanDefinitionStoreException: Unrecognized xbean element mapping: beans in namespace http://activemq.org/config/1.0
        at org.apache.activemq.ra.ActiveMQResourceAdapter.start(ActiveMQResourceAdapter.java:83)
        at org.jboss.resource.deployment.RARDeployment.startService(RARDeployment.java:109)

to work around this issue, you have to provide a spring-1.2.x binary.

steps to reproduce this problem :
make ActiveMQ embedded inside JBossAS, uncomment 
<config-property-value>xbean:broker-config.xml</config-property-value>
which tells the AMQ to process broker-config.xml

the complete error log is attached
","OS : FC7 32bit
JBoss Version : JBoss-4.2.1.GA
JDK Version    : jdk1.5.0_12",bershath,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Oct/07 13:33;bershath;ASF.LICENSE.NOT.GRANTED--error.log;https://issues.apache.org/jira/secure/attachment/12460808/ASF.LICENSE.NOT.GRANTED--error.log",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84537,,,Thu Oct 04 20:23:08 UTC 2007,,,,,,,,"0|i0s1wn:",161785,,,,,,,,,,,,,,,,,,,"04/Oct/07 20:23;bershath;To solve this problem, replace the default spring-2.0.jar file with a spring binary from 1.2.x branch. i have tested with spring-1.2.9.jar and it works fine
- Tyronne Wickramarathne
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with prefetchExtension in org/apache/activemq/broker/region/TopicSubscription.java,AMQ-1230,12481896,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yaussy,yaussy,16/Apr/07 18:04,10/Apr/08 12:01,30/Jan/20 16:57,10/Apr/08 12:01,5.0.0,,,,,,5.1.0,,,Broker,,,,0,The prefetchExtension variable in TopicSubscription.java is ever-increasing.  This causes a problem wherein the Broker may not kick in the PendingMessageLimit strategies.,,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,42092,,,Tue Jan 22 21:17:34 UTC 2008,,,,,,,,"0|i0s2rr:",161925,Regression,,,,,,,,,,,,,,,,,,"22/Jan/08 20:57;yaussy;Kind of surprised this is still an issue (as of 5.1 snapshot Jan 16, 2008).  How does any unit / regression test for the discard policies work?

Anyway, I've had this fixed since 4.2 (march 2007) by commenting out updates to prefetchExtension in the acknowledge method in TopicSubscription.java.  However, I'm not sure the exact reason why this value is updated - to me it is a static value, but what was the reason for modifying it?
","22/Jan/08 21:17;yaussy;Sorry - should have included this in the previous comment.  5.1 code also seems to be setting the DispatchedQueueSize to -(DiscardedCount).  This makes the problem worse, as the queue depth now has to grow up through this negative value, too.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dural-subScriber can not receive message!,AMQ-1536,12482467,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,billrichard,billrichard,04/Jan/08 05:11,10/Apr/08 11:59,30/Jan/20 16:57,10/Apr/08 11:59,5.0.0,,,,,,5.1.0,,,,,,,0,"situation like this:

		TopicSession session = null;
		TopicConnection connection = null;
		try {
			ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("""", """", ""tcp://10.61.0.200:61616?wireFormat.cacheEnabled=false&wireFormat.tightEncodingEnabled=false&wireFormat.maxInactivityDuration=0"");
			connection = connectionFactory.createTopicConnection("""","""");
			connection.setClientID(""xxxxxxxxxxxxxx"");
			connection.start();

			session = connection.createTopicSession(false,
					Session.AUTO_ACKNOWLEDGE);
			
			Topic userReceiver = session.createTopic(""test_unsubscribe_topic"");
			TopicSubscriber ts=session.createDurableSubscriber(userReceiver,""sub_123"");
			ts.setMessageListener(new MessageListener(){
                           public void onMessage(Message msg){
                                     System.out.prinltn(""Receie:""+msg+"" Date:""+new Date());
                         );

                        Thread.sleep(about 2 hours);
                      then send one message to topic test_unsubscribe_topic
                         



made a connection with argument maxInactivityDuration=0 , then made a dural-subscribe to a topic use that connection,if there is no message on this topic for a long time,then when  one message was send to that topic,the subscriber will not got the message.
If you shut down your subscriber program ,then restart it ,it reports a ""already connected exception"".

Also i changed AMQ 5.0 source code according to issue 1525,
Maybe this is because the socket the subscriber use is in half-open state.
hope these helps!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-10 11:59:58.753,,,false,,,,,,,,,,,,,,,,,84663,,,Thu Apr 10 11:59:58 UTC 2008,,,,,,,,"0|i181vr:",255107,,,,,,,,,,,,,,,,,,,"10/Apr/08 11:59;rajdavies;use failover:// url (now the default)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport incorrectly handles prefetched messages,AMQ-1027,12482445,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jurna,jurna,07/Nov/06 07:35,10/Apr/08 11:40,30/Jan/20 16:57,10/Apr/08 11:40,4.0.2,,,,,,5.1.0,,,Connector,,,,0,"After failover transport reconnect, if there is prefetched messages on the client, client sends invalid ack messages to the server. After that client stops receiving messages and it must be restarted.
This happens only when there are more messages in the queue, than queue prefetch size.
There is attached test case, which reproduces this error. Unfortunately, theres error in NetworkTestSupport.restartRemoteBroker() (after restart client cannot receive messages left in the queue). So you must use external broker an restart it manually, when the test asks you to do that. Should I report this bug in Component ""Test cases""?","Linux (Kernel 2.6), jdk 1.5.0_08",jurna,kaitchuc,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/06 07:35;jurna;ASF.LICENSE.NOT.GRANTED--FailoverConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12460773/ASF.LICENSE.NOT.GRANTED--FailoverConsumerTest.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-12-04 18:42:57.0,,,false,,,,,,,,,,,,,,,,,84427,,,Mon Dec 04 18:42:57 UTC 2006,,,,,,,,"0|i0s1vj:",161780,,,,,,,,,,,,,,,,,,,"04/Dec/06 18:42;kieranmurphy;My testing shows also that if a client is shutdown after failover but before it has processed all of its prefetched messages, then those messages are not received by any other consumer -- they are lost without having been consumed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
suprious exception message when using message streams...,AMQ-987,12482400,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jstrachan,jstrachan,18/Oct/06 07:30,10/Apr/08 11:38,30/Jan/20 16:57,10/Apr/08 11:38,5.0.0,,,,,,5.1.0,,,Broker,,,,0,"Jerome Banks reported this...


Oct 17, 2006 11:39:03 AM
org.apache.activemq.broker.region.QueueSubscriptionassignGroupToMe

WARNING: Failed to set boolean header: *
javax.jms.MessageNotWriteableException*: Message body is read-only
*

javax.jms.MessageNotWriteableException*: Message body is read-only

at org.apache.activemq.command.ActiveMQMessage.checkReadOnlyBody(*
ActiveMQMessage.java:573*)

at org.apache.activemq.command.ActiveMQBytesMessage.initializeWriting(*
ActiveMQBytesMessage.java:669*)

at org.apache.activemq.command.ActiveMQBytesMessage.setObjectProperty(*
ActiveMQBytesMessage.java:736*)

at org.apache.activemq.command.ActiveMQMessage.setBooleanProperty(*
ActiveMQMessage.java:533*)

at org.apache.activemq.broker.region.QueueSubscription.assignGroupToMe(*
QueueSubscription.java:137*)

at org.apache.activemq.broker.region.QueueSubscription.canDispatch(*
QueueSubscription.java:103*)

at org.apache.activemq.broker.region.PrefetchSubscription.dispatch(*
PrefetchSubscription.java:293*)

at org.apache.activemq.broker.region.QueueSubscription.dispatch(*
QueueSubscription.java:175*)

at org.apache.activemq.broker.region.PrefetchSubscription.add(*
PrefetchSubscription.java:64*)

at org.apache.activemq.broker.region.Queue.addSubscription(*Queue.java:163*)

at org.apache.activemq.broker.region.AbstractRegion.addConsumer(*
AbstractRegion.java:189*)

at org.apache.activemq.broker.region.RegionBroker.addConsumer(*
RegionBroker.java:308*)

at org.apache.activemq.broker.BrokerFilter.addConsumer(*BrokerFilter.java:77
*)

at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(*
AdvisoryBroker.java:77*)

at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(*
MutableBrokerFilter.java:91*)

at org.apache.activemq.broker.BrokerFilter.addConsumer(*BrokerFilter.java:77
*)

at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(*
MutableBrokerFilter.java:91*)

at org.apache.activemq.broker.AbstractConnection.processAddConsumer(*
AbstractConnection.java:457*)

at org.apache.activemq.command.ConsumerInfo.visit(*ConsumerInfo.java:295*)

at org.apache.activemq.broker.AbstractConnection.service(*
AbstractConnection.java:226*)

at org.apache.activemq.broker.TransportConnection$1.onCommand(*
TransportConnection.java:62*)

at org.apache.activemq.transport.ResponseCorrelator.onCommand(*
ResponseCorrelator.java:91*)

at org.apache.activemq.transport.TransportFilter.onCommand(*
TransportFilter.java:63*)

at org.apache.activemq.transport.vm.VMTransport.oneway(*VMTransport.java:76*
)

at org.apache.activemq.transport.MutexTransport.oneway(*MutexTransport.java
:44*)

at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(*
ResponseCorrelator.java:66*)

at org.apache.activemq.transport.ResponseCorrelator.request(*
ResponseCorrelator.java:71*)

at org.apache.activemq.ActiveMQConnection.syncSendPacket(*
ActiveMQConnection.java:1137*)

at org.apache.activemq.ActiveMQInputStream.<init>(*ActiveMQInputStream.java
:112*)

at org.apache.activemq.ActiveMQConnection.doCreateInputStream(*
ActiveMQConnection.java:1681*)

at org.apache.activemq.ActiveMQConnection.createInputStream(*
ActiveMQConnection.java:1663*)

at org.apache.activemq.ActiveMQConnection.createInputStream(*
ActiveMQConnection.java:1659*)

at org.apache.activemq.ActiveMQConnection.createInputStre",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84733,,,Tue Jun 12 10:29:53 UTC 2007,,,,,,,,"0|i180hr:",254882,,,,,,,,,,,,,,,,,,,"12/Jun/07 10:29;jstrachan;added affected version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No-Durable topic consumer client receive message got out of heap exception,AMQ-1325,12482450,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,lxgao,lxgao,17/Jul/07 05:43,10/Apr/08 08:05,30/Jan/20 16:57,10/Apr/08 08:05,5.0.0,,,,,,5.1.0,,,JMS client,,,,0,"Hi all! 
   I'm use apache-activemq-5.0-20070714.221601-25.zip 
  1) run    server: 
          D:\apache-activemq-5.0-SNAPSHOT\bin\activemq.bat 
   2) run producer: 
         java org.apache.activemq.tool.ProducerTool tcp://10.10.129.73:61616  true TEST.TOPIC false 200000 1024 
  3) run consumer 
          java-Xmx64M -Xrunhprof:heap=sites  org.apache.activemq.tool.ConsumerTool tcp://10.10.129.73:61616 true TEST.TOPIC false 

    when the consumer got out of heap exception after received 70000   
 messages , but there is no exception when using apache-activemq-4.1.1. 
    If I use Durable topic consumer , there is no exception. 
    If I use NO-Durable queue consumer, there is no exception. 
    If I  use Durable queue consumer, there is no exception. 
",Window XP SP2  JDK1.5.0.11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84698,,,2007-07-17 05:43:44.0,,,,,,,,"0|i181dz:",255027,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fails to unmarshal openwire messages,AMQ-1357,12482460,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,abridgett,abridgett,07/Aug/07 15:19,10/Apr/08 08:04,30/Jan/20 16:57,10/Apr/08 08:04,5.2.0,,,,,,5.1.0,,,Message Store,,,,0,"We are running AMQ 4.1.1 and are being bitten by AMQ-1067.  To see if this release might fix it, we tried the nightly snapshot.

However this fails to start as it cannot unmarshal old messages from the journal.  This seems to be as a result of SVN revision 546196.  (Left priority as major since this will break upgrades AFAICT)

INFO   | jvm 1    | 2007/08/07 15:19:38 | ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService' defined in file [/usr/share/activemq/activemq.xml]: Invocation of init method failed; nested exception is java.lang.NegativeArraySizeException
INFO   | jvm 1    | 2007/08/07 15:19:38 | java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService' defined in file [/usr/share/activemq/activemq.xml]: Invocation of init method failed; nested exception is java.lang.NegativeArraySizeException
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:70)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:105)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:77)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at java.lang.reflect.Method.invoke(Method.java:585)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.console.Main.runTaskClass(Main.java:213)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.console.Main.main(Main.java:102)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at java.lang.reflect.Method.invoke(Method.java:585)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:197)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at java.lang.Thread.run(Thread.java:595)
INFO   | jvm 1    | 2007/08/07 15:19:38 | Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService' defined in file [/usr/share/activemq/activemq.xml]: Invocation of init method failed; nested exception is java.lang.NegativeArraySizeException
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1174)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:425)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:251)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:156)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:248)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:160)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:287)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:352)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:95)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:65)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:51)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       ... 16 more
INFO   | jvm 1    | 2007/08/07 15:19:38 | Caused by: java.lang.NegativeArraySizeException
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.openwire.v3.MessageMarshaller.looseUnmarshal(MessageMarshaller.java:253)
INFO   | jvm 1    | 2007/08/07 15:19:38 | 
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.openwire.v3.ActiveMQMessageMarshaller.looseUnmarshal(ActiveMQMessageMarshaller.java:101)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.openwire.v3.ActiveMQTextMessageMarshaller.looseUnmarshal(ActiveMQTextMessageMarshaller.java:101)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:351)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:206)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.store.journal.JournalPersistenceAdapter.recover(JournalPersistenceAdapter.java:476)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:227)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1415)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1364)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:523)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.broker.BrokerService.start(BrokerService.java:425)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1201)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1171)
INFO   | jvm 1    | 2007/08/07 15:19:38 |       ... 31 more
","activemq_5.0-20070805-44
Debian Linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-10 08:04:17.011,,,false,,,,,,,,,,,,,,,,,43774,,,Thu Apr 10 08:04:17 UTC 2008,,,,,,,,"0|i181k7:",255055,,,,,,,,,,,,,,,,,,,"10/Apr/08 08:04;rajdavies;This and similar issues were caused by non synchronized to InactivityMonitor.oneWay()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover connection not working with master slave configuration,AMQ-955,12482458,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,naredi,naredi,04/Oct/06 10:44,10/Apr/08 08:02,30/Jan/20 16:57,10/Apr/08 08:02,4.0.1,,,,,,5.1.0,,,Broker,JMS client,,,0,"We are trying to set up master-slave configuration using ActiveMQ 4.0.1. We have tried our best to configure it as directed by the docs but couldn't achieve the desired result as the failover does not operate if the master goes down.
We have attached our configuration files and following are the steps to reproduce the problem.

1. Start the two brokers with masterSpike.xml and masterSlave.xml.
2. Run the spike app SpikeMasterSlaveApp. It works fine. 
3. Now kill the master broker and run our spike application again.
4. It doesn't establish connection with the slave.


",Red Hat Enterprise Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Oct/06 10:44;naredi;ASF.LICENSE.NOT.GRANTED--masterSlave.zip;https://issues.apache.org/jira/secure/attachment/12460725/ASF.LICENSE.NOT.GRANTED--masterSlave.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-10 08:02:37.081,,,false,,,,,,,,,,,,,,,,,84377,,,Thu Apr 10 08:02:37 UTC 2008,,,,,,,,"0|i180k7:",254893,,,,,,,,,,,,,,,,,,,"10/Apr/08 08:02;rajdavies;If randomize is false on the failover:// url, we no longer try and connect to the first in the list (the just failed one) first.
Config/code looks good with this issue btw.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent queue browsing and message dequeueing behaviour,AMQ-900,12482397,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,0x6e6562,0x6e6562,29/Aug/06 15:42,10/Apr/08 07:19,30/Jan/20 16:57,10/Apr/08 07:19,4.0.1,,,,,,5.1.0,,,JMS client,,,,1,"I am trying to browse a queue in a monitor thread in a non-transactional session. For each element in the enumeration, I spawn a worker thread to consume a message in non-blocking fashion from within a transacted session. This works fine for 1 message. The problem is that when I enqueue more than one message, subsequent calls to receiveNoWait() return null, although there must be messages in the queue.

I have created a test case to reproduce this (ActiveMQTestCase) which is part of the m2 project that I have attached. This can be executed in the normal m2 fashion by running ""mvn test"" on the command line.

This problem originally arose when I was using ActiveMQ 4.0.1 as a JMS transport for Mule 1.3rc4 and I created a Mule specific message receiver that tried to exploit the non-transactional browsing and offloading to transactional worker threads strategy that I have implemented in the test case.

So to eliminate any interaction from Mule, I used a different JMS provider, and the message receiver worker fine (with Joram and Weblogic).

I also tried a 4.1-snaphot of ActiveMQ, but it behaved the same as the 4.0.1 release.

So then I wrote a test case using pure JMS against ActiveMQ 4.0.1 (see attachment), and the behaviour is consistent with that what I was getting from within Mule -  the first message gets consumed properly, then subsequent messages don't get dequeued.

Therefore I think this may be an issue with ActiveMQ.","Win2K, java 1.5.0_07-b03",0x6e6562,johnnyboy,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/06 15:42;0x6e6562;ASF.LICENSE.NOT.GRANTED--browsing_jms_receiver.7z;https://issues.apache.org/jira/secure/attachment/12460829/ASF.LICENSE.NOT.GRANTED--browsing_jms_receiver.7z",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-10 07:19:49.222,,,false,,,,,,,,,,,,,,,,,84386,,,Thu Apr 10 07:19:49 UTC 2008,,,,,,,,"0|i0s1tz:",161773,,,,,,,,,,,,,,,,,,,"10/Apr/08 07:19;rajdavies;Set prefetch = 0 for your consumer",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException during ServerSessionPoolImpl.getServerSession(),AMQ-1215,12482461,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,drvillo,drvillo,28/Mar/07 08:04,10/Apr/08 06:56,30/Jan/20 16:57,10/Apr/08 06:56,4.1.0,,,,,,5.1.0,,,Connector,,,,0,"After some hours of execution my service stopped consuming messages; the log file shows this:

2007-03-23 18:26:18,573 [ool-1-thread-21] ERROR ServerSessionPoolImpl          - Error redispatching unconsumed messages from stale session
java.lang.IndexOutOfBoundsException: Index: 73, Size: 73
        at edu.emory.mathcs.backport.java.util.concurrent.CopyOnWriteArrayList.remove(CopyOnWriteArrayList.java:346)
        at org.apache.activemq.ra.ServerSessionPoolImpl.getServerSession(ServerSessionPoolImpl.java:104)
        at org.apache.activemq.ra.ServerSessionPoolImpl.dispatchToSession(ServerSessionPoolImpl.java:138)
        at org.apache.activemq.ra.ServerSessionPoolImpl.removeFromPool(ServerSessionPoolImpl.java:180)
        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:179)
        at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:290)
        at org.apache.geronimo.connector.work.pool.NamedRunnable.run(NamedRunnable.java:32)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:619)
2007-03-23 18:26:18,575 [ol-1-thread-127] ERROR ServerSessionPoolImpl          - Error redispatching unconsumed messages from stale session
java.lang.IndexOutOfBoundsException: Index: 67, Size: 67
        at edu.emory.mathcs.backport.java.util.concurrent.CopyOnWriteArrayList.remove(CopyOnWriteArrayList.java:346)
        at org.apache.activemq.ra.ServerSessionPoolImpl.getServerSession(ServerSessionPoolImpl.java:104)
        at org.apache.activemq.ra.ServerSessionPoolImpl.dispatchToSession(ServerSessionPoolImpl.java:138)
        at org.apache.activemq.ra.ServerSessionPoolImpl.removeFromPool(ServerSessionPoolImpl.java:180)
        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:179)
        at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:290)
        at org.apache.geronimo.connector.work.pool.NamedRunnable.run(NamedRunnable.java:32)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:619)
2007-03-23 18:26:18,583 [ol-1-thread-116] ERROR ServerSessionPoolImpl          - Error redispatching unconsumed messages from stale session
java.lang.IndexOutOfBoundsException: Index: 65, Size: 65
        at edu.emory.mathcs.backport.java.util.concurrent.CopyOnWriteArrayList.remove(CopyOnWriteArrayList.java:346)
        at org.apache.activemq.ra.ServerSessionPoolImpl.getServerSession(ServerSessionPoolImpl.java:104)
        at org.apache.activemq.ra.ServerSessionPoolImpl.dispatchToSession(ServerSessionPoolImpl.java:138)
        at org.apache.activemq.ra.ServerSessionPoolImpl.removeFromPool(ServerSessionPoolImpl.java:180)
        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:179)
        at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:290)
        at org.apache.geronimo.connector.work.pool.NamedRunnable.run(NamedRunnable.java:32)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:619)



the org.jencks.JCAConnector is configured as follows:

    <bean id=""inboundConnectorStage1"" class=""org.jencks.JCAConnector"" lazy-init=""true"">
        <property name=""jcaContainer"" ref=""jencksJCAContainer1""/>
        <property name=""activationSpec"">
            <bean class=""org.apache.activemq.ra.ActiveMQActivationSpec"">
                <property name=""destination"" value=""stage1Queue""/>
                <property name=""destinationType"" value=""javax.jms.Queue""/>
                <property name=""acknowledgeMode"" value=""Dups-ok-acknowledge""/>
                <property name=""maxSessions"" value=""${stage1.maxSessions}""/>
                <property name=""maxMessagesPerSessions"" value=""${stage1.maxSessions}""/>
            </bean>
        </property>
        <property name=""ref"" value=""stage1""/>
    </bean>


where initially stage1.maxSessions=250 and the threadpool size was set to 300.
I have been able to avoid this problem reducing the concurrency, but of course this
is not the solution.","uname -a:
Linux  2.6.9-42.0.3.plus.c4smp #1 SMP Fri Oct 6 12:16:15 CDT 2006 i686 i686 i386 GNU/Linux

java -version:
java version ""1.6.0""
Java(TM) SE Runtime Environment (build 1.6.0-b105)
Java HotSpot(TM) Server VM (build 1.6.0-b105, mixed mode)

JVM options:
 -Dcom.sun.management.jmxremote -server -Xmx1024m

ActiveMQ revision: 516005
JCA connector is Jencks 2.0
Using spring 2.0
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84459,,,2007-03-28 08:04:46.0,,,,,,,,"0|i1817j:",254998,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
setUseAsyncSend default value causes bad performance if the client and the server are not on the same machine,AMQ-885,12481929,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,olivier.benichou,olivier.benichou,20/Aug/06 12:41,10/Apr/08 06:52,30/Jan/20 16:57,10/Apr/08 06:52,3.2.2,,,,,,5.1.0,,,,,,,0,"When creating ActiveMQConnectionFactory instance, one shall set UseAsyncSend attribute to false,
otherwise performance are very poor if the server and the client are not running on the same machine.

The question is : Is it normal to have to set UseAsyncSend to false if we want to have good performance ?

	ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(brokerURL);
    	factory.setUseAsyncSend(false);

Thanks


",WINDOWS NT server 2003,,,,,,,,,,,,,,,,,,1200,1200,,0%,1200,1200,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-10 06:52:02.736,,,false,,,,,,,,,,,,,,,,,84277,,,Thu Apr 10 06:52:02 UTC 2008,,,,,,,,"0|i1809b:",254844,,,,,,,,,,,,,,,,,,,"20/Aug/06 12:42;olivier.benichou;Performance are excellent if clent and server run on the same machine and UseAsyncSend default value is used (true)","20/Aug/06 13:06;olivier.benichou;Context description : tcp","10/Apr/08 06:52;rajdavies;This was a problem with tcpNoDelay.
If problems exist - enabling tcpNoDelay on the transport",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Config error of kahaPersistenceAdapter example in documentation,AMQ-1290,12481942,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,alexiskinsella,alexiskinsella,22/Jun/07 14:41,10/Apr/08 06:47,30/Jan/20 16:57,10/Apr/08 06:47,4.1.1,,,,,,5.1.0,,,Documentation,,,,0,"http://activemq.apache.org/kaha-persistence.html


This web page shows an example that not works for me:

<broker brokerName=""broker"" persistent=""true"" useShutdownHook=""false"" deleteAllMessagesOnStartup=""true"">
    <transportConnectors>
      <transportConnector uri=""tcp://localhost:61616""/>
    </transportConnectors>
    <persistenceAdapter>
      <kahaPersistenceAdapter directory=""activemq-data"" maxDataFileLength=""33554432""/>
    </persistenceAdapter>
  </broker>



This should be: dir and not directory in the kahaPersistenceAdapter  node.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-10 06:47:23.429,,,false,,,,,,,,,,,,,,,,,84567,,,Thu Apr 10 06:47:23 UTC 2008,,,,,,,,"0|i181iv:",255049,,,,,,,,,,,,,,,,,,,"10/Apr/08 06:47;rajdavies;The documentation is correct for 5.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Multiple consumers on a single queue, each with a transacted session, fails; only one consumer sees messages; also message loss after a few of receiveNoWait/rollback",AMQ-1351,12483920,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,paubry2,paubry2,28/Jul/07 18:02,10/Apr/08 06:45,30/Jan/20 16:57,10/Apr/08 06:45,4.1.1,,,,,,5.1.0,,,Broker,,,,0,"Setup:
one queue with a one producer and five consumers; each consumer has a transacted session over a single connection.; each consumer is invoked in turn using consumer.receiveNoWait().
I have also tried this with a connection per consumer, instead of a single connection.

Result:
Only one consumer sees messages on the queue;  after a number of receiveNoWait and rollback (always for the one consumer that can consume), the message disappears (???) and further calls to the consumer will now receive the next message in the queue.

I see many messages concerning failures of multiple consumers on a single queue. If this is really the case, this makes ActiveMQ useless, which is a grave issue for me since I was blindly counting on this for a prototype presentation.

I've looked in your test suite for multiple consumers on separate sessions, but to no avail. Is there one ?

Any help will be appreciated.",windows XP SP2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84553,,,Sun Jul 29 04:28:06 UTC 2007,,,,,,,,"0|i181l3:",255059,,,,,,,,,,,,,,,,,,,"29/Jul/07 04:28;paubry2;I suspect that the issue of only one consumer seeing messages is due to some message batching by the broker for each session (load balancing?). If this is the case, what is the parameter ?

Concerning the message evaporating after a number of rollbacks, this may also be configurable, but where is the message evaporating to ? Is there a default deadletter repository somewhere ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problems with reconnecting broker to network of brokers after broker shutdown,AMQ-1301,12481909,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,ijsklont,ijsklont,29/Jun/07 11:43,10/Apr/08 06:42,30/Jan/20 16:57,10/Apr/08 06:42,4.1.2,,,,,,5.1.0,,,Broker,,,,1,"When using a network of brokers, I get problems in the following scenario. Consider two brokers, broker1 and broker2, connected to eachother (see config below). Everything works ok: durable consumers on topics get messages sent to either server. The messages are all persistent.

The problems occur in this scenario:

1. Bring down one of the brokers, let's say broker2 (all consumers and producers connect to the other server, without any problems)
2. Start the killed broker2 again
3. The broker2 reconnects to the network as expected
4. However, messages don't get propagated correctly on the network anymore. Consumers on broker1 don't get messages sent to broker2 anymore, and messages from broker2 get sent to broker1 over and over again. This can also be seen in the webconsole for example, where the number of messages in the queue grows rapidly.

The only way to fix this is to kill all brokers, and remove the persistent message stores. THis is unacceptable, since this loses messages.

Config is below:

<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:util=""http://www.springframework.org/schema/util"">
 
 <broker brokerName=""broker1"" useJmx=""true"" persistent=""true"" xmlns=""http://activemq.org/config/1.0"">
  
    <persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
    </persistenceAdapter>
  
    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://localhost:61616""/>
       <transportConnector name=""stomp""   uri=""stomp://localhost:61627""/>
    </transportConnectors>
  
<networkConnectors>
		<networkConnector name=""ha-network"" uri=""static://(tcp://localhost:61618)"" networkTTL=""5""/>
</networkConnectors>
</broker>



<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:util=""http://www.springframework.org/schema/util"">
 
 <broker brokerName=""broker2"" useJmx=""true"" persistent=""true"" xmlns=""http://activemq.org/config/1.0"">
  
    <persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
    </persistenceAdapter>
  
    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://localhost:61618""/>
       <transportConnector name=""stomp""   uri=""stomp://localhost:61628""/>
    </transportConnectors>
  
<networkConnectors>
		<networkConnector name=""ha-network"" uri=""static://(tcp://localhost:61616)"" networkTTL=""5""/>
</networkConnectors>
</broker>",,ijsklont,jmoran,marcusn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-29 15:58:05.835,,,false,,,,,,,,,,,,,,,,,84593,,,Tue Oct 23 18:40:46 UTC 2007,,,,,,,,"0|i0s2sn:",161929,,,,,,,,,,,,,,,,,,,"29/Jun/07 11:49;ijsklont;Sorry, in the second config the journal dataDirectory should be ""${activemq.base}/activemq-broker2-data"".

For additional info, see this thread: http://www.nabble.com/Weird-problem-with-network-of-brokers-tf3964843s2354.html","29/Jun/07 15:58;rajdavies;why is the network TTL=5 ? - It should be 1 - I think this could be your problem","26/Jul/07 14:24;ijsklont;I've changed the networkTTL. It looks like it's running OK now, only I don't understand how this could be the problem. According to the documentation, this is the *maximum* number of brokers the message can travel through. I don't see how increasing it can result into duplicate messages (because that was which i was seeing). The number of messages in the topics rose quickly to ~ 30.000, even while I've sent only about 50 messages to the topic.

The problem is that I haven't found I reliable way to reproduce this behaviour, but I've seen it on a few occasions already. If I encounter it again (with TTL=1 settings), I'll report it here.","26/Jul/07 15:07;ijsklont;Unfortunately I get the same behaviour again. I can't find a reliable way to restore a network of brokers after one broker is brought down, other than shutting down all brokers and removing the data directories.

This specific behaviour is perhaps a bug in the loop detection? I could image it gets a message from the broker, sees it as a new messages, and forwards it again to the other broker, ad infinitum. In any case, not being able to restore a network of brokers without problems makes the network practically useless.","23/Oct/07 06:41;marcusn;I get the same problem. Do we know why it is happening and is there a workaround?","23/Oct/07 07:23;marcusn;Testcase demonstrating persistent message not forwarded. It uses a memory adapter as persistence. When the first broker restarts, it does not forward the persistent message to the other broker. I'm not sure it tests exactly the problem outlined in this issue, it might be that it is just a problem with reloading presistent messages, but it's a start.

*Had an error, didn't close connections, so deleted testcase again*","23/Oct/07 18:40;marcusn;Here is a theory. If this issue is the same as AMQ-961 then it could be that the following happens:

* If there are persistent messages, maybe it takes some time for one of the brokers to start, making the transport interrupt.
* If there are no persistent messages, both network connectors start reliably.

In any case, the fix to AMQ-961 (applied a bit after 4.1.1) will fix the problem, it will restart the bridge whenever the transport resumes.
 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,
ExceptionListener not notified of connection loss in single broker environment,AMQ-1158,12482441,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,bruce-c,bruce-c,09/Feb/07 05:14,10/Apr/08 06:34,30/Jan/20 16:57,10/Apr/08 06:34,3.2.1,,,,,,5.1.0,,,JMS client,,,,0,"Using a single Broker environment, a listening client is not notified when the Broker is shutdown
Instead I see Log4J Warnings in the log file.
If I run the same test using another provider, such as SonicMQ, an exception is received.

","Client - Windows XP SP 2; JRE1.5.0_06
Broker - Windows XP SP 2 or Linux RedHat 8.0",bruce-c,konrad_a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,51133,,,2007-02-09 05:14:00.0,,,,,,,,"0|i0s1vb:",161779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic default SubscriptionRecoveryPolicy can waste a huge amount of memory,AMQ-1321,12482444,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mteira,mteira,13/Jul/07 07:45,10/Apr/08 06:32,30/Jan/20 16:57,10/Apr/08 06:32,4.1.1,,,,,,5.1.0,,,Broker,,,,0,"Default topic SubscriptionRecoveryPolicy is a FixedCountSubscriptionRecoveryPolicy, that can eventually lead to huge amount of memory wasted by messages in topics. James recommended to set it to NoSubscriptionRecoveryPolicy.
I'm sending a patch to do so in 4.1 branch.",activemq svn branch 4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jul/07 07:45;mteira;ASF.LICENSE.NOT.GRANTED--Topic.patch;https://issues.apache.org/jira/secure/attachment/12460914/ASF.LICENSE.NOT.GRANTED--Topic.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-10 06:32:20.468,,,false,,,,,,,,,,,,,,,,,84560,,,Thu Apr 10 06:32:20 UTC 2008,,,,Patch Available,,,,"0|i181en:",255030,,,,,,,,,,,,,,,,,,,"10/Apr/08 06:32;rajdavies;The default policy in 5.1 is FixedSizeSubscriptonRecoveryPolicy",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connections on the Broker side are not being properly disposed of when client closes them.,AMQ-1212,12482245,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,janv,janv,20/Mar/07 23:16,09/Apr/08 18:51,30/Jan/20 16:57,09/Apr/08 18:51,4.1.1,,,,,,5.1.0,,,Broker,,,,2,"The connection pool on the broker grew until no more connections could be made. I did notice, that the connections that were supposed to have been disposed, have their ConnectionId set to 'Unavailable' when viewed using JConsole. That was the only difference between truly active connections and ones that should have been closed. 

For now, we have fixed it by going back to 4.0.2. 

 
","Latest trunk version (As of March 20, 2007) of AMQ .NET client, windows 2000 (for the broker) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,46524,,,2007-03-20 23:16:59.0,,,,,,,,"0|i1810f:",254966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker fails to dispatch messages,AMQ-1234,12482424,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,balahura,balahura,22/Apr/07 17:49,09/Apr/08 18:51,30/Jan/20 16:57,09/Apr/08 18:51,4.1.0,,,,,,5.1.0,,,Broker,,,,0,"We have a 5 server configuration where initially we were going to run
the activemq broker on 2 machines and have the other 3 connect to
those accordingly.

We were using a connection url like the following:
failover:tcp://brokerhost:61616

The failover portion indicates to activemq to automatically reconnect
should network interruptions occur.  All our producer / consumer
objects extend a connection which remains constant throughout the
operation.  If the network is interrupted the connection does indeed
reconnect and continue when the network returns.

We've configured the broker to only use an openwire connector (ssl and
stomp are disabled)

Description of problem:

After several hours (between 7 and 12 hours), it seems as if the
broker port disappears and messages produced just go nowhere.
Consumers continue to run, however never consuming anything.  They
indication the connection is find and they are waiting on the queue.
No errors ever occur in either producer, consumer or broker.

We have changed the config slightly with seeming success.  Instead of
running two brokers, we now run 5.  One on every machine, with the
multicast auto discovery system enabled. Every producer / consumer now
connects to localhost instead.

This is also very acceptable, however we would like to know why a
sustained connection cannot be maintained to a local area network
host.","OS: Redhat Linux 2.6.9-42.0.8.ELsmp
Java 1.5.0.11
ActiveMQ 4.1.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84456,,,2007-04-22 17:49:57.0,,,,,,,,"0|i1815j:",254989,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
incorrect DequeueCount,AMQ-1009,12482358,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,weiqingh,weiqingh,27/Oct/06 03:48,09/Apr/08 18:44,30/Jan/20 16:57,09/Apr/08 18:44,4.0.1,,,,,,5.1.0,,,Broker,,,,0,"i am seeing this through activemq (4.0.1) jmx:

Type = Queue
Destination = XXX
QueueSize = 2751
Name = XXX
DequeueCount = 3575
MemoryPercentageUsed = 0
ConsumerCount = 6
MemoryLimit = 9223372036854775807
EnqueueCount = 3575

and after a while, something like this:

Destination = XXX
QueueSize = 11421
Name = XXX
DequeueCount = 8046
MemoryPercentageUsed = 0
ConsumerCount = 6
MemoryLimit = 9223372036854775807
EnqueueCount = 13471

my activemq is started with a clean database and journal. how does the math add up among QueueSize, DequeueCount and EnqueueCount? i thought dequeuecount + queuesize = enqueuecount. in my case, QueueSize looks more ""correct"" than the dequeuecount is wrong because my consumers are slower than message producers. 

more info, when i shutdown my consumers, i see stats like this during one test:

Type = Queue
Destination = XXX
QueueSize = 948
Name = XXX
DequeueCount = 4224
ConsumerCount = 0
EnqueueCount = 2722

why is DequeueCount greater than EnqueueCount? (the activemq instance was started from a clean database and journal) ",linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84374,,,2006-10-27 03:48:06.0,,,,,,,,"0|i0s1rz:",161764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A single JMS Listener is way too slow,AMQ-905,12482427,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,aioaneid,aioaneid,31/Aug/06 12:35,09/Apr/08 18:43,30/Jan/20 16:57,09/Apr/08 18:43,4.0.1,,,,,,5.1.0,,,,,,,0,"I'm using ActiveMQ 4.0.1 with a DerbyDB backend and I have a single JMS listener for a queue with loads of messages. In order to see how many msg/second are processed by a no-op JMS listener, with a single concurrent session, I used the following configuration:

<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC ""-//SPRING//DTD BEAN//EN"" 
    ""http://www.springframework.org/dtd/spring-beans.dtd"">

<beans>

  <!-- START SNIPPET: jca -->
  <bean id=""jencks"" class=""org.jencks.JCAContainer"">

    <!-- lets use the default configuration of work manager and transaction manager-->
    <property name=""bootstrapContext"">
      <bean class=""org.jencks.factory.BootstrapContextFactoryBean"">
        <property name=""threadPoolSize"" value=""200""/>
      </bean>
    </property>


    <!-- the JCA Resource Adapter -->
    <property name=""resourceAdapter"">
      <bean id=""activeMQResourceAdapter"" class=""org.apache.activemq.ra.ActiveMQResourceAdapter"">
        <property name=""serverUrl"" value=""tcp://localhost:61616?wireFormat.cacheEnabled=false&amp;wireFormat.tightEncodingEnabled=false&amp;jms.useAsyncSend=false""/>
      </bean>
    </property>
  </bean>
  <!-- END SNIPPET: jca -->



  <!--
    || an inbound message connector using a stateless, thread safe MessageListener
    -->
  <!-- START SNIPPET: inbound -->
  
  <bean id=""inboundConnectorA"" class=""org.jencks.JCAConnector"">

    <property name=""jcaContainer"" ref=""jencks"" />

    <!-- subscription details -->
    <property name=""activationSpec"">
      <bean class=""org.apache.activemq.ra.ActiveMQActivationSpec"">
        <property name=""destination"" value=""queue/MyQueue""/>
        <property name=""destinationType"" value=""javax.jms.Queue""/>
        <property name=""acknowledgeMode"" value=""Auto-acknowledge""/>
        <property name=""useRAManagedTransaction"" value=""false""/>
        
		<property name=""maximumRedeliveries"" value=""10""/>
		<property name=""initialRedeliveryDelay"" value=""1000""/>
		<property name=""useExponentialBackOff"" value=""true""/>
		<property name=""backOffMultiplier"" value=""5""/>
		
        <property name=""maxSessions"" value=""1""/>
        <property name=""maxMessagesPerSessions"" value=""1""/>
      </bean>
    </property>

    <property name=""ref"" value=""testOutboundMdp""/>
  </bean>
	<bean id=""testOutboundMdp"" class=""TestOutboundMdp""/>
  
</beans>


The problem is that the consumption speed is 11 msg/second and cpu consumption is about 1-2%. To get almost 100% cpu usage I have to increase threadPoolSize and maximumRedeliveries to 1000 (!) and at that point the consumption speed reaches 142 msg/sec, which is not too impressive either. I'm not sure if it's a Jencks or ActiveMQ issue here.",,aioaneid,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/06 12:35;aioaneid;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460566/ASF.LICENSE.NOT.GRANTED--activemq.xml",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84384,,,2006-08-31 12:35:19.0,,,,,,,,"0|i0s1uv:",161777,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race Condition can result in hang on remoteBrokerNameKnownLatch,AMQ-1120,12482392,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chrish,chrish,05/Jan/07 14:50,09/Apr/08 18:38,30/Jan/20 16:57,09/Apr/08 18:38,4.0,4.0.1,4.0.2,,,,5.1.0,,,Transport,,,,0,"My environment is comprised of Windows XP, AMQ v4.0.2, demand forwarding, failover = true, client and broker are all within the same VM.  Typically, my client and broker would not be within the same VM, but this issue was encountered while executing my junit tests - not in a typical deployment environment.
 
Basically, DemandForwardingBridgeSupport.startLocalBridge() hangs on remoteBrokerNameKnownLatch.await();
 
It looks like the broker name becomes known prior to the call to await. I think the response is coming in after the triggerLocalStartBridge thread is spawned and the synchronized block in
DemandForwardingBridgeSupport.startRemoteBridge() is exited but before the await call in triggerLocalStartBridge.  
 
Like I said, I've only run into this when running demand forwarding with client and broker in the same VM along with a high volume of messages sent immediately after the connection is established, which for me, is an artifact of junit testing.  
 
I have a relatively small number of clients that should connect fairly infrequently, so I just put a bandaid of a 100ms wait into TcpTransportServer.run right before getAcceptListener().onAccept() which allows my tests to complete successfully and has no appreciable impact on the performance I care about but it's obviously not a valid fix for the race condition.","Windows XP, demand forwarding, failover == true",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84306,,,2007-01-05 14:50:03.0,,,,,,,,"0|i180xz:",254955,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX Management Console Not Working As Documented,AMQ-867,12482352,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,seifertd,seifertd,07/Aug/06 17:13,09/Apr/08 18:36,30/Jan/20 16:57,09/Apr/08 18:36,4.0.1,4.0.2,,,,,5.1.0,,,Broker,,,,0,"Starting in 4.0.1 and continuing in a snapshot 4.0.2 release, the ActiveMQ JMX management console is not working as advertised.  In version 4.0, I would see the following message logged to the console when starting activemq:

INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi

In Version 4.0.1 and higher, I no longer see this message.

When trying to connect to the broker using the jconsole program, in versions 4.0.1 and higher, the following command does not work (get ""Connection failed"" message).

jconsole service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi

However, in 4.0, it does work.

With 4.0.1 and higher, I am able to execute jconsole with no arguments and pick the activemq jvm from the dialog that pops up and access the managment mbeans just fine.

A symptom of this problem in 4.0.1 and higher is that none of the command line tools in the bin directory work.  Here is sample output:

doug@nuk:~/tools/activemq/incubator-activemq-4.0.2/bin$ ./shutdown
ACTIVEMQ_HOME: /home/doug/tools/activemq/incubator-activemq-4.0.2
ERROR: java.lang.RuntimeException: Failed to execute stop task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectException: Connection refused to host: localhost; nested exception is:
        java.net.ConnectException: Connection refused]
ERROR: java.lang.Exception: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectException: Connection refused to host: localhost; nested exception is:
        java.net.ConnectException: Connection refused]

With 4.0, all command line tools work as expected.

Not sure what is going on here, but something changed in versions 4.0.1 and above.

One last note: in 4.0.1 and higher, I uncommented the managementContext tag in the activemq.xml file, but that had no effect.  The problem remained as described here.



",Linux nuk 2.6.15-23-amd64-generic #1 SMP PREEMPT Tue May 23 13:45:47 UTC 2006 x86_64 GNU/Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-16 14:01:26.0,,,false,,,,,,,,,,,,,,,,,84392,,,Thu Aug 17 14:22:00 UTC 2006,,,,,,,,"0|i180b3:",254852,,,,,,,,,,,,,,,,,,,"16/Aug/06 14:01;oliver_f;I had the same problem; my workaround is to remove the line
SUNJMX=""-Dcom.sun.management.jmxremote""

from the activemq script","17/Aug/06 14:22;seifertd;Willing to close this as the workaround works.  The shutdown (and others) script works as well, but if you change the JMX port in the activemq xml configuration file, you need to use the --jmxurl service:jmx:rmi:///jndi/rmi://localhost:NEWPORT/jmxrmi arguments to all scripts.  Would be nice if the scripts could figure this out from the xml configuration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Prefetch size < 0 should throw an exception somewhere or be defaulted, as messages are not dispatched anymore",AMQ-1103,12482341,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gnodet,gnodet,19/Dec/06 10:14,09/Apr/08 18:35,30/Jan/20 16:57,09/Apr/08 18:35,4.1.0,,,,,,5.1.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-09 18:35:27.169,,,false,,,,,,,,,,,,,,,,,84489,,,Wed Apr 09 18:35:27 UTC 2008,,,,,,,,"0|i0s0qn:",161596,,,,,,,,,,,,,,,,,,,"09/Apr/08 18:35;rajdavies;Fixed by svn revision 646477",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
It is a occurrent problem,AMQ-1338,12482119,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tangjie,tangjie,24/Jul/07 03:36,09/Apr/08 18:31,30/Jan/20 16:57,09/Apr/08 18:31,4.1.1,,,,,,5.1.0,,,,,,,0,the ActiveMQ is down,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/07 03:36;tangjie;ASF.LICENSE.NOT.GRANTED--hs_err_pid3240.log;https://issues.apache.org/jira/secure/attachment/12460894/ASF.LICENSE.NOT.GRANTED--hs_err_pid3240.log","22/Aug/07 11:24;menulis;hs_err_pid492.log;https://issues.apache.org/jira/secure/attachment/12460886/hs_err_pid492.log",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-08-22 11:24:01.327,,,false,,,,,,,,,,,,,,,,,44395,,,Wed Aug 22 11:24:01 UTC 2007,,,,Patch Available,,,,"0|i0s0l3:",161571,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"22/Aug/07 11:24;menulis;I have similar issue - Internal Error with ""generation collection for allocation"", requested by the same ""ActiveMQ Transport Server: ssl://localhost:61617"" thread. My environment is Redhat Linux 8.0, Apache ActiveMQ 4.1.1 and JDK 1.6.0_02-b05.

Strange thing that JVM crash happend on our test server, running ActiveMQ without ANY load. Looks like it's very occasional, since we see it for the first time.

Attached (hs_err_pid492.log) is the JVM error report.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in FailoverTransport results in messages that have been queued during a network interruption being sent out of order upon call to restoreTransport(),AMQ-1488,12482313,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chrish,chrish,06/Nov/07 14:27,09/Apr/08 15:25,30/Jan/20 16:57,09/Apr/08 15:25,4.0.2,,,,,,5.1.0,,,Transport,,,,0,"FailoverTransport stores all queued messages during network interruptions in a HashMap.  When restoreTransport() is called, the map is traversed sending each queued message.

However, because the messages are stored in a HashMap, the map is traversed in hash-order - not message id order.

Problematic code in FailoverTransport::restoreTransport():
        for (Iterator iter2 = requestMap.values().iterator(); iter2.hasNext();) {
            Command command = (Command) iter2.next();
            t.oneway(command);
        }

The following local patch resolves the issue:
        // Convert the request map to a treemap.  It's keyed off of the commandid and by putting it into a treemap, we'll pull them off in commandid order.        
        TreeMap treeMap = new TreeMap();
        treeMap.putAll(requestMap);
        for (Iterator iter2 = treeMap.values().iterator(); iter2.hasNext();) {
//        for (Iterator iter2 = requestMap.values().iterator(); iter2.hasNext();) {
            Command command = (Command) iter2.next();
            t.oneway(command);
        }
","Windows XP, AMQ 4.0.2, Client side message producer to an embedded broker with a failover demand forwarding bridge to a persisting broker
",jmoran,mkelley63,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-11-28 20:24:28.766,,,false,,,,,,,,,,,,,,,,,84413,,,Wed Apr 09 15:25:45 UTC 2008,,,,,,,,"0|i0s1qf:",161757,,,,,,,,,,,,,,,,,,,"28/Nov/07 20:24;rajdavies;This is fixed in 5.0 ???","09/Apr/08 15:25;rajdavies;Fixed by svn revision 646401 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS to JMS Bridge property consumerName on InboundTopicBridge element dont work,AMQ-1456,12482136,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,lauvigne,lauvigne,10/Oct/07 10:04,09/Apr/08 15:02,30/Jan/20 16:57,09/Apr/08 15:02,4.1.1,,,,,,5.1.0,,,Broker,,,,0,"JMS to JMS Bridge don't work with attribute consumerName in inboundTopicBridge  element.

see http://activemq.apache.org/jms-to-jms-bridge.html#JMStoJMSBridge-TopicBridges
{quote}
 consumerName if set will create a durable consumer
{quote}

My configuration :
{code:xml}
		<jmsBridgeConnectors>
			<jmsTopicConnector name=""testBridge"" jndiOutboundTemplate=""#remoteJndi""
				outboundTopicConnectionFactoryName=""jms.TopicConnectionFactory"" localTopicConnectionFactory=""#localFactory"">
				<outboundTopicBridges>
					<outboundTopicBridge outboundTopicName=""jms.ReplyMessageTopic"" localTopicName=""Test.bridge"" />
				</outboundTopicBridges>
				<inboundTopicBridges>
					<inboundTopicBridge inboundTopicName=""jms.ReplyMessageTopic"" localTopicName=""Test.bridge"" consumerName=""testBridge""/>
				</inboundTopicBridges>
			</jmsTopicConnector>
		</jmsBridgeConnectors>
{code}

When I execute attached test (in patch file), I haved this stacktrace :
{noformat}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'localbroker' defined in class path resource [org/apache/activemq/network/jms/topic-config.xml]: 
Invocation of init method failed; nested exception is javax.jms.JMSException: You cannot create a durable subscriber without specifying a unique clientID on a Connection
Caused by: javax.jms.JMSException: You cannot create a durable subscriber without specifying a unique clientID on a Connection
	at org.apache.activemq.ActiveMQConnection.checkClientIDWasManuallySpecified(ActiveMQConnection.java:1138)
	at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1066)
	at org.apache.activemq.ActiveMQSession.createDurableSubscriber(ActiveMQSession.java:1013)
	at org.apache.activemq.ActiveMQTopicSession.createDurableSubscriber(ActiveMQTopicSession.java:144)
	at org.apache.activemq.network.jms.TopicBridge.createConsumer(TopicBridge.java:68)
	at org.apache.activemq.network.jms.DestinationBridge.start(DestinationBridge.java:103)
	at org.apache.activemq.network.jms.JmsConnector.start(JmsConnector.java:118)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1494)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:402)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/07 10:04;lauvigne;ASF.LICENSE.NOT.GRANTED--patchAMQ-XXX-JMSExceptionOnBridgeWithConsumerName.diff;https://issues.apache.org/jira/secure/attachment/12461020/ASF.LICENSE.NOT.GRANTED--patchAMQ-XXX-JMSExceptionOnBridgeWithConsumerName.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-09 15:02:59.61,,,false,,,,,,,,,,,,,,,,,84533,,,Wed Apr 09 15:02:59 UTC 2008,,,,,,,,"0|i14b9j:",233288,,,,,,,,,,,,,,,,,,,"09/Apr/08 15:02;rajdavies;Added outboundClientId and localClientId properties that you can explicitly set - if not setting client id 
through jndi - in svn revision 646395",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in ActiveMQSession::send() prevents non-persistent messages from being sent sync,AMQ-1487,12481820,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chrish,chrish,06/Nov/07 14:19,09/Apr/08 14:07,30/Jan/20 16:57,09/Apr/08 14:07,4.0.2,,,,,,5.1.0,,,,,,,0,"I have not tested this issue against any version other than 4.0.2.

ActiveMQSession::send() contains the following code:
        if(!msg.isPersistent() || connection.isUseAsyncSend() || txid!=null) {
            this.connection.asyncSendPacket(msg);
        } else {
            this.connection.syncSendPacket(msg);
        }

This predicate short-circuits if the message is non-persistent and sends the message async even if the message is marked with ""Response Required"".

Modified the predicate to:
        if(!msg.isResponseRequired() && (!msg.isPersistent() || connection.isUseAsyncSend() || txid!=null)) {
            this.connection.asyncSendPacket(msg);
        } else {
            this.connection.syncSendPacket(msg);
        }

This local patch resolved my issue.","Windows XP, AMQ 4.0.2, Client side non-peristent but response-required message producer to an embedded broker with a failover demand forwarding bridge to a persisting broker (persisting broker has a custom broker filter to mark all incoming messages as persistent).",mkelley63,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Nov/07 02:06;chrish;ActiveMQSession.java;https://issues.apache.org/jira/secure/attachment/12460671/ActiveMQSession.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-11-28 20:23:30.045,,,false,,,,,,,,,,,,,,,,,84414,,,Wed Apr 09 14:07:18 UTC 2008,,,,,,,,"0|i0s2r3:",161922,,,,,,,,,,,,,,,,,,,"09/Nov/07 01:58;chrish;Wow, that was some bad copy/paste work.  sorry.  Redoing the before/after code below:

Before:
       if (!msg.isPersistent() || connection.isUseAsyncSend() || txid!=null)) {
            this.connection.asyncSendPacket(msg);
        } else {
            this.connection.syncSendPacket(msg);
        }

After:
      if(!msg.isResponseRequired() && (!msg.isPersistent() || connection.isUseAsyncSend() || txid!=null)) {
            this.connection.asyncSendPacket(msg);
        } else {
            this.connection.syncSendPacket(msg);
        }
","09/Nov/07 02:07;chrish;sorry for the copy/past misfires.  i've just attached the updated source file.  My modifications are clearly marked in ActiveMQSession.send()","28/Nov/07 20:23;rajdavies;this is fixed in version 5 ???","09/Apr/08 14:07;rajdavies;Fixed by svn revision 646363",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FailoverTransport bad handling of InterruptedException in wait loop.,AMQ-1451,12482448,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mural,mural,08/Oct/07 23:56,09/Apr/08 13:54,30/Jan/20 16:57,09/Apr/08 13:54,4.1.1,,,,,,5.1.0,,,Transport,,,,0,"The forum post http://www.nabble.com/Infinite-loop-if-FailoverTransport-is-interrupted-tf3758516s2354.html#a10799543 refers to this issue.

The InterruptedException should be propagated.  In addition, after the thread is interrupted, It starts spinning without waiting because the wait() call is immediately exit due to the Thread.currentThread().interrupt()  invoked in the catch block.
",,mkelley63,mural,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-09 13:54:51.752,,,false,,,,,,,,,,,,,,,,,84535,,,Wed Apr 09 13:54:51 UTC 2008,,,,,,,,"0|i0s1vr:",161781,,,,,,,,,,,,,,,,,,,"09/Apr/08 13:54;rajdavies;Fixed by svn revision 646354",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-4.1.1/activemq-perftest/pom.xml has incorrect plugin configuration,AMQ-1448,12482431,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,aguther,aguther,05/Oct/07 20:13,09/Apr/08 13:38,30/Jan/20 16:57,09/Apr/08 13:38,4.1.1,,,,,,4.1.2,5.1.0,,Performance Test,,,,0,"After building maven-activemq-perf-plugin as described in http://activemq.apache.org/activemq-performance-module-users-manual.html and then changing to the performance folder, the installed plug-in cannot be found by maven.  The reason is an outdated groupId section for the plugin configuration.

The groupId needs to have .tooling as postfix.  See attached patch file.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/07 20:13;aguther;ASF.LICENSE.NOT.GRANTED--pom.patch;https://issues.apache.org/jira/secure/attachment/12460885/ASF.LICENSE.NOT.GRANTED--pom.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-09 13:38:34.455,,,false,,,,,,,,,,,,,,,,,38762,,,Wed Apr 09 13:38:34 UTC 2008,,,,Patch Available,,,,"0|i181r3:",255086,,,,,,,,,,,,,,,,,,,"09/Apr/08 13:38;chirino;someone had already applied the fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build fails with missing Log4j dependency,AMQ-1443,12482418,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,aguther,aguther,04/Oct/07 19:55,09/Apr/08 13:32,30/Jan/20 16:57,09/Apr/08 13:32,4.1.1,,,,,,,,,,,,,0,"I am trying to build ActiveMQ as found under https://svn.apache.org/repos/asf/activemq/tags/activemq-4.1.1.

The build fails due to missing Log4j dependencies.  I had to change the scope of log4j from runtime to compile to get it compiled.
","Windows and Linux; Maven 2.0.7; java 1.5 and java 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Oct/07 19:55;aguther;ASF.LICENSE.NOT.GRANTED--pom.diff;https://issues.apache.org/jira/secure/attachment/12460704/ASF.LICENSE.NOT.GRANTED--pom.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-09 13:32:48.268,,,false,,,,,,,,,,,,,,,,,84536,,,Wed Apr 09 13:32:48 UTC 2008,,,,Patch Available,,,,"0|i181rj:",255088,,,,,,,,,,,,,,,,,,,"09/Apr/08 13:32;chirino;The 4.1 branch is building for me.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to register MBean error.,AMQ-1044,12482421,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,14/Nov/06 12:56,09/Apr/08 13:29,30/Jan/20 16:57,09/Apr/08 13:29,4.0,,,,,,5.1.0,,,,,,,1,"If async error such as a inactivity IO exception is detected while a subscription is being created, then that subscription is not fully cleaned up when the connection is disposed.  If the client is using failover and reconnects, then it gets a ""Failed to register MBean error.""  Since the subscription is still registered in JMX.  This is also a source of a memory leak since subscriptions are are left registered in JMX.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-03-26 13:10:50.73,,,false,,,,,,,,,,,,,,,,,84312,,,Wed Apr 09 13:29:02 UTC 2008,,,,,,,,"0|i180on:",254913,,,,,,,,,,,,,,,,,,,"14/Nov/06 12:56;chirino;Fixed in trunk rev 474769 and in 4.1 branch rev 474771","26/Mar/08 13:10;michal singer;I saw this problem happen in 5.0 as well as snapshots of 5.1.
I get this error:
WARNING: Failed to register MBean: org.apache.activemq:BrokerName=embeddedbroker,Type=Topic,Destination=ActiveMQ.Advisory.Producer.Queue.ID_1586- ...

I do have memory leaks as well as ActiveMQ.Advisory.Producer.Queue accumulation.

here are the objects which are leaking:
org.apache.activemq.filter.DestinationMapNode
org.apache.activemq.filter.SimpleDestinationFilter
org.apache.activemq.broker.region.policy.SimpleDispatchPolicy
 org.apache.activemq.broker.region.policy.SharedDeadLetterStrategy
org.apache.activemq.broker.region.policy.NoSubscriptionRecoveryPolicy
org.apache.activemq.broker.region.Topic$1
org.apache.activemq.broker.region.Topic
org.apache.activemq.broker.region.DestinationStatistics
org.apache.activemq.broker.jmx.TopicView

 org.apache.activemq.usage.MemoryUsage
org.apache.activemq.usage.DefaultUsageCapacity
org.apache.activemq.management.PollCountStatisticImpl

","09/Apr/08 13:29;chirino;The connection shutdown code is now guaranteed to run when service requests are not being serviced.  This eliminates the timing issues related to shutting down connections.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unsuccessful NetworkConnector connections leak threads,AMQ-1483,12483929,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,nkiesel@tbdnetworks.com,nkiesel@tbdnetworks.com,01/Nov/07 03:34,09/Apr/08 09:48,30/Jan/20 16:57,09/Apr/08 09:48,4.1.1,,,,,,5.1.0,,,Connector,,,,0,"I have a pair of (embedded) brokers connected via a NetworkConnector:
    <networkConnectors>
      <networkConnector name=""secondary"" uri=""static://(ssl://192.168.4.3:4081)"" networkTTL=""5"" prefetchSize=""1""/>
    </networkConnectors>

When the receiving broker is not running, the sender tries to reconnect every 5 seconds.  While doing that, it leaks threads (seems like about 2 threads per minute). Checking with jconsole, all hanging threads are doing:

Name: JMX server connection timeout 85
State: TIMED_WAITING on [I@38f04c
Total blocked: 0  Total waited: 143

Stack trace: 
java.lang.Object.wait(Native Method)
com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:150)
java.lang.Thread.run(Thread.java:595)


The threads that are created every 5 seconds look like this in jconsole:

Name: Thread-2060
State: TIMED_WAITING on java.lang.Object@a06577
Total blocked: 0  Total waited: 1

Stack trace: 
java.lang.Object.wait(Native Method)
org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent$1.run(SimpleDiscoveryAgent.java:139)

If that issue is fixed in 5.0: can someone please tell me if/how that fix can be backported to 4.1.1?

Best,
  Norbert
",,craigwblake,nkiesel@tbdnetworks.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-09 09:48:24.085,,,false,,,,,,,,,,,,,,,,,84529,,,Wed Apr 09 09:48:24 UTC 2008,,,,,,,,"0|i181tj:",255097,,,,,,,,,,,,,,,,,,,"09/Apr/08 09:48;rajdavies;Recommend you use 5.1 when its released",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak creating temporary queues,AMQ-1297,12482416,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mteira,mteira,26/Jun/07 14:38,09/Apr/08 09:46,30/Jan/20 16:57,09/Apr/08 09:46,4.1.1,,,,,,5.1.0,,,Broker,,,,2,"After observing severe memory leaks in our production servers, eventually finishing with the JVM GC running intensively and activemq dropping connections due to inactivity (and even out of memory errors), we have proceeded in the following way, trying to isolate the error cause:

1.-Create a single client to be able to produce the same effect on an standalone activemq broker (our servers are actually embedding a broker, but for the sake of clarity, we thought it should be better to isolate the broker in a dedicated JVM). In the first test code, the client just used a group of threads to create sessions, send a message on a producer created on that session, and expect a return message in a consumer, created on a temporary queue of the given session, setted as jmsReplyTo to the message. Later, we find out that we didn't need to send any message to produce the memory leak. I'm attaching the code of the client, that summarizing, does the following:
 * es.tid.planb.test.JMSBug <queue> <threads> <iters>
   - Creates a connection to the broker and starts it.
   - Creates <threads> threads. Each thread does, <iters>/<threads> times:
       - Creates a session
       - Creates a producer on <queue>, a temporary queue and a consumer on this temporary queue.
       - Closes the session and the temporary queue.
       (Note that it doesn't need to send any message for the leak to show)
   - Wait for all the threads to finish, and closes the connection.


2.-We tested the client against:
 activemq 4.1.1
 activemq 4.1-SNAPSHOT (apache-activemq-4.1-20070615.012351-63.tar.gz)
 activemq 4.2-SNAPSHOT (apache-activemq-4.2-20070607.230602-81.tar.gz)

 Using the Sun JVMs:
 1.5.0_07
 1.5.0_11
 1.6.0

running on Sun UltraSparc, solaris 9 architecture.

Using the configuration that I'm also attaching to this mail. It uses a openwire and an stomp connector (just to resemble our failing scenario), and a oracle datasource (anyway, we have reproduced the same leaks using the derby bundled database).


3.-We observed the following facts:
 -The memory consumption grows up, and doesn't get lower, even after the clients finishes (and even forcing the Garbage Collector to run).
 - Looking at jmap heap histograms, it seems that a lot of objects are not released (org.apache.activemq.broker.region.Topic) being among them.
- Disabling the advisoryTopic support in the broker leads to a less severe leakage, but anyway, unacceptable for our requisites.
- Using the Derby embedded database, the heap growed to similar sizes.
- activemq 4.2-SNAPSHOT seems to leek less memory, but is still severe enough (and produced for us even worse problems (AMQ-1296)
- Commenting out the creation of the temporary queue and the consumer on it seems to avoid the leakage.
- The amount of memory leaked doesn't seem related with the number of threads the client uses to do its job. The only difference is the time involved as you can see in the included charts.

4.-I'm sending you the following information.
- The source code of the test program (JMSBug.java)
- The activemq xbean configuration (activemq.xml)
- The heap sizes and histograms for the following cases:
   * Just after starting activemq (histo-startup and heap-startup)
   * After starting, running JMSBug (with threads=1 iters=20000) and forcing the GC from the JMX console (histo-1-20000 and heap-1-20000).
   * After starting, running JMSBug (with threads=50 iters=20000) and forcing the GC from the JMX console (histo-50-20000 and heap-50-20000).
- A pair of screenshots of the heap chart after running both tests. (jmx-heap-1-20000.png and jmx-heap-50-20000.png) ",,fullung,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/07 14:38;mteira;ASF.LICENSE.NOT.GRANTED--amq.zip;https://issues.apache.org/jira/secure/attachment/12460884/ASF.LICENSE.NOT.GRANTED--amq.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-08-15 17:47:54.32,,,false,,,,,,,,,,,,,,,,,44014,,,Wed Aug 15 17:47:54 UTC 2007,,,,,,,,"0|i0s1on:",161749,,,,,,,,,,,,,,,,,,,"26/Jun/07 14:39;mteira;Talking about issues with 4.2-SNAPSHOT, I wanted to refer to AMQ-1295, not AMQ-1296, less problematic.

","15/Aug/07 17:47;mpont;I am experiencing the same problem.  I posted details to the forum:

http://www.nabble.com/forum/ViewPost.jtp?post=11218217",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slave starts connectors before master fails,AMQ-1511,12482426,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,hoorner,hoorner,03/Dec/07 21:36,09/Apr/08 09:43,30/Jan/20 16:57,09/Apr/08 09:43,4.1.1,,,,,,5.1.0,,,Broker,,,,1,"A broker configured as a slave starts its connectors before the the master fails.  This is bad because a) The documentation states that this is not the case.  b) it shouldn't be the case because you don't want clients to be able to connect to the slave until it takes over as master.

In looking at source, it would appear that the MasterConnector of BrokerService is not started until after all the connections are started in startAllConnection().  Unfortunately, to determine if connections should be started, isSlave() is called which relies on the MasterConnector.start() method being called.  

The MasterConnector service start() method needs to be called first before isSlave will work.

See broken code snippet from BrokerService below:


protected void startAllConnectors() throws Exception{
  if (!isSlave()){   // OOPS!!! isSlave asks the MasterConnector if the master is active, but can't until its started 
    ...
       if (services != null) {
                for (int i = 0; i < services.length; i++) {
                    Service service = services[i];   //OOPS, MasterConnector is in this list and the surrounding if relies on it to be started
                    configureService(service);
                    service.start();   //OOPS!!!!   this should have been called for isSlave() to return the right answer.
                }
            }
   }
",,mkelley63,toxicafunk,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/08 20:41;joef;patchfile.txt;https://issues.apache.org/jira/secure/attachment/12460940/patchfile.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-03-13 20:41:18.684,,,false,,,,,,,,,,,,,,,,,84523,,,Wed Apr 09 09:43:26 UTC 2008,,,,,,,,"0|i0s1un:",161776,,,,,,,,,,,,,,,,,,,"13/Mar/08 20:41;joef;Attached is a proposed svn diff patch for this issue. With this patch, a slave broker in a pure master/slave configuration will not open transports, connectors, bridges, proxies, etc. while it is attached to its master. Also, a broker will fail to  start if you configure it to have more than one masterConnector. The code was there to prevent this, but was broken.  ","09/Apr/08 09:43;rajdavies;Patch applied in svn revision 646245",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consumer Priorities Appear To Be Broken On AMQ 5.0,AMQ-1523,12482420,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,joef,joef,17/Dec/07 23:55,09/Apr/08 08:42,30/Jan/20 16:57,09/Apr/08 08:42,5.0.0,,,,,,5.1.0,,,Broker,,,,0,"
1. I have two brokers A and B, which are interconnected via a forwarding bridge.
2. conduitSubscriptions is set to ""true"" (default)
3. Connected to each of the brokers, I have a consumer reading off a queue called Q.TEST.
4. The consumer on broker B is given a vastly different priority than the consumer on broker A.
5. I start a producer that connects to broker A and sends x number of messages to Q.TEST.

On AMQ 4.1.1, the consumer with the higher priority would receive more of the message load. However, on the just-released AMQ 5.0 this is not the case; the message load is being evenly distributed across both consumers. 

  ",AMQ 5.0 on Windows XP Pro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43725,,,2007-12-17 23:55:23.0,,,,,,,,"0|i181tz:",255099,Regression,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kaha Store puts a non-string into System properties,AMQ-1254,12482414,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,djencks,djencks,28/May/07 22:39,09/Apr/08 08:24,30/Jan/20 16:57,09/Apr/08 08:24,4.1.2,,,,,,5.1.0,,,,,,,2,"KahaStore puts a hashmap into SystemProperties, which causes problems with programs that expect only strings as properties.  In particular some versions of Hibernate assume all system properties are strings: this is causing difficulties running roller in geronimo 2.0

Attached is a proposed solution.  I have no idea how to test it.  I get the same 7 failures and one error building amq with and without the change.

The proposal stores the list of locked directories in a string and converts it back and forth to a map whenever it is accessed.  I use a constant string as the vm-wide lock monitor formerly provided by the HashSet.  According to the String javadoc constant strings are intern()ed and the same instance is provided in any classloader: this makes it suitable for a vm-wide lock monitor.",,antoniogmc,ppe,qsu,solprovider,,,,,,,,,,,,,,,,,,,,,,,,"28/May/07 22:39;djencks;ASF.LICENSE.NOT.GRANTED--Kaha-Store.patch;https://issues.apache.org/jira/secure/attachment/12461013/ASF.LICENSE.NOT.GRANTED--Kaha-Store.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-06-13 16:37:26.293,,,false,,,,,,,,,,,,,,,,,84594,,,Wed Apr 09 08:24:48 UTC 2008,,,,Patch Available,,,,"0|i0s1u7:",161774,,,,,,,,,,,,,,,,,,,"07/Jun/07 22:10;djencks;Apparently there's a similar problem with a property called org.apache.activeio.journal.active.lockMap","13/Jun/07 16:37;solprovider;These issues are both related to locking systems.  The HashSet and HashMap contain a list of locked items.  This sounds troublesome because the classes are not synchronized.  System.Properties is a HashTable (automatically synchronized.)  System.Properties is being violated: ""Each key and its corresponding value in the property list is a string."" from http://java.sun.com/j2se/1.4.2/docs/api/java/util/Properties.html

{code:title=Test Code|borderStyle=solid}
   boolean test(){  //true = passes, false = failed.
      boolean test = true;
      java.util.Properties properties = System.getProperties();
      java.util.Enumeration enumeration = properties.elements();
      while(test & enumeration.hasMoreElements()) test= String.class.equals(enumeration.nextElement().getClass());
      enumeration = properties.keys();
      while(test & enumeration.hasMoreElements()) test= String.class.equals(enumeration.nextElement().getClass());
      return test;
   }
{code}


The typical algorithm for locking is to put an identifier as a key into the central location.  No objects are stored; use a static class if necessary, but this typically indicates poor design.  The property value is not needed for the locking system and typically contains information about the lock such as who created it and when. So locking C:Windows\Temp\badcode.java could create:
KEY: org.apache.activeio.journal.active.lockMap.C%3aWindows%2cTemp%2cbadcode%2ejava
VALUE: 20070613T122219Z solprovider reason

Set locks with System.setProperty(key, informationString);
Get the information about a lock with System.getProperty(key);
Check locks with System.getProperties().containsKey(key);
Remove locks with System.getProperties().remove(key);



","19/Jun/07 23:01;djencks;See also https://issues.apache.org/jira/browse/GERONIMO-3243

The reason amq is using this peculiar design is that they need a lock across the entire vm, not just within one classloader.  Putting something in System.getProperties is a simple way to do that and it's not too easy to think of another way.  However it is possible to change what the locked object is to a string, although at a slight cost.","23/Jun/07 21:54;solprovider;The reason amq is using this poor design is a programmer did not read the docs for the System and Properties classes: ""Because Properties inherits from Hashtable, the put and putAll methods can be applied to a Properties object. Their use is strongly discouraged as they allow the caller to insert entries whose keys or values are not Strings. The setProperty method should be used instead.""  ActiveMQ even contains code that will break if System.Properties contains elements that cannot be cast to String.

To fix this:
1. Discard function getVmLockSet().  The locks cannot use a Set.
2. Change lock() and unlock() to this code:
(These functions are in KahaStore.java from the trunk today 20070623.)

{code:title=Good Locking|borderStyle=solid}
private synchronized void lock() throws IOException {
	if (!disableLocking && directory != null && lock == null) {
		String key = getPropertyKey();
		String property = System.getProperty(key);
		if (null == property) {
			if (!brokenFileLock) {
				lock = rootIndexManager.getLock();
				if (lock == null) {
throw new StoreLockedExcpetion(""Kaha Store "" + directory.getName() + ""  is already opened by another application"");
				} else
					System.setProperty(key, ""LOCK""); //Could store datetime of lock.
			}
		} else { //already locked
throw new StoreLockedExcpetion(""Kaha Store "" + directory.getName() + "" is already opened by this application."");
		}
	}
}
private synchronized void unlock() throws IOException {
	if (!disableLocking && (null != directory) && (null != lock)) {
		System.getProperties().remove(getPropertyKey());
		if (lock.isValid()) {
			lock.release();
		}
		lock = null;
	}
}
private String getPropertyKey(){
	//Is replaceAll() needed?  Should test without it.
	return getClass().getName() + "".lock."" + directory.getCanonicalPath().replaceAll(""[:/\\\\]"", ""."");
}
{code}

This should be faster since we are not retrieving a Set<String> (but it will slow code that checks every System.Property.) This should use less memory since we do not have the overhead of one Set<String>. This does not violate System.Properties by bypassing its functions to use the parent HashMap functions.

Warning: I am not set up to work with Java 1.5 (required by this class) so this needs to be tested.","16/Jul/07 23:44;qsu;Is there an estimated time to fix for setting property org.apache.activeio.journal.active.lockMap to String? Thx!","23/Jul/07 15:28;rajdavies;SVN  revision 558774","23/Jul/07 18:30;qsu;Does release 5 come with the fixed version of activeio, i.e. property org.apache.activeio.journal.active.lockMap is set to string properly? As far as I know, release 4.1.1 comes with activeio-3.0.0-incubator which has the bug and their current trunk has it fixed.

Thx!","25/Mar/08 00:52;djencks;Committed improved fix in 4.1 branch rev 640659.

The trunk fix completely ignores the main point of the lock, which is to prevent copies of activemq in the same vm but in different classloaders from attempting to use the same file.  The branch fix locks on a constant string, which according to the java docs is interned and thus guaranteed to be the same object across classloaders.","09/Apr/08 08:24;rajdavies;Fixed by SVN revision 646219",,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveIO compromises java.lang.System.properties,AMQ-704,12482356,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,matthoffman,matthoffman,02/May/06 20:52,03/Apr/08 21:19,30/Jan/20 16:57,12/Jun/07 10:18,,,,,,,5.0.0,,,,,,,1,"When using the ActiveIO journal, it's putting a java.util.HashSet into the System.properties (using a properties.put() call that circumvents the  normal System.putProperty() method, that only allows strings).   This isn't allowed, according to java.util.Properties' contract, and therefore breaks other packages that rely on System.properties adhering to its contract.  Most notably, it chokes Hibernate; however, anything that iterates through the System properties will fail after ActiveIO has compromised it with a non-String value.

Honestly, I don't know why Properties doesn't allow non-String values, but oh well.  From the java.lang.Properties docs: 

""Because Properties inherits from Hashtable, the put and putAll methods can be applied to a Properties object. Their use is strongly discouraged as they allow the caller to insert entries whose keys or values are not Strings. The setProperty method should be used instead. If the store or save method is called on a ""compromised"" Properties object that contains a non-String key or value, the call will fail.""

The call is being made in org.apache.activeio.journal.active.ControlFile; I suppose a hack could be created that stringifies the HashSet before placing it in the properties and recreates it before getting it out again; atlernately, a simple singleton or static set could be used.  I'd be happy to implement either one, if you'd like. 

","ActiveMQ 4.0RC2 (confirmed still around in the current ActiveIO SVN),  Java 1.5 on Windows (but should be a problem anywhere).",dsp,matthoffman,zhangliwen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-05-04 11:44:43.0,,,false,,,,,,,,,,,,,,,,,92687,,,Tue Jun 12 10:18:47 UTC 2007,,,,,,,,"0|i0s1rj:",161762,,,,,,,,,,,,,,,,,,,"04/May/06 11:44;chirino;The reason the singleton map was put in the  System properties were chosen in the first place is because it's guaranteed to be in the primordial classloader and can be acessed by all classloaders.  Putting a singleton in a static class field would now produce a system wide singleton if multiple classloaders are in use for the class that is holding the static hashmap.

Do we know of any other locations that we can register a JVM wide object that is accessible by all classloaders?

Stringifing the map sounds promising if a bit in-efficient.  But then again locking is not a fast thing right?

For now, activeio has implemented a workaround.  Add a -Dorg.apache.activeio.journal.active.DisableLocking=true to JVM startup options and activeio will avoid using the System properties this way.","17/May/06 02:35;chirino;You can now use the -Dorg.apache.activeio.journal.active.DisableLocking=true option to disable the activeio locking trick.
","12/Sep/06 14:11;jamiemc;hi, is this really fixed or is the workaround considered the fix? if it's just the workaround, it's not great, since it fries hibernate 3.1 without the workaround. the workaround is pretty difficult to find and the setting of the DisableLocking system property is not a particularly friendly solution (especially if you don't want locking disabled).","05/Apr/07 07:46;zhangliwen;The same problem  occur in ActiveMQ 4.1.( SUSE Linux 9.2 + Jboss 4.0.3SP1).  I add the option ""JAVA_OPTS=""-Dorg.apache.activeio.journal.active.DisableLocking=true""  in Jboss's run.sh, and it work. 

I deploy two application on jboss:  daemon.war  & activemq-server.war,  the daemon.war  deploy fail.  When I remove the activemq-server.war, the daemon.war  deploy ok. 

The failure message is :

21:25:25,604 ERROR [ContextLoader] Context initialization failed
org.springframework.beans.factory.access.BootstrapException: Unable to return specified BeanFactory instance: factory key [beanRefFactory], from group with resource name [classpath*:springContext/beanRefFactory.xml]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'beanRefFactory' defined in URL [jar:file:/export/home/jboss-4.0.3SP1/server/default/deploy/daemon.war/WEB-INF/lib/biz-v2.0-lib.jar!/springContext/beanRefFactory.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.context.support.ClassPathXmlApplicationContext]: Constructor threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [springContext/daoServiceContext.xml]: Initialization of bean failed; nested exception is java.lang.ClassCastException: java.util.HashSet
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'beanRefFactory' defined in URL [jar:file:/export/home/jboss-4.0.3SP1/server/default/deploy/daemon.war/WEB-INF/lib/biz-v2.0-lib.jar!/springContext/beanRefFactory.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.context.support.ClassPathXmlApplicationContext]: Constructor threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [springContext/daoServiceContext.xml]: Initialization of bean failed; nested exception is java.lang.ClassCastException: java.util.HashSet
org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.context.support.ClassPathXmlApplicationContext]: Constructor threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [springContext/daoServiceContext.xml]: Initialization of bean failed; nested exception is java.lang.ClassCastException: java.util.HashSet
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [springContext/daoServiceContext.xml]: Initialization of bean failed; nested exception is java.lang.ClassCastException: java.util.HashSet
java.lang.ClassCastException: java.util.HashSet
        at org.hibernate.util.PropertiesHelper.resolvePlaceHolders(PropertiesHelper.java:88)
        at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1173)
        at org.springframework.orm.hibernate3.LocalSessionFactoryBean.newSessionFactory(LocalSessionFactoryBean.java:825)
        at org.springframework.orm.hibernate3.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:751)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1091)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:396)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:145)
        at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:537)
        at com.yeepay.common.entity.Incrementer.afterPropertiesSet(Incrementer.java:25)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1091)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:396)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:145)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:283)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:313)
        at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:87)
        at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:72)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
.....


","29/May/07 09:44;dsp;I just encountered the same problem with ActiveMQ 4.1.1. It broke my Grails installation and it took me more than 2 hours to find out what's wrong.

This is clearly a bug, as setting other values than strings is forbidden. 

Just try to do a System.getProperties().list(System.out) and you'll get an exception.

This workaround is not a fix and the problems that arise from this issue are extremely difficult to track down as it will most likely break application server startup.","07/Jun/07 16:39;solprovider;Just a ""me too.""  

Geronimo 1.2 uses this code.
I deployed a Cocoon WAR onto Geronimo. 
Using ""global variables"" in Cocoon XMAPs fails because getProperty(""org.apache.activeio.journal.active.lockMap"") does not return a String.","12/Jun/07 10:18;jstrachan;This is fixed in 5.0.0 (as we no longer use ActiveIO by default).

For folks on earlier versions, the work around is -Dorg.apache.activeio.journal.active.DisableLocking=true until things are migrated to 5.0. 

If someone fancied submitting a patch we could make it easier to disable this option via the activemq.xml or something.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Deadlock when ActiveMQ 4.X is run as an embedded broker inside JBoss 4.X with ""<config-property-value>vm://localhost</config-property-value>"" configured in the ra.xml file.",AMQ-1092,12482408,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,luisalopezrivera,luisalopezrivera,07/Dec/06 16:15,24/Mar/08 23:41,30/Jan/20 16:57,12/Jun/07 16:01,4.0.1,4.0.2,4.1.0,,,,5.0.0,,,Broker,,,,0,"Deadlock occurs when ActiveMQ 4.X is run as an embedded broker inside JBoss 4.X with ""<config-property-value>vm://localhost</config-property-value>"" configured in the ra.xml file.  If ""tcp://localhost:61616"" is used instead of ""vm://localhost"" then everything works fine.

The deadlock seems to occur when two messages are being handled (one is being produced and one being consumed).  If I prevent two messages from being handled at the same time (one produced and one consumed) then the deadlock does not occur.

This situation can be reproduced every single time tested.

","Tested OSes:  Windows 2000 Pro, Window XP Pro x64, Linux 
Java: 1.5 SDK & 1.4 SDK
J2EE Server: JBoss 4.03.S1 & 4.0.4GA",jajansen,luisalopezrivera,pansapien,,,,,,,,,,,,,,,,,,,,,,,,,"07/Dec/06 16:15;luisalopezrivera;ASF.LICENSE.NOT.GRANTED--deadlock.txt;https://issues.apache.org/jira/secure/attachment/12460635/ASF.LICENSE.NOT.GRANTED--deadlock.txt","07/Dec/06 16:15;luisalopezrivera;ASF.LICENSE.NOT.GRANTED--javastack.txt;https://issues.apache.org/jira/secure/attachment/12460662/ASF.LICENSE.NOT.GRANTED--javastack.txt",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-03-16 13:26:08.374,,,false,,,,,,,,,,,,,,,,,84363,,,Mon Mar 24 23:41:45 UTC 2008,,,,,,,,"0|i0s1tb:",161770,,,,,,,,,,,,,,,,,,,"14/Dec/06 16:02;luisalopezrivera;Additional information:  Tests are with XA Transactions.","16/Mar/07 13:26;jajansen;I can confirm this deadlock. I've tried to use Jboss 4.0.5GA with ActiveMQ 4.1.0, 4.1.1 and 4.2-SNAPSHOT RARs and configured with vm:// transport I get this deadlock:

Found one Java-level deadlock:
=============================
""WorkManager(3)-12"":
  waiting to lock monitor 0x00f5b884 (object 0x074fa668, a java.lang.Object),
  which is held by ""WorkManager(3)-6""
""WorkManager(3)-6"":
  waiting to lock monitor 0x00f5c7f4 (object 0x074bf408, a java.lang.Object),
  which is held by ""Thread-50""
""Thread-50"":
  waiting to lock monitor 0x00f5b884 (object 0x074fa668, a java.lang.Object),
  which is held by ""WorkManager(3)-6""

Java stack information for the threads listed above:
===================================================
""WorkManager(3)-12"":
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
        - waiting to lock <0x074fa668> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1155)
        at org.apache.activemq.TransactionContext.setXid(TransactionContext.java:566)
        at org.apache.activemq.TransactionContext.start(TransactionContext.java:299)
        at org.apache.activemq.ra.LocalAndXATransaction.start(LocalAndXATransaction.java:136)
        at org.jboss.tm.TransactionImpl$Resource.startResource(TransactionImpl.java:2063)
        at org.jboss.tm.TransactionImpl.enlistResource(TransactionImpl.java:581)
        at org.jboss.ejb3.mdb.inflow.MessageInflowLocalProxy.startTransaction(MessageInflowLocalProxy.java:368)
        at org.jboss.ejb3.mdb.inflow.MessageInflowLocalProxy.before(MessageInflowLocalProxy.java:204)
        at org.jboss.ejb3.mdb.inflow.MessageInflowLocalProxy.invoke(MessageInflowLocalProxy.java:129)
        at $Proxy125.beforeDelivery(Unknown Source)
        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.beforeDelivery(MessageEndpointProxy.java:110)
        at org.apache.activemq.ra.MessageEndpointProxy.beforeDelivery(MessageEndpointProxy.java:57)
        at org.apache.activemq.ra.ServerSessionImpl.beforeDelivery(ServerSessionImpl.java:201)
        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:690)
        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:165)
        at org.jboss.resource.work.WorkWrapper.execute(WorkWrapper.java:204)
        at org.jboss.util.threadpool.BasicTaskWrapper.run(BasicTaskWrapper.java:275)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:743)
        at java.lang.Thread.run(Thread.java:619)
""WorkManager(3)-6"":
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
        - waiting to lock <0x074bf408> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1138)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:805)
        at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:770)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:187)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at org.apache.activemq.transport.vm.VMTransport.syncOneWay(VMTransport.java:96)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:83)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
        - locked <0x074fa668> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:69)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:74)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1175)
        at org.apache.activemq.TransactionContext.setXid(TransactionContext.java:578)
        at org.apache.activemq.TransactionContext.end(TransactionContext.java:339)
        at org.apache.activemq.ra.LocalAndXATransaction.end(LocalAndXATransaction.java:90)
        at org.jboss.tm.TransactionImpl$Resource.endResource(TransactionImpl.java:2143)
        at org.jboss.tm.TransactionImpl$Resource.endResource(TransactionImpl.java:2118)
        at org.jboss.tm.TransactionImpl.endResources(TransactionImpl.java:1462)
        at org.jboss.tm.TransactionImpl.beforePrepare(TransactionImpl.java:1116)
        at org.jboss.tm.TransactionImpl.commit(TransactionImpl.java:324)
        at org.jboss.tm.TxManager.commit(TxManager.java:240)
        at org.jboss.ejb3.mdb.inflow.MessageInflowLocalProxy.endTransaction(MessageInflowLocalProxy.java:433)
        at org.jboss.ejb3.mdb.inflow.MessageInflowLocalProxy.finish(MessageInflowLocalProxy.java:312)
        at org.jboss.ejb3.mdb.inflow.MessageInflowLocalProxy.after(MessageInflowLocalProxy.java:228)
        at org.jboss.ejb3.mdb.inflow.MessageInflowLocalProxy.invoke(MessageInflowLocalProxy.java:134)
        at $Proxy125.afterDelivery(Unknown Source)
        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.afterDelivery(MessageEndpointProxy.java:126)
        at org.apache.activemq.ra.MessageEndpointProxy.afterDelivery(MessageEndpointProxy.java:65)
        at org.apache.activemq.ra.ServerSessionImpl.afterDelivery(ServerSessionImpl.java:216)
        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:751)
        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:165)
        at org.jboss.resource.work.WorkWrapper.execute(WorkWrapper.java:204)
        at org.jboss.util.threadpool.BasicTaskWrapper.run(BasicTaskWrapper.java:275)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:743)
        at java.lang.Thread.run(Thread.java:619)
""Thread-50"":
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
        - waiting to lock <0x074fa668> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1155)
        at org.apache.activemq.ActiveMQSession.<init>(ActiveMQSession.java:227)
        at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:279)
        at org.apache.activemq.ra.ServerSessionPoolImpl.createServerSessionImpl(ServerSessionPoolImpl.java:63)
        at org.apache.activemq.ra.ServerSessionPoolImpl.getServerSession(ServerSessionPoolImpl.java:116)
        at org.apache.activemq.ActiveMQConnectionConsumer.dispatch(ActiveMQConnectionConsumer.java:136)
        at org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1479)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at org.apache.activemq.transport.vm.VMTransport.syncOneWay(VMTransport.java:96)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:83)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
        - locked <0x074bf408> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1138)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:805)
        at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:770)
        at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:360)
        at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:83)
        at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:51)
        at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:417)
        at org.apache.activemq.broker.region.Topic$2.afterCommit(Topic.java:258)
        at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:83)
        at org.apache.activemq.transaction.XATransaction.doPostCommit(XATransaction.java:110)
        at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:65)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:154)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:94)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:94)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:104)
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:424)
        - locked <0x04c671b8> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:99)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at org.apache.activemq.transport.vm.VMTransport.syncOneWay(VMTransport.java:96)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:83)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
        - locked <0x04c73c70> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:69)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:74)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1175)
        at org.apache.activemq.TransactionContext.commit(TransactionContext.java:450)
        at org.apache.activemq.ra.LocalAndXATransaction.commit(LocalAndXATransaction.java:85)
        at org.jboss.tm.TransactionImpl$Resource.commit(TransactionImpl.java:2253)
        at org.jboss.tm.TransactionImpl.commitResources(TransactionImpl.java:1784)
        at org.jboss.tm.TransactionImpl.commit(TransactionImpl.java:340)
        at org.jboss.tm.TxManager.commit(TxManager.java:240)
        at org.jboss.aspects.tx.TxPolicy.endTransaction(TxPolicy.java:175)
        at org.jboss.aspects.tx.TxPolicy.invokeInOurTx(TxPolicy.java:87)
        at org.jboss.aspects.tx.TxInterceptor$Required.invoke(TxInterceptor.java:191)
        at org.jboss.aop.joinpoint.MethodInvocation.invokeNext(MethodInvocation.java:101)
        at org.jboss.aspects.tx.TxPropagationInterceptor.invoke(TxPropagationInterceptor.java:76)
        at org.jboss.aop.joinpoint.MethodInvocation.invokeNext(MethodInvocation.java:101)
        at org.jboss.ejb3.stateless.StatelessInstanceInterceptor.invoke(StatelessInstanceInterceptor.java:62)
        at org.jboss.aop.joinpoint.MethodInvocation.invokeNext(MethodInvocation.java:101)
        at org.jboss.aspects.security.AuthenticationInterceptor.invoke(AuthenticationInterceptor.java:77)
        at org.jboss.ejb3.security.Ejb3AuthenticationInterceptor.invoke(Ejb3AuthenticationInterceptor.java:102)
        at org.jboss.aop.joinpoint.MethodInvocation.invokeNext(MethodInvocation.java:101)
        at org.jboss.ejb3.ENCPropagationInterceptor.invoke(ENCPropagationInterceptor.java:47)
        at org.jboss.aop.joinpoint.MethodInvocation.invokeNext(MethodInvocation.java:101)
        at org.jboss.ejb3.asynchronous.AsynchronousInterceptor.invoke(AsynchronousInterceptor.java:106)
        at org.jboss.aop.joinpoint.MethodInvocation.invokeNext(MethodInvocation.java:101)
        at org.jboss.ejb3.stateless.StatelessContainer.localInvoke(StatelessContainer.java:211)
        at org.jboss.ejb3.stateless.StatelessLocalProxy.invoke(StatelessLocalProxy.java:79)
        at $Proxy113.publish(Unknown Source)
        at com.wolterskluwer.ceres.imports.mbeans.FilePollerService.fileSetFound(FilePollerService.java:146)
        at org.sadun.util.polling.DefaultListener.receive(DefaultListener.java:40)
        at com.deltax.util.listener.SignalQueue.run(Unknown Source)

Found 1 deadlock.","12/Jun/07 16:01;jstrachan;This is fixed AFAIK in 5.0.0 as the VM transport defaults to the async dispatch by default.

As a work around, try using vm://localhost?async=true as your brokerURI?","24/Mar/08 23:41;djencks;A possibly related problem was fixed in AMQ-1438.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQDestination.setPhysicalName(): checking invalid wildcard to identify pattern ""<""",AMQ-1454,12483923,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,djencks,cbu,cbu,09/Oct/07 14:31,24/Mar/08 22:57,30/Jan/20 16:57,24/Mar/08 22:57,4.1.1,,,,,,4.1.2,,,Broker,,,,0,"ActiveMQDestination.setPhysicalName(): checking invalid wildcard to identify pattern ""<""

	if (!isTemporary() && (physicalName.indexOf(""*"") >= 0 || physicalName.indexOf(""<"") >= 0))

I think you should check for "">"". 

I order to confirm my thinking I downloaded the 5.0 snapshot and there you changed already.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-03-24 22:57:06.432,,,false,,,,,,,,,,,,,,,,,84534,,,Mon Mar 24 22:57:06 UTC 2008,,,,,,,,"0|i0tsuv:",171984,,,,,,,,,,,,,,,,,,,"24/Mar/08 22:57;djencks;Fixed rev 640629.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages aren't being delivered in a clustered environment,AMQ-1283,12482376,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,matthewv,matthewv,15/Jun/07 02:17,19/Mar/08 18:21,30/Jan/20 16:57,19/Mar/08 18:21,4.1.1,,,,,,5.1.0,,,Broker,,,,3,"Messages aren't always delivered in a clustered environment.

If you have a cluster of three ActiveMQ nodes, and you send the cluster a constant stream of messages, and randomly restart individual ActiveMQ nodes, you can enter a state whereby an ActiveMQ node has undelivered messages sitting in the message store. These messages will not be delivered, unless that ActiveMQ node is restarted.

This appears to be a consequence of the fact that a Queue immediately dispatches a message received to any available subscribers, but ignores any exceptions that result from the actual send.","Java 1.5.0_04, Windows XP",matthewv,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-03-18 20:57:45.517,,,false,,,,,,,,,,,,,,,,,84571,,,Wed Mar 19 18:21:22 UTC 2008,,,,,,,,"0|i0s1q7:",161756,,,,,,,,,,,,,,,,,,,"18/Mar/08 20:57;tpounds;There is a post about this here -> http://www.nabble.com/ERROR-RecoveryListenerAdapter---Message-id-xxxxx-could-not-be-recovered-from-the-data-store---already-dispatched-td15821055s2354.html#a15821055","18/Mar/08 21:50;tpounds;Here is another post that may be related. It seems that the fix suggested by Pete Schwamb fixed his issue. The fix was checked into the SVN repo r636078.

Thread
http://www.nabble.com/5.0-%28and-later%29-Queue-stops-dispatching-td15987081s2354.html#a15987081

Fisheye
http://fisheye6.cenqua.com/browse/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/kaha/impl/index/DiskIndexLinkedList.java?r1=598330&r2=636078

","19/Mar/08 18:21;tpounds;This issue seems to be resolved by SVN r636078.  We tested it successfully using fuse broker 5.0.0.9 with the patch applied from SVN r636078.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrency Issue on MessageConsumer deliveredMessages,AMQ-1556,12482280,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,21/Jan/08 08:47,14/Mar/08 19:44,30/Jan/20 16:57,21/Jan/08 10:29,5.0.0,,,,,,5.1.0,,,,,,,0,The LinkedList can be modified concurrently - see http://www.nabble.com/NPE-while-consuming-messages-to12301153s2354.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-03-14 19:44:57.041,,,false,,,,,,,,,,,,,,,,,84655,,,Fri Mar 14 19:44:57 UTC 2008,,,,,,,,"0|i14bun:",233383,,,,,,,,,,,,,,,,,,,"21/Jan/08 10:29;rajdavies;Fixed by svn revision 613829","14/Mar/08 19:44;mooseroy;I still see frequent concurrency issues within this class's dispose method when it clears the linked list.

java.lang.NullPointerException
	at java.util.LinkedList.clear(LinkedList.java:294)
	at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:661)
	at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:578)
        ...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlocks (with JUnit tests),AMQ-1490,12482329,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rainer klute,rainer klute,12/Nov/07 09:48,04/Mar/08 15:52,30/Jan/20 16:57,13/Feb/08 10:24,5.0.0,,,,,,5.1.0,,,Broker,,,,3,"For some time now there have been various bug reports about ActiveMQ ""blocking"", ""not receiving messages"", ""running into a deadlock"" etc. Since I encoutered such deadlocks now and then, too, I eventually wrote up a JUnit testing scenario for this stuff. I found out that deadlocks can be quite easily reproduced. The symptoms are that the producer thread is sending or committing while the consumer thread is receiving or committing - and none of them can advance. One of the threads is always stuck in a blocking queue.

Here's a sample output of my testing class:
 An ActiveMQ deadlock has been discovered. The following threads seem to be involved:

 Thread ""producer"" is inactive since 16 seconds after 358719 status changes. The current status is COMMITTING
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1889)
 java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)
 org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
 org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:76)
 org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1172)
 org.apache.activemq.TransactionContext.commit(TransactionContext.java:259)
 org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:494)
 de.rainer_klute.activemq.ProducerThread.run(ProducerThread.java:162)

 Thread ""consumer"" is inactive since 16 seconds after 1807 status changes. The current status is RECEIVING
 java.lang.Object.wait(Native Method)
 java.lang.Object.wait(Object.java:485)
 org.apache.activemq.MessageDispatchChannel.dequeue(MessageDispatchChannel.java:75)
 org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:404)
 org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:452)
 org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:504)
 de.rainer_klute.activemq.ConsumerThread.run(ConsumerThread.java:183)

The following factors seem to increase the probability of a deadlock:
* small values for memoryUsage
* working transacted in the consumer (not always necessary but ""helps"")
* many messages in the persistence store (to be achieved via a long delay before the consumer starts to read messages)
",Linux,cwbrandon,john.greeley,lhotari,rainer klute,rajdavies,schmeeldeal,yaussy,,,,,,,,,,,,,,,,,,,,,"29/Nov/07 11:14;rainer klute;AMQ-1490_memory-001.png;https://issues.apache.org/jira/secure/attachment/12460934/AMQ-1490_memory-001.png","29/Nov/07 11:15;rainer klute;AMQ-1490_result-001.txt;https://issues.apache.org/jira/secure/attachment/12460974/AMQ-1490_result-001.txt","25/Jan/08 14:58;rainer klute;AMQ-1490_result-002.txt;https://issues.apache.org/jira/secure/attachment/12460989/AMQ-1490_result-002.txt","26/Jan/08 16:36;rainer klute;ActiveMQ_Testcases.jar;https://issues.apache.org/jira/secure/attachment/12461012/ActiveMQ_Testcases.jar","23/Nov/07 08:39;rainer klute;ActiveMQ_Testcases.jar;https://issues.apache.org/jira/secure/attachment/12461018/ActiveMQ_Testcases.jar",,,,5.0,,,,,,,,,,,,,,,,,,,,2007-11-13 22:10:43.243,,,false,,,,,,,,,,,,,,,,,84682,,,Tue Mar 04 15:52:15 UTC 2008,,,,,,,,"0|i0tsmn:",171947,,,,,,,,,,,,,,,,,,,"12/Nov/07 10:22;rainer klute;JUnit test cases for this issue. See file index.html or AMQ-1490.html for details.","13/Nov/07 06:21;rainer klute;I just checked this issue against ActiveMQ 5.0.0 RC3 and found it still valid. And I got additional warnings like these:

    [junit] INFO: ActiveMQ Message Broker (localhost, ID:xxxxxxxx-17170-1194934336239-0:0) is shutting down
    [junit] 13.11.2007 07:13:03 org.apache.activemq.ActiveMQConnection onAsyncException
    [junit] WARNUNG: Async exception with no exception listener: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#1) disposed.
    [junit] org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#1) disposed.
    [junit]     at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:200)
    [junit]     at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
    [junit]     at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
    [junit]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
    [junit]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
    [junit]     at java.lang.Thread.run(Thread.java:619)
    [junit] 13.11.2007 07:13:03 org.apache.activemq.AdvisoryConsumer dispose
    [junit] INFO: Failed to send remove command: javax.jms.JMSException: Peer (vm://localhost#1) disposed.
    [junit] javax.jms.JMSException: Peer (vm://localhost#1) disposed.
    [junit]     at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
    [junit]     at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1154)
    [junit]     at org.apache.activemq.AdvisoryConsumer.dispose(AdvisoryConsumer.java:56)
    [junit]     at org.apache.activemq.ActiveMQConnection.cleanup(ActiveMQConnection.java:1326)
    [junit]     at org.apache.activemq.ActiveMQConnection.transportFailed(ActiveMQConnection.java:2027)
    [junit]     at org.apache.activemq.ActiveMQConnection$4.run(ActiveMQConnection.java:1663)
    [junit]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
    [junit]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
    [junit]     at java.lang.Thread.run(Thread.java:619)
    [junit] Caused by: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#1) disposed.
    [junit]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:87)
    [junit]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
    [junit]     at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1152)
    [junit]     ... 7 more
    [junit] 13.11.2007 07:13:03 org.apache.activemq.ActiveMQConnection transportFailed
    [junit] WARNUNG: Cleanup failed
    [junit] javax.jms.JMSException: Peer (vm://localhost#1) disposed.
    [junit]     at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
    [junit]     at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1154)
    [junit]     at org.apache.activemq.TransactionContext.begin(TransactionContext.java:200)
    [junit]     at org.apache.activemq.ActiveMQSession.doStartTransaction(ActiveMQSession.java:1653)
    [junit]     at org.apache.activemq.ActiveMQMessageConsumer.acknowledge(ActiveMQMessageConsumer.java:823)
    [junit]     at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:651)
    [junit]     at org.apache.activemq.ActiveMQSession.dispose(ActiveMQSession.java:575)
    [junit]     at org.apache.activemq.ActiveMQConnection.cleanup(ActiveMQConnection.java:1332)
    [junit]     at org.apache.activemq.ActiveMQConnection.transportFailed(ActiveMQConnection.java:2027)
    [junit]     at org.apache.activemq.ActiveMQConnection$4.run(ActiveMQConnection.java:1663)
    [junit]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
    [junit]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
    [junit]     at java.lang.Thread.run(Thread.java:619)
    [junit] Caused by: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#1) disposed.
    [junit]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:87)
    [junit]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
    [junit]     at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1152)
    [junit]     ... 11 more
","13/Nov/07 22:10;chirino;I reviewed you test case and noticed that your consumer uses the same connection as the producer.  It is possible to get into a deadlock situation when this occurs.  If your producer blocks due to it waiting space on the broker, it will lock up the connection.  At that point the consumer will not be able to consume anymore messages either.

I believe your deadlocks will go away if you use separate connections for the consumer and producer threads.","14/Nov/07 05:12;rainer klute;Using the same connection for the producer as well as for the consumer is neither uncommon nor is it contrary to the JMS specification. I'd say since the JMS specification allows it, ActiveMQ should support it on principle.

Some more rationale: With separate connections you would have to diffentiate between ""producing"" and ""consuming"" connections. This would be unnecessarily complex - not to mention the many connections' resource consumption. An application's JMS setup would be too static. It should be possible to build up complex communication scenarios all over the same connection, and it should even be possible to change the communicators' roles (producer or consumer) over time.

I'd be grateful if you could address this issue.

What can I do until then? In my project's scenario I have a few producers (at present only one) writing messages to a topic and about 200 consumers reading them based on message properties. Should I really use different connections for all of them or are two connections sufficient?","14/Nov/07 12:49;fullung;This is starting to sound like an issue I reported some time back, namely AMQ-1148, which hasn't received much attention in recent months.

There is nothing in the JMS specification to indicate that one should use separate connections for producers and consumers and doing so can have various implications for the design of an application, so I would agree with Rainer Klute that this is something that should probably be looked at carefully.","19/Nov/07 19:08;rainer klute;Meanwhile I am pretty sure that the ""use two connections"" approach does not work. My application has two producers and a few dozens of consumers, and now - desperate as I am - each session has its own connection or, to put it the other way round, each connection has only a single session. Nevertheless I still end up with a lot of threads hanging around like shown in the original bug description (see above).","21/Nov/07 10:08;rainer klute;I did some further investigation and changed by JUnit test to use a configurable number of producers and consumers. The good news is that it demonstrates a bug with a very small amount of messages already. I one of the test scenarios I have 2 producers. Each one sends 2 messages to a topic. The single consumer should receive 4 messages. However, this fails depending on the combination of whether the producers or the consumers or both operate transacted or not. Increase the number of messages and other combinations fail. (I'll check in the JUnit test soon.)","21/Nov/07 10:30;rainer klute;Modified JUnit tests as mentioned in the comment above. See index.html for details!","21/Nov/07 13:44;rainer klute;Small fix in the JUnit test.

If running the test with 2 messages (i.e. 1 per producer) the test fails differently from when running with many messages (e.g. 20,000 per producer).","21/Nov/07 14:05;rainer klute;Just tried the stuff with a TCP transport instead of a VM transport: No substantial change except for the places where the deadlocks occur.","23/Nov/07 07:21;rajdavies;The consumer(s) need to be initialized before you send messages to them -
e.g. when creating the ConsumerThreads in the ReliabilityTest - call consumer.init() - which actually creates the JMS consumer.

ActiveMQ only sends topic messages to consumers that exist - or have existed (if they are durable). 
Also - please don't call inactivity a deadlock ;)","23/Nov/07 07:56;rainer klute;Please look once more: I *do* initialize the consumer threads and create the consumers - see line 282 in ReliabilityTest.java.

If there were no consumers, they wouldn't receive any messages at all. However, the usually do receive some messages, but not all.","23/Nov/07 08:24;rajdavies;your calling init in the wrong place -  move it to line 252
","23/Nov/07 08:37;rainer klute;Yup, you are right! I now moved initializing and starting the consumers before the producers. However, the behaviour is still buggy, i.e. the two producers hanging in a commit() while the consumer is in a receive(). The corrected JUnit test will follow in a minute.","23/Nov/07 08:39;rainer klute;Fixed JUnit tests","28/Nov/07 20:21;rajdavies;Potential fix by SVN revision revision 599129
Rainer would you mind verifying please ?","29/Nov/07 11:13;rainer klute;The good news is: Yes, it works! Great! Thanks, Rob!

The bad news is: Some test cases take a tremendous amount of heap space now. My former max memory setting of -Xmx256K was insufficient; with -Xmx1024K the test application runs. This gave me cause to investigate that behaviour more closely and I had jconsole watch the memory usage. The result you'll find in attachment AMQ-1490_memory-001.png. I did some drawing on that screenshot to demarcate the test cases. The wall clock times on the X axis you can correlate to the detailed test case protocol in AMQ-1490_result-001.txt.

The scenario is that two producers send each 100,000 messages to a topic and one consumer reads them all. The differences between them are whether producing and consuming sessions are transactional or not.

Interesting results:
* The enormous memory consumption only occurs if the producers operate transactionally and the consumer does not.
* Test case 0001 (transactional producers) starts to consume much memory. However, after a mark-and-sweep garbage collection things stay moderate.
* The execution times vary very much: There's a factor of 7.7 between the fastest and the slowest run.
* The fastests test cases are those without transactional producers.
","29/Nov/07 11:14;rainer klute;Memory consumption screenshot (see last comment)","29/Nov/07 11:15;rainer klute;Detailed test results (see last comment)","04/Dec/07 11:31;rajdavies;There's additional fixes here by SVN revision 600891
If there isn't enough memory for the broker to finish a transaction the broker will block - so if you see producers pause this is the likely reason","05/Dec/07 07:13;rainer klute;I'd be happy if that would be so. However, instead of pausing the test case still fails with an OutOfMemoryError when I specify -Xmx256M or -Xmx512M.

With 768 MB it works. The funny thing is that it runs faster with 768 MB than with 1024 MB. Maybe its swapping that disturbs in the latter case.","08/Dec/07 10:06;rajdavies;Hi Rainer,
This has taken a while to track down - but the ack list in amq could grow excessively large. For my tests - the memory profile is good with 100,000 msgs per producer - if you get a chance - please confirm

using  svn revision 602440

thanks,

Rob","08/Dec/07 18:25;rainer klute;Hi Rob,
now there's another problem: When the consumer is not yet receiving messages, the producers now block after sending a bunch of messages. They should spool the messages to disk instead. (My real-world application generates dozens or hundreds of messages per second while there might be now consumer available for days.)","16/Dec/07 22:55;rajdavies;Hi Rainer,
the problem is the size of the transaction  - currently you need to either have smaller transactions - or enough memory to accommodate them,
As this problem has moved on since the original issue - can we close this and add a new feature that would allow spooling to disk for in-memory transactions?

thanks,

Rob","17/Dec/07 15:17;rainer klute;Rob,
I am presently running my test cases
* without the one with the large transaction size but
* with more messages than before (500,000 per producer, with 2 producers and 1 consumer).

The flow control issues seems indeed to be solved, so yes, we can close this issue.

However, with the increase of  the number of messages, I get all sorts of errors from the AMQ store, i.e.
* notes about messages that could not have been entered into the store because of an IndexOutOfBoundException, and
* notes about messages that could not have been recoved from the store.
Before creating another issue, I'll update to the very latest ActiveMQ snapshot and retry.","17/Dec/07 16:21;rainer klute;Oh no! With the latest snapshot (subversion revision 605158) I get blocks/deadlocks again! Producers and consumers each hanging in a commit()!","20/Dec/07 00:13;rajdavies;Could you attach a stack dump of where they hang in a commit ? - I can't reproduce","20/Dec/07 10:39;rainer klute;Hm, when I tried once again to reproduce it, I couldn't. Perhaps my grace period of 15 seconds for deadlock/blocking was too short and the algorithm detected a block that wasn't one. Now it requires 2 minutes without any send/receive activity before claiming that something blocks.

I'd say let's close this issue. I'll continue to stress test ActiveMQ anyway and will submit a new issue soon!

Rob, thanks a lot for fixing this issue!","20/Dec/07 20:45;rajdavies;Phew! Thanks Rainer for you're help!!","25/Jan/08 14:48;rainer klute;Sorry, but I have to reopen this issue again!

While the test scenario ""multiple producers, single consumer"" seems to work fine in most cases, the scenario ""one producer, multiple consumers"" fails soon and reproducibly with just 2 consumers and as few as 6,000 messages. (In my production environment I'll have about 600 consumers and about 250 messages per second.)

I shall re-submit a further development of my JUnit test case shortly.","25/Jan/08 14:58;rainer klute;Sample output of the ""1 producer, 2 consumers"" scenario","26/Jan/08 16:36;rainer klute;The latest version of my test cases.","13/Feb/08 10:24;rainer klute;Seems to work with revision 627336 if transaction size is not too big. However, if neither producer nor consumers are transacted, performance is best.","04/Mar/08 15:52;lhotari;I'm using Jencks Inbound/Outbound JMS configuration for consuming & producing messages and quite often there's a 2 minute delay in message delivery after the producer has replied. This happens only in ActiveMQ 5.0. I'll try nightly builds to see if they fix the problem. Maybe JCA/RA has the same issue?",
"Queue size is 0, after starting with messages in persisent storage",AMQ-1271,12482283,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,tom@samplonius.org,tom@samplonius.org,10/Jun/07 07:59,18/Feb/08 17:17,30/Jan/20 16:57,18/Feb/08 17:17,4.1.1,,,,,,5.1.0,,,Broker,Message Store,,,2,"1. Put 10 persistent messages into a queue
2. Stop ActiveMQ
3. Start ActiveMQ
4. Check Web Console and/or JMX, and ActiveMQ will insist that there are 0 messages in all queues.
5. Consume messages.
5. Check Web Console and/or JMX, and will now say there are ""-10"" messages in the queue.

This occurs both with the default Kaha persistence module, as well as with Journal+Derby.

 ","java version ""1.5.0""
Java(TM) 2 Runtime Environment, Standard Edition (build diablo-1.5.0-b01)
Java HotSpot(TM) Server VM (build diablo-1.5.0_07-b01, mixed mode)

apache-activemq-4.2-20070607.230602-81",kwark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-22 00:05:16.747,,,false,,,,,,,,,,,,,,,,,84574,,,Mon Feb 18 17:17:51 UTC 2008,,,,,,,,"0|i0s1pb:",161752,,,,,,,,,,,,,,,,,,,"22/Jan/08 00:05;tpounds;is this a duplicate of AMQ-1510?","18/Feb/08 17:17;rajdavies;Fixed by svn revision 613830",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
I saw this test failure on a CI build in org.apache.activemq.broker.region.cursors.CursorDurableTest,AMQ-1360,12482303,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jstrachan,jstrachan,10/Aug/07 11:00,18/Feb/08 17:16,30/Jan/20 16:57,18/Feb/08 17:16,,,,,,,5.1.0,,,Broker,,,,0,"Running org.apache.activemq.broker.region.cursors.CursorDurableTest
10-Aug-2007 05:15:27	 Exception in thread ""Persistence Adaptor Task"" java.lang.NullPointerException
10-Aug-2007 05:15:27	         at org.apache.activemq.kaha.impl.index.VMIndexLinkedList.remove(VMIndexLinkedList.java:254)
10-Aug-2007 05:15:27	         at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:314)
10-Aug-2007 05:15:27	         at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:697)
10-Aug-2007 05:15:27	         at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.acknowledge(KahaTopicReferenceStore.java:133)
10-Aug-2007 05:15:27	         at org.apache.activemq.store.amq.AMQTopicMessageStore$2.execute(AMQTopicMessageStore.java:176)
10-Aug-2007 05:15:27	         at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:44)
10-Aug-2007 05:15:27	         at org.apache.activemq.store.amq.AMQTopicMessageStore.doAsyncWrite(AMQTopicMessageStore.java:169)
10-Aug-2007 05:15:27	         at org.apache.activemq.store.amq.AMQMessageStore.asyncWrite(AMQMessageStore.java:293)
10-Aug-2007 05:15:27	         at org.apache.activemq.store.amq.AMQMessageStore$1.iterate(AMQMessageStore.java:86)
10-Aug-2007 05:15:27	         at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
10-Aug-2007 05:15:27	         at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
10-Aug-2007 05:15:27	         at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
10-Aug-2007 05:15:27	         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
10-Aug-2007 05:15:27	         at java.lang.Thread.run(Thread.java:595)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-02-18 17:16:27.203,,,false,,,,,,,,,,,,,,,,,95767,,,Mon Feb 18 17:16:27 UTC 2008,,,,,,,,"0|i181jr:",255053,Unit Test Broken,,,,,,,,,,,,,,,,,,"18/Feb/08 17:16;rajdavies;This looks fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Temporary queues, Network of Brokers, Embedded VM",AMQ-1568,12482265,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,eric-awl,eric-awl,24/Jan/08 16:30,01/Feb/08 17:03,30/Jan/20 16:57,01/Feb/08 17:03,4.1.0,,,,,,,,,,,,,0,"Context

A simple question/answer mechanism between a client process with an embedded broker, and a server process with an embedded broker, on two different servers. The two embedded brokers are linked with a ""double"" network broker (client broker referenced on the server, server broker referenced on the client)

The server process 
 - listens on a fixed ""JNDI defined"" queue.
 - sends an answer, on the JMSReplyTo queue defined by the received message.

The client process enter a loop (5 times)
    - it generates 100 threads. 
    - Each thread 
         - creates a temporary queue. 
         - waits 5 seconds
         - enter a loop (10 times)
                  - send a message on the fixed ""JNDI defined"" queue with a setJMSReplyTo defined with the temporary queue
                  - wait for the answer on the temporary queue
         - delete the temporary queue

During the test, some threads are blocked on their temporary queue, waiting for the answer.
When I look the two embedded brokers with web site, I could find the temporary queue created on each embedded broker, and message enqueued on the server side and not sent to the client side.

The same test seems to be OK, when I use standalone ActiveMQ instances and tcp transport connector to link client and server process to their own ActiveMQ instance.

Eric",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84448,,,Fri Feb 01 17:03:54 UTC 2008,,,,,,,,"0|i0tt1b:",172013,,,,,,,,,,,,,,,,,,,"01/Feb/08 17:01;eric-awl;I would like to close this issue. 

I upgraded to 5.0.0 and had the same problems.

ttmdev helped me to resolve this problem. I had to add temporisation before freeing resources.

Thank you.","01/Feb/08 17:03;eric-awl;It was a global problem of freeing resources too quickly. Such problem seems to happen more often, with embedded brokers than with distinct instance connected with tcp transport.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid messages selected from durable topic,AMQ-1095,12482257,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,fullung,fullung,12/Dec/06 14:45,29/Jan/08 22:30,30/Jan/20 16:57,01/Oct/07 20:03,5.0.0,,,,,,5.0.0,,,Selector,,,,1,"We think we've found an issue with durable topic subscriptions and message selectors.

The attached application sends messages with an int property i with values 0..19 to a topic. We also have a durable subscription to the topic, selecting messages for which i%2=0. After sending the messages, the connection is started, allowing the consumer to receive the messages we've published that match the selection criterion. The second and every subsequent time we run the application, we see the following:

message.i = 19
message.i = 0
message.i = 2
message.i = 4
message.i = 6
message.i = 8
message.i = 10
message.i = 12
message.i = 14
message.i = 16
message.i = 18

message.i = 19 does not match the message selector criterion but it reaches our message handler anyway.

Tested with ActiveMQ from trunk, revision 486090.",,rainer klute,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/06 14:45;fullung;ASF.LICENSE.NOT.GRANTED--DurableTopicSelector.java;https://issues.apache.org/jira/secure/attachment/12460609/ASF.LICENSE.NOT.GRANTED--DurableTopicSelector.java","01/Oct/07 09:27;rainer klute;ActiveMQ_Testcases.jar;https://issues.apache.org/jira/secure/attachment/12460673/ActiveMQ_Testcases.jar","15/Aug/07 10:20;rainer klute;patch_for_AMQ-1095.diff;https://issues.apache.org/jira/secure/attachment/12460803/patch_for_AMQ-1095.diff",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2007-08-10 14:23:32.003,,,false,,,,,,,,,,,,,,,,,84722,,,Tue Jan 29 22:30:26 UTC 2008,,,,,,,,"0|i0s1o7:",161747,,,,,,,,,,,,,,,,,,,"10/Aug/07 14:23;rainer klute;I have developed a JUnit test case to verify this issue. The test cases show the following:
* The bug occurs only with durable subscribers. Non-durable subscribers work fine.
* The bug occurs if the ActiveMQ broker uses an already existing kaha directory. Everything works fine if the broker creates and uses a fresh kaha directory.
","10/Aug/07 14:24;rainer klute;The JUnit test cases mentioned in my other comment. Download, unpack, and open the index.html file.","13/Aug/07 15:35;rainer klute;It seems to me that the bug is in the Kaha persistence manager namely in the method org.apache.activemq.store.kahadaptor.KahaTopicMessageStore.addMessage(ConnectionContext context, Message message). Here the message is added to the message containers of *all* topic subcribers without checking their respective selectors. Am I on the right track here or not?","14/Aug/07 10:06;rainer klute;I am one step further now: It might be disputed whether it is sensible or not to add messages to all topic subscribers. However, that does obviously no harm when a fresh kaha store is used.

However, when a kaha store is recovered that had been created in a former run, the messages that went to the wrong subscribers are still in the store. But now they show up at all subscribers independed of their selectors.","14/Aug/07 11:12;rainer klute;I updated the test case to verify that unexpected messages are present after recovering the kaha store.","15/Aug/07 10:18;rainer klute;Okay, folks, here's a hack to solve this issue. With this patch the KahaTopicMessageStore.addMessage(ConnectionContext, Message) method refuses to add a message to those subscription containers where the message does not match the respective subscription selector.

Unfortunately the method does not have much it can build on except for the message itself and the subcription info. Therefore I had to re-implement the selector matching stuff from AbstractSubscription. Another option would have been to pass on some necessary information to the store, but I didn't want to fiddle around with any ActiveMQ architecture issues.

Probably the ActiveMQ architects can find a better and more elegant solution to this problem. Well, at least my JUnit test run now, and my project will hopefully do so, too.

(As an aside, I observed that the hash-index-topic-data_topic___TheNameOfMyTopic file in the Kaha directory grows without paying attention to the maximum file limit. What will happen here in the end?)","15/Aug/07 10:20;rainer klute;Oops, wrong file uploaded. Here's a better one.","28/Sep/07 14:13;chirino;Hi Klute,

is it just the attached DurableTopicSelector.java that I need to verify the bug??  Could you reattach with an Apache License header on it and make sure you click the check box that says your contributing to the ASF.

Thanks.","28/Sep/07 15:07;rainer klute;Hi Hiram,

DurableTopicSelector.java is the original bug poster's test case. I cannot comment on it.

My files are:
* ActiveMQ_Testcases.jar containing JUnit test cases and some documentation on how to run them.
* patch_for_AMQ-1095.diff with a patch that fixes the problem for me.

I shall resubmit the stuff with the Apache 2 License later, but surely not today. However, you can treat this comment as an LOI.","01/Oct/07 09:27;rainer klute;Source files in ActiveMQ_Testcases.jar now have the Apache License header.","01/Oct/07 20:03;chirino;Thanks for the updated test case.

I have added it and fixed the problem in revision:581053","29/Jan/08 22:30;rajdavies;This works better with AMQStore and deleteAllMessagesOnStartup",,,,,,,,,,,,,,,,,,,,,,,
amqPersistence store grows continuously,AMQ-1560,12482275,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,21/Jan/08 13:05,24/Jan/08 13:51,30/Jan/20 16:57,21/Jan/08 13:10,5.0.0,,,,,,5.1.0,,,Message Store,,,,0,"Under certain conditions, the data log files in the journal may not get cleared properly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-24 13:51:21.573,,,false,,,,,,,,,,,,,,,,,84652,,,Thu Jan 24 13:51:21 UTC 2008,,,,,,,,"0|i14b7b:",233278,,,,,,,,,,,,,,,,,,,"21/Jan/08 13:10;rajdavies;Fixed by svn revision 613874","24/Jan/08 13:51;tmielke;The data log files in kr-store/data also don't get cleaned up properly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Out of order messages can be dispatched out of order for durable topic subscriptions under load,AMQ-1566,12482274,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,23/Jan/08 19:43,23/Jan/08 20:09,30/Jan/20 16:57,23/Jan/08 20:09,5.0.0,,,,,,5.1.0,,,Broker,,,,0,"There is timing issue when the PrefetchSubscription flips from dispatching paged in messages to direct dispatch and back again which can result in messages
being dispatched out of order",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84650,,,Wed Jan 23 20:09:05 UTC 2008,,,,,,,,"0|i14bdb:",233305,,,,,,,,,,,,,,,,,,,"23/Jan/08 20:09;rajdavies;resolved by svn revision 614645",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue Pending Message Cursor doesn't adequately release cache when no space left,AMQ-1562,12482294,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,22/Jan/08 14:26,22/Jan/08 14:29,30/Jan/20 16:57,22/Jan/08 14:29,5.0.0,,,,,,5.1.0,,,Broker,,,,0,The QueueStorePrefetch releases messages from its cache when there is no memory space left - however - whilst sending to a Queue the RegionBroker will block before the QueueStorePrefetch is notified.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84651,,,Tue Jan 22 14:29:10 UTC 2008,,,,,,,,"0|i14b7j:",233279,,,,,,,,,,,,,,,,,,,"22/Jan/08 14:29;rajdavies;Fixed by svn revision 614206",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect value for QueueCount attribute after broker restart,AMQ-1510,12482286,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vdurbha,vdurbha,03/Dec/07 11:49,22/Jan/08 00:04,30/Jan/20 16:57,21/Jan/08 10:31,5.0.0,,,,,,5.1.0,,,Broker,,,,0,"When using a persistent broker with AMQ message store, the QueueCount attribute on those queues which have messages in them has incorrect value after the broker is restarted. Although the messages can be viewed by browsing the queue, the web console as well as the JMX console display a value of zero for the queue once the broker is restarted.

Both consoles should display the count of the number of messages in the queue accurately in the QueueCount attribute after the broker restarts.","Fedora Core 7, Sun JDK 6.0 , i686 platform",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-21 10:31:51.314,,,false,,,,,,,,,,,,,,,,,84674,,,Tue Jan 22 00:04:25 UTC 2008,,,,,,,,"0|i14b7r:",233280,,,,,,,,,,,,,,,,,,,"21/Jan/08 10:31;rajdavies;Fixed by svn revision 613830","22/Jan/08 00:04;tpounds;is this a duplicate of AMQ-1271?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker stops delivering messages to some consumers,AMQ-1333,12482253,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vpesochi,vpesochi,20/Jul/07 18:49,21/Jan/08 13:56,30/Jan/20 16:57,21/Jan/08 13:56,4.1.0,,,,,,5.1.0,,,Broker,,,,0,"This is a clone of AMQ-1251 to put the fix into 4.1.2. I think there is a serious synchronization issue here.

-----------------------------------------------------------------------------------------

I have around 40 consumers taking messages from a single queue. After awhile 1 or 2 consumers stop receiveing any messages. Going to JMX and stopping corresponding connection causes re-connect and messages are delivered again.

I reproduced it twice in QA enviroment and now it happened in production. I tried to instrument the code and set the log in debug, but that changed timing and I failed to reproduce it after the changes.

I suspect that runtime association b/w Queue and Consumer objects is lost on the Broker side.

One of the suspects is the empty catch block in the RoundRobinDispatchPolicy (line 64) class. It is possible that the CopyOnWrite array list is messed up and it fails when removed consumer is added back.

BTW CopyOnWrite list is good when you mostly read, but not so good when you write for every message delivery and empty catch blocks are bad in any case.

if (firstMatchingConsumer != null) {
// Rotate the consumer list.
try { consumers.remove(firstMatchingConsumer); consumers.add(firstMatchingConsumer); } catch (Throwable bestEffort) {
}
}

This issue now occurs on a very slow and busy machine after consumer gets a dozen of messages it stops getting others.",WinXP,sits,yvonnedaher,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84449,,,2007-07-20 18:49:44.0,,,,,,,,"0|i0s1nz:",161746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages received count is wrong in web console,AMQ-1367,12482270,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,anishpathadan,anishpathadan,21/Aug/07 09:33,21/Jan/08 11:11,30/Jan/20 16:57,21/Jan/08 11:11,5.0.0,,,,,,5.1.0,,,,,,,1,"Eventhough the queue has some persistant messages, the messages received count is showing as zero when the web console is taken for the first time.If I browse the queue I can see the messages, thereafter If I take the Queues page again the count is showing correctly.

Steps to repeat the issue:-
1.Create a queue and put some persistant messages into it.
2. restart the active mq
3.take the web console and take the queues page.

The number of messsages received is shown as zero. If you take the queues page after browsing the queue the count is shown correctly.",Windows XP,llem,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-21 11:11:51.704,,,false,,,,,,,,,,,,,,,,,84695,,,Mon Jan 21 11:11:51 UTC 2008,,,,,,,,"0|i0s1hj:",161717,,,,,,,,,,,,,,,,,,,"21/Jan/08 11:11;rajdavies;Fixed by svn revision 613830",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQStore cannot resolve message references for Durable Topic Subscribers,AMQ-1559,12482276,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,21/Jan/08 10:33,21/Jan/08 10:34,30/Jan/20 16:57,21/Jan/08 10:34,5.0.0,,,,,,5.1.0,,,Message Store,,,,0,This happens intermittently,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84653,,,Mon Jan 21 10:34:21 UTC 2008,,,,,,,,"0|i14bsn:",233374,,,,,,,,,,,,,,,,,,,"21/Jan/08 10:34;rajdavies;Fixed by svn revision 613832",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wrapper.conf issue so Java Service Wrapper doesn't start on windows,AMQ-1558,12482272,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,21/Jan/08 10:28,21/Jan/08 10:31,30/Jan/20 16:57,21/Jan/08 10:31,,,,,,,5.1.0,,,Broker,,,,0,See this thread for the patch : http://www.nabble.com/ActiveMQ-5%3A-install-as-windows-service-does-not-work-tp14947392s2354p14988331.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95828,,,Mon Jan 21 10:31:01 UTC 2008,,,,,,,,"0|i0s0rz:",161602,,,,,,,,,,,,,,,,,,,"21/Jan/08 10:29;jstrachan;The linux version uses...

wrapper.app.parameter.1=org.apache.activemq.console.Main
wrapper.app.parameter.2=start
","21/Jan/08 10:31;jstrachan;I think this is now resolved in trunk so it'll go into 5.1.0 - if its not, let us know and we can reopen",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Already delivered (and deleted from persistence store) messages are available through JMX queue operations,AMQ-1296,12482278,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mteira,mteira,26/Jun/07 14:30,21/Jan/08 09:23,30/Jan/20 16:57,21/Jan/08 09:23,5.0.0,,,,,,5.1.0,,,Broker,,,,0,"JMX console allow for browsing messages already delivered and hence, deleted from persistence. I was able to reproduce this in 4.2-SNAPSHOT and 5.0-SNAPSHOT recent snapshots. I'm afraid this could indicate that some leakage is happening.

These operations are, at least:

java.util.List browseMessages()
TabularData browseAsTable()


This does not happen with activemq 4.1.1
","Standalone broker, JDBC persistence (no journal) using Oracle database. Solaris 9 host.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-21 09:23:25.07,,,false,,,,,,,,,,,,,,,,,84699,,,Mon Jan 21 09:23:25 UTC 2008,,,,,,,,"0|i181hz:",255045,,,,,,,,,,,,,,,,,,,"21/Jan/08 09:23;rajdavies;Queue messages are now deleted asap and no longer held in pending list",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Heap overflow when durable consumer closes,AMQ-1083,12482214,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jk@penguinsfan.com,jk@penguinsfan.com,01/Dec/06 03:45,21/Jan/08 09:11,30/Jan/20 16:57,21/Jan/08 09:11,5.0.0,,,,,,5.1.0,,,Message Store,,,,1,"(Not sure if bug is in broker or store, but my best guess is in the store, so that is how I have assigned the bug.  I have attempted to track down in the code where the leak is occurring, but have not yet been successful.)

This is with the Kaha store and the store durable pending cursor.  Messages size is 10 kilobytes.  Heap size set to 512MB.  activemq.xml configured for 100 MB. Using example producer and consumer programs.

1. Start a consumer for a durable topic and stop it immediately. 
2. Start the producer for the durable topic (leave it running for remainder of test). 
3. Wait until 50000 messages have been enqueued. 
4. Restart the consumer from Step #1, have it consume 8000 messages. 
5. Once the consumer has ended (producer still running), heap usage will rise until out of heap (forcing GC does not affect). 

Heap usage was about 80 MB at the time the consumer closed, and rose to > 500 MB within one minute of the consumer closing.",,jurna,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 16:03:21.78,,,false,,,,,,,,,,,,,,,,,84723,,,Mon Jan 21 09:11:15 UTC 2008,,,,,,,,"0|i0s1lr:",161736,,,,,,,,,,,,,,,,,,,"12/Jun/07 16:03;jstrachan;BTW which timestamp of 5.0.0 are you using? we've been doing a resonable amount of development & fixing lately.

Incidentally are your producer/consumers in separate VMs? Just wanna know which JVM is running out of RAM (the broker or consumer etc).","21/Jan/08 09:11;rajdavies;Recommend use AMQStore - as Kaha Store is depreciated ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.transport.InactivityMonitor$1 cannot be cast to edu.emory.mathcs.backport.java.util.concurrent.Delayed,AMQ-1383,12482268,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,ustaudinger,ustaudinger,07/Sep/07 07:27,21/Jan/08 09:05,30/Jan/20 16:57,21/Jan/08 09:05,4.1.1,,,,,,5.1.0,,,Transport,,,,5,"Came back  into office this morning and spotted this, can't tell if my application continued as usual as i have only very little activity in the application. 


Exception in thread ""ActiveMQ Transport: tcp://XXX/YYY:61616"" java.lang.ClassCastException: org.apache.activemq.transport.InactivityMonitor$1 cannot be cast to edu.emory.mathcs.backport.java.util.concurrent.Delayed
      at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo(ScheduledThreadPoolExecutor.java:189)
      at edu.emory.mathcs.backport.java.util.PriorityQueue.remove(PriorityQueue.java:507)
      at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.remove(DelayQueue.java:379)
      at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.remove(ScheduledThreadPoolExecutor.java:707)
      at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.remove(ThreadPoolExecutor.java:1582)
      at org.apache.activemq.thread.Scheduler.cancel(Scheduler.java:55)
      at org.apache.activemq.transport.InactivityMonitor.stopMonitorThreads(InactivityMonitor.java:176)
      at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)
      at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:97)
      at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:150)
      at java.lang.Thread.run(Unknown Source)
","MS Vista, JDK 1.6, ActiveMq 4.1.1",ahempel@atlassian.com,h2o,jmorille,motl,ustaudinger,xavier,xd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-09-25 10:19:17.202,,,false,,,,,,,,,,,,,,,,,84542,,,Thu Nov 01 15:31:49 UTC 2007,,,,,,,,"0|i0s1p3:",161751,,,,,,,,,,,,,,,,,,,"25/Sep/07 10:19;xavier;I have exactly the same issue in the exact same environment (MS Vista, JDK 1.6, ActiveMq 4.1.1). It seems to happen when I kill abruptly a client connected to the broker.","25/Sep/07 11:36;ustaudinger;Actually, after investigating a bit further,  i found out that my client seems to loose connection to the broker,too. (Due to some network problems). 

However, i have added an exception listener to my application, but i don't receive this exception through my exception listener?!","14/Oct/07 00:16;xd;I can reproduce this by stopping the server while clients are still connected","15/Oct/07 12:46;motl;I have pretty the same error with ActiveMQ 4.1.0, JDK 1.5.0, WinXP SP2.

The only difference seems to be in the error msg:

15.10.2007 11:10:15 org.apache.activemq.broker.BrokerService stop
INFO: ActiveMQ Message Broker (localhost, ID:sunrise-1826-1192432151093-1:0) is shutting down
15.10.2007 11:10:16 org.apache.activemq.broker.TransportConnector stop
INFO: Connector tcp://sunrise:61616 Stopped
15.10.2007 11:10:16 org.apache.activemq.broker.TransportConnector stop
INFO: Connector vm://localhost Stopped
15.10.2007 11:10:16 org.apache.activemq.util.ServiceStopper logError
SEVERE: Could not stop service: org.apache.activemq.store.journal.JournalPersistenceAdapter@15fb38. Reason: java.lang.ClassCastException: org.apache.activemq.store.journal.JournalPersistenceAdapter$1
java.lang.ClassCastException: org.apache.activemq.store.journal.JournalPersistenceAdapter$1
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo(ScheduledThreadPoolExecutor.java:189)
        at edu.emory.mathcs.backport.java.util.PriorityQueue.remove(PriorityQueue.java:507)
        at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.remove(DelayQueue.java:379)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.remove(ScheduledThreadPoolExecutor.java:707)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.remove(ThreadPoolExecutor.java:1582)
        at org.apache.activemq.thread.Scheduler.cancel(Scheduler.java:55)
        at org.apache.activemq.store.journal.JournalPersistenceAdapter.stop(JournalPersistenceAdapter.java:238)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:42)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:443)
        at src.EmbeddedBrokerTest.stopBroker(EmbeddedBrokerTest.java:19)
        at src.EmbeddedBrokerTest.main(EmbeddedBrokerTest.java:53)
15.10.2007 11:10:16 org.apache.activemq.broker.BrokerService stop
INFO: ActiveMQ JMS Message Broker (localhost, ID:sunrise-1826-1192432151093-1:0) stopped
error occured: org.apache.activemq.store.journal.JournalPersistenceAdapter$1
","01/Nov/07 15:31;lhotari;I think that the problem is caused by using other than backport-util-concurrent 2.1 on the client (or server).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue structure pagedInMessages can hold upto 1000 messages for a long time,AMQ-1553,12482266,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,18/Jan/08 18:24,18/Jan/08 19:17,30/Jan/20 16:57,18/Jan/08 19:17,5.0.0,,,,,,5.1.0,,,,,,,0,"Queue structure pagedInMessages can hold upto 1000 messages for a long time. This can result in broker memory bloat if the messages are large
Messages from the pagedInMessages list need to be removed asap.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84656,,,Fri Jan 18 19:17:27 UTC 2008,,,,,,,,"0|i14bl3:",233340,,,,,,,,,,,,,,,,,,,"18/Jan/08 19:17;rajdavies;Fixed by svn revision revision 613230",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageAuthorizationPolicy doesn't work,AMQ-775,12482273,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,ning.li,ning.li,23/Jun/06 05:11,17/Jan/08 14:24,30/Jan/20 16:57,17/Jan/08 14:24,4.0,,,,,,5.1.0,,,Broker,,,,0,"Use default config, set a MessageAuthorizationPolicy to BrokerService and start the broker.
There are several issues:
1) In BrokerService::startTransportConnector() method, connector.setMessageAuthorizationPolicy(policy); is in the wrong place, it should be moved to almost the very end of the method, otherwise if you use JMX, the ManageedTransportConnector won't have authorization policy info.
2) ManagedTransportConnector doesn't pass the auth policy to ManagedTransport, I think the easiest way to fix it is in AbstractConnection constructor,
adding this line:
    this.messageAuthorizationPolicy = connector.getMessageAuthorizationPolicy();
and remove this line:
   answer.setMessageAuthorizationPolicy(messageAuthorizationPolicy); 
from TransportConnector::createConnection(), then it will work for both TransportConnection and ManagedTransportConnection
3) AbstrctConnection doesn't pass the auth policy to ConnectionContext, I think this can be fixed by adding this line:
  context.setMessageAuthorizationPolicy(this.getMessageAuthorizationPolicy());
to AbstractConnection::processAddConnection() method.

Now the auth policy can be reached by MessageAuthorizationPolicy::isAllowedToConsume(ConnectionContext context, Message message) method, but the real problem is message value is null, but we need to use it to check right, some of the right information is a property inside the message. 

Please take a look at the problem, thanks
",windows NT 2003 server,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-12-11 15:56:20.0,,,false,,,,,,,,,,,,,,,,,84331,,,Thu Jan 17 14:24:00 UTC 2008,,,,,,,,"0|i14bfb:",233314,,,,,,,,,,,,,,,,,,,"11/Dec/06 15:56;jkurtz;cross reference to: AMQ-591...

https://issues.apache.org/activemq/browse/AMQ-591","17/Jan/08 14:24;jstrachan;I've added the test case MessageAuthenticationTest to show things working correctly. I applied your patches - thanks! Things now seem to work fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect amqPersistanceAdapter example in docs,AMQ-1550,12482138,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,bsnyder,esammer,esammer,16/Jan/08 23:38,17/Jan/08 00:03,30/Jan/20 16:57,17/Jan/08 00:03,,,,,,,,,,Documentation,,,,0,"The documentation for Active Message Store (URL: http://activemq.apache.org/amq-message-store.html ) lists the example:

<broker brokerName=""broker"" persistent=""true"" useShutdownHook=""false"">
    <transportConnectors>
      <transportConnector uri=""tcp://localhost:61616""/>
    </transportConnectors>
    <persistenceAdapter>
      <amqPersistenceAdapter directory=""activemq-data"" maxDataFileLength=""32mb""/>
    </persistenceAdapter>
</broker>

The attribute maxDataFileLength=""32mb"" is an invalid method (broker fails to start up). The attribute reference directly below the example lists the attribute as maxFileLength - probably just a typo in the example.",N/A,esammer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-17 00:03:48.667,,,false,,,,,,,,,,,,,,,,,95825,,,Thu Jan 17 00:03:48 UTC 2008,,,,,,,,"0|i0s1if:",161721,,,,,,,,,,,,,,,,,,,"17/Jan/08 00:03;bsnyder;The website is backed by the Confluence wiki so you can edit the docs yourself. All you need to do is register for a Confluence account. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Username and password field got swapped when calling PooledConnection.createConnection,AMQ-1365,12482042,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,wlam,wlam,17/Aug/07 20:52,04/Jan/08 22:14,30/Jan/20 16:57,23/Aug/07 07:49,4.1.1,,,,,,4.1.2,5.1.0,,JMS client,,,,0,"When using org.apache.activemq.pool.PooledConnection createConnection(username, password), the username and password fields are swapped.

I think the problem could be the following, based in 4.1.1 source code, 

PooledConnection.java line 77

    public synchronized Connection createConnection(String userName, String password) throws JMSException {
        ConnectionKey key = new ConnectionKey(userName, password);

ConnectionKey.java line 30

    public ConnectionKey(String password, String userName) {
        this.password = password;
        this.userName = userName;

",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-08-23 07:49:48.704,,,false,,,,,,,,,,,,,,,,,84550,,,Thu Aug 23 07:49:48 UTC 2007,,,,,,,,"0|i181j3:",255050,,,,,,,,,,,,,,,,,,,"23/Aug/07 07:49;jlim;Thanks! 

Updated the 4.1 branch and trunk to address this issue :

4.1 branch : rev 568868
trunk :  rev 568869",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker Should be started async to avoid a slave broker from blocking the startup of J2EE server (like JBoss),AMQ-1519,12481953,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,14/Dec/07 18:40,04/Jan/08 21:39,30/Jan/20 16:57,04/Jan/08 21:39,5.0.0,,,,,,5.1.0,,,Connector,,,,0,See discussion thread: http://www.nabble.com/jdbcPersistence-behaviour-tp13696937s2354p14298283.html,,sslavic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84671,,,Fri Jan 04 21:39:23 UTC 2008,,,,,,,,"0|i0s2uv:",161939,,,,,,,,,,,,,,,,,,,"04/Jan/08 21:39;chirino;Fixed in version 609016",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix service wrapper problems in linux,AMQ-1532,12482260,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,aco,aco,02/Jan/08 03:30,02/Jan/08 09:59,30/Jan/20 16:57,02/Jan/08 09:59,5.0.0,,,,,,5.1.0,,,Broker,,,,0,The service wrapper for linux does not include a wrapper.conf and a wiki page for usage would be nice.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-02 09:27:13.547,,,false,,,,,,,,,,,,,,,,,84665,,,Wed Jan 02 09:59:07 UTC 2008,,,,,,,,"0|i0s0uv:",161615,,,,,,,,,,,,,,,,,,,"02/Jan/08 09:27;jstrachan;BTW we should have a wiki page describing how to use the Java Service Wrapper with ActiveMQ. I've found this page...

http://activemq.apache.org/unix-service.html

we should also link that to the new Java Service Wrapper page. Also adding links from this page to it would be good too...
http://activemq.apache.org/run-broker.html","02/Jan/08 09:59;aco;Minor changes committed to rev 608064.

Wiki page added here: http://cwiki.apache.org/confluence/display/ACTIVEMQ/Java+Service+Wrapper

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemoryError in ActiveMQ message broker when attempting to publish 2 Million messages - one publisher and four durable subscribes,AMQ-1503,12481973,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,noahz_tt,noahz_tt,26/Nov/07 21:54,02/Jan/08 08:33,30/Jan/20 16:57,02/Jan/08 08:33,4.1.1,,,,,,5.0.0,,,Broker,,,,1,"(reference original posting on Nabble: http://www.nabble.com/forum/ViewPost.jtp?post=12798657)

We have a one topic publisher that is attempting to publish 2 million messages with 4 durable subscribers.  Things go fine until we hit 1.7 million messages - then we get an OutOfMemoryError. 

ActiveMQ is setup to use 5 x 20M log  files, and Derby JDBC persistence.  We use the JVM memory settings -Xmx1024M and <usageManager id=""memory-manager"" limit=""512 MB""/>

At the time of the out of memory, one of the log file is gone crazy and it's size is 415M. The Derby size is big as well.

We are using session client acknowledgment.  and prefetch size of 1 (we need to serialize message consumption).

each message is being acknowledged using javax.jms.Message.acknowledge();

Did not find anything on how to change checkpoint interval for persistence.",,noahz_tt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-02 08:33:13.547,,,false,,,,,,,,,,,,,,,,,84526,,,Wed Jan 02 08:33:13 UTC 2008,,,,,,,,"0|i0s2vb:",161941,,,,,,,,,,,,,,,,,,,"02/Jan/08 08:33;rajdavies;The ability to handle large message numbers was behind the architectural change for ActiveMQ 5.0 - see http://activemq.apache.org/message-cursors.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Acknowledgement of messages across a duplex network does not work correctly,AMQ-1521,12482064,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,16/Dec/07 20:40,16/Dec/07 20:41,30/Jan/20 16:57,16/Dec/07 20:41,5.0.0,,,,,,5.1.0,,,,,,,0,MessageAcks do not get sent across a duplex network for al scenarios,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84670,,,Sun Dec 16 20:41:47 UTC 2007,,,,,,,,"0|i0s193:",161679,,,,,,,,,,,,,,,,,,,"16/Dec/07 20:41;rajdavies;Fixed by svn 604700",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkConnector is leaking a thread if broker disconnects,AMQ-1518,12482080,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,14/Dec/07 16:22,16/Dec/07 20:15,30/Jan/20 16:57,16/Dec/07 20:15,5.0.0,,,,,,5.1.0,,,Broker,,,,0,"Consider the following scenario: Two brokers A and B. Broker B sets up a NetworkConnector to Broker A using a static URL list and setting duplex =""true"" (see attached configuration). At runtime Broker B will correctly connect to Broker A. jconsole shows a NetworkBridge being set up.
For every network bridge that gets set up, three threads get started in Broker A, e.g:
VMTransport: vm://localhost#5
ActiveMQ Transport: tcp://host:4533
ActiveMQ Connection Dispatcher: /host:4533

Now, when Broker B disconnects, the network bridge will be closed down and the above threads need to cleaned up. The first two threads do get closed correctly, however the Connection Dispatcher thread stays alive and does not get closed. We are leaking this thread!","use MessageBroker 5.0.0.5, Windows, using NetworkConnector with duplex set to true",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84672,,,Sun Dec 16 20:15:48 UTC 2007,,,,,,,,"0|i14bcv:",233303,,,,,,,,,,,,,,,,,,,"16/Dec/07 20:15;rajdavies;Fixed by revision 604689",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Shared Filesystem Master Slave not working,AMQ-1507,12481821,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,kwark,kwark,29/Nov/07 15:14,13/Dec/07 09:19,30/Jan/20 16:57,12/Dec/07 23:10,5.0.0,,,,,,5.1.0,,,Broker,,,,0,"I'm testing out Shared Filesystem Master Slave on a 5.0 snapshot (5.0-20071120.092745-1).
However it does not seem to be working.

I start two brokers with different ports but same shared data directory on a Windows host.
First broker starts up nicely, second broker does not sit in a loop, trying to grab the lock every 10 seconds , but stops right away with the following trace:

29-nov-2007 10:33:21 org.apache.activemq.broker.BrokerService getBroker
INFO: For help or more information please see: http://activemq.apache.org/
29-nov-2007 10:33:21 org.apache.activemq.store.amq.AMQPersistenceAdapter start
INFO: AMQStore starting using directory: activemq-data\EDA
java.io.IOException: Control file 'activemq-data\EDA\journal\data-control' could not be locked.
        at org.apache.activemq.kaha.impl.async.ControlFile.lock(ControlFile.java:77)
        at org.apache.activemq.kaha.impl.async.AsyncDataManager.start(AsyncDataManager.java:116)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.start(AMQPersistenceAdapter.java:172)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1448)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1400)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:513)
        at org.apache.activemq.broker.BrokerService.addConnector(BrokerService.java:187)
        at org.apache.activemq.broker.BrokerService.addConnector(BrokerService.java:177)
        at be.amaris.eda.EDAManager.startBroker(EDAManager.java:38)
        at be.amaris.eda.EDAManager.main(EDAManager.java:17)
","Windows XP
ActiveMQ SNAPSHOT 5.0-20071120.092745-1",kwark,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/07 15:48;kwark;activemq.xml;https://issues.apache.org/jira/secure/attachment/12460912/activemq.xml",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-12-12 23:10:39.364,,,false,,,,,,,,,,,,,,,,,84675,,,Thu Dec 13 09:19:59 UTC 2007,,,,,,,,"0|i0s2qf:",161919,Regression,,,,,,,,,,,,,,,,,,"29/Nov/07 15:48;kwark;This is the almost the default activemq.xml file, with only openwire transportconnector
You need to start another activemq instance with the openwire transportconnector port set to f.e. 61617","12/Dec/07 23:10;rajdavies;Fixed by svn revision 603762 and 603772","13/Dec/07 09:19;rajdavies;And revision 603863",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persitent Topic Messages will not be deletet if more then one durable subscriber is active on topic,AMQ-1501,12482201,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,marcobuss,marcobuss,26/Nov/07 11:25,03/Dec/07 15:15,30/Jan/20 16:57,03/Dec/07 15:15,5.0.0,,,,,,5.0.0,,,Message Store,,,,0,"If more then one Subsriber is listen to the topic the messages will neverbe deleted.
The Problem is in the KahaTopicReferenceStore. At acknoledge the count for the TopicSubAck is decremented, but the new State is not saved. So the count is never reached 0 and so the message will never be deleted.","windows vista, java 1.5.0_14-b03",,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Nov/07 11:25;marcobuss;ASF.LICENSE.NOT.GRANTED--patch.txt;https://issues.apache.org/jira/secure/attachment/12460918/ASF.LICENSE.NOT.GRANTED--patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84677,,,2007-11-26 11:25:59.0,,,,Patch Available,,,,"0|i0tt0n:",172010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exceptions are dropped by TransactionTemplate,AMQ-1354,12482271,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vpesochi,vpesochi,31/Jul/07 21:38,28/Nov/07 21:11,30/Jan/20 16:57,28/Nov/07 21:11,4.0.1,4.0.2,4.1.0,4.1.1,,,5.0.0,,,Broker,,,,0,"The cause of the following exception is unknown because original exception is lost after another exception is thrown from the finally statement in TransactionTemplate.run(), when persistenceAdapter.rollbackTransaction(context) is invoked.

SEVERE: Failed to checkpoint a message store: edu.emory.mathcs.backport.java.util.concurrent.ExecutionException: java.io.IOException: Not started.edu.emory.mathcs.backport.java.util.concurrent.ExecutionException: java.io.IOException: Not started.
 at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.getResult(FutureTask.java:299)
 at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.get(FutureTask.java:118)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:386)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter$2.iterate(JournalPersistenceAdapter.java:129)
 at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:88)
 at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:25)
 at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:39)
Caused by: java.io.IOException: Not started.
 at org.apache.activemq.store.jdbc.TransactionContext.rollback(TransactionContext.java:168)
 at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.rollbackTransaction(JDBCPersistenceAdapter.java:368)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter.rollbackTransaction(JournalPersistenceAdapter.java:197)
 at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:62)
 at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:247)
 at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:221)
 at org.apache.activemq.store.journal.JournalPersistenceAdapter$4.call(JournalPersistenceAdapter.java:356)
 at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.run(FutureTask.java:176)
 at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
 at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
 at java.lang.Thread.run(Thread.java:595)org.apache.activemq.store.journal.JournalPersistenceAdapter doCheckpoint
",Any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-11-28 21:11:19.15,,,false,,,,,,,,,,,,,,,,,84361,,,Wed Nov 28 21:11:19 UTC 2007,,,,,,,,"0|i181kn:",255057,,,,,,,,,,,,,,,,,,,"28/Nov/07 21:11;rajdavies;seems fixed - please re-open if not the case",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiskIndexLinkedList incorrectly updates references when IndexItems are removed,AMQ-1502,12482222,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,26/Nov/07 15:56,26/Nov/07 16:15,30/Jan/20 16:57,26/Nov/07 16:15,4.1.2,5.0.0,,,,,5.0.0,,,,,,,0,http://www.nabble.com/Bug-in-DiskIndexLinkedList.java-tf4873351s2354.html#a13944775,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84592,,,Mon Nov 26 16:15:46 UTC 2007,,,,,,,,"0|i0s0o7:",161585,,,,,,,,,,,,,,,,,,,"26/Nov/07 16:15;rajdavies;Fixed by SVN revision 598330",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bug in TcpTransport.run() and stop() holds dead connections and prevents reconnects,AMQ-1491,12482102,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vgeshel,vgeshel,14/Nov/07 02:31,23/Nov/07 07:51,30/Jan/20 16:57,23/Nov/07 07:51,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"TcpTransport.stop() await()s on a countDownLatch that is counted down in TcpTransport.run(). When stop() is called in in the dynamic scope of run(), the countDown() will never happen. Example stack:

""ActiveMQ Transport: tcp://localhost/127.0.0.1:62002"" prio=10 tid=0x0be46c00 nid=0x2dbc waiting on condition [0x0125c000..0x0125ce50]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x7f352dd0> (a java.util.concurrent.CountDownLatch$Sync)        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:712)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:870)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1182)
        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207)
        at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:440)
        at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:66)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
        at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:78)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)        at org.apache.activemq.network.DemandForwardingBridgeSupport.stop(DemandForwardingBridgeSupport.java:340)        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:40)
        at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceRemove(DiscoveryNetworkConnector.java:132)
        at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent.serviceFailed(SimpleDiscoveryAgent.java:104)
        at org.apache.activemq.network.DiscoveryNetworkConnector$1.bridgeFailed(DiscoveryNetworkConnector.java:179)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.fireBridgeFailed(DemandForwardingBridgeSupport.java:909)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteException(DemandForwardingBridgeSupport.java:371)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:395)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:149)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:126)
        - locked <0x7f3530b0> (a org.apache.activemq.transport.InactivityMonitor$1)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:183)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:170)
        at java.lang.Thread.run(Thread.java:619)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-11-23 07:51:28.022,,,false,,,,,,,,,,,,,,,,,84681,,,Fri Nov 23 07:51:28 UTC 2007,,,,,,,,"0|i181sn:",255093,,,,,,,,,,,,,,,,,,,"23/Nov/07 07:51;rajdavies;Fixed by svn revision 597582",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recoverying the Kaha ReferenceStore can delete subscriber state,AMQ-1500,12482111,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,23/Nov/07 07:35,23/Nov/07 07:41,30/Jan/20 16:57,23/Nov/07 07:41,5.0.0,,,,,,5.0.0,,,,,,,0,Whe a broker isn't shutdown cleanly - upon a re-start the broker will recover its store from its journal. Part of the process involves recoverying durable topic subscribers from the reference store. Currently - these are being deleted when the reference store is purged as part of the recovery process,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84678,,,Fri Nov 23 07:41:19 UTC 2007,,,,,,,,"0|i181v3:",255104,,,,,,,,,,,,,,,,,,,"23/Nov/07 07:41;rajdavies;Fixed by svn revision 597581",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fast producer, slow consumer hangs after a few messages when using VMPendingSubscriberMessageStoragePolicy",AMQ-1148,12482106,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,fullung,fullung,02/Feb/07 11:48,22/Nov/07 07:05,30/Jan/20 16:57,22/Nov/07 07:02,5.0.0,,,,,,5.0.0,,,Broker,,,,1,"Following from this discussion:

http://www.nabble.com/Fast-producer%2C-slow-consumer-with-spooling-to-disk--tf3123868.html

Rob Davies implemented VMPendingSubscriberMessageStoragePolicy which, if I understand correctly, should cause a fast producer to block if a slow consumer can't keep up.

However, when running the attached test case, the system seems to hang before the consumers have received much more than 5 messages. When it hangs probably depends on the heap size.

I get this:

2007-02-02 13:44:23,281 [main           ] INFO  BrokerService                  - ActiveMQ null JMS Message Broker (localhost) is starting
2007-02-02 13:44:23,281 [main           ] INFO  BrokerService                  - For help or more information please see: http://incubator.apache.org/activemq/
2007-02-02 13:44:25,312 [main           ] INFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby_embedded_jdbc_driver]
2007-02-02 13:44:26,500 [main           ] INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
2007-02-02 13:44:26,531 [main           ] INFO  DefaultDatabaseLocker          - Becoming the master on dataSource: org.apache.derby.jdbc.EmbeddedDataSource@1372656
2007-02-02 13:44:26,593 [main           ] INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 2 x 20.0 Megs at: C:\home\albert\work5\activemq\activemq-core\activemq-data\localhost\journal
2007-02-02 13:44:26,671 [main           ] INFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in transactions recovered.
2007-02-02 13:44:26,859 [main           ] INFO  BrokerService                  - Using Persistence Adapter: JournalPersistenceAdapator(JDBCPersistenceAdaptor(org.apache.derby.jdbc.EmbeddedDataSource@1372656))
2007-02-02 13:44:26,906 [main           ] INFO  JournalPersistenceAdapter      - Journal deleted: 
2007-02-02 13:44:29,296 [main           ] WARN  DefaultJDBCAdapter             - Could not create JDBC tables; they could already exist. Failure was: CREATE TABLE ACTIVEMQ_LOCK( ID BIGINT NOT NULL, TIME BIGINT, BROKER_NAME VARCHAR(250), PRIMARY KEY (ID) ) Message: Table/View 'ACTIVEMQ_LOCK' already exists in Schema 'APP'. SQLState: X0Y32 Vendor code: 30000
2007-02-02 13:44:29,343 [main           ] WARN  DefaultJDBCAdapter             - Could not create JDBC tables; they could already exist. Failure was: INSERT INTO ACTIVEMQ_LOCK(ID) VALUES (1) Message: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by 'SQL070130113001540' defined on 'ACTIVEMQ_LOCK'. SQLState: 23505 Vendor code: 30000
2007-02-02 13:44:29,484 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: tcp://ratbert:60706
2007-02-02 13:44:29,515 [main           ] INFO  TransportConnector             - Connector tcp://ratbert:60706 Started
2007-02-02 13:44:29,515 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:ratbert-2177-1170416663296-1:0) started
2007-02-02 13:44:29,578 [JMX connector  ] INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
2007-02-02 13:44:29,625 [/127.0.0.1:2181] INFO  KahaStore                      - Kaha Store successfully deleted data directory activemq-data\localhost\tmp_storage
GOT A MESSAGE BEING SLOW
GOT A MESSAGE BEING SLOW
GOT A MESSAGE BEING SLOW
GOT A MESSAGE BEING SLOW
GOT A MESSAGE BEING SLOW
GOT A MESSAGE BEING SLOW
GOT A MESSAGE BEING SLOW
GOT A MESSAGE BEING SLOW
GOT A MESSAGE BEING SLOW

before it hangs.",Sun JDK 1.6.0 on Windows XP SP2 with VM arguments -Xms384m -Xmx512m,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Feb/07 11:48;fullung;ASF.LICENSE.NOT.GRANTED--SlowConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12460604/ASF.LICENSE.NOT.GRANTED--SlowConsumerTest.java","02/Mar/07 01:12;fullung;SlowConsumerTest.java;https://issues.apache.org/jira/secure/attachment/12460836/SlowConsumerTest.java",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-03-01 22:32:23.773,,,false,,,,,,,,,,,,,,,,,84716,,,Thu Nov 22 07:05:25 UTC 2007,,,,,,,,"0|i0s1h3:",161715,,,,,,,,,,,,,,,,,,,"02/Feb/07 13:26;fullung;It seems the ActiveMQ transport thread is getting stuck on UsageManager.waitForSpace:

Name: ActiveMQ Transport: tcp:///127.0.0.1:2694
State: WAITING on java.lang.Object@c98b07
Total blocked: 3  Total waited: 3

Stack trace: 
java.lang.Object.wait(Native Method)
java.lang.Object.wait(Object.java:485)
org.apache.activemq.memory.UsageManager.waitForSpace(UsageManager.java:91)
org.apache.activemq.memory.UsageManager.waitForSpace(UsageManager.java:88)
org.apache.activemq.broker.region.Topic.send(Topic.java:248)
org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:305)
org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:381)
org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:197)
org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:98)
org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:449)
org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:604)
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:258)
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:164)
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
java.lang.Thread.run(Thread.java:619)

Meanwhile, all the ActiveMQ Session tasks are blocked:

Name: ActiveMQ Session Task
State: BLOCKED on java.lang.Object@94cbe2 owned by: Thread-3
Total blocked: 4  Total waited: 10

Stack trace: 
org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:43)
org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1165)
org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1648)
org.apache.activemq.ActiveMQMessageConsumer.afterMessageIsConsumed(ActiveMQMessageConsumer.java:700)
org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:871)
   - locked java.lang.Object@8978c7
org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:99)
org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:166)
org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:111)
org.apache.activemq.thread.PooledTaskRunner.access$1(PooledTaskRunner.java:95)
org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44)
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
java.lang.Thread.run(Thread.java:619)

Thread-3 seems to blocking on a write to the socket:

Name: Thread-3
State: RUNNABLE
Total blocked: 327  Total waited: 0

Stack trace: 
java.net.SocketOutputStream.socketWrite0(Native Method)
java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
java.net.SocketOutputStream.write(SocketOutputStream.java:136)
org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:109)
java.io.DataOutputStream.flush(DataOutputStream.java:106)
org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:119)
org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:80)
org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:93)
org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
   - locked java.lang.Object@94cbe2
org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1165)
org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1546)
   - locked java.lang.Object@d4f13a
org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:473)
org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:358)
org.apache.activemq.broker.region.cursors.SlowConsumerTest$1.run(SlowConsumerTest.java:87)
java.lang.Thread.run(Thread.java:619)","20/Feb/07 08:33;fullung;Still having exactly the same problem as described in the original description. Tested with revision 509457.","01/Mar/07 22:32;rajdavies;Using a seperate connection for producer(s) and consumer(s) alleviates this - the consumer is blocked trying to acknowledge on the same connection the publisher is blocked awaiting space. As the test case is using non-persistent messages, the socket buffer fills, rather than the connection blocking awaiting a response from the broker.","02/Mar/07 00:40;fullung;Just to make sure I understand correctly: to avoid this problem, we should have connections that only deal with producers and connections that only deal with consumers. However, having a bunch of consumers (or producers, but only one of the two) on a connection should work?","02/Mar/07 01:11;fullung;Patching this workaround into an existing application is tricky. After reading the JMS spec, we assumed that we could pass Sessions around, allowing each component to create the consumers and producers it needs. Now I guess we'll have to send around ConnectionFactories. And if we forget to do this anywhere, we still get ""deadlocks"" that are very hard to debug.

Do you anticipate that this issue could be fixed in a way that won't require a proliferation of extra connections?","02/Mar/07 01:12;fullung;Slow consumer test with multiple connections. Seems to work.","12/Jun/07 11:06;fullung;Just tested this again with the latest trunk. It seems to hang after 9 messages. Might be related to AMQ-1136.","22/Nov/07 07:02;rajdavies;Just test this again - and it does hang. However - the default prefetch size is about 32k for a topic - and given the size of the messages is 2k results in 65mb of messages being passed to the consumer before the broker will wait to dispatch more.  This results in out of memory errors and causes the InactivityMonitor in the consumer thread to barf, and the transport thinks its lost connection to the broker. The fix is to set the pretech limit lower for topics  and then it works -e.g.

        ActiveMQConnectionFactory cf=new ActiveMQConnectionFactory(bindAddress);
        Properties props=new Properties();
        props.setProperty(""prefetchPolicy.topicPrefetch"",""""+100);
        cf.setProperties(props);
","22/Nov/07 07:05;rajdavies;What I will do is add a policy to the broker to set the maximum memory size for messages outstanding for a consumer which can be used in conjunction with the pretetch size.
Ideally this should be configurable on a consumer basis - but that would require a change to the wire format - which I don't want to do.",,,,,,,,,,,,,,,,,,,,,,,,,,
Sporatic ArrayOutOfBoundsException with Kaha persistence (in org.apache.activemq.kaha.impl.index.hash.HashPage.addHashEntry),AMQ-1246,12482117,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,cwbrandon,cwbrandon,14/May/07 15:16,02/Nov/07 20:10,30/Jan/20 16:57,02/Nov/07 07:25,5.0.0,,,,,,5.0.0,,,,,,,1,"This error just started occurring after restarting activemq after its memory got fairly high (we've been running our app with this same ActiveMQ 4.2 build for several months without ever seeing this).  It's happening on a persistent topic and doesn't happen after each message is added to the topic but happens every 20 - 30 messages (the occurrence isn't very consistent).

java.lang.IndexOutOfBoundsException: Index: 25, Size: 22
        at java.util.ArrayList.add(ArrayList.java:368)
        at org.apache.activemq.kaha.impl.index.hash.HashPage.addHashEntry(HashPage.java:197)
        at org.apache.activemq.kaha.impl.index.hash.HashPageInfo.addHashEntry(HashPageInfo.java:65)
        at org.apache.activemq.kaha.impl.index.hash.HashBin.addHashEntry(HashBin.java:181)
        at org.apache.activemq.kaha.impl.index.hash.HashBin.put(HashBin.java:144)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.store(HashIndex.java:230)
        at org.apache.activemq.kaha.impl.container.MapContainerImpl.place(MapContainerImpl.java:389)
        at org.apache.activemq.store.kahadaptor.KahaTopicMessageStore.addMessage(KahaTopicMessageStore.java:62)
        at org.apache.activemq.store.kahadaptor.KahaTransactionStore.addMessage(KahaTransactionStore.java:133)
        at org.apache.activemq.store.kahadaptor.KahaTransactionStore$2.addMessage(KahaTransactionStore.java:68)
        at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:349)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:341)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:306)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:407)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:203)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:127)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:137)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:474)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:618)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:282)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:121)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)",4.2-SNAPSHOT (build from 3/26/2007),cwbrandon,rajdavies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-07-30 07:16:27.849,,,false,,,,,,,,,,,,,,,,,42097,,,Fri Nov 02 20:10:33 UTC 2007,,,,,,,,"0|i0s1hz:",161719,,,,,,,,,,,,,,,,,,,"08/Jun/07 22:59;cwbrandon;I'm now consistently seeing this issue (in a build of 4.2-SNAPSHOT as of yesterday 6/7/2007 as well).    When I get around 200k messages into the topic (the consumer can't pull them off as fast as they are published) I start getting these errors consistently when I try to send any more messages.  The error even occurs after the consumer pulls all messages from the topic and there are no more messages waiting.   The only way to get rid of it (from what I can tell), is to delete the data in the $ACTIVEMQ_HOME/data directory and restart activemq.

java.lang.IndexOutOfBoundsException: Index: 169, Size: 168
        at java.util.ArrayList.add(ArrayList.java:368)
        at org.apache.activemq.kaha.impl.index.hash.HashPage.addHashEntry(HashPage.java:197)
        at org.apache.activemq.kaha.impl.index.hash.HashPageInfo.addHashEntry(HashPageInfo.java:65)
        at org.apache.activemq.kaha.impl.index.hash.HashBin.addHashEntry(HashBin.java:181)
        at org.apache.activemq.kaha.impl.index.hash.HashBin.put(HashBin.java:144)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.store(HashIndex.java:230)
        at org.apache.activemq.kaha.impl.container.MapContainerImpl.place(MapContainerImpl.java:389)
        at org.apache.activemq.store.kahadaptor.KahaTopicMessageStore.addMessage(KahaTopicMessageStore.java:62)
        at org.apache.activemq.store.kahadaptor.KahaTransactionStore.addMessage(KahaTransactionStore.java:133)
        at org.apache.activemq.store.kahadaptor.KahaTransactionStore$2.addMessage(KahaTransactionStore.java:68)
        at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:349)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:341)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:306)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:407)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:203)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:127)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:137)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:474)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:618)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:282)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:121)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)
2007-06-08 18:26:19,363 ERROR [STDERR] Exception in thread ""pool-3-thread-1""
2007-06-08 18:26:19,363 ERROR [STDERR] javax.ejb.EJBException: java.lang.IndexOutOfBoundsException: Index: 169, Size: 168","30/Jul/07 07:16;rajdavies;This should now be fixed - there was an issue with hashcode resolution","27/Aug/07 11:19;sachin_mittal;Re-opening this issue.

We still face the same issue and steps of reproductions are more or less same as described by the original filer.

We are using activemq-5.0 snapshot dated 5th august 2007
Here is the latest stack trace:

Caused by: java.lang.IndexOutOfBoundsException: Index: 163, Size: 162
	at java.util.ArrayList.add(Unknown Source)
	at org.apache.activemq.kaha.impl.index.hash.HashPage.addHashEntry(HashPage.java:191)
	at org.apache.activemq.kaha.impl.index.hash.HashPageInfo.addHashEntry(HashPageInfo.java:65)
	at org.apache.activemq.kaha.impl.index.hash.HashBin.addHashEntry(HashBin.java:192)
	at org.apache.activemq.kaha.impl.index.hash.HashBin.put(HashBin.java:151)
	at org.apache.activemq.kaha.impl.index.hash.HashIndex.store(HashIndex.java:230)
	at org.apache.activemq.kaha.impl.container.MapContainerImpl.put(MapContainerImpl.java:292)
	at org.apache.activemq.store.kahadaptor.KahaMessageStore.addMessage(KahaMessageStore.java:55)
	at org.apache.activemq.store.kahadaptor.KahaTransactionStore.addMessage(KahaTransactionStore.java:133)
	at org.apache.activemq.store.kahadaptor.KahaTransactionStore$1.addMessage(KahaTransactionStore.java:56)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:447)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:436)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:305)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:412)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:220)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:454)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:617)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:302)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:206)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:126)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:85)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:154)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:140)

Thanks
Sachin

","30/Aug/07 12:19;rajdavies;ok - could you add a test case ?","01/Nov/07 22:43;rajdavies;Potentional fix by SVN revision 591160","02/Nov/07 07:25;rajdavies;Fixed by  SVN revision 591160","02/Nov/07 20:10;rajdavies;Further enhancement by SVN revision 591442 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable Subscriptions do not work with Wildcards after broker is restarted.,AMQ-1356,12482075,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,03/Aug/07 17:04,23/Oct/07 14:13,30/Jan/20 16:57,23/Oct/07 14:13,4.0,,,,,,5.0.0,,,Broker,,,,0,"When the broker is restarted, due to the way subscriptions are stored in the database, the broker does not know that the durable subscription was a wild card.  It just knows what topics were associated via the wild card.  New messages sent to new destinations that would have matched the wild card would will not get associated with the durable subscription.

We need to store the original wild card pattern in the persistence store to solve this problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,51130,,,Tue Oct 23 14:13:47 UTC 2007,,,,,,,,"0|i181kf:",255056,,,,,,,,,,,,,,,,,,,"23/Oct/07 14:13;chirino;Implemented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential infinite loop in ActiveMQ shutdown processing when in Geronimo,AMQ-652,12482262,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,22/Mar/06 03:24,23/Oct/07 13:45,30/Jan/20 16:57,23/Oct/07 13:45,4.0,,,,,,5.0.0,,,Connector,,,,0,"Need to check to see if this is still valid against 4.x
see:
http://issues.apache.org/jira/browse/GERONIMO-1494

",Geronimo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49281,,,Tue Oct 23 13:45:30 UTC 2007,,,,,,,,"0|i0s0vb:",161617,Regression,,,,,,,,,,,,,,,,,,"03/May/06 23:10;chirino;ActiveMQ 4 has been integrated in the Geronimo 1.2 branch but that branch is still not under heavy delveopment and use yet as folks are focused on 1.1.  We should have a 4.1 our by the time G 1.2 is out and we can verify all is well at that time.","23/Oct/07 13:40;chirino;Stack trace from the GERONIMO-1494  issue:
{code}
17:30:34,325 WARN [TransportChannelSupport] Caught exception dispatching message and no ExceptionListener registered: javax.jms.JMSException: asyncSend failed: java.io.EOFException: Cannot write to the stream any more it has already been closed 
javax.jms.JMSException: asyncSend failed: java.io.EOFException: Cannot write to the stream any more it has already been closed 
at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49) 
at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:483) 
at org.activemq.transport.TransportChannelSupport.asyncSendWithReceipt(TransportChannelSupport.java:160) 
at org.activemq.transport.TransportChannelSupport.send(TransportChannelSupport.java:145) 
at org.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1377) 
at org.activemq.ActiveMQConnection.sendConnectionInfoToBroker(ActiveMQConnection.java:1617) 
at org.activemq.ActiveMQConnection.close(ActiveMQConnection.java:762) 
at org.activemq.ra.ActiveMQBaseEndpointWorker.safeClose(ActiveMQBaseEndpointWorker.java:78) 
at org.activemq.ra.ActiveMQAsfEndpointWorker.disconnect(ActiveMQAsfEndpointWorker.java:164) 
at org.activemq.ra.ActiveMQAsfEndpointWorker.reconnect(ActiveMQAsfEndpointWorker.java:176) 
at org.activemq.ra.ActiveMQAsfEndpointWorker.access$200(ActiveMQAsfEndpointWorker.java:40) 
at org.activemq.ra.ActiveMQAsfEndpointWorker$1$1.onException(ActiveMQAsfEndpointWorker.java:83) 
at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445) 
at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:484) 
at org.activemq.transport.TransportChannelSupport.asyncSendWithReceipt(TransportChannelSupport.java:160) 
at org.activemq.transport.TransportChannelSupport.send(TransportChannelSupport.java:145) 
at org.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1377) 
at org.activemq.ActiveMQConnection.sendConnectionInfoToBroker(ActiveMQConnection.java:1617) 
at org.activemq.ActiveMQConnection.close(ActiveMQConnection.java:762) 
at org.activemq.ra.ActiveMQBaseEndpointWorker.safeClose(ActiveMQBaseEndpointWorker.java:78) 
at org.activemq.ra.ActiveMQAsfEndpointWorker.disconnect(ActiveMQAsfEndpointWorker.java:164) 
at org.activemq.ra.ActiveMQAsfEndpointWorker.reconnect(ActiveMQAsfEndpointWorker.java:176) 
at org.activemq.ra.ActiveMQAsfEndpointWorker.access$200(ActiveMQAsfEndpointWorker.java:40) 
at org.activemq.ra.ActiveMQAsfEndpointWorker$1$1.onException(ActiveMQAsfEndpointWorker.java:83) 
at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445) 
at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:484) 
at org.activemq.transport.TransportChannelSupport.asyncSendWithReceipt(TransportChannelSupport.java:160) 
at org.activemq.transport.TransportChannelSupport.send(TransportChannelSupport.java:145) 
at org.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1377) 
at org.activemq.ActiveMQConnection.sendConnectionInfoToBroker(ActiveMQConnection.java:1617) 
at org.activemq.ActiveMQConnection.close(ActiveMQConnection.java:762) 
        ... (you get the picture) 
at org.activemq.ActiveMQConnection.close(ActiveMQConnection.java:762) 
at org.activemq.ra.ActiveMQBaseEndpointWorker.safeClose(ActiveMQBaseEndpointWorker.java:78) 
at org.activemq.ra.ActiveMQAsfEndpointWorker.disconnect(ActiveMQAsfEndpointWorker.java:164) 
at org.activemq.ra.ActiveMQAsfEndpointWorker.stop(ActiveMQAsfEndpointWorker.java:139) 
at org.activemq.ra.ActiveMQResourceAdapter.endpointDeactivation(ActiveMQResourceAdapter.java:261) 
at org.apache.geronimo.connector.ResourceAdapterWrapper.endpointDeactivation(ResourceAdapterWrapper.java:92) 
at org.apache.geronimo.connector.ResourceAdapterWrapper$$FastClassByCGLIB$$4ab28e73.invoke(<generated>) 
at net.sf.cglib.reflect.FastMethod.invoke(FastMethod.java:53) 
at org.apache.geronimo.gbean.runtime.FastMethodInvoker.invoke(FastMethodInvoker.java:38) 
at org.apache.geronimo.gbean.runtime.GBeanOperation.invoke(GBeanOperation.java:118) 
at org.apache.geronimo.gbean.runtime.GBeanInstance.invoke(GBeanInstance.java:800) 
at org.apache.geronimo.gbean.runtime.RawInvoker.invoke(RawInvoker.java:57) 
at org.apache.geronimo.kernel.basic.RawOperationInvoker.invoke(RawOperationInvoker.java:36) 
at org.apache.geronimo.kernel.basic.ProxyMethodInterceptor.intercept(ProxyMethodInterceptor.java:96) 
at org.apache.geronimo.connector.ResourceAdapterWrapper$$EnhancerByCGLIB$$74512a94.endpointDeactivation(<generated>) 
at org.apache.geronimo.connector.ActivationSpecWrapper.deactivate(ActivationSpecWrapper.java:109) 
at org.apache.geronimo.connector.ActivationSpecWrapper$$FastClassByCGLIB$$aaa078c1.invoke(<generated>) 
at net.sf.cglib.reflect.FastMethod.invoke(FastMethod.java:53) 
at org.apache.geronimo.gbean.runtime.FastMethodInvoker.invoke(FastMethodInvoker.java:38) 
at org.apache.geronimo.gbean.runtime.GBeanOperation.invoke(GBeanOperation.java:118) 
at org.apache.geronimo.gbean.runtime.GBeanInstance.invoke(GBeanInstance.java:800) 
at org.apache.geronimo.gbean.runtime.RawInvoker.invoke(RawInvoker.java:57) 
at org.apache.geronimo.kernel.basic.RawOperationInvoker.invoke(RawOperationInvoker.java:36) 
at org.apache.geronimo.kernel.basic.ProxyMethodInterceptor.intercept(ProxyMethodInterceptor.java:96) 
at org.apache.geronimo.connector.ActivationSpecWrapper$$EnhancerByCGLIB$$7598abd2.deactivate(<generated>) 
at org.openejb.mdb.MDBContainer.doStop(MDBContainer.java:223) 
at org.apache.geronimo.gbean.runtime.GBeanInstance.destroyInstance(GBeanInstance.java:1079) 
at org.apache.geronimo.gbean.runtime.GBeanInstanceState.attemptFullStop(GBeanInstanceState.java:395) 
at org.apache.geronimo.gbean.runtime.GBeanInstanceState.stop(GBeanInstanceState.java:200) 
at org.apache.geronimo.gbean.runtime.GBeanInstance.stop(GBeanInstance.java:545) 
at org.apache.geronimo.kernel.basic.BasicKernel.stopGBean(BasicKernel.java:213) 
at org.apache.geronimo.gbean.runtime.GBeanInstanceState.stop(GBeanInstanceState.java:192) 
at org.apache.geronimo.gbean.runtime.GBeanInstance.stop(GBeanInstance.java:545) 
at org.apache.geronimo.kernel.basic.BasicKernel.stopGBean(BasicKernel.java:213) 
at org.apache.geronimo.gbean.runtime.GBeanInstanceState.stop(GBeanInstanceState.java:192) 
at org.apache.geronimo.gbean.runtime.GBeanInstance.stop(GBeanInstance.java:545) 
at org.apache.geronimo.kernel.basic.BasicKernel.stopGBean(BasicKernel.java:213) 
at org.apache.geronimo.gbean.runtime.GBeanInstanceState.stop(GBeanInstanceState.java:192) 
at org.apache.geronimo.gbean.runtime.GBeanInstance.stop(GBeanInstance.java:545) 
at org.apache.geronimo.kernel.basic.BasicKernel.stopGBean(BasicKernel.java:213) 
at org.apache.geronimo.kernel.config.ConfigurationManagerImpl$ShutdownHook.run(ConfigurationManagerImpl.java:287) 
at org.apache.geronimo.kernel.basic.BasicKernel.notifyShutdownHooks(BasicKernel.java:406) 
at org.apache.geronimo.kernel.basic.BasicKernel.shutdown(BasicKernel.java:383) 
at org.apache.geronimo.system.main.Daemon$1.run(Daemon.java:272) 
Caused by: java.io.EOFException: Cannot write to the stream any more it has already been closed 
at org.activemq.transport.tcp.TcpBufferedOutputStream.checkClosed(TcpBufferedOutputStream.java:132) 
at org.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:70) 
at java.io.DataOutputStream.writeByte(DataOutputStream.java:131) 
at org.activemq.io.impl.DefaultWireFormat.writePacket(DefaultWireFormat.java:112) 
at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:474) 
... 864 more 
{code}","23/Oct/07 13:45;chirino;Just checked 5.0 and this cannot happen since we guard against recursion in the ActiveMQConnection.close() method.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in Scheduler,AMQ-1205,12482234,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,paulrene,paulrene,15/Mar/07 09:01,22/Oct/07 20:42,30/Jan/20 16:57,22/Oct/07 20:42,4.1.0,,,,,,4.1.2,5.0.0,,,,,,0,"After about 24-36 hours of running I get a OutOfMemoryException. Heap is set to 512m.

Please find attached heapdump, threaddump and trace file in IBM format. I've also included a screenshot of the heap analysis pointing out the leaking objects.",Linux running *IBM JDK 5.0*,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/07 09:01;paulrene;ASF.LICENSE.NOT.GRANTED--activemq.png;https://issues.apache.org/jira/secure/attachment/12460901/ASF.LICENSE.NOT.GRANTED--activemq.png","15/Mar/07 09:01;paulrene;ASF.LICENSE.NOT.GRANTED--heapdump.rar;https://issues.apache.org/jira/secure/attachment/12460811/ASF.LICENSE.NOT.GRANTED--heapdump.rar",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-04-30 12:43:27.016,,,false,,,,,,,,,,,,,,,,,84462,,,Mon Oct 22 20:42:20 UTC 2007,,,,,,,,"0|i14ppr:",235631,,,,,,,,,,,,,,,,,,,"30/Apr/07 12:43;aburgel;i found an issue with Scheduler that prevents it from removing tasks correctly which might be causing these memory leaks

take a look at AMQ-1235 and give the patch a try.","22/Oct/07 20:42;chirino;issue AMQ-1235 resolved.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp consumer not removed if client does not send disconnect message.,AMQ-1067,12482231,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,cknite,cknite,21/Nov/06 22:48,22/Oct/07 20:37,30/Jan/20 16:57,22/Oct/07 20:37,4.1.0,,,,,,4.1.2,5.0.0,,Broker,,,,1,"Run ""clearQueue.pl TEST.QUEUE""
Check in jconsole. The client will still be marked as active even when the script is killed. This prevents any meaningful use of queues if any consumption is done via stomp.","Solaris 10, Perl 5.8.4",akruthoff,cknite,mronner,,,,,,,,,,,,,,,,,,,,,,,,AMQ-724,"21/Nov/06 22:48;cknite;ASF.LICENSE.NOT.GRANTED--perl.tar.gz;https://issues.apache.org/jira/secure/attachment/12460723/ASF.LICENSE.NOT.GRANTED--perl.tar.gz",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-06-01 08:53:23.911,,,false,,,,,,,,,,,,,,,,,84495,,,Mon Oct 22 20:37:41 UTC 2007,,,,,,,,"0|i0s1mv:",161741,,,,,,,,,,,,,,,,,,,"21/Nov/06 22:51;cknite;To recreate the problem:
clearQueue.pl <TEST_QUEUE>
Ctrl^C

You'll then find that the consumer is still active according to the broker.","21/Nov/06 22:56;cknite;This only affects version 4.1.0. 4.0.1 is fine.","01/Jun/07 08:53;akruthoff;This issue is not yet resolved on 4.1.1, 4.1.1-SNAPSHOT, or 4.1.0. It can be reproduced very easily with the provided perl script. Ticket https://issues.apache.org/activemq/browse/AMQ-724 describes the same problem but with a c client.

ActiveMQ-4.0.2 works fine, so the error was introduced in version 4.1.
","20/Aug/07 05:24;rajdavies;I think this is fixed ?","20/Aug/07 07:45;andreas@kruthoff.org;Version 4.0 is fine, 4.1 doesn't work, stomp consumer isn't removed.
","22/Oct/07 20:37;chirino;Fixed in the upcoming 4.1.2 and 5.0.0 releases. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"After broker has shutdown, cannot shutdown a client application",AMQ-630,12482159,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,kieranmurphy,kieranmurphy,13/Mar/06 22:09,22/Oct/07 20:23,30/Jan/20 16:57,22/Oct/07 20:23,4.0 M4,,,,,,4.1.0,,,,,,,1,"1.  Bring up a broker
2.  Bring up a client application which connects to the broker
3.  Stop the broker.
4.  Now try to stop the client app -- it will not shutdown until the broker is restarted.  

Using failover:tcp to connect to broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-16 11:52:09.0,,,false,,,,,,,,,,,,,,,,,49264,,,Mon Oct 22 20:23:12 UTC 2007,,,,,,,,"0|i0s1jj:",161726,Regression,,,,,,,,,,,,,,,,,,"16/Mar/06 11:52;jstrachan;We used to have an infinite blocking request-response when closing clients, letting the broker konw that the client was shutting down. The code was patched a few days ago to use a timeout instead - so if the broker is down, the client will only wait until the timeout occurs before shutting down","26/Apr/06 15:09;kieranmurphy;This is fixed except when I use failover.  I am using failover (on client side) to connect to a network of brokers configured with static discovery and failover=true.  After the client has connected to some broker in the network, if I bring down all brokers in the network, the client will not shutdown.  Watching the client's DEBUG output, I see that it is forever trying to recoonect to a broker from the failover list.

When I turn off failover on the client side, the reconnection attempts do not continue -- i.e. without failover, the client shuts down properly. With failover, the client is forever trying to reconnect to a broker. I also set maxReconnectAttempts on the client, it still gets this debug output:

DEBUG - Attempting connect to: tcp://localhost:61616
DEBUG - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused
DEBUG - Waiting 30000 ms before attempting connection.
DEBUG - Waiting for transport to reconnect.
DEBUG - Waiting for transport to reconnect.
DEBUG - Waiting for transport to reconnect.
DEBUG - Waiting for transport to reconnect.
DEBUG - Waiting for transport to reconnect.

...and so on. This prevents the client fromn shutting down.

If I restart a broker, the client reconnects and then completes shutting down.","01/May/06 22:00;chirino;Look into fixing this post 4.x","10/May/06 04:15;kieranmurphy;Is it possible to get this into the 4.0 release?","09/Jun/06 00:59;jstrachan;BTW have you tried setting a fairly aggresive closeTimeout value? (e.g. like 500 milliseconds)

http://activemq.org/site/connection-configuration-uri.html

","11/Aug/06 21:49;kieranmurphy;Yes - even with the closeTimeout value set to 500ms, if I am using failover then the client will wait FOREVER for the broker to reply before shutting down.  Without failover, if I just use TCP, then client shuts down properly, 

I have been testing this using the 4.0.1 release: incubator-activemq-4.0.1.

Perhaps you could try to duplicate this, so I'll at least know that it's not just my configuration?

Thanks.","10/Nov/06 16:51;kieranmurphy;This is fixed, but the client using the failover protocol must  be configured with the maxReconnectAttempts argument set.  If maxReconnectAttempts is not set, then the client tries forever to reconnect and this seems to block the client's shutdown.  As long as maxReconnectAttempts value is non-zero, then the client will be able to shutdown when no brokers are online.","28/Aug/07 12:00;tsigelnik;I think it is a bug. Why transport cannot be stopped without any parameters? I have same problem and this problem not described in documentation. I set this parameter and solve problem, but I think bug is not resolved","22/Oct/07 20:23;chirino;Issue has been resolved.  The behavior described regarding maxReconnectAttempts is what is expected.",,,,,,,,,,,,,,,,,,,,,,,,,,
TCP connector (server) will stop accepting connection if an invalid connection is made to him.,AMQ-875,12482235,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,11/Aug/06 16:24,22/Oct/07 20:02,30/Jan/20 16:57,22/Oct/07 20:02,4.0,,,,,,5.0.0,,,Transport,,,,2,"Charles reported on the mailing list:

Hi All,

We've just had a nasty situation : our ActiveMQ Server standalone plain
vanilla TCP Transport, no persistency, no nuffink) on one of our live
installations suddenly refused to accept any new connections - no clients
could connect. All currently connected clients were fine, and messages were
being processed sent and received fine. Just no-one else could connect.

After 20 minutes, new connections were suddenly allowed.

The following exception was in our log.

2006-Aug-11 12:17:47.726 aqualive [ActiveMQ Transport Server:
tcp://blah:61616]  ERROR org.apache.activemq.broker.TransportConnector -
Could not accept connection: java.net.SocketException: Connection reset by
peer: socket write error
java.net.SocketException: Connection reset by peer: socket write error
 at java.net.SocketOutputStream.socketWrite0(Native Method)
 at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
 at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
 at
org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedO
utputStream.java:108)
 at java.io.DataOutputStream.flush(DataOutputStream.java:101)
 at
org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:125)
 at
org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.jav
a:141)
 at
org.apache.activemq.transport.WireFormatNegotiator.sendWireFormat(WireFormat
Negotiator.java:128)
 at
org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiato
r.java:64)
 at
org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:52)
 at
org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:52)
 at
org.apache.activemq.broker.TransportConnection.start(TransportConnection.jav
a:75)
 at
org.apache.activemq.broker.TransportConnector$1.onAccept(TransportConnector.
java:136)
 at
org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.
java:137)
 at java.lang.Thread.run(Thread.java:534)

My interpretation of the above that something (port scanner maybe ? Our
curious IT department ?) is connecting to the listening socket, and the
TransportServer is trying to tell the connecting process what the wireformat
is - and the connection process is just sitting there, not responding,
acknlowedging, or doing anything at all - yet not closing the connection.
Therefore, the transport server is blocked, preventing anyone else
connecting. After 20 mins - which I am guessing is somekind of lowlevel
timeout, seeing as all the default AMQ timeouts seen to be of the order of 1
- 30 secs - a low level TCP exception is thrown, freeing the whole shebang
up.

I notice there is an InactivityMonitor, and looking at the code there is the
following comment
// Disable inactivity monitoring while processing a command.

Could this be the case ? That - until the wireformat has been negotiated -
there is no timeout configured ? Is there anything we can do to reduce this
timeout from 20 mins ? Or have I completed gone down the wrong track ?

This is AMQ 4.0, Win2K, JRE 1.4.2

Cheers,

Charles",,charles,eta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-09-28 12:08:54.0,,,false,,,,,,,,,,,,,,,,,84323,,,Mon Oct 22 20:02:02 UTC 2007,,,,,,,,"0|i0s1nb:",161743,,,,,,,,,,,,,,,,,,,"28/Sep/06 12:08;charles;This has just reoccured on a different client site...","29/Aug/07 02:23;eta;I just spent some time trying to repro this on rev. 570602 without luck.  Specifically I was trying to recreate the exception noted by telnetting to 61616 and tracing the session establishment code in the debugger.  I tried both 1) allowing the wireformat info to be sent to the client and allowing the timeout to occur, and 2) closing the connection from the client end before the initial wireformat info is sent.

In both cases it seemed like the transport code was catching any socket exceptions and cleaning up in an orderly way.  

I did notice one very peculiar behavior though.  I set up 20 different bash shells to do a ""telnet 0 61616"", then fired off the connections to the AMQ broker concurrently.  What I saw was that while connection #n was waiting for a response to its wireformat message, connection #n+1 was sitting idle, no initial handshake message having been sent from the broker.  As soon as connection #n timed-out, I would see the initial data from the server on the screen of session #n+1.  Meanwhile, connection #n+2 sat idle until n+1 timed out, and then it too would receive the initial handshake message, and so on.

So it would seem that, given this behavior, it might be easy to instigate a mini-DOS attack against the broker simply by creating connections to the openwire transport and sending nothing on them.  All bogus connections would have to time out before subsequent valid connections would be negotiated.  I could easily see how a port-scanning application could cause similar problems if it connected to port 61616 and then for some reason did not immediately tear down the TCP connection.

-Eric","29/Aug/07 03:43;chirino;Hi Eric,

That issue has been resolved in the up comming 5.0 release.  see issue https://issues.apache.org/activemq/browse/AMQ-1337
","22/Oct/07 20:02;chirino;fixed in 5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"option ""wireFormat.tcpNoDelayEnabled=true"" is ignored",AMQ-1156,12482114,12482187,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,davidmc,davidmc,07/Feb/07 08:17,22/Oct/07 20:00,30/Jan/20 16:57,22/Oct/07 20:00,4.0,4.1.0,5.0.0,,,,5.0.0,,,Documentation,Test Cases,Transport,,1,"*A. Description*
Setting the wireFormat.tcpNoDelayEnabled flag to true in connection uri's (for example _""tcp://localhost:61616?wireFormat.tcpNoDelayEnabled""_) has no effect:
The sockets created in ActiveMQ do not have the TcpNoDelay flag set to true.
You can verify this for example in the following way: insert the line _System.err.println(sock.getTcpNoDelay());_ at the end of the method
_org.apache.activemq.transport.tcp.TcpTransport.initialiseSocket_.
Also you can try my test at http://www.nabble.com/High-latency-for-small-messages-problem-t3159901.html which makes latency appear if Nagle's algorithm is not disabled.
This affects versions 4.0, 4.1.0, and 4.2.0 latest snapshot. I guess 4.0.2 is affected too.



*B. Reason*
After looking at the source code to understand how the options are set, i saw that in the method org.apache.activemq.transport.tcp.TcpTransportFactory.compositeConfigure the following line appears:
_Map socketOptions = IntrospectionSupport.extractProperties(options, ""socket."")_; 

and also that the method to set the TcpNoDelay option in class _org.apache.activemq.transport.tcp.TcpTransport_ is called _setTcpNoDelay_ and not _setTcpNoDelayEnabled_

Therefore, I tried to write _""socket.tcpNoDelay=true""_ instead of _""wireFormat.tcpNoDelayEnabled=true""_ and it *worked!* This is a *workaround*.

But, _""wireFormat.tcpNoDelayEnabled""_ option is not refused (as _""wireFormat.tcpNoDelayTypoEnabled""_ would be). The option _""tcpNoDelay=true""_ is not refused either, but DOES NOT work either.



*C. Fix*
So, please, for the sake of the poor soul who's next going to try to disable Nagle's algorithm without noticing any effect, and will start looking for the problem elsewhere (and for the sake of consistency also):
-Either change the documentation (http://www.activemq.org/site/tcp-transport-reference.html and http://www.activemq.org/site/configuring-wire-formats.html) to say that one should use the _socket.tcpNoDelay_ option, or
-Change the code to obey the documentation (and make it refuse old options like just _""tcpNoDelay""_ who have no effect).

Personally I would change the documentation ASAP so that people know about the _""socket.tcpNoDelay=true""_ workaround until next version, and then change the code to recognize the _""wireFormat.tcpNoDelayTypoEnabled""_ option. I'd like to point out that the own ActiveMQ test cases use _""wireFormat.tcpNoDelayTypoEnabled""_ .



*D. Related issues*
This is related to a previous post of mine: http://www.nabble.com/High-latency-for-small-messages-problem-t3159901.html
Doing quick synchronized sends showed a 39ms latency if the broker is running in Linux, and a 200ms latency if the broker is in Windows (by the way, if someone knows the bottom reason for this exact latency times, please tell me). Putting the _""wireFormat.tcpNoDelayTypoEnabled""_ to true in order to disable Nagle's algorithm had no effect (because ActiveMQ does not recognize it).

Very probably this is also related to issues https://issues.apache.org/activemq/browse/AMQ-1143 and https://issues.apache.org/activemq/browse/AMQ-1137 (in this one probably Helmutt tried to set the wireFormat.tcpNoDelayTypoEnabled without success because of this).",Any.,davidmc,janknecht,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1137,AMQ-1233,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-13 11:51:56.216,,,false,,,,,,,,,,,,,,,,,84305,,,Mon Oct 22 20:00:53 UTC 2007,,,,,,,,"0|i0s2wn:",161947,,,,,,,,,,,,,,,,,,,"22/Feb/07 02:48;davidmc;Some more findings...
It seems that even the socket.tcpNoDelay option does nothing to set TCP_NODELAY on broker sockets, when written in the activemq.xml file, like for example:

  <broker name=""broker"" useJmx=""true"" persistent=""false"" xmlns=""http://activemq.org/config/1.0"" deleteAllMessagesOnStartup=""true"">
  
    <transportConnectors>
      <transportConnector uri=""tcp://localhost:61616?socket.tcpNoDelay=true;wireFormat.tcpNoDelayEnabled=true;tcpNoDelay=true""/>
    </transportConnectors>
    
  </broker>

None of the options I put has any effect on the broker's sockets, but they all are accepted by the options parser without throwing an exception.
In some scenarios some delayed ACK timeouts were still appearing because of the broker's sockets having TCP_NODELAY = false even if the client sockets have TCP_NODELAY = true.

So, if you really want to disable Nagle's Algorithm in ActiveMQ without exception (broker and clients), one should go to the org.apache.activemq.transport.tcp.TcpTransport.initialiseSocket method and add the following line at the end of the method:

sock.setTcpNoDelay(true);","13/Mar/07 11:51;janknecht;This TCP_NODELAY caused also my problem described in AMQ-1137.
Regardless of which of these options (""socket.tcpNoDelay=true;wireFormat.tcpNoDelayEnabled=true;tcpNoDelay=true"") I set transactional messaging is slow under Linux.

I patched  the {{org.apache.activemq.transport.tcp.TcpTransport}} class and disbled TCP_NODELAY hard-coded like this:

{code:title=TcpTransport.java|borderStyle=solid}
  protected void initialiseSocket(Socket sock) throws SocketException {
    if (socketOptions != null) {
      IntrospectionSupport.setProperties(socket, socketOptions);
    }

    socket.setTcpNoDelay(true);  // disable TCP_NODELAY anyway
    socket.setReceiveBufferSize(socketBufferSize);
    socket.setSendBufferSize(socketBufferSize);

    sock.setTcpNoDelay(socket.getTcpNoDelay()); // disable TCP_NODELAY also for sock

    try {
      sock.setReceiveBufferSize(socketBufferSize);
      sock.setSendBufferSize(socketBufferSize);

    } catch (SocketException se) {
      log.warn(""Cannot set socket buffer size = "" + socketBufferSize);
      log.debug(""Cannot set socket buffer size. Reason: "" + se, se);
    }
    sock.setSoTimeout(soTimeout);

    if (keepAlive != null) {
      sock.setKeepAlive(keepAlive.booleanValue());
    }

    //    if (tcpNoDelay != null) {
    //      sock.setTcpNoDelay(tcpNoDelay.booleanValue());
    //    }

    if (!socketInitialized) {
      //      log.info(""Initialized ACX version $Date: 2007/02/13 16:21 $ of TcpTransport with: sock.getTcpNoDelay="" + sock.getTcpNoDelay() + "", sock.getReceiveBufferSize="" + sock.getReceiveBufferSize() + "", sock.getSendBufferSize="" + sock.getSendBufferSize() + "", socket.getTcpNoDelay="" + socket.getTcpNoDelay()
      //          + "", socket.getReceiveBufferSize="" + socket.getReceiveBufferSize() + "", socket.getSendBufferSize="" + socket.getSendBufferSize());
      log.info(""Initialized ACX patch revision A of TcpTransport with: tcpNoDelay="" + socket.getTcpNoDelay() + "" and buffer sizes="" + socket.getReceiveBufferSize());
      socketInitialized = true;
    }
  }
{code}","13/Mar/07 12:43;janknecht;On Linux 2.6.16 or 2.6.17 perhaps setting this {{sysctl net.ipv4.tcp_abc=0}} may help as described in https://issues.apache.org/activemq/browse/AMQ-1137#action_38799.","14/Mar/07 05:09;davidmc;Indeed Helmut. When you set socket.tcpNoDelay=true on a client (producer or consumer) URI, the client's sockets have TCP_NODELAY properly set to true.
But when you try to do the same in activemq.xml for the broker's sockets, it doesn't work. You have to hard code it.
I found that setting TCP_NODELAY on the producer's sockets is the most important, but setting it on the broker's and consumer's sockets also eliminates many timeouts.

Thank you very much for the warning on tcp_abc. I am not using any of those kernels but it is good to know :)","05/Sep/07 21:53;chirino;Great comments guys.  I just committed a fix to the activemq trunk.

We now actually update the tcpNoDelay setting on the socket once the wireformat options are negociated.  This allows
the client to control if his socket and the server's socket use the option.  By default tcpNoDelay is enabled.
the client should use a URL like tcp://localhost:61616?wireFormat.tcpNoDelayEnabled=false to disable tcpNoDelay on
 both the client and the server socket.

If you guys get a chance could you confirm that this fixes the issue?? thanks.  Hiram","05/Sep/07 21:55;chirino;Fix was in revision 573080","22/Oct/07 20:00;chirino;Fixed in 5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP not setting content-length on byte messages.,AMQ-670,12482083,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,30/Mar/06 04:12,22/Oct/07 19:55,30/Jan/20 16:57,22/Oct/07 19:55,,,,,,,5.0.0,,,Transport,,,,0,It was also setting the content-length as a propertly on the JMS message when receiving a binary message.,,mcpat,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Oct/07 19:53;chirino;recv.rb;https://issues.apache.org/jira/secure/attachment/12460931/recv.rb","22/Oct/07 19:50;chirino;send.rb;https://issues.apache.org/jira/secure/attachment/12460582/send.rb",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-10-02 16:20:11.201,,,false,,,,,,,,,,,,,,,,,49297,,,Mon Oct 22 19:55:12 UTC 2007,,,,,,,,"0|i0s1fr:",161709,,,,,,,,,,,,,,,,,,,"30/Mar/06 09:15;chirino;fixed.","02/Oct/07 16:20;mcpat;When I send a STOMP (binary) message with a specified ""content-length"" header to the broker and try to receive it with another STOMP-Client then the second one does not receive this ""content-length"" header. I do not know where it gets lost but especially for binary messages this header is essential.","22/Oct/07 19:50;chirino;script used to test reported error","22/Oct/07 19:53;chirino;script used to test reported error","22/Oct/07 19:55;chirino;I used the attached send.rb and recv.rb script to test sending a receiving a message with the content-length header set and it seem to work fine against the activemq trunk.

Closing issue out again as fixed on 5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maxReconnectAttempts has no effect,AMQ-777,12482186,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jwray,jwray,27/Jun/06 05:45,22/Oct/07 19:37,30/Jan/20 16:57,22/Oct/07 19:37,4.0.1,,,,,,5.0.0,,,,,,,0,"
I saw this entry in the forums and I'm having the same problem, setting maxReconnectAttempts to a specific value does not stop the infinite loop of ""Waiting for transport to reconnect"" from occuring.

http://www.nabble.com/Discovery-Fail-if-no-Broker-t1824894.html#a4977620

The forum reply from Hiram Chirino suggests it's a bug but I didn't find an associated JIRA issue.

Jonny",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-10-04 15:34:36.344,,,false,,,,,,,,,,,,,,,,,84406,,,Mon Oct 22 19:37:20 UTC 2007,,,,,,,,"0|i1807j:",254836,,,,,,,,,,,,,,,,,,,"04/Oct/07 15:34;rajdavies;I think you just fixed this ;)","22/Oct/07 19:37;chirino;Test case and fix added to trunk in revision 587216.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Producer hangs on durable subscribe as Usage memory runs over,AMQ-1449,12482164,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,nickysandhu,nickysandhu,08/Oct/07 18:30,22/Oct/07 16:58,30/Jan/20 16:57,22/Oct/07 08:39,,,,,,,5.0.0,,,Broker,,,,0,"Broker hangs on a durable subscribe when producer is disconnected violently (System.exit()). I have included the test files to reproduce the problem

WARNING: The test cases included can be patched against activemq-core but are not unit tests. Do the following sequence

1.) Run the junit test DurableProducerConsumerBrokerTest. This starts a broker 
2.) Run the junit test DurableProducerConsumerTest. It will exit with System.exit midway thru running the test
3.) Rerun the junit test DurableProducerConsumerTest...It should hang the second time around

Note: If you use the log4j.properties included in the patch you would see the Usage memory as it rises above 70 to 99+ in the second run.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Oct/07 18:30;nickysandhu;ASF.LICENSE.NOT.GRANTED--tests.patch.txt;https://issues.apache.org/jira/secure/attachment/12460703/ASF.LICENSE.NOT.GRANTED--tests.patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-10-22 08:39:00.368,,,false,,,,,,,,,,,,,,,,,95788,,,Mon Oct 22 16:58:39 UTC 2007,,,,,,,,"0|i181qv:",255085,Unit Test Broken,,,,,,,,,,,,,,,,,,"08/Oct/07 18:32;nickysandhu;Started in forum thread http://www.nabble.com/Usage-Manager-for-durable-offline-subscriber-t4572289s2354.html#a13051280","19/Oct/07 20:33;nickysandhu;TopicStorePrefetch has a system usage manager that is not used by Message (broker.region package). It instead uses the increment/decrement to inform the regionBroker's system usage manager which happens to be a different one. 

So the listener implemented by DurableTopicSubscription never results in an actual call back and hence the leak ?? 

I don't understand this one completely but i hope it helps whoever looks at this issue","22/Oct/07 08:39;rajdavies;Fixed by svn revision 587033","22/Oct/07 16:58;nickysandhu;Thanks Rob! It does great under the performance tests as well. Any thoughts on how to include/modify these tests for the build ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FanoutTransport minimum ack connection logic bug,AMQ-1439,12482090,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tpounds,tpounds,03/Oct/07 16:51,19/Oct/07 03:55,30/Jan/20 16:57,19/Oct/07 03:55,,,,,,,5.0.0,,,Transport,,,,0,"All occurrences  of connectedCount != minAckCount should be replaced with connectedCount < minAckCount.  The logic should proceed once the minimum number of acks have been achieved.

see http://www.nabble.com/FanoutTransport-Patches-tf4562939s2354.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/07 18:55;tpounds;FanoutTransport.svn.diff;https://issues.apache.org/jira/secure/attachment/12461040/FanoutTransport.svn.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-10-19 03:55:42.33,,,false,,,,,,,,,,,,,,,,,95785,,,Fri Oct 19 03:55:42 UTC 2007,,,,Patch Available,,,,"0|i181rz:",255090,,,,,,,,,,,,,,,,,,,"19/Oct/07 03:55;jlim;Thanks Trevor!  
patch applied on trunk : r586251",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker stops delivering messages to some consumers,AMQ-1251,12482177,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vpesochi,vpesochi,23/May/07 16:58,18/Oct/07 04:14,30/Jan/20 16:57,18/Oct/07 04:14,4.1.0,,,,,,5.0.0,,,Broker,,,,2,"I have around 40 consumers taking messages from a single queue. After awhile 1 or 2 consumers stop receiveing any messages. Going to JMX and stopping corresponding connection causes re-connect and messages are delivered again.

I reproduced it twice in QA enviroment and now it happened in production. I tried to instrument the code and set the log in debug, but that changed timing and I failed to reproduce it after the changes.

I suspect that runtime association b/w Queue and Consumer objects is lost on the Broker side. 

One of the suspects is the empty catch block in the RoundRobinDispatchPolicy (line 64) class. It is possible that the CopyOnWrite array list is messed up and it fails when removed consumer is added back. 

BTW CopyOnWrite list is good when you mostly read, but not so good when you write for every message delivery and empty catch blocks are bad in any case.

if (firstMatchingConsumer != null) {
      // Rotate the consumer list.
      try {
                consumers.remove(firstMatchingConsumer);
                consumers.add(firstMatchingConsumer);
      } catch (Throwable bestEffort) {
      }
}",WinXP,pkozelka,sits,vpesochi,yvonnedaher,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/07 19:30;chirino;QueueWorkerPrefetchTest.java;https://issues.apache.org/jira/secure/attachment/12460965/QueueWorkerPrefetchTest.java","27/Aug/07 23:49;sits;TestActiveMQ.java;https://issues.apache.org/jira/secure/attachment/12460648/TestActiveMQ.java","05/Sep/07 01:58;sits;TestActiveMQSyncReceive.java;https://issues.apache.org/jira/secure/attachment/12461015/TestActiveMQSyncReceive.java",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2007-08-23 03:49:31.934,,,false,,,,,,,,,,,,,,,,,84454,,,Thu Oct 18 04:14:53 UTC 2007,,,,,,,,"0|i0s1kf:",161730,,,,,,,,,,,,,,,,,,,"20/Jul/07 18:43;vpesochi;This issue now occurs on a very slow and busy machine after consumer gets a dozen of messages it stops getting others.","23/Aug/07 03:49;sits;Can you explain how this issue is resolved?  I see this issue still occurring with a svn checkout of trunk from yesterday (revision number 568479).  From what I can see, RoundRobinDispatchPolicy hasn't been changed as recommended by the author of this bug.

Was there any code committed to fix this bug?  If so, what was it?

I see exactly the same issue - after a while in my application, the consumers stop consuming messages, and I can confirm via JMX there are a couple of messages left in a persistent queue.  When I start up a new process which is a consumer for this queue, it immediately gets these messages, and the older consumers never receive any more, despite having subscriptions to the queue (as confirmed by JMX).

","23/Aug/07 03:50;sits;As noted by my previous comment - I still see this issue occurring, so I am re-opening this bug.
","23/Aug/07 17:27;vpesochi;David, 

You may be having a different issue though. If you have idle consumers some messages can be stack in the pre-fetch buffer. You can check this out by setting pre-fetch buffer to 0 for all consumer connections, but keep in mind that it does not work with asynchronous MessageListener interface. You have to call recieve*(*) methods for it to work. 

Pre-fetch buffer is on the client / consumer JVM. Messages are pushed to the consumer until the buffer size is not exceeded. This is a performance solution, so if you are not getting 1000 msgs/sec you can pull messages from the queue with prefetchSize = 0.

To set prefetch size you can use this code or google amq site to figure out how to set it in connection URL.

            ActiveMQConnectionFactory cf = new ActiveMQConnectionFactory(user, password, url);
            cf.setPrefetchPolicy(getPrefetchPolicy());


Regards.","27/Aug/07 23:47;sits;Hi Vadim,

I can't use the receive call, since my application uses the async MessageListener interface.  I posted on the activemq-user mailing list more detail on my application, with a unit test which demonstrates the issue.  http://www.nabble.com/Large-PendingQueueSize-values-for-subscriptions-on-a-queue-with-one-message-tf4316080s2354.html.

I've attached a unit test which demonstrates the problem.  I tried to make the code as small as possible.

In this situation, the issue (program hangs) seems to happen when QUEUE_PREFETCH_SIZE == 1 and NUM_WORKERS = 2 (90% of the time).
Changing NUM_WORKERS to 1 seems to make it work.

Increasing the QUEUE_PREFETCH_SIZE also seems to make things work.

","27/Aug/07 23:49;sits;Example unit test which demonstrates the issue.
","30/Aug/07 12:56;rajdavies;this seems fixed - svn  revision 571150.
","03/Sep/07 02:21;sits;Thanks for that Rob, I'll try out the latest code soon.

Following Vadim's advice, I restructured my application to use synchronous receives, and setting prefetchSize = 0 prevented the issue from occurring.  Setting it to a value of 1 or more in my application causes the issues of messages not being delivered.

When I get some time soon, I'll update my activemq and let you know if your changes have indeed fixed the problems I am seeing for other prefetch sizes.


","04/Sep/07 05:11;sits;Hi Rob,

I updated my activemq to 572492, but the problem still occurs when I run the unit test.  Not every time, but it still happens, around 75% of the time on the machine I am using.

Can you not reproduce this on your end?
","05/Sep/07 01:58;sits;Similar unit test to TestActiveMQ, except it has been rewritten to use synchronous receives, which is how my main application works now.

I still get the unit test hanging about 50% of the time when the number of worker threads is 2 or more, and interestingly when the prefetch size is 0.  If the prefetch is set to 1 or more, then the program _seems_ to work.

Whatever the problem is, both with this test and the previous one, there is some sort of race condition, since the program doesn't always hang.

Whenever the program hangs, it seems the PendingQueueSize values for the queue subscriptions are very large, in fact when I add the values up from all worker queue subscriptions, it seems to equal the total number of messages which have been sent to the queue.

When the program works, as expected, the PendingQueueSize on the subscriptions is 0.

Any ideas what is wrong?  This is with checkout 572492 and built using mvn -Dmaven.test.skip=true clean install.

","05/Sep/07 06:31;sits;To add a bit more potentially relevant information, I am running these unit tests under Vista, JDK 1.6.0_02 on a duo core machine.  Perhaps the fact it is running on duo core means it is exposing a race condition that may not be as easy to reproduce on a single core machine.

","05/Sep/07 07:06;sits;In case it is hard for you to reproduce, here are the relevant statistics obtained using JMX when the unit test hangs after the first batch of 1000 messages are processed:

For the work-items queue (which has two worker thread consumers):

ConsumerCount: 2
DequeueCount: 1000
DispatchCount: 1000
EnqueueCount: 1001

This makes sense - the 1001 enqueue count indicates the message the master has sent to the work-items queue to indicate to the workers to start processing the second batch of 1000 items, but for whatever reason, this message hasn't been dispatched to a worker.

For the two worker subscriptions on this queue, here are their stats:

Worker 1:

DequeueCounter: 998
DispatchedCounter: 998
DispatchedQueueSize: 0
EnqueueCounter: 1001
MaximumPendingMessageLimit: 0
PendingQueueSize: 3
PrefetchSize: 0

Worker 2:

DequeueCounter: 2
DispatchedCounter: 2
DispatchedQueueSize: 0
EnqueueCounter: 1001
MaximumPendingMessageLimit: 0
PendingQueueSize: 998
PrefetchSize: 0

I can also confirm that all 3 threads (two workers, one master) and waiting in receive(), by dumping the thread stacks:

at org.apache.activemq.MessageDispatchChannel.dequeue(MessageDispatchChannel.java:75)
-locked <0x199c50d8> (a java.lang.Object)
at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:405)
at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:453)

Looking at the numbers, it really looks like a new message has been put into the queue, but hasn't been dispatched.

Is there any more information you need apart from the above and the unit tests provided to squash this issue?


","06/Sep/07 19:30;chirino;Attaching a version of the test case that does not seem to fail.  All I did was avoid some of the synchronization contention that the test case had by avoiding those big sychronization blocks.","06/Sep/07 21:27;sits;Hiram - thanks for your comment.  Your unit test confirms that what we are dealing with here is a race condition in the activemq code, somewhere.  Although the original unit tests do have excessive synchronization, it is not invalid code from what I can tell, and it should complete to the end.

I started to have a little look at the activemq code under a debugger, and noticed the case when both workers are stuck, is when they have non-empty pending queues where all message references have dropped is true.  When the dispatcher sends the next message from the master, it is just added to both pending queues for the worker, and according to the logic I saw, it wasn't immediately dispatched since the pending queue was not empty.

I tried pressing the gc() operation on various objects from JMX, but it didn't seem to clear out any of the messages.

At this stage - nothing seems to happen, the pending queues stay non-empty, and the new message is never delivered.","06/Sep/07 21:56;chirino;actually I spoke too soon.I ran it a few more times and it got stuck again.

but I think I have cornnered the cause of the problem and should have a fix soon.","06/Sep/07 22:22;chirino;Hi David,

I think the issue is now resolved in the trunk version of activemq as of revision 573400.  If you get a chance could you double check it for me?? 

/Regards,
Hiram","10/Sep/07 02:17;sits;Hi Hiram,

Many thanks for fixing this issue - all my unit tests now work, and my application runs far further than it used to - I suspect these problems are mine now :).

I am curious though, your change to VMPendingMessageCursor makes sense in that isEmpty() need to ignore dropped messages.  Do we not need to make a similar change for other implementations of PendingMessageCursor, such as FilePendingMessageCursor and StoreQueueCursor?

Cheers,
David
","10/Sep/07 03:42;sits;Hi Hiram,

Incidentally, https://issues.apache.org/activemq/browse/AMQ-1333 I believe was created as a clone of this bug, so that any fixes could be applied to the 4.1.X release.  Can/should your changes be applied to 4.1.X as well?

Cheers,
David
","10/Sep/07 17:25;leguil2007;Hi all, 

I have tried revision 574216 of activemq trunk. I'm still having a problem when I set the queue prefetch size to 1, when using a pure master slave configuration. Here what I have done:
1. Start two brokers, one master, one slave (with shutdownIfMasterFailure set to false).
2. Start one consumer (with prefetch set to 1), and with sleeptime = 5000 millisecond
3. Start one producer (for example: 10 durable messages)
4. After the consumer have consumed 1 or 2 messages, kill the master
5. The consumer will eat only one message from the slave (and they are more message in the queue).

If the prefetch is not set, then the in step 5, the consumer will eat all the remaining messages.
","20/Sep/07 11:30;sits;Hi Hiram,

I have found an issue with your change I believe.  While running my code, I received the following exception:

[ActiveMQ Task] 881755 ERROR org.apache.activemq.broker.region.Queue.worker-items - Failed to page in more queue messages 
java.lang.RuntimeException: not implemented
	at org.apache.activemq.broker.region.NullMessageReference.isDropped(NullMessageReference.java:47)
	at org.apache.activemq.broker.region.cursors.VMPendingMessageCursor.isEmpty(VMPendingMessageCursor.java:43)
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:119)
	at org.apache.activemq.broker.region.policy.RoundRobinDispatchPolicy.dispatch(RoundRobinDispatchPolicy.java:70)
	at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1054)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1069)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:940)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

I can't look at the code where I am writing this from, but is this something easy to fix?  Thanks.

Cheers,
David
","03/Oct/07 11:27;rajdavies;David,

worked around that issue with the Runtime Exception

cheers,

Rob","08/Oct/07 01:44;sits;Hi Rob,

Thanks - I can confirm that I no longer see the following messages:

""java.lang.RuntimeException: not implemented
at org.apache.activemq.broker.region.NullMessageReference.isDropped(NullMessageReference.java:47)""

Now I would mark this issue as resolved from my perspective, except I hadn't heard back from Hiram about one of my previous comments above:

> Hi Hiram,
> 
> Many thanks for fixing this issue - all my unit tests now work, and my application runs far further than it used to - I suspect these problems are mine now .
>
> I am curious though, your change to VMPendingMessageCursor makes sense in that isEmpty() need to ignore dropped messages. Do we not need to make a similar 
> change for other implementations of PendingMessageCursor, such as FilePendingMessageCursor and StoreQueueCursor?
>
> Cheers,
> David","18/Oct/07 04:13;rajdavies;It makes sense to update FilePendingMessageCursor.isEmpty() logic to check that nodes haven't been dropped from the in memory list it holds.
However, the disk part of the list - or the StoreQueueCursor will not hold the same instance as used by the Queue - and persisted references aren't updated.","18/Oct/07 04:14;rajdavies;Update FilePendingMessageCursor.isEmpty() method to check for dropped message references in its in-memory list
svn revision: 585853",,,,,,,,,,,
4.2 Broker memory leak wrt network connectors,AMQ-1202,12482220,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yaussy,yaussy,12/Mar/07 17:53,18/Oct/07 03:55,30/Jan/20 16:57,18/Oct/07 03:55,5.0.0,,,,,,5.0.0,,,Broker,,,,3,"If the NetworkConnector list contains any entries to unavailable / unreachable targets, memory is leaked.

Tested with a broker having fairly ""stock"" settings, and with the following NetworkConnector section:
    <networkConnectors>
      <networkConnector uri=""static://(tcp://dummy:5111?connectionTimeout=5000)"" prefetchSize=""10000""/>
    </networkConnectors>

I am using JDK 1.6, since that version of jmap allows the ""-histo:live"" switch, producing a list of the live objects.

Just after starting the Broker, here is the top 10 entries from jmap:
num   #instances    #bytes  class name
--------------------------------------
  1:     36639     4143792  <constMethodKlass>
  2:     36639     2935200  <methodKlass>
  3:     54423     2326752  <symbolKlass>
  4:      8099     2008984  [B
  5:      3451     1771816  <constantPoolKlass>
  6:      3451     1433032  <instanceKlassKlass>
  7:     14220     1212160  [C
  8:      2894     1089840  <constantPoolCacheKlass>
  9:         8      524352  [Lorg.apache.activemq.command.DataStructure;


And then after about 5 minutes or so, here's the jmap top 10:
num   #instances    #bytes  class name
--------------------------------------
  1:       198    12977712  [Lorg.apache.activemq.command.DataStructure;
  2:     36647     4144520  <constMethodKlass>
  3:     36647     2935840  <methodKlass>
  4:     54427     2326960  <symbolKlass>
  5:      8293     2207032  [B
  6:      3455     1773488  <constantPoolKlass>
  7:      3455     1434376  <instanceKlassKlass>
  8:     14499     1234040  [C
  9:      2898     1091120  <constantPoolCacheKlass>
 10:     17754      426096  java.lang.String


Not sure what component down the list is holding onto DataStructure, but I've included the full jmap output files.
",,alewando,benoitx,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Mar/07 17:53;yaussy;ASF.LICENSE.NOT.GRANTED--jmap.tar;https://issues.apache.org/jira/secure/attachment/12460929/ASF.LICENSE.NOT.GRANTED--jmap.tar",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-05-09 20:23:12.638,,,false,,,,,,,,,,,,,,,,,84711,,,Thu Oct 18 03:55:52 UTC 2007,,,,,,,,"0|i0s1lz:",161737,,,,,,,,,,,,,,,,,,,"16/Apr/07 15:41;yaussy;This is kind of an ugly one, but I traced it down to org/apache/activemq/broker/TransportConnector.java and its usage of the connections list.  The code pathway for setting up a Network connection goes as far as calling TransportConnector.onStarted, which adds to this list.  However, this path gets called prior to discovering that the target is not there, but TransportConnector.onStopped is never called.  Thus, TransportConnection objects are leaked into the connections list.

I did not discover yet what use this list is, other than potentially on Broker shutdown, if TransportConnector.stop is called.  So, as a quick work around, I've commented out usage of the connections list in TransportConnector.onStarted and onStopped.","09/May/07 20:23;alewando;Another data point, we are running in to this issue as well. It seems to be much worse when the number of connections is large. We run embedded brokers in each of our app server processes, with each broker connected to every other broker (fully connected network). When 9 of the 12 app servers were down it ran through 1.5GB of heap on each of the remaining 3 app servers in about an hour.

Any idea if a fix of this can be put out before 4.2 is released? This is a fairly serious issue for us.","21/May/07 19:31;alewando;I've looked in to this a bit more and agree with Kevin. TransportConnector is holding on to TransportConnection instances in the connections list. TransportConnector.onStopped() would remove them from the list, but it never gets called. The reason it never gets called is a bit of a long story:

If there are multiple NetworkConnector entries, DiscoveryNetworkConnector creates a bridge for each one. A bridge has a local and remote transport, one for each end of the connection. The 'local' transport of each of those bridge connections is an in-VM transport obtained from the VMTransportFactory. 
VMTransportFactory caches it VMTransportServer instances by 'host'. Because it caches these by host, and the host portion of the VM-transport is based on the broker name, all of the bridges' local transports share the same VMTransportServer instance.
When the bridge can't connect to the remote broker, DiscoveryNetworkConnector does the right thing and tries to dispose of the local and remote transports it created. This disposal includes calling VMTransportServer.stop(), which usually includes stopping the releated TransportConnections, which would in turn cause TransportConnector.onStopped(TransportConnection) to be called, thus cleaning up the connections list. BUT becuase there are other bridges running that share the same VMTransportServer, it's connectionCount variable is greater than 0 which prevents it from closing the related transport connections. So the TransportConnector lives on and holds on to useless TransportConnections.

I don't know what can be done to fix this, but at least the details may be useful to someone who wants to look at it further.","23/May/07 15:36;yaussy;Sorry, Adam.  I should have posted this a little while ago.  I ended up just commenting out the contents of onStarted and onStopped in TransportConnector.  The collections didn't appear to be used for anything - it has been a safe change for us so far.

There's another, similar, leak.  I'll open a new issue for that.  It involves rejected connections *into* the broker (as opposed to this one which is connections *out* being made by this broker).
","18/Oct/07 03:55;rajdavies;Added testcase:  org.apache.activemq.network.NetworkConnectionsCleanedupTest in svn revision 585843
profiled for an hour - memory usage remained below 3mb for the jvm in this time",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4.2 Broker memory leak wrt rejected incoming connections,AMQ-1250,12482228,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yaussy,yaussy,23/May/07 15:51,03/Oct/07 20:26,30/Jan/20 16:57,03/Oct/07 20:26,5.0.0,,,,,,5.0.0,,,Broker,,,,1,"There's another memory leak in the broker, which happens when the broker rejects a new connection attempt (say, when the broker thinks the current clientId already exists).  The problem is in org/apache/activemq/broker/TransportConnection::processAddConnection.  The line of code which calls broker.addConnection might throw an exception (i.e. if the clientId already exists), but the two HashMaps (brokerConnectionStates and localConnectionStates) have already been added to.  So, the exception is thrown and propagated back, but the two maps have not been emptied.

To fix this, I put a try-catch around the broker.addConnection, and if there's an exception, I remove the items from the two maps and then rethrow the exception.  Not sure if this is exactly the proper change - is there some other method that gets called in TransportConnection after the exception is thrown back?  I didn't immediately find anything.

So far, this change has been working for us.",,alewando,benoitx,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/07 15:51;yaussy;ASF.LICENSE.NOT.GRANTED--TransportConnection.java;https://issues.apache.org/jira/secure/attachment/12460915/ASF.LICENSE.NOT.GRANTED--TransportConnection.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-10-03 20:26:06.94,,,false,,,,,,,,,,,,,,,,,84706,,,Wed Oct 03 20:26:06 UTC 2007,,,,Patch Available,,,,"0|i0s1l3:",161733,,,,,,,,,,,,,,,,,,,"03/Oct/07 20:26;rajdavies;Fixed by revision 581715",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Stomp property ""expires"" not properly supported",AMQ-1366,12482094,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pdv,pdv,21/Aug/07 01:03,24/Aug/07 08:28,30/Jan/20 16:57,24/Aug/07 08:28,5.0.0,,,,,,4.1.1,,,Transport,,,,0,"When a stomp queue message sent with ""expires"" property set to non-zero, AMQ will not route it to the destination.

I have added a function to the unit test class org.apache.activemq.transport.stomp.StompTest, to expose that bug. 

public void testStompExpireProperty() throws Exception
It connects to a stomp server (AMQ) and subscribes for a queue.  Then it sends a SEND frame to this queue with ""expires"" set to non-zero value. On version 5.0, you will get this exception:

java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.net.SocketInputStream.read(SocketInputStream.java:182)
	at org.apache.activemq.transport.stomp.StompConnection.receiveFrame(StompConnection.java:64)
	at org.apache.activemq.transport.stomp.StompConnection.receiveFrame(StompConnection.java:56)
	at org.apache.activemq.transport.stomp.StompTest.testStompExpireProperty(StompTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:98)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:104)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

 


Attached is a diff file for the unit test.

",JDK1.6.0 WinXP Pro,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/07 01:03;pdv;ASF.LICENSE.NOT.GRANTED--difffile.txt;https://issues.apache.org/jira/secure/attachment/12460992/ASF.LICENSE.NOT.GRANTED--difffile.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,74211,,,Fri Aug 24 08:28:56 UTC 2007,,,,,,,,"0|i0tt07:",172008,,,,,,,,,,,,,,,,,,,"24/Aug/07 08:28;pdv;Sorry, this is a miss-report. The expires property should be set to the time of expiration (in millis) instead of the span to now.

test function like this worked all right:
public void testStompExpireProperty() throws Exception {

        String frame = ""CONNECT\n"" + ""login: brianm\n"" + ""passcode: wombats\n\n"" + Stomp.NULL;
        stompConnection.sendFrame(frame);

        frame = stompConnection.receiveFrame();
        assertTrue(frame.startsWith(""CONNECTED""));
        
        frame = ""SUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" + ""ack:auto\n\n"" + Stomp.NULL;
        stompConnection.sendFrame(frame);
        long expires = 10;
        frame = ""SEND\n"" + ""destination:/queue/"" + getQueueName() +""\n""+""expires:""+System.currentTimeMillis()+expires+""\n\n"" + ""Hello World"" + Stomp.NULL;
        stompConnection.sendFrame(frame);
        frame = stompConnection.receiveFrame();
        assertTrue(frame.startsWith(""MESSAGE""));

    }",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Ack range checking, etc.",AMQ-1081,12482081,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jk@penguinsfan.com,jk@penguinsfan.com,01/Dec/06 03:06,01/Aug/07 11:42,30/Jan/20 16:57,01/Aug/07 11:42,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"I'm not sure if this is serious; if not please reduce its severity.

There seem to be some confusing things happening with acknowledgments.

1. PrefetchSubscription.java does a ""range check"" on the acknowledgement.  However, when the acknowledgment gets to the JDBC or Memory TOPIC store (possibly other stores as well), it is assumed that all acknowledgements up to the last are counted.  This seems to suggest that the ""first"" part of the range should NOT be verified for >= (in other words, it should acknowledge everything from the beginning of the dispatched LinkedList to ack.getLastMessageId -- this means taking out the inAckRange variable, or acting like it is always true).  I believe this may need to happen ONLY when the prefetch is doing a topic (DurableTopicSubscription) , not a queue (QueueSubscription), but I'm totally not sure.

2. When kahaadaptor.KahaTopicMessageStore is called to do an acknowledge, it blindly does a removeFirst on the container, and never uses the MessageId parameter to do anything.  I believe it should do a getFirst, verify that that the MessageId of the ConsumerMessageRef matches the parameter, if it does not match, cancel the acknowledgement (not clear how to do this because the PrefetchSubscription.acknowledge has already done work).  In any event, crashing the subscription might be better than risking goofing up which messages have been acknowledged. (Another possibility is to walk the LinkedList looking for a match, but this doesn't seem to make sense given how PrefetchSubscription tracks the acknowledgments; I haven't fully thought this through).

3. Looks like TopicSubscription.java is ignoring all of the ID info in the ack parameter (this is the non-durable subscriber case).  Is this right?  Seems like client could just send extraneous ack messages with arbitrary IDs on a non-durable subscription and goof this up.

4.  In either durable or non-durable case, attempt by the client to ack out of sequence should error out on the client and not mess up any of the subscription state.  Most worried about the case where the messageis > than what has been delivered, not sure if the < case is a problem as long as it is just ignored without impact (which certainly does not look like the current impl in TopicSubscription.java; not sure about PrefetchSubscription.java).  It looks like this isn't being enforced, or did I miss something?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84724,,,2006-12-01 03:06:46.0,,,,,,,,"0|i180vj:",254944,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable topic message delivery to restarted consumer results in messages out of order.,AMQ-1201,12482053,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yaussy,yaussy,09/Mar/07 21:37,31/Jul/07 05:51,30/Jan/20 16:57,31/Jul/07 05:51,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"While testing AMQ 4.2 SNAPSHOT from 3/9, I can create the situation wherein a consumer that was killed and then restarted will get the ""prefetchLimit"" # of messages last, which means they are out of order.

setup:
1 Broker
Consumer on Durable topic, prefetchSize=20
Publisher publishes to Durable topic

Let some messages flow, then kill off Consumer.  Let a few thousand messages queue up, then restart the consumer.

The Broker begins redelivery of messages, and then when it gets down to the end of the queue, the very first 20 messages from when the Consumer first went down are delivered.  This means that those messages come out of order.
",,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1226,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84712,,,Wed May 23 16:17:06 UTC 2007,,,,,,,,"0|i0s1fz:",161710,,,,,,,,,,,,,,,,,,,"09/Mar/07 21:38;yaussy;Sorry, forgot to mention that I am using Kaha persistence.","16/Apr/07 15:28;yaussy;Btw: it looks like this works just fine in AMQ 4.2.","23/May/07 16:17;yaussy;AMQ-1226 has the fix for this for AMQ 4.1.x codebase.  And, as I mentioned in this issue, AMQ 4.2 out-of-the-box did not exhibit this problem.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
avoid use of XHTML in activemq-web-console so things work great in IE 6,AMQ-767,12482017,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jstrachan,jstrachan,21/Jun/06 12:00,30/Jul/07 21:49,30/Jan/20 16:57,30/Jul/07 21:49,4.0.1,,,,,,5.0.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/06 06:55;kgallo;mainDecorator.patch;https://issues.apache.org/jira/secure/attachment/12460616/mainDecorator.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-10-17 19:47:11.0,,,false,,,,,,,,,,,,,,,,,84410,,,Thu Jul 05 22:53:39 UTC 2007,,,,,,,,"0|i17ztj:",254773,,,,,,,,,,,,,,,,,,,"17/Oct/06 19:47;cgs;All of our XHTML works perfectly in IE 6.  What's the issue?","16/Nov/06 06:51;kgallo;When activemq-web-console is deployed on IE 6, it just shows a blank page.

<script type="""" src=""""/> doesnt work on IE 6

it should be:
<script type="""" src=""""></script>

I've attached a patch. :)","16/Nov/06 06:55;kgallo;changed <script/> to <script></script> for main.jsp in decorators","16/Nov/06 07:34;cgs;IE 6 was doing the right thing.

http://www.w3.org/TR/html4/interact/scripts.html#h-18.2.1

http://www.w3.org/TR/xhtml1/#guidelines
","05/Jul/07 22:53;msiegenthaler;This is fixed in trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-persistent messages on a Queue expire prior to TimeToLive for small values ,AMQ-1162,12481818,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,bruce-c,bruce-c,14/Feb/07 02:01,30/Jul/07 21:12,30/Jan/20 16:57,30/Jul/07 21:12,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"In ActiveMQ3.2.1 non-persistent messages on a Queue expire prior to TimeToLive for relatively small values. 
I assume the cause is clock discrepancies between the client and broker machines.. 

The objective of timeToLive is to determine how long the Broker retains a message before discarding it. 

Since clock differences can be significant and since the original message TimeToLive and the original message timeStamp do have a common reference(clock), it would seem to make sense for the Broker to recalculate the timeToLive based on the difference of these two values.

SEE ALSO: Bug AMQ-975","AMQ - 3.2.1; Client - Windows XP SP 2; JRE1.5.0_06 
Broker - Windows XP SP 2 or Linux RedHat 8.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:48:09.323,,,false,,,,,,,,,,,,,,,,,84713,,,Tue Jun 12 09:48:09 UTC 2007,,,,,,,,"0|i180z3:",254960,,,,,,,,,,,,,,,,,,,"12/Jun/07 09:48;jstrachan;added an affected version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expired Messages being delivered,AMQ-936,12482062,12482958,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,patrick.hourigan@mdsuk.com,patrick.hourigan@mdsuk.com,22/Sep/06 08:32,30/Jul/07 16:03,30/Jan/20 16:57,30/Jul/07 16:03,4.0.1,4.0.2,,,,,5.0.0,,,,,,,0,"I have a sample app that sends a message to a queue, that has producer.setTimeToLive(5000);

I take this to mean that any message sent via this producer will expire after 5 seconds

When I attach a consumer and try to consume after ay 10 seconds the messages are delivered. ",Win XP. ActiveMQ 4.0.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-09-30 17:27:53.0,,,false,,,,,,,,,,,,,,,,,74196,,,Mon Jul 30 16:03:51 UTC 2007,,,,,,,,"0|i180db:",254862,,,,,,,,,,,,,,,,,,,"30/Sep/06 17:27;foconer;Added a unit test ""JmsSendReceiveWithMessageExpirationTest"" in trunk source under activemq-core module that would test consuming of expired messages. You may also try the examples in the distribution by modifying the timeToLive property in build.xml.","30/Jul/07 06:48;resigned@exist.com;Please be informed that I am no longer accessible through this email
address. Pls refrain from sending further messages.

I will just personally contact you with my new email address.

For any concerns / issues / inputs relating to your transactions with
Exist, kindly forward email to hr@exist.com.

Thank you
HR Dept
","30/Jul/07 16:03;rajdavies;Fixed by SVN revision 561026",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Misbehaving consumer can affect message delivery to other consumers for a given topic.,AMQ-349,12482074,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yaussy,yaussy,09/Sep/05 17:57,30/Jul/07 11:40,30/Jan/20 16:57,30/Jul/07 11:40,3.1,,,,,,5.0.0,,,Broker,,,,1,"If you have a supplier publishing to a topic, with two consumers both consuming that topic, a problem with one of the consumers can eventually stop message flow to the other consumer.  The consumer-problem is specifically categorized as some sort of freeze-up, such that the broker eventually blocks on the socket write to that consumer.  The freeze-up could be the process itself (perhaps a problem with the JVM), the network, or perhaps the machine that the consumer is running on panics and goes away.

Once the socket becomes blocked, the broker will queue (upto maxOutstandingMessages) to the consumer.  The properly behaving consumer continues to receive events at this point.  However, once the queue size reaches maxOutstandingMessages, the broker (the session dispatcher thread for the given topic) will block on the PooledExecutor.execute method.  This now prohibits any further message delivery for the given topic to the properly behaving consumer.

I'm wondering why the ""waitWhenBlocked"" policy on the PooledExecutor is used?  These are NON_PERSISTENT messages, so what would be the problem with potentially using one of the discard policies, such as ""discardOldestWhenBlocked"" (or ""discardWhenBlocked"")?  Seems like one of these two policies should be used by default, and the ""waitWhenBlocked"" would be a configurable option.  Our preference would be to use ""discardOldestWhenBlocked"".  I changed TcpTransportServerChannel.java to use ""discardOldestWhenBlocked"", which gave us our desired functionality.

From our point of view, having the broker affect all consumers on behalf of one misbehaving one is bad.  So, what might we be missing with regards to using ""discardOldestWhenBlocked""?","Solaris, JDK 1.4",yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49053,,,2005-09-09 17:57:22.0,,,,,,,,"0|i0s1fj:",161708,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock on ServerSessionImpl that hangs all connection consumers,AMQ-1267,12482063,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jonasc,jonasc,07/Jun/07 14:34,30/Jul/07 11:36,30/Jan/20 16:57,30/Jul/07 11:36,4.0.2,,,,,,5.0.0,,,,,,,0,"We are encountering regularly the deadlock mentioned below hours into program execution. It has been correlated with the exhaustion of the JVM heap, though it is unclear if running out of memory is a cause or consequence of this deadlock. At the least, system memory usage seems stable otherwise. We well be taking further thread dumps of the system to try to pinpoint which occurs first.

Is this a known issue in AMQ 4.0.2, or do you have any other insights?

Found one Java-level deadlock:
=============================
""Thread-20"":
  waiting to lock monitor 0x5f80a2bc (object 0x73145af0, a java.lang.Object),
  which is held by ""Thread-18""
""Thread-18"":
  waiting to lock monitor 0x5f80a27c (object 0x73124630, a org.apache.activemq.ra.ServerSessionPoolImpl),
  which is held by ""Thread-20""

Java stack information for the threads listed above:
===================================================
""Thread-20"":
	at org.apache.activemq.ra.ServerSessionImpl.start(ServerSessionImpl.java:118)
	- waiting to lock <0x73145af0> (a java.lang.Object)
	at org.apache.activemq.ra.ServerSessionPoolImpl.dispatchToSession(ServerSessionPoolImpl.java:149)
	at org.apache.activemq.ra.ServerSessionPoolImpl.removeFromPool(ServerSessionPoolImpl.java:176)
	- locked <0x73124630> (a org.apache.activemq.ra.ServerSessionPoolImpl)
	at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:178)
	- locked <0x731460e8> (a java.lang.Object)
	- locked <0x73145fe0> (a org.apache.activemq.ra.ServerSessionImpl)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:732)
	at java.lang.Thread.run(Thread.java:595)
""Thread-18"":
	at org.apache.activemq.ra.ServerSessionPoolImpl.removeFromPool(ServerSessionPoolImpl.java:171)
	- waiting to lock <0x73124630> (a org.apache.activemq.ra.ServerSessionPoolImpl)
	at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:178)
	- locked <0x73145af0> (a java.lang.Object)
	- locked <0x731459e8> (a org.apache.activemq.ra.ServerSessionImpl)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:732)
	at java.lang.Thread.run(Thread.java:595)

Found 1 deadlock.",Java 1.5.0_11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84415,,,2007-06-07 14:34:27.0,,,,,,,,"0|i181b3:",255014,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
hasSpace call looks like it may cause messages to be skipped,AMQ-1080,12482089,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jk@penguinsfan.com,jk@penguinsfan.com,01/Dec/06 01:59,29/Jul/07 19:05,30/Jan/20 16:57,29/Jul/07 19:05,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"DefaultJDBCAdapter makes calls back to JDBCMessageRecoveryListener.recoverMessage.  This is done in a loop and the loop unconditionally goes through the messages until the end of the ResultSet or the specified maximum is processed.  However JDBCMessageStore's implementation of the listener can ""ignore"" the message if a call to hasSpace fails.  However, nothing tells the calling loop to stop, so there are two issues:

1.  The loop keeps running, which is slightly inefficient (could be more than slightly for non-JDBC stores).
2.  If hasSpace suddenly reports it has space during this loop, messages have been skipped and the sequence ID is set after the point so those skipped messages are not going to be recovered.

At first glance, it looks like the Kaha store is written better, but it might be a good idea to make recoverMessage / recoverMessageReference (in RecoveryMessageListener) return a boolean and ensure that the loop is terminated in the event that False was returned.  As currently written, there seems to be no ""air tight"" way for recovery to fail gracefully, maybe throwing an exception is ""safe"" and does all that is needed but I'm not sure.

As a separate, related issue, suppose the hasSpace eventually returns False, as this can be due to a usageManager reporting that there is no space.  Suppose that all the space is used by consumers other than one specific one.  What ""prods"" the messages to begin flowing again to that one consumer once the UsageManager indicates that space is available?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-07-29 19:05:01.915,,,false,,,,,,,,,,,,,,,,,84725,,,Sun Jul 29 19:05:01 UTC 2007,,,,,,,,"0|i180vr:",254945,,,,,,,,,,,,,,,,,,,"29/Jul/07 19:05;rajdavies;Fixed by SVN revision 560783",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use of Temporary Destinations over broker networks can cause the network bridges to die.,AMQ-804,12482033,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chirino,chirino,10/Jul/06 21:41,29/Jul/07 09:04,30/Jan/20 16:57,29/Jul/07 09:04,5.0.0,,,,,,5.0.0,,,Broker,,,,1,"And when the bridge dies, it is not re-established.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:48:09.577,,,false,,,,,,,,,,,,,,,,,84735,,,Tue Jun 12 09:48:09 UTC 2007,,,,,,,,"0|i18033:",254816,,,,,,,,,,,,,,,,,,,"10/Jul/06 21:45;chirino;I noticed that the issue is cause when the client the created the temporary destination and a subscription to that temporary destination is killed.  The remote broker sometimes gets the destination removed and consumer removed commands in the wrong order.  The error happens when the destination removed arrives before the consumer removed at the network bridge.  When the destination remove command executes it fails because it still has a subscription active on it.","10/Jul/06 22:11;chirino;If AMQ-805 is implemented, then at least this kind of error can be recovered from.","12/Jun/07 09:48;jstrachan;added an affected version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StoreTest.testLock() fails due to java.io.IOException: The process cannot access the file because another process has locked a portion of the file on Windows,AMQ-1348,12482025,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,27/Jul/07 18:15,27/Jul/07 21:13,30/Jan/20 16:57,27/Jul/07 21:13,5.0.0,,,,,,5.0.0,,,Message Store,,,,0,"{code}
java.io.IOException: The process cannot access the file because another process has locked a portion of the file
	at java.io.RandomAccessFile.readBytes(Native Method)
	at java.io.RandomAccessFile.read(Unknown Source)
	at java.io.RandomAccessFile.readFully(Unknown Source)
	at java.io.RandomAccessFile.readFully(Unknown Source)
	at org.apache.activemq.kaha.impl.index.StoreIndexReader.readItem(StoreIndexReader.java:46)
	at org.apache.activemq.kaha.impl.index.IndexManager.initialize(IndexManager.java:177)
	at org.apache.activemq.kaha.impl.index.IndexManager.<init>(IndexManager.java:55)
	at org.apache.activemq.kaha.impl.KahaStore.getIndexManager(KahaStore.java:358)
	at org.apache.activemq.kaha.impl.KahaStore.initialize(KahaStore.java:428)
	at org.apache.activemq.kaha.impl.KahaStore.doesListContainerExist(KahaStore.java:250)
	at org.apache.activemq.kaha.impl.KahaStore.doesListContainerExist(KahaStore.java:246)
	at org.apache.activemq.kaha.StoreTest.testLock(StoreTest.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

{code}",Windows.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84696,,,Fri Jul 27 21:13:50 UTC 2007,,,,,,,,"0|i181lb:",255060,,,,,,,,,,,,,,,,,,,"27/Jul/07 18:17;chirino;Looks like the root index cannot be created due to a locking situation in windows.  Also the lock() method executes after the root index is created so a proper file locking attempt is not yet reached.  but the lock() method depends on the root index being created so we are in a bit of a catch 22.

","27/Jul/07 21:13;chirino;fixed in 560352",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unexpected IllegalStateException when using the VMPendingQueueMessageStoragePolicy,AMQ-1346,12482082,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,27/Jul/07 01:21,27/Jul/07 16:06,30/Jan/20 16:57,27/Jul/07 16:06,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"{code}
2007-07-26 21:17:19,349 [enerContainer-1] ERROR efaultMessageListenerContainer - Setup of JMS message listener invoker failed - trying to recover
javax.jms.JMSException: java.lang.IllegalStateException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:46)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1229)
	at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1804)
	at org.apache.activemq.ActiveMQMessageConsumer.<init>(ActiveMQMessageConsumer.java:197)
	at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:927)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createConsumer(AbstractPollingMessageListenerContainer.java:437)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createListenerConsumer(AbstractPollingMessageListenerContainer.java:216)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:887)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:870)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:811)
	at java.lang.Thread.run(Thread.java:613)
Caused by: java.lang.IllegalStateException
	at java.util.LinkedList$ListItr.remove(LinkedList.java:590)
	at org.apache.activemq.broker.region.cursors.VMPendingMessageCursor.remove(VMPendingMessageCursor.java:88)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1015)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:996)
	at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:216)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:240)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:344)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:96)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:561)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:313)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:279)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:126)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:85)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
	... 1 more
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84697,,,Fri Jul 27 15:43:22 UTC 2007,,,,,,,,"0|i181lj:",255061,,,,,,,,,,,,,,,,,,,"27/Jul/07 15:43;chirino;fixed in rev 560282",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock can occur when cerating and deleting many destinations concurrently,AMQ-1344,12482061,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,24/Jul/07 18:26,24/Jul/07 18:28,30/Jan/20 16:57,24/Jul/07 18:28,,,,,,,5.0.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95761,,,Tue Jul 24 18:28:26 UTC 2007,,,,,,,,"0|i181lr:",255062,,,,,,,,,,,,,,,,,,,"24/Jul/07 18:28;chirino;fixed in rev 559155",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network conntions not shutdown propertly when a InvalidClientIDException occurs,AMQ-1343,12482034,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,24/Jul/07 17:50,24/Jul/07 17:51,30/Jan/20 16:57,24/Jul/07 17:51,,,,,,,5.0.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95760,,,Tue Jul 24 17:51:42 UTC 2007,,,,,,,,"0|i181lz:",255063,,,,,,,,,,,,,,,,,,,"24/Jul/07 17:51;chirino;fixed in rev 559139",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multicast Discovery Agent can get into a tight loop reconnecting if the network connection fails to get established,AMQ-1342,12482049,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,24/Jul/07 17:42,24/Jul/07 17:43,30/Jan/20 16:57,24/Jul/07 17:43,,,,,,,5.1.0,,,,,,,0,"If the multicast discovery agent discovers a bogus broker which is not properly accepting connections, a tight loop can occur where the discovery agent continually discovers the bogus broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95759,,,Tue Jul 24 17:43:47 UTC 2007,,,,,,,,"0|i0s15r:",161664,,,,,,,,,,,,,,,,,,,"24/Jul/07 17:43;chirino;Fixed in rev 559132",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread gets stuck in a WAIT and never returns,AMQ-1340,12481978,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,24/Jul/07 16:18,24/Jul/07 16:19,30/Jan/20 16:57,24/Jul/07 16:19,,,,,,,5.0.0,,,Broker,,,,0,"The thread that gets stuck in the wait is:

{code}
ActiveMQ Connection Dispatcher: 8012937"" daemon prio=6 tid=0x04565400 nid=0xb4 in Object.wait() [0x051bf000..0x051bfd18]
  java.lang.Thread.State: WAITING (on object monitor)
       at java.lang.Object.wait(Native Method)
       - waiting on <0x0a71db28> (a java.lang.Object)
       at java.lang.Object.wait(Object.java:485)
       at org.apache.activemq.thread.DedicatedTaskRunner.shutdown(DedicatedTaskRunner.java:70)
       - locked <0x0a71db28> (a java.lang.Object)
       at org.apache.activemq.broker.AbstractConnection.stop(AbstractConnection.java:190)
       at org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:95)
       at org.apache.activemq.broker.AbstractConnection.processShutdown(AbstractConnection.java:389)
       at org.apache.activemq.command.ShutdownInfo.visit(ShutdownInfo.java:35)
       at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:315)
       at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)
       at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:91)
       at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
       at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
       at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:58)
       at org.apache.activemq.network.DemandForwardingBridgeSupport.stop(DemandForwardingBridgeSupport.java:296)
       at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:39)
       at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceRemove(DiscoveryNetworkConnector.java:154)
       at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent.serviceFailed(SimpleDiscoveryAgent.java:117)
       at org.apache.activemq.network.DiscoveryNetworkConnector$2.fireServiceFailed(DiscoveryNetworkConnector.java:254)
       at org.apache.activemq.network.DiscoveryNetworkConnector$2.serviceLocalException(DiscoveryNetworkConnector.java:241)
       at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:536)
       at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:118)
       at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:91)
       at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
       at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
       - locked <0x0a71de08> (a java.lang.Object)
       at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:58)
       at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:213)
       at org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:842)
       at org.apache.activemq.broker.AbstractConnection.iterate(AbstractConnection.java:879)
       at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:100)
       at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
       at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,88742,,,Tue Jul 24 16:19:56 UTC 2007,,,,,,,,"0|i181mf:",255065,,,,,,,,,,,,,,,,,,,"24/Jul/07 16:19;chirino;fix in rev 559092",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AdvisoryBroker leaks destinations created ""from top"" by the RegionBroker",AMQ-1322,12482065,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,mteira,mteira,13/Jul/07 12:50,24/Jul/07 14:03,30/Jan/20 16:57,24/Jul/07 14:03,4.1.1,5.2.0,,,,,4.1.2,,,Broker,,,,0,"Consider the following situation:
 - The AdvisoryBroker sends a message to a non existent yet advisory topic. (a producer advisory, for example).
 - The RegionBroker sends the request to the TopicRegion.
 - The TopicRegion automatically creates the new topic, sending:
    context.getBroker().addDestination(context,  destination);
- This eventually reaches again the AdvisoryBroker that adds the destination to its destination map.

Now, when the queue that triggered the creation of the advisory topic is deleted, the AdvisoryBroker attempts to delete the consumer and producer related topics, but doesn't clear them from its own destination map.

I'm attaching a proposed fix for the 4.1 branch, where:

- The AdvisoryBroker tries to delete those producer and consumer advisories from top of the broker.
- This is only made if the incoming destination is not a temporary itself, to avoid improper attempts to delete advisories of advisories.

In the trunk , the situation is different. 
- The TopicRegion (actually in AbstracRegion code) creates the 'on demand' topics internally, without advising the RegionBroker.
- So, since the RegionBroker is not aware of these newly created topics, AdvisoryBroker attempts to delete the producer and consumer advisory topics are futile.
",activemq svn branch 4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jul/07 12:50;mteira;ASF.LICENSE.NOT.GRANTED--AdvisoryBroker.patch;https://issues.apache.org/jira/secure/attachment/12460838/ASF.LICENSE.NOT.GRANTED--AdvisoryBroker.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-07-24 12:32:37.956,,,false,,,,,,,,,,,,,,,,,38753,,,Tue Jul 24 12:32:37 UTC 2007,,,,Patch Available,,,,"0|i181ef:",255029,,,,,,,,,,,,,,,,,,,"24/Jul/07 12:32;jlim;patch applied in 4.1 branch r559023",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topics leaked in DestinationMapNode,AMQ-1319,12482046,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,mteira,mteira,12/Jul/07 11:21,24/Jul/07 12:32,30/Jan/20 16:57,24/Jul/07 12:32,4.1.1,,,,,,4.1.2,,,Broker,,,,0,"DestinationMapNode removeAll method is not erasing the given Topic from all the anyChild nodes it should. This leads to severe memory leaks in situations where a lot of advisory topics are created (i.e. working with temporary queues).

As this effect is not found in the trunk, I've found that the related code was heavily changed in r478324. So, I've backported that changes (related with AMQ-1068) to 4.1 branch. I had to make some additional changes to make the DestinationMapNode class honour the contract if the new DestinationNode interface as needed for java 1.4.

I'm attaching the patch.","activemq from svn branch 4.1
Standalone broker running with JDBC persistence and no journal",,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/07 11:21;mteira;ASF.LICENSE.NOT.GRANTED--DestinationMapNode-branch-1.4.patch;https://issues.apache.org/jira/secure/attachment/12460936/ASF.LICENSE.NOT.GRANTED--DestinationMapNode-branch-1.4.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-07-24 12:32:55.254,,,false,,,,,,,,,,,,,,,,,84561,,,Tue Jul 24 12:32:55 UTC 2007,,,,Patch Available,,,,"0|i181f3:",255032,,,,,,,,,,,,,,,,,,,"24/Jul/07 12:32;jlim;patch applied in 4.1 branch r559023",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in ActiveMQ Failover Worker,AMQ-897,12482044,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mlum,mlum,25/Aug/06 22:20,23/Jul/07 10:36,30/Jan/20 16:57,23/Jul/07 10:36,4.0.1,,,,,,5.0.0,,,Broker,,,,0,"

Full thread dump Java HotSpot(TM) Client VM (1.5.0_06-b05 mixed mode, sharing):

""ActiveMQ Transport: tcp://XXX/XXX:61616"" prio=1 tid=0x08091510 nid=0x2f4c waiting for monitor entry [0xafdc9000..0xafdca130]
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportInterupted(DemandForwardingBridgeSupport.java:134)
        - waiting to lock <0x3654b290> (a org.apache.activemq.network.DemandForwardingBridgeSupport$2)
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
        at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:223)
        at org.apache.activemq.transport.failover.FailoverTransport.access$300(FailoverTransport.java:53)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onException(FailoverTransport.java:111)
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:94)
        at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:120)
        at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)
        at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:100)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:156)
        at java.lang.Thread.run(Thread.java:595)

""Thread-7"" daemon prio=1 tid=0x085263d8 nid=0x2f4b waiting for monitor entry [0xafe4b000..0xafe4b1b0]
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:335)
        - waiting to lock <0x365793b0> (a java.lang.Object)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x36579610> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startRemoteBridge(DemandForwardingBridgeSupport.java:235)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$4.run(DemandForwardingBridgeSupport.java:197)

""ActiveMQ Transport: tcp:///127.0.0.1:40496"" daemon prio=1 tid=0x0851c070 nid=0x2f3c runnable [0xafac3000..0xafac3fb0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 9847682"" daemon prio=1 tid=0x0851bc30 nid=0x2f3b in Object.wait() [0xafb44000..0xafb45030]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x37849a98> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///127.0.0.1:40386"" daemon prio=1 tid=0x0855b060 nid=0x2b0e runnable [0xb06db000..0xb06dc1b0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 11854491"" daemon prio=1 tid=0x085110d8 nid=0x2b0d in Object.wait() [0xafbc5000..0xafbc5e30]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36406180> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36406180> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///127.0.0.1:40385"" daemon prio=1 tid=0x0855bfe0 nid=0x2b09 runnable [0xb0af6000..0xb0af6eb0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 14732323"" daemon prio=1 tid=0x085822e8 nid=0x2b07 in Object.wait() [0xb0bf8000..0xb0bf8f30]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36408358> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36408358> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///127.0.0.1:40381"" daemon prio=1 tid=0x0855aec0 nid=0x2af1 runnable [0xb0a75000..0xb0a75fb0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 2804837"" daemon prio=1 tid=0x0850ad00 nid=0x2af0 in Object.wait() [0xb0cfc000..0xb0cfd030]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x3640a530> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x3640a530> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///10.7.93.117:47626"" daemon prio=1 tid=0x08092be8 nid=0x2ad9 runnable [0xafcc7000..0xafcc81b0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 5165021"" daemon prio=1 tid=0x08092600 nid=0x2ad8 in Object.wait() [0xafd48000..0xafd48e30]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x3640c708> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x3640c708> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///XXX:49524"" daemon prio=1 tid=0x08094ef0 nid=0x2a9d runnable [0xafecb000..0xafecbfb0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 10884088"" daemon prio=1 tid=0x08093c20 nid=0x2a9c in Object.wait() [0xaff4c000..0xaff4d030]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x3640e8e0> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x3640e8e0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///XXX:49523"" daemon prio=1 tid=0x08093e90 nid=0x2a9b runnable [0xaffcd000..0xaffce0b0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 30810736"" daemon prio=1 tid=0x08526ca8 nid=0x2a9a in Object.wait() [0xb004e000..0xb004f130]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36410ab8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36410ab8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x08524730 nid=0x2a99 waiting for monitor entry [0xb00cf000..0xb00d01b0]
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportInterupted(DemandForwardingBridgeSupport.java:134)
        - waiting to lock <0x3654b290> (a org.apache.activemq.network.DemandForwardingBridgeSupport$2)
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
        at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:223)
        at org.apache.activemq.transport.failover.FailoverTransport.access$300(FailoverTransport.java:53)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onException(FailoverTransport.java:111)
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:94)
        at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:120)
        at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)
        at org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:101)
        at org.apache.activemq.transport.InactivityMonitor.access$000(InactivityMonitor.java:35)
        at org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:51)
        at edu.emory.mathcs.backport.java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:431)
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.runAndReset(FutureTask.java:198)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:189)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:213)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport: tcp:///XXX:49522"" daemon prio=1 tid=0x08520f28 nid=0x2a98 runnable [0xb0150000..0xb0150e30]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 9363478"" daemon prio=1 tid=0x0851d400 nid=0x2a97 in Object.wait() [0xb01d1000..0xb01d1eb0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36412dd0> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36412dd0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x08527a88 nid=0x2a96 in Object.wait() [0xb0252000..0xb0252f30]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:432)
        at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:301)
        at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
        - locked <0x36410b38> (a java.lang.Object)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:590)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:477)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:674)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x08527360 nid=0x2a95 in Object.wait() [0xb02d3000..0xb02d3fb0]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:432)
        at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:301)
        at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
        - locked <0x36410b38> (a java.lang.Object)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:590)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:477)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:674)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport: tcp:///XXX:49521"" daemon prio=1 tid=0x0851fc98 nid=0x2a94 runnable [0xb0354000..0xb0355030]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 15779934"" daemon prio=1 tid=0x0851f950 nid=0x2a93 in Object.wait() [0xb04d7000..0xb04d80b0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x364150a8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x364150a8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x083acc68 nid=0x2a90 in Object.wait() [0xb03d5000..0xb03d61b0]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:432)
        at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:301)
        at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
        - locked <0x36410b38> (a java.lang.Object)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:590)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:477)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:674)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x083ac700 nid=0x2a8f in Object.wait() [0xb0456000..0xb0456e30]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:432)
        at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:301)
        at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
        - locked <0x36410b38> (a java.lang.Object)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:590)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:477)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:674)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport: tcp://XXX/10.7.93.117:61616"" prio=1 tid=0x083ad3d0 nid=0x2a8d runnable [0xb0558000..0xb0558f30]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Failover Worker: 2891371"" daemon prio=1 tid=0xb0e0f1c0 nid=0x2a8c in Object.wait() [0xb05d9000..0xb05d9fb0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36417380> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36417380> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Connection Dispatcher: 21350489"" daemon prio=1 tid=0xb0e0d788 nid=0x2a8b in Object.wait() [0xb065a000..0xb065b030]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36417400> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36417400> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Failover Worker: 5862378"" daemon prio=1 tid=0xb0e0ea00 nid=0x2a89 waiting for monitor entry [0xb076f000..0xb0770130]
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:43)
        - waiting to lock <0x36579610> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportResumed(DemandForwardingBridgeSupport.java:164)
        - locked <0x3654b290> (a org.apache.activemq.network.DemandForwardingBridgeSupport$2)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:102)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:102)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:175)
        - locked <0x365793b0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:87)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Connection Dispatcher: 12115695"" daemon prio=1 tid=0xb0e0a718 nid=0x2a88 in Object.wait() [0xb07f0000..0xb07f11b0]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:474)
        at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:179)
        - locked <0x382fb880> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.waitStarted(DemandForwardingBridgeSupport.java:836)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:462)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:116)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x36417648> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:211)
        at org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:581)
        at org.apache.activemq.broker.AbstractConnection.iterate(AbstractConnection.java:597)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:87)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport Status Monitor: vm://localhost"" daemon prio=1 tid=0xb0e08090 nid=0x2a87 waiting on condition [0xb0871000..0xb0871e30]
        at java.lang.Thread.sleep(Native Method)
        at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Status Monitor: stomp"" daemon prio=1 tid=0xb0e01fb0 nid=0x2a86 waiting on condition [0xb08f2000..0xb08f2eb0]
        at java.lang.Thread.sleep(Native Method)
        at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Server: tcp://XXX:61613?wireFormat=stomp"" daemon prio=1 tid=0xb0e01ab0 nid=0x2a85 runnable [0xb0973000..0xb0973f30]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x36417840> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:123)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Status Monitor: default"" daemon prio=1 tid=0xb0e00f48 nid=0x2a84 waiting on condition [0xb09f4000..0xb09f4fb0]
        at java.lang.Thread.sleep(Native Method)
        at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Server: tcp://XXX:61616"" daemon prio=1 tid=0xb0e01630 nid=0x2a83 runnable [0xb1061000..0xb1062030]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x36417a10> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:123)
        at java.lang.Thread.run(Thread.java:595)

""RMI LeaseChecker"" daemon prio=1 tid=0x08586318 nid=0x2a80 waiting on condition [0xb0b78000..0xb0b781b0]
        at java.lang.Thread.sleep(Native Method)
        at sun.rmi.transport.DGCImpl$LeaseChecker.run(DGCImpl.java:310)
        at java.lang.Thread.run(Thread.java:595)

""RMI RenewClean-[XXX:40355]"" daemon prio=1 tid=0x0850cd08 nid=0x2a7e in Object.wait() [0xb0c79000..0xb0c79eb0]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x36417bc0> (a java.lang.ref.ReferenceQueue$Lock)
        at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:500)
        at java.lang.Thread.run(Thread.java:595)

""GC Daemon"" daemon prio=1 tid=0x0857f9d0 nid=0x2a7c in Object.wait() [0xb0d7d000..0xb0d7dfb0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x364035b8> (a sun.misc.GC$LatencyLock)
        at sun.misc.GC$Daemon.run(GC.java:100)
        - locked <0x364035b8> (a sun.misc.GC$LatencyLock)

""RMI Reaper"" prio=1 tid=0x0857ea58 nid=0x2a7b in Object.wait() [0xb0dfe000..0xb0dff030]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x363ffae8> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x363ffae8> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
        at sun.rmi.transport.ObjectTable$Reaper.run(ObjectTable.java:336)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-0"" daemon prio=1 tid=0x0857b1c8 nid=0x2a7a runnable [0xb0fe0000..0xb0fe10b0]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x36403220> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:334)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-1099"" daemon prio=1 tid=0x084fae08 nid=0x2a78 runnable [0xb10e2000..0xb10e31b0]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x36400498> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:334)
        at java.lang.Thread.run(Thread.java:595)

""Timer-0"" daemon prio=1 tid=0x084fa780 nid=0x2a77 in Object.wait() [0xb1163000..0xb1163e30]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x363ffc10> (a java.util.TaskQueue)
        at java.lang.Object.wait(Object.java:474)
        at java.util.TimerThread.mainLoop(Timer.java:483)
        - locked <0x363ffc10> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""Low Memory Detector"" daemon prio=1 tid=0x080a3688 nid=0x2a75 runnable [0x00000000..0x00000000]

""CompilerThread0"" daemon prio=1 tid=0x080a20e0 nid=0x2a74 waiting on condition [0x00000000..0xb1e52998]

""Signal Dispatcher"" daemon prio=1 tid=0x080a1168 nid=0x2a73 runnable [0x00000000..0x00000000]

""Finalizer"" daemon prio=1 tid=0x0809a3d8 nid=0x2a72 in Object.wait() [0xb2154000..0xb21550b0]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x36390738> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=1 tid=0x08099680 nid=0x2a71 in Object.wait() [0xb21d6000..0xb21d6130]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:474)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked <0x36390680> (a java.lang.ref.Reference$Lock)

""main"" prio=1 tid=0x0805cac8 nid=0x2a68 in Object.wait() [0xbfffc000..0xbfffd1a8]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36417cd0> (a [Z)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.console.command.StartCommand.waitForShutdown(StartCommand.java:106)
        - locked <0x36417cd0> (a [Z)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:67)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:49)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:81)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:49)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:45)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:135)
        at org.apache.activemq.console.Main.main(Main.java:67)

""VM Thread"" prio=1 tid=0x08096ae8 nid=0x2a70 runnable 

""VM Periodic Task Thread"" prio=1 tid=0x080a4b70 nid=0x2a76 waiting on condition 


Found one Java-level deadlock:
=============================
""ActiveMQ Failover Worker: 5862378"":
  waiting to lock monitor 0x0809c22c (object 0x36579610, a java.lang.Object),
  which is held by ""Thread-7""
""Thread-7"":
  waiting to lock monitor 0x0809c2ac (object 0x365793b0, a java.lang.Object),
  which is held by ""ActiveMQ Failover Worker: 5862378""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Failover Worker: 5862378"":
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:43)
        - waiting to lock <0x36579610> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportResumed(DemandForwardingBridgeSupport.java:164)
        - locked <0x3654b290> (a org.apache.activemq.network.DemandForwardingBridgeSupport$2)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:102)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:102)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:175)
        - locked <0x365793b0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:87)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)
""Thread-7"":
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:335)
        - waiting to lock <0x365793b0> (a java.lang.Object)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x36579610> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startRemoteBridge(DemandForwardingBridgeSupport.java:235)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$4.run(DemandForwardingBridgeSupport.java:197)

Found 1 deadlock.
","Linux 2.6.9-34.ELsmp #1 SMP Fri Feb 24 16:54:53 EST 2006 i686 i686 i386 GNU/Linux
Dell PE 850 with 4 GB RAM and 1x dual core 3GHz Pentium D
Java HotSpot(TM) Client VM (build 1.5.0_06-b05, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84388,,,2006-08-25 22:20:28.0,,,,,,,,"0|i0s16n:",161668,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"duplicate delivery, already consumed messages are reconsumed after server restart",AMQ-361,12482037,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,gokturk,gokturk,14/Sep/05 22:44,23/Jul/07 10:26,30/Jan/20 16:57,23/Jul/07 10:26,4.0,,,,,,5.0.0,,,Broker,JCA Container,Message Store,,1,"I am running an embedded activemq broker inside jboss server, I send 1000 messages with ~10K size each to a queue, these messages are consumed by MDBs. After all the messages are consumed, I check the queue via hermes, it also shows no message in the queue. Everything works perfect up to this point. I observe the problem after I stop the jboss server. I connect to derby database via networkserver, I still see some messages in activemq_msgs table. I shutdown derby networkserver and start jboss again, I see from the log that some of the messages which were consumed previously, are being consumed again. If I start the server without deploying the MDB and check the queue via hermes, I see some but not all the messages which were consumed previously still in the queue, before restart hermes was showing no messages. ","windows xp, jdk 1.5, embedded activemq 3.1 broker, jboss 4.02, persistent messages with  derby db.",,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/05 11:12;tquas;ASF.LICENSE.NOT.GRANTED--1.log;https://issues.apache.org/jira/secure/attachment/12460537/ASF.LICENSE.NOT.GRANTED--1.log",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2005-09-20 10:15:30.0,,,false,,,,,,,,,,,,,,,,,49062,,,Wed Jul 19 03:00:47 UTC 2006,,,,,,,,"0|i0s1gn:",161713,,,,,,,,,,,,,,,,,,,"20/Sep/05 10:15;tquas;I do see the same behavior on JBoss 4.0.3RC2 with AMQ 3.1. I started a durable topic subscriber and received all expected messages, acknowledging them right after. Stopping the client (subscriber.close(), session.close(), connection.close()) and reconnecting does, however, *not* seem to trigger the redelivery. Only after shutting down JBoss and starting it up again, AMQ delivers once more what has been acknowledged before.","20/Sep/05 11:11;tquas;I should probably add that the client always connects using the same client-id; kinda useful for durable subscribers ;-) The puzzling part for me is that there are multiple tries to deregister the client upon AMQ shutdown. I never had mor than one client (with the same client-id) connected at once. I attached the JBoss log.

","20/Sep/05 11:12;tquas;JBoss log with multiple client deregistration entries","15/Jun/06 11:20;chirino;Could you see if your still having the same issues with ActiveMQ 4.0?  The queue browsing has been improved tremendously since 3.x","04/Jul/06 00:41;jstrachan;AFAIK this is all working now in 4.0.1 - let us know if you can still reproduce on 4.0.1 and we can reopen","05/Jul/06 15:01;amonlei;the same problem in 4.0.1,i meet it. ","12/Jul/06 02:26;chirino;Could you please provide a test case that shows this in action?","19/Jul/06 03:00;amonlei;resolved it .... 

 in customer , 

session = connection.createSession(true, Session.CLIENT_ACKNOWLEDGE);  
===>
session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE); 

true -> false

but i dont know ""false"" will link to anther problom or not....
",,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX Registration Issue,AMQ-680,12482024,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,bryan.j.schmidt,bryan.j.schmidt,07/Apr/06 05:39,23/Jul/07 07:53,30/Jan/20 16:57,23/Jul/07 07:53,4.0 RC2,,,,,,5.0.0,,,,,,,0,"After creating a new destination, rapid multithreaded MessageProducer.send's cause JMX registration conflict.  Two or more MessageProducers attempt to register the newly created destination with JMX, hence raising the InstanceAlreadyExistsException.

16:05:57,609 ERROR [ManagedRegionBroker] Failed to register destination topic://
clientRecordQuery-1144357557593-41
javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=
localhost,Type=Topic,Destination=clientRecordQuery-1144357557593-41 already regi
stered.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49305,,,2006-04-07 05:39:41.0,,,,,,,,"0|i0s2uf:",161937,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker fails to deliver messages after restart,AMQ-870,12483918,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,ghostganz,ghostganz,08/Aug/06 12:57,19/Jul/07 09:02,30/Jan/20 16:57,19/Jul/07 09:02,4.0.1,,,,,,5.0.0,,,Broker,,,,3,"We're running two networked brokers, B1 and B2, with a producer connected to B1 and a consumer to B2. Forwarding messages through this initially works fine.
If we re-start broker B2, everything seems to re-connect, but we no longer get any messages to the consumer.
If we instead re-start broker B1, everything works fine.

I've attached a JUnit test-case illustrating the two scenarios, a working re-start of B1 and a breaking re-start of B2.
Also attached is parts of a log from running the unit test.

I'm suspicious about log lines like these, but don't know if they are related to the problem:

[2006-08-08 14:36:16] DEBUG: [DemandForwardingBridge] Ignoring sub ConsumerInfo
{commandId = 4, responseRequired = true, consumerId = ID:descartes-49241-1155040510241-5:2:1:1, destination = topic://SOME.TOPIC, prefetchSize = 32766, maximumPendingMessageLimit = 0, browser = false, dispatchAsync = false, selector = null, subcriptionName = null, noLocal = false, exclusive = false, retroactive = false, priority = 0, brokerPath = [ID:descartes-49241-1155040510241-1:5], optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null} already subscribed to matching destination
","java version ""1.5.0_07"", Ubuntu Linux 6.06
",gabrielk,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/06 12:57;ghostganz;ASF.LICENSE.NOT.GRANTED--TestFailingReconnectScenario.java;https://issues.apache.org/jira/secure/attachment/12461893/ASF.LICENSE.NOT.GRANTED--TestFailingReconnectScenario.java","08/Aug/06 12:57;ghostganz;ASF.LICENSE.NOT.GRANTED--debug-output.txt;https://issues.apache.org/jira/secure/attachment/12461896/ASF.LICENSE.NOT.GRANTED--debug-output.txt",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-07-19 07:48:07.022,,,false,,,,,,,,,,,,,,,,,43752,,,Thu Jul 19 09:02:08 UTC 2007,,,,,,,,"0|i180av:",254851,,,,,,,,,,,,,,,,,,,"10/Aug/06 07:27;ghostganz;There's a comment in AMQ-776 ( https://issues.apache.org/activemq/browse/AMQ-776#action_36535 ) about this scenario too.","15/Aug/06 07:21;ghostganz;I've tried the same test-case with 4.0.2 RC3, which fails too, but in a very different way. With 4.0.2 RC3 there is some other problem with the restart, which causes the test to hang instead of failing.
","19/Jul/07 07:48;rajdavies;Hi Jonas - this should be fixed in the latest - can you confirm ?","19/Jul/07 09:02;jlim;Ran the test case on trunk rev:  557391  and it passed. 

Just need to modify the test case a bit to remove the failover  option as it's no longer supported in the latest version. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SimpleNetworkTest hangs,AMQ-594,12481034,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,dflores,dflores,28/Feb/06 11:26,19/Jul/07 07:51,30/Jan/20 16:57,19/Jul/07 07:51,4.0 RC2,,,,,,5.0.0,,,Test Cases,,,,0,The SimpleNetworkTest appears to be hanging in Linux platform,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Nov/06 09:14;aco;DemandForwardingBridgePatch.patch;https://issues.apache.org/jira/secure/attachment/12460568/DemandForwardingBridgePatch.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-11-24 09:14:44.0,,,false,,,,,,,,,,,,,,,,,49233,,,Fri Nov 24 09:15:35 UTC 2006,,,,,,,,"0|i0s0gn:",161551,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"01/Mar/06 04:12;dflores;Temporarily excludes the SimpleNetworkTest so that build process won't hang","24/Nov/06 09:14;aco;Seems that the test is hanging because the remote broker is trying to send a ShutdownInfo to the local broker after the fact that the local broker has been stopped. I've attached a patch that would not use failover when the forwarding bridge is sending a shutdown info. I'm not sure though if this is a good approach.","24/Nov/06 09:15;aco;Assigning to Rob for technical review. :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to xbean 3.0 breaks build,AMQ-1259,12483916,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,mike@iizuka.co.uk,mike@iizuka.co.uk,01/Jun/07 11:17,13/Jul/07 08:39,30/Jan/20 16:57,13/Jul/07 08:39,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"commit r542418 upgraded the xbean dependency in the activemq parent pom to 3.0.  However, the released xbean parent pom still contains SNAPSHOT references leading to a failure to build activemq unless you have the snapshots locally built.

Need to re-release the xbean pom without snapshots.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-01 16:48:03.725,,,false,,,,,,,,,,,,,,,,,84705,,,Fri Jul 13 08:39:02 UTC 2007,,,,,,,,"0|i181cf:",255020,,,,,,,,,,,,,,,,,,,"01/Jun/07 11:52;mike@iizuka.co.uk;Broken pom:

http://repo1.maven.org/maven2/org/apache/xbean/xbean/3.0/xbean-3.0.pom

Just need to change the <version> tag in the <properties> block to remove the -SNAPSHOT suffix as per the comment in the block","01/Jun/07 16:48;aco;Jira has been filed in xbean: http://issues.apache.org/jira/browse/XBEAN-87","12/Jun/07 08:08;jstrachan;Adrian - I know you've been testing this stuff lately - is this issue resolved now?","18/Jun/07 11:09;aco;Looking at the xbean pom and the xbean jira, it seems that this issue is still unresolved. Though with a clean repo it works for me.","19/Jun/07 11:16;mike@iizuka.co.uk;Fresh build works for me now too.  Looks like the missing snapshot has been published somewhere now.","13/Jul/07 08:39;aco;Resolving this issue, since the build is not failing. AFAIK, the xbean problem will be resolved in the next release of xbean also.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove reference to LogicBlaze from ActiveMQ --version command ,AMQ-1306,12481582,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,bsnyder,bsnyder,02/Jul/07 22:50,03/Jul/07 02:05,30/Jan/20 16:57,03/Jul/07 02:05,4.1.1,5.0.0,,,,,4.1.2,5.0.0,,,,,,0,"Running {{bin/activemq --version}} renders the following output: 

{quote}
ACTIVEMQ_HOME: /Users/bsnyder/apache-activemq-4.1.1
ACTIVEMQ_BASE: /Users/bsnyder/apache-activemq-4.1.1

ActiveMQ 4.1.1
For help or more information please see: http://www.logicblaze.com
{quote} 

Attached is a patch that changes the output to the following:  

{quote}
ACTIVEMQ_HOME: /Users/bsnyder/apache-activemq-4.1.1
ACTIVEMQ_BASE: /Users/bsnyder/apache-activemq-4.1.1

ActiveMQ 4.1.1
For help or more information please see: http://activemq.apache.org/
{quote} ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jul/07 22:50;bsnyder;ASF.LICENSE.NOT.GRANTED--CommandShellOutputFormatter.java.diff.txt;https://issues.apache.org/jira/secure/attachment/12461068/ASF.LICENSE.NOT.GRANTED--CommandShellOutputFormatter.java.diff.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-07-03 02:05:41.685,,,false,,,,,,,,,,,,,,,,,84564,,,Tue Jul 03 02:05:41 UTC 2007,,,,Patch Available,,,,"0|i181gn:",255039,,,,,,,,,,,,,,,,,,,"03/Jul/07 02:05;jlim;Thanks Bruce!

updated branch (r552644) and trunk(r552645) :  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TemporaryQueue communication not working,AMQ-1142,12481983,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,josr,josr,29/Jan/07 10:11,29/Jun/07 21:41,30/Jan/20 16:57,12/Jun/07 13:24,4.1.0,,,,,,5.0.0,,,Broker,JMS client,,,1,"Assume a (old legacy, yes this is out of date and better solutions are available) point to point architecture:

Client creates temporary queues and send the queuename to the server by a fixed queue ('command queue')
Server uses the received queue names to send messages to the client.

See the attached Code snippets:

* Start the Server
* Start the Client
* The Client creates a temporary queue and sends the name to the server
* Server receives message and sends a test message back.
* Client NEVER receives the test message

This works 100% on IBM MQSeries (the only source diff is the line that has a MQSerie getQueue API call, instead a createQueue, because queus are defined, and not dynamical as in ActiveMQ)

ActiveMQ LOG information:

The temporary queue is logged, but later it says that there are no subscriptions

(..)
DEBUG AbstractRegion                 - Adding destination: topic://ActiveMQ.Advisory.Consumer.Queue.ID:TIGER-2615-1170064714906-1:0:1
DEBUG JournalPersistenceAdapter      - Checkpoint done.
DEBUG TIGER-2615-1170064714906-1:0:1 - No subscriptions registered, will not dispatch message at this time.
(...)

Can this bug be fixed?

Thank you, Jos

","WinXP, Java 1.4.2",bthakkar,josr,kookaburra,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jan/07 10:11;josr;ASF.LICENSE.NOT.GRANTED--Client.java;https://issues.apache.org/jira/secure/attachment/12460843/ASF.LICENSE.NOT.GRANTED--Client.java","29/Jan/07 10:11;josr;ASF.LICENSE.NOT.GRANTED--Server.java;https://issues.apache.org/jira/secure/attachment/12460666/ASF.LICENSE.NOT.GRANTED--Server.java",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-01-31 03:43:56.896,,,false,,,,,,,,,,,,,,,,,84482,,,Fri Jun 29 21:41:47 UTC 2007,,,,,,,,"0|i0s2vz:",161944,,,,,,,,,,,,,,,,,,,"29/Jan/07 14:56;josr;EDIT: I use the default activemq.xml (straight of the ZIP-archive) and version 4.1.0 incubator.

Anyone any thoughts about this issue? Thank you","31/Jan/07 03:43;aco;IMHO, I think the appropriate way to accomplish this is to set the JMSReplyTo property of the message with the temporary queue. And upon receipt of the message, get the reply to property and send to that.

Let me know if that works for you.","31/Jan/07 03:44;aco;Also, I'm not sure if this is a bug or not. :)","22/Feb/07 03:14;bthakkar;I came across a similar issue with temporaray queues. The message doesn't get sent in even when I use the replyTo property. 

Here's the test case: 

	public void testQueues() {

		final JmsTemplate jmsTemplate = getSpringBean(""jms.template.quoteProcessor"", JmsTemplate.class);

		try {
			final Connection connection = jmsTemplate.getConnectionFactory().createConnection();
			Session session = connection.createSession(true, 1);
			final Destination destination = session.createTemporaryQueue();

			Thread senderThread = new Thread(new Runnable() {

				public void run() {
					try {
						System.out.println(""In Sender Thread"");
						Session session = connection.createSession(true, 1);
						session.createProducer(destination).send(session.createTextMessage(""my message""));
						System.out.println(""sent message to queue: "" + destination);

					} catch (JMSException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

				}
			});

			senderThread.start();

			Thread.currentThread().sleep(6000);

			Thread receiverThread = new Thread(new Runnable() {

				public void run() {
					try {
						System.out.println(""In Receiver Thread"");
						Session session = connection.createSession(true, 1);
						System.out.println(""my session: "" + session + "", queue: "" + destination);
						MessageConsumer consumer = session.createConsumer(destination);
						System.out.println(""my consumer: "" + consumer);
						Message message = consumer.receive();
						System.out.println(""Got this message: "" + message.toString());

					} catch (JMSException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

				}
			});

			receiverThread.start();

			Thread.currentThread().sleep(6000);

			System.out.println(""Done!"");
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JMSException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

	}

output: 

In Sender Thread
sent message to queue: temp-queue://ID:shell.dev.norvax.net-53936-1172097041334-2:1:1
In Receiver Thread
my session: ManagedSessionProxy { ActiveMQSession {id=ID:shell.dev.norvax.net-53936-1172097041334-2:1:3,started=false} }, queue: temp-queue://ID:shell.dev.norvax.net-53936-1172097041334-2:1:1
my consumer: ActiveMQMessageConsumer { value=ID:shell.dev.norvax.net-53936-1172097041334-2:1:3:1, started=false }
Done!

It did not receive the message.
","12/Jun/07 09:53;jstrachan;You're using transacted mode sessions in that code; so you need to do a session.commit() before the messages are actually sent","12/Jun/07 10:02;jstrachan;Note that it is outside of the JMS specification and TCK to be able to call Queue.getQueueName() on a temporary queue, pass that String around and be able to call session.createQueue(temporaryQueueName) and be able to get the same temporary queue.

The real solution to your problem is to use Message.setJMSReplyTo(Destination) which definitely works and is part of the JMS specification.

","12/Jun/07 13:24;jstrachan;I've added a test case to demostrate the issue: TemporaryDestinationToFromNameTest

and its now resolved in 5.0","29/Jun/07 21:41;kookaburra;A consequence of this seems to be that the nice feature of Composite Destinations will not allow a temporary queue in the list. 

Given that Composite Destinations aren't in the spec. anyway, it would be more consistent to allow a temporary queue here as well.

Could this be done?",,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix FindBugs issues,AMQ-1293,12482003,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,fullung,fullung,23/Jun/07 17:33,25/Jun/07 12:55,30/Jan/20 16:57,25/Jun/07 12:55,5.0.0,,,,,,5.0.0,,,,,,,0,"FindBugs 1.2.1 find various issues in the ActiveMQ code that look like they need some attention. While we sort out FindBugs in the Maven build, using the Eclipse plugin for FindBugs is a quick way to get going:

http://findbugs.sourceforge.net/downloads.html

I'm attaching a first patch that addresses some basic issues.

The other major the FindBugs points out is ""inconsistent synchronization"" in various cursor and Kaha and other org.apache.activemq.store classes.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jun/07 17:33;fullung;ASF.LICENSE.NOT.GRANTED--findbugs0.patch;https://issues.apache.org/jira/secure/attachment/12460954/ASF.LICENSE.NOT.GRANTED--findbugs0.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-06-25 07:46:00.374,,,false,,,,,,,,,,,,,,,,,84701,,,Mon Jun 25 12:55:07 UTC 2007,,,,Patch Available,,,,"0|i181if:",255047,,,,,,,,,,,,,,,,,,,"25/Jun/07 07:46;jstrachan;Fancy taking a stab at this one?","25/Jun/07 09:42;rajdavies;this will take some effort to ensure we really are fixing stuff","25/Jun/07 12:55;rajdavies;Applied to trunk - revision 550476",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageServletSupport does not compile,AMQ-1292,12482009,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennisbyrne,dennisbyrne,22/Jun/07 21:32,22/Jun/07 22:46,30/Jan/20 16:57,22/Jun/07 22:46,,,,,,,5.0.0,,,,,,,0,commit for 549845 took out the logger imports but it left the logger,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jun/07 21:32;dennisbyrne;ASF.LICENSE.NOT.GRANTED--patch_4_logger.txt;https://issues.apache.org/jira/secure/attachment/12460806/ASF.LICENSE.NOT.GRANTED--patch_4_logger.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-06-22 22:46:12.539,,,false,,,,,,,,,,,,,,,,,95738,,,Fri Jun 22 22:46:12 UTC 2007,,,,Patch Available,,,,"0|i181in:",255048,Regression,,,,,,,,,,,,,,,,,,"22/Jun/07 22:46;jstrachan;Patch applied with thanks! Apologies for busting the build too :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deployed 4.2-incubator-SNAPHOT poms has not expanded properties.,AMQ-1277,12482008,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dturi,dturi,14/Jun/07 11:45,21/Jun/07 10:15,30/Jan/20 16:57,21/Jun/07 10:15,incubation,,,,,,,,,,,,,0,"If you inspect
http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/activemq-parent/4.2-incubator-SNAPSHOT/activemq-parent-4.2-incubator-20070121.082022-40.pom
you will notice that the properties have not been expanded. For instance:

<dependency>
  <groupId>org.apache.geronimo.specs</groupId>
  <artifactId>geronimo-j2ee-management_1.0_spec</artifactId>
  <version>${org-apache-geronimo-specs-version}</version>
</dependency>

instead of 

<dependency>
  <groupId>org.apache.geronimo.specs</groupId>
  <artifactId>geronimo-j2ee-management_1.0_spec</artifactId>
  <version>1.0</version>
</dependency> 

This was a known problem with maven 2.0.5. Could you please redeploy all your activemq 4.2-incubator-SNAPSHOT poms using maven 2.0.4? (Alternatively 2.0.6 should work too.)",,dturi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84247,,,Thu Jun 21 10:15:55 UTC 2007,,,,,,,,"0|i0tsrj:",171969,,,,,,,,,,,,,,,,,,,"21/Jun/07 09:27;dturi;The maven bug reference: http://jira.codehaus.org/browse/MNG-2339","21/Jun/07 09:34;dturi;Please note that Maven 2.0.6 does not work either, so Maven 2.0.4 is required to deploy correctly. The bug is expected to be fixed in Maven 2.0.8. ","21/Jun/07 10:15;dturi;Sorry this was my misunderstanding. Maven 2.0.5+ deliberately does not interpolate properties in the deployed poms. The maven bug referenced above is for something else.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
createTemporaryQueue hangs,AMQ-1278,12482004,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,robertonavarro,robertonavarro,14/Jun/07 13:38,20/Jun/07 18:31,30/Jan/20 16:57,20/Jun/07 18:31,4.0 RC2,,,,,,5.0.0,,,JMS client,,,,0,"When we attempt to create a temporary queue, the connection hangs:

""http-8080-Processor1"" daemon prio=10 tid=0x00127650 nid=0xd in Object.wait() [0x340fe000..0x340ffc28]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Unknown Source)
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.waitFor(FutureTask.java:267)
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.get(FutureTask.java:117)
        - locked <0x4cfc65c0> (a org.apache.activemq.transport.FutureResponse)
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:44)
        - locked <0x4cfc65c0> (a org.apache.activemq.transport.FutureResponse)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:69)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1108)
        at org.apache.activemq.ActiveMQConnection.createTempDestination(ActiveMQConnection.java:1453)
        at org.apache.activemq.ActiveMQSession.createTemporaryQueue(ActiveMQSession.java:1103)
        at es.tid.geremias.planb.QueryTask.getTask(QueryTask.java:198)
        at es.tid.geremias.planb.QueryTask.doGet(QueryTask.java:157)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
        at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
        at java.lang.Thread.run(Unknown Source)",Solaris,,,,,,,,,,,,,,,,,,172800,172800,,0%,172800,172800,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-20 18:31:11.305,,,false,,,,,,,,,,,,,,,,,84294,,,Wed Jun 20 18:31:11 UTC 2007,,,,,,,,"0|i1819j:",255007,,,,,,,,,,,,,,,,,,,"20/Jun/07 18:31;jstrachan;Its most probably caused by this, which should be fixed in 5.0.0
http://activemq.apache.org/my-producer-blocks.html

Incidentally, this is a kinda old version of ActiveMQ; any chance you could retest with a newer version (say 4.1.1)?

BTW blocking on operations on the client usually mean the broker is busy/waiting. If you see this again, could you provide a stack trace of the broker.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service Wrapper Installer does not work when ActiveMQ is installed on path that contains a spaces,AMQ-1274,12481731,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mythz,mythz,12/Jun/07 20:58,15/Jun/07 01:03,30/Jan/20 16:57,15/Jun/07 01:03,5.2.0,,,,,,4.1.2,5.0.0,,,,,,0,"If Active MQ is installed in a directory that contains spaces (i.e. E:\Program Files\apache-activemq-4.2-SNAPSHOT) the win32 service wrapper installer does not work.

Just need to add quotes around path variables in bin\win32\wrapper.conf",windows 2003,,,,,,,,,,,,,,,,,,600,600,,0%,600,600,,,,,"12/Jun/07 20:59;mythz;wrapper.conf;https://issues.apache.org/jira/secure/attachment/12460778/wrapper.conf",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-06-15 01:03:19.337,,,false,,,,,,,,,,,,,,,,,95734,,,Fri Jun 15 01:03:19 UTC 2007,,,,Patch Available,,,,"0|i181a7:",255010,Regression,,,,,,,,,,,,,,,,,,"12/Jun/07 20:59;mythz;Added quotes around the wrapper.conf path variables","15/Jun/07 01:03;jlim;Thanks!   patch applied

trunk :r547472
4.1 branch : r547473",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ is not JMS 1.1 compliant regarding supporting foreign messages,AMQ-1275,12483919,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,thomasa,thomasa,13/Jun/07 09:19,13/Jun/07 12:51,30/Jan/20 16:57,13/Jun/07 12:51,4.1.1,,,,,,5.0.0,,,,,,,0,See Wish AMQ-1232 for description: ActiveMQ needs to move the setting of JMSDestination to _after_ the transformation to an internal format is done.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-13 12:51:18.897,,,false,,,,,,,,,,,,,,,,,84573,,,Wed Jun 13 12:51:18 UTC 2007,,,,,,,,"0|i1819z:",255009,,,,,,,,,,,,,,,,,,,"13/Jun/07 12:51;jstrachan;patch applied to trunk with thanks. (rev: 546847. By all means try it out by building trunk or waiting for tomorrows 5.0-SNAPSHOT build)

http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/apache-activemq/

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Admin code has a minor bug - blank page in IE,AMQ-1245,12482023,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tvenu,tvenu,12/May/07 07:05,12/Jun/07 15:54,30/Jan/20 16:57,12/Jun/07 15:54,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"need to add</script> to the end of main.jsp decorator in the admin app like this below, IE shows a blank page otherwise

<SCRIPT type='text/javascript' src='/admin/js/common.js'/></script>
<script type='text/javascript' src='/admin/js/css.js'/></script>
<script type='text/javascript' src='/admin/js/standardista-table-sorting.js'/></script>
",Admin code has a minor bug,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:48:07.965,,,false,,,,,,,,,,,,,,,,,84707,,,Tue Jun 12 15:54:52 UTC 2007,,,,,,,,"0|i0s12v:",161651,,,,,,,,,,,,,,,,,,,"12/Jun/07 09:48;jstrachan;added an affected version","12/Jun/07 15:54;jstrachan;Patch applied (rev: 546542) with thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing pom.xml,AMQ-1262,12482056,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,novalis,novalis,04/Jun/07 20:07,12/Jun/07 15:51,30/Jan/20 16:57,12/Jun/07 15:51,4.1.1,,,,,,5.0.0,,,,,,,0,"The source tar.gz for 4.1.1 seems to lack (at least) pom.xml, so it won't build.",Gentoo x86_64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 08:19:24.058,,,false,,,,,,,,,,,,,,,,,84575,,,Tue Jun 12 15:51:44 UTC 2007,,,,,,,,"0|i181br:",255017,,,,,,,,,,,,,,,,,,,"12/Jun/07 08:19;jstrachan;Any chance you could take a look at this?","12/Jun/07 09:27;jlim;Can you attach the error message please.  Just downloaded the 4.1.1 source tar.gz from the activemq site and it seems to work fine when I build it.
Btw, make sure  to do the maven build inside the src\   directory","12/Jun/07 15:46;novalis;It seems to be there now.  Sorry.","12/Jun/07 15:51;jstrachan;No worries David - gonna mark this one as resolved",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4.0 M4 Persistent Issue with network brokers,AMQ-527,12481975,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,lhu,lhu,03/Feb/06 20:37,12/Jun/07 14:50,30/Jan/20 16:57,12/Jun/07 14:50,4.0 M4,,,,,,5.0.0,,,Message Store,,,,0,"Setup: 

3 networked brokers, B1, B2, and B3, on 3 servers, connected using multicast discovery. activemq.xml: 

 <broker useJmx=""false"" brokerName=""B1""> 
 
 <persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""foo"" dataSource=""#mysql-ds""/>
 </persistenceAdapter>
 
 <transportConnectors> 
 <transportConnector uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/> 
 </transportConnectors> 
 
 <networkConnectors> 
 <networkConnector uri=""multicast://default""/> 
 </networkConnectors> 
 
 </broker> 
 
 <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
           <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
           <property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/>
                 <property name=""username"" value=""activemqUser""/>
                 <property name=""password"" value=""activemqPwd""/>
                 <property name=""poolPreparedStatements"" value=""true""/>
 </bean>

Similar for B2 and B3. 

Two queues: Q1 and Q2. 

Two producers, one for each queue, both producers connected to B1. 

One Q1 cosumer connected to B1, another Q1 consumer on B2. 

One Q2 consumer connected to B2, another Q2 consumer connected to B3. 

The problems:

Problem 1: 
Q1 messages are all consumed on B1, never delivered to B2, although there is a Q1 consumer on B2. I understand this is probably the expected behavior, although this definitely looks like a load balancing issue. 

Problem 2: 
All Q2 messages remain persistented in the MySQL DB on B1, even after being successfully forwarded to B2 and B3 and consumed there. 

Problem 3: 
When all the JMS entities are stoped and restarted, Q1 works fine after a while, but all Q2 messages are no longer forwarded to B2 and B3. This means that all Q2 messages are not consumed but persisted instead, further increase the size of the persistent store. 
","RadHat Linux Enterprise Server 3, Tomcat 5.5.15, MySQL 5.0.18 for Linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-05-22 17:42:53.0,,,false,,,,,,,,,,,,,,,,,49183,,,Tue Jun 12 14:50:22 UTC 2007,,,,,,,,"0|i17zb3:",254690,,,,,,,,,,,,,,,,,,,"04/Feb/06 03:37;lhu;1. It appears that messages forwarded to another broker is not pulled out of the persistent store. 
2. Once a message gets to the database, it is never deleted even if it delivered and consumed.

This is a serious bug. ","22/May/06 17:42;jstrachan;Leon, could you retest with version 4.0 please?","12/Jun/07 14:50;jstrachan;Its been over a year since we asked for more feedback; so am gonna assume this is now resolved. Let us know if its not and we can reopen",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic destination created for channel:// destination name,AMQ-977,12482021,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,esp,esp,15/Oct/06 17:38,12/Jun/07 14:39,30/Jan/20 16:57,12/Jun/07 14:39,,,,,,,5.0.0,,,,,,,0,"in activemq-web/src/main/java/org/apache/activemq/web/MessageServletSupport.java, the following method is used to create a JMS Topic or Queue Destination. However, note that the topic:// and channel:// blocks both set is_topic=true, so effectively those two blocks do exactly the same thing:

protected Destination getDestination(WebClient client, HttpServletRequest request, String destinationName) throws JMSException {

        // TODO cache destinations ???
       
        boolean is_topic=defaultTopicFlag;
        if (destinationName.startsWith(""topic://""))
        {
            is_topic=true;
            destinationName=destinationName.substring(8);
        }
        else if (destinationName.startsWith(""channel://""))
        {
            is_topic=true;
            destinationName=destinationName.substring(10);
        }
        else
            is_topic=isTopic(request);
       
        if( destinationOptions!=null ) {
            destinationName += ""?"" + destinationOptions;
        }
       
        if (is_topic) {
            return client.getSession().createTopic(destinationName);
        }
        else {
            return client.getSession().createQueue(destinationName);
        }
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 14:39:28.983,,,false,,,,,,,,,,,,,,,,,92790,,,Tue Jun 12 14:39:28 UTC 2007,,,,,,,,"0|i180if:",254885,,,,,,,,,,,,,,,,,,,"12/Jun/07 14:39;jstrachan;Patch applied, many thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slow consumer causes producer to block on UsageManager.waitForSpace indefinately,AMQ-1136,12482019,12482106,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,fullung,fullung,23/Jan/07 22:28,12/Jun/07 11:23,30/Jan/20 16:57,12/Jun/07 11:23,5.0.0,,,,,,5.0.0,,,,,,,4,"The issue is described in this thread:

http://www.nabble.com/Blocking-on-UsageManager.waitForSpace-again-tf3031460.html

Basically, a slow consumer can cause a producer to block on UsageManager.waitForSpace indefinately.

A basic code sample to reproduce the problem is provided here:

http://www.nabble.com/Re%3A-Blocking-on-UsageManager.waitForSpace-again-p8521205.html

Note that the reproducibility of the bug depends on the initial and maximum size of the VM's heap.",,ipojman,joe_white101,tvijlbrief,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1150,"07/Feb/07 16:25;joe_white101;ActiveMqBrokerThreadDump.txt;https://issues.apache.org/jira/secure/attachment/12460693/ActiveMqBrokerThreadDump.txt","17/Feb/07 17:28;tvijlbrief;SlowReceive.zip;https://issues.apache.org/jira/secure/attachment/12461066/SlowReceive.zip","17/Feb/07 18:40;tvijlbrief;SlowReceive2.zip;https://issues.apache.org/jira/secure/attachment/12460895/SlowReceive2.zip","17/Feb/07 19:20;tvijlbrief;SlowReceive3.zip;https://issues.apache.org/jira/secure/attachment/12460664/SlowReceive3.zip",,,,,4.0,,,,,,,,,,,,,,,,,,,,2007-02-07 16:25:09.867,,,false,,,,,,,,,,,,,,,,,84717,,,Tue Jun 12 11:23:12 UTC 2007,,,,,,,,"0|i0s1gf:",161712,,,,,,,,,,,,,,,,,,,"07/Feb/07 16:25;joe_white101;I am having the exact issue described by Albert with the UsageManager.waitForSpace. The differences in my system are that I have multiple producers and multiple consumers. It is running in Java 1.5_09 on Red Hat.

The attached file contains a thread dump for the ActiveMq Broker obtained usign 'kill -QUIT [PID]' after the lockup has happened. Each of the transport threads is blockin on UsageManager.waitForSpace.","07/Feb/07 16:45;joe_white101;More on the waitForSpace broker lock down. 

JConsole indicates that the broker JVM has plenty of heap space remaining when the waitForSpace message is called. In my case the lockup occurs after a certain total message volume has been reached. The total volume is approximately:

Received - 8600
Sent -17000

The lockup occurs reliably within +/- 500 messages of that volume. The message size is approximately 2kb. The broker has a maximum heap size of 512M.

I have attempted to fix this issue by modifying the pendingMessageLimitStrategy, however it had no effect on the lockup. Specifically I added  
<constantPendingMessageLimitStrategy limit=10""/>

to the policy configuration for all of my topics. I also have tried true and false for persistence.

I am using ActiveMq as the JMS broker for a mule instance and as far as I know all subscribers are non-durable, though I haven't figured out how to confirm this. DEBUG is enabled on the broker and the UsageManager logs things like:

DEBUG UsageManager Memory usage change. from: 1, to: 2
DEBUG UsageManager Memory usage change. from: 1, to: 3
...
DEBUG UsageManager Memory usage change. from: 99, to: 100

At which point all messaging stops. Is there a configuration change that can be made to eliminate this issue?","17/Feb/07 13:57;tvijlbrief;The hang of a durable subscriber described in AMQ-1150 is
probably caused by the same problem","17/Feb/07 17:28;tvijlbrief;Junit test which deadlocks after about 50 sent messages:

S: 47
S: 48
R: 12
S: 49
S: 50
S: 51
S: 52 (test hangs)","17/Feb/07 18:40;tvijlbrief;I figured out that the SlowReceive1 junit test probably deadlocks
because the connection is shared between sender and consumer.

So I rewrote the test and now the test runs to completion.

Halfway during the send the Producer slows down and gets
in sync with each received message.

When I run my test programs with the tcp broker I still have the 
problem. The sender runs to completion, but the receiver blocks... :-(","17/Feb/07 19:20;tvijlbrief;This junit test reproduces the hang reliable.

It has inner loops which create new connections after 25 messages.
In the second iteration the producer and consumer block.","12/Jun/07 09:59;jstrachan;Can you reproduce this issue against the current trunk? (the latest 5.0.0 snapshot?) as we've put in a fair bit of work to try avoid these kinds of issues.","12/Jun/07 11:04;fullung;The test inside SlowReceive3.zip passes now. I'd like to know what changed, though. How did you manage to fix this issue without running this test?

Anyway, I'll test AMQ-1148 next, which is probably a related problem.","12/Jun/07 11:23;jstrachan;Great stuff; am gonna mark this issue resolved against 5.0.0 unless anyone can find a reason to reopen it.

Basically one of the big changes in 5.x is the way the broker deals with memory limits; firstly producers and consumers have separate usage manager limits (on a per destination basis if required); which eases some of the old lockups we used to get. Then in addition there's the option of spoling to disk, rather than blocking indefinitely when a slow consumer is around using message cursors.
http://activemq.apache.org/message-cursors.html

Finally we have a new producer flow control option...
http://activemq.apache.org/producer-flow-control.html

",,,,,,,,,,,,,,,,,,,,,,,,,,
"JDBC Master/Slave: After database failure, stale db connections are reused in DefaultdatabaseLocker",AMQ-1263,12481992,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,eta,eta,04/Jun/07 21:42,11/Jun/07 12:22,30/Jan/20 16:57,11/Jun/07 12:22,5.2.0,,,,,,5.0.0,,,Message Store,,,,0,"Start two brokers in a JDBC master/slave configuration.  One will become master, the other slave.
Shutdown the database.
The slave will immediately begin emitting emitting database connection exceptions messages from the DefaultdatabaseLocker.
Bring up the database again.
The slave continues to emit database error messages and all subsequent attempts by the DefaultdatabaseLocker to issue its locking query will fail.

The problem is that the DefaultdatabaseLocker grabs one db connection at startup and never releases it.  Therefore unless the JDBC connection has an auto-reconnect feature, the slave broker is dead in the water, because its Connection is bad.  The fix is to allocate a new Connection and PreparedStatement on every iteration of the database locker loop, and free the statement/connection on any Exception.

","Linux x86, Postgresql 8.1",eta,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jun/07 21:42;eta;ASF.LICENSE.NOT.GRANTED--patch.txt;https://issues.apache.org/jira/secure/attachment/12460919/ASF.LICENSE.NOT.GRANTED--patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-06-11 12:22:02.211,,,false,,,,,,,,,,,,,,,,,95729,,,Mon Jun 11 12:22:02 UTC 2007,,,,Patch Available,,,,"0|i0s2w7:",161945,,,,,,,,,,,,,,,,,,,"04/Jun/07 21:45;eta;Note: the patch is for 4.2 SVN ","11/Jun/07 12:22;jstrachan;Patch applied with thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topics allways created from the activemq-web module,AMQ-1266,12482035,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,06/Jun/07 22:07,06/Jun/07 22:10,30/Jan/20 16:57,06/Jun/07 22:10,4.1.0,4.1.1,,,,,4.1.2,5.0.0,,,,,,0,"Posted at: http://www.nabble.com/Bug-in-activemq-web-while-Topic-Queue-Creation-tf3851374s2354.html#a10909909

Here's a little bug while creating Topic/Queue in activemq-web. Whether you
create Topic or Queue, the result always end up in creation of a Topic. This
problem lies in ActiveMQ in version 4.1 and 4.1.1.

I'm attaching the patch along with this post. Hope it helps.
( http://www.nabble.com/file/p10909909/MessageListenerServlet.patch
MessageListenerServlet.patch )

Regards,
Muhammad Ali",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84450,,,Wed Jun 06 22:10:25 UTC 2007,,,,,,,,"0|i181bb:",255015,,,,,,,,,,,,,,,,,,,"06/Jun/07 22:10;chirino;Patch applied in 4.1 rev 512662 and trunk rev 544973.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
oracle jdbc adapter has issues storing messages greater than 64k,AMQ-1216,12481945,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,30/Mar/07 10:37,30/Mar/07 10:46,30/Jan/20 16:57,30/Mar/07 10:46,,,,,,,5.0.0,,,Broker,,,,0,"
 <bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource""
destroy-method=""close"">
   <property name=""driverClassName""
value=""oracle.jdbc.driver.OracleDriver""/>
   <property name=""url"" value=""jdbc:oracle:thin:@dev.abc.com:1521:dev10g""/>
   <property name=""username"" value=""abc""/>
   <property name=""password"" value=""abc""/>
   <property name=""poolPreparedStatements"" value=""true""/>
 </bean>


org.springframework.jms.UncategorizedJmsException: Uncategorized exception
occured during JMS processing; nested exception is javax.jms.JMSException:
Failed to broker message: ID:abc2-2257-1175204828244-0:8:1:1:1 in container:
java.sql.SQLException: Data size bigger than max size for this type: 63268
Caused by:
javax.jms.JMSException: Failed to broker message:
ID:abc2-2257-1175204828244-0:8:1:1:1 in container: java.sql.SQLException:
Data size bigger than max size for this type: 63268
       at
org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:46)
       at
org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1177)
       at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1548)
       at
org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465)
       at
org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:356)
       at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:537)
       at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:513)
       at org.springframework.jms.core.JmsTemplate$2.doInJms(JmsTemplate.java:479)
       at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:430)
       at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:477)
       at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:469)
       at
com.abc.jump.jdm.service.jms.AsynchronousTaskManagerImpl.createDeploymentTasks(AsynchronousTaskManagerImpl.java:67)
       at
com.abc.jump.process.view.plan.wizard.DeploymentTasksWizard.createDeploymentTasksAsynchronously(DeploymentTasksWizard.java:465)
       at
com.abc.jump.process.view.plan.wizard.DeploymentTasksWizard.onFinish(DeploymentTasksWizard.java:424)
       at
com.abc.jump.process.view.wizard.WizardScreen.onNavigation(WizardScreen.java:504)
       at echopoint.WizardPane.fireOnNavigation(WizardPane.java:416)
       at echopoint.WizardPane.actionPerformed(WizardPane.java:292)
       at nextapp.echo.AbstractButton.fireActionPerformed(AbstractButton.java:256)
       at
nextapp.echo.AbstractButton$EventForwarder.actionPerformed(AbstractButton.java:135)
       at
nextapp.echo.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:98)
       at nextapp.echo.DefaultButtonModel.doAction(DefaultButtonModel.java:87)
       at nextapp.echo.AbstractButton.doAction(AbstractButton.java:245)
       at
nextapp.echoservlet.ui.AbstractButtonUI.clientAction(AbstractButtonUI.java:86)
       at echopoint.ui.PushButtonUI.clientAction(PushButtonUI.java:86)
       at
nextapp.echoservlet.ControllerInputProcessor.doAction(ControllerInputProcessor.java:157)
       at
nextapp.echoservlet.ControllerInputProcessor.<init>(ControllerInputProcessor.java:126)
       at
nextapp.echoservlet.ControllerInputProcessor.process(ControllerInputProcessor.java:54)
       at nextapp.echoservlet.Controller.service(Controller.java:609)
       at nextapp.echoservlet.Connection.process(Connection.java:459)
       at nextapp.echoservlet.EchoServer.process(EchoServer.java:314)
       at com.abc.jump.process.view.PortalServlet.process(PortalServlet.java:162)
       at nextapp.echoservlet.EchoServer.doPost(EchoServer.java:234)
       at javax.servlet.http.HttpServlet.service(HttpServlet.java:709)
       at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
com.abc.jump.process.view.web.filter.TemporaryAssetContentIntegrationFilter.doFilter(TemporaryAssetContentIntegrationFilter.java:76)
       at
org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:90)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
com.abc.common.view.util.ThreadLocalResourceFilter.doFilter(ThreadLocalResourceFilter.java:58)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:174)
       at
org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:77)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
com.abc.common.util.filter.AuditUserDetailsFilter.doFilter(AuditUserDetailsFilter.java:64)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:195)
       at
org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:90)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
       at
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
       at
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
       at
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
       at
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
       at
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
       at
org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
       at
org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
       at
org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
       at
org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
       at
org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
       at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Failed to broker message:
ID:abc2-2257-1175204828244-0:8:1:1:1 in container: java.sql.SQLException:
Data size bigger than max size for this type: 63268
       at
org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:31)
       at
org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:74)
       at
org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:224)
       at
org.apache.activemq.store.memory.MemoryTransactionStore$1.addMessage(MemoryTransactionStore.java:117)
       at org.apache.activemq.broker.region.Queue.send(Queue.java:345)
       at
org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:305)
       at
org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:378)
       at
org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:197)
       at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
       at
org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:98)
       at
org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
       at
org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:449)
       at
org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:604)
       at
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:258)
       at
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:164)
       at
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
       at
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
       at
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
       at
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
       at
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
       ... 1 more
Caused by: java.sql.SQLException: Data size bigger than max size for this
type: 63268
       at oracle.jdbc.dbaccess.DBError.throwSqlException(DBError.java:134)
       at oracle.jdbc.dbaccess.DBError.throwSqlException(DBError.java:179)
       at oracle.jdbc.ttc7.TTCItem.setArrayData(TTCItem.java:95)
       at
oracle.jdbc.dbaccess.DBDataSetImpl.setBytesBindItem(DBDataSetImpl.java:2413)
       at
oracle.jdbc.driver.OraclePreparedStatement.setItem(OraclePreparedStatement.java:1166)
       at
oracle.jdbc.driver.OraclePreparedStatement.setBytes(OraclePreparedStatement.java:2208)
       at
org.apache.commons.dbcp.DelegatingPreparedStatement.setBytes(DelegatingPreparedStatement.java:105)
       at
org.apache.commons.dbcp.DelegatingPreparedStatement.setBytes(DelegatingPreparedStatement.java:105)
       at
org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.setBinaryData(DefaultJDBCAdapter.java:56)
       at
org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:175)
       at
org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:71)
       ... 19 more
--
View this message in context: http://www.nabble.com/Data-size-bigger-than-max-size-for-this-type-tf3489299s2354.html#a9744357",--I'm using ojdbc14-10g-10.2.0.1.0.jar driver.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95714,,,Fri Mar 30 10:46:18 UTC 2007,,,,,,,,"0|i1817b:",254997,,,,,,,,,,,,,,,,,,,"30/Mar/07 10:46;jstrachan;I think this is now resolved in trunk with commit: 524036

Its still awaiing testing; if it doesn't work for you let us know and we'll reopen this issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP client cannot be stopped and disconnected without loosing messages,AMQ-1192,12481986,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bikeracer,bikeracer,07/Mar/07 16:26,14/Mar/07 03:32,30/Jan/20 16:57,14/Mar/07 03:32,4.1.0,,,,,,4.1.1,,,,,,,0,"I have added to the STOMP tester so it can take command line args for number of message to be read/sent.  Using this the following tests will show the problems

#1)  All messages are lost when a client does STOMP disconnect

1.1 start a subscriber to read 5 messages
./activemq_tester -d sub -m 5
1.2 start a publisher to publish 10 messages
./activemq_tester -d pub -m 10
1.3 run subscriber again to get the remaining 5 messages
./activemq_tester -d sub -m 5

---> No messages are available for the second run of the test subscriber.  It seems there is no way to shutdown a stomp client without loosing all the messages on that q.

Output here.

-bash-2.05b$ ./activemq_tester -d pub -m 10
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Message.Sending Message: This is message number 0
Sending Message: This is message number 1
Sending Message: This is message number 2
Sending Message: This is message number 3
Sending Message: This is message number 4
Sending Message: This is message number 5
Sending Message: This is message number 6
Sending Message: This is message number 7
Sending Message: This is message number 8
Sending Message: This is message number 9
OK
Sending Disconnect.OK
Disconnecting...OK

--- first run of subscriber ----------------------
-bash-2.05b$ ./activemq_tester -d sub -m 5
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.Received: MESSAGE, This is message number 0
Received: MESSAGE, This is message number 1
Received: MESSAGE, This is message number 2
Received: MESSAGE, This is message number 3
Received: MESSAGE, This is message number 4
OK
Sending Disconnect.OK
Disconnecting...OK



----- second run of subscriber -----------------
-bash-2.05b$ ./activemq_tester -d sub -m 5
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.

=======> None of the remaning message numbers 5...9 are available.  They are lost.


2) Now to see the ghost STOMP subscriber problem, hit control-C to stop the subscriber.
Then rerun subscriber and publisher and see the following output.....
(publisher output not shown here, same as before)

-bash-2.05b$ ./activemq_tester -d sub -m 5
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.Received: MESSAGE, This is message number 1
Received: MESSAGE, This is message number 3
Received: MESSAGE, This is message number 5
Received: MESSAGE, This is message number 7
Received: MESSAGE, This is message number 9
OK
Sending Disconnect.OK
Disconnecting...OK


","C stomp client on AS3 linux
apache-activemq-4.1.0-incubator 
apache APR 0.9.7

",,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Mar/07 16:26;bikeracer;ASF.LICENSE.NOT.GRANTED--activemq_tester.c;https://issues.apache.org/jira/secure/attachment/12460923/ASF.LICENSE.NOT.GRANTED--activemq_tester.c",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-03-07 16:38:36.756,,,false,,,,,,,,,,,,,,,,,84465,,,Wed Mar 14 03:32:11 UTC 2007,,,,,,,,"0|i1811r:",254972,,,,,,,,,,,,,,,,,,,"07/Mar/07 16:38;jstrachan;I wonder could you try the current 4.1.1 build please? We've fixed a number of issues in the Stomp support to do with handling disconnected stomp consumers which could well fix your issue","07/Mar/07 18:18;bikeracer;Yes I will try that.   Can you show me where to find 4.1.1 ?","07/Mar/07 18:27;jstrachan;We'll be releasing 4.1.1. in the next week; until then you could try a snapshot build of it...

http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/apache-activemq/4.1-SNAPSHOT/

e.g. grab one from March 2007","07/Mar/07 18:40;bikeracer;Got it.

issue #2) Ghost subscriber problem is improved.  Note on the output from before that I got only odd numbered messages after control-C of a subscriber.   Now only message number 0 is missing.
See output here....this is after starting a subscriber and control-c, then starting another subscriber..

-bash-2.05b$ ./activemq_tester -d sub -m 5
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.Received: MESSAGE, This is message number 1
Received: MESSAGE, This is message number 2
Received: MESSAGE, This is message number 3
Received: MESSAGE, This is message number 4
Received: MESSAGE, This is message number 5
OK
Sending Disconnect.OK
Disconnecting...OK





Issue #1) Missing messages after STOMP client shutdown ... No change here.  See above for test setup and description.

Now I'll speculate based on 3 test cases I've been running.
Say I publish 100 messages to a q. 
Then I start a slow consumer (subscriber to the q) via stomp, so it reads little by little.
Now I start a second consumer (subscriber, same q)
That second client will get ZERO messages.

So what I think might be happening is that STOMP connector is not really integrated into the broker, it wakes up when that first client comes in and grabs all 100 messages.  Then when the second client comes in there are none left for it to get.

Then if that first client dies or even stops gracefully, somehow those 100 messages are allocated to the stomp connecter that was talking on that specific tcp/ip socket.  all 100 of those messages seem to be ""consumed"" from the brokers point of view and cannot be made available to any other STOMP clients.  Even thought the actual STOMP client has only gotten say 7 of them across the TCP/IP connection (3 second sleep loop after each message) the stomp connecter representing it has grabbed them all from the broker and is hoarding them and won't share, and won't put them back if that socket connection is closed.

Keep in mind I know nothing about the internals of JMS brokers, this is speculation based on a combination of 3 test scenarios but it would explain all 3 mis-behaviours that I am seeing. 

Joel Schaubert
","13/Mar/07 16:52;bikeracer;Retested with   ack set to client during subscribe operations after talking to Hiram.

#1) Ghost client issues are totally resolved in client ack mode
#2) Missing messages resolved in client ack mode

#3) New problem in client ack mode
A) send 20 messages into a Q
B) startup slow reader, read 5 messages and control-C without allowing client to send DISCONNECT
C) restart a reader (as many as desired)
D) the remaining 15 messages are still present but none will be delivered to the STOMP clients until at least 1 new message is written into the Q.

So no loss of messages under these conditions but Q is effectively stalled until a new message is written in.
","13/Mar/07 17:06;jstrachan;Here's some background on prefetch (and how that affects message delivery)...

http://activemq.apache.org/i-do-not-receive-messages-in-my-second-consumer.html
","13/Mar/07 18:35;chirino;I think we should close this issue out as ""not a bug"" and open a new issue for your #3.

but let me comment on #3 while I'm here..  I think this is due to the socket being killed but the server side not noticing.  But it will notice once it tries to send it a message, so the it shutdown the dead socket and redelivers all messages queued for the client.  On some OSes the TCP timeout interval can be tweaked.  Otherwise, keep alive packets would need to be periodically transmitted in Stomp so that the server could detect a dead client sooner.  Keep alives have not been added to Stomp yet.. but could be in a future version.","14/Mar/07 03:26;bikeracer;Agreed.
Nice work on resolving the ghost client issue.
","14/Mar/07 03:32;bikeracer;Part #1 is closed since this was not a bug.
Subscribing with ack set to client ack resolved the issue

Part #2 ghost subscriber problem is confirmed fixed in 4.1.1 builds while using client ack subscriptions

Part #3 moved to new ticket
",,,,,,,,,,,,,,,,,,,,,,,,,,
Messages consumed with the Resource Adapter are intermittently not delivered,AMQ-1078,12481949,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,29/Nov/06 21:25,09/Mar/07 17:29,30/Jan/20 16:57,09/Mar/07 17:25,4.0,,,,,,4.1.1,5.0.0,,Broker,Connector,,,0,The cause is that the ActiveMQSessionExecutor was starting and using it's dispatch thread instead of the Thread managed by the resource adapter.,,jstalker,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/07 16:45;cgs;AMQ-1078.patch;https://issues.apache.org/jira/secure/attachment/12460661/AMQ-1078.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-01-10 18:18:25.358,,,false,,,,,,,,,,,,,,,,,84309,,,Fri Mar 09 17:29:33 UTC 2007,,,,,,,,"0|i0s2tz:",161935,,,,,,,,,,,,,,,,,,,"29/Nov/06 21:27;chirino;Fixed in trunk revision 480717","30/Nov/06 07:28;chirino;fix in 4.1 branch rev 480862","10/Jan/07 18:18;cgs;Is this ""fixed, but not closed"" or ""not really fixed""?","18/Jan/07 18:36;cgs;Well, I pulled out the patch and applied it to 4.1.0 and it fixed the problem.","09/Mar/07 17:12;jstalker;Hi,
  It appears that there is still a bug some place in the rar.
  Here's the scenario:
I recently (ie, a couple days ago) downloaded and built the 4.1 branch, set up JBoss 4.0.5.GA with a slightly modified activemq-ra.rar (ra.xml modified to communicate with an external instance of the broker via tcp and setting of UseInboundSession is set to true...not sure what this does really, but I tried it as false and the same behavior happens).

Via a persistent queue (oracle backing) I'm consuming messages in an MDB via the JCA message datasource using XA.

Here's the problem I'm seeing: if I shut down the JMS server, I see the appropriate EOF exception and subsequent reconnection attempts by the rar in JBoss.  When I startup the external activemq broker again, the connection appears to get reestablished and work is accepted, started, and completed...EXCEPT there's no mention of XA and thus the message is never actually accepted and consumed.

Here's some debug output from the JCA:

PRE shutdown of external broker:
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] ServerSession requested.
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] Using idle session: ServerSessionImpl:1
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Starting run.
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work accepted: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work started: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Running
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] run loop start   
2007-03-09 11:43:02,884 DEBUG [org.apache.activemq.TransactionContext] Start: XidImpl[FormatId=257, GlobalId=node118/114, BranchQual=1, localId=114]
2007-03-09 11:43:02,884 DEBUG [org.apache.activemq.TransactionContext] Started XA transaction: XID:257:6e6f64653131382f313134:31 

-- snip -- output of a resulting consumption of message

2007-03-09 11:43:04,447 DEBUG [org.apache.activemq.TransactionContext] End: XidImpl[FormatId=257, GlobalId=node118/114, BranchQual=1, localId=114]
2007-03-09 11:43:04,447 DEBUG [org.apache.activemq.TransactionContext] Ended XA transaction: XID:257:6e6f64653131382f313134:31
2007-03-09 11:43:04,448 DEBUG [org.apache.activemq.TransactionContext] Prepare: XidImpl[FormatId=257, GlobalId=node118/114, BranchQual=1, localId=114]
2007-03-09 11:43:04,454 DEBUG [org.apache.activemq.TransactionContext] Commit: XidImpl[FormatId=257, GlobalId=node118/114, BranchQual=1, localId=114]
2007-03-09 11:43:05,150 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] run loop end
2007-03-09 11:43:05,178 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] Session returned to pool: ServerSessionImpl:1
2007-03-09 11:43:05,178 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Run finished
2007-03-09 11:43:05,178 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work completed: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b] 

POST shutdown and restart of external broker

2007-03-09 11:46:33,077 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] Sending: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, CacheSize=1024, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-03-09 11:46:33,126 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] Received WireFormat: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, CacheSize=1024, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-03-09 11:46:33,126 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] tcp://seqlims.broad.mit.edu/18.103.10.168:61616 before negotiation: OpenWireFormat{version=2, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2007-03-09 11:46:33,126 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] tcp://seqlims.broad.mit.edu/18.103.10.168:61616 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] ServerSession requested.
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] Using idle session: ServerSessionImpl:1
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Starting run.
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work accepted: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work started: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Running

-- as you can see, no XA here

2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] run loop start
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] run loop end
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] Session returned to pool: ServerSessionImpl:1
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Run finished
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work completed: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]

Thanks for your help!
John","09/Mar/07 17:18;cgs;Does it look like the attached patch is applied to the source that you downloaded and built?","09/Mar/07 17:25;chirino;The patch has been applied to 4.1 and is the current RC 1 for ActiveMQ 4.1.1

But the XA problem that john is reporting seems to be something different entirely from the original problem addressed.  I going to close this issue out since it did fix a problem.  John you could you open a new issue specifically for the XA problem you are seeing.  Thanks!","09/Mar/07 17:26;cgs;Also, how is this ""intermittently not delivered""?  If it's being delivered, but for some reason without XA, it's still being delivered.  Sounds like a different issue.","09/Mar/07 17:27;jstalker;Yeah, looking at the source for the session executor, I see this in the wakeup() method:
if( session.isSessionAsyncDispatch() ) { 
which replaced taskRunner != null as the 2nd test in the method...the taskRunner == null shows up in the try block -- the same as the patch.","09/Mar/07 17:29;jstalker;you're both right, it appears to be a combination of JCA reconnect / XA restart (or whatever you want to call it).  I Reopened this bug pre-maturely...sorry about that!

I'll file a new bug.",,,,,,,,,,,,,,,,,,,,,,,,,
Deadlocks can occur with even with sync sends since they share a connection.,AMQ-1183,12481934,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,11/Jan/07 22:06,07/Mar/07 14:53,30/Jan/20 16:57,07/Mar/07 14:53,,,,,,,4.1.1,,,Broker,,,,0,"If a producer sends to a queue and blocks, any other producer sharing the same connection even if he would be sending to an empty queue would also block.  This in effect can cause a deadlock if the right message processing flow is set up.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-02-27 11:22:36.632,,,false,,,,,,,,,,,,,,,,,95701,,,Wed Mar 07 14:53:34 UTC 2007,,,,,,,,"0|i0s0rj:",161600,,,,,,,,,,,,,,,,,,,"26/Feb/07 19:06;chirino;Workaround fix has been implemented in http://svn.apache.org/viewvc?view=rev&revision=511078 in the 4.1 branch.

Basically, if producer uses sync sends, he now can not block another producer on the shared connection.  To force all sends to be done sync, a new 'useSyncSend' option has been add to the ActiveMQConnectionFactory.

We should consider implementing a more robust soultion that will work even with async sends in 5.0.  This could be done by using producer flow control with acks similar to how we flow control consumers.  ","26/Feb/07 19:15;chirino;The following revision was also part of the fix: http://svn.apache.org/viewvc?view=rev&rev=511093","27/Feb/07 11:22;nmittler;Is this an AMQCPP Issue? The comments seem to imply a patch to the broker.","07/Mar/07 14:53;chirino;fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
memoryManager configuration does not call PropertyPlaceholderConfigurer,AMQ-1166,12481985,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,vpesochi,vpesochi,22/Feb/07 00:45,07/Mar/07 14:40,30/Jan/20 16:57,07/Mar/07 14:40,4.1.0,,,,,,4.1.1,,,Broker,,,,0,"Following configuration throws exception because the placeholder is not replaced with system property com.barra.activemq.MEMORY_SIZE. Spring placeholders work in all other places in the configration, except the memory manager, because it is customized by AMQ.

<beans>   
    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>  <!-- Allows us to use system properties as variables in this configuration file -->
    <broker useJmx=""true"" deleteAllMessagesOnStartup=""false"" persistent=""true"" xmlns=""http://activemq.org/config/1.0"">
        <memoryManager>
            <usageManager id=""memory-manager"" limit=""${com.barra.activemq.MEMORY_SIZE} MB""/>
        </memoryManager>
        <managementContext>
            <managementContext connectorPort=""${com.barra.activemq.jmx.PORT}"" jmxDomainName=""apache.activemq""/> 
        </managementContext>
",winxp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-07 14:40:41.101,,,false,,,,,,,,,,,,,,,,,84476,,,Wed Mar 07 14:40:41 UTC 2007,,,,,,,,"0|i1815b:",254988,,,,,,,,,,,,,,,,,,,"07/Mar/07 14:40;jstrachan;Wouldn't using the following work?

<usageManager id=""memory-manager"" limit=""${com.barra.activemq.MEMORY_SIZE}""/>

where the MB is included in your property. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker Connection Shutdown is prone to lockup/deadlock,AMQ-1179,12481916,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,26/Feb/07 19:13,05/Mar/07 17:04,30/Jan/20 16:57,05/Mar/07 17:04,4.0,4.0.1,4.0.2,4.1.0,,,4.1.1,5.0.0,,Broker,,,,0,There are several scenarios (timing related) where the broker does not properly shutdown it's connections to a client.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-05 17:04:16.722,,,false,,,,,,,,,,,,,,,,,84304,,,Mon Mar 05 17:04:16 UTC 2007,,,,,,,,"0|i1813b:",254979,,,,,,,,,,,,,,,,,,,"26/Feb/07 19:22;chirino;Several fixes were recently done in the 4.1 branch to make connection shutdown more robust:

Send the ShutdownInfo message in a async thread so that the operation can timeout if the connection fails while doing that:
http://svn.apache.org/viewvc?view=rev&rev=511090
http://svn.apache.org/viewvc?view=rev&rev=511091 
http://svn.apache.org/viewvc?view=rev&rev=511089
http://svn.apache.org/viewvc?view=rev&rev=511083
","26/Feb/07 19:23;chirino;AMQ-1052 was also cause problem properly shutting down a connection","26/Feb/07 19:23;chirino;Need to port all the previously posted revisions to trunk.","05/Mar/07 17:04;jlim;ported fix to trunk : r514734",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnection memory leaks,AMQ-1177,12481926,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,26/Feb/07 18:40,05/Mar/07 16:01,30/Jan/20 16:57,05/Mar/07 16:01,4.1.0,,,,,,4.1.1,5.0.0,,JMS client,,,,0,"klas eriksson: Commented on AMQ-847 

I think this issue is actually two (or more memory leaks.
One in createConnection() and one in close().
I tried a very similar program with the following results:

apache-activemq-4.2-incubator-20061204.023752-14:
1. 'createConnection' followed by 'close' when activeMq-server is UP:
outOfmemory after ~1800 createConnection-close.

2. 'createConnection' without close when activeMq server is not started.
outOfmemory after < 1800 failed 'createConnection'.

I have also tried 4.0.x and 4.1.x. The leak memory too.",,eklas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-05 16:01:02.379,,,false,,,,,,,,,,,,,,,,,84470,,,Mon Mar 05 16:01:02 UTC 2007,,,,,,,,"0|i0s2sv:",161930,,,,,,,,,,,,,,,,,,,"26/Feb/07 18:45;chirino;#1 has been fixed in AMQ-835","26/Feb/07 18:46;chirino;#2 has been fixed in 4.1 branch http://svn.apache.org/viewvc?view=rev&revision=511081
need to get this fix ported to trunk","05/Mar/07 16:01;jlim;ported fix to trunk : r514717",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MulticastDiscoveryAgent heart beast may stop of machine clock jumps around.,AMQ-1173,12481960,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,26/Feb/07 17:49,05/Mar/07 15:48,30/Jan/20 16:57,05/Mar/07 15:48,4.1.0,,,,,,4.1.1,5.0.0,,,,,,0,"Surprisingly, many high end machines now days have a hard time keeping a consistent clock.  The clocks may run fast and user tend to use a periodic cron job to sync the time on the local machine to the correct time.  When this happens the time looks like it went backwards and this was delaying the sending of Mutlicast heartbeats.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-05 15:48:31.295,,,false,,,,,,,,,,,,,,,,,84472,,,Mon Mar 05 15:48:31 UTC 2007,,,,,,,,"0|i1814f:",254984,,,,,,,,,,,,,,,,,,,"26/Feb/07 17:49;chirino;Fixed in 4.1 branch rev http://svn.apache.org/viewvc?view=rev&revision=511086","05/Mar/07 15:48;jlim;ported fix to trunk : r514701",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX stats on topic do not make sense.,AMQ-1174,12481943,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,26/Feb/07 18:19,05/Mar/07 15:43,30/Jan/20 16:57,05/Mar/07 15:43,4.1.0,,,,,,4.1.1,,,,,,,0,"The JMX stats did not make much sense.

The DispatchedQueueSize, DispatchedCounter, PrefetchSize, were not properly reflecting what had been dispatch to the consumer and the current prefech size of the consumer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-05 15:43:05.878,,,false,,,,,,,,,,,,,,,,,84471,,,Mon Mar 05 15:43:05 UTC 2007,,,,,,,,"0|i18147:",254983,,,,,,,,,,,,,,,,,,,"26/Feb/07 18:19;chirino;Fixed in http://svn.apache.org/viewvc?view=rev&revision=511084 
need to port to trunk","05/Mar/07 15:43;jlim;ported fix to trunk: r514694",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UsageManager leak when topic consumers are disconnected.,AMQ-1172,12481872,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,26/Feb/07 17:42,05/Mar/07 15:43,30/Jan/20 16:57,05/Mar/07 15:43,4.1.0,,,,,,4.1.1,5.0.0,,,,,,0,The usage on the usage manager associated with a topic will have a usage leak without the corresponding memory leak if consumer connections continually connection and disconnect.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-05 15:43:00.398,,,false,,,,,,,,,,,,,,,,,84473,,,Mon Mar 05 15:43:00 UTC 2007,,,,,,,,"0|i1814n:",254985,,,,,,,,,,,,,,,,,,,"26/Feb/07 17:43;chirino;Fix in 4.1 branch rev http://svn.apache.org/viewvc?view=rev&revision=511088

Need to port to trunk","05/Mar/07 15:43;jlim;ported fix to trunk: r514694",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection leak in the PooledConnectionFactory,AMQ-1178,12481944,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,26/Feb/07 18:56,05/Mar/07 13:56,30/Jan/20 16:57,05/Mar/07 13:56,4.1.0,,,,,,4.1.1,5.0.0,,JMS client,,,,0,The connection pool actually kept creating connections instead of pooling them!  Opps.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-05 13:56:54.796,,,false,,,,,,,,,,,,,,,,,84469,,,Mon Mar 05 13:56:54 UTC 2007,,,,,,,,"0|i1813j:",254980,,,,,,,,,,,,,,,,,,,"26/Feb/07 18:57;chirino;Fixed in http://svn.apache.org/viewvc?view=rev&revision=511079 in 4.1 branch
need to port to trunk","05/Mar/07 13:56;jlim;Fixed has been ported to trunk :  r514668",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.broker.TransportConnection::stop should not attempt to send a message over the connection.,AMQ-771,12481946,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,yaussy,yaussy,23/Jun/06 03:02,01/Mar/07 22:34,30/Jan/20 16:57,01/Mar/07 22:34,4.0,4.0.1,,,,,5.0.0,,,Connector,,,,0,"Especially when using ""failover"", there can be a problem with respect to TransportConnection::stop attempting to send a ""shutdown"" message over the connection.  If another thread is sending messages to the connection, and it gets stuck for some reason, such as a network freeze, the target machine panics, or the target process freezes for some reason, the TransportConnection::dispatch will eventually block, locking the MutextTransport object.  When the InactivityMonitor wakes up and detects that the connection is dead, it will go through the process of stopping the connection.  This goes back into TransportConnection, and calls stop, which attemtps to lock the MutexTransport so it can send the ""shutdown"" command.  Now, both threads are stuck, potentially for a long time, as a box panic will not cleanly close the tcp connection.

I'm not sure the rationale for wanting to send a shutdown command to the other side of the connection, since the target has to handle the connection going down hard anyway.  Seems to me, if you are intending on closing the connection, just close it - don't try to be nice to the other side.  Especially in this code path, there is something wrong with the other side anyway.
",,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-01 22:34:33.609,,,false,,,,,,,,,,,,,,,,,84332,,,Thu Mar 01 22:34:33 UTC 2007,,,,,,,,"0|i0s2tr:",161934,,,,,,,,,,,,,,,,,,,"14/Aug/06 13:47;yaussy;Rob,

This issue is a bit more complex than I've noted above.  I've been out for a week, but prior to leaving I got a version (based upon 4.0.1) working.  I will submit comments and patches sometime today, hopefully.
","16/Aug/06 12:38;yaussy;Rob,

The fixes I have for the 4.0.1 release for this issue rely upon the fix I made to DemandForwardingBridgeSupport for issue [ https://issues.apache.org/activemq/browse/AMQ-776?page=all ].

So, for 4.0.2, as I reported in AMQ-776, the 4.0.1 fix did not fix 4.0.2.  I will have to try and track down what is wrong there and get 4.0.2 fixed for AMQ-776.

At any rate, I should describe this issue better:

Not only is there an issue with TransportConnection::stop, wherein it attempts to send something on the socket before closing, there are problems in general with the fact that FailoverTransport is decorated by MutexTransport.  When publishing to a consumer between two brokers, and the consumer-side broker is frozen, and the socket fills up, then the FailoverTransport (InactivityMonitor) attempts to close down the connection.  This will fail, as everything is blocked around the MutexTransport.  See the scenario list below for how to recreate the problem.  

The changes I made are rather surgical, in order to make it work.  I wasn't particularly happy with them, but maybe they are acceptable.  I will attach patches as soon as I get AMQ-776 working.  But, the changed source files include:
org.apache.activemq.transport.MutexTransport
org.apache.activemq.transport.failover.FailoverTransport
org.apache.activemq.transport.tcp.TcpTransport
org.apache.activemq.broker.TransportConnection

The changes were not tested against all unit tests, so there may be similar changes required to other files (i.e. some other transport than TcpTransport).


Scenario (using ConsumerTool and ProducerTool from examples):
-Start broker A
-Start broker B
-Start consumer, on FOO, attaching to broker B (failover transport, only broker B)
-Start publisher, on FOO, publishing large messages, such as 10K bytes, attaching to broker A (failover transport, only broker A)
-On Solaris, pstop broker B

Wait for the socket to fill up, and then when broker A reports the dead connection, notice that it does not close off the connection properly.  Do a kill-3 on broker A and note that it is waiting on MutexTransport lock and FailoverTransport can't close off the connection.
","01/Mar/07 22:34;rajdavies;this should be resolved now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RegionBroker resets JMS Timestamp,AMQ-1165,12481994,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,dain,dain,22/Feb/07 00:26,27/Feb/07 01:35,30/Jan/20 16:57,25/Feb/07 08:35,4.1.0,,,,,,4.1.1,5.0.0,,,,,,0,"The RegionBroker contains the following logic, which overwrites the JMSTimestamp.   FWIU, the message timestamp should be set once at send and never changed by the broker.

        if (message.getTimestamp() > 0 && (message.getBrokerPath() == null || message.getBrokerPath().length == 0)) { 
            //timestamp not been disabled and has not passed through a network
            message.setTimestamp(System.currentTimeMillis());
        }

Attached is a simple test case and patch that changes the '>' in the if statement above to '<='.  I'm not sure if that is the proper fix, but it did make my problem go away.

",,jdillon,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/07 00:26;dain;ASF.LICENSE.NOT.GRANTED--Timestamp.patch;https://issues.apache.org/jira/secure/attachment/12461059/ASF.LICENSE.NOT.GRANTED--Timestamp.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-02-23 06:00:17.646,,,false,,,,,,,,,,,,,,,,,84477,,,Tue Feb 27 01:35:56 UTC 2007,,,,Patch Available,,,,"0|i0s2wf:",161946,,,,,,,,,,,,,,,,,,,"23/Feb/07 06:00;jdillon;Has anyone had a chance to look at this?  This is a blocking issue for release of Geronimo 1.2 due to TCK certification...","25/Feb/07 08:31;chirino;That logic was put in place as a ""Feature""..  In rev 511463 in 4.1 trunk I have now made that ""Feature"" optional so that we don't break JMS compliance.","25/Feb/07 08:35;chirino;also fixed in trunk rev 511464","26/Feb/07 22:39;dain;I think you forgot to commit the test case.","27/Feb/07 01:35;chirino;Your right.. corrected in rev 512102 and 512104",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA recover fails for 4.0.1,AMQ-1054,12481866,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,guypardon,guypardon,16/Nov/06 09:45,26/Feb/07 20:05,30/Jan/20 16:57,28/Nov/06 15:45,,,,,,,4.1.1,5.0.0,,,,,,7,"XAResource.recover seems to fail for 4.x of ActiveMQ:

ERROR IN RECOVERY [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
[Lorg.apache.activemq.command.DataStructure; [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: org.apache.activemq.TransactionContext.recover(TransactionContext.java:508) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: com.atomikos.datasource.xa.XATransactionalResource.recover(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: com.atomikos.datasource.xa.XATransactionalResource.endRecovery(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: com.atomikos.icatch.imp.TransactionServiceImp.recover(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.datasource.xa.XATransactionalResource.setRecoveryService(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.icatch.system.Configuration.addResource(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.jms.QueueConnectionFactoryBean.checkSetup(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.jms.QueueConnectionFactoryBean.createQueueConnection(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.jms.QueueConnectionFactoryBean.createConnection(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 

Also see http://www.atomikos-support.com/forums/viewtopic.php?t=351 (where I borrowed this stack trace from). We have seen similar things in other applications that tried to use ActiveMQ. I think this is a class cast error in ActiveMQ...

With 3.1 there is no problem. ","Java, JDK 1.4, Windows, Atomikos TransactionsEssentials for the JTA/XA part",imran,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/06 12:29;jstrachan;pom.xml;https://issues.apache.org/jira/secure/attachment/12460557/pom.xml",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-11-20 16:16:07.0,,,false,,,,,,,,,,,,,,,,,92815,,,Wed Nov 29 08:56:56 UTC 2006,,,,,,,,"0|i0rrpj:",160133,,,,,,,,,,,,,,,,,,,"20/Nov/06 16:16;jstrachan;Does this happen on 4.0.2 as well?","22/Nov/06 06:29;guypardon;Yes, 4.0.2 too.

Below is a test program (you need the atomikos jars in the classpath, as well as all activemq jars). Note that the only atomikos dependency is the Xid format.

Guy

package activemqtest;

import javax.jms.MessageConsumer;
import javax.jms.XAConnection;
import javax.jms.XASession;
import javax.transaction.xa.XAResource;
import javax.transaction.xa.Xid;

import org.apache.activemq.ActiveMQXAConnectionFactory;
import org.apache.activemq.command.ActiveMQQueue;

import com.atomikos.datasource.xa.DefaultXidFactory;

public class XATest {
	
	
	public static void main ( String[] args ) throws Exception {
		
		String url = ""tcp://localhost:61616"";
		String qName = ""MyQueue"";
		int timeout = 5;
		
		DefaultXidFactory xidFactory = new DefaultXidFactory();
		
		ActiveMQXAConnectionFactory xacf = new ActiveMQXAConnectionFactory();
		xacf.setBrokerURL ( url );
		
		ActiveMQQueue queue = new ActiveMQQueue();
		queue.setPhysicalName ( qName );
		
		XAConnection xaconn = xacf.createXAConnection();
		xaconn.start();
		XASession session = xaconn.createXASession();
		XAResource xares = session.getXAResource();
		MessageConsumer receiver = session.getSession().createConsumer ( queue );
		
		xares.recover ( XAResource.TMSTARTRSCAN );
		xares.recover ( XAResource.TMNOFLAGS );
		xares.setTransactionTimeout ( timeout );
		xares.isSameRM ( xares );
		
		Xid xid = xidFactory.createXid ( ""part1"" , ""part2"");
		xares.start ( xid , XAResource.TMNOFLAGS );
		receiver.receive ( timeout );
		xares.end ( xid , XAResource.TMSUCCESS );
		xares.rollback ( xid );
	}

}
","27/Nov/06 11:32;shoaib;Hi, 
I am also using atomikos with activemq and facing the same problem, i ran the above test with logging turned on and with level Debug and my log output is as follows.

DEBUG [main] WireFormatNegotiator.start(65) | Sending: WireFormatInfo { version=1, properties={TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
DEBUG [ActiveMQ Transport: tcp://localhost/127.0.0.1:61616] WireFormatNegotiator.onCommand(95) | Received WireFormat: WireFormatInfo { version=1, properties={StackTraceEnabled=true, TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
DEBUG [ActiveMQ Transport: tcp://localhost/127.0.0.1:61616] WireFormatNegotiator.onCommand(102) | tcp://localhost/127.0.0.1:61616 before negotiation: OpenWireFormat{version=1, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
DEBUG [ActiveMQ Transport: tcp://localhost/127.0.0.1:61616] WireFormatNegotiator.onCommand(113) | tcp://localhost/127.0.0.1:61616 after negotiation: OpenWireFormat{version=1, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
DEBUG [main] TransactionContext.recover(503) | Recover: 16777216

and the exception was as follows.

Exception in thread ""main"" java.lang.ClassCastException: [Lorg.apache.activemq.command.DataStructure;
	at org.apache.activemq.TransactionContext.recover(TransactionContext.java:508)
	at activemqtest.XATest.main(XATest.java:27)


It seems to me that in case when activemq has nothing to recover as there is no transaction to recover then the code has problems and the offending line is

return (XATransactionId[]) receipt.getData();

And my ide is on evaluating this line shows me
receipt.getData() = org.apache.activemq.command.DataStructure[0]

and it seems to me that this array of DataStructure contains nothing and it is just instantiated without any elements and the class used to instatiate is not the instance of XATransactionId, i think it might work if there is something to recover.


","27/Nov/06 19:11;jstrachan;h3. Guy

I've added your test case to subversion...

https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-test-atomikos/

Unfortunately it works perfectly against trunk. I'm guessing the test case only fails if you have XA transactions to recover?


h3. Shoaib 

Thanks for the great diagnosis! Yeah that line of code does look suspicious. I've patched the code in trunk to avoid the ClassCastException - though I'm not too sure how to reproduce the bug yet. I wonder could you try trunk and see if it now works for you?","27/Nov/06 20:54;guypardon;Hi James,

Thanks but no, we don't have to recover anything in this test case.  
It just fails for 4.0.2 and 4.0.1. Not so for 3.1.

Also see this on the JOMT list:

http://mail-archive.objectweb.org/jotm/2006-11/msg00002.html

(second half of the message). The issue also seems to arise with JOTM.

Best,
Guy



","27/Nov/06 20:58;guypardon;
James,

Did you try with JDK 1.4.2? That is the one we used.

Guy




","28/Nov/06 12:28;jstrachan;FWIW I've tried the same test case against 4.0.2 as well and it works fine. I'm attaching the pom.xml file you can use in the activemq-test-atomikos directory to run the test case against 4.0.2 of ActiveMQ.","28/Nov/06 12:29;jstrachan;This pom.xml replaces the one in activemq-test-atomikos to run against 4.0.2 of ActiveMQ","28/Nov/06 13:26;jstrachan;Just to make absolutely sure, I've added the test case into the 4.0 branch too

https://svn.apache.org/repos/asf/incubator/activemq/branches/activemq-4.0/activemq-test-atomikos/

and the test case works fine. I wonder if these tests fail on a specific platform only? I wonder could someone try running these test cases on Windows (am an OS X / unix person myself)

BTW I tried Java 1.4.2 with the 4.0 branch (which is basically 4.0.2)

","28/Nov/06 14:06;guypardon;James,

FYI: I am seeing this exactly on OSX/Unix myself.

What I can do is upload the whole thing as a ZIP (if you say whereto).

Guy




","28/Nov/06 14:12;shoaib;Hi James,
It is quite amazing that you cannot reproduce the problem Guy mentioned. Anyhow i am using Sun JDK 1.5.0.9 (most latest update from Sun) on Windows XP (service pack 2) with ActiveMq version 4.0.2 (the latest released version). And the problem comes i do not use linux/unix so not sure about them but on windows it is giving the classcast exception and as i said before there seems bug with activemq code when there is NO Transaction to recover and i am sure though i did not tested that in case ther is any transaction to rceover it well might work. 

Regards,
Shoaib","28/Nov/06 14:29;jstrachan;Hi Guy

Just to be sure - are you saying the bug doesn't happen for you on OSX/Unix? i.e. its a windows only bug?","28/Nov/06 14:30;jstrachan;Shoaib - I wonder could you try using ActiveMQ trunk (or tomorrows nightly snapshot build of 4.2-SNAPSHOT) to see if I've fixed the bug for you on your environment? I think I've nailed the ClassCastException you're seeing - am just not yet sure of the magic incantations to reproduce it so I can know for sure its fixed","28/Nov/06 14:33;shoaib;Hi James,
In the meanwhile the url mentioned by Guy Pardon really shows that the exception occurs only when there is no transaction to recover
http://mail-archive.objectweb.org/jotm/2006-11/msg00002.html","28/Nov/06 15:18;jstrachan;Hi Shoaib

Thanks for the link. FWIW the patch Mary gives is similar to the one you suggested and the one I've applied to trunk to fix this issue. So fingers crossed its fixed.
","28/Nov/06 15:23;shoaib;Hi James and Guy,

I ran the above test with ActiveMq 3.1 on Windows Xp service pack 2 on jdk 1.5.0.9 and as mentioned by Guy it worked perfectly well. And the line i mentioned in my previous entry (i.e.  return (ActiveMQXid[]) receipt.getResult(); ) evaulated to as follows

receipt.getResult()=org.activemq.message.ActiveMQXid[0]

and as you can see in previosu post that for 4.0.2 it evaulated to 
receipt.getData() = org.apache.activemq.command.DataStructure[0]

I know there has been lot of changes in 3.1 nad 4.0.2 but somehow this bug was introduced as you can see
 that ActiveMQXid[0] and .DataStructure[0] has a lot of differnce as the former can be casted to ActiveMQXid[] or 
XATransactionId[] in new version but the DataStructure[0] could not be. 
So i am sure that ActiveMq code has definetly a problem here and the URL mentioned by Guy on JOTM also support this (though i could not find those lines in code) but i guess that this problem should be resolved quickly as both atomikos and activemq are great products and form an excellent combination with each other.
","28/Nov/06 15:28;shoaib;Hi James,
Sorry i could not see your post before i posted my comment. If it is fixed may i ask whats the timeline for it releasing as it seems to be quite a major bug.

Best Regards and Thanks,
Shoaib","28/Nov/06 15:45;jstrachan;Aha! So the reason the test case was working that I checked into trunk and 4.0 branch was due to the fact that the test was using the VM transport - which tends to avoid mashalling to and from a socket, so not causing the bug.

Have patched the test case both in trunk and in the 4.0 branch. The one in the 4.0 branch now does indeed fail with the ClassCastException. The one in trunk passes with flying colours. So this issue is now resolved and will go out as part of the 4.2 release.

If we cut a 4.1.x bug fix release this fix can be back ported for that too

","28/Nov/06 16:15;jstrachan;Have backported the test case and fix to 4.1 branch too if we release a new bug fix release of 4.1 before 4.2","29/Nov/06 03:37;shoaib;Hi James,
Thanks for the fixed bug and thanks to Guy Pardon as well for reporting this issue. Last nigh i saw the patch you applied and i think though still not able to check that it should be working but the patch code seems to be a little hack i think it can be improved and that too not in TransactionContext anyhow it is still great that this bug is fixed. Great work ActiveMq team, its is a great and extremely cool messaging system. Cheers !

Regards,
Shoaib Akhtar","29/Nov/06 08:56;jstrachan;updated fix versions",,,,,,,,,,,,,,
Connection is not released by broker when client is killed when client is sending to a queue that is full,AMQ-1052,12481809,12481916,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,15/Nov/06 18:33,26/Feb/07 19:23,30/Jan/20 16:57,26/Feb/07 17:32,4.0,,,,,,4.1.1,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84311,,,Mon Feb 26 17:35:24 UTC 2007,,,,,,,,"0|i180nz:",254910,,,,,,,,,,,,,,,,,,,"26/Feb/07 17:34;chirino;Fixed in 4.1 branch rev 511089","26/Feb/07 17:35;chirino;TODO: port fix to trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory Leaks,AMQ-847,12481905,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,27/Jul/06 00:41,26/Feb/07 18:41,30/Jan/20 16:57,26/Feb/07 18:41,,,,,,,4.0.3,,,Broker,,,,4,"1) factoryStats in the connection factory was holding on to connections even when they are closed.
2) peer BrokerInfos were never removed even when the peer disconnected.
3) messages dispatched from a Queue would retain a referece to the client connection even after they had been acked.
4) ScheduledThreadPoolExecutor does not always seem to release references to canceled tasks
",,eklas,utuba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-07-27 07:17:08.0,,,false,,,,,,,,,,,,,,,,,92748,,,Mon Feb 26 18:41:00 UTC 2007,,,,,,,,"0|i0s2t3:",161931,,,,,,,,,,,,,,,,,,,"27/Jul/06 00:42;chirino;Fixed in 4.0 branch rev 425922","27/Jul/06 07:17;jstrachan;I think  1) is a duplicate of AMQ-835 maybe?","27/Jul/06 16:54;chirino;your right.  the rest of the issue fixed in 4.1 branch rev 426134.","16/Oct/06 08:46;janknecht;There seems to be still some more leaks, try the following junit test with 4.0.2 RC4:

{code} 
  public void testCreateConnectionMemoryLeak() throws Exception {
    Connection c = null;
    // ACXMessagingFactory messagingFactory = this.getSessionContext().getFactoryContext().getMessagingFactory();
    ActiveMQConnectionFactory messagingFactory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
    boolean closed = false;

    for (int i = 0; i < 10000; i++) {
      try {
        c = messagingFactory.createConnection();
        closed = false;
        c.close();
        closed = true;

      } finally {
        if (!closed) {
          c.close();
        }
      }
    }
  }
{code} ","15/Dec/06 07:42;eklas;I think this issue is actually *two* (or more:) memory leaks.
One in createConnection() and one in close().
I tried a very similar program with the following results:

apache-activemq-4.2-incubator-20061204.023752-14:
1. 'createConnection' followed by 'close' when activeMq-server is UP:
   outOfmemory after ~1800 createConnection-close.

2. 'createConnection' without close when activeMq server is not started.
  outOfmemory after < 1800 failed 'createConnection'.

I have also tried 4.0.x and 4.1.x. The leak memory too.","26/Feb/07 18:41;chirino;keeping this issue resolved since I think reported problem is a different bug.  Opened up AMQ-1177",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledBrokerFactoryBean incorrectly compares broker config resources,AMQ-1106,12481888,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,aco,aco,21/Dec/06 16:28,26/Feb/07 18:22,30/Jan/20 16:57,21/Dec/06 17:21,4.1.1,,,,,,4.1.1,5.0.0,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84584,,,Thu Dec 21 17:21:04 UTC 2006,,,,,,,,"0|i180tz:",254937,,,,,,,,,,,,,,,,,,,"21/Dec/06 17:21;aco;Fix for 4.1 branch committed to: rev 489409
Fix for 4.2 branch committed to: rev 489413",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
create=false for vm://localhost causes Exception,AMQ-1128,12481849,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,tuck182,tuck182,14/Jan/07 02:16,26/Feb/07 17:35,30/Jan/20 16:57,26/Feb/07 17:35,4.1.0,,,,,,4.1.1,5.0.0,,,,,,0,"When setting create=false in ActiveMQConnectionFactory.brokerUrl, the VMTransportFactory's doCompositeConnect method fails with:

Invalid connect parameters: {create=false}

Removing this option from the options map when retrieving it fixes this bug.  Patch attached.
",,tuck182,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jan/07 02:16;tuck182;ASF.LICENSE.NOT.GRANTED--create-false-fix.patch;https://issues.apache.org/jira/secure/attachment/12460601/ASF.LICENSE.NOT.GRANTED--create-false-fix.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-02-26 17:35:26.958,,,false,,,,,,,,,,,,,,,,,84485,,,Mon Feb 26 17:35:26 UTC 2007,,,,Patch Available,,,,"0|i0s2rb:",161923,,,,,,,,,,,,,,,,,,,"14/Jan/07 02:17;tuck182;AMQ-958 is the issue that introduced the original feature","26/Feb/07 17:35;jstrachan;on trunk rev: 511912
on 4.x rev: ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong message removed from store when using composite destinations,AMQ-959,12481837,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,hbruch,hbruch,06/Oct/06 18:15,26/Feb/07 17:10,30/Jan/20 16:57,20/Nov/06 13:44,4.0.2,,,,,,4.1.1,5.0.0,,Broker,,,,0,"When sending messages to composite destinations, for each simple destination a copy of the original message is created an sent. However, it's internal messageId is reused. As the messageId carries the brokerSequenceId, which is used as primary key in the jdbc message store, this is overwritten by the last send. All messages refer to the same store row so that the first acknowledge removes the content for all MessageReferences in memory.

The attached patch creates a copy of the messageId when copying a message.

Regards,
Holger


",AMQ4.0.2 using jdbc-persistence,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/06 18:15;hbruch;ASF.LICENSE.NOT.GRANTED--CopyMessageId.diff;https://issues.apache.org/jira/secure/attachment/12460687/ASF.LICENSE.NOT.GRANTED--CopyMessageId.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-11-20 13:44:40.0,,,false,,,,,,,,,,,,,,,,,84436,,,Mon Nov 20 13:44:40 UTC 2006,,,,Patch Available,,,,"0|i180jb:",254889,,,,,,,,,,,,,,,,,,,"20/Nov/06 13:44;jlim;Thanks! 

patch applied in :
trunk : 477171
4.1 branch : 477173",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in STOMP transport unsubscribe,AMQ-1077,12481851,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jurna,jurna,29/Nov/06 12:56,26/Feb/07 17:08,30/Jan/20 16:57,23/Jan/07 14:30,4.0.2,,,,,,4.1.1,5.0.0,,Transport,,,,1,"After several ubscribe/unsubscribe commands to activemq, subscribtions are not removed and there's error log in the broker: 
java.lang.IllegalStateException: Cannot remove a consumer that had not been registered: ID:das-32775-1164773607925-3:1881:-1:2
        at org.apache.activemq.broker.AbstractConnection.processRemoveConsumer(AbstractConnection.java:551)
        at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:64)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:61)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:70)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:112)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompUnsubscribe(ProtocolConverter.java:376)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommad(ProtocolConverter.java:144)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:60)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)

The problem is that there's internal map of subscriptions in ProtocolConverter class. On unsubscribe command, subscription is not removed from this internal map. Attached patch (against ProtocolConverter.java) fixes this bug
","linux 2.6, java 1.5",fullung,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/06 12:56;jurna;ASF.LICENSE.NOT.GRANTED--patch.txt;https://issues.apache.org/jira/secure/attachment/12460688/ASF.LICENSE.NOT.GRANTED--patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-01-23 14:30:53.429,,,false,,,,,,,,,,,,,,,,,84419,,,Mon Feb 26 17:08:46 UTC 2007,,,,Patch Available,,,,"0|i0s2sf:",161928,,,,,,,,,,,,,,,,,,,"12/Jan/07 06:24;jurna;Is is possible for the provided patch to be applied for 4.2 version?","23/Jan/07 14:30;rajdavies;resolved by SVN revision 499032","26/Feb/07 17:08;jstrachan;backported to 4.1 branch on rev: 511905",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in MutexTransport on shutdown with high volume of messages,AMQ-1119,12481829,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chrish,chrish,05/Jan/07 14:48,26/Feb/07 17:05,30/Jan/20 16:57,06/Jan/07 21:16,4.0,4.0.1,4.0.2,,,,4.1.1,5.0.0,,Transport,,,,0,"I ran into a deadlock in the MutextTransport.oneway(Command command) function when processing very high message volume (100% cpu utilization) at the time of a shutdown.  I'm running 4.0.2 on WinXP and within a demand forwarding environment with failover = true.
 
I did trap this deadlock in the debugger and it looks like two commands are crossing paths in opposite directions through the MutexTransport. One of the commands is a MessageDispatch and the other is a ShutdownInfo.  Now, when the ShutdownInfo gets through the MutexTransport first, it tries to shutdown the background thread of the TcpTransport.  However, this thread is currently servicing the MessageDispatch and is blocked on the MutexTransport.  Deadlock.
 
So, my patch was simply to avoid entering the synchronized(writeMutex) block in the oneway(Command command) function of MutexTransport if
command.isShutdownInfo() returns true:
 
if (command.isShutdownInfo())
   next.oneway(command);
else
   synchronized(writeMutex)  {
      next.oneway(command);
   }","Windows XP, demand forwarding, failover == true",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-01-06 21:16:22.119,,,false,,,,,,,,,,,,,,,,,84307,,,Mon Feb 26 17:05:12 UTC 2007,,,,,,,,"0|i180y7:",254956,,,,,,,,,,,,,,,,,,,"06/Jan/07 21:16;rajdavies;Fixed by SVN revision 493573","07/Jan/07 04:43;jlim;applied fix  in 4.0 branch :  493644","26/Feb/07 17:05;jstrachan;backported to 4.1 branch: 511900",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnectionFactory / PooledSession generates UnsupportedOperationException when publishing to a topic,AMQ-1161,12481952,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,alewando,alewando,12/Feb/07 16:09,19/Feb/07 13:45,30/Jan/20 16:57,19/Feb/07 13:45,4.1.0,,,,,,5.0.0,,,JMS client,,,,0,"PooledSession does not appear to use the Topic supplied to the createPublisher(topic) method. When the publish(Message) method is called on the returned TopicPublisher instance, an UnsupportedOperationException is thrown (""A destination must be specified."").
Some simple digging turns up the fact that the ActiveMQTopicPublisher instance nested inside PooledTopicPublisher gets initialized with a ProducerInfo whose destination is null. Looks like PooledSession.getTopicPublisher() is responsible for creating the publisher from the contained ActiveMQSession, but does not supply a destination (explicitly passes null).

Sample code to recreate issue (also attached is Junit test case):
		ActiveMQTopic topic = new ActiveMQTopic(""test"");
		PooledConnectionFactory pcf = new PooledConnectionFactory();
		pcf.setConnectionFactory(new ActiveMQConnectionFactory(""vm://test""));

		TopicConnection conn = (TopicConnection)pcf.createConnection();
		TopicSession session = conn.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
		TopicPublisher publisher = session.createPublisher(topic);
		publisher.publish(session.createMessage());
",,alewando,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Feb/07 16:09;alewando;ASF.LICENSE.NOT.GRANTED--PooledTopicPublisherTest.java;https://issues.apache.org/jira/secure/attachment/12460818/ASF.LICENSE.NOT.GRANTED--PooledTopicPublisherTest.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84478,,,2007-02-12 16:09:40.0,,,,,,,,"0|i0s2un:",161938,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bug in reading temp queue using the tempDestinationAuthorizationEntry  feature,AMQ-1163,12481930,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,jlim,jlim,15/Feb/07 02:58,15/Feb/07 03:00,30/Jan/20 16:57,15/Feb/07 03:00,,,,,,,5.0.0,,,,,,,0,"

> Folks,
>
> I've been trying to use the tempDestinationAuthorizationEntry feature in 4.2
> and I think I've found a problem. If I set up a consumer of the temp queue
> and add it to the read permission, it always reports that I don't have
> permission to read the queue. However, if I add that consumer to the write
> permission on the queue it works like a charm.
>
> Looking at the source I think I have discovered a bulk copy/paste problem.
> If you look at
> org.apache.activemq.security.AuthorizationBroker.addConsumer() in the source
> trunk, you will see this little piece of code a couple of lines from the top
> of the method:
>
>         if(!info.getDestination().isTemporary()) {
>             allowedACLs =
> authorizationMap.getReadACLs(info.getDestination());
>         }else {
>         	allowedACLs = authorizationMap.getTempDestinationWriteACLs();
>         }
>
> Note that it gets the TempDestinationWriteACLs(), even though if we are not
> a temp queue it gets the ReadACLs().  If you look in addProducer() you can
> see a similar piece of code that might be where this copy originated.
>
> I am using what looks to be the latest 4.2 SNAPSHOT (file:
> apache-activemq-4.2-20070214.034812-3.zip).
>
>    lorne
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95694,,,Thu Feb 15 03:00:26 UTC 2007,,,,,,,,"0|i180yv:",254959,,,,,,,,,,,,,,,,,,,"15/Feb/07 03:00;jlim;resolved in trunk :  r507792",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update scm in pom.xml to point to new repository.,AMQ-1159,12481910,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,foconer,foconer,foconer,09/Feb/07 05:56,09/Feb/07 06:03,30/Jan/20 16:57,09/Feb/07 06:03,,,,,,,,,,,,,,0,scm of pom.xml still points to incubator.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95692,,,Fri Feb 09 06:03:43 UTC 2007,,,,,,,,"0|i0s0on:",161587,,,,,,,,,,,,,,,,,,,"09/Feb/07 06:03;foconer;Updated scm in pom.xml to point to new repository. 
r505193.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compression not working ,AMQ-1140,12481977,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,bsnyder,bsnyder,bsnyder,25/Jan/07 21:27,30/Jan/07 18:26,30/Jan/20 16:57,30/Jan/07 18:25,4.1.0,,,,,,4.1.1,5.0.0,,Broker,,,,0,"When setting compression from the message producer side using the {{ActiveMQConnectionFactory.setUseCompression(true)}} method, a call to the {{ActiveMQConnectionFactory.isUseCompression()}} method then returns true. However, when using [Ethereal|http://www.ethereal.com/] to sniff the packets between brokers, the message bodies are not compressed - they're just plain text. This appears to be a bug. 

I'll try to create a test for this. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-01-30 18:25:08.762,,,false,,,,,,,,,,,,,,,,,84483,,,Tue Jan 30 18:26:28 UTC 2007,,,,,,,,"0|i180zz:",254964,,,,,,,,,,,,,,,,,,,"30/Jan/07 18:25;chirino;Added test case and fixed.","30/Jan/07 18:26;chirino;Fix in trunk rev 501506 and fixed in 4.1 branch in rev 501500",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stomp connections in the broker don't get cleared up if the socket dies,AMQ-1134,12481077,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,19/Jan/07 18:36,19/Jan/07 18:40,30/Jan/20 16:57,19/Jan/07 18:37,,,,,,,4.1.1,5.0.0,,Broker,,,,0,it looks like there's a bug causing the connection to keep around ,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-1067,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95685,,,2007-01-19 18:36:33.0,,,,,,,,"0|i180xb:",254952,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MySql should use LONGBLOB rather than BLOB for persisting messages to avoid the 64k limit,AMQ-1130,12481022,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,17/Jan/07 09:37,17/Jan/07 09:38,30/Jan/20 16:57,17/Jan/07 09:38,,,,,,,4.1.1,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43024,,,2007-01-17 09:37:39.0,,,,,,,,"0|i0t0in:",167393,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slow consumer terminally blocks both client and broker,AMQ-1020,12481051,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,roblugt,roblugt,01/Nov/06 17:46,08/Jan/07 13:49,30/Jan/20 16:57,08/Jan/07 13:49,4.0.2,,,,,,5.0.0,,,Broker,,,,1,"I have a multi-threaded client (client1) which is acting as both a publisher (Topic1) and subscriber (Topic2) using a single session.  There is another client process (client2) which publishes on Topic2.

I have witnessed the following repeatable scenario where both clients get stuck, which can only be rectified by restarting the broker! :-

Client1 publishes messages to Topic1 (rate = about 30 msgs/sec).
Client2 publishes bursts of messages to Topic2 (rate = 500 msgs/sec) 
Client1 is a slow subscriber on Topic2

After running in this scenario for a couple of seconds, Client1 and Client2 become stuck.  Looking at a stack trace for Client1 I can see that it's read_loop is stuck waiting for input, and it's publisher thread is stuck waiting for an acknowledgement to the synchronous message send (the acknowledgement never arrives because the broker won't sent any more messages).

Client2 is also stuck waiting for an acknowledgement to a synchronous send.

My perception is that it appears the broker is throttling the connection because the consumer is running slowly, but for some reason it gets into a state where all message flow stops (even though the consumer is automatically acknowledging messages, albeit slowly).  Furthermore, if I kill Client1 the broker doesn't recover (using a JMX console the connection remains visible).

The broker uses a vanilla configuration (i.e. no policies are set for the topics in quedtion).
 ","Broker: Windows XP, Sun JDK1.5  Client: activemq-dotnet (Trunk)",pauln@pandora.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-02 12:09:10.0,,,false,,,,,,,,,,,,,,,,,84428,,,Mon Jan 08 13:49:44 UTC 2007,,,,,,,,"0|i0s2d3:",161859,,,,,,,,,,,,,,,,,,,"02/Nov/06 12:09;jstrachan;Are you using explicit acknowledgements or auto-ack (or transactions?). The default prefetch is only about 1000 I think for NMS which means after sending 1000 messages no more messages will be dispatched to a consumer until it receives acks. So I can see why Client1 becomes stuck pretty quickly and why client1 can no longer publish more messages.

So 2 things to try...

use dispatchAsync=true (on consumer info) on the consumers, so that dispatching to consumers is asynchronous in the broker. That way a producer won't get blocked waiting to dispatch to slow consumers.

Also try upping the prefetch value to something large. e.g. on Java for non-persistent topics its about 32000 I think","02/Nov/06 22:48;roblugt;Hi James

I'm using auto-acknowledgements (no transactions).  You are correct that the NMS prefetch default is 1000 messages, and this threshold appears to have a bearing on when the consumer (and hence the publisher) gets stuck.  Changing the prefetch size may well remove the symtoms from my test case, but that's not really what I'm looking for.  I believe the test case exposes a critical bug in the broker, and hence gives us an opportunity to fix the bug, which is preferable to changing the configuration to avoid the condition (sod's law dictates that the condition will re-emerge as soon as my application goes into production).

I think there are two crucial points here that need investigating
1) even though [auto] acknowledgements are being sent to the broker, the consumer is getting stuck dead (i.e. no message activity is occuring once the broker becomes stuck).
2) killing the slow consumer does not rectify the situation.  This implies that the broker is stuck in some state where it doesn't recognise the client socket has been closed.

It's probably worth noting that this problem does not occur when I disable Client1 from publishing (even though it's still a slow consumer).  It's only when Client1 is a slow consumer and a [fast] publisher that it falls into the dead-locked condition.","05/Dec/06 19:30;pauln@pandora.com;
I have run into this same issue I think.

We have a scenario with a DurableSubscriber that has retrieved some messages and then disconnects.
The publisher continuous publishing at 1000 messages per second.
After 60000 messages are sent, the publisher hangs, and the broker quiesces.

I have seen this behavior with 4.0.1 and 4.1.0

I took a stack trace which showed the server was stuck in UsageManager.waitForSpace().

I can delay the hanging problem by configuring more memory in the MemoryManager.
I have tried setting timeToLives and pendingMessageLimitStrategies but I still get the hanging.

If I use a non durable subscriber the problem goes away, but this is not an ideal solution for us.","08/Jan/07 13:49;rajdavies;This is fixed by the default use of cursors and the spooling to disk for non-durable slow topic consumers",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ Queue management- How to kill a queue?,AMQ-1114,12481015,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,vairavanc,vairavanc,03/Jan/07 07:27,03/Jan/07 09:41,30/Jan/20 16:57,03/Jan/07 09:41,4.0.1,,,,,,4.1.0,,,Broker,JCA Container,,,0,"ActiveMQ: Through 'jconsole' we can view all the java components which ever is active. So by this way, we can see the particular queue and also we can able to find how many customers are listening.

But I want to manage the queue, like I want to kill a particular queue.  Can anybody help me how to proceed with?

It's pleasure to explain more if you are not clear.

Thanks in advance
Shekar","Windows XP, Jdk 1.5, ActiveMQ4.0.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-01-03 09:41:45.6,,,false,,,,,,,,,,,,,,,,,84362,,,Wed Jan 03 09:41:45 UTC 2007,,,,,,,,"0|i0t0iv:",167394,,,,,,,,,,,,,,,,,,,"03/Jan/07 09:41;jstrachan;See the methods on the Queue MBean such as purge() to delete all messages on a queue

http://incubator.apache.org/activemq/maven/activemq-core/apidocs/org/apache/activemq/broker/jmx/QueueViewMBean.html#purge()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS to JMS Bridge fails with Number format exception on physical name,AMQ-1110,12481028,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,kay.stanke,kay.stanke,28/Dec/06 13:23,02/Jan/07 07:08,30/Jan/20 16:57,02/Jan/07 07:08,4.1.0,,,,,,5.0.0,,,Broker,,,,0,"Maybe this is just some missconfiguration from my site but ...

I'm trying to use activemq to integrate some c++ code with the j2ee world. My task is to forward messages generated on the c++ side to the JMS of Bea Weblogic 8.1. ActiveMQ is running outside the WLS in a separate process. The startup looks fine as the wls context can be used to get references to the ConnectionFactory and the configured test destination WLSTestQ. On sending a message to the local queue of the bridge i get the following stacktrace:

 java.lang.NumberFormatException: For input string: ""WLSTESTQ""
at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
at java.lang.Integer.parseInt(Integer.java:447)
at java.lang.Integer.parseInt(Integer.java:497)
at org.apache.activemq.command.ActiveMQTempDestination.setPhysicalName(ActiveMQTempDestination.java:66)
at org.apache.activemq.command.ActiveMQDestination.<init>(ActiveMQDestination.java:142)
at org.apache.activemq.command.ActiveMQTempDestination.<init>(ActiveMQTempDestination.java:38)
at org.apache.activemq.command.ActiveMQTempQueue.<init>(ActiveMQTempQueue.java:36)
at org.apache.activemq.command.ActiveMQDestination.transform(ActiveMQDestination.java:107)
at org.apache.activemq.command.ActiveMQMessage.setJMSDestination(ActiveMQMessage.java:219)
at weblogic.jms.client.JMSProducer.sendInternal(JMSProducer.java:428)
at weblogic.jms.client.JMSProducer.send(JMSProducer.java:152)
at weblogic.jms.client.JMSProducer.send(JMSProducer.java:215)
at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:87)
at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:134)
at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:840)
at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:96)
at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:165)
at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:88)
at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:25)
at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:39)

ERROR DestinationBridge - failed to forward message on attempt: 1 
reason: java.lang.NumberFormatException: 
For input string: ""WLSTESTQ"" message: 
ActiveMQTextMessage {
commandId = 14, 
responseRequired = false, 
messageId = ID:KStanke-1523-1167310376227-0:0:1:1:10, 
originalDestination = null, 
originalTransactionId = null, 
producerId = ID:KStanke-1523-1167310376227-0:0:1:1, 
destination = queue://TEST.FOO, 
transactionId = null, 
expiration = 0, 
timestamp = 1167310385795, 
arrival = 0, 
correlationId = null, 
replyTo = null, 
persistent = false, 
type = null, 
priority = 4, 
groupID = null, 
groupSequence = 0, 
targetConsumerId = null,
compressed = false, 
userID = null, 
content = null, 
marshalledProperties = null,
dataStructure = null, 
redeliveryCounter = 0, 
size = 0, 
properties = null, 
readOnlyProperties = true, 
readOnlyBody = true, 
droppable = false, 
text = Message: 9 sent at: Thu Dec 28 13:53:05 CET 2006
[Skipped some blank lines]
}

I'm using the message producer from the example to test the routing to wls JMS.  I also attached my activemq.xml configuration for you reference.","Using Windows XP SP2, JDK 1.6.0, Bea Weblogic Server 8.1 SP6",kay.stanke,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Dec/06 13:23;kay.stanke;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460544/ASF.LICENSE.NOT.GRANTED--activemq.xml",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-01-02 07:08:18.853,,,false,,,,,,,,,,,,,,,,,43765,,,Tue Jan 02 07:08:18 UTC 2007,,,,,,,,"0|i0s2c7:",161855,,,,,,,,,,,,,,,,,,,"02/Jan/07 07:08;rajdavies;Fixed by the latest SVN revision 491753",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pure master/slave not replicating messages,AMQ-1030,12483921,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,mike@iizuka.co.uk,mike@iizuka.co.uk,07/Nov/06 20:58,27/Dec/06 08:06,30/Jan/20 16:57,27/Dec/06 08:06,4.1.0,,,,,,,,,Broker,,,,0,"Just did a fresh checkout of 4.1.  The pure master/slave replication is not forwarding messages received by master leading to lost messages if master dies.  Worked fine in rc-1.

Logs on both instances show all the usual ""slave connected"" messages.","rhas4,  sun jdk 1.5.0_08",bde,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-12-27 08:06:02.0,,,false,,,,,,,,,,,,,,,,,84498,,,Wed Dec 27 08:06:02 UTC 2006,,,,,,,,"0|i180q7:",254920,Regression,,,,,,,,,,,,,,,,,,"27/Dec/06 08:06;rajdavies;this should be fixed by SVN revision 490454",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to xbean 2.8 to fix invalid generated schemas,AMQ-1107,12481879,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gnodet,gnodet,gnodet,22/Dec/06 14:37,22/Dec/06 14:45,30/Jan/20 16:57,22/Dec/06 14:45,,,,,,,4.1.1,5.0.0,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95679,,,Fri Dec 22 14:45:23 UTC 2006,,,,,,,,"0|i180tr:",254936,,,,,,,,,,,,,,,,,,,"22/Dec/06 14:45;gnodet;URL: http://svn.apache.org/viewvc?view=rev&rev=489664
URL: http://svn.apache.org/viewvc?view=rev&rev=489665
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using a selector provides invalid output,AMQ-1097,12481815,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,marlonsantos,marlonsantos,13/Dec/06 09:56,14/Dec/06 12:28,30/Jan/20 16:57,14/Dec/06 12:27,4.0.3,4.1.1,4.1.2,5.0.0,,,5.0.0,,,Selector,,,,0,"When consuming messages with a selector, the consumer consumes invalid messages. (Both queue and topic).  

","Windows XP Professional, jdk 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-12-13 10:12:47.0,,,false,,,,,,,,,,,,,,,,,84585,,,Thu Dec 14 12:27:36 UTC 2006,,,,,,,,"0|i0equf:",84111,,,,,,,,,,,,,,,,,,,"13/Dec/06 10:12;aco;This is when using the destination url configuration. e.g. (TEST.FOO?consumer.selector=test=1)","14/Dec/06 12:27;aco;Fix added to r487187",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnectionFactory.setBrokerURL does not set all connection properties corrrectly,AMQ-761,12481707,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jbeattie,jbeattie,20/Jun/06 03:47,04/Dec/06 12:42,30/Jan/20 16:57,04/Dec/06 12:42,3.2.2,,,,,,4.1.0,,,JMS client,,,,0,"If I set the brokerUrl of ActiveMQConnectionFactory using setBrokerURL(), the connection factory does not reparse all of the properties from the URL.  As a result, when a new connection is created, some of the properties from the URL specified during the construction of the connection factory (typically the defaults) are used instead.  Attached is a unit test to demonstrate the problem.

As a minimum, the following block of code is required in setBrokerURL().  But this doesn't really fix it because properties settings from the URL used by the constructor may not be reset by this code.  A structural change may be in order (e.g. just-in-time parsing of the properties).

       if( brokerURL.indexOf(""?"")>= 0 ) {
            String options = brokerURL.substring(brokerURL.indexOf(""?"")+1);
            Map properties = URIHelper.parseQuery(options);
            if (!properties.isEmpty()) {
                BeanUtils.populate(this, properties);
            }   ","Windows XP, Java 1.4.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/06 03:47;jbeattie;ASF.LICENSE.NOT.GRANTED--UrlSetterTest.java;https://issues.apache.org/jira/secure/attachment/12460570/ASF.LICENSE.NOT.GRANTED--UrlSetterTest.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84278,,,2006-06-20 03:47:07.0,,,,,,,,"0|i17ztz:",254775,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Active MQ is creating great number of Oracle processes,AMQ-728,12481685,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,hanshuber,hanshuber,29/May/06 16:10,04/Dec/06 12:28,30/Jan/20 16:57,04/Dec/06 12:28,3.2.1,,,,,,5.0.0,,,Message Store,,,,0,"We migrated from derby to Oracle as message persistence layer. We discoverd now, that ActiveMQ is creating a lot of Oracle resource intensive processes. Please see attached diagrams:

OracleBefore.png = Orace processes with derby as persistence layer
OraceAfter.png = Oracle processes with Oracele as persistence layer

Any help is much appreciated. If you need any additional information, pls don't hesitate to contact me

Best regards, Hans Huber","Sun Solaris 8, Oracle 9i2, Java 1.4.2_08",sjivan,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/May/06 16:10;hanshuber;ASF.LICENSE.NOT.GRANTED--OracleAfter.png;https://issues.apache.org/jira/secure/attachment/12460766/ASF.LICENSE.NOT.GRANTED--OracleAfter.png","29/May/06 16:10;hanshuber;ASF.LICENSE.NOT.GRANTED--OracleBefore.png;https://issues.apache.org/jira/secure/attachment/12460849/ASF.LICENSE.NOT.GRANTED--OracleBefore.png",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-06-13 02:54:22.0,,,false,,,,,,,,,,,,,,,,,84273,,,Mon Dec 04 12:28:21 UTC 2006,,,,,,,,"0|i0s2nr:",161907,,,,,,,,,,,,,,,,,,,"13/Jun/06 02:54;chirino;Hans,

Could you try setting up activemq to use the c3p0 http://sourceforge.net/projects/c3p0 datasource instead of the commons datasource?
We have had reports that it works much better.  Could you confirm?

","27/Jun/06 18:19;hanshuber;Hi Hiram

Thanks four your help. We will test this in a test environment. I will keep you updated.

regards, Hans","04/Dec/06 12:28;jstrachan;I think this is now resolved - if it isn't please let us know and we can reopen",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
browse -QTopic=* does not seem to return anything...,AMQ-1050,12481858,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,jstrachan,jstrachan,15/Nov/06 17:37,04/Dec/06 12:19,30/Jan/20 16:57,04/Dec/06 12:19,5.2.0,,,,,,4.1.1,5.0.0,,Broker,,,,0,"I think there's something funny going on in the regex stuff. I tried from the SimpleConsole typing

  query -QTopic=*

and I get nothing. 

  query 

returns tons of stuff though.

I wonder if it might be simpler to have specific arguments for topic and queues? 

query -topic=*
queyr -queue=*

to avoid the complex regex of ObjectName etc?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-16 20:06:19.0,,,false,,,,,,,,,,,,,,,,,92812,,,Thu Nov 16 21:08:32 UTC 2006,,,,,,,,"0|i180o7:",254911,,,,,,,,,,,,,,,,,,,"16/Nov/06 20:06;aco;I've added a fix for this issue in rev 475901.

BTW, if we are going to move to Java 1.5, are we still going to use mx4j or the jmx implementation of java 1.5?

JMX supposedly has this query mechanism to perform better object name querying and I want to use that instead of the regex thing. Last time I checked though, mx4j doesn't seem to support it, so I want to check if Java 1.5 has or the recent mx4j version has it. I'll keep this JIRA open to remind.","16/Nov/06 21:00;aco;I might as well commit add this in the 4.1 branch also. :)","16/Nov/06 21:08;aco;Fix added to 4.1 branch via r475929",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in Queue.java,AMQ-1070,12481873,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,kaitchuc,kaitchuc,24/Nov/06 23:11,29/Nov/06 07:54,30/Jan/20 16:57,29/Nov/06 07:54,4.0.2,,,,,,5.0.0,,,Broker,,,,0,"It is possible to have a deadlock as follows:

""ActiveMQ Transport: tcp:///127.0.0.1:53335"":
        at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:66)
        - waiting to lock <0x90786240> (a org.apache.activemq.broker.region.QueueSubscription)
        at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:192)
        - locked <0x908fa480> (a java.util.LinkedList)
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:93)
        - locked <0x903b9b40> (a java.lang.Object)
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:221)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:130)
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:142)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:130)
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:143)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:182)
        - locked <0x908e6cb8> (a java.lang.Object)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:297)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:74)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:78)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:87)
        at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:538)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:296)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:124)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:138)
        at java.lang.Thread.run(Thread.java:595)
""ActiveMQ Transport: tcp:///127.0.0.1:53315"":
        at org.apache.activemq.broker.region.Queue.dropEvent(Queue.java:321)
        - waiting to lock <0x908fa480> (a java.util.LinkedList)
        at org.apache.activemq.broker.region.Queue.dropEvent(Queue.java:315)
        at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:54)
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:125)
        - locked <0x90786240> (a org.apache.activemq.broker.region.QueueSubscription)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:265)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:366)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:177)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:66)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:66)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:79)
        at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:445)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:179)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:124)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:138)
        at java.lang.Thread.run(Thread.java:595)


The simple solution is in AbstractReagion.java:
@@ -89,10 +89,12 @@
             // Add all consumers that are interested in the destination.
             for (Iterator iter = subscriptions.values().iterator(); iter.hasNext();) {
                 Subscription sub = (Subscription) iter.next();
+                synchronized (sub) {
                 if( sub.matches(destination) ) {
                     dest.addSubscription(context, sub);
                 }
             }
+            }
             return dest;
         }
     }
@@ -104,11 +106,13 @@
         if( timeout == 0 ) {
             for(Iterator iter=subscriptions.values().iterator();iter.hasNext();){
                 Subscription sub=(Subscription) iter.next();
+                synchronized (sub) {
                 if(sub.matches(destination)){
                     throw new JMSException(""Destination still has an active subscription: ""+destination);
                 }
             }
         }
+        }

         if( timeout > 0 ) {
             // TODO: implement a way to notify the subscribers that we want to take the down
@@ -125,10 +129,12 @@
                 // timeout<0 or we timed out, we now force any remaining subscriptions to un-subscribe.
                 for(Iterator iter=subscriptions.values().iterator();iter.hasNext();){
                     Subscription sub=(Subscription) iter.next();
+                    synchronized (sub) {
                     if(sub.matches(destination)){
                         dest.removeSubscription(context, sub);
                     }
                 }
+                }

                 destinationMap.removeAll(destination);
                 dest.dispose(context);
@@ -173,7 +179,8 @@
             // broker will not see a destination that exists in persistent store.  We may want to
             // eagerly load all destinations into the broker but have an inactive state for the
             // destination which has reduced memory usage.
-            //
+            synchronized (sub)
+            {
             if( persistenceAdapter!=null ) {
                 Set inactiveDests = getInactiveDestinations();
                 for (Iterator iter = inactiveDests.iterator(); iter.hasNext();) {
@@ -183,6 +190,7 @@
                     }
                 }
             }
+            }

             subscriptions.put(info.getConsumerId(), sub);

@@ -193,16 +201,16 @@
             // no mutex held. Remove is only essentially run once
             // so everything after this point would be leaked.

+            synchronized (sub) {
             // Add the subscription to all the matching queues.
             for (Iterator iter = destinationMap.get(info.getDestination()).iterator(); iter.hasNext();) {
                 Destination dest = (Destination) iter.next();
                 dest.addSubscription(context, sub);
             }
-
             if( info.isBrowser() ) {
                 ((QueueBrowserSubscription)sub).browseDone();
             }
-
+            }
             return sub;
         }
     }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-29 07:54:52.0,,,false,,,,,,,,,,,,,,,,,84420,,,Wed Nov 29 07:54:52 UTC 2006,,,,Patch Available,,,,"0|i180x3:",254951,,,,,,,,,,,,,,,,,,,"29/Nov/06 07:54;rajdavies;Locking behaviour has changed for 4.2 - can now longer reproduce this",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestinationMap seems to use up lots of RAM if using deep hierarchies,AMQ-1068,12481816,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,22/Nov/06 21:18,27/Nov/06 17:42,30/Jan/20 16:57,22/Nov/06 21:21,4.0.2,4.1.0,,,,,5.0.0,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84421,,,Mon Nov 27 17:42:15 UTC 2006,,,,,,,,"0|i180mf:",254903,,,,,,,,,,,,,,,,,,,"22/Nov/06 21:21;jstrachan;see the test case DestinationMapMemoryTest which used to blow up and create OutOfMemory before the patch","27/Nov/06 17:42;jstrachan;The fix was done in r478324 on trunk if folks wanna backport",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sync error (NullPointerException) in Broker,AMQ-1066,12481876,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cavegn,cavegn,21/Nov/06 08:41,24/Nov/06 23:59,30/Jan/20 16:57,24/Nov/06 23:59,4.0,,,,,,4.0.2,,,Broker,,,,0,"Hi

We use ActiveMQ in a productive environment. Yesterday, one of our application wasn't able to connect to the Broker. I found the following exception in the logfile:  (After I restarted the broker, everything was runnig again.)

-----

2006-10-09 12:05:37,986 [.27.81.119:1741] INFO  Service                        - Sync error occurred: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.util.SubscriptionKey.<init>(SubscriptionKey.java:35)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.registerSubscription(ManagedRegionBroker.java:161)
	at org.apache.activemq.broker.jmx.ManagedTopicRegion.createSubscription(ManagedTopicRegion.java:44)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:145)
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:113)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:296)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:73)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:77)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:73)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:86)
	at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:427)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:295)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)
	at java.lang.Thread.run(Unknown Source)

","Setup:
One Broker, multiple client applications which are running 24x7
Some queues, some topics",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-24 23:59:09.0,,,false,,,,,,,,,,,,,,,,,84310,,,Fri Nov 24 23:59:09 UTC 2006,,,,,,,,"0|i180mn:",254904,,,,,,,,,,,,,,,,,,,"24/Nov/06 23:59;kaitchuc;This was fixed in revision 382353 by rajdavies.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemoryError,AMQ-914,12481786,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,aioaneid,aioaneid,07/Sep/06 09:52,24/Nov/06 19:59,30/Jan/20 16:57,24/Nov/06 19:59,4.0.1,,,,,,5.0.0,,,,,,,0,"I was doing some testing with a single MDP listening to a queue which had about 247300 messages, with a postgres backend. ActiveMQ server was started using the default activemq startup script (on Linux). In this configuration the cpu normally stays mostly idle and I described this behaviour in another bug report.

Another issue came to surface when I tried to profile the client application with EclipseColorer to see why a single MDP can't hog my machine. But when I tried so, 4 OutOfMemoryError messages were logged by ActiveMQ server. Note that I was *not* profiling the server, but the client which is a totally different process.
",,aioaneid,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/06 09:52;aioaneid;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460626/ASF.LICENSE.NOT.GRANTED--activemq.xml","07/Sep/06 16:07;aioaneid;jmxconsole.png;https://issues.apache.org/jira/secure/attachment/12460737/jmxconsole.png",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-11-24 19:59:52.0,,,false,,,,,,,,,,,,,,,,,84382,,,Fri Nov 24 19:59:52 UTC 2006,,,,,,,,"0|i0s2pr:",161916,,,,,,,,,,,,,,,,,,,"07/Sep/06 09:57;aioaneid;Just got the same problem in the same configuration without running anything under a profiler.

INFO  Service                        - Sync error occurred: java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
INFO  Service                        - Sync error occurred: java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
INFO  Service                        - Sync error occurred: java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
INFO  Service                        - Sync error occurred: java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
INFO  Service                        - Sync error occurred: java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space

I guess I could specify some larger -xmx value, but because the back end is postgres I don't think the number of messages in the queue should have anything to do with the amount of memory the ActiveMQ server needs.","07/Sep/06 16:06;aioaneid;After more investigation on this issue, I determined the exact moment when the memory consumption jumps abruptly in a simpler scenario. It happens when a consumer is created for the queue with 200k+ messages, that is the third line below:

		con = connectionFactory.createConnection();
		Session s = con.createSession(true, Session.CLIENT_ACKNOWLEDGE);
		MessageConsumer messageConsumer = s.createConsumer(dest);

where connectionFactory is jmsConnectionFactory below:

	<!--
		###### Transaction manager ######
	-->

	<bean id=""transactionContextManager""
		class=""org.jencks.factory.TransactionContextManagerFactoryBean"" />


	 <bean id=""transactionSupport"" class=""org.jencks.factory.XATransactionFactoryBean"">
	   <property name=""useTransactionCaching"" value=""true"" />
	   <property name=""useThreadCaching"" value=""true"" />
	 </bean>
  
	<bean id=""poolingSupport""
		class=""org.jencks.factory.SinglePoolFactoryBean"">
		<property name=""maxSize"" value=""50"" />
		<property name=""minSize"" value=""0"" />
		<property name=""blockingTimeoutMilliseconds"" value=""0"" />
		<property name=""idleTimeoutMinutes"" value=""60"" />
		<property name=""matchOne"" value=""true"" />
		<property name=""matchAll"" value=""true"" />
		<property name=""selectOneAssumeMatch"" value=""true"" />
	</bean>

	<bean id=""connectionManager""
		class=""org.jencks.factory.ConnectionManagerFactoryBean"">
		
		<property name=""transactionSupport"" ref=""transactionSupport"" />
		<property name=""poolingSupport"" ref=""poolingSupport"" />
	</bean>

	<!--
		###### JMS ######
	-->

	<bean id=""jmsResourceAdapter""
		class=""org.apache.activemq.ra.ActiveMQResourceAdapter"">
		<property name=""serverUrl"" value=""tcp://localhost:61616?wireFormat.cacheEnabled=false&amp;wireFormat.tightEncodingEnabled=false&amp;jms.useAsyncSend=true"" />
	</bean>

	<bean id=""jmsManagedConnectionFactory""
		class=""org.apache.activemq.ra.ActiveMQManagedConnectionFactory"">
		<property name=""resourceAdapter"" ref=""jmsResourceAdapter"" />
	</bean>

	<bean id=""jmsConnectionFactory""
		class=""org.springframework.jca.support.LocalConnectionFactoryBean"">
		<property name=""managedConnectionFactory""
			ref=""jmsManagedConnectionFactory"" />
		<property name=""connectionManager"" ref=""connectionManager"" />
	</bean>

Please see the attached snapshot of the jmx console connected to activemq.
","07/Sep/06 16:07;aioaneid;memory consumption jumps high when a consumer is created, and drops when the consumer process is killed","24/Nov/06 19:59;rajdavies;Use optional Store cursor to page messages into the broker from the persistent store
SVN revision 478967.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Trouble with duplicate clientIds and ReliableConnections,AMQ-160,12481018,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,daggerrz,daggerrz,17/Dec/04 02:18,20/Nov/06 05:33,30/Jan/20 16:57,07/Jan/05 00:55,1.4,,,,,,2.0,,,Broker,JMS client,,,0,"I tried this:

1. Setup a broker using tcp-transport on one machine
2. Start a client using reliable transport and a client id on another machine (same LAN)
3. Pull the network plug on the client
 - Client connection is terminated on the client side
 - Broker doesn't notice
4. Plug the client back into the network
 - Reliable connection reconnects
 - Broker throws InvalideClientIDException
5. Send a message to the Broker
 - Client disconnect is detected by the broker and client is removed
6. Reconnect client
 - Works now

Possible solutions from the top of my head:

1. When connecting with duplicate client ids, kick the existing client out (could lead to pseudo-race conditions if clients are incorrectly configured to use duplicate ids and reliable is enabled)
2. Do an explicit, syncrhonized keepalive packet send on the existing connection when a duplicate client connects, if the existing client is down, kick it and allow the new client to connect, otherwise do as normal

Number 2 is probably best and I'll implement it if you agree that this is a reasonable solution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-12-20 12:29:40.0,,,false,,,,,,,,,,,,,,,,,48894,,,Mon Dec 20 15:34:25 UTC 2004,,,,,,,,"0|i0tsrz:",171971,,,,,,,,,,,,,,,,,,,"20/Dec/04 12:29;jstrachan;How about...

* we use reliable to connect the client...

* first connection fails with duplicate client ID, but it reconnects again in the future

* the keep-alive mechanism should close the old connection at some point

* the new client will eventually reconnect

i.e. so long as we are using keep-alive pinging and we use reliable connections, the new client should reconnect succcessfully - its just there's a window in between reinserting the network connection and the keep-alive timeout failing where a connecion will fail due to a duplicate client ID.


Another option could be, that if we have a duplicate client ID, we wait until the keep-alive ping time has expired to know if this is a new connection or a reconnection of a stale connection. Though the nice thing about the former is it just works already :).","20/Dec/04 13:06;daggerrz;Well, there are a couple of problems with this:

1. The problem is that keep-alive is only done from the client side (you cannot specify reliable on the broker side). So the second option won't work.

2. Even if we did keep-alive from the broker, the client side would log a InvalidClientIdException as an error which could make an undramatic situation look more dramatic than it should.

I any case, the connections should be terminated after the InvalidClientIDException is thrown (should this be done by the broker or the client?). Right now, the client will never try to reconnect since the connection is kept open.

Doing a syncrhonous send when a seemingly duplicate client connects will have no performance impact and resolve the problem immediately, so I still think this is the best solution...","20/Dec/04 15:34;jstrachan;Agreed. Please do try to implement this if you fancy having a stab at it. 

Though a work around for now could be to allow the client to use reliable to retry on InvalidClientIDException. Note its the client doing the connections & it can use reliable to reconnect N times etc- we don't need reliable on the broker side. So long as the broker is capable of detecting dead connections on the server is all we really need - though I agree that it'd be nice if we just did the right thing & checked the other connection is still alive first before returning an InvalidClientIDException",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"setting maximumRedeliveries to -1 is equivalent to maximumRedeliveries=0, but doc says otherwise",AMQ-967,12483907,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bruyeron@fullsix.com,bruyeron@fullsix.com,10/Oct/06 16:31,18/Nov/06 13:43,30/Jan/20 16:57,18/Nov/06 13:43,4.0.2,4.1.0,,,,,4.1.1,5.1.0,,Connector,,,,0,"
The documentation (http://incubator.apache.org/activemq/resource-adapter-properties.html) suggests that setting maximumRedeliveries to -1 means ""no maximum"", i.e. infinite retries.
However, my tests (and the code) show that -1 is equivalent to 0 (i.e. no redelivery).

The patch attempts to fix this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/06 16:31;bruyeron@fullsix.com;ASF.LICENSE.NOT.GRANTED--patch.txt;https://issues.apache.org/jira/secure/attachment/12461894/ASF.LICENSE.NOT.GRANTED--patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-11-18 13:43:41.0,,,false,,,,,,,,,,,,,,,,,84432,,,Sat Nov 18 13:43:41 UTC 2006,,,,Patch Available,,,,"0|i180iv:",254887,,,,,,,,,,,,,,,,,,,"18/Nov/06 13:43;jlim;Thanks  Renaud! 

Patch has been applied on :
trunk : r476523
4.1 branch :  r476525

Also updated the RedeliveryPolicyTest   test case to test this ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Inactivity Monitor causes a InterruptedException in broker when connection is disconnected,AMQ-983,12481827,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,jlim,jlim,17/Oct/06 09:03,18/Nov/06 10:04,30/Jan/20 16:57,17/Oct/06 09:55,4.0.2,,,,,,4.0.2,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-17 20:00:05.0,,,false,,,,,,,,,,,,,,,,,84431,,,Sat Nov 18 10:04:42 UTC 2006,,,,,,,,"0|i0s0ov:",161588,,,,,,,,,,,,,,,,,,,"17/Oct/06 09:55;jlim;fix at :

trunk :  rev 464880

4.0 branch : rev 464881","17/Nov/06 20:00;kaitchuc;I am confused as to how 464881 fixes this problem. Is this the right number? Could someone explain this please?","18/Nov/06 10:04;jlim;Hi Tom, the reason for this   is that ScheduledFuture.cancel(true) was being called in Scheduler.java.

   ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
web-console broken (queue browsing).,AMQ-1036,12481880,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,david_syer,david_syer,08/Nov/06 11:27,16/Nov/06 17:43,30/Jan/20 16:57,16/Nov/06 17:43,incubation,,,,,,4.1.1,5.0.0,,,,,,0,"I managed to build and launch the web-console from svn, but the queue browsing page is broken - queue.jsp uses properties of Queue e.g. ${row.size} that do not exist.  When I hacked queue.jsp to remove references to those properties I got another error on trying to purge a queue:

RequestURI=/activemq-web-console/purgeDestination.action
Caused by:

java.lang.IllegalArgumentException: Target bean must not be null
	at org.springframework.util.Assert.notNull(Assert.java:113)
	at org.springframework.validation.BeanPropertyBindingResult.(BeanPropertyBindingResult.java:58)
	at org.springframework.validation.DataBinder.initBeanPropertyAccess(DataBinder.java:167)
	at org.springframework.validation.DataBinder.getInternalBindingResult(DataBinder.java:186)
	at org.springframework.validation.DataBinder.getPropertyAccessor(DataBinder.java:196)
	at org.springframework.validation.DataBinder.applyPropertyValues(DataBinder.java:515)
	at org.springframework.validation.DataBinder.doBind(DataBinder.java:417)
	at org.springframework.web.bind.WebDataBinder.doBind(WebDataBinder.java:146)
	at org.springframework.web.bind.ServletRequestDataBinder.bind(ServletRequestDataBinder.java:108)
	at org.apache.activemq.web.handler.BindingBeanNameUrlHandlerMapping.getHandlerInternal(BindingBeanNameUrlHandlerMapping.java:43)
...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-08 12:30:22.0,,,false,,,,,,,,,,,,,,,,,84250,,,Thu Nov 16 17:43:34 UTC 2006,,,,,,,,"0|i180p3:",254915,,,,,,,,,,,,,,,,,,,"08/Nov/06 12:30;jstrachan;Which version are you using? Its working for me on the 4.1-SNAPSHOT","08/Nov/06 13:00;david_syer;$ svn info
Path: .
URL: https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-web-console
Repository Root: https://svn.apache.org/repos/asf
Repository UUID: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 472439
Node Kind: directory
Schedule: normal
Last Changed Author: aco
Last Changed Rev: 470018
Last Changed Date: 2006-11-01 17:58:51 +0000 (Wed, 01 Nov 2006)
Properties Last Updated: 2006-11-08 09:41:56 +0000 (Wed, 08 Nov 2006)
","09/Nov/06 20:16;aco;Hi,

I've fixed this in trunk. rev 473056.

Let me know if this works for you.

Thanks for the heads up. :)","12/Nov/06 23:13;david_syer;Works now.  Thanks!

","14/Nov/06 13:22;jstrachan;Could you apply this fix to the 4-1 branch too please?

https://svn.apache.org/repos/asf/incubator/activemq/branches/activemq-4.1/","16/Nov/06 17:43;aco;Fix applied to 4.1 branch at rev 475831",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kaha DB files are not removed,AMQ-861,12481651,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vpesochi,vpesochi,03/Aug/06 17:10,15/Nov/06 17:57,30/Jan/20 16:57,15/Nov/06 17:57,4.0.1,,,,,,4.1.0,,,Broker,,,,0,"I have request-response point to point test case, which I ran for 12 hours. Each message is exactly 5KBytes. This is what I see in the Kaha directory:

 779 Aug  1 17:03 roots-data1
 32M Aug  2 15:28 queue-data4
 32M Aug  2 18:02 queue-data5
 32M Aug  2 19:03 queue-data6
 32M Aug  2 20:04 queue-data7
 32M Aug  2 21:05 queue-data8
 32M Aug  2 22:07 queue-data9
 32M Aug  2 23:08 queue-data10
 32M Aug  3 00:09 queue-data11
 32M Aug  3 01:10 queue-data12
 32M Aug  3 02:12 queue-data13
 32M Aug  3 03:13 queue-data14
 32M Aug  3 04:19 queue-data15
 32M Aug  3 05:20 queue-data16
 32M Aug  3 06:21 queue-data17
 32M Aug  3 07:22 queue-data18
 32M Aug  3 08:23 queue-data19
 19M Aug  3 09:25 queue-data20
8.6K Aug  3 09:52 kaha.idx

","Win XP, Java 5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-10 10:33:03.0,,,false,,,,,,,,,,,,,,,,,84394,,,Fri Oct 20 23:35:34 UTC 2006,,,,,,,,"0|i180bb:",254853,,,,,,,,,,,,,,,,,,,"10/Aug/06 10:33;rajdavies;Are you sure there isn't any oprhaned messages from your test case - e.g. a messages sent back to a QueueRequestor that had closed ?","10/Aug/06 16:40;vpesochi;Messages that are going back are not persistent. I am more or less sure ;)","20/Oct/06 23:35;vpesochi;this seems to work now, i.e. files are removed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AdvisoryBroker causes Destination already exists error in removeProducer,AMQ-863,12481785,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,vpesochi,vpesochi,04/Aug/06 22:55,15/Nov/06 17:57,30/Jan/20 16:57,15/Nov/06 17:57,4.0.1,,,,,,4.0.3,,,Broker,,,,0,"

javax.jms.JMSException: Destination already exists: topic://ActiveMQ.Advisory.Producer.Queue.ID:PESOCHIV-XP-2464-1154729557132-1:21:1
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:211)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:129)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:141)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:129)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:142)
	at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:244)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:224)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:345)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:271)
	at org.apache.activemq.advisory.AdvisoryBroker.fireProducerAdvisory(AdvisoryBroker.java:254)
	at org.apache.activemq.advisory.AdvisoryBroker.fireProducerAdvisory(AdvisoryBroker.java:249)
	at org.apache.activemq.advisory.AdvisoryBroker.removeProducer(AdvisoryBroker.java:226)
	at org.apache.activemq.broker.CompositeDestinationBroker.removeProducer(CompositeDestinationBroker.java:76)
	at org.apache.activemq.broker.MutableBrokerFilter.removeProducer(MutableBrokerFilter.java:118)
	at org.apache.activemq.broker.AbstractConnection.processRemoveProducer(AbstractConnection.java:414)
	at org.apache.activemq.broker.AbstractConnection.processRemoveSession(AbstractConnection.java:480)
	at org.apache.activemq.broker.AbstractConnection.processRemoveConnection(AbstractConnection.java:526)
	at org.apache.activemq.broker.AbstractConnection.stop(AbstractConnection.java:159)
	at org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:94)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.stop(ManagedTransportConnection.java:62)
	at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:39)
	at org.apache.activemq.broker.AbstractConnection.serviceTransportException(AbstractConnection.java:172)
	at org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:68)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:94)
	at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:120)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:94)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:94)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:120)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)
	at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:100)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:156)
	at java.lang.Thread.run(Unknown Source)
","WinXP, JDK 1.5.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84393,,,Wed Nov 15 17:57:01 UTC 2006,,,,,,,,"0|i0tszj:",172005,,,,,,,,,,,,,,,,,,,"04/Aug/06 22:56;vpesochi;This happens when client connection is lost.","15/Nov/06 17:57;vpesochi;Have not seen this issue in awhile",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kaha DB cannot locate queue data files,AMQ-876,12481732,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,vpesochi,vpesochi,11/Aug/06 19:00,15/Nov/06 17:54,30/Jan/20 16:57,15/Nov/06 17:54,4.1.0,,,,,,4.1.0,,,Message Store,,,,0,"Keep getting exception below.  Note that you are looking for queue-data-1, but actual file name is data-queue-data-1

$ pwd
  /cygdrive/d/amq/activemq-kaha/kaha.db
$ ls
data-kaha-1  data-queue-data-1  index-kaha  index-queue-data  index-transactions

javax.jms.JMSException: java.io.IOException: Could not locate data file queue-data-1
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:46)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1154)
        at org.apache.activemq.TransactionContext.commit(TransactionContext.java:260)
        at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:464)
        at com.barra.cp.common.io.MultiQueueReceiver.onMessage(MultiQueueReceiver.java:163)
        at com.barra.cp.common.io.SingleMessageMultiQueueReceiver$OneMessageAtATime.runMultiQueue(SingleMessageMultiQueueReceiver.java:176)
        at com.barra.cp.common.io.SingleMessageMultiQueueReceiver$OneMessageAtATime.doRun(SingleMessageMultiQueueReceiver.java:143)
        at com.barra.cp.common.io.SingleMessageMultiQueueReceiver$OneMessageAtATime.run(SingleMessageMultiQueueReceiver.java:124)
        at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.activemq.kaha.RuntimeStoreException: java.io.IOException: Could not locate data file queue-data-1
        at org.apache.activemq.kaha.impl.MapContainerImpl.getValue(MapContainerImpl.java:340)
        at org.apache.activemq.kaha.impl.MapContainerImpl.remove(MapContainerImpl.java:265)
        at org.apache.activemq.store.kahadaptor.KahaMessageStore.removeMessage(KahaMessageStore.java:68)
        at org.apache.activemq.store.kahadaptor.KahaTransaction.commit(KahaTransaction.java:92)
        at org.apache.activemq.store.kahadaptor.KahaTransactionStore.commit(KahaTransactionStore.java:95)
        at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:68)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:154)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:92)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:92)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:102)
        at org.apache.activemq.broker.AbstractConnection.processCommitTransactionOnePhase(AbstractConnection.java:330)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:99)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:228)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:123)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:127)
        ... 1 more
Caused by: java.io.IOException: Could not locate data file queue-data-1
        at org.apache.activemq.kaha.impl.DataManager.getDataFile(DataManager.java:117)
        at org.apache.activemq.kaha.impl.StoreDataReader.readItem(StoreDataReader.java:62)
        at org.apache.activemq.kaha.impl.DataManager.readItem(DataManager.java:121)
        at org.apache.activemq.kaha.impl.MapContainerImpl.getValue(MapContainerImpl.java:337)
        ... 20 more
",WinXP,vpesochi,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/06 17:50;vpesochi;test.zip;https://issues.apache.org/jira/secure/attachment/12460610/test.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-09-12 10:02:55.0,,,false,,,,,,,,,,,,,,,,,84510,,,Wed Nov 15 17:54:16 UTC 2006,,,,,,,,"0|i0tsr3:",171967,,,,,,,,,,,,,,,,,,,"06/Sep/06 20:41;vpesochi;Sorry, but I still get this problem

ERROR MapContainerImpl               - Failed to get value for offset=357, key=(-1, -1, 0), value=(-1, -1, 0), previousItem=-1, nextItem=765

java.io.IOException: Could not locate data file queue-data-1

	at org.apache.activemq.kaha.impl.data.DataManager.getDataFile(DataManager.java:118)

	at org.apache.activemq.kaha.impl.data.StoreDataReader.readItem(StoreDataReader.java:62)

	at org.apache.activemq.kaha.impl.data.DataManager.readItem(DataManager.java:122)

	at org.apache.activemq.kaha.impl.container.MapContainerImpl.getValue(MapContainerImpl.java:344)

	at org.apache.activemq.kaha.impl.container.MapContainerImpl.remove(MapContainerImpl.java:272)

	at org.apache.activemq.store.kahadaptor.KahaMessageStore.removeMessage(KahaMessageStore.java:68)

	at org.apache.activemq.store.kahadaptor.KahaTransaction.commit(KahaTransaction.java:92)

	at org.apache.activemq.store.kahadaptor.KahaTransactionStore.commit(KahaTransactionStore.java:95)

	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:68)

	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:154)

	at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:93)

	at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:93)

	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)

	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)

	at org.apache.activemq.broker.AbstractConnection.processCommitTransactionOnePhase(AbstractConnection.java:330)

	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:99)

	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:228)

	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)

	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)

	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)

	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:124)

	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)

	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)

	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:129)

","12/Sep/06 00:46;vpesochi;
Hi Rob,

I have been trying to understand what is going on there. Here is what I found out so far. The exception happens in DataManager.getDataFile(DataItem) method. In this method the 2nd line is fileMap.get(key); and the key is -1 when the exception occurs. 

The key is from getFile() method of the DataItem. If you scroll down the stack trace to MapContainerImpl.getValue(), the DataItem's file field is set from IndexItem's valueFile member. This value is set ""incorrectly"" to -1 in MapContainerImpl.remove. 

In this method you find the following lines:

// ensure we have the upto date item
item=indexList.getEntry(item);

The IndexItem item is set from a HashMap in this method and the valueFile field on this object is ""correct"" (i.e. != -1). However after this line, the value that is read from the file system has the -1 in it, which results in error.

Quite frankly, I do not yet understand the Kaha code well enough. Can you please guide me to through this, so I can help you with resolving and testing this issue? By the way can you reproduce this JIRA?  

Regards,

Vadim
","12/Sep/06 10:02;rajdavies;Hi Vadim,

I couldn't reproduce this - and as I'd fixed something like this a few weeks ago - I'd assumed it was fixed.
Could you try and produce a test case for this ?

cheers,

Rob","12/Sep/06 16:38;vpesochi;Rob,

Unfortunately it is not easy to reproduce this bug. It happens all the time when I run my test, but not on the same iteration of the test. Sometimes it happens right away, other times I have to wait longer. My test sends 1500 messages but the error happens only once, but every time.
","14/Sep/06 18:03;vpesochi;Hi Rob,

I just send the test code to help reproduce this problem to you Gmail account. Please let me know if you got it and was able to reproduce the problem. Thanks.","15/Sep/06 17:50;vpesochi;I am not sure if you got my message or not. Since I am going to be away starting on Monday I am attaching the test and my e-mail.

""I was unable to write a simple unit test to recreate the problem, so I am attaching simulation test along with some utility classes. I am using IntelliJ Idea and JDK 1.5.2 installed. I am not sure if there is any 1.5 syntax. To run the test just start the broker (with kaha persistence) and execute DailyUpdateSimulationJmsTest JUnit class from Idea (Idea project file included). Sometimes it takes awhile before the error occurs (up to 5 minutes), but most of the time it happens very quickly. To check if error happened ""grep"" the AMQ log for ""Could not locate data file"" string. Thanks.""","03/Oct/06 22:26;vpesochi;Hi Rob,

Is there any chance you can give me heads up on when you may have time to take a look at this? Thanks.","05/Oct/06 10:23;rajdavies;Hi Vadim,

would you mind trying the latest code ? I've done some bug fixes in the kaha area today - unfortunately one of the bug fixes means it's no longer backwards compatible

cheers,

Rob","20/Oct/06 22:00;vpesochi;Hi Rob,

Yes looks like you got it. Thanks a lot.","15/Nov/06 17:54;vpesochi;this seems to be fixed",,,,,,,,,,,,,,,,,,,,,,,,,
deadlock when using VM transport and Jencks...,AMQ-465,12481565,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jstrachan,jstrachan,04/Jan/06 18:51,14/Nov/06 20:59,30/Jan/20 16:57,17/Mar/06 18:59,4.0 M4,,,,,,4.0 RC2,,,,,,,1,"Background here: http://forums.logicblaze.com/posts/list/146.page

It seems to be VM protocol specific",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 18:59:10.0,,,false,,,,,,,,,,,,,,,,,49140,,,Tue Nov 14 20:59:07 UTC 2006,,,,,,,,"0|i17z1j:",254647,,,,,,,,,,,,,,,,,,,"17/Mar/06 18:59;chirino;The asyncDispatch setting configured on the connection was not being honored by the connectionConsumers. Fixed so now the default should be to do async dispatch so the deadlock should not occur with the default configuration anymore.","17/Mar/06 18:59;chirino;forgot to update fix for version.","10/Nov/06 17:26;chirino;This was fixed in rev 386335.","14/Nov/06 20:59;philfish;I'm still getting deadlock (in a similar spot as the original poster) even though I'm running ActiveMQ version 4.0.1 (on Linux, using Sun's JVM 1.5.0_04-b05).  Below is the deadlock that occurs between the Jencks consumer and the message producer.

h4. Configuration
For reference, here are parts of my ActiveMQ broker and the Jencks configurations:
   * broker (named ""my-broker"")
   {code} <transportConnectors> <transportConnector uri=""vm://localhost?jms.dispatchAsync=true""/> </transportConnectors>
   {code}
   * Jencks connection factory
   {code}<bean id=""jmsFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"">
		<property name=""connectionFactory"">
			<bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
				<property name=""brokerURL"" value =""vm://my-broker""/>
				<property name=""asyncDispatch"" value=""true""/>
		    </bean>
		</property>
	</bean>
   {code}

h4. Deadlock information
{code}
Found one Java-level deadlock:
=============================
""Thread-76"":
  waiting to lock monitor 0x085e13ac (object 0x53a665c8, a org.apache.activemq.broker.region.QueueSubscription),
  which is held by ""http-8080-Processor18""
""http-8080-Processor18"":
  waiting to lock monitor 0x085e132c (object 0x538216d8, a java.lang.Object),
  which is held by ""Thread-76""

Java stack information for the threads listed above:
===================================================
""Thread-76"":
        at org.apache.activemq.broker.region.PrefetchSubscription$1.afterCommit(PrefetchSubscription.java:113)
        - waiting to lock <0x53a665c8> (a org.apache.activemq.broker.region.QueueSubscription)
        at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:82)
        at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:70)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:153)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:81)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:81)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:94)
        at org.apache.activemq.broker.AbstractConnection.processCommitTransactionOnePhase(AbstractConnection.java:302)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:98)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x538216d8> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:68)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:73)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1112)
        at org.apache.activemq.TransactionContext.commit(TransactionContext.java:259)
        at org.apache.activemq.ra.LocalAndXATransaction.commit(LocalAndXATransaction.java:57)
        at org.jencks.LocalTransactionEndpoint.afterDelivery(LocalTransactionEndpoint.java:52)
        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.afterDelivery(MessageEndpointProxy.java:125)
        at org.apache.activemq.ra.MessageEndpointProxy.afterDelivery(MessageEndpointProxy.java:64)
        at org.apache.activemq.ra.ServerSessionImpl.afterDelivery(ServerSessionImpl.java:214)
        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:751)
        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:163)
        - locked <0x53496de0> (a org.apache.activemq.ra.ServerSessionImpl)
        at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:595)

""http-8080-Processor18"":
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - waiting to lock <0x538216d8> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1092)
        at org.apache.activemq.ActiveMQSession.<init>(ActiveMQSession.java:227)
        at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:274)
        at org.apache.activemq.ra.ServerSessionPoolImpl.createServerSessionImpl(ServerSessionPoolImpl.java:60)
        at org.apache.activemq.ra.ServerSessionPoolImpl.getServerSession(ServerSessionPoolImpl.java:113)
        - locked <0x537f1868> (a org.apache.activemq.ra.ServerSessionPoolImpl)
        at org.apache.activemq.ActiveMQConnectionConsumer.dispatch(ActiveMQConnectionConsumer.java:135)
        at org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1403)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x53821110> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:211)
        at org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:581)
        at org.apache.activemq.broker.AbstractConnection.dispatchSync(AbstractConnection.java:559)
        at org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:307)
        at org.apache.activemq.broker.region.QueueSubscription.dispatch(QueueSubscription.java:151)
        at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:64)
        - locked <0x53a665c8> (a org.apache.activemq.broker.region.QueueSubscription)
        at org.apache.activemq.broker.region.policy.RoundRobinDispatchPolicy.dispatch(RoundRobinDispatchPolicy.java:53)
        - locked <0x53a66208> (a edu.emory.mathcs.backport.java.util.concurrent.CopyOnWriteArrayList)
        at org.apache.activemq.broker.region.Queue.dispatch(Queue.java:462)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:265)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:225)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:342)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:113)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:126)
        at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:351)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:590)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x537e8a38> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:68)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:73)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1112)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1555)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:462)
        at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:74)
        - locked <0x53e94f88> (a org.apache.activemq.ActiveMQMessageProducer)
        at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:63)
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:587)
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:572)
        at org.springframework.jms.core.JmsTemplate$3.doInJms(JmsTemplate.java:557)
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:504)
        at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:554)
        at a.b.c.d.e.f(e.java:123)
        at sun.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.axis.providers.java.RPCProvider.invokeMethod(RPCProvider.java:388)
        at org.apache.axis.providers.java.RPCProvider.processMessage(RPCProvider.java:283)
        at org.apache.axis.providers.java.JavaProvider.invoke(JavaProvider.java:319)
        at org.apache.axis.strategies.InvocationStrategy.visit(InvocationStrategy.java:32)
        at org.apache.axis.SimpleChain.doVisiting(SimpleChain.java:118)
        at org.apache.axis.SimpleChain.invoke(SimpleChain.java:83)
        at org.apache.axis.handlers.soap.SOAPService.invoke(SOAPService.java:453)
        at org.apache.axis.server.AxisServer.invoke(AxisServer.java:281)
        at org.apache.axis.transport.http.AxisServlet.doPost(AxisServlet.java:699)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:709)
        at org.apache.axis.transport.http.AxisServletBase.service(AxisServletBase.java:327)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:595)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in ActiveMQ close processing of Resource Adapter,AMQ-651,12481600,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,22/Mar/06 03:18,13/Nov/06 14:36,30/Jan/20 16:57,01/May/06 22:35,,,,,,,4.0,,,Connector,,,,0,"Need to check to see if this is still valid against 4.x
See:
http://issues.apache.org/jira/browse/GERONIMO-1493",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49280,,,Mon May 01 22:35:19 UTC 2006,,,,,,,,"0|i0s11b:",161644,,,,,,,,,,,,,,,,,,,"01/May/06 22:35;chirino;see: http://jira.activemq.org/jira/browse/AMQ-651  fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web module fails in maven-build with test enabled,AMQ-1039,12481857,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,jlim,jlim,10/Nov/06 12:46,10/Nov/06 12:47,30/Jan/20 16:57,10/Nov/06 12:47,5.0.0,,,,,,5.0.0,,,,,,,0,"It appears the activemq-version property defined in the parent pom.xml still points to 4.1-incubator-SNAPSHOT. I believe this should already be 4.2-incubator-SNAPSHOT. 

Also need to update the activecluster version to point to the latest snapshot",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84731,,,Fri Nov 10 12:47:57 UTC 2006,,,,,,,,"0|i180ov:",254914,,,,,,,,,,,,,,,,,,,"10/Nov/06 12:47;jlim;fixed in revision: 473325",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exclusive Consumer Losing a Message,AMQ-1024,12481836,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,me9999,me9999,04/Nov/06 04:37,10/Nov/06 07:21,30/Jan/20 16:57,10/Nov/06 07:21,4.0.1,,,,,,4.1.0,,,Broker,,,,0,"In my test, I have two consumers, one is set to be an exclusive consumer.  The exclusive consumer is started last.  If a producer sends 10 messages, one message goes to the non-exclusive consumer while the other 9 messages go to the exclusive consumer.  I would think all the messages should go to the exclusive consumer even though it is started after the non-exclusive consumer.  Both consumers were started before the producer sent any messages.",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-10 07:21:01.0,,,false,,,,,,,,,,,,,,,,,84371,,,Fri Nov 10 07:21:01 UTC 2006,,,,,,,,"0|i180qn:",254922,,,,,,,,,,,,,,,,,,,"10/Nov/06 07:21;aco;Hi,

I've fixed this in trunk rev 473219.

Maybe you can try the latest version in trunk. :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermittent ArrayIndexOutOfBoundsException during send and receive,AMQ-1033,12481892,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,aco,aco,08/Nov/06 07:50,08/Nov/06 08:45,30/Jan/20 16:57,08/Nov/06 08:45,4.1.0,,,,,,4.1.0,,,Broker,,,,0,"   Send and receive with multiple jms clients with a single broker.

     [java] WARNING: Async exception with no exception listener: java.lang.ArrayIndexOutOfBoundsException
     [java] java.lang.ArrayIndexOutOfBoundsException
     [java]     at java.lang.System.arraycopy(Native Method)
     [java]     at org.apache.activemq.util.DataByteArrayOutputStream.ensureEnoughBuffer(DataByteArrayOutputSt
ream.java:249)
     [java]     at org.apache.activemq.util.DataByteArrayOutputStream.writeBoolean(DataByteArrayOutputStream.j
ava:141)
     [java]     at org.apache.activemq.openwire.v2.BaseDataStreamMarshaller.looseMarshalByteSequence(BaseDataS
treamMarshaller.java:588)
     [java]     at org.apache.activemq.openwire.v2.MessageMarshaller.looseMarshal(MessageMarshaller.java:262)
     [java]     at org.apache.activemq.openwire.v2.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarsh
aller.java:111)
     [java]     at org.apache.activemq.openwire.v2.ActiveMQTextMessageMarshaller.looseMarshal(ActiveMQTextMess
ageMarshaller.java:111)
     [java]     at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:167)
     [java]     at org.apache.activemq.store.journal.JournalPersistenceAdapter.writeCommand(JournalPersistence
Adapter.java:596)
     [java]     at org.apache.activemq.store.journal.JournalMessageStore.addMessage(JournalMessageStore.java:9
5)
     [java]     at org.apache.activemq.store.journal.JournalTopicMessageStore.addMessage(JournalTopicMessageSt
ore.java:77)
     [java]     at org.apache.activemq.broker.region.Topic.send(Topic.java:246)
     [java]     at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:292)
     [java]     at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:380)
     [java]     at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:193)
     [java]     at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
     [java]     at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:
98)
     [java]     at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
     [java]     at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:480)

     [java]     at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:604)
     [java]     at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:284)
     [java]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:177)
     [java]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
     [java]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)

     [java]     at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
     [java]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
     [java]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
     [java]     at java.lang.Thread.run(Thread.java:595)",winxp,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Nov/06 08:08;aco;openwireformat.patch;https://issues.apache.org/jira/secure/attachment/12460850/openwireformat.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84497,,,Wed Nov 08 08:45:26 UTC 2006,,,,,,,,"0|i180pj:",254917,,,,,,,,,,,,,,,,,,,"08/Nov/06 08:08;aco;Added a possible fix to the issue.","08/Nov/06 08:45;aco;Seems to be fixed by commit: r472421",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bad acknowledgement messages when rolling back on a large queue,AMQ-1034,12481862,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,08/Nov/06 08:05,08/Nov/06 08:32,30/Jan/20 16:57,08/Nov/06 08:32,4.0.2,4.1.0,,,,,4.0.3,4.1.0,,Broker,,,,0,See the test case RollbacksWhileConsumingLargeQueueTest for details of how to reproduce,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84424,,,Wed Nov 08 08:32:00 UTC 2006,,,,,,,,"0|i180pb:",254916,,,,,,,,,,,,,,,,,,,"08/Nov/06 08:32;jstrachan;hiram fixed this in trunk revision 472345.

I've just back ported it to 4.0.x in revision: 472423",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message delivered out of order to a MessageListener when session is transced and a rollback occurs.,AMQ-1031,12481890,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,08/Nov/06 00:08,08/Nov/06 00:15,30/Jan/20 16:57,08/Nov/06 00:15,4.0,,,,,,4.1.0,,,,,,,0,"This is actually spotted by a message in the broker log saying that ""Acknowledgment out of sync (Normally occurs when failover connection reconnects)"" or in some previous version of ActiveMQ, an async exception being delivered to the client with a similar error message.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84313,,,Wed Nov 08 00:15:37 UTC 2006,,,,,,,,"0|i180pz:",254919,,,,,,,,,,,,,,,,,,,"08/Nov/06 00:15;chirino;Fixed in trunk revision 472345",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sometimes a failover connection on reconnect produces a Client ID:xxxxx-1:1 already connected error message.,AMQ-1026,12481812,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,06/Nov/06 18:14,07/Nov/06 21:30,30/Jan/20 16:57,07/Nov/06 21:30,4.0,,,,,,4.1.0,,,Broker,,,,0,,,antoniogmc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,43935,,,Tue Nov 07 21:29:42 UTC 2006,,,,,,,,"0|i0s2q7:",161918,,,,,,,,,,,,,,,,,,,"06/Nov/06 18:20;chirino;timing issues.. if the client reconnect back to the broker before it detects it failure, the broker does not properly clean up the previous connection resources.","07/Nov/06 21:29;chirino;fixed in trunk rev 471837",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate bean names (i.e. transportConnector/networkConnector names) in xml config causes exception in xbean.,AMQ-1019,12481839,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,aco,aco,01/Nov/06 17:35,01/Nov/06 17:59,30/Jan/20 16:57,01/Nov/06 17:59,4.1.0,,,,,,4.1.0,,,Broker,,,,0,"Due to upgrade to xbean-2.7 and spring-2.0, beans with the same name/id will cause an exception in xbean/spring.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84499,,,Wed Nov 01 17:59:30 UTC 2006,,,,,,,,"0|i180rb:",254925,,,,,,,,,,,,,,,,,,,"01/Nov/06 17:59;aco;No other config seems to suffer from this issue other than the one in the distro.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-jaas is not in the release distro,AMQ-801,12481711,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,jstrachan,jstrachan,07/Jul/06 13:03,31/Oct/06 21:50,30/Jan/20 16:57,31/Oct/06 21:50,4.0.1,4.0.2,4.1.0,,,,4.1.0,,,,,,,0,it should be in the activemq.jar and in the lib directory...,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-10-31 21:42:26.0,,,false,,,,,,,,,,,,,,,,,84403,,,Tue Oct 31 21:50:24 UTC 2006,,,,,,,,"0|i1803r:",254819,,,,,,,,,,,,,,,,,,,"31/Oct/06 21:42;aco;The activemq-jaas is not being bundled with the distro","31/Oct/06 21:50;aco;Fix to assembly committed. rev 469670",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ web-demo and web-console cannot be run,AMQ-1015,12481852,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,aco,aco,30/Oct/06 17:26,31/Oct/06 17:55,30/Jan/20 16:57,31/Oct/06 17:55,4.0.2,4.1.0,,,,,4.0.3,4.1.0,,JMS client,,,,0,"Let's update the maven plugin from maven-jetty-plugin to maven-jetty6-plugin for the 4.1.x branch and the 4.0.x branch. The web-console is throwing this exception after:

java.lang.NoSuchMethodError: org.mortbay.jetty.webapp.WebAppClassLoader.getUrlClassPath()Ljava/lang/String;
        at org.mortbay.jetty.plugin.Jetty6MavenConfiguration.configureClassLoader(Jetty6MavenConfiguration.jav
a:62)
        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:453)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:38)
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:156)
        at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:120)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:38)
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:156)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:38)
        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:119)
        at org.mortbay.jetty.Server.doStart(Server.java:210)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:38)
        at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:115)
        at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:318)
        at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:268)
        at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:172)
        at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:167)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)

        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.
java:488)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:458)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleEx
ecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.ja
va:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-10-31 15:48:25.0,,,false,,,,,,,,,,,,,,,,,84429,,,Tue Oct 31 17:55:07 UTC 2006,,,,,,,,"0|i180rz:",254928,,,,,,,,,,,,,,,,,,,"31/Oct/06 15:48;jstrachan;Please keep the maven-jetty-plugin as this is the new version. The maven-jetty6-plugin is old!

","31/Oct/06 17:09;jstrachan;I've fixed SVN HEAD so that we use an explicit version of the jetty plugin, along with using maven-jetty-plugin  which should fix these issues. I also upgraded to 6.0.1 of Jetty too.

We should backport this to 4.0.x too","31/Oct/06 17:10;jstrachan;I've fixed this for 4.1 - wanna backport to 4.0.x?","31/Oct/06 17:55;aco;Backported to 4.0.x branch. rev 469583",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No Messaged delivery when mixing Perl stomp client Producer/Consumer and Java JMS Producer/Consumer,AMQ-978,12481883,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,sileshikassa,sileshikassa,15/Oct/06 18:49,25/Oct/06 20:40,30/Jan/20 16:57,25/Oct/06 20:40,,,,,,,4.0.2,4.1.0,,Connector,,,,0,"Facts: Perl Stomp client Producer and Consumer works fine
           Java JMS client Producer and Consumer works fine

I have also used other Perl Stomp protocol implementation with no problem.
The problem happens when I mix Java and Perl clients

Scenario Test 1:
A. Perl Stomp client Consumer
B. Java JMS client Producer

Scenario Test 2:
A. Java JMS client Consumer
B. Perl Stomp client Producer

I have looked into it via Java JMX management jconsole, and it seems to me there is a wall between
the stomp server and default server. It the stomp server only passes messages coming from stomp lients
and default server also does the same.

If this is truly the case, and this is by design, I will be very disappointed. There should not be any wall.
A message is message irrespective of its source and should be delivered to any one that is listening
on the same destination.

I will attach the Perl clients testcases.
For Java client,  a simple JMS client Producer and Consumer with the same topic used as
the perl side will do the job. The topic I used on the perl side: ""/topic/Test.CrossDelivery""
and the Java side topic is  ""Test.CrossDelivery""
This problem is a show stopper for us.","This problem seems platform independent: It happens in Linux, Mac OSX, and Windows.
Software Used: ActiveMQ 4.0, Java 5.0, JMS, Perl 5.8.7, Perl CPAN module Net-Stomp-0.31",sileshikassa,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Oct/06 18:49;sileshikassa;ASF.LICENSE.NOT.GRANTED--Publisher.pl;https://issues.apache.org/jira/secure/attachment/12460694/ASF.LICENSE.NOT.GRANTED--Publisher.pl","15/Oct/06 18:49;sileshikassa;ASF.LICENSE.NOT.GRANTED--Subscriber.pl;https://issues.apache.org/jira/secure/attachment/12460713/ASF.LICENSE.NOT.GRANTED--Subscriber.pl","20/Oct/06 04:53;chirino;Net-Stomp-0.31-bytemessage-support.patch;https://issues.apache.org/jira/secure/attachment/12460658/Net-Stomp-0.31-bytemessage-support.patch","23/Oct/06 21:06;sileshikassa;Net-Stomp-0.31-bytemessage-support.sileshi-patch;https://issues.apache.org/jira/secure/attachment/12460548/Net-Stomp-0.31-bytemessage-support.sileshi-patch",,,,,4.0,,,,,,,,,,,,,,,,,,,,2006-10-20 04:53:21.0,,,false,,,,,,,,,,,,,,,,,92791,,,Mon Oct 23 21:06:07 UTC 2006,,,,,,,,"0|i0s2s7:",161927,,,,,,,,,,,,,,,,,,,"19/Oct/06 13:52;sileshikassa;I now know the reason why Java JMS client message I was sending to 
Perl Stomp client did not get to Perl side. The reason is the Java JMS
client sending Bytes message and The Net::Stomp module's receive_frame()
could not read the socket. Everytime it reads zero length bytes.

But if I sent Text message from the JMS client, no problem receiving it
on the Perl side.

This seems to be more of the Net::Stomp package problem
with binary data which I need to debug and file report.

Therefore, we need to close this bug report as invalid.","19/Oct/06 13:53;sileshikassa;This is not ActiveMQ problem as such. This is more of the
Perl Net::Stomp package dealing with binary data
reading.","20/Oct/06 04:53;chirino;I've made a modification to the Net::Stomp 0.31 package so that it can support receiving TextMessage and ByteMessages.  We need to feed this back to the upstream maintainer so that it can get back on CPAN.","23/Oct/06 21:06;sileshikassa;I have reviewed Hiram's patch and it is fine. I have tested mine and
will make it available. I will let Leon handle the two patches
to choose from.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in 4.0 branch where a JMX connector is not created when the AMQ broker piggys back on an existing mbean server,AMQ-949,12481806,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,aco,aco,30/Sep/06 11:25,19/Oct/06 15:49,30/Jan/20 16:57,30/Sep/06 11:57,4.0.2,,,,,,4.0.2,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84439,,,Sat Sep 30 11:57:45 UTC 2006,,,,,,,,"0|i180l3:",254897,,,,,,,,,,,,,,,,,,,"30/Sep/06 11:57;aco;Backported fix from 4.1 branch.
rev 451584",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ standalone sever does not start in Windows,AMQ-953,12481885,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,02/Oct/06 16:19,19/Oct/06 15:49,30/Jan/20 16:57,02/Oct/06 16:23,4.0.2,,,,,,4.0.2,,,Broker,,,,0,"When you use the activemq.bat file in the bin directory of the 4.0.2 distribution you get one of the following errors:

{code}
C:\incubator-activemq-4.0.2\bin>activemq
ACTIVEMQ_HOME: .
Failed to execute main task. Reason: java.lang.ClassNotFoundException: org.apache.activemq.console.command.ShellCommand
{code}

and

{code}
ACTIVEMQ_HOME: .
Loading message broker from: xbean:activemq.xml
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.Bea
nDefinitionStoreException: Error registering bean with name 'org.apache.activemq.xbean.XBeanBrokerService' def
ined in class path resource [activemq.xml]: Could not resolve placeholder 'activemq.home'
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanDefinitionStoreException: Error registering
bean with name 'org.apache.activemq.xbean.XBeanBrokerService' defined in class path resource [activemq.xml]: C
ould not resolve placeholder 'activemq.home'
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84438,,,Mon Oct 02 16:29:27 UTC 2006,,,,,,,,"0|i180kn:",254895,,,,,,,,,,,,,,,,,,,"02/Oct/06 16:23;chirino;Fixed in 4.0 branch Committed revision 452107
Fixed in trunk revision 452108","02/Oct/06 16:29;chirino;As a simple workaround, users can either:

# Replace thier activemq.bat with this one: https://svn.apache.org/repos/asf/incubator/activemq/branches/activemq-4.0/assembly/src/release/bin/activemq.bat
# Run this before you execute the existing activemq.bat:
{code}
set ACTIVEMQ_CLASSPATH=""""
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in 4.0 branch where the AMQ classpath is incorrectly determined.,AMQ-948,12481846,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,aco,aco,30/Sep/06 11:23,19/Oct/06 15:49,30/Jan/20 16:57,30/Sep/06 11:54,4.0.2,,,,,,4.0.2,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84440,,,Sat Sep 30 11:54:38 UTC 2006,,,,,,,,"0|i180lb:",254898,,,,,,,,,,,,,,,,,,,"30/Sep/06 11:54;aco;Backported fix from 4.1 branch
rev 451583",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
can get a shutdown hang when using embedded broker with VM transport along with the activemq-web module,AMQ-813,12481795,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jstrachan,jstrachan,11/Jul/06 21:32,05/Oct/06 22:04,30/Jan/20 16:57,11/Jul/06 21:48,,,,,,,4.0.2,4.1.0,,,,,,0,"See attached thread dump. I think we just need to use a timeout on the close operations (such as to close consumers, sessions, producers)

Full thread dump Java HotSpot(TM) Client VM (1.5.0_04-b05 mixed mode, sharing):
 
""Shutdown"" prio=1 tid=0x08385960 nid=0x5e99 in Object.wait() [0xaed7d000..0xaed7e130]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x88af01c8> (a edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar)
        at java.lang.Object.wait(Object.java:474)
        at edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar.await(CondVar.java:75)
        - locked <0x88af01c8> (a edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar)
        at edu.emory.mathcs.backport.java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:318)
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:41)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:72)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1130)
        at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1660)
        at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:516)
        at org.apache.activemq.web.WebClient.closeConsumers(WebClient.java:135)
        - locked <0x893e6558> (a org.apache.activemq.web.WebClient)
        at org.apache.activemq.web.WebClient.close(WebClient.java:145)
        - locked <0x893e6558> (a org.apache.activemq.web.WebClient)
        at org.apache.activemq.web.WebClient.valueUnbound(WebClient.java:318)
        at org.mortbay.jetty.servlet.AbstractSessionManager$Session.unbindValue(AbstractSessionManager.java:899)
        at org.mortbay.jetty.servlet.AbstractSessionManager$Session.invalidate(AbstractSessionManager.java:755)
        - locked <0x893caa88> (a org.mortbay.jetty.servlet.HashSessionManager$Session)
        at org.mortbay.jetty.servlet.AbstractSessionManager.doStop(AbstractSessionManager.java:551)
        at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:63)
        at org.mortbay.jetty.servlet.SessionHandler.doStop(SessionHandler.java:124)
        at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:63)
        at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:131)
        at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:467)
        at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:477)
        at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:63)
        at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:173)
        at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:63)
        at org.mortbay.jetty.handler.HandlerCollection.doStop(HandlerCollection.java:173)
        at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:63)
        at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:131)
        at org.mortbay.jetty.Server.doStop(Server.java:242)
        at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:63)
        at org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:450)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-07-11 21:48:26.0,,,false,,,,,,,,,,,,,,,,,92732,,,Thu Oct 05 22:04:45 UTC 2006,,,,,,,,"0|i18013:",254807,,,,,,,,,,,,,,,,,,,"11/Jul/06 21:48;chirino;Fixed:
http://svn.apache.org/viewvc/incubator/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/transport/vm/VMTransport.java?r1=415306&r2=420714&pathrev=420714


The VMTransport's oneway method was dropping the send request when the peer was disconnected like in the case where the broker is shutdown at the same time that the client is shutdown.","05/Oct/06 20:09;graywatson;This seems to generate another fault.  With 4.1.0.0-fuse, I'm get a whole ton of the following, possibly in an infinite loop:

2006-10-05 16:07:52,178 [DefaultMessageListenerContainer-45] ERROR org.springframework.jms.listener.DefaultMessageListenerContainer - Setup of JMS message listener invoker failed - trying to recover
javax.jms.JMSException: Peer disconnected.
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:57)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1119)
        at org.apache.activemq.ActiveMQSession.<init>(ActiveMQSession.java:225)
        at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:278)
        at org.apache.activemq.pool.SessionPool.createSession(SessionPool.java:112)
        at org.apache.activemq.pool.SessionPool.makeObject(SessionPool.java:80)
        at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:840)
        at org.apache.activemq.pool.SessionPool.borrowSession(SessionPool.java:55)
        at org.apache.activemq.pool.ConnectionPool.createSession(ConnectionPool.java:70)
        at org.apache.activemq.pool.PooledConnection.createSession(PooledConnection.java:129)
        at org.springframework.jms.listener.AbstractMessageListenerContainer.createSession(AbstractMessageListenerContainer.java:1000)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:882)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:870)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:824)
        at org.springframework.core.task.SimpleAsyncTaskExecutor$ConcurrencyThrottlingRunnable.run(SimpleAsyncTaskExecutor.java:203)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Peer disconnected.
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:81)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:58)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1117)
        ... 14 more
","05/Oct/06 22:04;chirino;Hi Gary,

Please open a new issue since ti seems like a different problem.  Also, a small web app test case would help us be able to reproduce the issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compilation error when building activemq-web with test enabled.,AMQ-954,12481842,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,foconer,foconer,foconer,03/Oct/06 02:51,05/Oct/06 09:50,30/Jan/20 16:57,05/Oct/06 09:50,,,,,,,4.1.0,,,,,,,0,"Exception below is thrown when building activemq-web with test enabled.

""Compiling 1 source file to /home/continuum/repository/activemq4/trunk/activemq-web/target/test-classes
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure

/home/continuum/repository/activemq4/trunk/activemq-web/src/test/java/org/apache/activemq/web/JettyServer.java:[22,32] package org.apache.activemq.demo does not exist

/home/continuum/repository/activemq4/trunk/activemq-web/src/test/java/org/apache/activemq/web/JettyServer.java:[54,8] cannot find symbol
symbol  : variable DefaultQueueSender
location: class org.apache.activemq.web.JettyServer""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,92785,,,Thu Oct 05 09:50:10 UTC 2006,,,,,,,,"0|i180kf:",254894,,,,,,,,,,,,,,,,,,,"05/Oct/06 09:50;foconer;Done, the updated the activemq-core-test.jar with the correct content.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport does not replay all the transaction operations on failover.,AMQ-915,12481843,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,chirino,chirino,07/Sep/06 16:09,02/Oct/06 16:51,30/Jan/20 16:57,15/Sep/06 03:05,4.0,,,,,,4.0.2,4.1.0,,,,,,0,"If transactions are being used on a connection that is using failover.. these is a small chance that the transaction will fail or the connection will fail due to a partial tx being run when the client reconnects.

I will change the failover transport to buffer up all the tx operations that are run against the broker and on failure, replay those operations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-09-14 07:13:48.0,,,false,,,,,,,,,,,,,,,,,84318,,,Fri Sep 15 03:06:03 UTC 2006,,,,,,,,"0|i180g7:",254875,,,,,,,,,,,,,,,,,,,"14/Sep/06 07:13;aco;Backported fix for replaying transactions in failover transports.","14/Sep/06 13:42;chirino;Adrian what was the svn revision that the fix was comitted on and on what branch?","14/Sep/06 13:42;chirino;I'm not even sure that this has made it into trunk either.","14/Sep/06 17:30;chirino;Applied patch to to 4.0 branch rev 443423","15/Sep/06 03:05;aco;Fix was applied to revision: 443271 in the trunk. Thanks for the heads up Hiram. Sorry for the confusion.
","15/Sep/06 03:06;aco;Update the fix version to include 4.1 and 4.0.3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't monitor activity on vm transports,AMQ-872,12481769,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,09/Aug/06 07:14,02/Oct/06 16:50,30/Jan/20 16:57,09/Aug/06 13:08,,,,,,,4.0.2,,,Broker,,,,0,currently all transport servers montitor transport channels for activity - closing down blocked transports. This can occassionally result in  stranged side-affects for  networks - which use an inbound vm:// channel to the broker in their communications,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,92759,,,Wed Aug 09 13:08:48 UTC 2006,,,,,,,,"0|i180af:",254849,,,,,,,,,,,,,,,,,,,"09/Aug/06 13:08;rajdavies;if TransportServer is vm - don't initialize Inactivity Monitor",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Topic subscriber count is incorrect, shows up as negative (JMX)",AMQ-928,12481853,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,pvillacorta,pvillacorta,pvillacorta,19/Sep/06 02:10,27/Sep/06 07:57,30/Jan/20 16:57,27/Sep/06 07:56,4.0,,,,,,4.1.0,,,Broker,,,,0,"In JMX console:
1. create 2 topics & with 1 durable subscriber each
 - topic subscriber count is still at 0

2. remove 1 of the subscribers
 - subscriber count for both topics is now at -1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84316,,,Wed Sep 27 07:57:34 UTC 2006,,,,,,,,"0|i180ef:",254867,,,,,,,,,,,,,,,,,,,"19/Sep/06 02:10;pvillacorta;Test case to follow","27/Sep/06 07:56;pvillacorta;(rev 450371) added null check to ensure that a subscription was actually removed from the map before decrementing consumer count. added a test","27/Sep/06 07:57;pvillacorta;also moved when an increment occurs for when a subscriber is added",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Licence headers missing from several source files.,AMQ-888,12481776,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,chirino,chirino,21/Aug/06 16:59,25/Sep/06 16:40,30/Jan/20 16:57,25/Sep/06 16:40,4.0,,,,,,4.0.2,4.1.0,,,,,,0,"robert burrell donkin reported:
{quote}
missing license headers from some of the files i checked at random
gives me concerns. for example:

maven-bundle-plugin/src/main/java/org/apache/activemq/maven/BundleMojo.java

activemq-web-demo worries me: there are a lot of files without license
headers and some which have them were not created at the ASF (which is
ok but gives me concerns about the rest).

i would like to see the issue of licenses in the source tidied up
before this release ships. i haven't gone through every file but IMO
this needs to be done.
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/06 17:04;chirino;findunlicensed.pl;https://issues.apache.org/jira/secure/attachment/12460745/findunlicensed.pl",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-09-25 16:40:12.0,,,false,,,,,,,,,,,,,,,,,84321,,,Mon Sep 25 16:40:26 UTC 2006,,,,,,,,"0|i1808v:",254842,,,,,,,,,,,,,,,,,,,"21/Aug/06 17:04;chirino;Using the attached perl script to find the source files that do not have a licence header attached.","21/Aug/06 17:22;chirino;added a bunch of licence headers 
 * in trunk in rev 433286 
 * in 4.0 branch in rev 433295","21/Aug/06 20:53;chirino;Added a few more headers
* in trunk rev 433353
* in 4.0 branch rev 433354","07/Sep/06 16:05;chirino;Just a few more unaccounted files remain in the web modules..  assining to james to see if he can look into these.","25/Sep/06 16:40;jstrachan;I've fixed up activemq-web-demo and activemq-web-console 

in trunk...
http://svn.apache.org/viewvc?view=rev&rev=449694 http://svn.apache.org/viewvc?view=rev&rev=449726

in 4.0 branch...
449731
","25/Sep/06 16:40;jstrachan;Fixed now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Quickly broken client connections lead to memory leaks,AMQ-932,12481823,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jheitmann,jheitmann,21/Sep/06 07:19,25/Sep/06 11:23,30/Jan/20 16:57,25/Sep/06 11:23,4.0.2,,,,,,4.1.0,,,Broker,,,,0,"Connections to the openwire port that are pathologically broken (for example any http request) or that die in some other way extremely quickly will lead to memory losses of aout 64Kb each time. This happens because many services are stop()ed directly in the middle of start(), and then never stopped for real, or stopped again but on an object tree with an inconsistent state. This is usually also accompanied by the JMX message:

WARN  ManagedTransportConnection     - Failed to unregister mbean: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=default,Connection=25

But that is a cosmetic symptom and not critical (and this has otherwise nothing to do with JMX).

My patch is a band-aid that is functional but I'm not very happy with it. The patch changes some service logic so that if stop is called in the middle of start, the stop is instead queued and called at the end of start. There will still be multiple stops, and you'll still see the cosmetic JMX error from the second ineffectual stop, but the first stop cleans up correctly so there are no leaks.

I think there's probably a better solution, but it was tough to see what. I'd appreciate better ideas. Possibly something involving moving the dangerous operations (wire format negotiation etc) out of start?

I am working on a unit test, but I can't promise I will have something to submit. I'm having to play JVM games to detect the problem in a unit test and that might not fly for general purpose use.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Sep/06 07:19;jheitmann;ASF.LICENSE.NOT.GRANTED--73.diff;https://issues.apache.org/jira/secure/attachment/12460554/ASF.LICENSE.NOT.GRANTED--73.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-09-23 17:52:00.0,,,false,,,,,,,,,,,,,,,,,84442,,,Mon Sep 25 11:23:13 UTC 2006,,,,Patch Available,,,,"0|i14qf3:",235745,,,,,,,,,,,,,,,,,,,"23/Sep/06 17:52;kellyc;I ran into a similar issue but I don't think it was due to broken connections. I've got a heap dump from the broker (jdk1.6), and it looks like the OpenWireFormat marshalCache is the root cause of the one I'm working on. Each DataStructure[] marshalCache is roughly 64K because of the MARSHAL_CACHE_SIZE. There's 738 DataStructure[] arrays in my heap, taking up 48 Mbytes. Most of these only have one element used. 

I think issues 914 and 937 might be related or the same. ","24/Sep/06 07:50;jheitmann;Those are the exact symptoms that occur as a result of the problem I saw. For every bad connection there was a bunch of individual object leakage (one each of the major transport filters, a couple different mbeans, a connection object etc), but by far the most serious leakage were the empty pre-allocated marshaler cache arrays. This looks like a common symptom of anything that would leak transports/connections, so it might not be the same root cause.

If you can reproduce it and want help I'd be happy to take a look.

If you can't find the problem one thing that could really help mitigate the severity of these kinds of leaks is to make the initialization of the marshaling caches conditional on the wireFormat.cacheEnabled flag. This would give a lot more leak headroom.","25/Sep/06 11:23;jstrachan;Patch applied John with thanks - could you double check I've applied it correctly please?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error building assembly in branch activemq-4.0,AMQ-934,12481832,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,foconer,foconer,foconer,22/Sep/06 04:43,22/Sep/06 04:54,30/Jan/20 16:57,22/Sep/06 04:50,4.0,,,,,,4.0,,,,,,,0,"Exception thrown:

This artifact might be in your project's POM, or it might have been included transitively during the resolution process. Here is the information we do have for this artifact:

    o GroupID:     incubator-activemq
    o ArtifactID:  incubator-activemq
    o Version:     4.0.2-SNAPSHOT
    o Type:        jar

[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.artifact.InvalidArtifactRTException: For artifact {incubator-activemq:incubator-activemq:4.0.2-SNAPSHOT:jar}: An attached artifact must have a different ID than its corresponding main artifact.
        at org.apache.maven.project.artifact.AttachedArtifact.<init>(AttachedArtifact.java:48)
        at org.apache.maven.project.DefaultMavenProjectHelper.attachArtifact(DefaultMavenProjectHelper.java:50)
        at org.apache.maven.plugin.assembly.AbstractAssemblyMojo.createAssembly(AbstractAssemblyMojo.java:290)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84315,,,Fri Sep 22 04:54:00 UTC 2006,,,,,,,,"0|i180dr:",254864,,,,,,,,,,,,,,,,,,,"22/Sep/06 04:50;foconer;Changes:
1. Updated version of javacc and assembly plugin because it was unable to download the snapshot versions.
2. Used ant plugin to create the run.jar because the exception on this issue was due run.jar assembly execution. ","22/Sep/06 04:54;foconer;revision: 448814",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ssl:// protocol broken on the client side: get a java.net.SocketException: Unconnected sockets not implemented,AMQ-933,12481844,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,jlim,jlim,21/Sep/06 07:45,22/Sep/06 04:33,30/Jan/20 16:57,21/Sep/06 08:43,,,,,,,4.0,4.1.0,,Transport,,,,0,"producer:
     [echo] Running producer against server at $url = ssl://localhost:61617 for subject $subject = TEST.FOO
     [java] Connecting to URL: ssl://localhost:61617
     [java] Publishing a Message with size 1000 to queue: TEST.FOO
     [java] Using non-durable publishing
     [java] Sleeping between publish 0 ms
     [java] Caught: javax.jms.JMSException: Could not connect to broker URL: ssl://localhost:61617. Reason: java.net.SocketException: Unconnected sockets not implemented
     [java] javax.jms.JMSException: Could not connect to broker URL: ssl://localhost:61617. Reason: java.net.SocketException: Unconnected sockets not implemented
     [java]     at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:32)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:252)     
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:211)     
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:158)
     [java]     at ToolSupport.createConnection(Unknown Source)
     [java]     at ProducerTool.run(Unknown Source)
     [java]     at ProducerTool.runTool(Unknown Source)
     [java]     at ProducerTool.main(Unknown Source)
     [java] Caused by: java.net.SocketException: Unconnected sockets not implemented
     [java]     at javax.net.SocketFactory.createSocket(SocketFactory.java:97)
     [java]     at org.apache.activemq.transport.tcp.TcpTransport.<init>(TcpTransport.java:80)
     [java]     at org.apache.activemq.transport.tcp.TcpTransportFactory.createTcpTransport(TcpTransportFactory.java:130)     
     [java]     at org.apache.activemq.transport.tcp.TcpTransportFactory.createTransport(TcpTransportFactory.java:115)     
     [java]     at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:115)
     [java]     at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:42)
     [java]     at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:76)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:223)     
     [java]     ... 6 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,92782,,,Fri Sep 22 04:33:46 UTC 2006,,,,,,,,"0|i180dz:",254865,,,,,,,,,,,,,,,,,,,"21/Sep/06 08:43;jlim;fix has been  added to trunk","22/Sep/06 04:33;jlim;forgot to add the revision number :

trunk :  r448492

4.0 branch : r448808",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inactivity Monitor timeout does not on disconnected client does not cause blocked dispatch to client to fail.,AMQ-918,12481817,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,13/Sep/06 18:41,14/Sep/06 23:33,30/Jan/20 16:57,14/Sep/06 07:44,4.0,,,,,,4.0,4.1.0,,,,,,0,"The cause is that inactivity timeout cause an async thread to call TransportConnection.stop()  but it in turn tries to do a ""transport.oneway(new ShutdownInfo());"" before a transport.stop();

Since another thread is currently stuck in the oneway() call (due to the client having disconnected but the OS has not thrown an IOException up to us yet), our ShutdownInfo message blocks too.  So in essence the InactivityMonitor is not currently shutitng down the failed connections.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-09-14 07:44:53.0,,,false,,,,,,,,,,,,,,,,,84317,,,Thu Sep 14 23:33:34 UTC 2006,,,,,,,,"0|i180fr:",254873,,,,,,,,,,,,,,,,,,,"14/Sep/06 07:44;jlim;fixed  applied in 4.x branches and trunk (r443267)","14/Sep/06 23:33;jlim;Edited fix  versions to  4.1 and 4.0 only.  

4.1 trunk (r443267)
4.0 branch (r443273)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JMX Exception: ""Destination already created"" when recovering gigantic queues from database",AMQ-878,12481794,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,npenkov,npenkov,12/Aug/06 08:19,13/Sep/06 11:07,30/Jan/20 16:57,13/Sep/06 11:07,incubation,,,,,,4.1.0,,,Broker,,,,0,"I think this issue is described in Hiram's blog: http://blogbucket.blogspot.com/2006/05/scaling-to-gigantic-queues-and-topics.html.

E.g. when broker is stopped with a lot of messages in queue. When started - recovery process is fired (currently on creation of a queue), and if another subscriber requests queue - it creates a new one, because previous process hasn't finished.

I think the simpliest solution for that problem is to start recovery process in another thread with synchronization to sent process(sent process should be suspended till full recovery is done) and subscriber notification method (every sunscriber should be notified on recovery of message).

I have attached a patch to activemq-core, which I have tested with my environment - JBoss 4.0.4.GA with Embeded Broker ActiveMQ trunk release, jdbc persistence.

I am not a spec. in threads nor in ActiveMQ design, and I am sure that you will find a more elegant sollution to what I have provided.","Embeded broker, Any platform (OS, JDK) - currentlly embeded in JBoss 4.0.4.GA",,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/06 08:19;npenkov;ASF.LICENSE.NOT.GRANTED--async-recovery.patch;https://issues.apache.org/jira/secure/attachment/12460769/ASF.LICENSE.NOT.GRANTED--async-recovery.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-08-25 09:26:08.0,,,false,,,,,,,,,,,,,,,,,43936,,,Wed Sep 13 11:07:02 UTC 2006,,,,Patch Available,,,,"0|i1809z:",254847,,,,,,,,,,,,,,,,,,,"25/Aug/06 09:26;jstrachan;FWIW the issue with 2 destinations being created due to concurrency issues should now be fixed. Not sure yet if we still need asynchronous recovery - but the original issue should be resolved","12/Sep/06 06:06;jstrachan;Could you confirm that the original issue is fixed now in 4.1?","13/Sep/06 11:07;npenkov;Tested in ebbeded broker (JBoss 4.0.4.GA) with 20K+ (10k+ size each) messages in Queue on startup. 2 Subscribers and 1 producer Connected on startup.
(Compiled with JDK1.5+)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timing bug could cause duplicate client id exception in network code.,AMQ-886,12481772,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,21/Aug/06 13:22,07/Sep/06 19:34,30/Jan/20 16:57,07/Sep/06 19:34,4.0,,,,,,4.0.2,4.1.0,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84322,,,Thu Sep 07 19:34:05 UTC 2006,,,,,,,,"0|i18093:",254843,,,,,,,,,,,,,,,,,,,"21/Aug/06 13:41;chirino;Applied fix to trunk in rev 433244","07/Sep/06 19:34;chirino;Applied fix to 4.0 branch rev 441189",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transient connection failure with Failover transport can cause InvalidClientIDException,AMQ-911,12481774,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,05/Sep/06 20:19,06/Sep/06 03:17,30/Jan/20 16:57,06/Sep/06 03:17,4.0,,,,,,4.0.2,4.1.0,,,,,,0,"It shows up as errors on the broker log:
Error occured while processing sync command: javax.jms.InvalidClientIDException: Broker: localhost - Client: ID:hchirino-mac.local-51624-1157486953862-2:0 already connected",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84320,,,Wed Sep 06 03:17:16 UTC 2006,,,,,,,,"0|i180gf:",254876,,,,,,,,,,,,,,,,,,,"05/Sep/06 20:22;chirino;Easiest way to reporduce it to run the broker on a machine connected with a ethernet cable to 2nd machine.
Run the producer example on the second machine with:
ant producer -DsleepTime=100 -Dmax=100000 -Durl='failover://(tcp://firstmachine:61616)'
and connect and disconnect the ethernet cable between the machines.  If debug logging is enable on the broker, you should see the error.","06/Sep/06 01:14;chirino;fixed in 4.0 branch rev 440548","06/Sep/06 03:17;chirino;fix applied to trunk in rev 440588",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wireformat negociation needs to negociate to to the minimum version supported by both sides.,AMQ-913,12481814,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,06/Sep/06 00:17,06/Sep/06 00:48,30/Jan/20 16:57,06/Sep/06 00:48,4.0,,,,,,4.0.2,4.1.0,,Transport,,,,0,Right now it's negociating to the maximum supported by both sides.  This means that old version will try to load a newer version of the wireformat that it does not support!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84319,,,Wed Sep 06 00:48:54 UTC 2006,,,,,,,,"0|i0s19r:",161682,,,,,,,,,,,,,,,,,,,"06/Sep/06 00:48;chirino;Fix applied in 4.0 branch rev 440543
Fix applied in trunk rev 440541",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock in QueueClusterTest,AMQ-575,12481451,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jstrachan,jstrachan,16/Feb/06 15:16,05/Sep/06 12:23,30/Jan/20 16:57,05/Sep/06 12:23,4.0,,,,,,4.1.0,,,Test Cases,,,,0,"here's the log


    [junit] Running org.apache.activemq.transport.QueueClusterTest
^\    [junit] Full thread dump Java HotSpot(TM) Client VM (1.5.0_05-48 mixed mode, sharing):
    [junit] 
    [junit] ""session Task"" daemon prio=7 tid=0x00540cc0 nid=0x1927200 waiting for monitor entry [0xf2d49000..0xf2d4aad0]
    [junit]     at org.apache.activemq.broker.region.Queue.dropEvent(Queue.java:263)
    [junit]     - waiting to lock <0x1c926760> (a java.util.LinkedList)
    [junit]     at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:55)
    [junit]     at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:133)
    [junit]     - locked <0x1c8c9340> (a org.apache.activemq.broker.region.QueueSubscription)
    [junit]     at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:203)
    [junit]     at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:329)
    [junit]     at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:176)
    [junit]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:59)
    [junit]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:59)
    [junit]     at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:71)
    [junit]     at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:342)
    [junit]     at org.apache.activemq.command.MessageAck.visit(MessageAck.java:178)
    [junit]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:190)
    [junit]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:75)
    [junit]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
    [junit]     - locked <0x1c8180d8> (a java.lang.Object)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
    [junit]     at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1041)
    [junit]     at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1617)
    [junit]     at org.apache.activemq.ActiveMQMessageConsumer.afterMessageIsConsumed(ActiveMQMessageConsumer.java:554)
    [junit]     at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:716)
    [junit]     at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:93)
    [junit]     at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:146)
    [junit]     at org.apache.activemq.thread.SimpleTaskRunner.runTask(SimpleTaskRunner.java:110)
    [junit]     at org.apache.activemq.thread.SimpleTaskRunner.access$100(SimpleTaskRunner.java:25)
    [junit]     at org.apache.activemq.thread.SimpleTaskRunner$1.run(SimpleTaskRunner.java:43)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:643)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:668)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp:///127.0.0.1:53756"" daemon prio=9 tid=0x00539830 nid=0x1914400 runnable [0xf2438000..0xf2438ad0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp://localhost/127.0.0.1:53747"" prio=5 tid=0x005394c0 nid=0x1914000 in Object.wait() [0xf23b6000..0xf23b7ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c926f00> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at org.apache.activemq.thread.Valve.turnOff(Valve.java:68)
    [junit]     - locked <0x1c926f00> (a java.lang.Object)
    [junit]     at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:171)
    [junit]     at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:179)
    [junit]     at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:280)
    [junit]     at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:95)
    [junit]     at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:164)
    [junit]     at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:95)
    [junit]     at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:107)
    [junit]     at org.apache.activemq.broker.AbstractConnection.processRemoveConsumer(AbstractConnection.java:431)
    [junit]     at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:63)
    [junit]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:190)
    [junit]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:75)
    [junit]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
    [junit]     - locked <0x1c8d0a80> (a java.lang.Object)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.serviceRemoteConsumerAdvisory(DemandForwardingBridge.java:331)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.serviceRemoteCommand(DemandForwardingBridge.java:235)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge$2.onCommand(DemandForwardingBridge.java:121)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:103)
    [junit]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
    [junit]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp://localhost/127.0.0.1:53747"" prio=5 tid=0x005390f0 nid=0x1913c00 in Object.wait() [0xf1b26000..0xf1b26ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c8629b8> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:173)
    [junit]     - locked <0x1c8629b8> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.waitStarted(DemandForwardingBridge.java:481)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.serviceRemoteCommand(DemandForwardingBridge.java:250)
    [junit]     - locked <0x1c862a40> (a java.lang.Object)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge$2.onCommand(DemandForwardingBridge.java:121)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:103)
    [junit]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
    [junit]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp:///127.0.0.1:53755"" daemon prio=9 tid=0x00538e90 nid=0x1912800 runnable [0xf22b5000..0xf22b5ad0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp://localhost/127.0.0.1:53749"" prio=5 tid=0x00538a00 nid=0x1912400 in Object.wait() [0xf2234000..0xf2234ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c862b60> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:173)
    [junit]     - locked <0x1c862b60> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.waitStarted(DemandForwardingBridge.java:481)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.serviceRemoteCommand(DemandForwardingBridge.java:250)
    [junit]     - locked <0x1c862be8> (a java.lang.Object)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge$2.onCommand(DemandForwardingBridge.java:121)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:103)
    [junit]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
    [junit]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp:///127.0.0.1:53754"" daemon prio=9 tid=0x005383d0 nid=0x1850e00 runnable [0xf20b1000..0xf20b1ad0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp:///127.0.0.1:53753"" daemon prio=9 tid=0x005362f0 nid=0x182a200 runnable [0xf1f2e000..0xf1f2ead0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp://localhost/127.0.0.1:53745"" prio=5 tid=0x00537340 nid=0x1916400 waiting for monitor entry [0xf21b2000..0xf21b3ad0]
    [junit]     at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:58)
    [junit]     - waiting to lock <0x1c8c9340> (a org.apache.activemq.broker.region.QueueSubscription)
    [junit]     at org.apache.activemq.broker.region.QueueSubscription.add(QueueSubscription.java:38)
    [junit]     at org.apache.activemq.broker.region.policy.RoundRobinDispatchPolicy.dispatch(RoundRobinDispatchPolicy.java:53)
    [junit]     - locked <0x1c926f28> (a edu.emory.mathcs.backport.java.util.concurrent.CopyOnWriteArrayList)
    [junit]     at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:210)
    [junit]     - locked <0x1c926760> (a java.util.LinkedList)
    [junit]     at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:179)
    [junit]     at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:280)
    [junit]     at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:95)
    [junit]     at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:164)
    [junit]     at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:95)
    [junit]     at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:107)
    [junit]     at org.apache.activemq.broker.AbstractConnection.processRemoveConsumer(AbstractConnection.java:431)
    [junit]     at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:63)
    [junit]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:190)
    [junit]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:75)
    [junit]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
    [junit]     - locked <0x1c80aac8> (a java.lang.Object)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.serviceRemoteConsumerAdvisory(DemandForwardingBridge.java:331)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.serviceRemoteCommand(DemandForwardingBridge.java:235)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge$2.onCommand(DemandForwardingBridge.java:121)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:103)
    [junit]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
    [junit]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp://localhost/127.0.0.1:53745"" prio=5 tid=0x00536f80 nid=0x1843c00 runnable [0xf2132000..0xf2132ad0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp:///127.0.0.1:53752"" daemon prio=9 tid=0x00533fe0 nid=0x190ec00 runnable [0xf1ca9000..0xf1ca9ad0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""ActiveMQ Default Thread Pool Thread"" daemon prio=5 tid=0x00536450 nid=0x182b600 in Object.wait() [0xf1faf000..0xf1fafad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c4a8840> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:152)
    [junit]     - locked <0x1c4a8840> (a java.lang.Object)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""Transport Status Dector org.apache.activemq.broker.TransportConnector@dc0dd8"" daemon prio=9 tid=0x00534f90 nid=0x18b8c00 waiting on condition [0xf18a1000..0xf18a1ad0]
    [junit]     at java.lang.Thread.sleep(Native Method)
    [junit]     at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp:///127.0.0.1:53751"" daemon prio=9 tid=0x00536050 nid=0x1828e00 in Object.wait() [0xf1eac000..0xf1eadad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c926f00> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at org.apache.activemq.thread.Valve.increment(Valve.java:88)
    [junit]     - locked <0x1c926f00> (a java.lang.Object)
    [junit]     at org.apache.activemq.broker.region.Queue.dispatch(Queue.java:364)
    [junit]     at org.apache.activemq.broker.region.Queue.send(Queue.java:245)
    [junit]     at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:195)
    [junit]     at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:309)
    [junit]     at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
    [junit]     at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:107)
    [junit]     at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
    [junit]     at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:119)
    [junit]     at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:337)
    [junit]     at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:508)
    [junit]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:190)
    [junit]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
    [junit]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp://localhost/127.0.0.1:53749"" prio=5 tid=0x00535aa0 nid=0x190d800 runnable [0xf1e2c000..0xf1e2cad0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp://localhost/127.0.0.1:53749"" prio=5 tid=0x00535600 nid=0x190d400 runnable [0xf1dab000..0xf1dabad0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""MulticastDiscovery: null"" daemon prio=5 tid=0x00535360 nid=0x190f000 runnable [0xf1d2a000..0xf1d2aad0]
    [junit]     at java.net.PlainDatagramSocketImpl.receive0(Native Method)
    [junit]     at java.net.PlainDatagramSocketImpl.receive(PlainDatagramSocketImpl.java:136)
    [junit]     - locked <0x1c6d2ef0> (a java.net.PlainDatagramSocketImpl)
    [junit]     at java.net.DatagramSocket.receive(DatagramSocket.java:712)
    [junit]     - locked <0x1c6dff50> (a java.net.DatagramPacket)
    [junit]     - locked <0x1c6d0800> (a java.net.MulticastSocket)
    [junit]     at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:239)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp:///127.0.0.1:53750"" daemon prio=9 tid=0x00534cf0 nid=0x1851600 in Object.wait() [0xf1c27000..0xf1c28ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c926f00> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at org.apache.activemq.thread.Valve.increment(Valve.java:88)
    [junit]     - locked <0x1c926f00> (a java.lang.Object)
    [junit]     at org.apache.activemq.broker.region.Queue.dispatch(Queue.java:364)
    [junit]     at org.apache.activemq.broker.region.Queue.send(Queue.java:245)
    [junit]     at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:195)
    [junit]     at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:309)
    [junit]     at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
    [junit]     at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:107)
    [junit]     at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
    [junit]     at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:119)
    [junit]     at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:337)
    [junit]     at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:508)
    [junit]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:190)
    [junit]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
    [junit]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""ActiveMQ Default Thread Pool Thread"" daemon prio=5 tid=0x00534280 nid=0x1851200 in Object.wait() [0xf1ba7000..0xf1ba7ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c4a8840> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:152)
    [junit]     - locked <0x1c4a8840> (a java.lang.Object)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""ActiveMQ Default Thread Pool Thread"" daemon prio=5 tid=0x00533d40 nid=0x1850a00 in Object.wait() [0xf1aa5000..0xf1aa5ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c4a8840> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:152)
    [junit]     - locked <0x1c4a8840> (a java.lang.Object)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""Transport Status Dector org.apache.activemq.broker.TransportConnector@c47680"" daemon prio=9 tid=0x005337f0 nid=0x1850600 waiting on condition [0xf1a24000..0xf1a24ad0]
    [junit]     at java.lang.Thread.sleep(Native Method)
    [junit]     at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""MulticastDiscovery: tcp://bigmac-6.local:53749"" daemon prio=5 tid=0x00533380 nid=0x1850200 runnable [0xf19a3000..0xf19a3ad0]
    [junit]     at java.net.PlainDatagramSocketImpl.receive0(Native Method)
    [junit]     at java.net.PlainDatagramSocketImpl.receive(PlainDatagramSocketImpl.java:136)
    [junit]     - locked <0x1c64c530> (a java.net.PlainDatagramSocketImpl)
    [junit]     at java.net.DatagramSocket.receive(DatagramSocket.java:712)
    [junit]     - locked <0x1c64c570> (a java.net.DatagramPacket)
    [junit]     - locked <0x1c64c590> (a java.net.MulticastSocket)
    [junit]     at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:239)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""TcpTransportServer@tcp://bigmac-6.local:53749"" daemon prio=9 tid=0x00532f90 nid=0x1851a00 runnable [0xf1922000..0xf1922ad0]
    [junit]     at java.net.PlainSocketImpl.socketAccept(Native Method)
    [junit]     at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
    [junit]     - locked <0x1c6d1928> (a java.net.SocksSocketImpl)
    [junit]     at java.net.ServerSocket.implAccept(ServerSocket.java:450)
    [junit]     at java.net.ServerSocket.accept(ServerSocket.java:421)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:96)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""ActiveMQ Scheduler"" daemon prio=5 tid=0x00532a00 nid=0x18b8800 in Object.wait() [0xf1820000..0xf1820ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c3d6210> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:432)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:294)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
    [junit]     - locked <0x1c3d6210> (a java.lang.Object)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp://localhost/127.0.0.1:53747"" prio=5 tid=0x00530620 nid=0x18b9600 runnable [0xf179f000..0xf179fad0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp:///127.0.0.1:53748"" daemon prio=9 tid=0x00530250 nid=0x18b9200 runnable [0xf171e000..0xf171ead0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""Transport Status Dector org.apache.activemq.broker.TransportConnector@d03b5b"" daemon prio=9 tid=0x0052ff30 nid=0x18b8400 waiting on condition [0xf169d000..0xf169dad0]
    [junit]     at java.lang.Thread.sleep(Native Method)
    [junit]     at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""ActiveMQ Default Thread Pool Thread"" daemon prio=5 tid=0x0052f8e0 nid=0x18c6e00 in Object.wait() [0xf161c000..0xf161cad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c4a8840> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:152)
    [junit]     - locked <0x1c4a8840> (a java.lang.Object)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""MulticastDiscovery: null"" daemon prio=5 tid=0x0052f640 nid=0x18c6a00 runnable [0xf159b000..0xf159bad0]
    [junit]     at java.net.PlainDatagramSocketImpl.receive0(Native Method)
    [junit]     at java.net.PlainDatagramSocketImpl.receive(PlainDatagramSocketImpl.java:136)
    [junit]     - locked <0x1c517f78> (a java.net.PlainDatagramSocketImpl)
    [junit]     at java.net.DatagramSocket.receive(DatagramSocket.java:712)
    [junit]     - locked <0x1c59c280> (a java.net.DatagramPacket)
    [junit]     - locked <0x1c517fb8> (a java.net.MulticastSocket)
    [junit]     at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:239)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""Transport Status Dector org.apache.activemq.broker.TransportConnector@215748"" daemon prio=9 tid=0x0052f1c0 nid=0x18c6600 waiting on condition [0xf151a000..0xf151aad0]
    [junit]     at java.lang.Thread.sleep(Native Method)
    [junit]     at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""MulticastDiscovery: tcp://bigmac-6.local:53747"" daemon prio=5 tid=0x0052edf0 nid=0x18b9e00 runnable [0xf1499000..0xf1499ad0]
    [junit]     at java.net.PlainDatagramSocketImpl.receive0(Native Method)
    [junit]     at java.net.PlainDatagramSocketImpl.receive(PlainDatagramSocketImpl.java:136)
    [junit]     - locked <0x1c51a138> (a java.net.PlainDatagramSocketImpl)
    [junit]     at java.net.DatagramSocket.receive(DatagramSocket.java:712)
    [junit]     - locked <0x1c51a178> (a java.net.DatagramPacket)
    [junit]     - locked <0x1c51a198> (a java.net.MulticastSocket)
    [junit]     at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:239)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""TcpTransportServer@tcp://bigmac-6.local:53747"" daemon prio=9 tid=0x0052e9b0 nid=0x18b9a00 runnable [0xf1418000..0xf1418ad0]
    [junit]     at java.net.PlainSocketImpl.socketAccept(Native Method)
    [junit]     at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
    [junit]     - locked <0x1c51a288> (a java.net.SocksSocketImpl)
    [junit]     at java.net.ServerSocket.implAccept(ServerSocket.java:450)
    [junit]     at java.net.ServerSocket.accept(ServerSocket.java:421)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:96)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""ActiveMQ Scheduler"" daemon prio=5 tid=0x0052dcf0 nid=0x184a600 in Object.wait() [0xf1397000..0xf1397ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c3d6210> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:432)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:294)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
    [junit]     - locked <0x1c3d6210> (a java.lang.Object)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp:///127.0.0.1:53746"" daemon prio=9 tid=0x0052bd60 nid=0x1907c00 runnable [0xf1214000..0xf1214ad0]
    [junit]     at java.net.SocketInputStream.socketRead0(Native Method)
    [junit]     at java.net.SocketInputStream.read(SocketInputStream.java:129)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
    [junit]     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
    [junit]     at java.io.DataInputStream.readInt(DataInputStream.java:353)
    [junit]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""tcp://localhost/127.0.0.1:53745"" prio=5 tid=0x0052ba20 nid=0x1908000 in Object.wait() [0xf1193000..0xf1193ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c4f4728> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:173)
    [junit]     - locked <0x1c4f4728> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.waitStarted(DemandForwardingBridge.java:481)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.serviceRemoteCommand(DemandForwardingBridge.java:250)
    [junit]     - locked <0x1c4f47b0> (a java.lang.Object)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge$2.onCommand(DemandForwardingBridge.java:121)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:103)
    [junit]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
    [junit]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""ActiveMQ Default Thread Pool Thread"" daemon prio=5 tid=0x0052afc0 nid=0x18e5600 in Object.wait() [0xf1112000..0xf1112ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c4a8840> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:152)
    [junit]     - locked <0x1c4a8840> (a java.lang.Object)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""Transport Status Dector org.apache.activemq.broker.TransportConnector@426f2d"" daemon prio=9 tid=0x00529180 nid=0x18e5200 waiting on condition [0xf1091000..0xf1091ad0]
    [junit]     at java.lang.Thread.sleep(Native Method)
    [junit]     at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""MulticastDiscovery: null"" daemon prio=5 tid=0x00528760 nid=0x18e5a00 runnable [0xf1010000..0xf1010ad0]
    [junit]     at java.net.PlainDatagramSocketImpl.receive0(Native Method)
    [junit]     at java.net.PlainDatagramSocketImpl.receive(PlainDatagramSocketImpl.java:136)
    [junit]     - locked <0x1c3e7818> (a java.net.PlainDatagramSocketImpl)
    [junit]     at java.net.DatagramSocket.receive(DatagramSocket.java:712)
    [junit]     - locked <0x1c3e7858> (a java.net.DatagramPacket)
    [junit]     - locked <0x1c3e7878> (a java.net.MulticastSocket)
    [junit]     at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:239)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""Transport Status Dector org.apache.activemq.broker.TransportConnector@f0bca1"" daemon prio=9 tid=0x00528420 nid=0x18e4e00 waiting on condition [0xf0f8f000..0xf0f8fad0]
    [junit]     at java.lang.Thread.sleep(Native Method)
    [junit]     at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""MulticastDiscovery: tcp://bigmac-6.local:53745"" daemon prio=5 tid=0x00527c80 nid=0x18e4a00 runnable [0xf0f0e000..0xf0f0ead0]
    [junit]     at java.net.PlainDatagramSocketImpl.receive0(Native Method)
    [junit]     at java.net.PlainDatagramSocketImpl.receive(PlainDatagramSocketImpl.java:136)
    [junit]     - locked <0x1c3e99f8> (a java.net.PlainDatagramSocketImpl)
    [junit]     at java.net.DatagramSocket.receive(DatagramSocket.java:712)
    [junit]     - locked <0x1c3e9a38> (a java.net.DatagramPacket)
    [junit]     - locked <0x1c3e9a58> (a java.net.MulticastSocket)
    [junit]     at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.run(MulticastDiscoveryAgent.java:239)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""TcpTransportServer@tcp://bigmac-6.local:53745"" daemon prio=9 tid=0x00527800 nid=0x18e4600 runnable [0xf0e8d000..0xf0e8dad0]
    [junit]     at java.net.PlainSocketImpl.socketAccept(Native Method)
    [junit]     at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
    [junit]     - locked <0x1c3dd958> (a java.net.SocksSocketImpl)
    [junit]     at java.net.ServerSocket.implAccept(ServerSocket.java:450)
    [junit]     at java.net.ServerSocket.accept(ServerSocket.java:421)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:96)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""ActiveMQ Scheduler"" daemon prio=5 tid=0x005268c0 nid=0x18e4200 in Object.wait() [0xf0e0c000..0xf0e0cad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c3d6210> (a java.lang.Object)
    [junit]     at java.lang.Object.wait(Object.java:432)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:294)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
    [junit]     - locked <0x1c3d6210> (a java.lang.Object)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""derby.rawStoreDaemon"" daemon prio=5 tid=0x00516e60 nid=0x184d000 in Object.wait() [0xf0d0a000..0xf0d0aad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c2e5f50> (a org.apache.derby.impl.services.daemon.BasicDaemon)
    [junit]     at org.apache.derby.impl.services.daemon.BasicDaemon.rest(Unknown Source)
    [junit]     - locked <0x1c2e5f50> (a org.apache.derby.impl.services.daemon.BasicDaemon)
    [junit]     at org.apache.derby.impl.services.daemon.BasicDaemon.run(Unknown Source)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""derby.antiGC"" daemon prio=1 tid=0x00515d80 nid=0x18b5400 in Object.wait() [0xf0c89000..0xf0c89ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c2c60c8> (a org.apache.derby.impl.services.monitor.AntiGC)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at org.apache.derby.impl.services.monitor.AntiGC.run(Unknown Source)
    [junit]     - locked <0x1c2c60c8> (a org.apache.derby.impl.services.monitor.AntiGC)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] ""Low Memory Detector"" daemon prio=5 tid=0x0050b0a0 nid=0x1813c00 runnable [0x00000000..0x00000000]
    [junit] 
    [junit] ""CompilerThread0"" daemon prio=10 tid=0x0050a6e0 nid=0x1813800 waiting on condition [0x00000000..0xf0b06378]
    [junit] 
    [junit] ""Signal Dispatcher"" daemon prio=10 tid=0x0050a220 nid=0x1812a00 waiting on condition [0x00000000..0x00000000]
    [junit] 
    [junit] ""Finalizer"" daemon prio=8 tid=0x005099b0 nid=0x1811800 in Object.wait() [0xf0a04000..0xf0a04ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c1fbc60> (a java.lang.ref.ReferenceQueue$Lock)
    [junit]     at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
    [junit]     - locked <0x1c1fbc60> (a java.lang.ref.ReferenceQueue$Lock)
    [junit]     at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
    [junit]     at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)
    [junit] 
    [junit] ""Reference Handler"" daemon prio=10 tid=0x005095e0 nid=0x1810800 in Object.wait() [0xf0983000..0xf0983ad0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c1fbce0> (a java.lang.ref.Reference$Lock)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
    [junit]     - locked <0x1c1fbce0> (a java.lang.ref.Reference$Lock)
    [junit] 
    [junit] ""main"" prio=5 tid=0x00501ad0 nid=0x1805400 in Object.wait() [0xf07ff000..0xf08002e0]
    [junit]     at java.lang.Object.wait(Native Method)
    [junit]     - waiting on <0x1c818088> (a org.apache.activemq.thread.SimpleTaskRunner$1)
    [junit]     at java.lang.Object.wait(Object.java:474)
    [junit]     at org.apache.activemq.thread.SimpleTaskRunner.shutdown(SimpleTaskRunner.java:88)
    [junit]     - locked <0x1c818088> (a org.apache.activemq.thread.SimpleTaskRunner$1)
    [junit]     at org.apache.activemq.ActiveMQSessionExecutor.stop(ActiveMQSessionExecutor.java:110)
    [junit]     at org.apache.activemq.ActiveMQSession.stop(ActiveMQSession.java:1431)
    [junit]     at org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:464)
    [junit]     at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:516)
    [junit]     at org.apache.activemq.transport.TopicClusterTest.tearDown(TopicClusterTest.java:98)
    [junit]     at junit.framework.TestCase.runBare(TestCase.java:130)
    [junit]     at junit.framework.TestResult$1.protect(TestResult.java:106)
    [junit]     at junit.framework.TestResult.runProtected(TestResult.java:124)
    [junit]     at junit.framework.TestResult.run(TestResult.java:109)
    [junit]     at junit.framework.TestCase.run(TestCase.java:118)
    [junit]     at junit.framework.TestSuite.runTest(TestSuite.java:208)
    [junit]     at junit.framework.TestSuite.run(TestSuite.java:203)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:325)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:536)
    [junit] 
    [junit] ""VM Thread"" prio=10 tid=0x00508e60 nid=0x1803c00 runnable 
    [junit] 
    [junit] ""VM Periodic Task Thread"" prio=10 tid=0x0050c760 nid=0x1814000 waiting on condition 
    [junit] 
    [junit] ""Exception Catcher Thread"" prio=10 tid=0x00501cd0 nid=0x1806a00 runnable 
    [junit] 
    [junit] Found one Java-level deadlock:
    [junit] =============================
    [junit] ""session Task"":
    [junit]   waiting to lock monitor 0x01810e68 (object 0x1c926760, a java.util.LinkedList),
    [junit]   which is held by ""tcp://localhost/127.0.0.1:53745""
    [junit] ""tcp://localhost/127.0.0.1:53745"":
    [junit]   waiting to lock monitor 0x01810e8c (object 0x1c8c9340, a org.apache.activemq.broker.region.QueueSubscription),
    [junit]   which is held by ""session Task""
    [junit] 
    [junit] Java stack information for the threads listed above:
    [junit] ===================================================
    [junit] ""session Task"":
    [junit]     at org.apache.activemq.broker.region.Queue.dropEvent(Queue.java:263)
    [junit]     - waiting to lock <0x1c926760> (a java.util.LinkedList)
    [junit]     at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:55)
    [junit]     at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:133)
    [junit]     - locked <0x1c8c9340> (a org.apache.activemq.broker.region.QueueSubscription)
    [junit]     at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:203)
    [junit]     at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:329)
    [junit]     at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:176)
    [junit]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:59)
    [junit]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:59)
    [junit]     at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:71)
    [junit]     at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:342)
    [junit]     at org.apache.activemq.command.MessageAck.visit(MessageAck.java:178)
    [junit]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:190)
    [junit]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:75)
    [junit]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
    [junit]     - locked <0x1c8180d8> (a java.lang.Object)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
    [junit]     at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1041)
    [junit]     at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1617)
    [junit]     at org.apache.activemq.ActiveMQMessageConsumer.afterMessageIsConsumed(ActiveMQMessageConsumer.java:554)
    [junit]     at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:716)
    [junit]     at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:93)
    [junit]     at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:146)
    [junit]     at org.apache.activemq.thread.SimpleTaskRunner.runTask(SimpleTaskRunner.java:110)
    [junit]     at org.apache.activemq.thread.SimpleTaskRunner.access$100(SimpleTaskRunner.java:25)
    [junit]     at org.apache.activemq.thread.SimpleTaskRunner$1.run(SimpleTaskRunner.java:43)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:643)
    [junit]     at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:668)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] ""tcp://localhost/127.0.0.1:53745"":
    [junit]     at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:58)
    [junit]     - waiting to lock <0x1c8c9340> (a org.apache.activemq.broker.region.QueueSubscription)
    [junit]     at org.apache.activemq.broker.region.QueueSubscription.add(QueueSubscription.java:38)
    [junit]     at org.apache.activemq.broker.region.policy.RoundRobinDispatchPolicy.dispatch(RoundRobinDispatchPolicy.java:53)
    [junit]     - locked <0x1c926f28> (a edu.emory.mathcs.backport.java.util.concurrent.CopyOnWriteArrayList)
    [junit]     at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:210)
    [junit]     - locked <0x1c926760> (a java.util.LinkedList)
    [junit]     at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:179)
    [junit]     at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:280)
    [junit]     at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:95)
    [junit]     at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:164)
    [junit]     at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:95)
    [junit]     at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:107)
    [junit]     at org.apache.activemq.broker.AbstractConnection.processRemoveConsumer(AbstractConnection.java:431)
    [junit]     at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:63)
    [junit]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:190)
    [junit]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:75)
    [junit]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
    [junit]     - locked <0x1c80aac8> (a java.lang.Object)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.serviceRemoteConsumerAdvisory(DemandForwardingBridge.java:331)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge.serviceRemoteCommand(DemandForwardingBridge.java:235)
    [junit]     at org.apache.activemq.network.DemandForwardingBridge$2.onCommand(DemandForwardingBridge.java:121)
    [junit]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
    [junit]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
    [junit]     at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:103)
    [junit]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
    [junit]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
    [junit]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
    [junit]     at java.lang.Thread.run(Thread.java:613)
    [junit] 
    [junit] Found 1 deadlock.                                                                                        ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-04 07:08:44.0,,,false,,,,,,,,,,,,,,,,,49218,,,Mon Mar 06 03:58:13 UTC 2006,,,,,,,,"0|i17z47:",254659,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"04/Mar/06 07:08;dflores; The QueueClusterTest appears to be hanging in Linux platform","06/Mar/06 03:58;dflores;Temporarily excludes the QueueClusterTest so that build process won't hang",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"mvn test fails with ""com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:.../activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java",AMQ-899,12481803,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mfateev,mfateev,28/Aug/06 19:08,30/Aug/06 16:20,30/Jan/20 16:57,30/Aug/06 16:20,5.2.0,,,,,,4.1.0,,,Broker,,,,0,">svn co https://svn.apache.org/repos/asf/incubator/activemq/trunk
....
A    trunk/README.txt
 U   trunk
Checked out revision 437779.
fateev@fateev:/workplace/fateev/activemq-head> ls
trunk/
fateev@fateev:/workplace/fateev/activemq-head> cd trunk/activemq-core
fateev@fateev:/workplace/fateev/activemq-head/trunk/activemq-core> mvn test
[INFO] Scanning for projects...
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Core
[INFO]    task-segment: [test]
[INFO] ----------------------------------------------------------------------------
[INFO] artifact org.apache.maven.plugins:maven-resources-plugin: checking for updates from apache-snapshots
[INFO] snapshot org.apache.maven.plugins:maven-resources-plugin:2.3-SNAPSHOT: checking for updates from apache-snapshots
...
...
...
Downloading: http://people.apache.org/maven-snapshot-repository/org/apache/activemq/maven-gram-plugin/4.1-incubator-SNAPSHOT/maven-gram-plugin-4.1-incubator-20060803.174437-6.jar
6K downloaded
[WARNING] While downloading javacc:javacc:3.2
  This artifact has been relocated to net.java.dev.javacc:javacc:3.2.


[INFO] [javacc:javacc {execution: default}]
Java Compiler Compiler Version 3.2 (Parser Generator)
(type ""javacc"" with no arguments for help)
Reading from file /workplace/fateev/activemq-head/trunk/activemq-core/src/main/grammar/SelectorParser.jj . . .
Note: UNICODE_INPUT option is specified. Please make sure you create the parser/lexer usig a Reader with the correct character encoding.
File ""TokenMgrError.java"" does not exist.  Will create one.
File ""ParseException.java"" does not exist.  Will create one.
File ""Token.java"" does not exist.  Will create one.
File ""SimpleCharStream.java"" does not exist.  Will create one.
Parser generated successfully.
Downloading: http://people.apache.org/maven-snapshot-repository/qdox/qdox/1.6/qdox-1.6.pom
[WARNING] Unable to get resource from repository apache-snapshots (http://people.apache.org/maven-snapshot-repository)
Downloading: http://repository.codehaus.org/qdox/qdox/1.6/qdox-1.6.pom
[WARNING] Unable to get resource from repository codehaus (http://repository.codehaus.org)
Downloading: http://dse.amazon.com:8081/proximity/repository/qdox/qdox/1.6/qdox-1.6.pom
4K downloaded
[INFO] snapshot org.apache.xbean:xbean-spring:2.6-SNAPSHOT: checking for updates from apache-snapshots
[INFO] snapshot org.apache.xbean:xbean-spring:2.6-SNAPSHOT: checking for updates from codehaus-snapshots
[INFO] snapshot org.apache.xbean:xbean-spring:2.6-SNAPSHOT: checking for updates from apache.snapshots
Downloading: http://people.apache.org/maven-snapshot-repository/org/apache/xbean/xbean-spring/2.6-SNAPSHOT/xbean-spring-2.6-20060826.135020-8.pom
3K downloaded
Downloading: http://people.apache.org/maven-snapshot-repository/org/apache/xbean/xbean-spring/2.6-SNAPSHOT/xbean-spring-2.6-20060826.135020-8.jar
143K downloaded
Downloading: http://people.apache.org/maven-snapshot-repository/qdox/qdox/1.6/qdox-1.6.jar
[WARNING] Unable to get resource from repository apache-snapshots (http://people.apache.org/maven-snapshot-repository)
Downloading: http://repository.codehaus.org/qdox/qdox/1.6/qdox-1.6.jar
[WARNING] Unable to get resource from repository codehaus (http://repository.codehaus.org)
Downloading: http://dse.amazon.com:8081/proximity/repository/qdox/qdox/1.6/qdox-1.6.jar
89K downloaded
[INFO] [xbean:mapping {execution: default}]
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java
[INFO] ------------------------------------------------------------------------
[INFO] Trace
com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java
        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:185)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java
        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)
        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)
        at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:592)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)
        at org.apache.xbean.spring.generator.QdoxMappingLoader.loadNamespaces(QdoxMappingLoader.java:96)
        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:153)
        ... 18 more
--- Nested Exception ---
com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java
        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)
        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)
        at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:592)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)
        at org.apache.xbean.spring.generator.QdoxMappingLoader.loadNamespaces(QdoxMappingLoader.java:96)
        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:153)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 31 seconds
[INFO] Finished at: Mon Aug 28 12:00:40 PDT 2006
[INFO] Final Memory: 9M/17M
[INFO] ------------------------------------------------------------------------
fateev@fateev:/workplace/fateev/activemq-head/trunk/activemq-core>
",Linux (RHEL3) and Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-29 15:54:50.0,,,false,,,,,,,,,,,,,,,,,92768,,,Wed Aug 30 16:20:53 UTC 2006,,,,,,,,"0|i180hb:",254880,,,,,,,,,,,,,,,,,,,"28/Aug/06 19:42;mfateev;Apparently ""qdox.JavaDocBuilder"" has issues with anonymous inner classes. Converting replyToBridges field initialization to named inner class fixed the issue for JMSConnector. But it fails on the next class JournalPersistenceAdapter on ""periodicCheckpointTask"" field initalization that uses similar construct. 

Is this qdox.JavaDocBuilder something new and untested? ","28/Aug/06 20:30;mfateev;I beleive the change #436909 to trunk/pom.xml is the root cause. My local build was fixed after I've applied the following change to pom.xml:

fateev@fateev:/workplace/fateev/activemq-head/trunk> svn diff
Index: pom.xml
===================================================================
--- pom.xml     (revision 437779)
+++ pom.xml     (working copy)
@@ -495,17 +495,20 @@
             <dependency>
                 <groupId>xmlbeans</groupId>
                 <artifactId>xbean</artifactId>
-                <version>${xmlbeans-version}</version>
+                <!--version>${xmlbeans-version}</version-->
+                <version>2.0.0-beta1</version>
             </dependency>
             <dependency>
                 <groupId>xmlbeans</groupId>
                 <artifactId>xmlpublic</artifactId>
-                <version>${xmlbeans-version}</version>
+                <version>2.0.0-beta1</version>
+                <!--version>${xmlbeans-version}</version-->
             </dependency>
             <dependency>
                 <groupId>xmlbeans</groupId>
                 <artifactId>xbean_xpath</artifactId>
-                <version>${xmlbeans-version}</version>
+                <version>2.0.0-beta1</version>
+                <!--version>${xmlbeans-version}</version-->
             </dependency>

             <!-- For Stax -->
fateev@fateev:/workplace/fateev/activemq-head/trunk>
","28/Aug/06 20:34;mfateev;I was wrong looking at the different module. The problem still present.","29/Aug/06 15:54;aco;I've encountered this issue and the problem could be qdox-1.6 used by the maven-xbean-plugin. Workaround that I can think of for now, is to use qdox-1.5 (but I have to hack the pom of xbean, not good.) or to maybe try downgrading to a lower version of xbean 2.5 maybe? (haven't tried this yet though. :) )","30/Aug/06 16:20;mfateev;Was fixed by issue AMQ-901",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error executing build on activemq-core.,AMQ-901,12481756,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,foconer,foconer,foconer,30/Aug/06 04:10,30/Aug/06 16:19,30/Jan/20 16:57,30/Aug/06 04:22,,,,,,,4.1.0,,,,,,,0,"Below is the exception thrown.

--- Nested Exception ---
com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/D:/l
ogicblaze/working-source/activemq/activemq-core/src/main/java/org/apache/activem
q/network/jms/JmsConnector.java
        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)
        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)

This exception is due to the version of maven-xbean-plugin used.",,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-899,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-30 16:19:57.0,,,false,,,,,,,,,,,,,,,,,92769,,,Wed Aug 30 16:19:57 UTC 2006,,,,,,,,"0|i180h3:",254879,,,,,,,,,,,,,,,,,,,"30/Aug/06 04:22;foconer;Changed version of maven-xbean-plugin to release version 2.5.","30/Aug/06 16:19;mfateev;I'm going to resolve AMQ-899 which was opened earlier.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"list, query and bstat scripts don't seem to work any more",AMQ-509,12481519,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,jstrachan,jstrachan,30/Jan/06 12:12,28/Aug/06 15:04,30/Jan/20 16:57,30/Jan/06 12:14,4.0 M4,,,,,,4.0 M4,,,,,,,0,"I get this...

bigmac-6:~/Desktop/activemq-4-1.0-M4/bin jstrachan$ bstat
ACTIVEMQ_HOME: /Users/jstrachan/Desktop/activemq-4-1.0-M4
Failed to execute query task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.NameNotFoundException: jmxrmi
bigmac-6:~/Desktop/activemq-4-1.0-M4/bin jstrachan$ list
ACTIVEMQ_HOME: /Users/jstrachan/Desktop/activemq-4-1.0-M4
Failed to execute list task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.NameNotFoundException: jmxrmi        ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-28 15:04:25.0,,,false,,,,,,,,,,,,,,,,,49170,,,Mon Aug 28 15:04:25 UTC 2006,,,,,,,,"0|i17zd3:",254699,,,,,,,,,,,,,,,,,,,"30/Jan/06 12:12;jstrachan;Am assuming this is something to do with JMX URIs?","30/Jan/06 12:14;jstrachan;damn, ignore me. Its our damn software VPN messing things up :). Its working fine, it just takes 30 seconds to connect to localhost :(","28/Aug/06 15:04;jelmer1;-Djava.rmi.server.hostname=localhost 

seemed to fix it for me",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax should support non-XML messages,AMQ-884,12481789,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gregw,tuler,tuler,18/Aug/06 16:30,25/Aug/06 19:11,30/Jan/20 16:57,25/Aug/06 19:11,4.0.1,,,,,,,,,,,,,0,"_amq.js should not make an assumption that the received message is in XML format.
I'm using a plain text message and it was not being handled to my handler.
The user handler must be aware of the type of object it receives.
Patch below.

Index: _amq.js
===================================================================
--- _amq.js	(revision 419888)
+++ _amq.js	(working copy)
@@ -46,11 +46,7 @@
             {
               for (var j = 0; j < responseElement.childNodes.length; j++)
               {
-                var child = responseElement.childNodes[j]
-                if (child.nodeType == 1)
-                {
-                  handler(child);
-                }
+                handler(responseElement.childNodes[j]);
 	      }
             }
           }
",,tuler,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/06 16:31;tuler;_amq.js.patch;https://issues.apache.org/jira/secure/attachment/12460728/_amq.js.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-08-24 10:27:37.0,,,false,,,,,,,,,,,,,,,,,84389,,,Fri Aug 25 19:11:20 UTC 2006,,,,Patch Available,,,,"0|i0s2pz:",161917,,,,,,,,,,,,,,,,,,,"24/Aug/06 10:27;gregw;This is a good idea.  I will apply patch, test and commit soon","25/Aug/06 19:11;gregw;Applied patch and tested against chat demo.
Also updated to jetty 6.0.0rc2
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker 'loses' messages and leaks resources when handling duplicate connections,AMQ-889,12481822,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jheitmann,jheitmann,22/Aug/06 07:18,25/Aug/06 15:37,30/Jan/20 16:57,25/Aug/06 15:37,4.0.2,,,,,,4.1.0,,,Broker,,,,0,"A client that uses a transport like the failover transport can damage the broker's ability to deliver messages to other clients and ultimately cause broker resource leaks and message loss. I've found 4 issues starting on the client and ending on the broker that could be improved to make the situation a lot better. In this issue I've provided a patch for #3.

1) A failover client stores session metadata commands like ConsumerInfo in a local state tracker. When failover occurs it replays these commands verbatim to the newly connected-to broker. If the failover transport fails back to the original broker it will replay the same commands with the same ids as it already sent the broker. If the failover happens before the broker notices the old connection has gone this can result in bad mojo. Clients should probably regenerate session, consumer, and maybe connection ids.

2) When the broker detects a duplicate ClientId being sent to it it throws an exception saying so, but this does not stop the broker from processing subsequent messages on that connection. The broker should tear down the connection immediately when it sees a client thrashing about.

3) When a broker receives a certain series of ConsumerInfo add and remove commands with the same ConsumerId it leaks resources. One of the resources leaked is the knowledge of lock owners on messages out in prefetch buffers. This means those messages are stuck forever on the broker and can never be retrieved and never be gc()ed. More below.

4) Messages locked and out in prefetch buffers have no broker-side timeout. If a consumer is up, saying hello to the inactivity monitor, but otherwise doing nothing then its messages are locked forever. The broker should have a janitor that redrives stale messages. This seems like the hardest of the 4 to fix, but is one of the most important.

More on #3: One bad sequence of events is:

1) Consumer 'c' connects to the broker over a failover transport. 
2) c subscribes to a queue and addConsumer() gets called. 
3) c fails away and then fails back.
4) c replays ConsumerInfo to the broker. addConsumer() gets called again and overwrites subscription tracking from the first.

After this the broker will eventually get a double remove and there will be noisy JMX complaints etc., but the serious problem has already occurred in step 4. My patch synchronizes the add step so that the  broker is protected. The individual client will still be a bit confused, and there will still be noise when the second remove comes and JMX can't find the consumer to remove, but the resource and message leaks are taken care of.

I'll file issues on the other 3 problems if they sound valid to you and aren't already entered.",,ashuntwo,ning.li,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/06 07:18;jheitmann;ASF.LICENSE.NOT.GRANTED--doubleConsumer.patch.gz;https://issues.apache.org/jira/secure/attachment/12460679/ASF.LICENSE.NOT.GRANTED--doubleConsumer.patch.gz",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-08-25 15:37:02.0,,,false,,,,,,,,,,,,,,,,,84445,,,Fri Aug 25 15:37:02 UTC 2006,,,,Patch Available,,,,"0|i0s2qn:",161920,,,,,,,,,,,,,,,,,,,"25/Aug/06 15:37;jstrachan;Patch applied - many thanks John! I had to make a minor patch to the MBeans to work with this patch (MBeanTest was failing) as we were being naughty and reusing the same consumerId on each createDurableSubscriber() MBean operation.

You're right that 1, 2, 4 are a concern too - any patches in those areas are most welcome :)

For 1) am thinking that the same IDs shoudl be used (so that then a broker is capable of deducing that a new connection is actually for an already existing client/subscription etc). We want to avoid tearing down and recreating a subscription if possible as for topics this could lead to message loss.

I do think we need some more logic in the broker that if it receives a duplicate client, it will first check to see if the old one is dead as it seems quite common to get duplicate clientID when the client things the socket is dead and reconnects before the broker notices that the client is dead. e.g. we should maybe wait until we try to ping the old client, if that times out, kill the old connection.

For 4) this seem to be a duplicate of AMQ-850 where we should timeout inactive consumers",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
on solaris you cannot easily kill a slave broker when using JDBC Master Slave,AMQ-893,12481798,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,23/Aug/06 09:52,23/Aug/06 10:53,30/Jan/20 16:57,23/Aug/06 10:53,4.1.0,,,,,,4.1.0,,,Broker,,,,0,Seems to hang in a tight loop,"Solaris, T20000",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84509,,,Wed Aug 23 10:53:12 UTC 2006,,,,,,,,"0|i1807z:",254838,,,,,,,,,,,,,,,,,,,"23/Aug/06 10:53;jstrachan;Have just added a short circuit for the loop trying to acquire the exclusive lock so that we fail fast if we are stopping",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"TopicPublisher.publish(topicSession.createTextMessage(""Hello World"") hangs and throws a JMSException",AMQ-882,12481748,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pruente,pruente,17/Aug/06 13:08,18/Aug/06 02:40,30/Jan/20 16:57,18/Aug/06 02:40,4.0.1,,,,,,4.0.1,4.0.2,4.1.0,Transport,,,,0,"Scenario:
ActiveMQ and the publisher process running on the same server.
Several clients are running on several Windows-XP clients

Publisher code:
{code}
// initializing
connection = msgFactory.createTopicConnection();
connection.setExceptionListener(new JMSExceptionListener());
connection.start();

topicSession = connection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
topic = topicSession.createTopic(MFS_LOCATION_CHANGE_EVENT_TOPIC);

publisher = topicSession.createPublisher(topic);
publisher.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
[...]
// sending several times with the same topic
try {
  publisher.publish(topicSession.createTextMessage(location.getName()));
} catch (JMSException e) {
  log.fatal(""Problems during informing Workplace topic:"" + location.getName(), e);
  [...]
{code}

Subscriber code:
{code}
topicConnection = msgFactory.createTopicConnection();
topicConnection.start();
topicConnection.setExceptionListener(new JMSExceptionListener(listeners, this));

topicSession = topicConnection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
Topic topic = topicSession.createTopic(EventSender.MFS_LOCATION_CHANGE_EVENT_TOPIC);

topicSubscriber = topicSession.createSubscriber(topic);
topicSubscriber.setMessageListener(new MessageListener() {
        public void onMessage(Message message) {
          if (message instanceof TextMessage) {
[...]
      topicConnection.start();
{code}

After some thound of messages publish hangs for more than 1 minute and then throws a JMSException (see logs below). After searching in ActiveMQ mailing lists I changed the broker url of the publisher from:
* tcp://arvwms:61616
to 
* tcp://arvwms:61616?soTimeout=2000&connectionTimeout=10000&socketBufferSize=1024&wireFormat.maxInactivityDuration=0

This works some days fine, but now we get the exceptions again.

Is this a problem between topic publisher and ActiveMQ or could it be also a problem between ActiveMQ and topic subscriber? If it is real a problem between publisher and ActiveMQ it can't be a network problem, becuase it is the same server.

This problems occur about 10 times the day. With the exception and losing of 10 messages the day I could live, but the hanging about 1 minute is terrible for our application.

The Exception:
{code}
DEBUG 2006-08-17 12:45:53.738 portConfirmationDefaultHandler :    -:     - handle telegram: com.ssn.acx.extensions.logistics.mfsadapter.telegram.receiving.TransportOrderCompletionTelegram@1385c9f[ID=139887884,loadUnit=01900,lastLocation=SCS_CS,weight=<null>,orientation=0,infoType=COMPLETE,wmsID=1039340,reason=OK]
FATAL 2006-08-17 12:47:12.534 EventSender                    :    -:     - Problems during informing Workplace topic:SCS_CS
javax.jms.JMSException: Broken pipe
  at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:57)
  at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1094)
  at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1553)
  at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:462)
  at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:356)
  at org.apache.activemq.ActiveMQTopicPublisher.publish(ActiveMQTopicPublisher.java:128)
  at com.ssn.acx.extensions.logistics.mfsadapter.event.EventSender.sendLocationChangeEvent(EventSender.java:150)
  at com.ssn.acx.extensions.logistics.mfsadapter.MFSTransactionWithSendingTrigger.commit(MFSTransactionWithSendingTrigger.java:109)
  at com.ssn.acx.core.common.transaction.GlobalTransactionImpl.commit(GlobalTransactionImpl.java:198)
  at com.ssn.acx.core.common.adapterservice.TelegramDispatcher.handleTelegram(TelegramDispatcher.java:306)
  at com.ssn.acx.core.common.adapterservice.TelegramDispatcher.dispatch(TelegramDispatcher.java:180)
  at com.ssn.acx.core.common.adapterservice.AbstractCollector.dispatch(AbstractCollector.java:81)
  at com.ssn.acx.api.common.adapterservice.TriggeredCollector.dispatch(TriggeredCollector.java:87)
  at com.ssn.acx.core.logistics.mfsadapter.MFSCollector.collectTelegrams(MFSCollector.java:122)
  at com.ssn.acx.core.logistics.mfsadapter.WakeUpListener.run(WakeUpListener.java:142)
  at java.lang.Thread.run(Thread.java:595)
Caused by: java.net.SocketException: Broken pipe
  at java.net.SocketOutputStream.socketWrite0(Native Method)
  at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
  at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
  at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:108)
  at java.io.DataOutputStream.flush(DataOutputStream.java:106)
  at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:125)
  at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
  at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:78)
  at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:77)
  at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
  at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
  at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1092)
  ... 14 more
WARN  2006-08-17 12:47:12.555 EventSender                    :    -:     - Destroy EventSender and cleanup JMS resources failed! Caught: javax.jms.JMSException: Cannot write to the stream any more it has already been closed
javax.jms.JMSException: Cannot write to the stream any more it has already been closed
  at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:57)
  at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1094)
  at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1655)
  at org.apache.activemq.ActiveMQMessageProducer.close(ActiveMQMessageProducer.java:315)
  at com.ssn.acx.extensions.logistics.mfsadapter.event.EventSender.destroy(EventSender.java:84)
  at com.ssn.acx.extensions.logistics.mfsadapter.event.EventSender.sendLocationChangeEvent(EventSender.java:155)
  at com.ssn.acx.extensions.logistics.mfsadapter.MFSTransactionWithSendingTrigger.commit(MFSTransactionWithSendingTrigger.java:109)
  at com.ssn.acx.core.common.transaction.GlobalTransactionImpl.commit(GlobalTransactionImpl.java:198)
  at com.ssn.acx.core.common.adapterservice.TelegramDispatcher.handleTelegram(TelegramDispatcher.java:306)
  at com.ssn.acx.core.common.adapterservice.TelegramDispatcher.dispatch(TelegramDispatcher.java:180)
  at com.ssn.acx.core.common.adapterservice.AbstractCollector.dispatch(AbstractCollector.java:81)
  at com.ssn.acx.api.common.adapterservice.TriggeredCollector.dispatch(TriggeredCollector.java:87)
  at com.ssn.acx.core.logistics.mfsadapter.MFSCollector.collectTelegrams(MFSCollector.java:122)
  at com.ssn.acx.core.logistics.mfsadapter.WakeUpListener.run(WakeUpListener.java:142)
  at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.EOFException: Cannot write to the stream any more it has already been closed
  at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.checkClosed(TcpBufferedOutputStream.java:131)
  at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:69)
  at java.io.DataOutputStream.writeInt(DataOutputStream.java:180)
  at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:238)
  at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:124)
  at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
  at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:78)
  at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:77)
  at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
  at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
  at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1092)
  ... 13 more
INFO  2006-08-17 12:47:12.555 EventSender                    :    -:     - Destroyed event sender{code}
","Server: Suse Linux 2.6.5-7.244-smp, JDK  1.5.0_07
Client: Windows XP SP2, JDK  1.5.0_06
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-18 02:40:17.0,,,false,,,,,,,,,,,,,,,,,84390,,,Fri Aug 18 02:40:17 UTC 2006,,,,,,,,"0|i1809j:",254845,,,,,,,,,,,,,,,,,,,"18/Aug/06 02:40;jstrachan;This problem looks like the socket is being closed for some reason on your network. Not sure why - could be a dodgy router or some intermittent issue.

The workaround is to enable failover (putting failover: before the tcp:)

http://incubator.apache.org/activemq/how-can-i-support-auto-reconnection.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build ships without activemq-web-4.0.jar,AMQ-772,12481715,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,madparker,madparker,23/Jun/06 04:23,09/Aug/06 09:03,30/Jan/20 16:57,09/Aug/06 09:03,,,,,,,4.1.0,,,,,,,0,"Build ships without activemq-web-4.0.jar, so WAR generated by ant task incomplete.  I had to add this myself.  Can you please add it to the release?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-09 09:03:34.0,,,false,,,,,,,,,,,,,,,,,92710,,,Wed Aug 09 09:03:34 UTC 2006,,,,,,,,"0|i17zsv:",254770,,,,,,,,,,,,,,,,,,,"09/Aug/06 09:03;jstrachan;Should be in tomorrows 4.1-SNAPSHOT distro",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Opening a connection after closing a connectoin with the same clientid sometimes fails,AMQ-839,12481762,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cmihaly,cmihaly,21/Jul/06 16:04,29/Jul/06 08:04,30/Jan/20 16:57,29/Jul/06 08:04,4.0.1,,,,,,4.1.0,,,Broker,,,,0,"If a client closes a connection, and then fairly quicly tries to open a connection with the same clientid, this sometimes fails.  Apparently, the connection is not completely closed on the broker when the close on the connection completes.  This allows the client to try to open a conection and receive a client already connected exception.   The close connection should not return until the connection is actually closed, or at least an attribute on the collection should allow for setting if you want to wait or not.
",Linux Red Hat Enterprise 4,buchi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-07-29 08:04:31.0,,,false,,,,,,,,,,,,,,,,,84399,,,Sat Jul 29 08:04:31 UTC 2006,,,,,,,,"0|i0s0ef:",161541,,,,,,,,,,,,,,,,,,,"29/Jul/06 08:04;jstrachan;Patch applied. Could you try reproduce the issue? Let us know if its not fixed and we can reopen. If its not fixed, a JUnit test case would help us know for sure if we've fixed it:)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not all properties of the Message are copied during a call to Message.copy(Message),AMQ-849,12481796,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kuppe,kuppe,28/Jul/06 06:53,28/Jul/06 08:52,30/Jan/20 16:57,28/Jul/06 08:52,4.0.1,4.0.2,,,,,4.1.0,,,Broker,,,,0,"Noticed that when using copyOnSend feature and compression, sent messages were not being compressed. It was then found that this was due to the fact that the connection that is used to determine whether compression should be performed or not, was null for the copied message. A look into the Message found that the connection and a number of other properties of the Message were not copied in the copy(Message) 

The patch attached copies the remaining properties of the Message to the message copy.",,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,"28/Jul/06 06:53;kuppe;ASF.LICENSE.NOT.GRANTED--message-copy-patch.txt;https://issues.apache.org/jira/secure/attachment/12460546/ASF.LICENSE.NOT.GRANTED--message-copy-patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-07-28 08:52:23.0,,,false,,,,,,,,,,,,,,,,,84396,,,Fri Jul 28 08:52:23 UTC 2006,,,,Patch Available,,,,"0|i180cn:",254859,,,,,,,,,,,,,,,,,,,"28/Jul/06 08:52;jstrachan;Patch applied - many thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
memory leak in ActiveMQConnection,AMQ-835,12481760,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dozgurc,dozgurc,20/Jul/06 05:22,20/Jul/06 06:16,30/Jan/20 16:57,20/Jul/06 06:16,4.0.1,,,,,,4.1.0,,,,,,,0,"when connection closing, connection doesn't remove itself from factoryStats. so every opened connection cause to grow memory. this can be fixed by adding factoryStats.removeConnection(this); in the close() method.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-07-20 06:16:06.0,,,false,,,,,,,,,,,,,,,,,84400,,,Thu Jul 20 06:16:06 UTC 2006,,,,Patch Available,,,,"0|i14qq7:",235795,,,,,,,,,,,,,,,,,,,"20/Jul/06 06:16;jstrachan;Many thanks for the patch! I've applied to to 4.1 in revision 423797 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq fails to work with spring-2.0-rc1,AMQ-825,12481740,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,14/Jul/06 15:00,14/Jul/06 16:31,30/Jan/20 16:57,14/Jul/06 16:31,4.0.1,,,,,,4.1.0,,,,,,,0,we get a failure trying to coerce a String into a File for the dataDirectory property on the DefaultPersistenceAdapterFactory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84402,,,Fri Jul 14 16:31:03 UTC 2006,,,,,,,,"0|i18007:",254803,,,,,,,,,,,,,,,,,,,"14/Jul/06 15:05;jstrachan;BTW to workaround this issue I tried adding a FileEditor to xbean-spring but that didn't help at all. 

It seems 2.0-rc1 or later requires URI syntax for files as strings. e.g. 'foo' -.> 'file:foo' etc.

So am thinking its better to just not use File types in the DefaultPersistenceAdapterFactory and use Strings by default. The downside is this would break folks using the Java API; but better that than break everyone who uses the activemq.xml configuration mechanism","14/Jul/06 16:31;jstrachan;We avoid using File objects on the default persistence adapter and use Strings instead. Its unfortunate (I tried patching xbean-spring to get around this but I'm afraid it doesn't seem possible). So folks using Java to configure the dataDirectory will need to change foo.setDataDirectory(file) to foo.setDataDirectoryFile(file)  or switch to using a String",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
m2 assembly not working,AMQ-820,12481718,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,foconer,jstrachan,jstrachan,13/Jul/06 00:07,13/Jul/06 17:22,30/Jan/20 16:57,13/Jul/06 17:22,,,,,,,4.1.0,,,,,,,0,"It seems to not include the run.jar and has incorrect versions of things inside (e.g. should be using spring-2.0-rc1).

Can we get the assembly module such that the can go into the bin directory and run 'activemq' or java -jar run.jar and for things to work properly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-07-13 16:28:31.0,,,false,,,,,,,,,,,,,,,,,92736,,,Thu Jul 13 17:22:26 UTC 2006,,,,,,,,"0|i1800n:",254805,,,,,,,,,,,,,,,,,,,"13/Jul/06 16:28;aco;Just added a fix to the Main class. Fritz is working on the spring-2.0-rc1 problem.","13/Jul/06 17:22;foconer;Changed version of spring to 2.0-m5 and explicitly added spring dependency in activemq-core/pom.xml.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OpenWire ActiveMQTextMessage not sharable between JMS client and dotNet client,AMQ-719,12481641,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bradtwurst,bradtwurst,22/May/06 21:18,13/Jul/06 02:12,30/Jan/20 16:57,13/Jul/06 02:12,4.0,,,,,,4.0.2,4.1.0,,JMS client,,,,0,The payload content for a JMS message contains initial bytes for the length of the text string.  The payload content for an dotNet openwire content does not contain this information.  This mismatch in payload results in invalid payloads when passing jms messages between technologies.,ActiveMQ incubator 4.0 release - windows xp pro - jdk1.5 - dotNet2003 - openwire dotnet client from svn head,feldrax,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-13 03:04:56.0,,,false,,,,,,,,,,,,,,,,,84350,,,Thu Jul 13 02:12:32 UTC 2006,,,,,,,,"0|i0s2m7:",161900,,,,,,,,,,,,,,,,,,,"13/Jun/06 03:04;chirino;Setting fix version so that issue shows up on roadmap","20/Jun/06 05:07;feldrax;This can be fixed by changing ActiveMQTextMessage ""Text"" getter/setter to look like this:  (tested with Java 1.4.2)

public string Text
        {
            get {
                if (text == null)
                {
                    // now lets read the content
                    byte[] data = this.Content;
                    if (data != null)
                    {
                        // TODO assume that the text is ASCII
                        char[] chars = new char[data.Length - sizeof(int)];
                        for (int i = 0; i < chars.Length; i++)
                        {
                            chars[i] = (char)data[i + sizeof(int)];
                        }
                        text = new String(chars);
                    }
                }
                return text;
            }
            
            set {
                this.text = value;
                byte[] data = null;
                if (text != null)
                {
                    // TODO assume that the text is ASCII
                    byte[] intData = System.BitConverter.GetBytes(text.Length);
                    data = new byte[text.Length + intData.Length];  //int at the front of it
                    char[] chars = text.ToCharArray();

                    for (int j = 0; j < intData.Length; j++)
                    {
                        data[j] = intData[intData.Length - j - 1];  //reverse byte order, I'm not certain why this is necessary, but it is -Jamie
                    }

                    for (int i = 0; i < chars.Length; i++)
                    {
                        data[i + intData.Length] = (byte)chars[i];
                    }
                }
                this.Content = data;
            }
        }




Hope this helps.

Jamie","13/Jul/06 02:12;chirino;Patch applied!  Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build ships without incompatitable commons-logging and log4j,AMQ-773,12481663,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,madparker,madparker,23/Jun/06 04:25,12/Jul/06 22:00,30/Jan/20 16:57,12/Jul/06 22:00,4.0.1,,,,,,4.0.2,4.1.0,,Broker,,,,0,"commons-logging calls Category.log in lo4j, which is depericated in the version of log4j that ships in 4.0.1.

Please upgrade the commons-log to commons-logging-1.1.jar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-07-12 22:00:24.0,,,false,,,,,,,,,,,,,,,,,84409,,,Wed Jul 12 22:00:24 UTC 2006,,,,,,,,"0|i17zsn:",254769,,,,,,,,,,,,,,,,,,,"12/Jul/06 22:00;chirino;upgraded to 1.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker Network connections over SSH tunnels do not get established.,AMQ-802,12481686,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,10/Jul/06 21:30,11/Jul/06 11:45,30/Jan/20 16:57,11/Jul/06 11:45,4.0,,,,,,4.0.2,4.1.0,,Broker,,,,0,"Due to the way that ssh tunnels accept a connection but then close a socket if they cannot establish a connection to the remote host, the network connector fails to re-connect to the remote host when it is started.",,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-803,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84326,,,Tue Jul 11 11:45:14 UTC 2006,,,,,,,,"0|i1803j:",254818,,,,,,,,,,,,,,,,,,,"10/Jul/06 21:32;chirino;This can even lead to a busy loop as the failover connection establishes a connection and then the network bridge detects that the connection failed and then failover starts again and the loop restarts.","10/Jul/06 21:39;chirino;If failover was not required to establish reliable SSH connections this could be easier to implement.","11/Jul/06 11:45;chirino;Fixed..  failover should not be used with static: connections anymore.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When using Topics with consumers with selectors over a network of brokers, only the first consumer gets messages delivered.",AMQ-810,12481709,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,11/Jul/06 11:38,11/Jul/06 11:41,30/Jan/20 16:57,11/Jul/06 11:41,4.0,,,,,,4.0.2,4.1.0,,,,,,0,The subscription conduit is blocking out subsequent subscriptions from being propagated over the network bridge,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84324,,,Tue Jul 11 11:41:08 UTC 2006,,,,,,,,"0|i1801r:",254810,,,,,,,,,,,,,,,,,,,"11/Jul/06 11:41;chirino;fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The DestinationMap removeAll is removing too many nodes out of the map.,AMQ-808,12481700,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,11/Jul/06 11:18,11/Jul/06 11:21,30/Jan/20 16:57,11/Jul/06 11:21,4.0,,,,,,4.0.2,4.1.0,,Broker,,,,0,"This was initially noticed because at times avisoryies stopped working for some cases.  This is due to the way the Region uses a DestinationMap to find all the destinations that match a subscription.

A unit test that fails looks like:
{code:java}
    public void testAddAndRemove() throws Exception {
    	
        put(""FOO.A"", v1);
        assertMapValue(""FOO.>"", v1);
        
        put(""FOO.B"", v2);        
        assertMapValue(""FOO.>"", v1, v2);
        
        Set set = map.removeAll(createDestination(""FOO.A""));
        
        assertMapValue(""FOO.>"", v2);  // This Fails.  nothing is left in FOO.>
        
    }
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84325,,,Tue Jul 11 11:21:17 UTC 2006,,,,,,,,"0|i18027:",254812,,,,,,,,,,,,,,,,,,,"11/Jul/06 11:21;chirino;fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMS connections using the http:// protocol may not detect connections failures correctly.,AMQ-807,12481677,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,11/Jul/06 11:08,11/Jul/06 11:11,30/Jan/20 16:57,11/Jul/06 11:11,,,,,,,4.0.2,4.1.0,,,,,,0,"If for example the broker is restarted, the broker will not inform a client using the broker again that it's connection state is gone.
Also the client would startup a background poll thread before its' connection was established.  This cause it to go into a busy loop hiting the server and the server sending back clientID not specified error messages until the ConnectionInfo was sent to the broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,92728,,,Tue Jul 11 11:11:23 UTC 2006,,,,,,,,"0|i1802f:",254813,,,,,,,,,,,,,,,,,,,"11/Jul/06 11:11;chirino;fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle async ConnectionError that may happen between brokers using a network bridge.,AMQ-799,12481668,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,07/Jul/06 07:49,07/Jul/06 07:51,30/Jan/20 16:57,07/Jul/06 07:51,4.0,,,,,,4.0.2,4.1.0,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84327,,,2006-07-07 07:49:08.0,,,,,,,,"0|i18047:",254821,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The UdpTransport could potentialy fail to bind on linux.. caused the UdpTransportTest to fail sometimes.,AMQ-787,12481567,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,01/Jul/06 06:05,04/Jul/06 22:06,30/Jan/20 16:57,01/Jul/06 06:07,4.0,,,,,,4.0.2,4.1.0,,,,,,0,[junit] [ERROR] Test org.apache.activemq.transport.udp.UdpTransportTest FAILED,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84330,,,Tue Jul 04 22:06:54 UTC 2006,,,,,,,,"0|i0s0nz:",161584,,,,,,,,,,,,,,,,,,,"01/Jul/06 06:07;chirino; We have noticed that on some platfoms like linux, after you close down  a previously bound socket, it can take a little while before we can bind it again.  We now atempt to bind in a loop up to 5 seconds before failing.

fix in trunk rev 418413.

","04/Jul/06 22:06;chirino;Fix also applied to 4.0 branch rev 419025.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
problem with auto-ack and messages being redelivered in Stomp clients,AMQ-793,12481770,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jstrachan,jstrachan,04/Jul/06 20:48,04/Jul/06 22:01,30/Jan/20 16:57,04/Jul/06 22:01,4.0.1,,,,,,4.0.2,4.1.0,,,,,,0,"For discussion see  http://www.nabble.com/Stomp-and-ActiveMessaging-does-not-remove-messages-from-Queue-tf1889402.html#a5165844

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-07-04 22:01:08.0,,,false,,,,,,,,,,,,,,,,,84404,,,Tue Jul 04 22:01:08 UTC 2006,,,,,,,,"0|i18053:",254825,,,,,,,,,,,,,,,,,,,"04/Jul/06 22:01;chirino;new stomp client which fixes this has been backported to 4.0 also.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Could not enqueue message and Too many open files,AMQ-275,12481609,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gklyuzner,gklyuzner,22/Jun/05 21:36,04/Jul/06 00:42,30/Jan/20 16:57,04/Jul/06 00:42,3.0,,,,,,4.0.1,,,Broker,,,,0,"Relaited to slow consumer condition.

WARN 2005-06-22 12:55:44,135 - Queue is full, waiting for it to be dequeued.


2005-06-22 11:51:09,678 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2024-1119453996333-6:0 is a slow consumer
2005-06-22 11:51:09,678 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2024-1119453996333-6:0 is a slow consumer
2005-06-22 11:51:09,694 [ocalport=61616]] INFO  DataContainer                  - making directory for temporary spooled data: ActiveMQTemp
2005-06-22 11:51:11,069 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2005-1119453893347-6:0 is a slow consumer
2005-06-22 11:51:11,069 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2005-1119453893347-6:0 is a slow consumer

2005-06-22 11:51:17,288 [ocalport=61616]] DEBUG ientTopicBoundedMessageManager - Adding consumer: CONSUMER_INFO: id = 336 ConsumerInfo{ browser = false, destination = ActiveMQ.Advisory.TempDestinations.temp-queue.TemporaryQueue-{TD{ID:ny-cap-33-2150-1119455437835-16:0}TD}ID:ny-cap-33-2150-1119455437835-23:0, consumerIdentifier = 'ID:ny-cap-33-2024-1119453996333-16:0.27.53' , clientId = 'ID:ny-cap-33-2024-1119453996333-16:0' , sessionId = '27' , consumerName = '' , selector = '' , startTime = 1119455477008, started = true, consumerNo = 53, noLocal = false, prefetchNumber = 1000, consumerKey = '[ID:ny-cap-33-2024-1119453996333-16:0:]'  }
2005-06-22 11:51:54,773 [ocalport=61616]] ERROR BrokerClientImpl               - Could not enqueue message ACTIVEMQ_OBJECT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:ny-cap-33-2005-1119453893347-68:121589, bodyAsBytes = org.activemq.io.util.ByteArray@1f07377, readOnlyMessage = false, jmsClientID = 'ID:ny-cap-33-2005-1119453893347-6:0' , jmsCorrelationID = 'null' , jmsDestination = Topic.sds.PropertyTemplatePublisher, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered = false, jmsType = 'null' , jmsExpiration = 1119455573508, jmsPriority = 4, jmsTimestamp = 1119455513508, properties = null, readOnlyProperties = false, entryBrokerName = 'ID:nyotc023-2882-1119382254093-0:0' , entryClusterName = 'default' , consumerNos = [I@12cb4ae, transactionId = 'null' , xaTransacted = false, consumerIdentifer = 'null' , messageConsumed = false, transientConsumed = false, sequenceNumber = 121589, deliveryCount = 1, dispatchedFromDLQ = false, messageAcknowledge = null, jmsMessageIdentity = null, producerKey = ID:ny-cap-33-2005-1119453893347-68: } ActiveMQObjectMessage{ object = null } to SpooledBoundedQueue for this slow consumer
javax.jms.JMSException: enqueNoBlock failed: Too many open files
	at org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueueNoBlock(SpooledBoundedActiveMQMessageQueue.java:121)
	at org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueue(SpooledBoundedActiveMQMessageQueue.java:91)
	at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:198)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.dispatchToQueue(TransientTopicBoundedMessageContainer.java:223)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.targetAndDispatch(TransientTopicBoundedMessageContainer.java:155)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.doSendMessage(TransientTopicBoundedMessageManager.java:225)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.sendMessage(TransientTopicBoundedMessageManager.java:204)
	at org.activemq.broker.impl.DefaultBroker.doMessageSend(DefaultBroker.java:563)
	at org.activemq.broker.impl.DefaultBroker.sendMessage(DefaultBroker.java:305)
	at org.activemq.broker.impl.BrokerContainerImpl.sendMessage(BrokerContainerImpl.java:462)
	at org.activemq.broker.impl.BrokerConnectorImpl.sendMessage(BrokerConnectorImpl.java:271)
	at org.activemq.broker.impl.BrokerClientImpl.consumeActiveMQMessage(BrokerClientImpl.java:706)
	at org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:310)
	at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)
	at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)
	at java.lang.Thread.run(Thread.java:534)

",Windows 2000/XP SP2,maguro,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Nov/05 02:36;nleck;ASF.LICENSE.NOT.GRANTED--patchfile.txt;https://issues.apache.org/jira/secure/attachment/12460702/ASF.LICENSE.NOT.GRANTED--patchfile.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2005-07-15 21:07:30.0,,,false,,,,,,,,,,,,,,,,,48996,,,Tue Jul 04 00:42:42 UTC 2006,,,,,,,,"0|i0s2lj:",161897,,,,,,,,,,,,,,,,,,,"15/Jul/05 21:07;chirino;To reproduce:

1. Set the file decriptor limit low, run:
    ulimit -n 100
2. Start the broker in the session with the low file descriptor limit
2. Run a slow consumer using our sample programs:
    ant consumer -Dtopic=true -DsleepTime=10000 -Dmax=1000000
3. Thow alot of messages at the topic using our sample programs:
    ant producer -Dtopic=true -Dmax=100000000","15/Jul/05 21:25;chirino;Fixed.","18/Jul/05 20:57;gklyuzner;Installed M5 release and was able to reproduce the same error condition:

singleton bean 'derby-ds'
2005-07-18 15:12:02,667 [main           ] INFO  ActiveMQBeanFactory            - Autowiring by type from bean name 'jdbcPersistence' via constructor to bean named 'derby-ds'
2005-07-18 15:12:02,683 [main           ] INFO  ActiveMQBeanFactory            - Bean 'jdbcPersistence' instantiated via constructor [public org.activemq.store.jdbc.JDBCPersistenceAdapter()]
2005-07-18 16:37:34,533 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-1550-1121719043944-19:0 is a slow consumer
2005-07-18 16:37:58,831 [ocalport=61616]] ERROR BrokerClientImpl               - Could not enqueue message ACTIVEMQ_OBJECT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:ny-cap-33-1206-1121716722976-94:80900, bodyAsBytes = org.activemq.io.util.ByteArray@f9e48, readOnlyMessage = false, jmsClientID = 'ID:ny-cap-33-1206-1121716722976-19:0' , jmsCorrelationID = 'null' , jmsDestination = Topic.sds.PropertyTemplatePublisher, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered = false, jmsType = 'null' , jmsExpiration = 1121719138600, jmsPriority = 4, jmsTimestamp = 1121719078600, properties = null, readOnlyProperties = false, entryBrokerName = 'nyotc023-broker-1' , entryClusterName = 'default' , consumerNos = [I@160bf5e, transactionId = 'null' , xaTransacted = false, consumerIdentifer = 'null' , messageConsumed = false, transientConsumed = false, sequenceNumber = 80900, deliveryCount = 1, dispatchedFromDLQ = false, messageAcknowledge = null, jmsMessageIdentity = null, producerKey = ID:ny-cap-33-1206-1121716722976-94: } ActiveMQObjectMessage{ object = null } to SpooledBoundedQueue for this slow consumer
javax.jms.JMSException: enqueNoBlock failed: Too many open files
	at org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueueNoBlock(SpooledBoundedActiveMQMessageQueue.java:121)
	at org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueue(SpooledBoundedActiveMQMessageQueue.java:91)
	at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:205)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.dispatchToQueue(TransientTopicBoundedMessageContainer.java:223)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.targetAndDispatch(TransientTopicBoundedMessageContainer.java:155)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.doSendMessage(TransientTopicBoundedMessageManager.java:225)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.sendMessage(TransientTopicBoundedMessageManager.java:204)
	at org.activemq.broker.impl.DefaultBroker.doMessageSend(DefaultBroker.java:563)
	at org.activemq.broker.impl.DefaultBroker.sendMessage(DefaultBroker.java:305)
	at org.activemq.broker.impl.BrokerContainerImpl.sendMessage(BrokerContainerImpl.java:462)
	at org.activemq.broker.impl.BrokerConnectorImpl.sendMessage(BrokerConnectorImpl.java:271)
	at org.activemq.broker.impl.BrokerClientImpl.consumeActiveMQMessage(BrokerClientImpl.java:713)
	at org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:317)
	at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)
	at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)
	at java.lang.Thread.run(Thread.java:534)


App log:
INFO 2005-07-18 16:37:27,881 - Queue Name= AE.Queue.sds.PropertyTemplatePublisher - class com.tullib.core.message.jms.MessageServerJMSStub
WARN 2005-07-18 16:37:42,787 - Queue is full, waiting for it to be dequeued.
WARN 2005-07-18 16:37:42,881 - Queue is full, waiting for it to be dequeued.
...
WARN 2005-07-18 16:46:15,463 - Queue is full, waiting for it to be dequeued.
WARN 2005-07-18 16:46:15,572 - Queue is full, waiting for it to be dequeued.
WARN 2005-07-18 16:46:15,666 - Queue is full, waiting for it to be dequeued.

Process finished with exit code 1
","18/Jul/05 21:54;gklyuzner;ACTIVEMQ_HOME was pointing to the old M3 release.
Could not reproduce it anymore with M5 release and correct ACTIVEMQ-HOME.","10/Nov/05 08:51;nleck;we could reproduce this problem in version 3.2 of ActiveMQ. 

We created a topic and had a fast producer which created messages as fast a posible and a consumer which did a Thread.sleep( 1000) between each message. Once the memory was filled. It starts to write the messages to a series of files and a handle to these files into a array list but the file handle is still open so after a number of files are created we get a ""Too Many Files Open"" Exception.","16/Nov/05 02:36;nleck;Here is the patch file for FileDataBlock.java

basically we need to close the file handle before it is placed into the collection otherwise we will get ""too many files open"" error. ","02/Mar/06 18:07;kieranmurphy;We also had this problem and have found that the patch above -- closing the file handle before it is passed to the collection -- prevents the problem.  There is still a problem when the SpooledBoundedActiveMQMessageQueue is full, all messages slow down waiting for the queue to be dequeued.

The ""Queue is full, waiting for it to be dequeued"" log message is being reported on the consumer's side, and is refering to a MemoryBoundedQueue which queues messages read off the socket.  This is a slightly different but very significant problem -- if the consumer's MemoryBoundedQueue is full, there is a call to wait().  This prevents any messages at all from being read on the consumer's side, so all messaging slows to a standstill.  This will eventually lead to a breakdown in the reliable protocol -- see AMQ-443 -- the KeepAlive packets sent to a consumer are not enqueued-dequeued fast enough on the consumer side, so the KeepAliveDaemon prompts the consumer to reconnect.

We have corrected this consumer-side problem by first applying the patch to FileDataBlock above, then refactoring ActiveMQSession to create a SpooledBoundedActiveMQMessageQueue for each consumer rather than a MemoryBoundedQueue.  This required some other minor refactoring to other files -- adding ""enqueueFirstNoBlock"" to SpooledBoundedMessageQueue, for example.  This has not only prevented the problems described above, it also seems to have prevented the ""slow consumer"" situation entirely.","04/Jul/06 00:42;jstrachan;This issue is fixed now in 4.0.1",,,,,,,,,,,,,,,,,,,,,,,,,,,
support for non-XBean based XML configuration files does not seem to work,AMQ-790,12481720,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,03/Jul/06 20:26,03/Jul/06 22:22,30/Jan/20 16:57,03/Jul/06 22:22,4.0.1,,,,,,4.1.0,,,,,,,0,"It seems we don't currently support regular Spring XML configuration files when using the 'activemq' command. 

Steps to reproduce:

[john@prokopiev jms]$ unzip incubator-activemq-4.0.1.zip
Archive:  incubator-activemq-4.0.1.zip
  creating: incubator-activemq-4.0.1/
  creating: incubator-activemq-4.0.1/bin/
  creating: incubator-activemq-4.0.1/conf/
  creating: incubator-activemq-4.0.1/docs/
  creating: incubator-activemq-4.0.1/example/
  creating: incubator-activemq-4.0.1/example/activemq-web-console/
...
  inflating: incubator-activemq-4.0.1/userGuide.html
  inflating: incubator-activemq-4.0.1/var/activemq.log
[john@prokopiev jms]$ echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC ""-//SPRING//DTD BEAN//EN""
""http://www.springframework.org/dtd/spring-beans.dtd"">
<beans>
<bean id=""broker"" class=""org.apache.activemq.broker.BrokerService""
init-method=""start"">
<property name=""transportConnectorURIs"">
<list>
<value>tcp://localhost:61234</value>
</list>
</property>
</bean>
</beans> ' > incubator-activemq-4.0.1/conf/activemq.xml
[john@prokopiev jms]$ cd incubator-activemq-4.0.1/bin
[john@prokopiev bin]$ sh activemq
ACTIVEMQ_HOME: /home/john/devel/java/jms/incubator-activemq-4.0.1
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - ActiveMQ 4.0.1 JMS Message Broker
(localhost) is starting
INFO  BrokerService                  - For help or more information please
see: http://incubator.apache.org/activemq/
INFO  JDBCPersistenceAdapter         - Database driver recognized:
[apache_derby_embedded_jdbc_driver]
INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active
Journal: using 2 x 20.0 Megs at:
/home/john/devel/java/jms/incubator-activemq-4.0.1/bin/activemq-data/localhost/journal
INFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in
transactions recovered.
INFO  TransportServerThreadSupport   - Listening for connections at:
tcp://prokopiev.stc.donpac.ru:61234
INFO  TransportConnector             - Connector
tcp://prokopiev.stc.donpac.ru:61234 Started
INFO  BrokerService                  - ActiveMQ JMS Message Broker
(localhost, ID:prokopiev.stc.donpac.ru-41458-1151926448246-1:0) started
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason:
java.lang.ClassCastException: org.apache.activemq.broker.BrokerService
ERROR: java.lang.Exception: java.lang.ClassCastException:
org.apache.activemq.broker.BrokerService
INFO  BrokerService                  - ActiveMQ Message Broker (localhost,
ID:prokopiev.stc.donpac.ru-41458-1151926448246-1:0) is shutting down
INFO  TransportConnector             - Connector
tcp://prokopiev.stc.donpac.ru:61234 Stopped
INFO  VMTransportFactory             - Shutting down VM connectors for
broker: localhost
INFO  BrokerService                  - ActiveMQ JMS Message Broker
(localhost, ID:prokopiev.stc.donpac.ru-41458-1151926448246-1:0) stopped",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84405,,,Mon Jul 03 22:22:59 UTC 2006,,,,,,,,"0|i1805j:",254827,,,,,,,,,,,,,,,,,,,"03/Jul/06 22:22;jstrachan;as a workaround just use a regular XML configuration file like the one that ships with ActiveMQ...

http://incubator.apache.org/activemq/xml-configuration.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XBean has a runtime issue with Spring 2.0M2,AMQ-531,12481505,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,nebhale,nebhale,06/Feb/06 15:05,03/Jul/06 17:41,30/Jan/20 16:57,03/Jul/06 17:41,4.0 M4,,,,,,4.1.0,,,Broker,,,,1,"Apparently there is an issue with XBean now that Spring 2.0 (starting with M2) is compiled against a Java 5 compiler (http://jira.codehaus.org/browse/XB-7).  It's probably worth investigating how long before XBean releases a fix and postponing the 4.0 release until they do.  If not, at least documenting in a known issues list that ActiveMQ 4.0 can't working with 2.0M2 and later until a later release where they do fix it.",Spring 2.0M2,cgs,jevans12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-01 20:35:02.0,,,false,,,,,,,,,,,,,,,,,49186,,,Mon Jul 03 17:41:21 UTC 2006,,,,,,,,"0|i0s2bz:",161854,,,,,,,,,,,,,,,,,,,"13/Feb/06 15:56;nebhale;It turns out this was a signature change by Spring and therefore this ticket can be closed out.  They've reverted back to the original method signature which will be available again in 2.0M3.

http://opensource2.atlassian.com/projects/spring/browse/SPR-1677
","01/Mar/06 20:35;jstrachan;Great - thanks for the heads up Ben!","03/Mar/06 19:49;jstrachan;Unfortunately it looks like we've got another binary incompatibilty

http://forums.activemq.org/posts/list/0/453.page

java.lang.NoSuchMethodError: org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser.registerBeanDefinitions(Lorg/springframework/beans/factory/support/BeanDefinitionReader;Lorg/w3c/dom/Document;Lorg/springframework/core/io/ResourceI
at org.apache.xbean.spring.context.impl.XBeanXmlBeanDefinitionReader.registerBeanDefinitions(XBeanXmlBeanDefinitionReader.java:7 

we might have to do reflection or some wierdness to figure out which version of spring is on the classpath. ","21/Mar/06 07:32;chirino;Looks like we can close this one out.","21/Mar/06 16:05;jstrachan;Still looks to be an issue with 2.0-M3 - Spring changed their binary protocol, so unless they provide us a similar hook, the only thing I can see is we'll have to have a special ""2.0-M3 or later"" version of XBean","21/Mar/06 16:07;jstrachan;If Spring are not going to maintain binary compatibility with XBean then maybe we should just ship a jar-jar'd version of Spring 1.2.x which is switched into the org.apache.xbean.spring namespace so that folks can still use spring 2.x or later in their own config files, then XBean will use an older version of spring
","21/Mar/06 16:31;chirino;While the jarjar would resolve the binary compatability issues, it would break folks who make use of spring objects in the spring.xml","21/May/06 13:54;cgs;This also affects AMQ 4.0 release and Spring 2.0 M4 with this exception:

java.lang.NoSuchMethodError: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.setValidating(Z)V
        at org.apache.xbean.spring.context.impl.XBeanXmlBeanDefinitionReader.<init>(XBeanXmlBeanDefinitionReader.java:56)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.loadBeanDefinitions(ResourceXmlApplicationContext.java:87)
        at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicati
onContext.java:89)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:279)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.BrokerFactoryBean.afterPropertiesSet(BrokerFactoryBean.java:76)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBea
nFactory.java:877)","03/Jul/06 17:41;jstrachan;This is now fixed in SVN HEAD - we are using 2.0-m5 of Spring which works with 2.4 or later of xbean-spring",,,,,,,,,,,,,,,,,,,,,,,,,,
Client and Broker hang trying to start a connection,AMQ-768,12481758,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jamiemc,jamiemc,21/Jun/06 15:30,02/Jul/06 22:03,30/Jan/20 16:57,02/Jul/06 22:03,4.0,,,,,,4.1.0,,,,,,,1,"Every now and again a client hangs connecting to the broker. The broker is configured with the default activemq.xml. The stack dumps are as follows:

ACTIVEMQ_HOME: C:\Java\incubator-activemq-4.0\bin\..
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - ActiveMQ 4.0 JMS Message Broker (localhos
t) is starting
INFO  BrokerService                  - For help or more information please see:
http://incubator.apache.org/activemq/
INFO  ManagementContext              - JMX consoles can connect to service:jmx:r
mi:///jndi/rmi://localhost:1099/jmxrmi
INFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby
_embedded_jdbc_driver]
INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Jou
rnal: using 5 x 20.0 Megs at: C:\Java\incubator-activemq-4.0\activemq-data\journ
al
INFO  JournalPersistenceAdapter      - Journal Recovered: 1 message(s) in transa
ctions recovered.
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://SIM-J
amesM:61616
WARN  MulticastDiscoveryAgent        - brokerName not set
INFO  TransportConnector             - Connector default Started
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://SIM-J
amesM:61613?wireFormat=stomp
INFO  TransportConnector             - Connector stomp Started
INFO  NetworkConnector               - Network Connector default Started
INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, I
D:SIM-JamesM-2205-1149180591980-1:0) started
WARN  ManagedTransportConnection     - Failed to unregister mbean: org.apache.ac
tivemq:BrokerName=localhost,Type=Connection,ConnectorName=default,Connection=9

the stack dump is:

""main"" prio=6 tid=0x000379d0 nid=0x93d0 in Object.wait() [0x0007e000..0x0007fc40
]
       at java.lang.Object.wait(Native Method)
       - waiting on <0x02b66278> (a edu.emory.mathcs.backport.java.util.concurr
ent.CountDownLatch)
       at java.lang.Object.wait(Object.java:474)
       at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(C
ountDownLatch.java:179)
       - locked <0x02b66278> (a edu.emory.mathcs.backport.java.util.concurrent.
CountDownLatch)
       at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatN
egotiator.java:73)
       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.ja
va:44)
       - locked <0x02b64098> (a java.lang.Object)
       at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(Respons
eCorrelator.java:68)
       at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorr
elator.java:73)
       at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnect
ion.java:1131)
       at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(Activ
eMQConnection.java:1219)
       - locked <0x02b602c0> (a org.apache.activemq.ActiveMQConnection)
       at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:
435)","JDK 1.5.0_06, Windows XP SP2",sjivan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-21 21:42:30.0,,,false,,,,,,,,,,,,,,,,,84334,,,Sun Jul 02 22:02:33 UTC 2006,,,,,,,,"0|i0s2on:",161911,,,,,,,,,,,,,,,,,,,"21/Jun/06 21:42;chirino;Lets get this fixed for the next release.","22/Jun/06 22:26;christyc;We're seeing a similiar problem, and wanted to see if this is the same issue.   

We have two web apps in Tomcat 2.2.9 that use JMS connections on Linux Red Hat 4.  We were using ActiveMQ3.0, things were fine, and now we're testing with ActiveMQ 4.0 where I changed the package names (and I tried 4.0.1 with the same results) and the results are:   

the first web app starting a JMS connection works fine.  When the second web app 
tries to start a JMS connection (after successfully getting a ConnectionFactory as 
the first web app did also), it hangs.  We shut down Tomcat, leave the broker 
running, and turn on Tomcat and the first web app hangs when it tries to start a 
JMS connection and same with the second web app.  Here's the stack trace:

Thread [Thread-2] (Suspended) 

            Object.wait(long) line: not available [native method] 

            CountDownLatch(Object).wait() line: not available 

            CountDownLatch.await() line: 179 

            WireFormatNegotiator.oneway(Command) line: 73 

            MutexTransport.oneway(Command) line: 44 

            ResponseCorrelator.asyncRequest(Command, ResponseCallback) line: 68 

            ResponseCorrelator.request(Command) line: 73 

            ActiveMQConnection.syncSendPacket(Command) line: 1112 

            ActiveMQConnection.ensureConnectionInfoSent() line: 1200 

            ActiveMQConnection.start() line: 434 

            JMSUtil.getConnection(String) line: 170 

            JMSUtil.getSession(boolean, String) line: 225 

            JMSUtil.getSession(boolean) line: 193 

            SourceListener.registerForSourceTopic() line: 46 



","02/Jul/06 22:02;chirino;This issue was resolved in issue AMQ-789",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error frames are not pushed out immediately,AMQ-649,12481659,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,bmitchener,bmitchener,21/Mar/06 21:10,02/Jul/06 21:59,30/Jan/20 16:57,02/Jul/06 21:59,4.0 M4,,,,,,4.1.0,,,Transport,,,,0,"If you send a malformed SEND frame to the server (like having a newline after your payload and before the NULL when using a content-length header), you don't get the ERROR frame back from the server immediately as you did with 3.2.2.  With both 4.0M4 and the SNAPSHOT from March 20, I had to send another message to the server to see the ERROR frame.

This was quite confusing when implementing a new STOMP client.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-07-02 21:59:29.0,,,false,,,,,,,,,,,,,,,,,43166,,,Sun Jul 02 21:59:29 UTC 2006,,,,,,,,"0|i17zef:",254705,Regression,,,,,,,,,,,,,,,,,,"02/Jul/06 21:59;chirino;Fixed in trunk revision 418602.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax servlet could deadlock if async dispatch is in use.,AMQ-783,12481665,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,30/Jun/06 23:43,30/Jun/06 23:44,30/Jan/20 16:57,30/Jun/06 23:44,,,,,,,4.1.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,92714,,,Fri Jun 30 23:44:20 UTC 2006,,,,,,,,"0|i0s0hj:",161555,,,,,,,,,,,,,,,,,,,"30/Jun/06 23:44;chirino;If the server and client are configured to disable async dispatch, the servlet could cause a deadlock due to the way
it was syncing on the WebClient

Fixed in rev 418306 on trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
possible bug with temporary queues and networks?,AMQ-755,12481763,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jstrachan,jstrachan,16/Jun/06 15:13,28/Jun/06 20:02,30/Jan/20 16:57,28/Jun/06 20:02,4.0,,,,,,4.0.2,,,,,,,1,"We have been experiencing some fairly serious problems with timeouts using
Spring, Lingo and a network of ActiveMQ brokers.

As I understand it, lingo creates temporary queues to transport the remote
procedure calls across JMS.

We are suspicious that the messaging roundtrip gets interrupted or lost when
using broker networks.

We integrated ActiveMQ 4.0 into our project this week and ran the JMX
jconsole to look at our broker network.

We see temporary queues come and go, and what we are expecting is complete
replication of the queues on each broker. Is this expectation correct?
This is not what we are seeing.

We believe that two things are happening:

1) Temporary queues are not being cleaned up properly on all brokers.

2) Temporary queues are not being created on a new broker when it is taken
down and then restarted.

Your feedback on these apparent issues would be appreciated.

To substantiate our theory we created a couple of JUnit tests. (Our test
cases do not include Lingo - just ActiveMQ client to broker.)

TEST 1

We create a network of brokers, create a message queue, send a message and
then take a broker down. We are expecting that the temporary message queue
created will be removed from both brokers. It is not.

The test fails on the last assert with:

junit.framework.AssertionFailedError: No queues on broker 3 expected:<1> but
was:<0>

Source code follows:


 public void testTempQueueCleanup() throws Exception {
   ActiveMQConnectionFactory cf;
   Connection conn = null;
   Session sess = null;
   try {
     cf = new ActiveMQConnectionFactory(

""failover:(tcp://localhost:61626%3FsoTimeout=5000,tcp://localhost:61627%3FsoTimeout=5000)?maximumRetries=0&amp;establishConnectionTimeout=21000&amp;keepAliveTimeout=300000"");
     conn = cf.createConnection();

     sess = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);

     TemporaryQueue q = sess.createTemporaryQueue();

     BrokerService broker2 = createBroker(""broken2"",
""tcp://localhost:61627"", ""static:(tcp://localhost:61626)"");

     Thread.sleep(5000);

     assertEquals(""No queues on broker 1"", 1,
broker1.getAdminView().getTemporaryQueues().length);
     assertEquals(""No queues on broker 2"", 1,
broker2.getAdminView().getTemporaryQueues().length);

     q.delete();

     assertEquals(""Temp queue left behind on broker 1"", 0,
broker1.getAdminView().getTemporaryQueues().length);
     assertEquals(""Temp queue left behind on broker 2"", 0,
broker2.getAdminView().getTemporaryQueues().length);

     broker2.stop();

   } finally {
     if (sess!=null)
       sess.close();
     if (conn!=null)
       conn.close();
   }
 }


TEST 2
When stopping a broker and then restarting it, we expect to see all queues
replicated on the new broker.

This test fails with:

junit.framework.AssertionFailedError: No queues on broker 3 expected:<1> but
was:<0>

Source code:

 public void testTempQueueRecovery() throws Exception {
   ActiveMQConnectionFactory cf;
   Connection conn = null;
   Session sess = null;
   try {
     cf = new ActiveMQConnectionFactory(

""failover:(tcp://localhost:61626%3FsoTimeout=5000,tcp://localhost:61627%3FsoTimeout=5000)?maximumRetries=0&amp;establishConnectionTimeout=21000&amp;keepAliveTimeout=300000"");
     conn = cf.createConnection();

     sess = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);

     TemporaryQueue q = sess.createTemporaryQueue();

     BrokerService broker2 = createBroker(""broken2"",
""tcp://localhost:61627"",
""static:(tcp://localhost:61626,tcp://localhost:61628)"");

     Thread.sleep(5000);

     assertEquals(""No queues on broker 1"", 1,
broker1.getAdminView().getTemporaryQueues().length);
     assertEquals(""No queues on broker 2"", 1,
broker2.getAdminView().getTemporaryQueues().length);

     BrokerService broker3 = createBroker(""broken3"",
""tcp://localhost:61628"",
""static:(tcp://localhost:61626,tcp://localhost:61627)"");

     assertEquals(""No queues on broker 3"", 1,
broker3.getAdminView().getTemporaryQueues().length);

     Thread.sleep(5000);

     q.delete();

     Thread.sleep(5000);

     assertEquals(""Temp queue left behind on broker 1"", 0,
broker1.getAdminView().getTemporaryQueues().length);
     assertEquals(""Temp queue left behind on broker 2"", 0,
broker2.getAdminView().getTemporaryQueues().length);
     assertEquals(""Temp queue left behind on broker 3"", 0,
broker3.getAdminView().getTemporaryQueues().length);

     broker3.stop();
     broker2.stop();

   } finally {
     if (sess!=null)
       sess.close();
     if (conn!=null)
       conn.close();
   }
 }

",,jgearhart,sjivan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-28 20:02:38.0,,,false,,,,,,,,,,,,,,,,,84337,,,Wed Jun 28 20:02:38 UTC 2006,,,,,,,,"0|i0s2pb:",161914,,,,,,,,,,,,,,,,,,,"28/Jun/06 20:02;rajdavies;I've added a test case to demonstrate this working:

https://svn.apache.org/repos/asf/incubator/activemq/trunk/assembly/src/test/java/org/apache/activemq/usecases/ThreeBrokerTempQueueNetworkTest.java

Some things to note - (why this test case works)

Firstly - networkTTL - subscription and destination infomation is sensitive to the the networkTTL - which is the number of broker hops this infomation is allowed to be propogated. The default is one - and I couldn't see this parameter being used on the network connector.

Secondly - the asychronous nature that infomation is propagated. When a tempoaray destination is created by a client - it's a synchronous call to it's local broker. Destination infomation (passed around as advisory messages using an embedded DestinationInfo command) are dispatched asynchronously - primarily to avoided issues with network locks.

So you'll notice I've added a sleep for a few seconds between the temporary destination delete and the assertion that the temporary destination is in fact removed from all the connected brokers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Getting OutofMemoryException after sending 2200 messages (JBoss 4.0/ActiveMQ 4.0),AMQ-764,12481666,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,shahzad,shahzad,20/Jun/06 21:20,22/Jun/06 02:48,30/Jan/20 16:57,22/Jun/06 02:48,4.0 RC3,,,,,,4.0.2,,,JCA Container,,,,0,"I am testing ActiveMQ 4.0 with JBoss 4.0 where I am using ActiveMQ's .rar file within JBoss. I have a test applicacation that consists of following components:
-Message driven bean listens to queue within JBoss. It receives message and invokes stateless session bean, which invokes entity bean and the message is added to the databsae (mysql). After adding message, it replies back the response to the client.
-JBoss stateless session bean -- uses entity bean to add message to the database
-JBoss entity bean that uses CMP to add message to the database.
-Publisher client - uses ActiveMQ APIs to publish message to the queue and listens for response

I find that after about 2200 messages, I get OutOfMemory exception in ActiveMQ and my application hangs. I am also attaching source code minus jar files.
You will also need mysql database.","REDHAT 3.0
JBoss 4.04-GA
ActiveMQ-4.0-RC2
",,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/06 21:20;shahzad;ASF.LICENSE.NOT.GRANTED--activemq_jboss.zip;https://issues.apache.org/jira/secure/attachment/12460695/ASF.LICENSE.NOT.GRANTED--activemq_jboss.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-06-21 12:41:12.0,,,false,,,,,,,,,,,,,,,,,84302,,,Thu Jun 22 02:48:44 UTC 2006,,,,,,,,"0|i0tszb:",172004,,,,,,,,,,,,,,,,,,,"20/Jun/06 22:34;shahzad;Another thing, I am running ActiveMQ with 800m heap size (which I increased from 512m after memory errors) and message size is 1K.","21/Jun/06 12:41;jstrachan;Can you try using 4.0.1 please and see if you can reproduce?

http://incubator.apache.org/activemq/activemq-401-release.html","22/Jun/06 02:48;shahzad;I tried 4.0.1 and am no longer see out-of-memory. Can you explain what was changed between 4.0-RC2 and 4.0.1 to fix this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client: XXX already connected exception when connection started after consumers added,AMQ-696,12481745,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,craigday,craigday,28/Apr/06 12:00,18/Jun/06 03:14,30/Jan/20 16:57,02/May/06 19:29,4.0 RC2,4.0 RC3,,,,,4.0,,,Broker,,,,0,"While using the new Spring-2.0 DefaultMessageListenerContainer I can reliably reproduce the following exception on the broker side which usually results in a hang on the client side:
 
The broker logs the following exception:
 
INFO  Service                        - Sync error occurred: javax.jms.InvalidClientIDException: Broker: localhost - Client: ID:inspiron-1410-114619274
7453-2:1 already connected
javax.jms.InvalidClientIDException: Broker: localhost - Client: ID:inspiron-1410-1146192747453-2:1 already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:154)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:65)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:69)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:65)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:77)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:500)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:82)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:196)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:93)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:139)
        at java.lang.Thread.run(Thread.java:595)
 
I have extrapolated the sequence of calls that DefaultMessageListenerContainer is making and managed to produce a simple test case that reproduces the problem:
 
import junit.framework.TestCase;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.command.ActiveMQQueue;
 
import javax.jms.*;
 
public class TestActiveMQ extends TestCase {
 
    public void testConnectionFactory() throws Exception {
        final ActiveMQConnectionFactory cf = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
        final ActiveMQQueue queue = new ActiveMQQueue(""testqueue"");
        final Connection conn = cf.createConnection();
 
        Runnable r = new Runnable() {
            public void run() {
                try {
                    Session session = conn.createSession(false, 1);
                    MessageConsumer consumer = session.createConsumer(queue, null);
                    Message msg = consumer.receive(1000);
                } catch (JMSException e) {
                    e.printStackTrace();
                }
            }
        };
        new Thread(r).start();
        conn.start();
 
        try {
            synchronized (this) {
                wait(3000);
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
 
Let us know if you need anymore information. Dont want to scrub ActiveMQ from my list of candidates If I can help it.
 
cheers
craig
 

",WinXP,sjivan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-05-01 16:32:22.0,,,false,,,,,,,,,,,,,,,,,84297,,,Sun Jun 18 03:14:57 UTC 2006,,,,,,,,"0|i0s2o7:",161909,,,,,,,,,,,,,,,,,,,"01/May/06 16:32;jstrachan;I've added your test case to SVN

https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/bugs/CraigsBugTest.java

and unfortunately it works perfectly.

I suspect the bug is caused by Spring reusing a clientID on 2 JMS connections? Can you get a JUnit test case to fail by itself? I suspect some other node in the network is causing the problem, not this test case","01/May/06 18:58;craigday;The attached test case fails for me everytime. I can get it to not fail by sleeping a bit before the conn.start() call, so its obviously a problem related to connection starting concurrently with one of the other operations in the other thread. This is against a single broker.

I have analysed the way Spring is using/setting clientID, and in short, it isnt unless I tell it to. Im only opening one connection anyway, and you can see just one connection in the test case i provided.

Switching to another JMS provider with the same code/config works fine.","01/May/06 19:42;jstrachan;I'm wondering if this is a timing issue between one thread calling connection.start() and another calling createSession().

Maybe it only fails on your OS, processor & JVM etc?","01/May/06 20:19;craigday;
Some further information for you. I attached a debugger to the broker and the testcase.

Here is the problem:

The testcase calls createSession() resulting in the following stack of calls:

wait():-1, java.lang.Object
wait():474, java.lang.Object
waitFor():267, edu.emory.mathcs.backport.java.util.concurrent.FutureTask
get():117, edu.emory.mathcs.backport.java.util.concurrent.FutureTask
getResult():44, org.apache.activemq.transport.FutureResponse
request():69, org.apache.activemq.transport.ResponseCorrelator
syncSendPacket():1108, org.apache.activemq.ActiveMQConnection
ensureConnectionInfoSent():1196, org.apache.activemq.ActiveMQConnection
createSession():252, org.apache.activemq.ActiveMQConnection
run():28, test.click.TestActiveMQ$1
run():595, java.lang.Thread

on the server this ends up at:

addConnection():148, org.apache.activemq.broker.region.RegionBroker
addConnection():65, org.apache.activemq.broker.BrokerFilter
addConnection():69, org.apache.activemq.advisory.AdvisoryBroker
addConnection():65, org.apache.activemq.broker.BrokerFilter
addConnection():77, org.apache.activemq.broker.MutableBrokerFilter
processAddConnection():500, org.apache.activemq.broker.AbstractConnection
processAddConnection():82, org.apache.activemq.broker.jmx.ManagedTransportConnection
visit():106, org.apache.activemq.command.ConnectionInfo
service():196, org.apache.activemq.broker.AbstractConnection
onCommand():62, org.apache.activemq.broker.TransportConnection$1
onCommand():93, org.apache.activemq.transport.ResponseCorrelator
onCommand():70, org.apache.activemq.transport.TransportFilter
onCommand():114, org.apache.activemq.transport.WireFormatNegotiator
onCommand():122, org.apache.activemq.transport.InactivityMonitor
doConsume():87, org.apache.activemq.transport.TransportSupport
run():139, org.apache.activemq.transport.tcp.TcpTransport
run():595, java.lang.Thread

where RegionBroker adds the generated clientID to the clientIDSet.

Note that I havent called conn.start() yet!

The main thread then calls conn.start() resulting in the following stack of calls:

wait():-1, java.lang.Object
wait():474, java.lang.Object
waitFor():267, edu.emory.mathcs.backport.java.util.concurrent.FutureTask
get():117, edu.emory.mathcs.backport.java.util.concurrent.FutureTask
getResult():44, org.apache.activemq.transport.FutureResponse
request():69, org.apache.activemq.transport.ResponseCorrelator
syncSendPacket():1108, org.apache.activemq.ActiveMQConnection
ensureConnectionInfoSent():1196, org.apache.activemq.ActiveMQConnection
start():412, org.apache.activemq.ActiveMQConnection
testConnectionFactory():38, test.click.TestActiveMQ
invoke0():-1, sun.reflect.NativeMethodAccessorImpl
invoke():39, sun.reflect.NativeMethodAccessorImpl
invoke():25, sun.reflect.DelegatingMethodAccessorImpl
invoke():585, java.lang.reflect.Method
runTest():154, junit.framework.TestCase

i.e. another call to ensureConnectionInfoSent()!!! resulting in the broker stack of calls:

addConnection():148, org.apache.activemq.broker.region.RegionBroker
addConnection():65, org.apache.activemq.broker.BrokerFilter
addConnection():69, org.apache.activemq.advisory.AdvisoryBroker
addConnection():65, org.apache.activemq.broker.BrokerFilter
addConnection():77, org.apache.activemq.broker.MutableBrokerFilter
processAddConnection():500, org.apache.activemq.broker.AbstractConnection
processAddConnection():82, org.apache.activemq.broker.jmx.ManagedTransportConnection
visit():106, org.apache.activemq.command.ConnectionInfo
service():196, org.apache.activemq.broker.AbstractConnection
onCommand():62, org.apache.activemq.broker.TransportConnection$1
onCommand():93, org.apache.activemq.transport.ResponseCorrelator
onCommand():70, org.apache.activemq.transport.TransportFilter
onCommand():114, org.apache.activemq.transport.WireFormatNegotiator
onCommand():122, org.apache.activemq.transport.InactivityMonitor
doConsume():87, org.apache.activemq.transport.TransportSupport
run():139, org.apache.activemq.transport.tcp.TcpTransport
run():595, java.lang.Thread

where the clientID is checked and collides with the clientID deposited from the first call.

Its pretty obvious looking at it that ensureConnectionInfo() and the setting of the boolean 
isConnectionInfoSentToBroker is not thread safe:

    /**
     * Send the ConnectionInfo to the Broker
     * 
     * @throws JMSException
     */
    protected void ensureConnectionInfoSent() throws JMSException {
        // Can we skip sending the ConnectionInfo packet??
        if (isConnectionInfoSentToBroker || closed.get()) {
            return;
        }

        if (info.getClientId() == null || info.getClientId().trim().length() == 0) {
            info.setClientId(clientIdGenerator.generateId());
        }
        syncSendPacket(info);
        
        this.isConnectionInfoSentToBroker = true;
        // Add a temp destination advisory consumer so that 
        // We know what the valid temporary destinations are on the 
        // broker without having to do an RPC to the broker.
        
        ConsumerId consumerId = new ConsumerId(new SessionId(info.getConnectionId(), -1),consumerIdGenerator.getNextSequenceId());
        advisoryConsumer = new AdvisoryConsumer(this, consumerId);
        
    }

","02/May/06 19:29;jstrachan;Great catch Craig - thanks for figuring all that out - I was starting to suspect something like this could be the cause of your error.

I've made the ensureConnectionInfoSent() method synchronized now so that this loophole should be now fixed. Could you test its working for you now please? Let us know if its not and we can reopen this issue","16/Jun/06 03:22;sjivan;fyi I ran into the very same issue with 4.0 RC3. After upgrading to the 4.0 release jar (dated jun 13, 2006), I no longer see this error.","16/Jun/06 09:08;sjivan;oops, looks like I spoke too soon. With Active MQ 4.0 RC3, I used to get this exception as soon as the brokers were started. However with 4.0 final, on startup this exception does not occur. It shows up when messages are received by the broker. I'm using Spring-2.0 with DefaultMessageListenerContainer as well.

Here's the stacktrace :

2006-06-15 22:06:35,017 INFO [org.apache.activemq.broker.AbstractConnection.Service] - <Sync error occurred: javax.jms.InvalidClientIDException: Broker: localhost - Client: ID:weston-2030-1150416833580-1:0 already connected>
javax.jms.InvalidClientIDException: Broker: localhost - Client: ID:weston-2030-1150416833580-1:0 already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:176)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:69)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:69)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:69)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:82)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:507)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:118)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)
        at java.lang.Thread.run(Thread.java:534)
","16/Jun/06 15:23;jstrachan;Sanjiv - can you provide some kind of test case to demonstrate the problem - I'm not sure what you are doing and generally don't use the Spring DefaultMessageListenerContainer","18/Jun/06 03:14;sjivan;I've created a separate issue : http://issues.apache.org/activemq/browse/AMQ-760 and uplaoded a test app to demonstrate this and some other issues as well.",,,,,,,,,,,,,,,,,,,,,,,,,,
Wildcard support for policy entries produces unexpected results,AMQ-714,12481737,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,himmeric,himmeric,18/May/06 22:31,16/Jun/06 00:58,30/Jan/20 16:57,12/Jun/06 22:10,4.0,4.0 RC3,,,,,4.0.1,4.1.0,,Broker,,,,0,"When you define a policy Entry using a wildcard (eg. FOO.>) in the xml configuration it is not applied as expected.

Specifically I was attempting to use a lastImageSubscriptionRecoveryPolicy on all subtopics of FOO.>

If I publish three messages to each of FOO.a, FOO.b and FOO.c and then setup a consumer (retroactive = true) to each of the topics FOO.a, FOO.b and FOO.c I receive three copies of the last message sent to any of the topics  In this case the third message sent to FOO.c.

Expected behaviour would be to receive the last message from each topic that is message three from FOO.a, FOO.b and FOO.c

More troubling is if I setup a new session with a consumer only to FOO.a and FOO.b I receive two copied of the third message sent to FOO.c.  Even though this session is not subscribed to FOO.c, presumably this is because the policy is only keeping the last message that matches the destination and returning it as the last image, regardless of if the topic matches the subscription.

With explicit policy entries for each topic (FOO.a, FOO.b) the broker returns the correct messages, so I believe the problem is with wildcard handling.  I need wildcard support here because I do not know my topic names upfront.  I would think that this would be a common scenario (like setting a last image recovery policy on all stock quotes Stock.> )","linux
ibm jdk 1.4.2
sun jdk 1.5",,,,,,,,,,,,,,,,,,120,120,,0%,120,120,,,,,"24/May/06 00:12;kmh27;issue.zip;https://issues.apache.org/jira/secure/attachment/12460580/issue.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-05-24 00:12:34.0,,,false,,,,,,,,,,,,,,,,,84303,,,Mon Jun 12 22:10:29 UTC 2006,,,,,,,,"0|i17zpj:",254755,,,,,,,,,,,,,,,,,,,"24/May/06 00:12;kmh27;The attached zip contains two xbean configurations
wildcard.xml defines a last image recovery policy  on FOO.*
explicit.xml defines a last image recovery policy on FOO.X, FOO.Y, and FOO.Z

There are two java files each with a main method taking one argument as the brokerURL
Publisher.java publishes three messages to each of the FOO topics, run this first to put messages in each topic
Subscriber.java establishes a retroactive consumer on each of the FOO topics, it prints to System.out as messages arrive

Notice that with the wildcard.xml you'll receive three copies of the last message sent to any FOO.* topic (in this case message 2 FOO.Z).

Also if you set Subscriber to not consumer messages on FOO.Z you will still receive two copies of the message 2 on FOO.Z","12/Jun/06 22:10;chirino;Just commited a fix that copies the policy object for each configured destination, it was previously being shared by multiple destinations which is what caused the problems.  Fix is in the 4.1 and 4.0 branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReliableTransport / KeepAlive algorithm does not work properly.,AMQ-443,12481422,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,yaussy,yaussy,15/Dec/05 21:02,15/Jun/06 19:42,30/Jan/20 16:57,15/Jun/06 10:47,3.2,3.2.1,,,,,4.0,,,Broker,Transport,,,0,"The current implementation of KeepAliveDaemon.java will sometimes force disconnections on well behaved connections.  The problem may arrise if there is a connection which goes away, and the KeepAlive send to that channel blocks while attempting to reconnect.  If this reconnection takes a while, then other channels that were responding fine may get their connections broken.  This happens due to the following code in KeepAliveDaemon.java:

		if ((channel.getLastReceiptTimestamp() + channel.getKeepAliveTimeout() * 2) < System.currentTimeMillis()) {
or
		} else if ((channel.getLastReceiptTimestamp() + channel.getKeepAliveTimeout()) < System.currentTimeMillis()) {

The fact that the receipt timestamp is checked against System.currentTimeMillis() causes the code to break otherwise good connections.  If a KeepAlive send (in examineChannel) for a broken channel takes longer than some good channel's KeepAliveTimeout, then the good connection gets broken.

This can, in turn, cause some pretty bad behavior in the Broker.  While testing and diagnosing this problem, I could some brokers in a network of brokers stuck.  The sequence of events during recovery, which get interrupted due to closing the connections, would sometimes lead to the broker hanging waiting for a receipt, such as during an addConsumer (which eventually calls syncSendWithReceipt).

I have redone the logic in KeepAliveDaemon.java (which required a small change to ReliableTransportChannel as well).  This now seems to work.

I'm a bit concerned about the blocking calls, though.  This may be a different issue / bug.  I thought it looked like there was a mechanism to cancel outstanding receipt waiters - but, every once in a while that mechanism would not get called.  This results in the broker basically getting stuck, and does not ever really recover.
",Solaris 8 / 10.  JDK 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/05 21:02;yaussy;ASF.LICENSE.NOT.GRANTED--KeepAliveDaemon.java;https://issues.apache.org/jira/secure/attachment/12460715/ASF.LICENSE.NOT.GRANTED--KeepAliveDaemon.java","15/Dec/05 21:02;yaussy;ASF.LICENSE.NOT.GRANTED--ReliableTransportChannel.java;https://issues.apache.org/jira/secure/attachment/12460613/ASF.LICENSE.NOT.GRANTED--ReliableTransportChannel.java",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-06-15 10:47:20.0,,,false,,,,,,,,,,,,,,,,,49121,,,Thu Jun 15 19:42:11 UTC 2006,,,,,,,,"0|i17ytj:",254611,,,,,,,,,,,,,,,,,,,"15/Jun/06 10:47;chirino;4.0 Has implemented a more robust keepalive solution.  KeepAlive packets are only sent when the transport has been idle.  Also, while the transport is performing a blocking opperation it is not considered idle.
","15/Jun/06 19:42;yaussy;Yes - and so far the 4.0 approach is working very well in this respect.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate message received,AMQ-379,12481377,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,leochan,leochan,05/Oct/05 04:29,15/Jun/06 11:15,30/Jan/20 16:57,15/Jun/06 11:15,3.1,,,,,,3.2.4,4.0,,Broker,,,,0,"I found if the Recevier and Sender start almost the same time.  The Receiver will receiver the same message twise.  I have included my Testing program run by 
java -classpath .;..\activemq-3.1.jar;..\lib\geronimo-spec-jms-1.1-rc4.jar;..\lib\geronimo-spec-j2ee-management-1.0-rc4.jar;..\lib\commons-logging-1.0.3.jar;..\lib\log4j-1.2.8.jar;..\lib\concurrent-1.3.4.jar;..\conf;..\lib\spring-1.2.2.jar TestJmsSender

I have test by restarted the program ~10 times and around 40% chance of have the error of receiver rec same message twise

",SUN JVM 5 Update 4,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Oct/05 04:29;leochan;ASF.LICENSE.NOT.GRANTED--test.rar;https://issues.apache.org/jira/secure/attachment/12460527/ASF.LICENSE.NOT.GRANTED--test.rar",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-06-15 11:15:48.0,,,false,,,,,,,,,,,,,,,,,49073,,,Thu Jun 15 11:15:48 UTC 2006,,,,,,,,"0|i0s2hr:",161880,,,,,,,,,,,,,,,,,,,"05/Oct/05 06:38;leochan;I have tried different combination of Acknowledge mode in both sender receiver and the result is similar ","15/Jun/06 11:15;chirino;This should work properly in 4.0, and I think 3.2 also fixed.  Could you please test and re-open this issue if there is still a problem?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Error in connection, probable race condition.",AMQ-482,12481417,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,iwadasn,iwadasn,12/Jan/06 16:02,15/Jun/06 10:43,30/Jan/20 16:57,15/Jun/06 10:43,3.2.1,,,,,,4.0,,,Connector,,,,0,"
This appears to just be a race condition. I'm using version 3.2.1.

06:13:12,247 INFO  [STDOUT] Exception in thread ""TcpTransportChannel: Socket[addr=/65.202.163.15,port=58475,localport=61616]"" 
06:13:12,249 INFO  [STDOUT] java.lang.NegativeArraySizeException
06:13:12,249 INFO  [STDOUT]     at org.activemq.io.impl.DefaultWireFormat.readPacket(DefaultWireFormat.java:129)
06:13:12,249 INFO  [STDOUT]     at org.activemq.io.impl.AbstractDefaultWireFormat.readPacket(AbstractDefaultWireFormat.java:175)
06:13:12,249 INFO  [STDOUT]     at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:235)
06:13:12,250 INFO  [STDOUT]     at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:313)
06:13:12,250 INFO  [STDOUT]     at java.lang.Thread.run(Thread.java:595)
","java version ""1.5.0_04""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_04-b05)
Java HotSpot(TM) Server VM (build 1.5.0_04-b05, mixed mode)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-15 10:43:22.0,,,false,,,,,,,,,,,,,,,,,49150,,,Thu Jun 15 10:43:22 UTC 2006,,,,,,,,"0|i17yzb:",254637,,,,,,,,,,,,,,,,,,,"15/Jun/06 10:43;chirino;Race conditions have been resolved in 4.0.  I encourage you to upgrade.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The build cannot continue because of the following unsatisfied dependency: org.mortbay.jetty-5.1-SNAPSHOT.jar,AMQ-491,12481515,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,razortooth,razortooth,17/Jan/06 06:21,15/Jun/06 10:41,30/Jan/20 16:57,15/Jun/06 10:41,3.2,3.2.1,,,,,3.2.4,,,,,,,0,"See output below.  Verified w/ debug on that URLs to fetch jar file are well-formed but content does not exist in the repository.  

+----------------------------------------
| Executing default ActiveMQ :: Optional
| Memory: 7M/9M
+----------------------------------------
DEPRECATED: the default goal should be specified in the <build> section of project.xml instead of maven.xml
DEPRECATED: the default goal should be specified in the <build> section of project.xml instead of maven.xml

default:

build:end:

Attempting to download geronimo-kernel-1.0-SNAPSHOT.jar.
Attempting to download geronimo-system-1.0-SNAPSHOT.jar.
Attempting to download org.mortbay.jetty-5.1-SNAPSHOT.jar.
WARNING: Failed to download org.mortbay.jetty-5.1-SNAPSHOT.jar.

BUILD FAILED
File...... /Users/dkords/.maven/cache/maven-multiproject-plugin-1.4.1/plugin.jelly
Element... maven:reactor
Line...... 218
Column.... -1
The build cannot continue because of the following unsatisfied dependency:

org.mortbay.jetty-5.1-SNAPSHOT.jar

Total time   : 42 seconds 
Finished at  : Monday, January 16, 2006 10:06:42 PM PST ","Mac OS X tiger, Linux 2.9, Maven 1.1 beta",,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-08 17:43:57.0,,,false,,,,,,,,,,,,,,,,,49157,,,Thu Jun 15 10:41:40 UTC 2006,,,,,,,,"0|i17yyf:",254633,,,,,,,,,,,,,,,,,,,"08/Feb/06 17:43;nwhite;I ran into this issue as well and ended up manually downloading the jar from http://www.mortbay.org/maven/jetty/jars/

Then I manually put it in my maven repository jetty directory.","15/Jun/06 10:41;chirino;3.2.4 built fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in MemoryBoundedMessageCache,AMQ-597,12481559,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,matthewv,matthewv,28/Feb/06 23:48,15/Jun/06 10:22,30/Jan/20 16:57,15/Jun/06 10:22,3.1,,,,,,3.2.4,4.0,,,,,,0,"If you put two messages in the MemoryBoundedMessageCache with the same message id, the MemoryBoundedMessageCache puts itself into an inconsistent state, which causes a NullPointerException in removeOldest(), on the following line:

      CacheNode node = (CacheNode) messages.remove(messageID);
      decrementMemoryUsed(node.message);

This is because there is no corresponding CacheNode entry for the given messageID.

The problem is caused by the following block of code, in put(String, ActiveMQMessage):

            CacheNode oldNode = (CacheNode) messages.put(messageID, newNode);
            if( oldNode !=null ) {
                lruList.remove(oldNode);
                decrementMemoryUsed(oldNode.message);
            }  

When it removes the existing CacheNode from the messages map, it fails to remove it from the lruList, causing its entry to be left in the lruList. This means that the lruList will now contain two entries for the same message id.  The first one to be removed will remove the only entry in the messages map, and will be fine, but the second one to be removed will cause a NullPointerException, since there is now no corresponding CacheNode in the messages map.

To fix all that needs to be done is change the line:

                lruList.remove(oldNode);

to be

                lruList.remove(oldNode.entry);

so that the entry is correctly removed from the lruList.","Windows XP, Java 1.4.1_01",matthewv,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-15 10:22:25.0,,,false,,,,,,,,,,,,,,,,,49236,,,Thu Jun 15 10:22:25 UTC 2006,,,,,,,,"0|i0s2k7:",161891,,,,,,,,,,,,,,,,,,,"15/Jun/06 10:22;chirino;Hi Matthew,

I think this was fixed since the 3.1 release could you check the 3.2.4 release?  If not the 4.0 release has revamped is memory managment is much better.  I would recommed you upgrade to 4.0 ASAP.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in DataContainer,AMQ-611,12481514,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,sbate,sbate,03/Mar/06 20:13,15/Jun/06 10:15,30/Jan/20 16:57,15/Jun/06 10:15,3.2.2,,,,,,4.0,,,,,,,0,"We are seeing a problem with a IOException from the FileDataBlock when running with multiple slow clients. It appears to be happening because the DataContainer write(byte[]) operation sets the readBlock and writes the data block length then data block content. Another thread sees the read block and reads the data block length but the write thread has not written the contents yet so an IOException or EOFException is thrown in the read thread (in readFully). The write method is synchronized but the read method is not.

See: FileDataBlock.read, FileDataBlock.write,  DataContainer.write (line 111),  and DataContainer.read (line 131)

I can reproduce the error reliably in a debugger by controlling the order of the operations. Unfortunately it's difficult to write a repeatable automated test case since this is a race condition type of error.

Let me know if you need more information.",Windows XP Pro. Bug found in 3.1 (but appears to still be in 3.2.2),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-15 10:15:48.0,,,false,,,,,,,,,,,,,,,,,49248,,,Thu Jun 15 10:15:48 UTC 2006,,,,,,,,"0|i17zjb:",254727,,,,,,,,,,,,,,,,,,,"15/Jun/06 10:15;chirino;This issue should not occur in 4.0 anymore.  I highly recommend that you upgrade.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Can't compile the AMQ4.0 release source,cann't find the reliant package.",AMQ-710,12481704,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,taoyonggang,taoyonggang,17/May/06 15:35,15/Jun/06 09:02,30/Jan/20 16:57,15/Jun/06 09:02,4.0,,,,,,4.0,,,,,,,0,"Can't compile the AMQ4.0 release source,cann't find the reliant package.

So,activesoap-1.0-SNAPSHOT.jar...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-15 08:50:53.0,,,false,,,,,,,,,,,,,,,,,84352,,,Thu Jun 15 09:02:46 UTC 2006,,,,,,,,"0|i17zq7:",254758,,,,,,,,,,,,,,,,,,,"15/Jun/06 08:50;chirino;I just
 
1) downloaded the 4.0 source from: http://activemq.com/site/activemq-40-release.html
2) removed my ~/.maven/repository 
3) ran maven -Dmaven.test.skip=true

and I got a build error with the following message:

Invalid Redirect URI from: http://cvs.apache.org:80/repository//incubator-activemq/jars/activeio-core-3.0-beta3.jar to: http://people.apache.org/repository//incubator-activemq/jars/activeio-core-3.0-beta3.jar

Seems apache is doing redirect that my maven is not liking.

I applied a patch that got me past that, but subsequently, Geronimo 1.2-SNAPSHOT has changed something since activemq was release which breaks the gbean module from compiling.  Luckly the gbean module is not need to get a standalone activemq to build so I disable the module from the build.


","15/Jun/06 09:02;chirino;I have updated the release notes to explain how to apply the patch that make the source distribution build again.  See:
 http://goopen.org/confluence/display/ACTIVEMQ/ActiveMQ+4.0+Release",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
message is read from queue but not removed,AMQ-716,12481765,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,klate,klate,19/May/06 19:01,14/Jun/06 13:45,30/Jan/20 16:57,12/Jun/06 17:11,4.0,,,,,,4.0.1,,,Message Store,,,,0,"Producer  send a message with a non transacted Session

Testing a Consumer with a non transacted Session to receive Messages  
the  Message is read but not removed.

Testing a Consumer with a  transacted Session and commit
the  Message is read and not removed.
","ActiveMQ Release (08.05.2006) 
BM Blade JS20 AIX 5.3
DB2 DataBase 8.2
Driver 2.5.33

Configuration:

<jdbcPersistenceAdapter class=""org.activemq.store.jdbc.adapter.DefaultJDBCAdapter"" dataSource= ""#db2-ds""/>

<bean id=""db2datasource"" class=""org.apache.commons.dbcp.BasicDataSource"">
    <property name=""driverClassName"" value=""com.ibm.db2.jcc.DB2Driver""/>
    <property name=""url"" value=""URL""/>
    <property name=""username"" value=""USER""/>
    <property name=""password"" value=""PASS""/>
  </bean>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-12 17:11:58.0,,,false,,,,,,,,,,,,,,,,,84351,,,Wed Jun 14 13:45:01 UTC 2006,,,,,,,,"0|i0s2p3:",161913,,,,,,,,,,,,,,,,,,,"19/May/06 19:11;klate;Bug in Description

Testing a Consumer with a transacted Session and commit
the Message is read and  removed !!","02/Jun/06 14:15;klate;bug with  javax.jms.Session.AUTO_ACKNOWLEDGE in ActiveMQ ?

When I use createQueueSession(false, javax.jms.Session.AUTO_ACKNOWLEDGE)
the Messages are not removed from the Queue.


When I use createQueueSession(true, javax.jms.Session.AUTO_ACKNOWLEDGE) and
call getSession().commit() in the onMessage Method

the Messages are  removed from the Queue.
","12/Jun/06 17:11;rajdavies;optimizeAcknowledge now off by default","14/Jun/06 13:45;jstrachan;Note that a workaround is to disable optimizeAcknowledge - e.g.

tcp://localhost:61616?jms.optimizeAcknowledge=false",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fatal bug: JMS Send message will be blocked,when two or more recive client reciving one queue destation.",AMQ-684,12481594,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,taoyonggang,taoyonggang,10/Apr/06 10:09,13/Jun/06 03:12,30/Jan/20 16:57,13/Jun/06 03:12,4.0 RC2,,,,,,4.0,,,,,,,1,RC1 not have this bug.,"Suse Linux 9.0 and winxp
Java 5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-04-10 13:15:23.0,,,false,,,,,,,,,,,,,,,,,49308,,,Tue Jun 13 03:12:57 UTC 2006,,,,,,,,"0|i17zlz:",254739,,,,,,,,,,,,,,,,,,,"10/Apr/06 13:15;rajdavies;In SVN head theres a test case for multiple Queue consumers: JmsQueueSendReceiveMultipleConsumersTest.java in org.apache.activemq test packages of activemq-core.
Could you add some more infomation about how the broker(s) and clients are setup ?","10/Apr/06 15:27;taoyonggang;JNDI set:java.naming.provider.url = tcp://128.64.7.27:61616?connectionTimeout=30000&soTimeout=20000

Message is PERSISTENT.
And not wait to sending and reciving.
It will well run 5 minute,but after a long time ,sending will be blocked.




","08/May/06 08:48;taoyonggang;This bug have not repaired.

This bug is too bad.That cann't send message one queue when it have more than one jms message reciving client.

After as so run period of time,the sending will be blocked. My jms client alway transfer send and recive methord.","08/May/06 08:54;taoyonggang;You can continuously send and recive messag in a queue.Sending one million message. to test.","13/Jun/06 03:12;chirino;I think this was resolved against 4.0, please retest against that version.  If the problem still exists, please reopen.  Attaching a test case to the issue usually help the developers find the problem quicker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redeliveries don't work with resource adapter and Jencks,AMQ-731,12481638,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,cgs,cgs,31/May/06 02:20,09/Jun/06 13:45,30/Jan/20 16:57,09/Jun/06 13:45,4.0,,,,,,4.0.1,4.1.0,,Connector,,,,0,"During a rollback in a JTA transaction, this exception is generated a few times:

org.apache.activemq.broker.AbstractConnection.serviceException Async
error occurred: javax.jms.JMSException: Could not correlate
acknowledgment with dispatched message: MessageAck {commandId = 137,
responseRequired = false, ackType = 1, consumerId =
ID:xxx-2276-1148335783189-2:5:-1:2, firstMessageId =
ID:xxx-2276-1148335783189-2:1:1:1:2, lastMessageId =
ID:xxx-2276-1148335783189-2:1:1:1:2, destination = queue://xxxQueue,
transactionId = null, messageCount = 1}
javax.jms.JMSException: Could not correlate acknowledgment with
dispatched message: MessageAck {commandId = 137, responseRequired =
false, ackType = 1, consumerId = ID:xxx-2276-1148335783189-2:5:-1:2,
firstMessageId = ID:xxx-2276-1148335783189-2:1:1:1:2, lastMessageId =
ID:xxx-2276-1148335783189-2:1:1:1:2, destination = queue://xxxQueue,
transactionId = null, messageCount = 1}
        at
org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:175)
        at
org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:233)
        at
org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:362)
        at
org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:176)
        at
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:65)
        at
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:65)
        at
org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:78)
        at
org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:356)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:178)
        at
org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
        at
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at
org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at
org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at
org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at
org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at
org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1111)
        at
org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1655)
        at
org.apache.activemq.ActiveMQSession$2.afterRollback(ActiveMQSession.java:720)
        at
org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:134)
        at
org.apache.activemq.TransactionContext.rollback(TransactionContext.java:409)
        at
org.apache.activemq.ra.LocalAndXATransaction.rollback(LocalAndXATransaction.java:126)
        at
org.apache.geronimo.transaction.manager.WrapperNamedXAResource.rollback(WrapperNamedXAResource.java:78)
        at
com.caucho.transaction.TransactionImpl.rollbackInt(TransactionImpl.java:787)
        at
com.caucho.transaction.TransactionImpl.commit(TransactionImpl.java:560)
        at org.jencks.XAEndpoint.afterDelivery(XAEndpoint.java:103)
        at
org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.afterDelivery(MessageEndpointProxy.java:125)
        at
org.apache.activemq.ra.MessageEndpointProxy.afterDelivery(MessageEndpointProxy.java:64)
        at
org.apache.activemq.ra.ServerSessionImpl.afterDelivery(ServerSessionImpl.java:214)
        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:751)
        at
org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:163)
        at com.caucho.jca.WorkThread.run(WorkThread.java:99)
        at com.caucho.util.ThreadPool.runTasks(ThreadPool.java:490)
        at com.caucho.util.ThreadPool.run(ThreadPool.java:423)
        at java.lang.Thread.run(Thread.java:595) 

Note that the ackType is a poison ack.  This shouldn't be the case as the configuration (below) on the resource adapter and the managed connection factory both specify 9 redeliveries.  Redelivery does not happen.

Broker configuration:

<?xml version=""1.0"" encoding=""UTF-8""?>

<beans xmlns=""http://activemq.org/config/1.0"">

        <broker persistent=""false"" useJmx=""false"">
                <transportConnectors>
                        <transportConnector uri=""vm://localhost"" />
                </transportConnectors>

                <persistenceAdapter>
                        <memoryPersistenceAdapter />
                </persistenceAdapter>
        </broker>

</beans>

Spring configuration:

        <bean id=""jms.connectionFactory""
class=""org.springframework.jca.support.LocalConnectionFactoryBean"">
                <property name=""connectionManager"">
                        <bean class=""com.xxx.jca.ResinConnectionManagerFactoryBean"">
                                <property name=""localTransaction"">
                                        <value>false</value>
                                </property>

                                <property name=""localTransactionOptimization"">
                                        <value>false</value>
                                </property>

                                <property name=""managedConnectionFactory"">
                                        <ref local=""jms.managedConnectionFactory"" />
                                </property>

                                <property name=""xaTransaction"">
                                        <value>true</value>
                                </property>
                        </bean>
                </property>

                <property name=""managedConnectionFactory"">
                        <ref local=""jms.managedConnectionFactory"" />
                </property>
        </bean>

        <bean id=""jms.jcaContainer"" class=""org.jencks.JCAContainer"">
                <property name=""bootstrapContext"">
                        <bean class=""com.xxx.jca.ResinBootstrapContextFactoryBean"" />
                </property>

                <property name=""resourceAdapter"">
                        <ref local=""jms.resourceAdapter"" />
                </property>
        </bean>

        <bean id=""jms.managedConnectionFactory""
class=""org.apache.activemq.ra.ActiveMQManagedConnectionFactory"">
                <property name=""allPrefetchValues"">
                        <value>1</value>
                </property>

                <property name=""initialRedeliveryDelay"">
                        <value>2000</value>
                </property>

                <property name=""maximumRedeliveries"">
                        <value>9</value>
                </property>

                <property name=""redeliveryBackOffMultiplier"">
                        <value>2</value>
                </property>

                <property name=""redeliveryUseExponentialBackOff"">
                        <value>true</value>
                </property>

                <property name=""resourceAdapter"">
                        <ref local=""jms.resourceAdapter"" />
                </property>
        </bean>

        <bean id=""jms.broker"" class=""org.apache.activemq.xbean.BrokerFactoryBean"">
                <property name=""config"">
                        <value>classpath:activemq.xml</value>
                </property>

                <property name=""start"">
                        <value>true</value>
                </property>
        </bean>

        <bean id=""jms.resourceAdapter""
class=""org.apache.activemq.ra.ActiveMQResourceAdapter""
depends-on=""jms.broker"">
                <property name=""allPrefetchValues"">
                        <value>1</value>
                </property>

                <property name=""initialRedeliveryDelay"">
                        <value>2000</value>
                </property>

                <property name=""maximumRedeliveries"">
                        <value>9</value>
                </property>

                <property name=""redeliveryBackOffMultiplier"">
                        <value>2</value>
                </property>

                <property name=""redeliveryUseExponentialBackOff"">
                        <value>true</value>
                </property>

                <property name=""serverUrl"">
                        <value>vm://localhost</value>
                </property>
        </bean>

I have written a test case using Geronimo's TM, but it succeeds.  The configuration is very different, so I don't think it can be attributed to just a simple change in TM.  A lot of other configuration changes had to be made.
","Sun JDK 1.5.0_06, Jencks 1.1.3, AMQ 4.0, Resin Pro 3.0.14",cgs,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/06 03:27;cgs;amq-txcontext.patch;https://issues.apache.org/jira/secure/attachment/12460787/amq-txcontext.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-06-06 00:36:04.0,,,false,,,,,,,,,,,,,,,,,84346,,,Fri Jun 09 13:45:18 UTC 2006,,,,,,,,"0|i0s2lz:",161899,,,,,,,,,,,,,,,,,,,"03/Jun/06 01:32;cgs;Okay, here's a bit more information.  While stepping through a rollback, I've found l.elementData in TransactionContext.rollback(Xid) to contain 24 entries for the _same_ TransactionContext.  The loop at line 407 iterates over all of these, calling afterRollback on each.  afterRollback calls Synchronization.afterRollback at ActiveMQSession line 706 where redelivery is evaluated.  Since max redeliveries is set at 9 and there are 24 entries, the redeliveries are exhausted before this loop completes.

So, the question is, why 24 entries?
","03/Jun/06 01:47;cgs;Oh, I should add, that once the redeliveries are exhausted, it ends up getting a ConnectionClosedException and jumping down to TransactionContext line 414.","03/Jun/06 02:36;cgs;Okay, this is the stack trace with a breakpoint put at TransactionContext line 560.  It happens over and over and over, each time the transaction is suspended.

Thread [resin-30] (Suspended (breakpoint at line 560 in TransactionContext))	
	TransactionContext.setXid(Xid) line: 560	
	TransactionContext.end(Xid, int) line: 327	
	LocalAndXATransaction.end(Xid, int) line: 89	
	WrapperNamedXAResource.end(Xid, int) line: 51	
	TransactionImpl.suspend() line: 448	
	TransactionManagerImpl.suspend() line: 201	
	TreeCache.suspend() line: 101	
	TreeCache.put(Object, Object) line: 71	
	UpdateTimestampsCache.preinvalidate(Serializable[]) line: 54	
	ActionQueue.execute(Executable) line: 244	
	DefaultSaveOrUpdateEventListener(AbstractSaveEventListener).performSaveOrReplicate(Object, EntityKey, EntityPersister, boolean, Object, EventSource, boolean) line: 290	
	DefaultSaveOrUpdateEventListener(AbstractSaveEventListener).performSave(Object, Serializable, EntityPersister, boolean, Object, EventSource, boolean) line: 180	
	DefaultSaveOrUpdateEventListener(AbstractSaveEventListener).saveWithGeneratedId(Object, String, Object, EventSource, boolean) line: 108	
	DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(SaveOrUpdateEvent) line: 186	
	DefaultSaveOrUpdateEventListener.entityIsTransient(SaveOrUpdateEvent) line: 175	
	DefaultSaveOrUpdateEventListener.performSaveOrUpdate(SaveOrUpdateEvent) line: 98	
	DefaultSaveOrUpdateEventListener.onSaveOrUpdate(SaveOrUpdateEvent) line: 70	
	SessionImpl.fireSaveOrUpdate(SaveOrUpdateEvent) line: 509	
	SessionImpl.saveOrUpdate(String, Object) line: 501	
	SessionImpl.saveOrUpdate(Object) line: 497	
	HibernateTemplate$18.doInHibernate(Session) line: 693	
	HibernateTemplate.execute(HibernateCallback, boolean) line: 366	
	HibernateTemplate.saveOrUpdate(Object) line: 690	
	LeadDAOImpl(AbstractDAOImpl<E>).saveOrUpdate(E) line: 281	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	
	Method.invoke(Object, Object...) line: 585	
	AopUtils.invokeJoinpointUsingReflection(Object, Method, Object[]) line: 287	
	ReflectiveMethodInvocation.invokeJoinpoint() line: 181	
	ReflectiveMethodInvocation.proceed() line: 148	
	TransactionInterceptor.invoke(MethodInvocation) line: 96	
	ReflectiveMethodInvocation.proceed() line: 170	
	JdkDynamicAopProxy.invoke(Object, Method, Object[]) line: 176	
	$Proxy46.saveOrUpdate(Object) line: not available	
	RefinanceLeadImpl(LeadImpl).save() line: 545	
	ProcessorImpl.processLead(DistributionContext, Lead) line: 126	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	
	Method.invoke(Object, Object...) line: 585	
	AopUtils.invokeJoinpointUsingReflection(Object, Method, Object[]) line: 287	
	ReflectiveMethodInvocation.invokeJoinpoint() line: 181	
	ReflectiveMethodInvocation.proceed() line: 148	
	TransactionInterceptor.invoke(MethodInvocation) line: 96	
	ReflectiveMethodInvocation.proceed() line: 170	
	JdkDynamicAopProxy.invoke(Object, Method, Object[]) line: 176	
	$Proxy74.processLead(DistributionContext, Lead) line: not available	
	ProcessorFacadeImpl$1.run() line: 92	
	ProcessorFacadeImpl(DistributionContextWrapper).wrap(DistributionContextWrapper$DistributionContextRunnable) line: 124	
	ProcessorFacadeImpl.processLead(Lead) line: 89	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	
	Method.invoke(Object, Object...) line: 585	
	AopUtils.invokeJoinpointUsingReflection(Object, Method, Object[]) line: 287	
	ReflectiveMethodInvocation.invokeJoinpoint() line: 181	
	ReflectiveMethodInvocation.proceed() line: 148	
	TransactionInterceptor.invoke(MethodInvocation) line: 96	
	ReflectiveMethodInvocation.proceed() line: 170	
	JdkDynamicAopProxy.invoke(Object, Method, Object[]) line: 176	
	$Proxy75.processLead(Lead) line: not available	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	
	Method.invoke(Object, Object...) line: 585	
	AopUtils.invokeJoinpointUsingReflection(Object, Method, Object[]) line: 287	
	ReflectiveMethodInvocation.invokeJoinpoint() line: 181	
	ReflectiveMethodInvocation.proceed() line: 148	
	RemoteInvocationTraceInterceptor.invoke(MethodInvocation) line: 68	
	ReflectiveMethodInvocation.proceed() line: 170	
	JdkDynamicAopProxy.invoke(Object, Method, Object[]) line: 176	
	$Proxy0.processLead(Lead) line: not available	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25	
	Method.invoke(Object, Object...) line: 585	
	LingoInvocation(RemoteInvocation).invoke(Object) line: 179	
	DefaultRemoteInvocationExecutor.invoke(RemoteInvocation, Object) line: 33	
	JmsServiceExporterMessageListener(RemoteInvocationBasedExporter).invoke(RemoteInvocation, Object) line: 76	
	JmsServiceExporterMessageListener(RemoteInvocationBasedExporter).invokeAndCreateResult(RemoteInvocation, Object) line: 112	
	JmsServiceExporterMessageListener(JmsServiceExporterSupport).onMessage(Message) line: 85	
	XAEndpoint.onMessage(Message) line: 126	
	MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy, Message) line: 120	
	MessageEndpointProxy.onMessage(Message) line: 60	
	ActiveMQSession.run() line: 692	
	ServerSessionImpl.run() line: 163	
	WorkThread.run() line: 99	
	ThreadPool.runTasks() line: 490	
	ThreadPool.run() line: 423	
	Thread.run() line: 595	
","03/Jun/06 02:38;cgs;So, with that being said, should endedXATransactionContexts actually be a Map of LinkedHashSets?","05/Jun/06 23:47;cgs;Comparing Resin's and Geronmio's TransactionManagerImpl suspend methods, Geronimo's doesn't even suspend the transaction.  The test case I have could probably never work, and it's no wonder that none of the AMQ developers have come across this if testing is only done with Geronimo.","06/Jun/06 00:12;cgs;Resin's TransactionImpl.suspend() method, which doesn't exist in Geronimo, calls XAResource.end(Xid, XAResource.TMSUSPEND),  WrapperNamedXAResource.end(Xid, int) line: 51 in the above stack trace.
","06/Jun/06 00:36;djencks;Resin's  tx implementation is wrong.  suspend is only supposed to remove the thread/tx association, not change what resources are enrolled in the tx.","06/Jun/06 01:19;cgs;How would a single connection be used for multiple transaction branches if end is never called with TMSUSPEND?","06/Jun/06 02:42;djencks;I assume you mean mutliple jta transactions rather than multiple branches of a single jta transaction.  In this case something else such as the connector framework is responsible for delisting the connection(s) from the first tx and enlisting them in the 2nd tx.  IIRC this is stated rather unclearly in the jta spec and slightly more clearly but in terms of c programming in the xa spec.

In geronimo we normally don't do this.  The only time you can change transactions with suspend/resume is going into an ejb RequiresNew method and in this case we just give you new connections.  There is an experimental way of delisting connections and reusing them in the new transaction, but AFAIK no one has ever used it.  What are the circumstances that lead Resin to suspend/resume?","06/Jun/06 02:51;cgs;It could be multiple transactions or multiple branches.  For example, a single database connection can support X number of concurrent transactions as well as Y number of branches within each transaction.  I assume that since Resin is the application server, the transaction manager, and the JCA container, it is calling end on the enlisted XAResources.

Check out the stack trace above.  JBoss TreeCache is calling suspend on the TM to do some work outside of the transaction (TreeCache.suspend() line: 101).  We use Hibernate's connection after_statement release mode, which is appropriate for connections using JTA.","06/Jun/06 03:27;cgs;This simple patch fixes the whole problem.","09/Jun/06 13:45;jstrachan;Patch applied with thanks!",,,,,,,,,,,,,,,,,,,,,,,
java.lang.UnsupportedOperationException thrown when creating a consumer,AMQ-740,12481746,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,08/Jun/06 22:27,08/Jun/06 22:29,30/Jan/20 16:57,08/Jun/06 22:29,4.0,,,,,,4.0.1,4.1.0,,,,,,0,"gregw reported the following stack trace:

java.lang.UnsupportedOperationException
        at java.util.AbstractCollection.add(AbstractCollection.java:216)
        at java.util.AbstractCollection.addAll(AbstractCollection.java:318)
        at org.apache.activemq.store.journal.JournalPersistenceAdapter.getDestinations(JournalPersistenceAdapter.java:139)        at org.apache.activemq.broker.region.AbstractRegion.getInactiveDestinations(AbstractRegion.java:193)
        at org.apache.activemq.broker.region.TopicRegion.getInactiveDestinations(TopicRegion.java:254)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:157)
        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:113)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:296)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:73)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:77)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:73)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:86)
        at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:427)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:295)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:68)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:73)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1131)
        at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1667)
        at org.apache.activemq.ActiveMQMessageConsumer.<init>(ActiveMQMessageConsumer.java:196)
        at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:840)
        at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:800)
        at org.apache.activemq.web.WebClient.getConsumer(WebClient.java:261)
        at org.apache.activemq.web.WebClient.getConsumer(WebClient.java:255)
        at org.apache.activemq.web.MessageListenerServlet.doPost(MessageListenerServlet.java:142)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:767)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:860)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:423)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:966)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:957)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:353)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:226)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:567)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:147)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:126)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
        at org.mortbay.jetty.Server.handle(Server.java:248)
        at org.mortbay.jetty.HttpConnection.handlerRequest(HttpConnection.java:360)
        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:628)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:611)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:197)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:288)
        at org.mortbay.jetty.nio.SelectChannelConnector$HttpChannelEndPoint.run(SelectChannelConnector.java:805)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84341,,,Thu Jun 08 22:29:14 UTC 2006,,,,,,,,"0|i17zwf:",254786,,,,,,,,,,,,,,,,,,,"08/Jun/06 22:29;chirino;Fix applied to both 4.1 and 4.0.1 branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network connections do not reconnect when using static: with failover=true,AMQ-726,12481649,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,26/May/06 23:20,31/May/06 01:38,30/Jan/20 16:57,31/May/06 01:38,4.0,4.0 M4,4.0 RC2,4.0 RC3,,,4.0,,,Broker,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84285,,,Wed May 31 01:38:01 UTC 2006,,,,,,,,"0|i0s0nb:",161581,,,,,,,,,,,,,,,,,,,"31/May/06 01:38;chirino;Fixed in4.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect length specification in loose encoding?,AMQ-718,12481691,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,andrewlu,andrewlu,22/May/06 13:06,31/May/06 01:37,30/Jan/20 16:57,31/May/06 01:37,4.0,4.0 RC2,4.0 RC3,,,,4.0,,,Transport,,,,0,"Unless loose-encoded length is mean to mean something different from tight-encoded length, I believe that the length written to the wire for loosely-encoded OpenWire messages is off by 4.  I imagine this hasn't been caught before because most clients synchronously read packets off the wire and so can ignore the length specification.

--- activemq-core/src/main/java/org/apache/activemq/openwire/OpenWireFormat.java        (revision 399408)
+++ activemq-core/src/main/java/org/apache/activemq/openwire/OpenWireFormat.java        (working copy)
@@ -172,7 +172,7 @@
                     sequence = baos.toByteSequence();
                     
                     if( !sizePrefixDisabled ) {
-                        size = sequence.getLength()-4;
+                        size = sequence.getLength();
                         ByteArrayPacket packet = new ByteArrayPacket(sequence);
                         PacketData.writeIntBig(packet, size);
                     }
@@ -253,7 +253,7 @@
                 if( !sizePrefixDisabled ) {
                     looseOut.close();
                     ByteSequence sequence = baos.toByteSequence();
-                    dataOut.writeInt(sequence.getLength()-4);
+                    dataOut.writeInt(sequence.getLength());
                     dataOut.write(sequence.getData(), sequence.getOffset(), sequence.getLength());
                 }
 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-05-22 18:29:54.0,,,false,,,,,,,,,,,,,,,,,84295,,,Wed May 31 01:37:31 UTC 2006,,,,,,,,"0|i17zov:",254752,,,,,,,,,,,,,,,,,,,"22/May/06 18:29;jstrachan;added versions","22/May/06 22:02;chirino;Good find..  I think it's worth delaying the 4.0 release to fix this.","22/May/06 22:40;chirino;oh.  I think I may read this too quickly.

I just reviewed the code, and the size field is consistent in usage in both the loose and tight encoding.  They size written is the number of bytes that will follow.","22/May/06 22:52;chirino;As I see it both loose and tight encoding prefix the size of the playload.

So the total size of a command when it is encoding to bytes would be 4+1+size-of-payload which corresponds to the size-of-payload, type, and payload.

This is true for both loose and tight encoding.  If I'm wrong please let me know.","23/May/06 00:31;andrewlu;FWIW, my understanding is that size-of-payload includes the type byte, but not the size bytes.  Correct?  (see int size=1 on OpenWireFormat.java:223).

I think it may be right in one instance and wrong in another.

Using this code as an example, from OpenWireFormat.java:242:

               DataOutputStream looseOut = dataOut;
                ByteArrayOutputStream baos=null;

                if( !sizePrefixDisabled ) {
                        baos = new ByteArrayOutputStream();
                        looseOut = new DataOutputStream(baos);
                }

                looseOut.writeByte(type);
                dsm.looseMarshal(this, c, looseOut);

                if( !sizePrefixDisabled ) {
                    looseOut.close();
                    ByteSequence sequence = baos.toByteSequence();
                    dataOut.writeInt(sequence.getLength()-4);
                    dataOut.write(sequence.getData(), sequence.getOffset(), sequence.getLength());
                }

Nowhere was the size written into ""baos"" yet 4 is being subtracted from its size to put the size on the wire.  In another location in the file (the other overload of marshal() :

                    ByteArrayOutputStream baos = new ByteArrayOutputStream();
                    DataOutputStream ds = new DataOutputStream(baos);
                    if( !sizePrefixDisabled ) {
                        ds.writeInt(0); // we don't know the final size yet but write this here for now.
                    }
                    ds.writeByte(type);
                    dsm.looseMarshal(this, c, ds);
                    ds.close();
                    sequence = baos.toByteSequence();

                    if( !sizePrefixDisabled ) {
                        size = sequence.getLength()-4;
                        ByteArrayPacket packet = new ByteArrayPacket(sequence);
                        PacketData.writeIntBig(packet, size);
                    }
                }

In this case I think this code is right, since the size has been written in to that sequence.

I'll revert the second case I mentioned and run my tests again.","23/May/06 01:25;andrewlu;OK, I've verified that my code still works with just the first case I mentioned (in the marshal(Object, DataOutputStream) overload) patched.  The other case I believe is fine how it is.","23/May/06 03:48;chirino;Hi Adrew.. this stuf is not easy grok.. glad your keeping us honest.

Your right, I stand corrected, the size field holds the size of the type+playload fields.  For a sec there I was thinking it only held the size of the payload.

I now agree with your anyalisys that the original patch to line 253 is valid.  And also found that the sizePrefixDisabled option was not being honorred in the tight encoding case for that method.  This is the new patch what I will be applying shortly.

Index: /Users/chirino/sandbox/activemq-4-branch/activemq-core/src/main/java/org/apache/activemq/openwire/OpenWireFormat.java
===================================================================
--- /Users/chirino/sandbox/activemq-4-branch/activemq-core/src/main/java/org/apache/activemq/openwire/OpenWireFormat.java	(revision 399345)
+++ /Users/chirino/sandbox/activemq-4-branch/activemq-core/src/main/java/org/apache/activemq/openwire/OpenWireFormat.java	(working copy)
@@ -233,11 +233,15 @@
 	            BooleanStream bs = new BooleanStream();
 	            size += dsm.tightMarshal1(this, c, bs);
 	            size += bs.marshalledSize(); 
-	
-	            dataOut.writeInt(size);
+
+                if( !sizePrefixDisabled ) {
+                    dataOut.writeInt(size);
+                }
+                
 	            dataOut.writeByte(type);            
 	            bs.marshal(dataOut);
 	            dsm.tightMarshal2(this, c, dataOut, bs);
+                
             } else {            	
             	DataOutputStream looseOut = dataOut;
             	ByteArrayOutputStream baos=null;
@@ -253,7 +257,7 @@
                 if( !sizePrefixDisabled ) {
                     looseOut.close();
                     ByteSequence sequence = baos.toByteSequence();
-                    dataOut.writeInt(sequence.getLength()-4);
+                    dataOut.writeInt(sequence.getLength());
                     dataOut.write(sequence.getData(), sequence.getOffset(), sequence.getLength());
                 }
 
","23/May/06 05:44;chirino;Patch commited.  Thanks  Andrew!","31/May/06 01:37;chirino;fixing in 4.0","31/May/06 01:37;chirino;recut 4.0",,,,,,,,,,,,,,,,,,,,,,,,,
Maven 2 build for 4.0-M3 broken,AMQ-709,12481652,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gchen77,gchen77,16/May/06 02:21,22/May/06 17:40,30/Jan/20 16:57,22/May/06 17:40,4.0 M4,4.0 RC2,4.0 RC3,,,,4.0,,,,,,,1,"values for dependencies are using interpolation that isn't defined.

therefore all dependent jars are breaking on the download",maven2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-05-16 03:04:22.0,,,false,,,,,,,,,,,,,,,,,84287,,,Mon May 22 17:40:59 UTC 2006,,,,,,,,"0|i0s2mn:",161902,,,,,,,,,,,,,,,,,,,"16/May/06 03:04;jstrachan;Could you be more specific?  e.g. try attaching your output or letting us know what jars you can't find","22/May/06 17:40;jstrachan;AFAIK this is now resolved. We experienced some problems with both Apache.org and codehaus.org going down.

Things should now build properly with a recent version of maven 2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endpoint failed to process message: NullPointerException,AMQ-689,12481637,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,rcastro,rcastro,15/Apr/06 18:16,22/May/06 17:39,30/Jan/20 16:57,22/May/06 17:39,4.0 RC2,,,,,,4.1.0,,,,,,,0,"I have redelivery configured, but when it fails in all attempts (through a RuntimeException), I get the following message:

11:00:54,775 DEBUG [ServerSessionImpl:0] Endpoint failed to process message.
java.lang.NullPointerException
	at org.apache.activemq.ra.ServerSessionImpl.afterDelivery(ServerSessionImpl.java:218)
	at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:723)
	at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:163)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
11:00:54,775 INFO  [ServerSessionImpl:0] Endpoint failed to process message. Reason: java.lang.NullPointerException
11:00:54,775 DEBUG [ServerSessionImpl:0] run loop end
11:00:54,775 DEBUG [ServerSessionImpl:0] Endpoint did not release properly: org.apache.activemq.ra.InvalidMessageEndpointException
org.apache.activemq.ra.InvalidMessageEndpointException
	at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointDead.release(MessageEndpointProxy.java:156)
	at org.apache.activemq.ra.MessageEndpointProxy.release(MessageEndpointProxy.java:68)
	at org.apache.activemq.ra.ServerSessionImpl.close(ServerSessionImpl.java:250)
	at org.apache.activemq.ra.ServerSessionPoolImpl.removeFromPool(ServerSessionPoolImpl.java:180)
	at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:177)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
11:00:54,775 DEBUG [ServerSessionImpl:0] Run finished
11:00:54,775 DEBUG [ServerSessionImpl:0] Work completed: javax.resource.spi.work.WorkEvent[source=Work :ServerSessionImpl:0]
11:00:54,790 DEBUG [ServerSessionPoolImpl] ServerSession requested.

The code that throws this NPE is ServerSessionImpl, whose excerpt I send below. There are more reports of this 

            try {
                endpoint.afterDelivery();
            } catch (Throwable e) {
                throw new RuntimeException(""Endpoint after delivery notification failure"", e);
            } finally {
                if( session.getTransactionContext().isInLocalTransaction() ) { <<<<--------------------------- NPE
                    if( !useRAManagedTx ) {
                        // Sanitiy Check: If the local transaction has not been commited..
                        // Commit it now.
                        log.warn(""Local transaction had not been commited.  Commiting now."");
                    }
                    try {
                        session.commit();
                    } catch (JMSException e) {
                        log.info(""Commit failed:"", e);
                    }
                }
            }","Windows XP SP2, Eclipse, Tomcat 5.5.15, Spring 1.2.6, Hibernate 3.1.2, Jencks 1.1.3, ActiveMQ 4.0 RC2 and SNAPSHOT (Apr 6th 2006)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-05-22 17:39:27.0,,,false,,,,,,,,,,,,,,,,,84299,,,Mon May 22 17:39:27 UTC 2006,,,,,,,,"0|i17zlj:",254737,,,,,,,,,,,,,,,,,,,"22/May/06 17:39;jstrachan;thanks for spotting this one",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq.org website links to old JIRA,AMQ-698,12481581,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jdillon,jdillon,02/May/06 07:28,16/May/06 04:04,30/Jan/20 16:57,16/May/06 04:04,,,,,,,,,,Documentation,,,,0,"On http://activemq.org, the Support :: Issues link in the right navigation points to;

 * http://jira.activemq.org/jira/browse/AMQ

And should be:

 * https://issues.apache.org/activemq/browse/AMQ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-05-02 22:57:05.0,,,false,,,,,,,,,,,,,,,,,92681,,,Wed May 03 01:22:22 UTC 2006,,,,,,,,"0|i0tsyv:",172002,,,,,,,,,,,,,,,,,,,"02/May/06 22:57;jstrachan;fixed. BTW the site is a wiki so you can fix it yourself :)","03/May/06 01:06;jdillon;I know not of this wiki thing you speak of... :-P

I figured you guys wanted to know about it... might want to check for new issues on the old system... may want to lock those projects if you have not done so already too.","03/May/06 01:16;jdillon;Is the right nav still generated from this page:

 http://docs.codehaus.org/display/ACTIVEMQ/Navigation

If so, looks like it still points to jira.activemq.org:

{noformat}
- [Issues|http://jira.activemq.org/jira/browse/AMQ]
- [Roadmap|http://jira.activemq.org/jira/browse/AMQ?report=com.atlassian.jira.plugin.system.project:roadmap-panel]
- [Change log|http://jira.activemq.org/jira/browse/AMQ?report=com.atlassian.jira.plugin.system.project:changelog-panel]
{noformat}

Should be:

{noformat}
- [Issues|https://issues.apache.org/activemq/browse/AMQ]
- [Roadmap|https://issues.apache.org/activemq/browse/AMQ?report=com.atlassian.jira.plugin.system.project:roadmap-panel]
- [Change log|https://issues.apache.org/activemq/browse/AMQ?report=com.atlassian.jira.plugin.system.project:changelog-panel]
{noformat}

I'd change it, but seems strange for a non-activemq folk to be changing this project detail on your site.","03/May/06 01:22;jdillon;See comments, the *right-side* navigation is still incorrect.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
changes to connector host and port not persisted in geronimo,AMQ-708,12481696,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pmcmahan,pmcmahan,12/May/06 00:14,12/May/06 07:21,30/Jan/20 16:57,12/May/06 07:21,3.2.4,,,,,,3.2.4,,,Geronimo Integration,,,,0,"Hostname and port changes I made to the activemq connectors via the geronimo admin console don't get persisted in geronimo's var/config/config.xml, causing them to revert to their original values when the server restarts.

To fix this problem ActiveMQConnectorGBean needs to declare the host and port attributes as manageable when it creates its gbeaninfo. See the attached patch.",activemq 3.4 running in geronimo 1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/May/06 00:14;pmcmahan;ASF.LICENSE.NOT.GRANTED--ACTIVEMQ-gbean.patch;https://issues.apache.org/jira/secure/attachment/12460628/ASF.LICENSE.NOT.GRANTED--ACTIVEMQ-gbean.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-05-12 07:21:18.0,,,false,,,,,,,,,,,,,,,,,84283,,,Fri May 12 07:21:18 UTC 2006,,,,,,,,"0|i17zqf:",254759,,,,,,,,,,,,,,,,,,,"12/May/06 07:21;chirino;Patch applied!  Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jmeter build is broken,AMQ-697,12481693,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dflores,chirino,chirino,29/Apr/06 05:20,03/May/06 15:09,30/Jan/20 16:57,03/May/06 15:08,,,,,,,4.0,,,Test Cases,,,,0,"Hi Jonas,   

I tried doing a windows build of the jmeter tests in the amq 4.x branch (My maven repo has been deleted) and I got the following:

C:\sandbox\activemq-4-branch\activemq-jmeter>maven clean default
 __  __
|  \/  |__ _Apache__ ___
| |\/| / _` \ V / -_) ' \  ~ intelligent projects ~
|_|  |_\__,_|\_/\___|_||_|  v. 1.0.2

Attempting to download activemq-core-4.0-SNAPSHOT.jar.
Attempting to download batik-awt-util-1.0.jar.
WARNING: Failed to download batik-awt-util-1.0.jar.
Attempting to download xalan-1.0.jar.
WARNING: Failed to download xalan-1.0.jar.
Attempting to download xml-apis-1.0.jar.
WARNING: Failed to download xml-apis-1.0.jar.
Attempting to download manta-1.0.jar.
WARNING: Failed to download manta-1.0.jar.
The build cannot continue because of the following unsatisfied dependencies:

batik-awt-util-1.0.jar
xalan-1.0.jar
xml-apis-1.0.jar
manta-1.0.jar

Total time: 13 seconds
Finished at: Fri Apr 28 18:16:40 EDT 2006
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-05-03 15:09:02.0,,,false,,,,,,,,,,,,,,,,,92680,,,Wed May 03 15:09:02 UTC 2006,,,,,,,,"0|i17zrz:",254766,,,,,,,,,,,,,,,,,,,"03/May/06 15:09;dflores;Modified the version numbers for jar files with dependency error",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error when removing temp destinations (message on server console),AMQ-695,12481669,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,28/Apr/06 01:00,01/May/06 22:42,30/Jan/20 16:57,01/May/06 22:42,4.0,,,,,,4.0,,,Broker,,,,0,"WARN Service - Failed to remove tmp destination temp-topic://ID:rfs8.lab.reconnex.net-34639-1146084114685-4:10:3
javax.jms.JMSException: Destination still has an active subscription: topic://ActiveMQ.Advisory.TempTopic
        at org.apache.activemq.broker.region.AbstractRegion.removeDestination(AbstractRegion.java:99)
        at org.apache.activemq.broker.region.RegionBroker.removeDestination(RegionBroker.java:222)
        at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:129)
        at org.apache.activemq.advisory.AdvisoryBroker.removeDestination(AdvisoryBroker.java:157)
        at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:129)
        at org.apache.activemq.broker.MutableBrokerFilter.removeDestination(MutableBrokerFilter.java:141)
        at org.apache.activemq.broker.AbstractConnection.processRemoveConnection(AbstractConnection.java:523)
        at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:59)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:196)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:93)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:139)
        at java.lang.Thread.run(Thread.java:595)
WARN Service - Failed to remove tmp destination temp-topic://ID:rfs8.lab.reconnex.net-34639-1146084114685-4:10:4
javax.jms.JMSException: Destination still has an active subscription: topic://ActiveMQ.Advisory.TempTopic
        at org.apache.activemq.broker.region.AbstractRegion.removeDestination(AbstractRegion.java:99)
        at org.apache.activemq.broker.region.RegionBroker.removeDestination(RegionBroker.java:222)
        at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:129)
        at org.apache.activemq.advisory.AdvisoryBroker.removeDestination(AdvisoryBroker.java:157)
        at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:129)
        at org.apache.activemq.broker.MutableBrokerFilter.removeDestination(MutableBrokerFilter.java:141)
        at org.apache.activemq.broker.AbstractConnection.processRemoveConnection(AbstractConnection.java:523)
        at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:59)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:196)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:93)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:139)
        at java.lang.Thread.run(Thread.java:595) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84353,,,Mon May 01 22:42:53 UTC 2006,,,,,,,,"0|i17zs7:",254767,,,,,,,,,,,,,,,,,,,"28/Apr/06 01:00;chirino; Looks like a bug in the way that temporary destinations are being cleaned up. This should not affect you normal processing of messages. I will start working on a patch to fix this issue. The side-effect of this bug is that a little bit of memory will not be reclaimed every time a temporary destination is created and destroyed. If you have long lived temporary destinations, this may not be a big issue for you.

","01/May/06 22:42;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ broker leaks advisory topics,AMQ-677,12481642,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,andrewlu,andrewlu,06/Apr/06 06:45,01/May/06 22:34,30/Jan/20 16:57,01/May/06 22:34,,,,,,,4.0,,,Broker,,,,0,"When I run the attached code, which AFAIK is completely legal JMS, the ActiveMQ broker grows to 500+ mb and crashes due to being out of heap space.  

Some investigation with hprof has lead me to believe that the advisory topics created by the MessageConsumers (and Producers, but I use the same producer each time so that's not causing a problem) are being put into a DestinationMap and not being removed.

The rough origin of this is in the addProducer call in AdvisoryBroker, which creates the advisory topic.

Note that this memory is not freed when the DestinationInfo removing the original temptopic is received, nor when the actual client exits.  The object lifetime of these advisory destinations seems very poorly defined.  If they are implicitly created by the server, they should be implicitly destroyed by the same.

To reproduce, I've been running this code with -Dtopic=true and -Dmax=10000 (though the problem shows up well before this amount).  This is just a modified version of the example ProducerTool (note it doesn't actually send any messages).

Please verify the correctness of the attached code.

Andrew Lusk
","linux, near-trunk version of ActiveMQ",,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/06 06:45;andrewlu;ASF.LICENSE.NOT.GRANTED--ProducerTool.java;https://issues.apache.org/jira/secure/attachment/12460727/ASF.LICENSE.NOT.GRANTED--ProducerTool.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-04-08 15:10:57.0,,,false,,,,,,,,,,,,,,,,,49303,,,Mon May 01 22:34:04 UTC 2006,,,,,,,,"0|i17zmn:",254742,,,,,,,,,,,,,,,,,,,"06/Apr/06 14:51;andrewlu;I have reproduced this problem in svn trunk (previously I was a few weeks behind).","08/Apr/06 06:12;andrewlu;Adding this line:

next.removeDestination(context, AdvisorySupport.getConsumerAdvisoryTopic(info.getDestination()), timeout);

below the fireAdvisory call in AdvisoryBroker::removeDestination appears to solve this problem, but at the cost of a very severe performance decrease.  

Would really appreciate traction from someone more familiar with this particular code.
","08/Apr/06 06:25;andrewlu;Another solution that I've found to work, with no performance penalty, is to simple not create / send on advisory topics for temporary destinations.  I'm  not sure if this might break something else internally though.
","08/Apr/06 15:10;rajdavies;destinations that don't exist are added by calling the broker stack from the top to add the destination - which we don't need to do for advisories ","09/Apr/06 06:47;rajdavies;added fix suggested","09/Apr/06 09:29;andrewlu;I got a fresh snapshot of trunk after your latest patch, and tested it with the code I attached above.  It still exhibits this memory bloat problem, after several thousand iterations.  Did this code work for you with this fix?

Also, the fix that was put in only removes consumer advisory topics, when producer advisory topics are just as much of a problem.  The fix will also crash when info == null (when I mentioned putting that line in just after the fireAdvisory call, I meant still within the checked info != null block).

The code I provided was a stopgap solution that caused other serious problems for me (and maybe only worked because I was a few weeks back from trunk).  In my tree I'm going with the second thing I mentioned (not creating advisory topics for temporary destinations) which is working fine for me while I work on investigating some other issues that have come up with higher numbers of iterations.","10/Apr/06 16:16;rajdavies;I've checked in some updates and ran the program through JProfiler - I can't see any memory leaks.
Re - performance - usual practice is to create only a few (1 preferably) temp destination and use selectors - as the creation of any managed resource (consumer/producer/session/connection/destination is heavy compared to sending/selecting messages)
","10/Apr/06 19:19;rajdavies;correction - there's still a memory leak - gonna track it down :(","11/Apr/06 04:08;andrewlu;The lines you added in r392929 throw an exception in the broker and crash my ProducerTool on the first iteration, since producer advisory topics and consumer advisory topics are unconditionally closed, when in the case of the above attached code it doesn't create any producers on the temporary topic, only consumers.

Please verify the fix on the above attached ProducerTool with -Dtopic=true and -Dmax=10000.  It has always very readily reproduced this problem.

INFO  Service                        - Sync error occurred: javax.jms.JMSException: Destination does not exist: topic://ActiveMQ.Advisory.Producer.Topic.ID:andrewlu-33101-1144699546209-0:0:1
javax.jms.JMSException: Destination does not exist: topic://ActiveMQ.Advisory.Producer.Topic.ID:andrewlu-33101-1144699546209-0:0:1
        at org.apache.activemq.broker.region.RegionBroker.removeDestination(RegionBroker.java:216)
        at org.apache.activemq.broker.BrokerFilter.removeDestination(BrokerFilter.java:129)
        at org.apache.activemq.advisory.AdvisoryBroker.removeDestinationInfo(AdvisoryBroker.java:180)
        at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:204)
        at org.apache.activemq.broker.MutableBrokerFilter.removeDestinationInfo(MutableBrokerFilter.java:214)
        at org.apache.activemq.broker.AbstractConnection.processRemoveDestination(AbstractConnection.java:376)
        at org.apache.activemq.command.DestinationInfo.visit(DestinationInfo.java:122)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:196)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:93)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:139)
        at java.lang.Thread.run(Thread.java:595)","01/May/06 22:34;chirino;Fixed in latest snapshot.  I was also able to run your ProducerTool without issue.",,,,,,,,,,,,,,,,,,,,,,,,,
ResponseCorrelator does not release blocked sync requests when transport has an async failure.,AMQ-691,12481598,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,20/Apr/06 22:35,01/May/06 21:48,30/Jan/20 16:57,20/Apr/06 23:58,4.0 RC2,,,,,,4.0,,,Transport,,,,0,"Reported at:

http://www.nabble.com/publish%28%29-call-to-remote-JMS-server-hangs-t1446830.html#a3970530",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84298,,,Thu Apr 20 23:58:34 UTC 2006,,,,,,,,"0|i0s0un:",161614,,,,,,,,,,,,,,,,,,,"20/Apr/06 23:58;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temp Destination definition not sent across network bridge to support request/reply model?,AMQ-487,12481646,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,dennis@bevocal.com,dennis@bevocal.com,14/Jan/06 01:58,01/May/06 21:48,30/Jan/20 16:57,27/Mar/06 15:12,4.0,,,,,,4.0,,,Connector,,,,0,"Goal was to test request/response model across a network bridge.  The requestor sets up a temporary topic and includes as the reply topic with message sent to the responder. It is expected that the responder will send message on the provide replyTo topic.

Using the multicast://default discovery mechanism and networkConnector transport to interconnect two brokers (different hosts harley to roadrash). Responder client  attaches to harley and requestor client attaches to roadrash. 

Requestor client creates temporary topic, sends message.
Responder receives message attempt to reply on the temporary topic, but errors with message indicating cannot publish to deleted topic
",w2k and linux with jdk 1.5,dennis@bevocal.com,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jan/06 02:12;dennis@bevocal.com;ASF.LICENSE.NOT.GRANTED--AMQ-487-logs.zip;https://issues.apache.org/jira/secure/attachment/12460569/ASF.LICENSE.NOT.GRANTED--AMQ-487-logs.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-03-13 21:53:56.0,,,false,,,,,,,,,,,,,,,,,49154,,,Mon Mar 27 15:12:11 UTC 2006,,,,,,,,"0|i0s2mf:",161901,,,,,,,,,,,,,,,,,,,"14/Jan/06 02:06;dennis@bevocal.com;Actually when debug level set for broker, logs show destinations in fact are being established on both sides of the bridge.  So begs to question why responding client is informed that destination is deleted.","14/Jan/06 02:12;dennis@bevocal.com;Attachment contains 4 log files: 

Two broker logs from interconnected brokers
Log from the requestor
Log from the responder

Requestor, responder and on broker all run on host roadrash so timestamps are exact.  Timestamps for host harly broker within one second.","13/Mar/06 21:53;kieranmurphy;I had this problem with 3.0 and submitted the following to the mailing list.  I was getting the same ""cannot write to a deleted destination..."" error. 

I think this is a bug in the way Network Message Bridges for TemporaryDestinations are named.
In my debugger, I see that the physical name of a TemporaryTopic is (for example):

> TemporaryTopic-{TD{ID:kmurphynb.alleanzasalute.it-32917-1134582426027-1:0}TD}ID:kmurphynb.alleanzasalute.it-32917-1134582426027-6:0


In a network of brokers, a network message bridge is opened from the connection which spawned this TemporaryTopic to all others in the network -- apparently sometimes using this physical name:

> 11:48:19 INFO  started NetworkMessageBridge for destination: TemporaryTopic-{TD{ID:kmurphynb.alleanzasalute.it-32917-1134582426027-1:0}TD}ID:kmurphynb.alleanzasalute.it-32917-1134582426027-6:0 -- NetworkChannel: NetworkChannel{ , uri = 'reliable:tcp://localhost:61617' , remoteBrokerName = 'node2'  }


and other times prefaced with the class name:

> 11:49:37 INFO  started NetworkMessageBridge for destination: ActiveMQ.Advisory.TempDestinations.temp-topic.TemporaryTopic-{TD{ID:kmurphynb.alleanzasalute.it-32924-1134582576664-1:0}TD}ID:kmurphynb.alleanzasalute.it-32924-1134582576664-6:0 -- NetworkChannel: NetworkChannel{ , uri = 'reliable:tcp://localhost:61617' , remoteBrokerName = 'node2'  }
>
The problem is that in either case, the physical name of the TemporaryTopic is used to ""validate"" it.  So when I try to reply to the second TemporaryTopic shown above, I get:

> ERROR - Thread-67 cosm.cee.component.messaging.impl.jms.JMSMessagingChannel send
> javax.jms.JMSException: Cannot publish to a deleted Destination: TemporaryTopic-{TD{ID:kmurphynb.alleanzasalute.it-32924-1134582576664-1:0}TD}ID:kmurphynb.alleanzasalute.it-32924-1134582576664-6:0


Note difference in the names.

I got around this by creating a new, permanent Topic (or Queue -- I found the same problem adn solution with both TemporaryTopics and TemporaryQueues) with a random (guaranteed random in my application's scope) String for a name.  It appears that for a non-temporary Destination, the name of the destination is always used for the message bridge:

> 12:57:37 INFO  started NetworkMessageBridge for destination: 7E3829D1-6CD3-11DA-B666-CA9B35A911B1 -- NetworkChannel: NetworkChannel{ , uri = 'reliable:tcp://localhost:61617' , remoteBrokerName = 'node2'  }


In this way I get the same effect -- a unique destination, whose presence is only known to recipients of a particular message, and whose lifespan is that of it's connection.  I would prefer to use TemporaryTopics and TemporaryQueues, though.

Any thoughts? ","27/Mar/06 15:12;rajdavies;Resolved",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get http transport working again,AMQ-604,12481589,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,jstrachan,jstrachan,02/Mar/06 13:59,01/May/06 21:48,30/Jan/20 16:57,09/Mar/06 07:47,,,,,,,4.0,,,,,,,0,e.g. the test cases in activemq-optional for HTTP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-07 09:48:41.0,,,false,,,,,,,,,,,,,,,,,49241,,,Thu Mar 09 07:47:56 UTC 2006,,,,,,,,"0|i0s0nj:",161582,,,,,,,,,,,,,,,,,,,"07/Mar/06 09:48;aco;http oneway sometimes is unable to send data because socket times out during client.execute() of post method. Currently, I have no idea why. Execution doesn't even reach the servlet. Could this be a jetty gremlin? Web server seems to be running ok, I think.","07/Mar/06 10:31;jstrachan;Greg, could you check this isn't a Jetty 6 gremlin please?","07/Mar/06 11:39;aco;BTW, I don't know if this is significant, but for most of the test cases that fails, the init method of the servlet doesn't get called.","07/Mar/06 13:33;gregw;I'll look at this later today or tomorrow.   Last time I looked at this it was not working as the port to amq4 had not been completed.
So I'm assuming this has never worked since the amq4 port.... so lots could be wrong.

","08/Mar/06 10:04;gregw;The release was on beta6, which definitely had a few timeout type bugs. I've upgraded to beta10 and the send and receive test works fine for me.
The broker test is failing 6 tests, but none appear timeout related.  ","08/Mar/06 11:19;aco;Thanks for the heads up Greg. :)","08/Mar/06 11:34;gregw;I was happy to continue looking into those 6 failures.....  probably later today.
So feel free to assign this back to me... unless your keen to look at them yourself

cheers
","09/Mar/06 03:33;aco;Hi Greg,

Ok. :)

BTW, what was the reason for the failures? I did a run using the beta10 and got a JVM bind exception, but was able to fix it by adding a sleep every tearDown of the test case to ensure that the jetty server have enough time to shutdown first before starting the next run. The broker test seems to be passing on my environment. :)

Im currently looking at the send-receive test, it sometimes passes, sometimes don't. Your help would most definitely be appreciated.","09/Mar/06 07:47;aco;All http tests are passing for me now. :)",,,,,,,,,,,,,,,,,,,,,,,,,,
[PATCH for 3.2.4] Dependencies update and fix eclipse project errors,AMQ-675,12481366,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,johnrsisson,johnrsisson,04/Apr/06 21:36,10/Apr/06 22:57,30/Jan/20 16:57,10/Apr/06 22:57,,,,,,,3.2.4,,,,,,,0,"Patch for branches/activemq-3 for upcoming 3.2.4 release to improve supportability.

* Fix eclipse project errors
* Change incubator-derby dependency to a real release that matches the version used by Geronimo
* Change geronimo spec dependencies to use specs from the Geronimo 1.0 release instead of RC versions
* Change geronimo dependencies to 1.0 version instead of 1.0-SNAPSHOT
* Change openejb dependency from 2.0-SNAPSHOT to 2.0
* Change commons_jelly_tags_velocity_version to 1.0 instead of SNAPSHOT

Tested build, unit tests completed OK.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Apr/06 21:36;johnrsisson;ASF.LICENSE.NOT.GRANTED--activemq-3-cleanup.patch;https://issues.apache.org/jira/secure/attachment/12460600/ASF.LICENSE.NOT.GRANTED--activemq-3-cleanup.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-04-10 22:57:52.0,,,false,,,,,,,,,,,,,,,,,49301,,,Mon Apr 10 22:57:52 UTC 2006,,,,,,,,"0|i17zn3:",254744,,,,,,,,,,,,,,,,,,,"06/Apr/06 07:57;johnrsisson;Hiram, could you please review/apply this patch.

Thanks, John.","10/Apr/06 22:57;chirino;applied!  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaXARecoveryTest fails,AMQ-676,12481273,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,rajdavies,rajdavies,05/Apr/06 20:59,08/Apr/06 06:01,30/Jan/20 16:57,08/Apr/06 06:01,4.0,,,,,,4.0 RC3,,,,,,,0,KahaXARecoveryTest fails - fix persistence for XA transactions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49302,,,Sat Apr 08 06:01:30 UTC 2006,,,,,,,,"0|i17zmv:",254743,,,,,,,,,,,,,,,,,,,"08/Apr/06 06:01;rajdavies;fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build is broken - missing the rome_version and the jdom_version,AMQ-668,12481286,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bsnyder,bsnyder,29/Mar/06 06:20,29/Mar/06 06:27,30/Jan/20 16:57,29/Mar/06 06:27,4.0,,,,,,4.0 RC2,,,,,,,0,"+----------------------------------------
| Executing clean ActiveMQ :: Web
| Memory: 6M/9M
+----------------------------------------
DEPRECATED: the default goal should be specified in the <build> section of project.xml instead of maven.xml
DEPRECATED: the default goal should be specified in the <build> section of project.xml instead of maven.xml

build:end:

Attempting to download rome-.jar.
WARNING: Failed to download rome-.jar.
Attempting to download jdom-.jar.
WARNING: Failed to download jdom-.jar.

BUILD FAILED
File...... /Users/bsnyder/.maven/cache/maven-multiproject-plugin-1.4.1/plugin.jelly
Element... maven:reactor
Line...... 218
Column.... -1
The build cannot continue because of the following unsatisfied dependencies:

rome-.jar
jdom-.jar

Total time   : 1 minutes 21 seconds 
Finished at  : Tuesday, March 28, 2006 1:51:36 PM MST",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/06 06:22;bsnyder;project.properties.diff;https://issues.apache.org/jira/secure/attachment/12460586/project.properties.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-03-29 06:27:36.0,,,false,,,,,,,,,,,,,,,,,49295,,,Wed Mar 29 06:27:36 UTC 2006,,,,,,,,"0|i17zo7:",254749,,,,,,,,,,,,,,,,,,,"29/Mar/06 06:22;bsnyder;Attached a patch. ","29/Mar/06 06:27;chirino;patch applied.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException when jaasAuthenticationPlugin is used with broker networks,AMQ-661,12481217,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,27/Mar/06 11:17,27/Mar/06 11:22,30/Jan/20 16:57,27/Mar/06 11:22,4.0 RC2,,,,,,4.0 RC2,,,Broker,,,,0,"Reported at:
http://www.nabble.com/jaas-t1335403.html#a3568111",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49288,,,Mon Mar 27 11:22:11 UTC 2006,,,,,,,,"0|i0s0h3:",161553,,,,,,,,,,,,,,,,,,,"27/Mar/06 11:20;chirino;This is due to the change were we now marshall the additionalPredicate field on the consumerInfo objects.
Should be easy to fix so that the since the plugin does not need to really use that field.","27/Mar/06 11:22;chirino;Fix should make it into the next release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maxInactivityDuration does not seem to work properly,AMQ-643,12481549,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,yaussy,yaussy,17/Mar/06 23:54,23/Mar/06 16:43,30/Jan/20 16:57,23/Mar/06 16:43,4.0 RC2,,,,,,4.0 RC2,,,Connector,,,,0,"AMQ 4 03/17/2006 SNAPSHOT

Using maxInactivityDuration causes a connection to automatically break after the inactivity duration, even though nothing is wrong with either side of the connection.

Tracing it through, it looks like the KeepAliveInfo command does not require a response.  This means that the KeepAlive sent never results in receive activity.  So, if both processes are perfectly fine, just not sending any data, the connection breaks due to InactivityMonitor.readCheck.

I've changed KeepAliveInfo.java to return true for isResponseRequired.  This seems to fix the problem, from a client perspective, anyway.

However, if this is used for broker-to-broker connections, and you force a problem with one of the brokers (like doing pstop on Solaris), major problems will happen:

1)  The broker that is left alone seems to break the connection.  But, it continues to attempt to send messages to the failed broker.  It was mentioned in the forum at one point you were going to have the broker unregister subscriptions so it would not attempt to send messages to the failed broker.  Doesn't seem like this is in place.

2) If you reawaken the pstopped broker, the two brokers never really recover properly.  Connections continue to get broken, over and over again.
","AMQ 4 03/17/2006 SNAPSHOT
Solaris 8, 10",yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Mar/06 18:40;yaussy;ASF.LICENSE.NOT.GRANTED--amq1.xml;https://issues.apache.org/jira/secure/attachment/12460854/ASF.LICENSE.NOT.GRANTED--amq1.xml","20/Mar/06 18:40;yaussy;ASF.LICENSE.NOT.GRANTED--amq2.xml;https://issues.apache.org/jira/secure/attachment/12460732/ASF.LICENSE.NOT.GRANTED--amq2.xml",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-03-20 17:15:49.0,,,false,,,,,,,,,,,,,,,,,49275,,,Thu Mar 23 16:17:33 UTC 2006,,,,,,,,"0|i0s2jr:",161889,Regression,,,,,,,,,,,,,,,,,,"20/Mar/06 17:15;chirino;Hi Kevin,

The maxInactivityDuration setting has to match on both sides of the connection.  If they do then there is no need to make KeepAlives request a reply since the other side will send a KeepAlive if his side of the connection remains idle for too long.

Could you attache the broker configuration scripts you using?  Thanks!","20/Mar/06 18:33;yaussy;So, in the case of the client setting the maxInactivityDuration value on its connector url, you are saying that the broker must have a maxInactivityDuration setting (with the same value) on the transportConnector url?

Not quite sure why you would want to make this restriction.  Seems problematic with regards to potential timing issues.

Also, if you set the maxInactivityDuration on the transportConnector url, then when you have two brokers connected to each other, they continuously drop connections and resubscribe.  If you also set maxInactivityDuration on the networkConnector url for each broker, then the brokers still drop connections and get whacked out with subcriptions.

I'll attach broker XML configs in a bit.","20/Mar/06 18:40;yaussy;Attached are my broker XML configs.  We run embedded brokers, but have external access to them (i.e. the tcp connectivity).

I've tried with and without the maxInactivityDuration setting on the networkConnector url.","21/Mar/06 04:45;chirino;Hi Kevin,

Yeah, I agree, making sure everybody is using the same setting is a bit of a problem.  I working on a change right now that will allow the setting to be negociated by the 2 sides of the connection when it's initialy established.

If the server setting is x and the client setting is y, then the inactivity duration for the established connection will be calculated at min(x,y).  This way the client and server do not have to have their configs match up exactly.

I'll update the issue once the change is commited.

Regards,
Hiram","21/Mar/06 17:04;yaussy;However, that sounds like both sides would still have to explicitly make the setting, right?","21/Mar/06 18:16;chirino;The change has been commited.

You now configure the maxInactivityDuration on the wireFormat.   So on tcp connection, it would look like:

tcp://localhost:61616?wireFormat.maxInactivityDuration=10000

","21/Mar/06 18:45;yaussy;I'll try this out tomorrow after the SNAPSHOT build.","23/Mar/06 15:55;yaussy;Tried this out yesterday and it seems to work perfectly.  I was able to freeze brokers and have them disconnect from each other, but recover after unfreezing.  Same for clients.

Nondurable messages are still queued to a disconnected broker, but that can be mitigated by having the asyncDispatch and an eviction strategy to your liking.  I'd rather see the subscriptions dropped, and no further queuing, but maybe that wasn't doable.","23/Mar/06 16:08;jstrachan;We could always raise another feature request JIRA for the subscription dropping; also for nondurable messaging we have the option to drop old messages if consumers slow down.

So is this issue resolved now?","23/Mar/06 16:17;yaussy;I'm very happy with the eviction policy features.  We will make *extensive* use of that (btw, we may want to implement an eviction  policy at some point - any way to do that ?).  However, I can raise a feature request for the subscription dropping.

One thing I forgot to mention in my comment above is that the broker networkConnector url config changed again.  You now have to explicitly put on failover if you want broker-to-broker connections to use failover.  That dropped off at one point (I was trying to find where you and I conversed about that - it was some other JIRA entry), where you would get double failover transport decorators, thus causing problems with shutdown.  You said that static would do the same thing.

Anyway, not a big deal, but I believe you had updated some documentation regarding this.  So, you might want to revisit that again.","23/Mar/06 16:17;yaussy;Doh!   Yes, issue resolved!",,,,,,,,,,,,,,,,,,,,,,,,
"Typo ""Timmer"" in thread name in JDBCPersistenceAdapter.java",AMQ-655,12481475,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,johnrsisson,johnrsisson,23/Mar/06 13:57,23/Mar/06 16:20,30/Jan/20 16:57,23/Mar/06 16:20,3.2.1,3.2.2,3.2.3,4.0 M4,,,4.0 RC2,,,Message Store,,,,0,"Will attach a patch that corrects the typo and also prefixes it with ""ActiveMQ "" so it is easily to identify the owner of the thread.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Mar/06 14:01;johnrsisson;ASF.LICENSE.NOT.GRANTED--AMQ-655.patch;https://issues.apache.org/jira/secure/attachment/12460696/ASF.LICENSE.NOT.GRANTED--AMQ-655.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-03-23 16:20:02.0,,,false,,,,,,,,,,,,,,,,,43777,,,Thu Mar 23 16:20:02 UTC 2006,,,,,,,,"0|i17zdj:",254701,,,,,,,,,,,,,,,,,,,"23/Mar/06 14:01;johnrsisson;Patch attached.  The priority of this issue should be 'trivial' (I can't edit issue).","23/Mar/06 16:20;jstrachan;patch applied - many thanks John",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
etc\project.xml needs to be updated,AMQ-654,12481624,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,johnrsisson,johnrsisson,22/Mar/06 11:03,22/Mar/06 19:22,30/Jan/20 16:57,22/Mar/06 19:22,,,,,,,4.0 RC2,,,,,,,0,"The organization url needs to be corrected as it is currently invalid.

The values for the siteAddress siteDirectory distributionSite and distributionDirectory need to be reviewed.

The mailing list information to need to be updated to point to the apache mailing lists

The mailing list archives could be updated to point to archives that Hiram has requested to be setup on Nabble.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-22 19:22:24.0,,,false,,,,,,,,,,,,,,,,,49283,,,Wed Mar 22 19:22:24 UTC 2006,,,,,,,,"0|i17zdr:",254702,,,,,,,,,,,,,,,,,,,"22/Mar/06 19:22;chirino;fixed.  The URL for the list archive cannot be determined yet since nabble has not started archiving the list yet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TaskRunnerFactory from broker is not carried along to Broker-to-Broker connections,AMQ-632,12481671,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,yaussy,yaussy,14/Mar/06 18:41,21/Mar/06 18:16,30/Jan/20 16:57,21/Mar/06 18:12,4.0 RC2,,,,,,4.0 RC2,,,Broker,,,,0,"When trying to enable dispatchAsync for broker-to-broker connections (which, since I've not found a way to configure demandForwardingBridge in the broker XML, I had to hard code by setting the default value of dispatchAsync in DemandForwardingBridge.java), I found that the TaskRunnerFactory from the broker was not being carried through to the Network connections.

I'm not sure if the way I fixed it is fully acceptable or not, however the attached VMTransportFactory.java seems to fix the issue.  I changed doCompositeConnect to call setTaskRunnerFactory on the newly created TransportConnector.

The change is against SNAPSHOT 03/14/2006.",,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/06 18:41;yaussy;ASF.LICENSE.NOT.GRANTED--VMTransportFactory.java;https://issues.apache.org/jira/secure/attachment/12460857/ASF.LICENSE.NOT.GRANTED--VMTransportFactory.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-03-16 20:03:42.0,,,false,,,,,,,,,,,,,,,,,49266,,,Tue Mar 21 18:16:14 UTC 2006,,,,,,,,"0|i0s2nb:",161905,Regression,,,,,,,,,,,,,,,,,,"16/Mar/06 20:03;jstrachan;BTW there is a local and remote broker config in XML here which creates a demand forwarding bridge...

https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-core/src/test/resources/org/apache/activemq/network/

e.g. 

https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-core/src/test/resources/org/apache/activemq/network/localBroker.xml","16/Mar/06 20:04;jstrachan;BTW DemandForwardingBridge has a bean property ""dispatchAsync"" if you need to change that?","16/Mar/06 20:11;yaussy;Yes, I need to be able to set some properties, including dispatchAsync, for DemandForwardingBridge.  However, the link you give above configures a NetworkConnection, not a DemandForwardingBridge.  Am I missing something??
","17/Mar/06 12:01;jstrachan;Its a bit confusing isn't it :)

So the NetworkConnector creates the DemandForwardingBridge; so you should be able to configure the it with the things you need like

 <networkConnector dispatchAsync=""true"">

etc

(BTW true is the default in NetworkConnector.java)

There are a few different kinds of bridges available depending on the configurations of the <networkConnector>. For added fun, the NetworkConnector class just got refactored; so the concrete class that actually creates the bridge is DiscoveryNetworkConnector - see the createBridge() method for details of how it figures out which bridge to use.

For demand forwarding I think you need to set <networkConnector conduitSubscriptions=""false"" ...","17/Mar/06 12:06;jstrachan;BTW I tried applying your patch and got a number of failures

    [junit] [ERROR] TEST org.apache.activemq.broker.policy.RoundRobinDispatchPolicyTest FAILED                                                                                                                                               
    [junit] [ERROR] TEST org.apache.activemq.broker.policy.SimpleDispatchPolicyTest FAILED                                                                                                                                                   

so we need to think a bit more before applyting this one; maybe the change has to be localised to only VMTransports created via the network connectors","17/Mar/06 15:55;yaussy;Thanks, James.  My test system is experiencing problems at the moment, so I hope I can soon try out the settings as you describe.

Thanks for trying out the change.  I only tried within my own usage patterns, and all seemed fine.  I will eagerly await the official change :-)","17/Mar/06 22:09;yaussy;James,

The config settings on networkConnector works famously, as of the 3/17/2006 SNAPSHOT (it did not work against 3/15/2006 SNAPSHOT).

So, just need the official change for the TaskRunnerFactory so that dispatchAsync between brokers actually takes place.","18/Mar/06 16:38;jstrachan;Fancy taking a stab at this one? Was wondering if we should pass along the task factory always, but then allow each transport to decide if its gonna use async dispatch using a flag?","21/Mar/06 18:12;chirino;patch committed.","21/Mar/06 18:16;yaussy;I'll try this on my end tomorrow after the SNAPSHOT build.",,,,,,,,,,,,,,,,,,,,,,,,,
exception from broker while creating temporary topics,AMQ-587,12481626,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,emcwhorter,emcwhorter,21/Feb/06 21:44,21/Mar/06 12:48,30/Jan/20 16:57,02/Mar/06 18:16,,,,,,,4.0 RC2,,,Broker,,,,1,"Sometimes when creating a temporary topic I get:

Exception in thread ""tcp:///127.0.0.1:39442"" java.lang.ClassCastException: org.apache.activemq.command.ActiveMQTempTopic
        at org.apache.activemq.openwire.v1.DestinationInfoMarshaller.unmarshal(DestinationInfoMarshaller.java:67)
        at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:214)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
        at java.lang.Thread.run(Thread.java:595)

This only seems to happen if I try to create a lot of temp topics in a lot of different threads at the same time.",RedHat Linux 7.3 smp kernel / Dual 2.2 GHZ Athlon 4 gigs RAM,emcwhorter,tklaus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-24 08:22:30.0,,,false,,,,,,,,,,,,,,,,,49227,,,Mon Mar 06 19:48:19 UTC 2006,,,,,,,,"0|i0s2lr:",161898,,,,,,,,,,,,,,,,,,,"24/Feb/06 08:22;tklaus;I've also seen this problem.  I'm using 4.0 M4, Java 1.5 on RHEL 3.  The exception is as follows:

     [java] Exception in thread ""tcp://darkmatter/143.232.137.91:4200"" java.lang.ClassCastException: org.apache.activemq.command.ActiveMQTempQueue
     [java]     at org.apache.activemq.openwire.v1.MessageDispatchMarshaller.unmarshal(MessageDispatchMarshaller.java:67)
     [java]     at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:214)
     [java]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)
     [java]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
     [java]     at java.lang.Thread.run(Thread.java:595)


When this happens, my client thread hangs, and a thread dump shows:

     [java] ""juno-w-task-3"" prio=1 tid=0x080782a0 nid=0x68a4 in Object.wait() [0xafecc000..0xafeccfc0]
     [java]     at java.lang.Object.wait(Native Method)
     [java]     at java.lang.Object.wait(Object.java:474)
     [java]     at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.waitFor(FutureTask.java:257)
     [java]     at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.get(FutureTask.java:114)
     [java]     - locked <0x6fae0000> (a org.apache.activemq.transport.FutureResponse)
     [java]     at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:42)
     [java]     - locked <0x6fae0000> (a org.apache.activemq.transport.FutureResponse)
     [java]     at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:68)
     [java]     at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1067)
     [java]     at org.apache.activemq.ActiveMQConnection.createTempDestination(ActiveMQConnection.java:1331)
     [java]     at org.apache.activemq.ActiveMQSession.createTemporaryQueue(ActiveMQSession.java:1098)
     [java]     at gov.nasa.kepler.pipeline.messaging.JMSMessagingServiceImpl.request(Unknown Source)

","02/Mar/06 16:52;jstrachan;We're trying to reproduce and fix this issue. 

I wonder - does changing the URL you use to connect to the broker to this...

tcp://localhost:61616?wireFormat.cacheEnabled=false

fix the issue? This just disables the caching (the host & port name don't matter, its the bit after ""?"" thats important)
","02/Mar/06 18:15;jstrachan;This seems to be a bug thats caught a few people recently. 

We've just applied Dave Gynn's patch from this issue 
http://jira.activemq.org/jira/browse/AMQ-525 

which we think resolves this issue. I wonder if you try the latest code from Subversion (or tomorrows snapshot build) the problem should be resolved now","02/Mar/06 18:16;jstrachan;Please do let us know if this issue is not resolved for you and we can reopen this issue","06/Mar/06 19:48;jstrachan;http://jira.activemq.org/jira/browse/AMQ-617 seemed to cause this issue too",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"durable mode: SQLException during broker shutdown, then IndexOutOfBoundsException in producer/consumer",AMQ-557,12481662,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,janknecht,janknecht,13/Feb/06 09:38,20/Mar/06 11:40,30/Jan/20 16:57,20/Mar/06 11:40,4.0 M4,,,,,,,,,Broker,,,,0,"My use case:

1. Take the ActiveMQ 4.0-SNAPSHOT from yesterday (2006-02-12)
2. Change the conf/activemq.xml and configure an Oracle JDBC data source:

  <beans xmlns=""http://activemq.org/config/1.0"">
    <broker useJmx=""true"">
      <persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""../activemq-data"" dataSource=""#oracle-ds""/>
      </persistenceAdapter>
    
      <transportConnectors>
         <transportConnector uri=""tcp://localhost:61616""/>
      </transportConnectors>
    </broker>
    
    <bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
      <property name=""driverClassName"" value=""oracle.jdbc.driver.OracleDriver""/>
      <property name=""url"" value=""jdbc:oracle:thin:@acxlin:1521:acx""/>
      <property name=""username"" value=""hase""/>
      <property name=""password"" value=""hase""/>
      <property name=""poolPreparedStatements"" value=""true""/>
    </bean>
  </beans>

3. Start the broker out of the box with bin/activemq
4. Change to the examples dir and change the build.xml and set
  
    <property name=""durable"" value=""true"" />

5. Invoke the producer with ant producer and then the consumer with ant consumer

=> Until here everything is fine, 10 messages are produced and consumed

6. No I wanted to test the durable mode and run the producer again with consuming the messages. So 10 mesages are left in the queue.

7. Shutdown the broker with bin/shutdown

=> First problem: java.sql.SQLException: Failed add a message

  INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost) started
  INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi

  ...

  INFO  BrokerService                  - ActiveMQ Message Broker (localhost) is shutting down
  INFO  VMTransportFactory             - Shutting down VM connectors for broker: localhost
  INFO  TransactionContext             - commit failed: Failed add a message
  java.sql.SQLException: Failed add a message
          at org.apache.activemq.store.jdbc.TransactionContext.executeBatch(TransactionContext.java:92)
          at org.apache.activemq.store.jdbc.TransactionContext.executeBatch(TransactionContext.java:68)
          at org.apache.activemq.store.jdbc.TransactionContext.commit(TransactionContext.java:146)
          at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.commitTransaction(JDBCPersistenceAdapter.java:313)
          at org.apache.activemq.store.journal.JournalPersistenceAdapter.commitTransaction(JournalPersistenceAdapter.java:177)
          at org.apache.activemq.store.journal.JournalMessageStore$3.execute(JournalMessageStore.java:269)
          at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:43)
          at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:237)
          at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:211)
          at org.apache.activemq.store.journal.JournalPersistenceAdapter$4.call(JournalPersistenceAdapter.java:338)
          at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.run(FutureTask.java:166)
          at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:643)
          at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:668)
          at java.lang.Thread.run(Thread.java:595)
  ERROR JournalPersistenceAdapter      - Failed to checkpoint a message store: edu.emory.mathcs.backport.java.util.concurrent.ExecutionException: java.io.IOException: Not started.
  edu.emory.mathcs.backport.java.util.concurrent.ExecutionException: java.io.IOException: Not started.
          at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.getResult(FutureTask.java:289)
          at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.get(FutureTask.java:115)
          at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:368)
          at org.apache.activemq.store.journal.JournalPersistenceAdapter$2.iterate(JournalPersistenceAdapter.java:120)
          at org.apache.activemq.thread.SimpleTaskRunner.runTask(SimpleTaskRunner.java:110)
          at org.apache.activemq.thread.SimpleTaskRunner.access$100(SimpleTaskRunner.java:25)
          at org.apache.activemq.thread.SimpleTaskRunner$1.run(SimpleTaskRunner.java:43)
          at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:643)
          at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:668)
          at java.lang.Thread.run(Thread.java:595)
  Caused by: java.io.IOException: Not started.
          at org.apache.activemq.store.jdbc.TransactionContext.rollback(TransactionContext.java:163)
          at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.rollbackTransaction(JDBCPersistenceAdapter.java:318)
          at org.apache.activemq.store.journal.JournalPersistenceAdapter.rollbackTransaction(JournalPersistenceAdapter.java:181)
          at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:61)
          at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:237)
          at org.apache.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:211)
          at org.apache.activemq.store.journal.JournalPersistenceAdapter$4.call(JournalPersistenceAdapter.java:338)
          at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.run(FutureTask.java:166)
          ... 3 more
  INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost) stopped: org.apache.activemq.broker.BrokerService$1@1ff92f5


8. Restart the broker

=> Some warnings occur:

  INFO  BrokerService                  - ActiveMQ 4.0-SNAPSHOT JMS Message Broker (localhost) is starting
  INFO  BrokerService                  - For help or more information please see: http://www.logicblaze.com
  INFO  JDBCPersistenceAdapter         - Database driver recognized: [oracle_jdbc_driver]
  INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 5 x 20.0 Megs at: ..\activemq-data\journal
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:1'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:2'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:3'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:4'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:5'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:6'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:7'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:8'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:9'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay add for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:10'.  Message may have already been added. reason: java.io.IOException: Failed add a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:1'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:2'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:3'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:4'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:5'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:6'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:7'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:8'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:9'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  WARN  JournalMessageStore            - Could not replay acknowledge for message 'ID:dopc-janknecht-3852-1139814332514-0:0:1:1:10'.  Message may have already been acknowledged. reason: java.io.IOException: Failed to remove a message
  INFO  JournalPersistenceAdapter      - Journal Recovered: 30 message(s) in transactions recovered.
  INFO  TransportServerThreadSupport   - Listening for connections at: tcp://dopc-janknecht:61616
  INFO  TransportConnector             - Accepting connection on: tcp://dopc-janknecht:61616
  INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost) started
  INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi

9. Finally run the consumer

=> java.lang.IndexOutOfBoundsException

  consumer:
       [echo] Running consumer against server at $url = tcp://localhost:61616 for subject $subject = TEST.FOO
       [java] Connecting to URL: tcp://localhost:61616
       [java] Consuming queue: TEST.FOO
       [java] Using durable subscription
       [java] Exception in thread ""tcp://localhost/127.0.0.1:61616"" java.lang.IndexOutOfBoundsException
       [java]     at java.io.DataInputStream.readFully(DataInputStream.java:173)
       [java]     at org.apache.activemq.openwire.BooleanStream.unmarshal(BooleanStream.java:88)
       [java]     at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:213)
       [java]     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)
       [java]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
       [java]     at java.lang.Thread.run(Thread.java:595)

The consumer hangs here..

With durable=false everything is fine (except that I will loose my messages after a shutdown :-)
Same behavior with the 4.0 M4.
Sometime when repeating this test I don't get these ""Could not replay add for message"" warnings after 
broker restart but the consumer hangs everytime.",,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-525,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-16 20:42:35.0,,,false,,,,,,,,,,,,,,,,,49202,,,Mon Mar 20 11:40:39 UTC 2006,,,,,,,,"0|i0s0nr:",161583,,,,,,,,,,,,,,,,,,,"13/Feb/06 09:39;janknecht;Probably these issues have same cause?","13/Feb/06 09:42;janknecht;Little correction:

6. Now I wanted to test the durable mode and run the producer again **without** consuming the messages. So 10 mesages are left in the queue. ","16/Feb/06 20:42;jstrachan;do you still get the same error when you disable statement caching?","22/Feb/06 08:12;janknecht;With <property name=""poolPreparedStatements"" value=""false""/> I stll get these SQLException on server side and IndexOutOfBoundsException for the consumer.","02/Mar/06 14:41;jstrachan;Any ideas?","08/Mar/06 10:18;jstrachan;I suspect the IndexOutOfBounds exception was caused by either of these 2 issues we recently fixed in the wire protocol...

http://jira.activemq.org/jira/browse/AMQ-525
http://jira.activemq.org/jira/browse/AMQ-617

so I'm pretty confident the IndexOutOfBoundsException is now fixed in SVN HEAD.

","17/Mar/06 18:01;chirino;Jonas,

If you get a chance, could you check to see if this issue is still vaild against the latest ActiveMQ?

Thanks!","20/Mar/06 11:40;jlim;Was able to reproduce this issue on 4.0 M4  using oracle. Btw, it appears this issue only appears when using  oracle (not really sure why).  tried testing on mysql and mssql and didn't encounter the issue. 

Tested it on the latest snapshot and issue appears to be resolved already
",,,,,,,,,,,,,,,,,,,,,,,,,,,
TEST org.apache.activemq.usecases.PublishOnTopicConsumerMessageUsingActivemqXMLTest FAILED,AMQ-538,12481617,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,chirino,chirino,08/Feb/06 00:27,20/Mar/06 01:26,30/Jan/20 16:57,20/Mar/06 01:26,,,,,,,4.0 RC2,,,Test Cases,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-20 01:26:29.0,,,false,,,,,,,,,,,,,,,,,49193,,,Mon Mar 20 01:26:29 UTC 2006,,,,,,,,"0|i17z9b:",254682,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"20/Mar/06 01:26;aco;Fix error in activemq.xml configuration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TEST org.apache.activemq.usecases.PublishOnQueueConsumedMessageUsingActivemqXMLTest FAILED,AMQ-537,12481632,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,chirino,chirino,08/Feb/06 00:26,20/Mar/06 01:25,30/Jan/20 16:57,20/Mar/06 01:25,,,,,,,4.0 RC2,,,Test Cases,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-20 01:25:40.0,,,false,,,,,,,,,,,,,,,,,49192,,,Mon Mar 20 01:25:40 UTC 2006,,,,,,,,"0|i17z9j:",254683,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"20/Mar/06 01:25;aco;Fix error in activemq.xml configuration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
receive() call should throw exception when transport fails.,AMQ-497,12481675,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chirino,chirino,18/Jan/06 23:32,18/Mar/06 16:08,30/Jan/20 16:57,18/Mar/06 16:08,4.0 M4,,,,,,4.0 RC2,,,JMS client,,,,0,"Reported at: http://forums.logicblaze.com/posts/list/207.page

* A QueueReceiver, running the synchronous receive() call will block indefinitely 
If you have a QueueReceiver, and it's blocked on the receive() call, it should produce an exception when the ActiveMQ server goes down. Otherwise there is no way for that thread to come back to life. The client does produce an async exception alert... However that is not sufficient. That handles any of your async consumers. This is a sync consumer, it's blocked until it returns, or fails. Your async exception routine should wake up all sync consumers with an exception on their receive() call. The user cannot do this, because even if he could somehow find which Thread is blocked, interrupting the thread is not guaranteed to work. Most JMS providers throw an exception. 3.2.1 threw an exception. Perhaps if I wrote an async exception trigger to close the Sender, it would unblock the other thread.. However the receieve should really throw an exception. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-07 23:46:20.0,,,false,,,,,,,,,,,,,,,,,49161,,,Sat Mar 18 16:08:39 UTC 2006,,,,,,,,"0|i17yxj:",254629,,,,,,,,,,,,,,,,,,,"07/Feb/06 23:46;rajdavies; receive()  and receive(timeout ) now return null on transport failure - so consistent behaviour with a close() on the connection.","08/Mar/06 01:28;teppic;receive() and receive(-1) should never return null. They should block until a message is received or throw an exception if interrupted (either by a close() or a Thread.interrupt()).","18/Mar/06 09:17;rajdavies;receive() will return null if there's a concurrent close - where do you get the idea that receive() should never return null?
ie. the API docs says:  Returns:
        the next message produced for this message consumer, or null if this message consumer is concurrently closed 
","18/Mar/06 16:08;jstrachan;It does appear we're compliant with the JMS specification so am closing this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker can't start on Win2k with Turkish Locale,AMQ-508,12481664,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mrsea,mrsea,26/Jan/06 17:05,18/Mar/06 07:02,30/Jan/20 16:57,18/Mar/06 07:02,3.2.1,,,,,,4.0 RC2,,,Broker,,,,0,"When I start with activemq.bat script following error occurs. Please note that my current and default locale is Turkish. When I changed to English US it was started without any error.

C:\activemq-3.2.1\bin>
C:\activemq-3.2.1\bin>
C:\activemq-3.2.1\bin>activemq
ActiveMQ Message Broker (http://activemq.org/)

Loading Mesaage Broker from activemq.xml on the CLASSPATH
java.lang.RuntimeException: Instruction unknown: load²nstruction
        at com.sun.org.apache.bcel.internal.util.InstructionFinder.mapName(InstructionFinder.java:138)
        at com.sun.org.apache.bcel.internal.util.InstructionFinder.compilePattern(InstructionFinder.java:170)
        at com.sun.org.apache.bcel.internal.util.InstructionFinder.search(InstructionFinder.java:218)
        at com.sun.org.apache.bcel.internal.util.InstructionFinder.search(InstructionFinder.java:264)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.Mode.peepHoleOptimization(Mode.java:1444)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.Mode.compileApplyTemplates(Mode.java:1058)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet.compileModes(Stylesheet.java:615)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet.translate(Stylesheet.java:730)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC.compile(XSLTC.java:335)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC.compile(XSLTC.java:410)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTemplates(TransformerFactoryImpl.java:791)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTransformer(TransformerFactoryImpl.java:619)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.createTransformer(ActiveMQBeanDefinitionReader.java:63)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.transformDocument(ActiveMQBeanDefinitionReader.java:94)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.registerBeanDefinitions(ActiveMQBeanDefinitionReader.java:53)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:155)
        at org.activemq.spring.ActiveMQBeanFactory.<init>(ActiveMQBeanFactory.java:86)
        at org.activemq.spring.ActiveMQBeanFactory.<init>(ActiveMQBeanFactory.java:57)
        at org.activemq.spring.SpringBrokerContainerFactory.createBrokerContainer(SpringBrokerContainerFactory.java:86)
        at org.activemq.spring.Main.main(Main.java:71)
ERROR:  'Instruction unknown: load²nstruction'
FATAL ERROR:  'Could not compile stylesheet'
Caught: org.activemq.spring.ConfigurationParseException: Could not parse resource: class path resource [activemq.xml]. Reason: javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet; nested exception is javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet
org.activemq.spring.ConfigurationParseException: Could not parse resource: class path resource [activemq.xml]. Reason: javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet; nested exception is javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet
javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTemplates(TransformerFactoryImpl.java:824)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTransformer(TransformerFactoryImpl.java:619)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.createTransformer(ActiveMQBeanDefinitionReader.java:63)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.transformDocument(ActiveMQBeanDefinitionReader.java:94)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.registerBeanDefinitions(ActiveMQBeanDefinitionReader.java:53)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:155)
        at org.activemq.spring.ActiveMQBeanFactory.<init>(ActiveMQBeanFactory.java:86)
        at org.activemq.spring.ActiveMQBeanFactory.<init>(ActiveMQBeanFactory.java:57)
        at org.activemq.spring.SpringBrokerContainerFactory.createBrokerContainer(SpringBrokerContainerFactory.java:86)
        at org.activemq.spring.Main.main(Main.java:71)
C:\activemq-3.2.1\bin>
C:\activemq-3.2.1\bin>
C:\activemq-3.2.1\bin>",Microsoft Windows 2000 [Version 5.00.2195] Server SP4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-18 07:02:02.0,,,false,,,,,,,,,,,,,,,,,49169,,,Sat Mar 18 07:02:02 UTC 2006,,,,,,,,"0|i17yw7:",254623,,,,,,,,,,,,,,,,,,,"18/Mar/06 07:02;jstrachan;We've fixed this issue in 4.x by not using XSLT to parse the configuration files",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BUg in persistence with HsqlDB.,AMQ-576,12481554,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,harishkswamy,harishkswamy,16/Feb/06 23:54,18/Mar/06 07:01,30/Jan/20 16:57,18/Mar/06 07:01,3.2.1,,,,,,4.0 RC2,,,,,,,0,"Test case: start JVM; start embedded JMS container; send 10 persistent messages to queue; commit; stop JMS container; shutdown JVM; start JVM; start JMS container; create queue consumer; consume messages.

Result: Only one message (the last message sent) received by the consumer.

I have attached the relevant source.
","Windows XP, JDK 1.4.2, HSQLDB 1.8.0, Eclipse 3.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Feb/06 23:54;harishkswamy;ASF.LICENSE.NOT.GRANTED--activemq-test.zip;https://issues.apache.org/jira/secure/attachment/12460701/ASF.LICENSE.NOT.GRANTED--activemq-test.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-03-18 07:01:06.0,,,false,,,,,,,,,,,,,,,,,49219,,,Sat Mar 18 07:01:06 UTC 2006,,,,,,,,"0|i17z3z:",254658,,,,,,,,,,,,,,,,,,,"18/Mar/06 07:01;jstrachan;I tried this against SVN HEAD and it seems to be working now; could you try use the latest SNAPSHOT (or 4.0-RC1 when it comes out) and verify this issue is resolved for you too?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TwoBrokerTopicSendReceiveTest fails on some platform,AMQ-586,12481613,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dflores,jlim,jlim,21/Feb/06 09:23,18/Mar/06 05:53,30/Jan/20 16:57,18/Mar/06 05:53,4.0 RC2,,,,,,4.0 RC2,,,Test Cases,,,,0,"On our CI test grids it works on iago, aladdin and spinach but fails on  Jafar (Windows 2003, Jdk 1.5)

Tried running it on a Windows XP  box using Jdk 1.5 and it works.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-18 05:53:33.0,,,false,,,,,,,,,,,,,,,,,49226,,,Sat Mar 18 05:53:33 UTC 2006,,,,,,,,"0|i17z2n:",254652,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"18/Mar/06 05:53;dflores;Added Thread.sleep() method in message loop creation before producer sends the message so that consumer can catch up",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TEST TwoBrokerTopicSendReceiveUsingHttpTest Fails,AMQ-640,12481635,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,aco,aco,17/Mar/06 02:02,18/Mar/06 00:14,30/Jan/20 16:57,18/Mar/06 00:14,4.0 M4,,,,,,4.0 RC2,,,Test Cases,,,,0,"Broker networking using http fails. I think the problem is the bridge is sending the BrokerInfo first before the ConnectionInfo (DemandForwardingBridgeSupport:185) without the clientID from the ConnectionInfo, send fails. Failover transport tries to resend, but continue failing. Tried sending the ConnectionInfo first, before the BrokerInfo, and it seems to work ok, aside from a few lost messages. But I'm not sure if this is the way to go.",winxp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49273,,,Sat Mar 18 00:14:00 UTC 2006,,,,,,,,"0|i17zfz:",254712,Regression,,,,,,,,,,,,,,,,,,"18/Mar/06 00:14;aco;This is a duplicate issue of AMQ-563.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TEST TwoBrokerTopicSendReceiveUsingHttpTest Failed,AMQ-563,12481531,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,chirino,chirino,15/Feb/06 17:19,18/Mar/06 00:12,30/Jan/20 16:57,18/Mar/06 00:12,,,,,,,4.0 RC2,,,Test Cases,,,,0,HTTP transport is not fully implemented yet.  Disabling test for now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-18 00:12:36.0,,,false,,,,,,,,,,,,,,,,,49208,,,Sat Mar 18 00:12:36 UTC 2006,,,,,,,,"0|i17z67:",254668,Regression,Unit Test Broken,,,,,,,,,,,,,,,,,"18/Mar/06 00:12;aco;This *should* be working now unless it fails on some other boxes. :P",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ruby stomp client test failures against 4.x,AMQ-635,12481517,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,16/Mar/06 11:58,17/Mar/06 18:41,30/Jan/20 16:57,17/Mar/06 18:40,4.0 M4,,,,,,4.0 RC2,,,,,,,0,The test suite for Ruby Stomp is not currently working against SVN HEAD of ActiveMQ 4.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49269,,,Fri Mar 17 18:40:50 UTC 2006,,,,,,,,"0|i17zgn:",254715,Regression,,,,,,,,,,,,,,,,,,"16/Mar/06 19:49;jstrachan;These issues are now resolved apart from this one remaining issue; that ACKs rolled back in a transaction do not cause the messages to be redispatched; as the default in 4.x is for the client side to do this","17/Mar/06 18:40;jstrachan;tests are all working now. I added client side redelivery of ACK'd messages on rollback (abort in the ruby client)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread leak when cluster node disappears,AMQ-407,12481587,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cgs,cgs,11/Nov/05 16:14,17/Mar/06 14:24,30/Jan/20 16:57,17/Mar/06 14:24,3.1,3.2,,,,,4.0 RC2,,,Broker,Transport,,,0,"In a network of three brokers, if one disappears, the other two brokers' JVMs eventually run out of memory due to the leaked threads.  This is not alleviated if the dropped broker reappears in the network.","JDK 1.5.0_04, RedHat ES 3, Resin 3.0.14, Spring 1.2.5",cgs,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/05 16:18;cgs;ASF.LICENSE.NOT.GRANTED--activemq.xml;https://issues.apache.org/jira/secure/attachment/12460641/ASF.LICENSE.NOT.GRANTED--activemq.xml","11/Nov/05 16:14;cgs;ASF.LICENSE.NOT.GRANTED--threadleak.txt;https://issues.apache.org/jira/secure/attachment/12460573/ASF.LICENSE.NOT.GRANTED--threadleak.txt",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-03-17 14:24:08.0,,,false,,,,,,,,,,,,,,,,,49094,,,Fri Mar 17 14:24:08 UTC 2006,,,,,,,,"0|i0s2l3:",161895,,,,,,,,,,,,,,,,,,,"11/Nov/05 16:18;cgs;Broker configuration.  Note that the broker has no name.  If the broker is started with a name, the other cluster nodes (using the same packaged configuration) do not add each other to the network.  I assume this is due to them thinking that there is already a membership for that node.","17/Mar/06 14:24;jstrachan;Should now be fixed in 4.0-M5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BAD network reconnect and lost clients cause memory overflow in ActiveMQ 3.2,AMQ-408,12481555,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,shanyuktang,shanyuktang,11/Nov/05 23:18,17/Mar/06 14:22,30/Jan/20 16:57,17/Mar/06 14:22,3.2,,,,,,4.0 RC2,,,Broker,,,,0,"*configure the broker to have one persistence that is a datasource which is pointing to mysql.
*do not put in the journal persistence.
*making a 500 connections and kill the client VM.
*continue the above step and you will see activemq build up memory.","*MySQL storage
*ActiveMQ 3.1
*java 1.5
*tomcat 5.4",,,,,,,,,,,,,,,,,,180,180,,0%,180,180,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 14:22:32.0,,,false,,,,,,,,,,,,,,,,,49095,,,Fri Mar 17 14:22:32 UTC 2006,,,,,,,,"0|i17yrb:",254601,,,,,,,,,,,,,,,,,,,"17/Mar/06 14:22;jstrachan;This should now be fixed in 4.x; let us know if you still have problems",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource adapter is unusable with peer:// protocol and with temporary queues,AMQ-405,12481596,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,gnodet,gnodet,06/Nov/05 14:36,17/Mar/06 14:21,30/Jan/20 16:57,17/Mar/06 14:21,3.2,,,,,,4.0 RC2,,,Connector,,,,0,"When using the peer:// protocol with the resource adapter, each activated endpoint creates an embedded broker, which leads to a lot of traffic and thread used. Maybe only one broker could be used for a connection factory, instead of one broker per connection.

For temporary queues, each temporary destination creates a thread for advisory that is never stopped, so that the jvm quickly runs out of memory.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49092,,,2005-11-06 14:36:13.0,,,,,,,,"0|i17yrr:",254603,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in activemq.xml mysql-ds BLOB adapter class name,AMQ-541,12481556,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,nwhite,nwhite,08/Feb/06 21:10,17/Mar/06 14:19,30/Jan/20 16:57,17/Mar/06 14:19,3.2.2,,,,,,4.0 RC2,,,Message Store,,,,0,"It appears that the activemq.xml configuration file contains a typo with respect to the adapterClass attribute settings on the jdbcPersistence element with dataSourceRef=""mysql-ds"". The default value of the adapterClass attribute is 

org.activemq.store.jdbc.adapter.BlobJDBCAdaptor

However, the class name is actually

org.activemq.store.jdbc.adapter.BlobJDBCAdapter
                                                                                        ^

This manifests itself as an error on startup when you try to use this adapter class.



","MySQL 4.1.11 (InnoDB engine, UTF-8 charset), Win XP Pro SP2, Java 1.5.0_06, ActiveMQ 3.2.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49196,,,2006-02-08 21:10:45.0,,,,,,,,"0|i17z8n:",254679,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remote TCP Publish-only persistant clients are unable to reconnect when TCP/IP level discconect occurs,AMQ-599,12481544,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,ab0oo,ab0oo,01/Mar/06 20:19,17/Mar/06 13:19,30/Jan/20 16:57,17/Mar/06 13:19,4.0 M4,,,,,,4.0 RC2,,,Broker,,,,0,"During long-term operation, a remote, publish-only client with a TCP socket connection to the JMS broker will occasionally be disconnected at a low level (i.e. below the application level where JMS runs).  When this occurs, the JMS broker throws an exception indicating a broken socket, but does not release the clientID of the client to allow for reconnects.  The following stack traces should demonstrate this failure mode:

 INFO  Service                        - Async error occurred: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:96)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:108)
        at java.io.DataOutputStream.flush(DataOutputStream.java:106)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:118)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:90)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:65)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:212)
        at org.apache.activemq.broker.AbstractConnection.dispatchSync(AbstractConnection.java:517)
        at org.apache.activemq.broker.AbstractConnection.dispatchAsync(AbstractConnection.java:535)
        at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:142)
        at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:54)
        at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:50)
        at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:365)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:247)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:195)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:312)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:107)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:119)
        at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:336)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:508)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)
ACTIVEMQ_HOME: /opt/activemq
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - ActiveMQ 4.0-M4 JMS Message Broker (localhost) is starting
INFO  BrokerService                  - For help or more information please see: http://www.logicblaze.com
INFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby_embedded_jdbc_driver]
INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 5 x 20.0 Megs at: ../activemq-data/journal
INFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in transactions recovered.
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://s1:61616
INFO  TransportConnector             - Accepting connection on: tcp://s1:61616
WARN  MulticastDiscoveryAgent        - brokerName not set
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://s1:61617?wireFormat=stomp
INFO  TransportConnector             - Accepting connection on: tcp://s1:61617?wireFormat=stomp
INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost) started
INFO  NetworkConnector               - Establishing network connection between vm://localhost?network=true and null at failover:tcp://s1:61616
INFO  VMTransportFactory             - binding to broker: localhost
INFO  TransportConnector             - Accepting connection on: vm://localhost
INFO  DemandForwardingBridge         - Starting a network connection between vm://localhost#0 and unconnected has been established.
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
INFO  DemandForwardingBridge         - Disconnecting loop back connection.
INFO  Service                        - Sync error occurred: javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:153)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:66)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:75)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:478)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:82)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)
INFO  Service                        - Sync error occurred: javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:153)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:66)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:75)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:478)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:82)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)
INFO  VMTransportFactory             - Shutting down VM connectors for broker: localhost
INFO  VMTransportFactory             - Shutting down VM connectors for broker: localhost
INFO  Service                        - Async error occurred: java.io.EOFException: Cannot write to the stream any more it has already been closed
java.io.EOFException: Cannot write to the stream any more it has already been closed
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.checkClosed(TcpBufferedOutputStream.java:131)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:69)
        at java.io.DataOutputStream.writeInt(DataOutputStream.java:180)
        at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:169)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:117)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:90)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:65)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:212)
        at org.apache.activemq.broker.AbstractConnection.dispatchSync(AbstractConnection.java:517)
        at org.apache.activemq.broker.AbstractConnection.dispatchAsync(AbstractConnection.java:535)
        at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:142)
        at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:54)
        at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:50)
        at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:365)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:247)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:195)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:312)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:107)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:119)
        at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:336)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:508)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)

Reverting to ""anonymous"" clients allows the client to create a new connection, but further persistant connections from the initial clientId cannot be made until the broker is restarted.

Please contact via email:  johng@amdswireless.com for additional information, if needed.

","Enterprise class SMP Linux 2.6.12 (Mandriva) with 4GB RAM+ RAID
J2SDK 1.5_06",,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-600,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 13:19:53.0,,,false,,,,,,,,,,,,,,,,,49237,,,Fri Mar 17 13:19:53 UTC 2006,,,,,,,,"0|i17zkv:",254734,,,,,,,,,,,,,,,,,,,"17/Mar/06 13:19;jstrachan;See AMQ-600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remote TCP Publish-only persistant clients are unable to reconnect when TCP/IP level discconect occurs,AMQ-602,12481590,12481544,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,ab0oo,ab0oo,01/Mar/06 20:31,17/Mar/06 13:19,30/Jan/20 16:57,17/Mar/06 13:19,4.0 M4,,,,,,,,,Broker,,,,0,"During long-term operation, a remote, publish-only client with a TCP socket connection to the JMS broker will occasionally be disconnected at a low level (i.e. below the application level where JMS runs).  When this occurs, the JMS broker throws an exception indicating a broken socket, but does not release the clientID of the client to allow for reconnects.  The following stack traces should demonstrate this failure mode:

 INFO  Service                        - Async error occurred: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:96)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:108)
        at java.io.DataOutputStream.flush(DataOutputStream.java:106)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:118)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:90)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:65)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:212)
        at org.apache.activemq.broker.AbstractConnection.dispatchSync(AbstractConnection.java:517)
        at org.apache.activemq.broker.AbstractConnection.dispatchAsync(AbstractConnection.java:535)
        at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:142)
        at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:54)
        at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:50)
        at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:365)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:247)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:195)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:312)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:107)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:119)
        at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:336)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:508)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)
ACTIVEMQ_HOME: /opt/activemq
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - ActiveMQ 4.0-M4 JMS Message Broker (localhost) is starting
INFO  BrokerService                  - For help or more information please see: http://www.logicblaze.com
INFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby_embedded_jdbc_driver]
INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 5 x 20.0 Megs at: ../activemq-data/journal
INFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in transactions recovered.
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://s1:61616
INFO  TransportConnector             - Accepting connection on: tcp://s1:61616
WARN  MulticastDiscoveryAgent        - brokerName not set
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://s1:61617?wireFormat=stomp
INFO  TransportConnector             - Accepting connection on: tcp://s1:61617?wireFormat=stomp
INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost) started
INFO  NetworkConnector               - Establishing network connection between vm://localhost?network=true and null at failover:tcp://s1:61616
INFO  VMTransportFactory             - binding to broker: localhost
INFO  TransportConnector             - Accepting connection on: vm://localhost
INFO  DemandForwardingBridge         - Starting a network connection between vm://localhost#0 and unconnected has been established.
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
INFO  DemandForwardingBridge         - Disconnecting loop back connection.
INFO  Service                        - Sync error occurred: javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:153)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:66)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:75)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:478)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:82)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)
INFO  Service                        - Sync error occurred: javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:153)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:66)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:75)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:478)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:82)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)
INFO  VMTransportFactory             - Shutting down VM connectors for broker: localhost
INFO  VMTransportFactory             - Shutting down VM connectors for broker: localhost
INFO  Service                        - Async error occurred: java.io.EOFException: Cannot write to the stream any more it has already been closed
java.io.EOFException: Cannot write to the stream any more it has already been closed
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.checkClosed(TcpBufferedOutputStream.java:131)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:69)
        at java.io.DataOutputStream.writeInt(DataOutputStream.java:180)
        at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:169)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:117)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:90)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:65)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:212)
        at org.apache.activemq.broker.AbstractConnection.dispatchSync(AbstractConnection.java:517)
        at org.apache.activemq.broker.AbstractConnection.dispatchAsync(AbstractConnection.java:535)
        at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:142)
        at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:54)
        at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:50)
        at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:365)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:247)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:195)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:312)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:107)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:119)
        at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:336)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:508)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)

Reverting to ""anonymous"" clients allows the client to create a new connection, but further persistant connections from the initial clientId cannot be made until the broker is restarted.

Please contact via email:  johng@amdswireless.com for additional information, if needed.

","Enterprise class SMP Linux 2.6.12 (Mandriva) with 4GB RAM+ RAID
J2SDK 1.5_06",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 13:19:29.0,,,false,,,,,,,,,,,,,,,,,49239,,,Fri Mar 17 13:19:29 UTC 2006,,,,,,,,"0|i17zk7:",254731,,,,,,,,,,,,,,,,,,,"17/Mar/06 13:19;jstrachan;This looks to be the same as AMQ-600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker will not release a persistant clientId if a network connection is broken then restored at the TCP layer from a remote client,AMQ-600,12481512,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,ab0oo,ab0oo,01/Mar/06 20:03,17/Mar/06 13:16,30/Jan/20 16:57,17/Mar/06 13:16,4.0 M4,,,,,,4.0 RC2,,,Broker,,,,0,"During long-term operation, a remote, publish-only client with a TCP socket connection to the JMS broker will occasionally be disconnected at a low level (i.e. below the application level where JMS runs).  When this occurs, the JMS broker throws an exception indicating a broken socket, but does not release the clientID of the client to allow for reconnects.  The following stack traces should demonstrate this failure mode:

 INFO  Service                        - Async error occurred: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:96)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:108)
        at java.io.DataOutputStream.flush(DataOutputStream.java:106)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:118)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:90)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:65)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:212)
        at org.apache.activemq.broker.AbstractConnection.dispatchSync(AbstractConnection.java:517)
        at org.apache.activemq.broker.AbstractConnection.dispatchAsync(AbstractConnection.java:535)
        at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:142)
        at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:54)
        at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:50)
        at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:365)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:247)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:195)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:312)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:107)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:119)
        at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:336)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:508)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)
ACTIVEMQ_HOME: /opt/activemq
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - ActiveMQ 4.0-M4 JMS Message Broker (localhost) is starting
INFO  BrokerService                  - For help or more information please see: http://www.logicblaze.com
INFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby_embedded_jdbc_driver]
INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 5 x 20.0 Megs at: ../activemq-data/journal
INFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in transactions recovered.
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://s1:61616
INFO  TransportConnector             - Accepting connection on: tcp://s1:61616
WARN  MulticastDiscoveryAgent        - brokerName not set
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://s1:61617?wireFormat=stomp
INFO  TransportConnector             - Accepting connection on: tcp://s1:61617?wireFormat=stomp
INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost) started
INFO  NetworkConnector               - Establishing network connection between vm://localhost?network=true and null at failover:tcp://s1:61616
INFO  VMTransportFactory             - binding to broker: localhost
INFO  TransportConnector             - Accepting connection on: vm://localhost
INFO  DemandForwardingBridge         - Starting a network connection between vm://localhost#0 and unconnected has been established.
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
INFO  DemandForwardingBridge         - Disconnecting loop back connection.
INFO  Service                        - Sync error occurred: javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:153)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:66)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:75)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:478)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:82)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)
INFO  Service                        - Sync error occurred: javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
javax.jms.InvalidClientIDException: Broker: localhost - Client: TESTClient already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:153)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:66)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:63)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:75)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:478)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:82)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)
INFO  VMTransportFactory             - Shutting down VM connectors for broker: localhost
INFO  VMTransportFactory             - Shutting down VM connectors for broker: localhost
INFO  Service                        - Async error occurred: java.io.EOFException: Cannot write to the stream any more it has already been closed
java.io.EOFException: Cannot write to the stream any more it has already been closed
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.checkClosed(TcpBufferedOutputStream.java:131)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:69)
        at java.io.DataOutputStream.writeInt(DataOutputStream.java:180)
        at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:169)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:117)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:90)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:65)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:212)
        at org.apache.activemq.broker.AbstractConnection.dispatchSync(AbstractConnection.java:517)
        at org.apache.activemq.broker.AbstractConnection.dispatchAsync(AbstractConnection.java:535)
        at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:142)
        at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:54)
        at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:50)
        at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:365)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:247)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:195)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:312)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:107)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:119)
        at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:336)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:508)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:189)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)

Reverting to ""anonymous"" clients allows the client to create a new connection, but further persistant connections from the initial clientId cannot be made until the broker is restarted.

Please contact via email:  johng@amdswireless.com for additional information, if needed.

","Linux 2.6.12 (Mandriva), J2SDK 1.5_06, Enterprise-class SMP servers with fast RAID, 2GB RAM, GigE",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 13:16:46.0,,,false,,,,,,,,,,,,,,,,,49238,,,Fri Mar 17 13:16:46 UTC 2006,,,,,,,,"0|i17zkn:",254733,,,,,,,,,,,,,,,,,,,"17/Mar/06 13:16;jstrachan;This should be now fixed in SVN HEAD - could you confirm using tomorrows SNAPSHOT build that your issues is resolved now please?

Basically the code was catching IOExceptions and treating them as service exceptions (e.g. security erorrs etc) and trying to send an error response back, rather than just disposing the connection and so freeing up the clientID.

Let us know if this issue is not fixed and we can reopen this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Broker shutdown no longer works in 02/21 SNAPSHOT, when using static+failover NetworkConnectors.",AMQ-588,12481658,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,yaussy,yaussy,21/Feb/06 23:58,17/Mar/06 11:49,30/Jan/20 16:57,17/Mar/06 11:49,4.0,,,,,,4.0 RC2,,,Broker,,,,0,"When using a static+failover list for network connections, Broker shutdown is no longer working as of the 02/21/2006 SNAPSHOT release.  If a broker is attempting to connect to another broker which is not currently running, the shutdown blocks waiting for the failover connect thread to complete the connection.  Since the other broker is not running, the shutdown then hangs.

This scenario worked fine with the 02/17/2006 SNAPSHOT release.","JDK 1.5.0_04, Solaris 8 / Solaris 10",yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 11:49:29.0,,,false,,,,,,,,,,,,,,,,,49228,,,Fri Mar 17 11:49:29 UTC 2006,,,,,,,,"0|i0s2n3:",161904,,,,,,,,,,,,,,,,,,,"27/Feb/06 16:12;yaussy;Tracked this one down a bit.  Turns out the issue is that I was getting a double FailoverTransport decorator for each broker connection.  This appears to be due to my NetworkConnector list looking like this: 

static://(failover:tcp://host2:61617,failover:tcp://host3:61617)

If I change the url list to:

static://(tcp://host2:61617,tcp://host3:61617)

the problem goes away.  The FailoverTransport is still used, which is desirable.  However, it seems strange that it is a ""hidden"" decorator now.  Did you really intend for this to happen?","17/Mar/06 11:49;jstrachan;Good catch; the static: and failover: are quite similar really and one or the other should be used. I've tried to fix the documentation to make this absolutely clear...

http://docs.codehaus.org/display/ACTIVEMQ/Networks+of+Brokers

in particular I've added your issue as a big read warning on that page so hopefully others won't make the same mistake :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consumer get java.lang.nullPointerException,AMQ-621,12481622,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,wangbh,wangbh,09/Mar/06 00:18,17/Mar/06 11:29,30/Jan/20 16:57,17/Mar/06 11:29,4.0 M4,,,,,,4.0 RC2,,,JMS client,,,,0,"setup: (1) activemq up running with ssl
            (2) JMS client (application) was compiled purely used sun solaris environment with jdk1.5.0_03 and jms1.1.jar. Debugging mode was turned on.
            (3) use jndi.properties file provided at activemq.

Execution:
         Producer simply sent 1000 text messages with 46 characters each on a queue.
         Consumer use synchrouse receive mode: receive()

Observation:
         (1) Both producer and receiver successfully handsaked with activemq (by looking into logs about ssl certification verification and negociation.
         (2) Producer continuously pushed messages into queue and consumer received messages.
         (3) After several hundred message delivered and received, consumer got null pointer exception as below:
       
         ....
         main, WRITE: TLSv1 Application Data, length = 46
         Client received: No. 450:Sever message: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
         Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, READ: TLSv1 Application Data, length = 161
         main, WRITE: TLSv1 Application Data, length = 46
         Client received: No. 451:Sever message: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
         Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, READ: TLSv1 Application Data, length = 161
         Mar 8, 2006 2:38:10 PM org.apache.activemq.ActiveMQConnection onAsyncException
         WARNING: Async exception with no exception listener: java.io.IOException: Unexpected Error: java.lang.NullPointerException
        java.io.IOException: Unexpected Error: java.lang.NullPointerException
        at org.activeio.adapter.SyncToAsyncChannel.run(SyncToAsyncChannel.java:161)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:643)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:668)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.lang.NullPointerException
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:146)
        at org.activeio.command.AsyncChannelToAsyncCommandChannel$1.onPacket(AsyncChannelToAsyncCommandChannel.java:69)
        at org.apache.activemq.transport.activeio.PacketAggregatingAsyncChannel.onPacket(PacketAggregatingAsyncChannel.java:92)
        at org.activeio.FilterAsyncChannel.onPacket(FilterAsyncChannel.java:87)
        at org.apache.activemq.transport.activeio.ActivityMonitor.onPacket(ActivityMonitor.java:42)
        at org.activeio.adapter.SyncToAsyncChannel.run(SyncToAsyncChannel.java:155)
        ... 3 more
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called close()
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called closeInternal(true)
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, SEND TLSv1 ALERT:  warning, description = close_notify
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, WRITE: TLSv1 Alert, length = 18
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called close()
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called closeInternal(true)
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called close()
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called closeInternal(true)

 







",Solaris.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-09 12:56:05.0,,,false,,,,,,,,,,,,,,,,,49255,,,Fri Mar 17 11:29:13 UTC 2006,,,,,,,,"0|i17zi7:",254722,,,,,,,,,,,,,,,,,,,"09/Mar/06 12:56;jstrachan;Can you try using the latest snapshot build please?

http://activemq.org/Download

only we've fixed numerous bugs lately which tend to appear after sending thousands of messages

http://jira.activemq.org/jira/browse/AMQ-525
http://jira.activemq.org/jira/browse/AMQ-617","17/Mar/06 11:29;jstrachan;I think this is now fixed - please let us know if you still have problems and we can reopen it again",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnection ignores interrupts (sometimes),AMQ-627,12481445,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,teppic,teppic,13/Mar/06 01:29,17/Mar/06 11:18,30/Jan/20 16:57,17/Mar/06 11:18,4.0 M4,,,,,,4.0 RC2,,,,,,,0,"There are a bunch of these in the code:

                try {
                        ...
                } catch (InterruptedException e) {
                }

Which should be

                try {
                        ...
                } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                }

... or 

                try {
                        ...
                } catch (InterruptedException e) {
                        throw JMSExceptionSupport.create(e);
                }

... or whatever. Just don't throw away my interrupts.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 11:18:08.0,,,false,,,,,,,,,,,,,,,,,49261,,,Fri Mar 17 11:18:08 UTC 2006,,,,,,,,"0|i17zh3:",254717,Regression,,,,,,,,,,,,,,,,,,"17/Mar/06 11:18;jstrachan;I think I've got them all licked now - let me know if you can find any more I've missed; but I think I got them all :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test case HttpTransportBrokerTest seems to hang forever,AMQ-628,12481466,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,jstrachan,jstrachan,13/Mar/06 12:44,15/Mar/06 20:57,30/Jan/20 16:57,15/Mar/06 20:57,,,,,,,4.0 RC2,,,Test Cases,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-15 20:57:30.0,,,false,,,,,,,,,,,,,,,,,49262,,,Wed Mar 15 20:57:30 UTC 2006,,,,,,,,"0|i0s10v:",161642,Regression,,,,,,,,,,,,,,,,,,"15/Mar/06 20:57;aco;Done. Verified working in windows (my env) and linux (iago).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable Subscriptions used with a MDB may miss messages if the consumer is under load,AMQ-622,12481529,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,09/Mar/06 02:51,09/Mar/06 03:04,30/Jan/20 16:57,09/Mar/06 03:04,3.2.2,,,,,,3.2.3,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49256,,,Thu Mar 09 03:04:43 UTC 2006,,,,,,,,"0|i0s17r:",161673,,,,,,,,,,,,,,,,,,,"09/Mar/06 03:04;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4.0 M4 IndexOutOfBoundException,AMQ-525,12481588,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,lhu,lhu,02/Feb/06 22:38,08/Mar/06 10:18,30/Jan/20 16:57,02/Mar/06 18:06,4.0 M4,,,,,,,,,Transport,,,,0,"Exception in thread ""tcp://localhost/127.0.0.1:61636"" java.lang.IndexOutOfBoundsException
         at java.io.DataInputStream.readFully(DataInputStream.java:173)
         at org.apache.activemq.openwire.BooleanStream.unmarshal(BooleanStream.java:88)
         at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:213)
         at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)
         at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
         at java.lang.Thread.run(Thread.java:595)
 ",Tomcat 5.5.15 on Redhat Linux Enterprise Server 3,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Feb/06 22:17;dgynn;ASF.LICENSE.NOT.GRANTED--amq525.patch.txt;https://issues.apache.org/jira/secure/attachment/12460611/ASF.LICENSE.NOT.GRANTED--amq525.patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-02-11 22:16:55.0,,,false,,,,,,,,,,,,,,,,,49181,,,Thu Mar 02 18:06:53 UTC 2006,,,,,,,,"0|i0s113:",161643,,,,,,,,,,,,,,,,,,,"11/Feb/06 22:16;dgynn;I was experiencing the same exception and tracked it down to a problem in the unmarshal method of the BooleanStream class.  Unmarshalling large objects, like stack traces was causing the error for me.  I was able to workaround by setting wireFormat.stackTraceEnabled=false on my connection URI.

I think the root cause that the 0xE0 bit mask should be 0x80 in the marshal/unmarshal methods but I'm not sure exactly how this code works.  I'll attach a patch that worked for me.  ","11/Feb/06 22:17;dgynn;Potential patch to BooleanStream","02/Mar/06 13:06;jstrachan;Can you review Dave's patch please. If this is valid we need to make similar patches to C# etc","02/Mar/06 18:06;jstrachan;Patch applied - many thanks Dave!

I've added a test case, BooleanTest which demonstrates the problem and validates your patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dead Letter Queue (DLQ) handling does not work for message consumed in a transaction.,AMQ-589,12481497,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,22/Feb/06 20:22,08/Mar/06 02:46,30/Jan/20 16:57,08/Mar/06 02:46,3.2,3.2.1,3.2.2,,,,3.2.3,,,,,,,1,,,ander_ben,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-01 08:35:49.0,,,false,,,,,,,,,,,,,,,,,49229,,,Wed Mar 08 02:46:10 UTC 2006,,,,,,,,"0|i0s2in:",161884,,,,,,,,,,,,,,,,,,,"01/Mar/06 08:35;ander_ben;Hiram, could you give a few extra details about this issue?

I'm experiencing a problem in 3.2.1 where I consume a message within a transaction and then rollback the transaction. ActiveMQ is correctly sending the message to the dead letter queue (maxRedelivery is set to 0). However, if I stop and restart ActiveMQ it restores the consumed message to its original queue - the original message remains in the dead letter queue!","08/Mar/06 02:46;chirino;Yes I belive that this has been fixed now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Streamlets cause OutOfMemoryError with non-persistent embedded broker,AMQ-618,12481516,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,rnewson,rnewson,07/Mar/06 16:26,07/Mar/06 21:05,30/Jan/20 16:57,07/Mar/06 21:05,4.0 M4,,,,,,4.0 RC2,,,,,,,0,"
When streaming large amounts of data (that exceed the VM's permitted maximum), an OutOfMemoryError is thrown.

Turning on persistence (changing BROKER_URL to ""vm://localhost?broker.persistent=true"") seems to work, but I'd like to stream without taking the persistence hit.

",jdk 1.5.0_b6 on Ubuntu 5.10.,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Mar/06 20:02;rnewson;ASF.LICENSE.NOT.GRANTED--LargeStreamletTest.java;https://issues.apache.org/jira/secure/attachment/12460697/ASF.LICENSE.NOT.GRANTED--LargeStreamletTest.java","07/Mar/06 16:26;rnewson;ASF.LICENSE.NOT.GRANTED--StreamletTest.java;https://issues.apache.org/jira/secure/attachment/12460859/ASF.LICENSE.NOT.GRANTED--StreamletTest.java",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-03-07 21:05:13.0,,,false,,,,,,,,,,,,,,,,,49253,,,Tue Mar 07 21:05:13 UTC 2006,,,,,,,,"0|i17zif:",254723,,,,,,,,,,,,,,,,,,,"07/Mar/06 20:02;rnewson;moved into activemq package and assigned copyright to Apache.

This test should probably catch OOM and assert rather than just crashing...","07/Mar/06 21:05;chirino;Root case:

When client used a ranged ack, only the last message in the range was being deleted from the message store.  For the peristent store case, this could be the cause of some other performance issues since the journal and long term were holding on to messages longer than they needed to.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update to backport-util.concurrent 2.1,AMQ-605,12481473,12481938,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,hhoffstätte,hhoffstätte,02/Mar/06 15:49,06/Mar/06 22:09,30/Jan/20 16:57,06/Mar/06 22:09,4.0 M4,,,,,,4.0 RC2,,,Broker,,,,0,"There have been some *scary* bugfixes in b.u.c as described here:
http://dcl.mathcs.emory.edu/util/backport-util-concurrent/changelog.php
Upgrading will probably solve some very obscure bugs, most importantly related to ReentrantReadWriteLock, Condition & livelocks (some JIRA issues sound like that). I recently upgraded mule to buc-2.1 and have not observed any regressions.
",all,hhoffstätte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-06 22:09:21.0,,,false,,,,,,,,,,,,,,,,,49242,,,Mon Mar 06 22:09:21 UTC 2006,,,,,,,,"0|i0s2jb:",161887,,,,,,,,,,,,,,,,,,,"06/Mar/06 22:09;jstrachan;Done - thanks for the heads up!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Objects in ActiveMQObjectMessage are not always de-serialized and there are side effects when redelivered,AMQ-519,12481618,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,gnodet,gnodet,01/Feb/06 18:28,06/Mar/06 21:15,30/Jan/20 16:57,06/Mar/06 21:15,4.0 M4,,,,,,4.0 RC2,,,,,,,0,"When using an embedded broker with ra, and the message is redelivered (for example after a rollback), the same object is given as a result from the ObjectMessage.getObject call.
This can cause undesirable side effects when the object has been modified in the first (rollbacked) transaction.

To test: in Servicemix, run the org.apache.servicemix.jbi.messaging.JcaFlowPersistentTest test case.
Need to remove the workaround in JCAfFlow.onMessage, line 465, to make the test fail.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-06 21:15:53.0,,,false,,,,,,,,,,,,,,,,,43161,,,Mon Mar 06 21:15:53 UTC 2006,,,,,,,,"0|i16rk7:",247597,,,,,,,,,,,,,,,,,,,"06/Mar/06 21:15;jstrachan;Issue fixed.

To avoid failing the ServiceMix build - I've not yet removed the patch in JCAFlow - but have tested that it works with a properly build activemq-core jar - so whenever you are ready you can remove the workaround in ServiceMix",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The BrokerService is not setting the taskRunnerFactory property of the TransportConnector.,AMQ-568,12481511,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,15/Feb/06 18:58,06/Mar/06 19:57,30/Jan/20 16:57,06/Mar/06 19:57,,,,,,,4.0 RC2,,,Broker,,,,0,This causes all messages to be dispatched to clients sync (dispatchAsync setting would not be honored.),,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-17 22:03:53.0,,,false,,,,,,,,,,,,,,,,,49213,,,Mon Mar 06 19:57:04 UTC 2006,,,,,,,,"0|i17z5b:",254664,,,,,,,,,,,,,,,,,,,"15/Feb/06 19:12;chirino;Fixed.","17/Feb/06 22:03;yaussy;Hiram,

I've taken the 2/17 SNAPSHOT, and retested the asyncDispatch.  It is still not working properly.  Without knowing the full pathway of the code, I'm guessing at what the problem is.  Here's what I think:

Your changed BrokerService.addConnector:
+++++++++++++++++++
        connector.setBroker(getBroker());
        connector.setBrokerName(getBrokerName());
        connector.setTaskRunnerFactory(getTaskRunnerFactory());
        transportConnectors.add(connector);

        if (isUseJmx()) {
            connector = connector.asManagedConnector(getManagementContext().getMBeanServer(), getBrokerObjectName());
            registerConnectorMBean(connector);
        }
        return connector;
+++++++++++++++++++++

This calls the setTaskRunnerFactory, which is what was missing.  However, if isUseJmx() is true, then connector is reset / recreated as a ManagedConnector.  This resets, at least, the taskRunnerFactory, so it is again null.

I'm also concerned, though I did not take the time to examine its usage further to know whether it would be a problem or not, that the line:
++++++++++++++
transportConnectors.add(connector)
++++++++++++++
is bad, right?  It is adding the original connector the this map / list, but not the ManagedConnector.  Again, I did not track this one down to see if it was a problem or not, but thought it worth mentioning.

Kevin.","18/Feb/06 00:33;chirino;I just commited another patch which I hope fixes this.  Could you recheck it for me?

Thanks!
Hiram","21/Feb/06 16:24;yaussy;Hiram,

I had left for the day by the time your message came through.  I wil test this morning and let you know.  Thanks.

Kevin","21/Feb/06 23:41;yaussy;Hiram,

Looks like that did the trick - at least with broker-to-client asyncDispatch.

I may have need to set up asyncDispatch between brokers.  This should work, right?","06/Mar/06 19:57;chirino;fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
when sending 16383 messages over the same connection with caching enabled we get a ClassCastException,AMQ-617,12481597,12481626,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,06/Mar/06 15:52,06/Mar/06 19:47,30/Jan/20 16:57,06/Mar/06 15:58,4.0 M4,4.0 RC2,,,,,4.0 RC2,,,Broker,,,,0,"The exceptions are always along these lines...
16:20:30,864 INFO [STDOUT] java.lang.ClassCastException: org.apache.activemq.command.XATransactionId 
16:20:30,865 INFO [STDOUT] at org.apache.activemq.openwire.v1.TransactionInfoMarshaller.unmarshal(TransactionInfoMarshaller.java:67) 
16:20:30,865 INFO [STDOUT] at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:214) 
16:20:30,865 INFO [STDOUT] at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181) 
16:20:30,865 INFO [STDOUT] at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135) 
16:20:30,865 INFO [STDOUT] at java.lang.Thread.run(Thread.java:595) 

see the test case MarshallingWithCachingTest for how to reproduce the problem.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49252,,,Mon Mar 06 15:58:14 UTC 2006,,,,,,,,"0|i17zin:",254724,,,,,,,,,,,,,,,,,,,"06/Mar/06 15:58;jstrachan;patch applied in SVN HEAD",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE could occur if endpoint factory never creates any endpoints.,AMQ-612,12481493,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,03/Mar/06 23:16,03/Mar/06 23:34,30/Jan/20 16:57,03/Mar/06 23:34,3.2.2,4.0 M4,,,,,3.2.3,4.0 RC2,,Connector,,,,0,"This would be an edge case, since it would be odd that the endpoint factory never creates and endpoint, but it could happen if the endpoint factory is invalid for some reason.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,41792,,,2006-03-03 23:16:27.0,,,,,,,,"0|i0s15z:",161665,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endpoint becomes invalid if the MDB MessageListener throws a runtime exception.,AMQ-613,12481468,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,03/Mar/06 23:18,03/Mar/06 23:34,30/Jan/20 16:57,03/Mar/06 23:34,3.2.2,4.0 M4,,,,,3.2.3,4.0 RC2,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49249,,,2006-03-03 23:18:00.0,,,,,,,,"0|i17zj3:",254726,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Old message cleanup failed due to: SQL Exception: A lock could not be obtained within the time requested ERROR 40XL1: A lock could not be obtained within the time requested,AMQ-309,12481558,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,gklyuzner,gklyuzner,18/Jul/05 22:04,03/Mar/06 14:14,30/Jan/20 16:57,21/Dec/05 20:59,,,,,,,4.0 M4,,,Message Store,,,,1,"On Server side throws Exception listed below
No Exception for Client side, but slowdown message processing
CPU util on Server < 50%


2005-07-18 17:36:41,530 [ocalport=61616]] INFO  BrokerContainerImpl            - Adding new client: ID:ny-cap-33-1918-1121722600107-19:0 on transport: TcpTransportChannel: Socket[addr=/170.198.121.186,port=1920,localport=61616]
2005-07-18 17:39:03,518 [Cleanup Timmer ] WARN  JDBCPersistenceAdapter         - Old message cleanup failed due to: SQL Exception: A lock could not be obtained within the time requested
ERROR 40XL1: A lock could not be obtained within the time requested
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java)
	at org.apache.derby.impl.services.locks.LockSet.lockObject(LockSet.java)
	at org.apache.derby.impl.services.locks.SinglePool.lockAnObject(SinglePool.java)
	at org.apache.derby.impl.services.locks.SinglePool.lockObject(SinglePool.java)
	at org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(RowLocking2.java)
	at org.apache.derby.impl.store.access.conglomerate.OpenConglomerate.lockPositionForRead(OpenConglomerate.java)
	at org.apache.derby.impl.store.access.conglomerate.GenericScanController.fetchRows(GenericScanController.java)
	at org.apache.derby.impl.store.access.heap.HeapScan.fetchNext(HeapScan.java)
	at org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(TableScanResultSet.java)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java)
	at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java)
	at org.apache.derby.impl.sql.execute.DeleteResultSet.collectAffectedRows(DeleteResultSet.java)
	at org.apache.derby.impl.sql.execute.DeleteResultSet.open(DeleteResultSet.java)
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java)
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDeleteOldMessages(DefaultJDBCAdapter.java:594)
	at org.activemq.store.jdbc.JDBCPersistenceAdapter.cleanup(JDBCPersistenceAdapter.java:252)
	at org.activemq.store.jdbc.JDBCPersistenceAdapter$1.run(JDBCPersistenceAdapter.java:241)
	at EDU.oswego.cs.dl.util.concurrent.ClockDaemon$RunLoop.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:534)
2005-07-18 17:39:08,362 [eckpoint Worker] WARN  JournalMessageStore            - Message could not be added to long term store: Failed to broker message: ID:ny-cap-33-1885-1121722466215-94:3730 in container: SQL Exception: A lock could not be obtained within the time requested
javax.jms.JMSException: Failed to broker message: ID:ny-cap-33-1885-1121722466215-94:3730 in container: SQL Exception: A lock could not be obtained within the time requested
	at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
	at org.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:74)
	at org.activemq.store.journal.JournalMessageStore$5.execute(JournalMessageStore.java:244)
	at org.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
	at org.activemq.store.journal.JournalMessageStore.checkpoint(JournalMessageStore.java:227)
	at org.activemq.store.journal.JournalTopicMessageStore.checkpoint(JournalTopicMessageStore.java:143)
	at org.activemq.store.journal.JournalPersistenceAdapter$3.run(JournalPersistenceAdapter.java:362)
	at EDU.oswego.cs.dl.util.concurrent.QueuedExecutor$RunLoop.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:534)
Caused by: SQL Exception: A lock could not be obtained within the time requested
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java)
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at org.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:190)
	at org.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:72)
	... 7 more
",WIN2000 2CPU ,mark1ewis,matej.kraus,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/05 22:04;gklyuzner;ASF.LICENSE.NOT.GRANTED--activemq.log;https://issues.apache.org/jira/secure/attachment/12460792/ASF.LICENSE.NOT.GRANTED--activemq.log","03/Mar/06 14:14;matej.kraus;ASF.LICENSE.NOT.GRANTED--threaddump.txt.gz;https://issues.apache.org/jira/secure/attachment/12460674/ASF.LICENSE.NOT.GRANTED--threaddump.txt.gz",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2005-07-21 04:31:36.0,,,false,,,,,,,,,,,,,,,,,49023,,,Fri Mar 03 14:14:34 UTC 2006,,,,,,,,"0|i0s2jz:",161890,,,,,,,,,,,,,,,,,,,"21/Jul/05 04:31;chirino;Clean up thread was dead locking with journal checkpoint since the checkpoint is done in 1 BIG transaction.  We now run the jdbc clean up from the checkpoint threads when a journal is used.","26/Sep/05 16:45;mark1ewis;This still occurs in ActiveMQ 3.1, even though it was marked as resolved in the 3.1 changelog.  The stack trace looks the same, see below.  This was observed while running a persistent message torture test, using derby + journal, on a single broker (no clustering).

16:57:47 INFO  Adding new client: qa_yosemite on transport: TcpTransportChannel: Socket[addr=/172.16.1.134,port=38777,localport=61616]
17:56:21 WARN  Old message cleanup failed due to: SQL Exception: A lock could not be obtained within the time requested
ERROR 40XL1: A lock could not be obtained within the time requested
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java)
        at org.apache.derby.impl.services.locks.LockSet.lockObject(LockSet.java)
        at org.apache.derby.impl.services.locks.SinglePool.lockAnObject(SinglePool.java)
        at org.apache.derby.impl.services.locks.SinglePool.lockObject(SinglePool.java)
        at org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(RowLocking2.java)
        at org.apache.derby.impl.store.access.conglomerate.OpenConglomerate.lockPositionForRead(OpenConglomerate.java)
        at org.apache.derby.impl.store.access.conglomerate.GenericScanController.fetchRows(GenericScanController.java)
        at org.apache.derby.impl.store.access.heap.HeapScan.fetchNext(HeapScan.java)
        at org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(TableScanResultSet.java)
        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java)
        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java)
        at org.apache.derby.impl.sql.execute.DeleteResultSet.collectAffectedRows(DeleteResultSet.java)
        at org.apache.derby.impl.sql.execute.DeleteResultSet.open(DeleteResultSet.java)
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java)
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java)
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java)
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java)
        at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
        at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
        at org.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDeleteOldMessages(DefaultJDBCAdapter.java:594)
        at org.activemq.store.jdbc.JDBCPersistenceAdapter.cleanup(JDBCPersistenceAdapter.java:255)
        at org.activemq.store.journal.JournalPersistenceAdapter$3.run(JournalPersistenceAdapter.java:394)
        at EDU.oswego.cs.dl.util.concurrent.QueuedExecutor$RunLoop.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:534)
java.lang.ArrayIndexOutOfBoundsException: 16383
        at org.activemq.io.impl.DefaultWireFormat.handleCachedValue(DefaultWireFormat.java:242)
        at org.activemq.io.impl.AbstractDefaultWireFormat.readPacket(AbstractDefaultWireFormat.java:225)
        at org.activemq.io.AbstractWireFormat.readPacket(AbstractWireFormat.java:235)
        at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:309)
        at java.lang.Thread.run(Thread.java:534)
","21/Dec/05 20:59;chirino;Issue has not been seen again in 4.x","03/Mar/06 14:14;matej.kraus;I have attached threaddump from version 3.2.2 for this situation
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid Acknowledgement on onMessage  inside a transaction,AMQ-578,12481472,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jlim,jlim,17/Feb/06 13:43,02/Mar/06 18:40,30/Jan/20 16:57,02/Mar/06 18:40,4.0 M4,,,,,,4.0 RC2,,,Broker,,,,1,"test case for this issue is at ..\usecases\PublishOnQueueConsumedMessageInTransactionTest . 

a  ""javax.jms.JMSException: Invalid acknowledgment:"" occurs when running a session.commit() inside onMessage() in a transaction.   This doesnt get replicated  replicated when using  consumer.receive().

The warning message is not thrown back to the client  and only displayed on the broker console.  To see the message modify the test case to connect to a remote broker.


http://forums.activemq.org/posts/list/364.page
http://forums.activemq.org/posts/list/320.page

",,jlim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-02 18:40:06.0,,,false,,,,,,,,,,,,,,,,,49221,,,Thu Mar 02 18:40:06 UTC 2006,,,,,,,,"0|i0tsqv:",171966,,,,,,,,,,,,,,,,,,,"02/Mar/06 18:40;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Package name mismatch in OpenWireScript.java in src/gram/java in activemq-core,AMQ-534,12481599,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,rnewson,rnewson,07/Feb/06 05:03,02/Mar/06 12:35,30/Jan/20 16:57,02/Mar/06 12:35,4.0 M4,,,,,,4.0 RC2,,,,,,,0,"OpenWireScript.java contains a package declaration for org.apache.activemq.openwire.tool but is in the directory hierarchy for org.activemq.openwire.tool.

I've no idea if it's important, but it's the only thing preventing me from compiling all activemq in Eclipse (after using 'maven eclipse' to generate the .classpath and .project files). ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-02 12:35:35.0,,,false,,,,,,,,,,,,,,,,,49189,,,Thu Mar 02 12:35:35 UTC 2006,,,,,,,,"0|i17za7:",254686,,,,,,,,,,,,,,,,,,,"02/Mar/06 12:35;jstrachan;Good catch, many thanks - fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransactionContext exception after successful executeBatch call,AMQ-556,12481583,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dgynn,dgynn,11/Feb/06 22:52,01/Mar/06 20:31,30/Jan/20 16:57,01/Mar/06 20:31,4.0 M4,,,,,,4.0 RC2,,,Message Store,,,,0,"The o.a.a.store.jdbc.TransactionContext does not correctly process the Statement.SUCCESS_NO_INFO return code from the executeBatch() method.
From http://java.sun.com/j2se/1.4.2/docs/api/java/sql/Statement.html#executeBatch()
""A value of SUCCESS_NO_INFO -- indicates that the command was processed successfully but that the number of rows affected is unknown""
Line 92 should be
                if ( rc[i]!= 1 && rc[i]!=Statement.SUCCESS_NO_INFO) {
instead of 
                if ( rc[i]!= 1 ) {
","Oracle JDBC Driver Version: 10.1.0.3.0
Oracle Database Version: Oracle8i Enterprise Edition Release 8.1.7.4.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Feb/06 22:52;dgynn;ASF.LICENSE.NOT.GRANTED--transactionContext.patch.txt;https://issues.apache.org/jira/secure/attachment/12460665/ASF.LICENSE.NOT.GRANTED--transactionContext.patch.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-03-01 20:31:59.0,,,false,,,,,,,,,,,,,,,,,49201,,,Wed Mar 01 20:31:59 UTC 2006,,,,,,,,"0|i17z7b:",254673,,,,,,,,,,,,,,,,,,,"01/Mar/06 20:31;jstrachan;Patch applied - many thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"bstat does not pass along settings, like the jmxuri, to the underlying query.  Patch enclosed.",AMQ-579,12481603,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,scottellsworth,scottellsworth,18/Feb/06 01:23,20/Feb/06 13:24,30/Jan/20 16:57,20/Feb/06 13:24,4.0 M4,,,,,,4.0 RC2,,,Broker,,,,0,"Problem:
---> scott@jvlinux (0.01)$ ./bstat localhost  --jmxurl service:jmx:rmi:///jndi/rmi://localhost:11099/jmxrmi
ACTIVEMQ_HOME: /opt/apps/activemq
ERROR: java.lang.RuntimeException: Failed to execute query task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.CommunicationException [Root exception is java.rmi.ConnectIOException: non-JRMP server at remote endpoint]
ERROR: java.lang.Exception: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.CommunicationException [Root exception is java.rmi.ConnectIOException: non-JRMP server at remote endpoint]

but the query does work:
---> scott@jvlinux (0.08)$ ./query --jmxurl service:jmx:rmi:///jndi/rmi://localhost:11099/jmxrmi --objname Type=*,BrokerName=localhost -xQTopic=ActiveMQ.Advisory.* --view Type,BrokerName,Destination,ConnectorName,EnqueueCount,DequeueCount,TotalEnqueueCount,TotalDequeueCount,Messages,TotalMessages,ConsumerCount,TotalConsumerCount,DispatchQueueSizeACTIVEMQ_HOME: /opt/apps/activemq
TotalConsumerCount = 4
Type = Broker
TotalMessages = 3
<and more>

Fix:
Change bstat

BROKER_NAME=$1
if [ -z ""$BROKER_NAME"" ] ; then
    BROKER_NAME=""*""
fi

# Select all components that belongs to the specified broker except advisory topics
# and display the specified attributes
QUERY_PARAM=""--objname Type=*,BrokerName=${BROKER_NAME} -xQTopic=ActiveMQ.Advisory.* --view Type,BrokerName,Destination,ConnectorName,EnqueueCount,DequeueCount,TotalEnqueueCount,TotalDequeueCount,Messages,TotalMessages,ConsumerCount,TotalConsumerCount,DispatchQueueSize""

if [ -n ""$CYGHOME"" ]; then
    exec ""$JAVACMD"" $ACTIVEMQ_DEBUG_OPTS $ACTIVEMQ_OPTS -classpath """" -Dactivemq.home=""${ACTIVEMQ_HOME}"" -Dcygwin.user.home=""$CYGHOME"" -jar ${ACTIVEMQ_HOME}/bin/run.jar $ACTIVEMQ_TASK $QUERY_PARAM
else
    exec ""$JAVACMD"" $ACTIVEMQ_DEBUG_OPTS $ACTIVEMQ_OPTS -classpath """" -Dactivemq.home=""${ACTIVEMQ_HOME}"" -jar ${ACTIVEMQ_HOME}/bin/run.jar $ACTIVEMQ_TASK $QUERY_PARAM
fi

to

BROKER_NAME=$1
if [ -z ""$BROKER_NAME"" ] ; then
    BROKER_NAME=""*""
fi

shift

OTHER_OPTS=$@
if [ -z ""$OTHER_OPTS"" ] ; then
    OTHER_OPTS=""""
fi

# Select all components that belongs to the specified broker except advisory topics
# and display the specified attributes
QUERY_PARAM=""--objname Type=*,BrokerName=${BROKER_NAME} -xQTopic=ActiveMQ.Advisory.* --view Type,BrokerName,Destination,ConnectorName,EnqueueCount,DequeueCount,TotalEnqueueCount,TotalDequeueCount,Messages,TotalMessages,ConsumerCount,TotalConsumerCount,DispatchQueueSize""

if [ -n ""$CYGHOME"" ]; then
    exec ""$JAVACMD"" $ACTIVEMQ_DEBUG_OPTS $ACTIVEMQ_OPTS -classpath """" -Dactivemq.home=""${ACTIVEMQ_HOME}"" -Dcygwin.user.home=""$CYGHOME"" -jar ${ACTIVEMQ_HOME}/bin/run.jar $ACTIVEMQ_TASK $QUERY_PARAM $OTHER_OPTS
else
    exec ""$JAVACMD"" $ACTIVEMQ_DEBUG_OPTS $ACTIVEMQ_OPTS -classpath """" -Dactivemq.home=""${ACTIVEMQ_HOME}"" -jar ${ACTIVEMQ_HOME}/bin/run.jar $ACTIVEMQ_TASK $QUERY_PARAM $OTHER_OPTS
fi
","linux, 1.5.0_05",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-20 13:24:02.0,,,false,,,,,,,,,,,,,,,,,49222,,,Mon Feb 20 13:24:02 UTC 2006,,,,,,,,"0|i17z3j:",254656,,,,,,,,,,,,,,,,,,,"20/Feb/06 13:24;aco;Patch applied.

Thanks Scott! :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't call commit when autocommit=true (4.0 snapshot and mySQL),AMQ-577,12481476,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,foconer,foconer,foconer,17/Feb/06 07:45,17/Feb/06 07:48,30/Jan/20 16:57,17/Feb/06 07:48,,,,,,,incubation,,,,,,,0,"Default configuration for MySql throws the error below on startup:

 ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService' defined in class path resource [activemq.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyAccessExceptionsException: PropertyAccessExceptionsException (1 errors); nested propertyAccessExceptions are: [org.springframework.beans.MethodInvocationException: Property 'transportConnectors' threw exception; nested exception is java.io.IOException: Can't call commit when autocommit=true] 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49220,,,Fri Feb 17 07:48:01 UTC 2006,,,,,,,,"0|i17z3r:",254657,,,,,,,,,,,,,,,,,,,"17/Feb/06 07:48;foconer;Updated the default configuration on conf/activemq.xml to set relaxAutoCommit to true. 
e.g. ""<property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/>""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bug in oracle JDBC driver,AMQ-574,12481460,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,16/Feb/06 11:55,16/Feb/06 12:38,30/Jan/20 16:57,16/Feb/06 12:38,,,,,,,4.0 RC2,,,,,,,0,"This was submitted by haliq on the mail list and forum...
http://forums.activemq.org/posts/list/215.page

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49217,,,2006-02-16 11:55:22.0,,,,,,,,"0|i17z4f:",254660,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The TransportStatusListener interface has been removed from version 4.0,AMQ-419,12481453,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,22/Nov/05 02:07,16/Feb/06 11:41,30/Jan/20 16:57,16/Feb/06 11:41,4.0,,,,,,4.0 M4,,,Broker,,,,0,"With the removal of the TransportStatusListener interface the client lost the ability to obtain useful information from connection/disconnect events.  Similar information can be garnered by creating a TransportListener object and chaining it to the ActiveMQConnection class.  Connection detection can be determined by trapping the BrokerInfo object in the onCommand method and disconnect detected in the onException method. However the BrokerInfo object does not contain the brokerName defined in the configuration file.

","w2k, jdk1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49105,,,Tue Nov 22 02:11:03 UTC 2005,,,,,,,,"0|i17yq7:",254596,,,,,,,,,,,,,,,,,,,"22/Nov/05 02:11;dennis@bevocal.com;Added the brokerName to the BrokerInfo command object.  Supporting classes changed to populate and marshall the added member.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad spelling: activemq.xml emlement journaledJBDC should be journaledJDBC,AMQ-428,12481443,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,28/Nov/05 20:18,16/Feb/06 11:38,30/Jan/20 16:57,16/Feb/06 11:38,4.0,,,,,,4.0 M4,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49112,,,Mon Nov 28 22:43:28 UTC 2005,,,,,,,,"0|i17yof:",254588,,,,,,,,,,,,,,,,,,,"28/Nov/05 22:43;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
m2 poms need patches,AMQ-461,12481405,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,maguro,bdudney,bdudney,30/Dec/05 22:35,16/Feb/06 11:38,30/Jan/20 16:57,16/Feb/06 11:38,,,,,,,4.0 M4,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Dec/05 22:35;bdudney;ASF.LICENSE.NOT.GRANTED--activemq-optional.patch;https://issues.apache.org/jira/secure/attachment/12460724/ASF.LICENSE.NOT.GRANTED--activemq-optional.patch","30/Dec/05 22:35;bdudney;ASF.LICENSE.NOT.GRANTED--activemq-systest.patch;https://issues.apache.org/jira/secure/attachment/12460760/ASF.LICENSE.NOT.GRANTED--activemq-systest.patch","30/Dec/05 22:35;bdudney;ASF.LICENSE.NOT.GRANTED--assembly.patch;https://issues.apache.org/jira/secure/attachment/12460530/ASF.LICENSE.NOT.GRANTED--assembly.patch",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2006-01-02 18:38:29.0,,,false,,,,,,,,,,,,,,,,,49136,,,Mon Jan 02 18:38:29 UTC 2006,,,,,,,,"0|i17z1r:",254648,,,,,,,,,,,,,,,,,,,"02/Jan/06 18:38;maguro;Applied.  The patch for systest was not applied since it now compiles under JDk14.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Demand based publishing does not work anymore,AMQ-494,12481541,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,gnodet,gnodet,18/Jan/06 21:48,16/Feb/06 11:37,30/Jan/20 16:57,16/Feb/06 11:37,4.0,,,,,,4.0 M4,,,Broker,,,,0,"See servicemix test case at
https://svn.apache.org/repos/asf/incubator/servicemix/trunk/servicemix-wsn2005/src/test/java/org/apache/servicemix/wsn/component/WSNComponentTest.java

When the consumer is created, the publisher is not advisored.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-01-24 16:04:03.0,,,false,,,,,,,,,,,,,,,,,49159,,,Tue Jan 24 16:04:03 UTC 2006,,,,,,,,"0|i16rlz:",247605,,,,,,,,,,,,,,,,,,,"24/Jan/06 16:04;chirino;Fixed.  Make sure you build a fresh SNAPSHOT to get the fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages sent to distributed queues are lost / delivered twice  and / or perfomance is severely degraded,AMQ-373,12481543,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,daggerrz,daggerrz,28/Sep/05 13:29,16/Feb/06 11:30,30/Jan/20 16:57,18/Oct/05 00:38,3.1,3.2,,,,,4.0 M4,,,Broker,,,,0,"Steps to reproduce:

- Set up a network of 2 or more brokers 
- Produce messages on 1 distributed queue on both brokers
- Start a consumer on the queue on each broker
- Stop one or more of the consumers while the producers produce messages

The test results are inconsistent depending varying from run to run and how many messages are sent, but three different error scenarios occur:

1. Messages are lost and not delivered
2. Messages are delivered very slowly
3. Messages are delivered twice

It is also worth noting that shutdown of networked brokers doesn't happen very cleanly.

A testcase is attached and although it's not as clean as it perhaps should be, it's simple enough to be easily understandable. Please notify me if you are having problems reproducing it or want it to be cleaned up. :)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/05 13:29;daggerrz;ASF.LICENSE.NOT.GRANTED--NetworkOfBrokersQueueTest.java;https://issues.apache.org/jira/secure/attachment/12460571/ASF.LICENSE.NOT.GRANTED--NetworkOfBrokersQueueTest.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49069,,,Wed Sep 28 13:30:15 UTC 2005,,,,,,,,"0|i17yjb:",254565,,,,,,,,,,,,,,,,,,,"28/Sep/05 13:30;daggerrz;Tested against 3.1 and a 3.2 snapshot from last week (build failure today). Results are somewhat different, but my guess is that this is more timing related than implementation related.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpTransportServer shutdown race condition,AMQ-425,12481538,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,memelet,memelet,26/Nov/05 23:02,16/Feb/06 11:30,30/Jan/20 16:57,05/Dec/05 11:29,4.0,,,,,,4.0 M4,,,Transport,,,,0,"t1. TransportConnector.stop is invoked
t1.1. which invokes TcpTransportServer.doStop, which does serverSocket.close
t1.2. stop then blocks on runner.join (waiting for the thread to complete)

in the mean time, the TcpTransportServer has a thread that is blocked in its run method on serverSocket.accept

t2.1. serverSocket.accept unblocks with a SocketException
t2.2. in the catch block, TransportServerThreadSupport.isClosed is invoked, which returns false because closed.set(true) is not invoked until t1.2 unblocks on the thread
t2.3 so onAcceptError(e) is invoked, which logs the error

by this time the thread at t1.2 is unbocked, sets the closed flag, etc, etc, and the broker finishes its shutdown.

Seems that there needs to be some flag that indicates the transport-server is in the process of shutting down, maybe something like:

TcpTransportServer.run():
    ...
    catch (Exception e) { 
        ...
        if (!isClosing()) {
            onAcceptError(e);
        }
    ...",4.0-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-12-05 11:29:37.0,,,false,,,,,,,,,,,,,,,,,49109,,,Mon Dec 05 11:29:37 UTC 2005,,,,,,,,"0|i17yp3:",254591,,,,,,,,,,,,,,,,,,,"05/Dec/05 11:29;jstrachan;Patch applied, many thanks Barry.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnection seems to close all of the sessions when the connection is closed,AMQ-449,12481375,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,21/Dec/05 12:51,16/Feb/06 11:30,30/Jan/20 16:57,21/Dec/05 12:54,4.0,,,,,,4.0 M4,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49126,,,Wed Dec 21 12:54:50 UTC 2005,,,,,,,,"0|i17yt3:",254609,,,,,,,,,,,,,,,,,,,"21/Dec/05 12:54;jstrachan;fixed now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When messages are queued to a session and the session becomes stale, undelivered messages are lost",AMQ-380,12481255,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gnodet,gnodet,gnodet,06/Oct/05 07:09,16/Feb/06 11:30,30/Jan/20 16:57,06/Oct/05 07:27,3.1,,,,,,4.0 M4,,,JCA Container,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49074,,,2005-10-06 07:09:40.0,,,,,,,,"0|i0s13b:",161653,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages aren't delivered in a clustered environment,AMQ-389,12481616,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,matthewv,matthewv,19/Oct/05 23:34,16/Feb/06 11:30,30/Jan/20 16:57,15/Nov/05 18:57,3.1,,,,,,4.0 M4,,,Broker,,,,0,"Within a clustered environment, messages that have been sent to a Queue can end up stuck in the broker and are never delivered to the connected consumer.

Suppose, we have a cluster of two JMS brokers, Node 0 and Node 1, and that there is an active producer and an active consumer connected to Node 0, that are producing and consuming from Queue, Q. i.e. 

Producer 

|

Node 0 <-----> Node 1

|

Consumer

And the following happens for a Message, M, sent to Queue, Q:

I) Node 0 receives message M from the producer 
II) Node 1 consumes message M from Node 0
iii) Node 0 consumes message M back from Node 1
iv) Node 1 attempts to consume message M from Node 0 again.

Then, the message will end up being undelivered. It will still be in the MessageStore for Node0, but will never be dispatched to any consumer, unless the broker is restarted.

The reason this happens, is that during step iv) the message wil be dispatched to the subscriber represented by Node 1, and thus Node 0 will believe the message has successfully been sent, but Node 1's subscriber will never actually send the message to Node 1, since the anti-cycle logic in the BrokerClientImpl::send() method will drop the packet silently.

A simple possible fix is:

Alter the method signature for BrokerClient::dispatch() to return a boolean iff only it can successfully dispatch the message to the actual consumer. The same change needs to be made to the DurableQueueSubscription::doDispatch() method, to propagate this information.

The DurableQueueBoundedMessageContainer::run() method can then be altered so it only considers a message dispatched if one of its subscribers doDispatch() methods returns true, otherwise it will retain the message.

I have attached the modified source files in the patch.zip.","Windows XP, Java  1.4.1_01 (Sun)",matthewv,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Oct/05 23:34;matthewv;ASF.LICENSE.NOT.GRANTED--patch.zip;https://issues.apache.org/jira/secure/attachment/12460539/ASF.LICENSE.NOT.GRANTED--patch.zip",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2005-11-15 18:57:57.0,,,false,,,,,,,,,,,,,,,,,49081,,,Tue Nov 15 18:57:57 UTC 2005,,,,,,,,"0|i0s2lb:",161896,,,,,,,,,,,,,,,,,,,"19/Oct/05 23:39;matthewv;One problem with the fix, that I forgot to mention, is that the logic for checking the cycle is now replicated in the BrokerClientImpl::dispatch() method. This logic could be factored out to a common method if BrokerClientImpl::send() still needs to check this, or removed from BrokerClientImpl::send() altogether, if it doesn't need to check for this other than during a dispatch.","15/Nov/05 18:57;jstrachan;This is now resolved in ActiveMQ 4.0 as we have a DemandBasedForwardingBridge which only forwards messages to another broker when there is a consumer for it",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"High priority message blocks low priority message being consumed by consumers, who is only interested in the message that happen to have low prority",AMQ-334,12481572,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,activemq_jira,activemq_jira,22/Aug/05 20:44,16/Feb/06 11:30,30/Jan/20 16:57,05/Dec/05 11:34,,,,,,,4.0 M4,,,Broker,,,,0,"A message consumer will not receive message that matches its message selector definition, until all other messages with higher priority have been consumerd from the queue.  

For example, say our messages have a property which can have one of two values - 'S' and 'N'. We have a queue where, at the moment, there is only one consumer, who is set up to consume only 'S' messages.  We've tested
this with two scenarios: 
1)       Place an 'N' message in the queue, followed by an 'S'.  No
priority is assigned to the messages.  The consumer is able to receive
the 'S' message, even though the 'N' message is ahead of it in the
queue.  This is the behavior that we find logical.

2)       Place an 'N' message in the queue with a priority of 4,
 followed by an 'S' with a priority of 2.  Only difference from
scenario 1 is that priorities have been assigned to messages.  Now the
consumer cannot receive any messages ¡V it blocks until we add a
consumer that consumes the 'N' type message.  This behavior seems to be a bug. 
","Window, Java1.5, ActiveMQ3.1M6",activemq_jira,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-12-05 11:34:05.0,,,false,,,,,,,,,,,,,,,,,43728,,,Mon Dec 05 11:34:05 UTC 2005,,,,,,,,"0|i0s2kf:",161892,,,,,,,,,,,,,,,,,,,"05/Dec/05 11:34;jstrachan;This should now be fixed in 4.x. If its not could you please create a JUnit test case that demonstrates it not working & we'll fix it for you.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Can't connect ActiveMQ and recive message when report: queue is full,waiting for it to be dequeued.",AMQ-402,12481528,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,taoyonggang,taoyonggang,03/Nov/05 03:16,16/Feb/06 11:30,30/Jan/20 16:57,15/Nov/05 18:10,3.2,,,,,,4.0 M4,,,,,,,0,"I am waiting for one hour to recive message,but can't recive message.

How to set journal size in conf file?",winx[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-11-15 18:10:21.0,,,false,,,,,,,,,,,,,,,,,49091,,,Tue Nov 15 18:10:21 UTC 2005,,,,,,,,"0|i0s19z:",161683,,,,,,,,,,,,,,,,,,,"03/Nov/05 07:32;taoyonggang;I have run jms client 4 hours,but can't recive message when queue is full .","03/Nov/05 09:36;taoyonggang;ActiveMQ Message Broker (http://activemq.org/)

Loading Mesaage Broker from activemq.xml on the CLASSPATH
17:29:51 INFO  JDK 1.4+ collections available
17:29:51 INFO  ActiveMQ 3.2.1-SNAPSHOT JMS Message Broker (tao-2) is starting
17:29:51 INFO  For help or more information please see: http://www.logicblaze.co
m
17:29:53 INFO  Database driver recognized: [apache_derby_embedded_jdbc_driver]
17:29:54 INFO  Could not create JDBC tables; they could already exist. Failure w
as: CREATE TABLE ACTIVEMQ_MSGS(ID INTEGER NOT NULL, CONTAINER VARCHAR(250), MSGI
D VARCHAR(250), MSG BLOB, PRIMARY KEY ( ID ) ) Message: Table/View 'ACTIVEMQ_MSG
S' already exists in Schema 'APP'. SQLState: X0Y32 Vendor code: 20000
17:29:55 INFO  Could not create JDBC tables; they could already exist. Failure w
as: CREATE TABLE ACTIVEMQ_TXS(XID VARCHAR(250) NOT NULL, PRIMARY KEY ( XID )) Me
ssage: Table/View 'ACTIVEMQ_TXS' already exists in Schema 'APP'. SQLState: X0Y32
 Vendor code: 20000
17:29:55 INFO  Could not create JDBC tables; they could already exist. Failure w
as: CREATE TABLE ACTIVEMQ_ACKS(SUB VARCHAR(250) NOT NULL, CONTAINER VARCHAR(250)
 NOT NULL, LAST_ACKED_ID INTEGER, SE_ID INTEGER, SE_CLIENT_ID VARCHAR(250), SE_C
ONSUMER_NAME VARCHAR(250), SE_SELECTOR VARCHAR(250), PRIMARY KEY ( SUB, CONTAINE
R )) Message: Table/View 'ACTIVEMQ_ACKS' already exists in Schema 'APP'. SQLStat
e: X0Y32 Vendor code: 20000
17:29:56 INFO  Could not create JDBC tables; they could already exist. Failure w
as: ALTER TABLE ACTIVEMQ_MSGS ADD EXPIRATION BIGINT Message: Column 'EXPIRATION'
 already exists in Table/View 'APP.ACTIVEMQ_MSGS'. SQLState: X0Y32 Vendor code:
20000
17:29:56 INFO  Could not create JDBC tables; they could already exist. Failure w
as: ALTER TABLE ACTIVEMQ_MSGS ADD SENT_TO_DEADLETTER CHAR(1) Message: Column 'SE
NT_TO_DEADLETTER' already exists in Table/View 'APP.ACTIVEMQ_MSGS'. SQLState: X0
Y32 Vendor code: 20000
17:29:56 INFO  Opening journal.
17:30:02 INFO  Opened journal: Active Journal: using 2 x 20.0 Megs at: ..\var\jo
urnal
17:30:02 INFO  Journal Recovery Started.
17:30:02 INFO  Journal Recovered: 0 message(s) in transactions recovered.
17:30:02 INFO  Listening for connections at: tcp://tao:61616
17:30:02 INFO  ActiveMQ connector started: TcpTransportServerChannel@tcp://tao:6
1616
17:30:02 INFO  Listening for connections at: tcp://128.64.7.127:62001
17:30:02 INFO  ActiveMQ connector started: TcpTransportServerChannel@tcp://128.6
4.7.127:62001
17:30:02 INFO  Listening for connections at: stomp://tao:61626
17:30:02 INFO  ActiveMQ connector started: TcpTransportServerChannel@stomp://tao
:61626
17:30:02 INFO  ActiveMQ JMS Message Broker (tao-2) has started
17:30:02 INFO  Listening for connections at: vm://tao-2
17:30:02 INFO  ActiveMQ connector started: VmTransportServerChannel@vm://tao-2
17:30:02 INFO  Embedded JMS Broker has started
17:30:03 INFO  Adding new client: ID:tao-2913-1131010148500-7:0 on transport: Vm
TransportChannel: null
17:30:03 WARN  No remote broker name available!
17:30:24 INFO  Could not connect to: tcp://128.64.7.27:62001. Reason: javax.jms.
JMSException: Initialization of TcpTransportChannel failed. URI was: tcp://128.6
4.7.27:62001 Reason: java.net.ConnectException: Connection timed out: connect
17:30:24 INFO  Could not connect; sleeping for: 2000 millis and trying again
17:30:29 INFO  Adding new client: ID:tao-2917-1131010229547-3:0 on transport: Tc
pTransportChannel: Socket[addr=/127.0.0.1,port=2918,localport=61616]
17:30:47 INFO  Could not connect to: tcp://128.64.7.27:62001. Reason: javax.jms.
JMSException: Initialization of TcpTransportChannel failed. URI was: tcp://128.6
4.7.27:62001 Reason: java.net.ConnectException: Connection timed out: connect
17:30:47 INFO  Could not connect; sleeping for: 2000 millis and trying again
ActiveMQ Message Broker (http://activemq.org/)

Loading Mesaage Broker from activemq.xml on the CLASSPATH
17:29:51 INFO  JDK 1.4+ collections available
17:29:51 INFO  ActiveMQ 3.2.1-SNAPSHOT JMS Message Broker (tao-2) is starting
17:29:51 INFO  For help or more information please see: http://www.logicblaze.co
m
17:29:53 INFO  Database driver recognized: [apache_derby_embedded_jdbc_driver]
17:29:54 INFO  Could not create JDBC tables; they could already exist. Failure w
as: CREATE TABLE ACTIVEMQ_MSGS(ID INTEGER NOT NULL, CONTAINER VARCHAR(250), MSGI
D VARCHAR(250), MSG BLOB, PRIMARY KEY ( ID ) ) Message: Table/View 'ACTIVEMQ_MSG
S' already exists in Schema 'APP'. SQLState: X0Y32 Vendor code: 20000
17:29:55 INFO  Could not create JDBC tables; they could already exist. Failure w
as: CREATE TABLE ACTIVEMQ_TXS(XID VARCHAR(250) NOT NULL, PRIMARY KEY ( XID )) Me
ssage: Table/View 'ACTIVEMQ_TXS' already exists in Schema 'APP'. SQLState: X0Y32
 Vendor code: 20000
17:29:55 INFO  Could not create JDBC tables; they could already exist. Failure w
as: CREATE TABLE ACTIVEMQ_ACKS(SUB VARCHAR(250) NOT NULL, CONTAINER VARCHAR(250)
 NOT NULL, LAST_ACKED_ID INTEGER, SE_ID INTEGER, SE_CLIENT_ID VARCHAR(250), SE_C
ONSUMER_NAME VARCHAR(250), SE_SELECTOR VARCHAR(250), PRIMARY KEY ( SUB, CONTAINE
R )) Message: Table/View 'ACTIVEMQ_ACKS' already exists in Schema 'APP'. SQLStat
e: X0Y32 Vendor code: 20000
17:29:56 INFO  Could not create JDBC tables; they could already exist. Failure w
as: ALTER TABLE ACTIVEMQ_MSGS ADD EXPIRATION BIGINT Message: Column 'EXPIRATION'
 already exists in Table/View 'APP.ACTIVEMQ_MSGS'. SQLState: X0Y32 Vendor code:
20000
17:29:56 INFO  Could not create JDBC tables; they could already exist. Failure w
as: ALTER TABLE ACTIVEMQ_MSGS ADD SENT_TO_DEADLETTER CHAR(1) Message: Column 'SE
NT_TO_DEADLETTER' already exists in Table/View 'APP.ACTIVEMQ_MSGS'. SQLState: X0
Y32 Vendor code: 20000
17:29:56 INFO  Opening journal.
17:30:02 INFO  Opened journal: Active Journal: using 2 x 20.0 Megs at: ..\var\jo
urnal
17:30:02 INFO  Journal Recovery Started.
17:30:02 INFO  Journal Recovered: 0 message(s) in transactions recovered.
17:30:02 INFO  Listening for connections at: tcp://tao:61616
17:30:02 INFO  ActiveMQ connector started: TcpTransportServerChannel@tcp://tao:6
1616
17:30:02 INFO  Listening for connections at: tcp://128.64.7.127:62001
17:30:02 INFO  ActiveMQ connector started: TcpTransportServerChannel@tcp://128.6
4.7.127:62001
17:30:02 INFO  Listening for connections at: stomp://tao:61626
17:30:02 INFO  ActiveMQ connector started: TcpTransportServerChannel@stomp://tao
:61626
17:30:02 INFO  ActiveMQ JMS Message Broker (tao-2) has started
17:30:02 INFO  Listening for connections at: vm://tao-2
17:30:02 INFO  ActiveMQ connector started: VmTransportServerChannel@vm://tao-2
17:30:02 INFO  Embedded JMS Broker has started
17:30:03 INFO  Adding new client: ID:tao-2913-1131010148500-7:0 on transport: Vm
TransportChannel: null
17:30:03 WARN  No remote broker name available!
17:30:24 INFO  Could not connect to: tcp://128.64.7.27:62001. Reason: javax.jms.
JMSException: Initialization of TcpTransportChannel failed. URI was: tcp://128.6
4.7.27:62001 Reason: java.net.ConnectException: Connection timed out: connect
17:30:24 INFO  Could not connect; sleeping for: 2000 millis and trying again
17:30:29 INFO  Adding new client: ID:tao-2917-1131010229547-3:0 on transport: Tc
pTransportChannel: Socket[addr=/127.0.0.1,port=2918,localport=61616]
17:32:21 WARN  Queue is full, waiting for it to be dequeued.
17:32:21 WARN  Queue is full, waiting for it to be dequeued.
17:32:21 WARN  Queue is full, waiting for it to be dequeued.
17:32:21 WARN  Queue is full, waiting for it to be dequeued.
17:32:21 WARN  memory limit low - forced to remove expired messages: SD.SRTOHWRQ

17:32:21 WARN  Queue is full, waiting for it to be dequeued.
17:32:22 WARN  Queue is full, waiting for it to be dequeued.
17:32:22 WARN  Queue is full, waiting for it to be dequeued.
17:32:22 INFO  Could not connect to: tcp://128.64.7.27:62001. Reason: javax.jms.
JMSException: Initialization of TcpTransportChannel failed. URI was: tcp://128.6
4.7.27:62001 Reason: java.net.ConnectException: Connection timed out: connect
17:32:22 INFO  Could not connect; sleeping for: 2000 millis and trying again
17:32:22 WARN  Queue is full, waiting for it to be dequeued.
17:32:22 WARN  Queue is full, waiting for it to be dequeued.
17:32:22 WARN  Queue is full, waiting for it to be dequeued.
17:32:22 WARN  Queue is full, waiting for it to be dequeued.
17:32:22 WARN  Queue is full, waiting for it to be dequeued.
17:32:22 WARN  Queue is full, waiting for it to be dequeued.


then message can't recive


","03/Nov/05 09:50;taoyonggang;I used network chanel with two jms server,one send and other one recive .My reciving was closed for a long time.And then open reciving.Now  can't recive message.","15/Nov/05 18:10;jstrachan;This issue is now resolved in 4.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Conflicts between execution script and o.a.a.broker.Main class,AMQ-500,12481535,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,20/Jan/06 17:53,16/Feb/06 11:30,30/Jan/20 16:57,24/Jan/06 01:53,4.0,,,,,,4.0 M4,,,Broker,,,,0,"I have not started to look at unix based start script, but I am finding some interesting issues with the one for use under Windows (activemq.bat).

This script is using the java jar option that points to the ACTIVEMQ_HOME/bin/run.jar file.  The manifest points to the o.a.a.broker.Main class.  

Use of this execution option and review of the o.a.a.broker.Main class (where it sets up a classloader with classpath pointing to the conf, lib and lib/optional directories would lead one to believe that the o.a.a.broker.Main class would be loaded from run.jar.  This is not the case as the script also defines the java property of java.ext.dirs to append the activemq directories.  While it also sets the command line classpath option, this is useless as including all the activemq directories will already include all activemq classes at the base classloader. This also includes a copy of the o.a.a.broker.Main class that is include in the uber activemq-4.0.jar in the ACTIVEMQ_HOME directory.

Also with the definition java.ext.dirs this will total obviate any setting of classpath information on the classloader  (auto or parameter specified) by the o.a.a.broker.Main class.

Obviously something is not right here.  If  o.a.a.broker.Main class is suppose to be setting up the class loader, why is the script setting the java.ext.dir property and the classpath option on the command line?
",w2k and linux java 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49163,,,Tue Jan 24 01:53:30 UTC 2006,,,,,,,,"0|i17yxb:",254628,,,,,,,,,,,,,,,,,,,"24/Jan/06 01:53;dennis@bevocal.com;I have made reconcilations between the start script for windows and the Main class such that the --extdir option works as expected.  Both start scripts have definitions for the use of the SUN remote jmx options, but I left it commented out for user discresionary use.  BTW, I set the default port for the process registry to 1616.  I found a host that already had a registry open on the default port of 1099 and found I could not start the broker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure to forward message on temporary topic across a network bridge,AMQ-328,12481406,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,17/Aug/05 17:21,16/Feb/06 11:30,30/Jan/20 16:57,11/Jan/06 15:40,3.1,,,,,,4.0 M4,,,Broker,,,,0,"Using a topic requestor with requestor on one first broker and replier on second broker.  First reply message seems to work, but second is stopped prior to return across the bridge. ",w2k & RH 9.0 jdk1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/05 01:30;dennis@bevocal.com;ASF.LICENSE.NOT.GRANTED--AMQ-328.tar.gz;https://issues.apache.org/jira/secure/attachment/12460576/ASF.LICENSE.NOT.GRANTED--AMQ-328.tar.gz",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-01-11 15:40:23.0,,,false,,,,,,,,,,,,,,,,,49037,,,Wed Jan 11 15:40:23 UTC 2006,,,,,,,,"0|i0s10f:",161640,,,,,,,,,,,,,,,,,,,"31/Aug/05 01:30;dennis@bevocal.com;The attachment are scripts, classes and library needed to duplicated the problem.","31/Aug/05 01:32;dennis@bevocal.com;Run instructions:

The goal is to run three clients on a cluster of two networked brokers.

Prequirements:

Two stand-alone brokers with network connections to each other.  The client scripts assume that both brokers on localhost using ports 61616 and 62626.

ACTIVEMQ_HOME environment variable has been defined.

Using SVN HEAD (built as 3.2-SNAPSHOT)


Steps to reproduce problems.

1) start script replier1.cmd (connects using port 62626)
2) start script replier2.cmd (connects using port 62626)
3) start script requestor.cmd (connects using port 61616)

The requestor uses a single instance of a TopicRequestor to make three requests in sequence.  All request are sent on the same Topic and expect the reply to use the same temporary Topic.

Both repliers will receive a copy of each request, but  only one reply will respond (base on the content of the request). The replys should be generated in the following order:

Replier1,Replier2,Replier1

However, the when Replier2 attempts to send its reply, it receives a message indicating the destination has been destroyed. The requestor will eventually time out and make the third request to which Replier1 has no problem using the temporary destination that was reported as destroyed to Replier2.

Note, that if the script for the requestor is changed to use the same broker as the repliers, then Replier2 the test passes without problem.

It seems that if a temporary destination on a remote broker is used once by one connection, it will not be available for use by any other connection on that same broker.
","11/Jan/06 15:40;jstrachan;We've tried to reproduce this on 4.x...

- Added org.apache.activemq.assembly.usecases.TwoBrokerQueueClientsReconnectTest.java 
- Setup is a two broker network, destination is a queue, each broker has a consumer, one producer sends messages to one broker, consumer attempts to receive the messages.

And everything seems to work fine on 4.x. If you can think of a way to tweak the test case to fail let us know & we can reopen this issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"High priority message blocks low priority message being consumed by consumers, who is only interested in the message that happen to have low prority",AMQ-337,12481504,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,activemq_jira,activemq_jira,24/Aug/05 01:04,16/Feb/06 11:30,30/Jan/20 16:57,05/Dec/05 10:24,,,,,,,4.0 M4,,,Broker,,,,0,"This is re-submission of bug AMQ-334, since the link to AMQ-334 is broken on Jira.
 
A message consumer will not receive message that matches its message selector definition, until all other messages with higher priority have been consumerd from the queue.

For example, say our messages have a property which can have one of two values - 'S' and 'N'. We have a queue where, at the moment, there is only one consumer, who is set up to consume only 'S' messages.  We've tested
this with two scenarios:
1)       Place an 'N' message in the queue, followed by an 'S'.  No
priority is assigned to the messages.  The consumer is able to receive
the 'S' message, even though the 'N' message is ahead of it in the
queue.  This is the behavior that we find logical.

2)       Place an 'N' message in the queue with a priority of 4,
 followed by an 'S' with a priority of 2.  Only difference from
scenario 1 is that priorities have been assigned to messages.  Now the
consumer cannot receive any messages ¡V it blocks until we add a
consumer that consumes the 'N' type message.  This behavior seems to be a bug.


--
This message is automatica","Windows, Java1.5, ActiveMQ3.1M6",,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-334,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-08-26 06:30:28.0,,,false,,,,,,,,,,,,,,,,,43727,,,Mon Dec 05 10:24:54 UTC 2005,,,,,,,,"0|i17yh3:",254555,,,,,,,,,,,,,,,,,,,"26/Aug/05 06:30;jstrachan;We'll be rearchitecting the dispatching policies in 4.x to make things like this much easier to fix","09/Sep/05 18:23;bayamos;Is there an approximate expected release date for at least a beta of 4.0 which fixes this bug?  We are trying to ascertain whether we can use ActiveMQ now while we are developing and wait for the fix.","05/Dec/05 10:24;jstrachan;This should now be fixed in 4.0. If you are still experiencing problems with 4.0-M2 could you submit a test case please?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
embedded brokers seem a little broken,AMQ-77,12481492,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,02/Sep/04 14:22,16/Feb/06 11:30,30/Jan/20 16:57,05/Dec/05 11:37,,,,,,,4.0 M4,,,JMS client,,,,1,"we should be able to use an embedded broker in an ActiveMQConnectionFactory and use any URL to connect to it; yet there seems a bug somewhere.

e.g. if I use

factory.brokerURL = ""tcp://localhost:62001""

and use a Spring embedded broker container factory, we get a socket in use.

Is it trying to make 2 brokers maybe?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-09-21 04:23:44.0,,,false,,,,,,,,,,,,,,,,,48818,,,Mon Dec 05 11:37:21 UTC 2005,,,,,,,,"0|i17xzb:",254475,,,,,,,,,,,,,,,,,,,"21/Sep/04 04:23;cameronbraid;Another related issue si when running two separate JVM's with both having an embedded broker, when the second one starts up, the following execption is thrown.

org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: Bind to tcp://localhost:61616 failed: Address already in use
javax.jms.JMSException: Bind to tcp://localhost:61616 failed: Address already in use
        at org.codehaus.activemq.transport.tcp.TcpTransportServerChannel.<init>(TcpTransportServerChannel.java:74)
        at org.codehaus.activemq.transport.tcp.TcpTransportServerChannelFactory.create(TcpTransportServerChannelFactory.java:43)
        at org.codehaus.activemq.transport.TransportServerChannelProvider.create(TransportServerChannelProvider.java:45)
        at org.codehaus.activemq.broker.impl.BrokerConnectorImpl.createTransportServerChannel(BrokerConnectorImpl.java:379)
        at org.codehaus.activemq.broker.impl.BrokerConnectorImpl.<init>(BrokerConnectorImpl.java:61)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createBrokerConnector(ActiveMQConnectionFactory.java:428)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createTransportChannel(ActiveMQConnectionFactory.java:405)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:301)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:291)
        at org.springframework.jms.connection.SingleConnectionFactory.doCreateConnection(SingleConnectionFactory.java:150)
        at org.springframework.jms.connection.SingleConnectionFactory.init(SingleConnectionFactory.java:135)
        at org.springframework.jms.connection.SingleConnectionFactory.createConnection(SingleConnectionFactory.java:169)
        at org.springframework.jms.core.JmsTemplate.createConnection(JmsTemplate.java:404)
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:499)
        at org.springframework.jms.core.JmsTemplate.receive(JmsTemplate.java:663)
...


I am using a spring configured embedded broker with :

<beans>
    <broker>
        <connector>
            <serverTransport uri=""vm://localhost""/>
        </connector>
        <persistence>
            <berkeleyDbPersistence directory=""berkeleydb""/>
        </persistence>
    </broker>
</beans>

I was under the impression that TCP sockets wouldn't be used with this setup.","21/Sep/04 04:24;cameronbraid;here is my applicationContext.xml excerpt :

    <bean id=""activeMqConnectionFactory"" class=""org.codehaus.activemq.ActiveMQConnectionFactory"">
        <property name=""useEmbeddedBroker""><value>true</value></property>
        <property name=""brokerContainerFactory"">
            <bean class=""org.codehaus.activemq.spring.SpringBrokerContainerFactory"">
                <constructor-arg index='0'><value>classpath:activeMQ-broker.xml</value></constructor-arg>
            </bean>
        </property>
    </bean>","21/Sep/04 14:58;jstrachan;Cameron, if you specify the brokerURL property in your ConnectionFactory Spring configuration this should fix this issue.

brokerURL defaults to localhost:61616. So if you set the embedded flag and then try to connect with the JMS broker it will automatically start a TCP connector.

setting the brokerURL to something like vm://localhost will avoid this.

Note that you don't need to specifiy a vm:.// connector in the broker XML, as these are lightweight objects created on demand. (Though it does no harm having it in the XML).","22/Sep/04 07:55;jstrachan;e.g. Cameron, if you try this excerpt in your Spring config it should work...

    <bean id=""activeMqConnectionFactory"" class=""org.codehaus.activemq.ActiveMQConnectionFactory""> 
        <property name=""useEmbeddedBroker""><value>true</value></property> 
        <property name=""brokerURL""><value>vm://localhost</value></property> 
        <property name=""brokerContainerFactory""> 
            <bean class=""org.codehaus.activemq.spring.SpringBrokerContainerFactory""> 
                <constructor-arg index='0'><value>classpath:activeMQ-broker.xml</value></constructor-arg> 
            </bean> 
        </property> 
    </bean>","05/Dec/05 11:37;jstrachan;These issues are resolved in 4.x once and for all",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC Message Store fails to remove duplicate messages,AMQ-390,12481452,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,matthewv,matthewv,19/Oct/05 23:58,16/Feb/06 11:30,30/Jan/20 16:57,15/Jan/06 00:32,3.1,,,,,,4.0 M4,,,Message Store,,,,0,"If the same message is added to, and then removed from, the JDBCMessageStore, by two different threads, it is possible that both threads will attempt to delete the same row, leaving the second one behind.

This is because the same sequence number is retrieved from the JDBCMessageStore::getMessageSequenceId() method.

i.e. suppose we have MessageA stored in the MessageStore with sequence numbers 205 and 210 and the following occurs:

Thread One  - removeMessage(MessageA)
Thread Two - removeMessage(MessageA)
Thread One - getMessageSequenceId(MessageA) --> returns top row i.e. sequence number 205
Thread Two - getMessageSequenceId(MessageA) --> returns top row i.e. sequence number 205
Thread One - Deletes row with sequence number 205
Thread Two - Attempts to delete row with sequence number 205

This situation can eventuate in a clustered environment when the message is bounced between two nodes before being sent to an actual consumer, and the message acknowledgement is sufficiently delayed.

i.e.  Suppose we have:

Node0 <---> Node1

|

Consumer

And the following happens:

(i) Message is sent from Node 0 to Node 1
(ii) Message is sent back from Node 1 to Node 0
(iii) Message is sent from Node 0 to consumer, C
(iv) Ack arrives from consumer C and from Node 1.

The best possible fix  would be to ensure that acknowledgements always contain the sequence number of the message that they're acknowledging, thus ensuring the JDBCMessageStore doesn't have to try and determine the sequence number of the message to remove.

Another possible fix, is for the JDBCMessageStore to remove the topmost remaining row in the store for the row with the matching message id, by pushing the sequence id lookup into a nested delete query. That would prevent the two Threads from attempting to delete the same row. This isn't the best solution but works in a situation where the sequence number is never provided with an acknowledgement.
","Windows XP, Java 1.4.1_01 (Sun)",matthewv,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-01-15 00:20:53.0,,,false,,,,,,,,,,,,,,,,,49082,,,Sun Jan 15 00:32:50 UTC 2006,,,,,,,,"0|i0s2hz:",161881,,,,,,,,,,,,,,,,,,,"15/Jan/06 00:20;chirino;What do you think about this issue?  Sounds more like a network looping issue.","15/Jan/06 00:32;rajdavies;This is fixed in ActiveMQ 4.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
verify  the  activemq  Web Samples   works properly,AMQ-503,12481442,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,pvillacorta,jlim,jlim,24/Jan/06 10:30,16/Feb/06 11:30,30/Jan/20 16:57,31/Jan/06 05:01,,,,,,,4.0 M4,,,,,,,0,"The chat and send examples  seems to have some bugs.  Also, check the generated war file if it contains all the required files (ie. web.xml)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-01-31 03:01:16.0,,,false,,,,,,,,,,,,,,,,,49166,,,Tue Jan 31 05:01:49 UTC 2006,,,,,,,,"0|i17ywv:",254626,,,,,,,,,,,,,,,,,,,"24/Jan/06 11:05;jlim;refer to http://docs.codehaus.org/display/ACTIVEMQ/Web+Samples. Pleas  add a comment when it's fixed.","31/Jan/06 03:01;pvillacorta;Some urls in the web pages still had ""jms"" instead of ""amq"". Fixed these.

Generated war file doesn't include web files (javascript files, web.xml, etc)","31/Jan/06 05:01;pvillacorta;Added ""maven.war.src"" property. Web files are now included in the war file",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ManagedConnectionFactoryTest  fails,AMQ-344,12481534,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pvillacorta,pvillacorta,02/Sep/05 02:05,16/Feb/06 11:30,30/Jan/20 16:57,15/Nov/05 18:56,3.2,,,,,,4.0 M4,,,,,,,0,"ManagedConnectionFactoryTest fails. The test was run on a Dell Inspiron 8600 with Windows XP:

Testcase: testConnectionFactoryConnectionMatching(org.activemq.ra.ManagedConnectionFactoryTest): Caused an ERROR
Journal is closed.
javax.jms.JMSException: Journal is closed.
at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
at org.activemq.util.ExceptionTemplate.throwJMSException(ExceptionTemplate.java:72)
at org.activemq.broker.impl.DefaultBroker.stop(DefaultBroker.java:210)
at org.activemq.broker.impl.BrokerContainerImpl.stop(BrokerContainerImpl.java:266)
at org.activemq.ra.ManagedConnectionFactoryTest.tearDown(ManagedConnectionFactoryTest.java:92)
Caused by: java.lang.IllegalStateException: Journal is closed.
at org.activemq.store.journal.JournalPersistenceAdapter.checkpoint(JournalPersistenceAdapter.java:314)
at org.activemq.store.journal.JournalPersistenceAdapter.stop(JournalPersistenceAdapter.java:214)
at org.activemq.store.cache.CachePersistenceAdapter.stop(CachePersistenceAdapter.java:85)
at org.activemq.broker.impl.DefaultBroker$3.execute(DefaultBroker.java:206)
at org.activemq.util.ExceptionTemplate.run(ExceptionTemplate.java:41)
at org.activemq.broker.impl.DefaultBroker.stop(DefaultBroker.java:204)
... 11 more ",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-11-15 18:56:47.0,,,false,,,,,,,,,,,,,,,,,49049,,,Tue Nov 15 18:56:47 UTC 2005,,,,,,,,"0|i17ylz:",254577,,,,,,,,,,,,,,,,,,,"15/Nov/05 18:56;jstrachan;seems fine now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to specify alternate location for activemq.xml file,AMQ-413,12481412,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,16/Nov/05 19:47,16/Feb/06 11:30,30/Jan/20 16:57,05/Dec/05 11:39,4.0,,,,,,4.0 M4,,,Broker,,,,0,"The org.activemq.broker.Main class automatically adds the <activemq.home>/conf, <activemq.home>/lib and <activemq.home>/lib/optional directories to the extentions to be added to the context classloader.  While adding the library directories does not really cause a problem, automaticalling including the conf directory will insure that the configuration file is always found in that directory.  I had previously used an explicit ordering of the -classpath to locate the configuration file in an alternate location.

I would suggest removal of the auto add of the conf directory and use the -classpath entry in the script to add this directory.  That at least give the option of changing the script. ","win2k, jdk1.5.0_05",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-11-17 12:45:16.0,,,false,,,,,,,,,,,,,,,,,49100,,,Mon Dec 05 11:39:07 UTC 2005,,,,,,,,"0|i17yqv:",254599,,,,,,,,,,,,,,,,,,,"17/Nov/05 12:45;jstrachan;BTW you can use

broker:foo.xml 

to refer to some XML file on the classpath or

broker:file:foo/bar/whatnot.xml

to refer to an XML file on the file system. Would that help?

Having the default config stuff on the classpath seems a good idea to simplify the command line (e.g. if you wish to run it from where the logs should go or something).

If you want to specify another file you could always use a different filename?","05/Dec/05 11:39;jstrachan;I think this is fixed now right? Let  us know if not and we can reopen",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't Recover from journal when i use derbydb and hsqldb,AMQ-401,12481431,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,taoyonggang,taoyonggang,02/Nov/05 09:45,16/Feb/06 11:30,30/Jan/20 16:57,05/Dec/05 10:21,3.2,,,,,,4.0 M4,,,Message Store,,,,0,"When I use derbydb and hsqldb to store data.I always send data and not recive data.
Then will report memory limit,and then I close activeMq,and then run activeMQ,then will recover data.

But,when activeMQ print Start recover data,it will stop.I have wait 2 hours and repleace other database.Always stop.
",Win xp,,,,,,,,,,,,,,,,,,36288000,36288000,,0%,36288000,36288000,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-12-05 10:21:28.0,,,false,,,,,,,,,,,,,,,,,49090,,,Mon Dec 05 10:21:28 UTC 2005,,,,,,,,"0|i0s0xr:",161628,,,,,,,,,,,,,,,,,,,"07/Nov/05 06:52;taoyonggang;If you send message with no wait and recive message with no wait,and run a long time,then kill amq server,then can't recover.
I use mysql to query data when recover,find it's too slow so than it's can't normally work.","05/Dec/05 10:21;jstrachan;These issues should be fixed in 4.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
discoveryUri not recorded on TransportConnector when JMX in use,AMQ-484,12481471,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,13/Jan/06 02:13,16/Feb/06 11:30,30/Jan/20 16:57,13/Jan/06 23:12,,,,,,,4.0 M4,,,Connector,,,,0,"When transport connector as follows is defined

<transportConnector uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/>

in conjuction with the broker definition of:

<broker useJmx=""true"" />

The resulting TransportConnector created by XBeans from the defintion is provided with the discoveryUri.  However, the BrokerService then replaces that instance with ManagedTransportConnector instance but does not transfer the discoveryUri.  The result is no discovery agent is created for the connector when the connector is started.


",w2k and linux with jdk1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/06 22:33;dennis@bevocal.com;ASF.LICENSE.NOT.GRANTED--amq484diff.txt;https://issues.apache.org/jira/secure/attachment/12460591/ASF.LICENSE.NOT.GRANTED--amq484diff.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49151,,,Fri Jan 13 23:12:48 UTC 2006,,,,,,,,"0|i17yz3:",254636,,,,,,,,,,,,,,,,,,,"13/Jan/06 22:33;dennis@bevocal.com;Diff for BrokerService.java file

Can someone checkin for me, my commiter status still not right.","13/Jan/06 23:12;dennis@bevocal.com;Commited change to roll forward the discoveryUri to the ManagedTransportConnector",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2 broker network seems to loose messages,AMQ-464,12481484,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,jstrachan,jstrachan,04/Jan/06 17:54,16/Feb/06 11:30,30/Jan/20 16:57,05/Jan/06 13:06,,,,,,,4.0 M4,,,Broker,,,06/Jan/06 00:00,2,"For background: http://forums.logicblaze.com/posts/list/116.page

I've created a test case which demonstrates the issue in the assembly module...

TwoBrokerTopicSendReceiveLotsOfMessagesUsingTcpTest.java

You might want to enable log4j logging to see the messages that are received",,almaw,yaussy,,,,,,,,,,,,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-01-05 07:11:09.0,,,false,,,,,,,,,,,,,,,,,49139,,,Thu Jan 05 13:06:23 UTC 2006,,,,,,,,"0|i0s2j3:",161886,,,,,,,,,,,,,,,,,,,"05/Jan/06 07:11;rajdavies;couldn't find the TwoBrokerTopicSendReceiveLotsOfMessagesUsingTcpTest.java  (though only looked in usecases) - basing testing on extended perf test cases at the moment","05/Jan/06 08:25;jstrachan;I'd forgotten to add it to SVN - here it is now...

http://svn.apache.org/repos/asf/incubator/activemq/trunk/assembly/src/test/java/org/apache/activemq/usecases/TwoBrokerTopicSendReceiveLotsOfMessagesUsingTcpTest.java","05/Jan/06 13:06;rajdavies;Test case now works",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Running activemq shell script on java 1.4 throws  java.lang.NoClassDefFoundError: javax/management/ObjectName,AMQ-471,12481530,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,chirino,chirino,10/Jan/06 18:40,16/Feb/06 11:30,30/Jan/20 16:57,13/Jan/06 02:56,,,,,,,4.0 M4,,,,,,,0,"The recent JMX querying options added the broker Main class has added a dependency on having jmx on the classpath.  Part of Main's function is to establish the classpath so that shell scripts don't have to.  We should look into breaking the Main class so that it delegates handling the command line arguments to a class that's loaded using reflection so that it can establish that right classpath.

On java 1.4

$ ./activemq 
Exception in thread ""main"" java.lang.NoClassDefFoundError: javax/management/ObjectName

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-01-13 02:56:15.0,,,false,,,,,,,,,,,,,,,,,43779,,,Fri Jan 13 04:37:09 UTC 2006,,,,,,,,"0|i17z0n:",254643,,,,,,,,,,,,,,,,,,,"13/Jan/06 02:56;aco;Refactored the main class to several task classes and used reflection to run each task.","13/Jan/06 02:58;aco;Hi Hiram, I'm not sure if the console package should belong to the broker package, moving it wouldn't be any problem. :)","13/Jan/06 03:00;chirino;I'm all for moving that code to a activemq.console package!  :)
go for it!","13/Jan/06 03:03;chirino;Also, if your task classes are easier to use than using direct JMX, It might be worth adding some nice javadoc so that we can advertise them as the recomended API for java users to manage their brokers.  (Just a low priority Idea, JMX apis are good enough for most folks). ","13/Jan/06 03:17;aco;I also wanted to move it to an activemq.console package.  Makes it easier to add other console (Swing, Web, etc.), but thought of getting the console working first again. :) I also think its a good idea to slightly modify the task classes, so it's not dependent on the view, so we could use it as a plugin to other consoles. If you have a recommended design pattern or design strategy, it will be very much welcomed. :D","13/Jan/06 04:37;chirino;I'll put on my todo: check out the current tasks and comment if any changes are needed to make them more re-usable.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"issue with 1M messages on a queue, 1 consumer things work, 2nd consumer things stop until another consumer starts",AMQ-441,12481518,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,jstrachan,jstrachan,13/Dec/05 08:31,16/Feb/06 11:30,30/Jan/20 16:57,23/Dec/05 09:58,3.2.1,,,,,,4.0 M4,,,,,,,0,"Details in tim's second post...

http://forums.logicblaze.com/posts/list/68.page

The first scenario was just a pre-fetch issue. The scenario with 1M messages on the queue sounds bizarre.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-12-22 03:37:46.0,,,false,,,,,,,,,,,,,,,,,49119,,,Fri Dec 23 09:58:09 UTC 2005,,,,,,,,"0|i17ytr:",254612,,,,,,,,,,,,,,,,,,,"13/Dec/05 10:30;jstrachan;Ah - it appears Tim's issue is on 3.x - so this could well already be fixed on 4.x","22/Dec/05 03:37;jlim;I did a test using the latest snapshot from svn.  What I did is set the prefetchPolicy to 1
 
 
        ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(user, pwd, url);
        ActiveMQPrefetchPolicy prefetchPolicy =  connectionFactory.getPrefetchPolicy();
        prefetchPolicy.setQueuePrefetch(1);
        connectionFactory.setPrefetchPolicy(prefetchPolicy);


I have  1000 messages on the queue. Started 1 consumer and it started consuming the messages. Started another consumer and immedietely it started consuming messages.


After 80-100 messages, the 2nd consumer stops receiving messages. but when I kill the first consumer,  consumer 2 is still not receiving any messages (i think this is a bug here)

I tried running the first consumer again and it started consuming messages but consumer two did not start receiving any.

I'll investigate this further","23/Dec/05 09:58;aco;Fixed a similar to memory leak scenario in the prefetch subscription.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 4.0 default.xml in assembly/src/sample-conf/ is in AMQ3.x format.,AMQ-504,12481501,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,foconer,foconer,foconer,24/Jan/06 11:41,16/Feb/06 11:28,30/Jan/20 16:57,16/Feb/06 11:28,4.0 M4,,,,,,4.0 M4,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-16 05:10:14.0,,,false,,,,,,,,,,,,,,,,,49167,,,Thu Feb 16 05:10:14 UTC 2006,,,,,,,,"0|i0s0kv:",161570,,,,,,,,,,,,,,,,,,,"16/Feb/06 05:10;chirino;I deleted the directory for now since the files had not been converted yet.  They should be restored 1 by 1 as they get converted into the activemq 4.x format.

Also created a new jira task, AMQ-570 to track the task of creating some sample activemq 4 config files.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JmsConnector class needs another JndiTemplate object,AMQ-520,12481438,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,fanli,fanli,01/Feb/06 19:55,16/Feb/06 11:24,30/Jan/20 16:57,06/Feb/06 08:21,4.0,,,,,,4.0 M4,,,,,,,0,"JmsConnector class has only one JndiTemplate object. This creates problem for its derived classes JmsTopicConnector and JmsQueueConnector, when they invoke the init() method. Since the init() method calls initializeForeignTopicConnection() and initializeLocalTopicConnection() methods to lookup ConnectionFactory objects using the same JndiTemplate object. A solution would be to have two JndiTemplate objects for the JmsConnector class, one used to do lookup in the initializeForeignTopicConnection() method and the other to do lookup in the initializeLocalTopicConnection() method.",Red Hat Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-06 08:21:35.0,,,false,,,,,,,,,,,,,,,,,49178,,,Mon Feb 06 08:21:35 UTC 2006,,,,,,,,"0|i17zbr:",254693,,,,,,,,,,,,,,,,,,,"06/Feb/06 08:21;rajdavies;separation of JnidTemplates and Message Convertors added",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error running console start task,AMQ-516,12481400,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,aco,aco,31/Jan/06 03:24,16/Feb/06 11:24,30/Jan/20 16:57,31/Jan/06 04:03,4.0 M4,,,,,,4.0 M4,,,Broker,,,,0," ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: java.lang.IllegalArgumentException: Invalid broker URI, no scheme specified: start
 ERROR: java.lang.Exception: java.lang.IllegalArgumentException: Invalid broker URI, no scheme specified: start",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49176,,,Tue Jan 31 04:03:09 UTC 2006,,,,,,,,"0|i17zc7:",254695,,,,,,,,,,,,,,,,,,,"31/Jan/06 04:03;aco;done.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stomp support for custom headers and selectors on subscriptions appears broken,AMQ-558,12481477,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,14/Feb/06 14:58,16/Feb/06 11:24,30/Jan/20 16:57,14/Feb/06 14:59,,,,,,,4.0 M4,,,Transport,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49203,,,Tue Feb 14 14:59:22 UTC 2006,,,,,,,,"0|i17z73:",254672,,,,,,,,,,,,,,,,,,,"14/Feb/06 14:59;jstrachan;See StompTest in activemq-core for the test case that shows this is now working properly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network bridge connections should set a client ID so that durable subs work.,AMQ-495,12481447,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chirino,chirino,18/Jan/06 23:11,16/Feb/06 11:24,30/Jan/20 16:57,01/Feb/06 15:45,4.0 M4,,,,,,4.0 M4,,,Broker,,,,0,"Posted on the forum: http://forums.logicblaze.com/posts/list/208.page

I am using the sample code ""TwoBrokerTopicSendReceiveUsingJavaConfigurationTest .java"" to bridge two brokers. 

I get following exception 

17 Jan 2006 19:26:58,237 WARN [Thread-5] network.DemandForwardingBridge (serviceLocalCommand:387) - Unexpected local command: ConnectionError {commandId=2, responseRequired=false, connectionId=null, exception=javax.jms.InvalidClientIDException: No clientID specified for connection request} 
Jan 17, 2006 7:26:58 PM org.apache.catalina.core.StandardHost getDeployer 

i am using following sippet 
NetworkConnector connector = getBroker().addNetworkConnector(""static:failover:"" + remoteURI); 

Broker1 URI : tcp://localhost:61616 
Broker2 URI : tcp://localhost:61617 

These are two embedded brokers running inside two separate webapps, but same tomcat. 

Any idea, what is missing?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-01 15:45:53.0,,,false,,,,,,,,,,,,,,,,,49160,,,Wed Feb 01 15:45:53 UTC 2006,,,,,,,,"0|i17yxz:",254631,,,,,,,,,,,,,,,,,,,"01/Feb/06 15:45;rajdavies;added client_id specific to the broker",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.usecases.ThreeBrokerTopicNetworkTest hangs,AMQ-476,12481436,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chirino,chirino,10/Jan/06 20:04,16/Feb/06 11:24,30/Jan/20 16:57,30/Jan/06 09:56,4.0,,,,,,4.0 M4,,,,,,,0,disabling until test is working again.,OS X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-01-30 09:56:08.0,,,false,,,,,,,,,,,,,,,,,49148,,,Mon Jan 30 09:56:08 UTC 2006,,,,,,,,"0|i0s0hz:",161557,,,,,,,,,,,,,,,,,,,"30/Jan/06 09:56;rajdavies;The hang was a result of VMTransport hanging on to stale references of a broker that had been closed. To work around this, every time a new VMTransportServer is fetched, the state of the TransportConnector's broker is tested to see if it has closed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.usecases.MultiBrokersMultiClientsUsingTcpTest hangs,AMQ-474,12481435,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rajdavies,chirino,chirino,10/Jan/06 19:47,16/Feb/06 11:24,30/Jan/20 16:57,07/Feb/06 18:57,4.0,,,,,,4.0 M4,,,,,,,0,Disabling until fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-07 18:57:14.0,,,false,,,,,,,,,,,,,,,,,49146,,,Tue Feb 07 18:57:14 UTC 2006,,,,,,,,"0|i0s0wf:",161622,,,,,,,,,,,,,,,,,,,"07/Feb/06 18:57;rajdavies;problem with VMTransportServer using stale brokers - now resolved",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TEST org.apache.activemq.security.SimpleSecurityBrokerSystemTest FAILS,AMQ-542,12481390,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jlim,aco,aco,09/Feb/06 04:07,16/Feb/06 03:39,30/Jan/20 16:57,16/Feb/06 03:39,4.0 RC2,,,,,,,,,,,,,0,this test currently fails,"winxp, linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49197,,,2006-02-09 04:07:07.0,,,,,,,,"0|i17z8f:",254678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
flowControlSleepTime in ActiveMQConnection is not properly synchronized.,AMQ-485,12481481,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,13/Jan/06 02:51,02/Feb/06 18:11,30/Jan/20 16:57,02/Feb/06 18:11,3.0,3.1,3.2,3.2.1,,,3.2.2,,,JMS client,,,,0,"Scott posted a great bug report on the forums: http://forums.logicblaze.com/posts/list/180.page

I was running a stress test and found a bug in ActiveMQConnection. Where do I post it? 

The TCP consumer thread updates the flowControlSleepTime long between the values of -1 and 10 (consume method). 

My thread is attempting to issue an asyncsend. Within the asyncPacketSend method the value is referenced as follows: 

if (packet.isJMSMessage() && flowControlSleepTime > 0) { 
try { 
Thread.sleep(flowControlSleepTime); 
} catch (InterruptedException e) { } 
} 

this.transportChannel.asyncSend(packet); 

Typical threading issue, the value is 10 on the if and -1 on the Thread.sleep..... and my thread sleeps forever..... 

This jdk 1.5, one broker, one queue, two consumers and two producers. Each producer has one connection running all-out sends (no wait). I'm only getting about 7000 events/sec/avg through this configuration. 

This code is attempting to slow down the client based on the CapacityInfo object being sent back to the client with a 'flow control time' to wait. I'll have to try using more connections (clients) to see if I can pass the 7000 mark. 

Scott ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-01-18 13:46:42.0,,,false,,,,,,,,,,,,,,,,,49152,,,Thu Feb 02 18:11:23 UTC 2006,,,,,,,,"0|i0tsu7:",171981,,,,,,,,,,,,,,,,,,,"13/Jan/06 03:04;chirino;Added code to synchronize on a mutex before accessing that variable.","18/Jan/06 13:46;sirwin007;I never tried it before, but when I passed -1 to sleep you get an exception as apposed to sleeping forever. So the -1 call to sleep wasn't my issue (still a spot for RuntimeException). 

Next I assumed the value was very large. 

I set the value of the flowControlSleeptime to a local variable to keep the other thread from stomping it and logged the value if it was > 10. I saw a few 1000s, and then a huge number (sleep for many years). 

I hacked it to set the value back to 50 in that case and the stress works fine. 

I suspect the issue is on the broker sending the CapcityInfo object. 
","02/Feb/06 18:11;chirino;fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The clientId property on the activation spec was not being honnored.,AMQ-524,12481389,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,02/Feb/06 18:01,02/Feb/06 18:02,30/Jan/20 16:57,02/Feb/06 18:02,3.0,3.1,3.2,3.2.1,,,3.2.2,,,Broker,JCA Container,,,0,The clientId property on the activation spec was not being honnored.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49180,,,Thu Feb 02 18:02:33 UTC 2006,,,,,,,,"0|i0ttin:",172091,,,,,,,,,,,,,,,,,,,"02/Feb/06 18:02;chirino;fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Msgs sent across network bridge even when no consumer registered at far end.,AMQ-316,12481388,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,aco,dennis@bevocal.com,dennis@bevocal.com,26/Jul/05 01:44,10/Jan/06 06:26,30/Jan/20 16:57,10/Jan/06 06:23,,,,,,,,,,Broker,,,,0,"The documention section on ""How do distributed queues work"" states:

Note that messages are only distributed onto other brokers if there is a consumer on those brokers.

However using the ""CommandTrace"" logging category is showing a different story.  I have two networked brokers.  I connect all clients only to broker A.  But tailing of the log on broker B shows all the Topic traffic between clients on broker A are being sent across the network bridge (there is a broker received msg) entry for all activity on broker A).

","w2k, RH9.0, jdk 1.4.2",,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-347,"06/Sep/05 19:22;dennis@bevocal.com;ASF.LICENSE.NOT.GRANTED--AMQ-316.tar.gz;https://issues.apache.org/jira/secure/attachment/12460562/ASF.LICENSE.NOT.GRANTED--AMQ-316.tar.gz",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2005-09-06 13:25:41.0,,,false,,,,,,,,,,,,,,,,,49028,,,Tue Jan 10 06:26:45 UTC 2006,,,,,,,,"0|i17ydz:",254541,,,,,,,,,,,,,,,,,,,"26/Jul/05 01:47;dennis@bevocal.com;This is not so much a problem for intra-site broker on a fast backbone, but we also intend to network inter-site brokers and unnecessary traffic must be elimited.","26/Jul/05 18:54;dennis@bevocal.com;After some further testing with the CommandTrace logging category set to debug level set (love this little bugger), I observed other interesting facts that may add to excess traffic.  

Give two brokers (A and B) that are networked, a consumer registration that is sent across the bridge from A to B, will be immediately echoed back in the opposite direction from B to A.  I can understand that this consumer registration should be passed on from B to other networked brokers, but isn't sending the consumer registration back to the source (A) considered to be a bug?
","28/Jul/05 17:32;dennis@bevocal.com;Still working on understanding this networked broker details, but another tidbit that I found is might may or may not be an issue.

Using reliable connections between brokers;  when a broken connection is detected because of a failure in a thread sending a message it enters the doReconnect() but does not stop the Keep-alive thread.  Then the Keep-alive thread detect the failure and also enters the doReconnect().  Now there are two thread that are trying to reestablish the connection. Hmm...
","02/Sep/05 01:02;dennis@bevocal.com;Getting back to work on this one.   As a first step I set up three brokers connected in sequence ( A <-> B <-> C ), and immediately ran into to a unique problem.  In this configuration when a messages is published by a client attached to broker A, the message is not repeated over the B<->C bridge.  A subscriber on broker C would never see this message.

I am not sure if this is bug or a design feature.  While this would be one way of reducing bridge traffic, it also prevents effective use of the reliable connection option between clusters on two site.

Need an official determination on this.
","02/Sep/05 19:27;dennis@bevocal.com;Well it seems that the problem that I originally saw back in July is not a problem any longer.  But I am a bit worried about the fact that a message generated on any given host can only traverse a single network bridge.  While in my present configuration I can interconnect all brokers and it is not a problem.  I might even be a good thing as it keeps network traffic down.  But I can imagine scenarios where this would be a problem.

So again I ask: Is this was a design feature or a bug?
","06/Sep/05 13:25;jstrachan;This is partly a design decision; we made sure store and forward worked first. Though demand based forwarding was always meant to be added; we'd just not got there yet :)

This should be in SVN really soon now...","06/Sep/05 14:50;jstrachan;This is now enabled by default via the flag on the NetworkChannel.
","06/Sep/05 19:22;dennis@bevocal.com;scripts libraries and classes for testing","06/Sep/05 19:22;dennis@bevocal.com;I have tested the NetworkChannel demandBasedForwarding option.  First the activemq.dtd was not updated when the change to NetworkChannel.java was checked in.  After making the update I tried to set the value to false, but did not seem to have any effect.  The broker configuration was setup as follows

A <> B <> C

The producing client was attached to broker A. The consuming client attached to broker C.  Neither value for demandBasedForwarding will allow the produced message to travel across both bridges (A-B and B-C) to arrive at the consumer.  I have confirmed this both with non-persistent Topic and persistent queue messages.  In addition, with the value set to false, I expected to see the produced message for a non-persistent Topic message to atleast travel across the first bridge (A-B) even if there was no client for the message on broker B.  But no message is passed in this case.

So one more time I ask, is it valid to have a configuration such as show here:

Producing client  > broker A <> broker B <> broker C > consuming client

If so, then this is still broken.


Note, the attachment includes my broker configuration files in addition to scripts libraries and classes that I used for testing.
","10/Jan/06 06:23;aco;- Added org.apache.activemq.usecases.TwoBrokerMessageNotSentToRemoteWhenNoConsumerTest to check that no message dispatches are sent over the network when there is no consumer registered at the remote broker.

- Added org.apache.activemq.usecases.ThreeBrokerQueueNetworkTest.test_AB_BC_BrokerNetwork to test a three broker setup producer->BrokerA->BrokerB->BrokerC->consumer. Currently, it is expected that no messages will reach BrokerC. By design, message dispatch can only hop from one broker to the immediate connected broker only.","10/Jan/06 06:26;aco;Additional comments:

- The test cases are for AMQ 4.x
- For TwoBrokerMessageNotSentToRemoteWhenNoConsumerTest , Demand Forwarding Bridge was used.",,,,,,,,,,,,,,,,,,,,,,,,
Unbounded number of jdbc connections created to postgresql,AMQ-377,12481394,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,dflores,foconer,foconer,01/Oct/05 03:48,04/Jan/06 20:39,30/Jan/20 16:57,04/Jan/06 20:39,3.2,,,,,,,,,Broker,,,,0,"Scenarion:

1. 10 consumer is created (each has its own connection) then closes the connection right away. The application is executed several times.

Expected behaviour: A ""postgres process"" is created when a consumer creates a connection. Subsequently, when the consumer closes/stops the connection, the ""postgres process"" should also closes/stops.
Actual behaviour: Inconsistent, most of the time, postgres process remains active even though the consumer is already disconnected. So, creating new consumer eventually leads to exception where it disallows further connection to postgres. The solution here is to restart the broker to kill all ""postgres processes"" the was created by disconnected consumers.

""Failed to create transaction: org.postgresql.util.PSQLException: Backend start-up failed: FATAL: sorry, too many clients already."" (see attached log file).
","Postgres 8.03 with the provided JDBC3 driver on a Windows machine.
",,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-368,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-10-14 01:36:03.0,,,false,,,,,,,,,,,,,,,,,49071,,,Wed Jan 04 20:39:26 UTC 2006,,,,,,,,"0|i0tsun:",171983,,,,,,,,,,,,,,,,,,,"14/Oct/05 01:36;dub;Is this related to AMQ-368 ?","14/Oct/05 02:25;foconer;From my understanding this is a bit different from amq-368 in terms of case scenario. There is no actual message sent or received, it continually just creates and disconnects a consumer which eventually leads to the exception above. The similarity is it doesn't destroy the connection on the database right away when it's supposed to have been destroyed.","12/Dec/05 05:59;david.howe.gs;We are also experiencing this problem using Oracle 9i as the backend.  Over the course of the day, the number of sessions open from ActiveMQ slowly gets larger and larger.  Eventually (approx 24 hours), it exhausts all of the processes available in Oracle and nothing else can connect.  Re-starting ActiveMQ then clears all of the Oracle sessions and everything goes back to normal.  Our ActiveMQ server isn't actually doing much at the moment as we've only just installed it and haven't started using it for anything serious.

The relevant sections of our configuration file are below.  I've deliberately only got a small number of connections in the pool to try and alleviate the running out of connections problem.  It's strange that it can keep getting connections without exhausting the pool, which is what I thought would happen if you reach the maxActive number of connections and wait the maxWait time for one to become available.

    <persistence>
      <cachePersistence>
        <journalPersistence directory=""../var/journal"">
          <jdbcPersistence dataSourceRef=""oracle-ds""/>
        </journalPersistence>
      </cachePersistence>
    </persistence>

  <bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"">
      <value>oracle.jdbc.OracleDriver</value>
    </property>
    <property name=""url"">
      <!-- Use a URL like 'jdbc:hsqldb:hsql://localhost:9001' if you want to connect to a remote hsqldb -->
      <value>jdbc:oracle:thin:@//host:1521/SID</value>
    </property>
    <property name=""username"">
      <value>user</value>
    </property>
    <property name=""password"">
      <value>password</value>
    </property>
    <property name=""defaultAutoCommit"">
      <value>false</value>
    </property>
    <property name=""poolPreparedStatements"">
      <value>true</value>
    </property>
    <property name=""initialSize"">
        <value>1</value>
    </property>
    <property name=""maxActive"">
        <value>2</value>
    </property>
    <property name=""minIdle"">
        <value>0</value>
    </property>
    <property name=""maxIdle"">
        <value>1</value>
    </property>
    <property name=""maxWait"">
        <value>2000</value>
    </property>
  </bean>
","21/Dec/05 20:49;chirino;Jonas,

If you get a chance, can you try to recreate this problem using the latest 4.0-SNAPSHOT?

Thanks,
Hiram","04/Jan/06 20:39;chirino;duplicate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
possible NullPointerException in ActiveMQConnectionConsumer,AMQ-446,12481391,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,16/Dec/05 10:40,16/Dec/05 10:41,30/Jan/20 16:57,16/Dec/05 10:41,3.2.1,,,,,,3.2.2,,,,,,,0,"(DurableQueueBoundedMessageContainer.java:390) - <stop dispatching>
java.lang.NullPointerException
	at
org.activemq.ActiveMQConnectionConsumer.dispatchToQueue(ActiveMQConnectionCo
nsumer.java:128)
	at
org.activemq.ActiveMQConnectionConsumer.dispatch(ActiveMQConnectionConsumer.
java:116)
	at
org.activemq.ActiveMQConnection.consume(ActiveMQConnection.java:1056)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49123,,,Fri Dec 16 10:41:05 UTC 2005,,,,,,,,"0|i0s0zj:",161636,,,,,,,,,,,,,,,,,,,"16/Dec/05 10:41;jstrachan;Timing issue now fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.activemq.spring.ActiveMQBeanFactory should use PropertyOverrideConfigurer, not PropertyPlaceholderConfigurer",AMQ-364,12481386,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,almaw,almaw,16/Sep/05 19:04,05/Dec/05 11:03,30/Jan/20 16:57,05/Dec/05 11:03,3.1,,,,,,3.2.2,,,,,,,0,"The PropertyPlaceholderConfigurer *requires* that all properties in the XML config are present in the System.properties object.
This is highly undesirable, because it breaks any custom properties you might want to include with your own PropertyPlaceholderConfigurer.

Fix for this is probably to change it to a PropertyOverrideConfigurer.

Example of config exhibiting problem:
http://rafb.net/paste/results/V7zpTo15.html",,almaw,,,,,,,,,,,,,,,,,900,900,,0%,900,900,,,,,"16/Sep/05 21:56;almaw;ASF.LICENSE.NOT.GRANTED--ActiveMQBeanFactory.diff;https://issues.apache.org/jira/secure/attachment/12460531/ASF.LICENSE.NOT.GRANTED--ActiveMQBeanFactory.diff","16/Sep/05 21:02;almaw;ASF.LICENSE.NOT.GRANTED--ActiveMQBeanFactory.diff;https://issues.apache.org/jira/secure/attachment/12460651/ASF.LICENSE.NOT.GRANTED--ActiveMQBeanFactory.diff","16/Sep/05 20:56;almaw;ASF.LICENSE.NOT.GRANTED--ActiveMQBeanFactory.diff;https://issues.apache.org/jira/secure/attachment/12460526/ASF.LICENSE.NOT.GRANTED--ActiveMQBeanFactory.diff","16/Sep/05 20:39;almaw;ASF.LICENSE.NOT.GRANTED--ActiveMQBeanFactory.diff;https://issues.apache.org/jira/secure/attachment/12460758/ASF.LICENSE.NOT.GRANTED--ActiveMQBeanFactory.diff",,,,,4.0,,,,,,,,,,,,,,,,,,,,2005-12-05 11:03:39.0,,,false,,,,,,,,,,,,,,,,,49065,,,Mon Dec 05 11:03:39 UTC 2005,,,,,,,,"0|i0s2hj:",161879,,,,,,,,,,,,,,,,,,,"16/Sep/05 20:39;almaw;Patch to resolve this issue.","16/Sep/05 20:56;almaw;New patch which works with SecurityManager denying access to system properties.","16/Sep/05 21:02;almaw;I need coffee - let's try this again... :-)
System.getProperties() requires ""read,write"" on *, not just read.","16/Sep/05 21:56;almaw;Turns out PropertyOverrideConfigurer isn't what we want.

Instead, we need to look at the beans context and work out if there's another PropertyPlaceholderConfigurer already there, and to only create one for System properties if there isn't.

The attached patch should sort us out.","05/Dec/05 11:03;jstrachan;patch applied, thanks Al",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lack of synchronization in the org.activemq.io.util.FileDataBlock.activate and deactivate method.,AMQ-398,12481392,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,waip,waip,28/Oct/05 07:57,05/Dec/05 10:23,30/Jan/20 16:57,05/Dec/05 10:23,3.2,,,,,,3.2.2,,,Broker,,,,0,Lack of synchronization in the org.activemq.io.util.FileDataBlock.activate and deactivate method. This causes an invalid handle IOException when a fast producer sends a large number of non-persistent messages to a slow consumer.,,,,,,,,,,,,,,,,,,,60,60,,0%,60,60,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-12-05 10:23:31.0,,,false,,,,,,,,,,,,,,,,,49089,,,Mon Dec 05 10:23:31 UTC 2005,,,,,,,,"0|i17ym7:",254578,,,,,,,,,,,,,,,,,,,"05/Dec/05 10:23;jstrachan;Patch applied, thanks Paul!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"STOMP connector fails with null pointer exception when stomp client subscribes and sends to destination named ""/queue/FOO.BAR""",AMQ-412,12481432,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,plindsay,plindsay,16/Nov/05 19:13,05/Dec/05 10:04,30/Jan/20 16:57,05/Dec/05 10:04,3.2,,,,,,3.2.2,,,Connector,,,,0,"11:03:12 WARN  stop dispatching
java.lang.NullPointerException
        at java.util.Hashtable.putAll(Hashtable.java:467)
        at org.activemq.transport.stomp.FrameBuilder.addHeaders(FrameBuilder.jav                                                a:56)
        at org.activemq.transport.stomp.Subscription.receive(Subscription.java:6                                                1)
        at org.activemq.transport.stomp.StompWireFormat.writePacket(StompWireFor                                                mat.java:121)
        at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTranspo                                                rtChannel.java:474)
        at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransport                                                Channel.java:290)
        at org.activemq.broker.impl.BrokerClientImpl.send(BrokerClientImpl.java:                                                689)
        at org.activemq.broker.impl.BrokerClientImpl.dispatchToClient(BrokerClie                                                ntImpl.java:221)
        at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.j                                                ava:166)
        at org.activemq.service.boundedvm.DurableQueueSubscription.doDispatch(Du                                                rableQueueSubscription.java:93)
        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.ru                                                n(DurableQueueBoundedMessageContainer.java:337)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown So                                                urce)
        at java.lang.Thread.run(Thread.java:595)",JDK 5 update 5 on Windows XP.,plindsay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-11-29 09:49:26.0,,,false,,,,,,,,,,,,,,,,,49099,,,Mon Dec 05 10:04:16 UTC 2005,,,,,,,,"0|i0s2i7:",161882,,,,,,,,,,,,,,,,,,,"16/Nov/05 19:57;plindsay;dotNet stomp client failed as well: 
11:52:40 INFO  Adding new client: ID:PLINDSAYMO-1985-1132170724713-3:0 on transport: TcpTransportChannel: Socket[addr=/127.0.0.1,port=1987,localport=61626]
11:52:40 WARN  stop dispatching
java.lang.NullPointerException
        at java.util.Hashtable.putAll(Hashtable.java:467)
        at org.activemq.transport.stomp.FrameBuilder.addHeaders(FrameBuilder.java:56)
        at org.activemq.transport.stomp.Subscription.receive(Subscription.java:61)
        at org.activemq.transport.stomp.StompWireFormat.writePacket(StompWireFormat.java:121)
        at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:474)
        at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransportChannel.java:290)
        at org.activemq.broker.impl.BrokerClientImpl.send(BrokerClientImpl.java:689)
        at org.activemq.broker.impl.BrokerClientImpl.dispatchToClient(BrokerClientImpl.java:221)
        at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:166)
        at org.activemq.service.boundedvm.DurableQueueSubscription.doDispatch(DurableQueueSubscription.java:93)
        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.run(DurableQueueBoundedMessageContainer.java:337)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:595)

","29/Nov/05 09:49;purpleblob;This issue is down to FrameBuilder.java line 56 (as per the stack trace) - headers.putAll(message.getProperties()); 

If getProperties() returns a null then headers.putAll throws an exception. Replacing the code with

java.util.Map properties = message.getProperties(); 
if(properties != null)
{
   headers.putAll(properties);
}

Will ensure that only non-null values are passed to putAll.
 ","05/Dec/05 10:04;jstrachan;Patch applied Mark, many thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 3.2 lots of WARN and INFO messages generated on destination clean up,AMQ-397,12481352,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rsaba,rsaba,rsaba,28/Oct/05 03:58,20/Nov/05 15:02,30/Jan/20 16:57,20/Nov/05 15:02,3.2,,,,,,3.2.1,,,Broker,,,,0,"Per Ioan's note:

It seems that the treatment of dead messages has changed dramatically in 3.2
.

Insted of a one-shot delete in 3.1:

public String getDeleteOldMessagesStatment() {
return ""DELETE FROM ""+tablePrefix+messageTableName+
"" WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= "" +
""( SELECT MIN(""+tablePrefix+durableSubAcksTableName+"".LAST_ACKED_ID) "" +
""FROM ""+tablePrefix+durableSubAcksTableName+"" WHERE "" +
tablePrefix+durableSubAcksTableName+"".CONTAINER=""+tablePrefix+messageTableName+
"".CONTAINER)"";
}

in 3.2
doGetOldMessages will get same deleted messages and process them one by one.
One issue is the extensive logging (could be debug instead of info) in
JDBCPersistenceAdapter:

adapter.doGetOldMessages(c, new ExpiredMessageResultHandler() {
public void onMessage(long seq, String container, String messageID, boolean
isSentToDeadLetter) {
try {
// restore the message from the db
MessageStore messageStore = createQueueMessageStore(container);
MessageIdentity messageIdentity = new MessageIdentity(messageID, new
Long(seq));
ActiveMQMessage message = messageStore.getMessage(messageIdentity);
if (message != null){
log.info(""Cleaning up old message in the database: "" + message.toString());
if (message.isExpired() && !isSentToDeadLetter) {
// send a dead letter
sendToDeadLetter(message);
}else {
log.warn(""could not find message from store with identity: "" +
messageIdentity + "" in cleanup"");
}
}
// clean up old message, use original identity
cleanupOldMessage(c, new MessageIdentity(messageID, new Long(seq)));
} catch (JMSException jmse) {
log.warn(""Cleanup expired message failed due to: "" + jmse, jmse);
} catch (SQLException sqle) {
log.warn(""Cleanup expired message failed due to: "" + sqle, sqle);
}
}

Maybe instead of deleting one message at a time, for !deadLetterEnabled, the
old one-shot delete could be preserved. Looks like a major performance
problem: instead of a single delete SQL there are N or even 2*N SQLs to be
executed with N=the total messages processed.

Thanks,
Ioan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49088,,,Sun Nov 20 15:02:07 UTC 2005,,,,,,,,"0|i17ymf:",254579,,,,,,,,,,,,,,,,,,,"20/Nov/05 15:02;rsaba;Fixed code to:
1- log at debug level
2- delete non-deadletters in one shot",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak of ActiveMQSessions in pooled ManagedConnection environment,AMQ-414,12481337,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kevan,kevan,17/Nov/05 03:21,18/Nov/05 14:55,30/Jan/20 16:57,18/Nov/05 14:55,3.2,,,,,,3.2.1,,,,,,,0,"I raised a Geronimo issue last week -- http://issues.apache.org/jira/browse/GERONIMO-1155. I also posted a patch. I'll repost, here...

While running a test of the DayTrader sample application, the server received an OutOfMemoryException. At the time of failure, there were over 150,000 ActiveMQSession objects. These sessions were being kept alive by ActiveMQ TransactionContexts associated with ActiveMQManagedConnections. I believe that Sessions are being registered with the ActiveMQManagedConnection TransactionContexts, but will never be unregistered via TransactionContext.removeSession(Session).

In non-managed environments, the TransactionContext is owned by the Session. So, a Session does not need to be explicitly removed from the TransactionContext. Once a Session has been closed, both the Session and the TransactionContext are available for garbage collection. The Session never bothers to ""unregister"" with its associated TransactionContext. IMO, this is the root of the problem. There's a different TransactionContexts structure in RA environments.

ManagedConnections have an additional TransactionContext. As Sessions are created, an RATransactionContext is generated for each new Session. As a Session registers with the RATransactionContext, the RATransactionContext locally registers the Session, but also registers the Session with the ManagedConnection's TransactionContext. It's this registration that is the problem... The Session will never be removed from the ManagedConnection's TransactionContext.

DayTrader repeatedly drives an EJB to publish a message. The processing in the EJB is pretty simple, create a connection from a ConnectionFactory, create a session, create a producer, and send a message. .createConnection(), connection.createSession(), session.createProducer, connection.close(). The ManagedConnection is pooled. So, the connection (and its TransactionContext) are long-lived. Each iteration through the EJB is going to cause the creation of a new Session which is registered with the ManagedConnection's TransactionContext. However, the Session will never be removed from this TransactionContext...

I could create the same basic problem by creating a Connection, and repeatedly creating a session and closing it. 

The above is from my reading of the code. I'm not currently able to run DayTrader in my dev environment. Should be easy to create a simple test-case, but I haven't gotten around to it, yet. 

The obvious fix is to add the following to ActiveMQSession.doClose():

    this.transactionContext.removeSession(this);

I'll post a patch. Let me know if I'm missing something obvious... ",win xp / sun 1.4.2 / geronimo ,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,"17/Nov/05 03:22;kevan;ASF.LICENSE.NOT.GRANTED--RemoveSessionUnified.patch;https://issues.apache.org/jira/secure/attachment/12460598/ASF.LICENSE.NOT.GRANTED--RemoveSessionUnified.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2005-11-18 14:55:30.0,,,false,,,,,,,,,,,,,,,,,49101,,,Fri Nov 18 14:55:30 UTC 2005,,,,,,,,"0|i14qzz:",235839,,,,,,,,,,,,,,,,,,,"17/Nov/05 03:22;kevan;Suggested fix...","18/Nov/05 14:55;jstrachan;patch applied, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages sent async when acknowledgeMode == Session.DUPS_OK_ACKNOWLEDGE,AMQ-396,12481276,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,27/Oct/05 13:58,27/Oct/05 13:59,30/Jan/20 16:57,27/Oct/05 13:59,3.2,,,,,,3.2.1,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49087,,,2005-10-27 13:58:57.0,,,,,,,,"0|i0tshr:",171925,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Could not find parts for fragemented message"" error stop network connector",AMQ-325,12481429,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,17/Aug/05 12:32,18/Oct/05 00:37,30/Jan/20 16:57,18/Oct/05 00:37,3.0,,,,,,3.2,,,Connector,,,,0,"Mark Lewis <mark.lewis at mir3.com> reported:

After running more or less without any problems for a couple of days, I
suddenly got this message on one of the brokers in my network as it
processed a moderately large (1-2MB) message.  After receiving this
message it appears to have broken the network connection without trying
to restart, even though I specified reliable: protocol for the network
channel. 

09:10:51 WARN  Async exception with no exception listener:
javax.jms.JMSException: Could not find parts for fragemented message:
ACTIVEMQ_TEXT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:r2-
d2-40063-1124130867102-118:0, bodyAsBytes =
org.activemq.io.util.ByteArray@aa098a, readOnlyMessage = true,
jmsClientID = 'qa_tahoe' , jmsCorrelationID = 'null' , jmsDestination =
qa_tahoe_data, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered =
false, jmsType = 'null' , jmsExpiration = 0, jmsPriority = 4,
jmsTimestamp = 1124205464502, properties = null, readOnlyProperties =
true, entryBrokerName = 'ID:yoda-34917-1123719371107-0:0' ,
entryClusterName = 'default' , consumerNos = [0], transactionId =
'null' , xaTransacted = false, consumerIdentifer =
'ID:yoda-34923-1123719372923-0:0_NetworkChannel.14.14' , messageConsumed
= true, transientConsumed = false, sequenceNumber = 0, deliveryCount =
1, dispatchedFromDLQ = false, messageAcknowledge =
org.activemq.ActiveMQSession@1584a8b, jmsMessageIdentity = null,
producerKey = ID:r2-d2-40063-1124130867102-118: }, text = fragmented
message
javax.jms.JMSException: Could not find parts for fragemented message:
ACTIVEMQ_TEXT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:r2-
d2-40063-1124130867102-118:0, bodyAsBytes =
org.activemq.io.util.ByteArray@aa098a, readOnlyMessage = true,
jmsClientID = 'qa_tahoe' , jmsCorrelationID = 'null' , jmsDestination =
qa_tahoe_data, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered =
false, jmsType = 'null' , jmsExpiration = 0, jmsPriority = 4,
jmsTimestamp = 1124205464502, properties = null, readOnlyProperties =
true, entryBrokerName = 'ID:yoda-34917-1123719371107-0:0' ,
entryClusterName = 'default' , consumerNos = [0], transactionId =
'null' , xaTransacted = false, consumerIdentifer =
'ID:yoda-34923-1123719372923-0:0_NetworkChannel.14.14' , messageConsumed
= true, transientConsumed = false, sequenceNumber = 0, deliveryCount =
1, dispatchedFromDLQ = false, messageAcknowledge =
org.activemq.ActiveMQSession@1584a8b, jmsMessageIdentity = null,
producerKey = ID:r2-d2-40063-1124130867102-118: }, text = fragmented
message
        at org.activemq.ActiveMQSession.sendMessageAck
(ActiveMQSession.java:1159)
        at org.activemq.ActiveMQSession.doAcknowledge
(ActiveMQSession.java:1092)        at
org.activemq.ActiveMQSession.acknowledge(ActiveMQSession.java:1082)
        at org.activemq.message.ActiveMQMessage.acknowledge
(ActiveMQMessage.java:1956)
        at org.activemq.transport.NetworkMessageBridge.onMessage
(NetworkMessageBridge.java:217)
        at org.activemq.ActiveMQMessageConsumer.processMessage
(ActiveMQMessageConsumer.java:447)
        at org.activemq.ActiveMQSessionExecutor.dispatch
(ActiveMQSessionExecutor.java:110)
        at org.activemq.ActiveMQSessionExecutor.run
(ActiveMQSessionExecutor.java:95)
        at java.lang.Thread.run(Thread.java:534)
09:10:51 INFO  channel status changed: Channel: tcp://localhost:61617
has stopped

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-10-18 00:37:19.0,,,false,,,,,,,,,,,,,,,,,49036,,,Tue Oct 18 00:37:19 UTC 2005,,,,,,,,"0|i17yif:",254561,,,,,,,,,,,,,,,,,,,"18/Oct/05 00:37;jstrachan;Fragmentation is now disabled by default",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consumer example broken in the 3.1 release on linux,AMQ-351,12481355,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,10/Sep/05 19:43,18/Oct/05 00:36,30/Jan/20 16:57,18/Oct/05 00:36,3.1,,,,,,3.2,,,,,,,0,"Chris Berry posted on the activemq user list:

Greetings,
I am trying to get the simple, packaged ActiveMQ (3.1) example
running. On windows, I have no issues -- but on linux I get the
following error when I type ""ant consumer"" (in /example). Note that I
can start the broker just fine (i.e. run /bin/activemq).
I'm at a loss.
Thanks,
-- Chris

consumer:
     [echo] Running consumer against server at $url =
tcp://localhost:61616 for subject $subject = TEST.FOO
     [java] Connecting to URL: tcp://localhost:61616
     [java] Consuming queue: TEST.FOO
     [java] Using non-durable subscription
     [java] Caught: javax.jms.JMSException: Could not load protocol:
null. Reason: java.io.IOException: Could not find class for resource:
M
ETA-INF/services/org/activemq/transport/null
     [java] javax.jms.JMSException: Could not load protocol: null.
Reason: java.io.IOException: Could not find class for resource:
META-INF/
services/org/activemq/transport/null
     [java]    at
org.activemq.transport.TransportChannelProvider.createJMSexception(java.lang.String,
java.lang.Exception) (Unknown Source)

     [java]    at
org.activemq.transport.TransportChannelProvider.getFactory(java.net.URI)
(Unknown Source)
     [java]    at
org.activemq.ActiveMQConnectionFactory.createTransportChannel(java.lang.String)
(Unknown Source)
     [java]    at
org.activemq.ActiveMQConnectionFactory.createConnection(java.lang.String,
java.lang.String) (Unknown Source)
     [java]    at
org.activemq.ActiveMQConnectionFactory.createConnection() (Unknown
Source)
     [java]    at ToolSupport.createConnection() (Unknown Source)
     [java]    at ConsumerTool.run() (Unknown Source)
     [java]    at ConsumerTool.main(java.lang.String[]) (Unknown Source)",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49054,,,Sat Sep 10 20:07:58 UTC 2005,,,,,,,,"0|i17ylj:",254575,,,,,,,,,,,,,,,,,,,"10/Sep/05 20:07;chirino;I just ran the 3.1 example against a linux 2.4 machine and it started up ok.

chirino@beaver example]$ uname -a
Linux beaver.codehaus.org 2.4.26 #1 SMP Thu Jul 15 13:30:37 EDT 2004 i686 i686 i386 GNU/Linux
[chirino@beaver example]$ ant consumer
Buildfile: build.xml

init:

compile:

consumer:
     [echo] Running consumer against server at $url = tcp://localhost:61616 for subject $subject = TEST.FOO
     [java] Connecting to URL: tcp://localhost:61616
     [java] Consuming queue: TEST.FOO
     [java] Using non-durable subscription
     [java] log4j:WARN No appenders could be found for logger (org.activemq.transport.tcp.TcpTransportChannel).
     [java] log4j:WARN Please initialize the log4j system properly.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker Memory Leak,AMQ-322,12481253,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,leochan,leochan,10/Aug/05 17:30,18/Oct/05 00:35,30/Jan/20 16:57,18/Oct/05 00:35,3.0,,,,,,3.2,,,Broker,,,,0,"I have run a reliability test on the ActiveMQ with simple broker model : one jvm run a sender, one jvm run a recevier and another jvm run ActiveMQ.  The senders continous to run infinity sending text message and so do the receiver continous receiving message.  I have run ~1300000 iterations on senders and find ActiveMQ running out of memory and the sender rate is slower and slower.  I have turned on the gc log trace of the jvm and saw the broker memory is free lesser and lesser and almost no memory free up finally.  The gc trace show very normal in the begin of thousands of runs but start to be abnormal after certain period of time but I have not take any statistics on that.  ","OS: Red Hat ES 3.0
JVM : BEA Jrockit 5.0 SP2",leochan,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/05 12:03;steveliles;ASF.LICENSE.NOT.GRANTED--ActiveMQTest.zip;https://issues.apache.org/jira/secure/attachment/12460533/ASF.LICENSE.NOT.GRANTED--ActiveMQTest.zip","10/Aug/05 17:30;leochan;ASF.LICENSE.NOT.GRANTED--activemq.zip;https://issues.apache.org/jira/secure/attachment/12460729/ASF.LICENSE.NOT.GRANTED--activemq.zip","12/Aug/05 02:33;leochan;ASF.LICENSE.NOT.GRANTED--gc.zip;https://issues.apache.org/jira/secure/attachment/12460597/ASF.LICENSE.NOT.GRANTED--gc.zip",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2005-09-02 17:07:25.0,,,false,,,,,,,,,,,,,,,,,49033,,,Tue Oct 18 00:35:17 UTC 2005,,,,,,,,"0|i0s2fr:",161871,,,,,,,,,,,,,,,,,,,"12/Aug/05 02:33;leochan;I have tried to run on Sun JVM 1.5 update 4.  The activemq die faster as it only can run 0.6million iteration","02/Sep/05 17:07;chirino;Hi Leo,

I'm profiling with YourKit right now and I don't see a leak yet.  Did you run your tests against the 3.1 release?","06/Sep/05 13:12;jstrachan;BTW we've been testing heavily and cannot reproduce a memory leak.

I wonder if its something to do with your platform? e.g. is it a BEA jrocket problem? Can you reproduce the problem on Sun's JVM?","06/Sep/05 14:17;steveliles;I'm having the same problem with ActiveMQ3.1 using VMPersistence in my application.  I'm running Sun's JVM (I tried 1.4.2_09 and 1.5.0_04 - both suffer same problem) on WinXP.  The same application with ActiveMQ3.0 does NOT suffer the leak.

I wrote some test classes (before i found this bug report) that send lots of simple object messages (containing just a 150 character string) and i'm losing ~10Mb/min.  I tried the exact same test with ActiveMQ3.0 - no leak.

I'm profiling with Yourkit - the producer and consumer run quite happily but the broker is clearly leaking.  I can upload my test classes if that helps.



","07/Sep/05 01:45;leochan;Hi,

I been posted another comment by 11, Auguest 
http://jira.logicblaze.com/jira/browse/AMQ-322#action_34849
I been told I also tested with SUN JVM and it die faster than Jrockit.  So 3.0 Active MQ die both on SUN and BEA JVM.  I haven't try 3.1 Production release as this version has not been released on this issue posting day but I have tried 3.1 M6 at that moment but same memory leak problem.  ","13/Sep/05 10:08;steveliles;Regarding my previous comment (6th Sep):  My bad, sorry!  I've set the DeliveryMode of the publisher to DeliveryMode.NON_PERSISTENT and all is well again - no leaking.","15/Sep/05 11:08;jstrachan;Steve/Leo - do either of you have any ideas on how we can reproduce a memory leak? We're really really trying to reproduce your issue and we cannot think of what it is you're doing differently.

Any help greatly appreciated","15/Sep/05 12:03;steveliles;James, i've attached my test (eclipse) project ... I profiled the MessageBroker using Yourkit, then ran the producer and consumer - the memory leak was pretty clear in ActiveMQ3.1 *until* I added the line:

publisher.setDeliveryMode(DeliveryMode.NON_PERSISTENT);

to the producer.  With the above line included there is no leak, so I think the fault was in my usage of ActiveMQ, rather than ActiveMQ itself.  

cheers,
Steve.","15/Sep/05 12:06;steveliles;sorry, i should have said that the test project i attached currently has the NON_PERSISTENT line in the producer, so it shouldn't leak ... comment out that line to see the leak ;)","16/Sep/05 02:51;leochan;I have download 3.1 Production release and test again by same environment as before.  I will notify you once I get the result","06/Oct/05 08:35;leochan;I have retest on the same environment based on 3.1 Production release, the result is positive and bug seem  to be not produced on this version.","18/Oct/05 00:35;jstrachan;Thanks for verifying this works Leo!",,,,,,,,,,,,,,,,,,,,,,,
SSL transport does not connect.,AMQ-185,12481124,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,04/Feb/05 00:36,20/Sep/05 17:15,30/Jan/20 16:57,04/Feb/05 05:29,2.0,,,,,,2.1,,,Transport,,,,0,"Dpage reported that he gets:

[4:05pm] dpage: javax.jms.JMSException: start failed: Read timed out
[4:05pm] dpage:         at org.codehaus.activemq.transport.t&#8203;cp.TcpTransportChannel.start(TcpTr&#8203;ansportChannel.java:182)
[4:05pm] dpage:         at org.codehaus.activemq.broker.impl&#8203;.BrokerConnectorImpl.addClient(Bro&#8203;kerConnectorImpl.java:308)
[4:05pm] dpage:         at org.codehaus.activemq.transport.T&#8203;ransportServerChannelSupport.addCl&#8203;ient(TransportServerChannelSupport&#8203;.java:83)
[4:05pm] dpage:         at org.codehaus.activemq.transport.t&#8203;cp.TcpTransportServerChannel.run(T&#8203;cpTransportServerChannel.java:147)&#8203;
[4:05pm] dpage:         at java.lang.Thread.run(Thread.java:&#8203;534)

When using SSL.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48916,,,Fri Feb 04 05:29:17 UTC 2005,,,,,,,,"0|i0tsfb:",171914,,,,,,,,,,,,,,,,,,,"04/Feb/05 00:36;chirino;Fix affected version","04/Feb/05 05:29;chirino;Fixed in head.  Should go into the next 2.1 release,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
recover() from  MessageListener in AUTO_ACKNOWLEDGE session does not redeliver message.,AMQ-147,12481080,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,08/Dec/04 07:55,20/Sep/05 17:14,30/Jan/20 16:57,08/Dec/04 22:25,1.3,,,,,,1.4,,,,,,,0,recover() from  MessageListener in AUTO_ACKNOWLEDGE session does not redeliver message.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48882,,,Wed Dec 08 22:25:03 UTC 2004,,,,,,,,"0|i0tt6f:",172036,,,,,,,,,,,,,,,,,,,"08/Dec/04 07:58;chirino;Created test case for problem:
http://cvs.activemq.codehaus.org/viewrep/activemq/activemq/modules/core/src/test/org/codehaus/activemq/JmsSessionRecoverTest.java?r=1.3#l196","08/Dec/04 22:25;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in ActiveMQMessageConsumer,AMQ-336,12481097,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,matthewv,matthewv,23/Aug/05 23:34,07/Sep/05 11:15,30/Jan/20 16:57,06/Sep/05 13:02,3.1,,,,,,3.2,,,Broker,,,,2,"When setting a message listener, using the ActiveMQMessageConsumer::setMessageListener() method, a deadlock can result, if there are messages being dispatched to that consumer by an ActiveMQSessionExecuter.

INFO   | jvm 1    | 2005/08/17 12:37:54 | Found one Java-level deadlock:
INFO   | jvm 1    | 2005/08/17 12:37:54 | =============================
INFO   | jvm 1    | 2005/08/17 12:37:54 | ""JmsSessionDispatcher: 1"":
INFO   | jvm 1    | 2005/08/17 12:37:54 |   waiting to lock monitor 00284bec (object 61acd670, a java.lang.Object),
INFO   | jvm 1    | 2005/08/17 12:37:54 |   which is held by ""NetworkChannel Initiator to reliable:tcp://ehrapp2.au.logicacmg.com:16010""
INFO   | jvm 1    | 2005/08/17 12:37:54 | ""NetworkChannel Initiator to reliable:tcp://ehrapp2.au.logicacmg.com:16010"":
INFO   | jvm 1    | 2005/08/17 12:37:54 |   waiting to lock monitor 00284cdc (object 61acd578, a org.activemq.ActiveMQMessageConsumer),
INFO   | jvm 1    | 2005/08/17 12:37:54 |   which is held by ""JmsSessionDispatcher: 1""
INFO   | jvm 1    | 2005/08/17 12:37:54 | 
INFO   | jvm 1    | 2005/08/17 12:37:54 | Java stack information for the threads listed above:
INFO   | jvm 1    | 2005/08/17 12:37:54 | ===================================================
INFO   | jvm 1    | 2005/08/17 12:37:54 | ""JmsSessionDispatcher: 1"":
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:428)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- waiting to lock <61acd670> (a java.lang.Object)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- locked <61acd578> (a org.activemq.ActiveMQMessageConsumer)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:110)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQSessionExecutor.run(ActiveMQSessionExecutor.java:95)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at java.lang.Thread.run(Thread.java:534)
INFO   | jvm 1    | 2005/08/17 12:37:54 | ""NetworkChannel Initiator to reliable:tcp://ehrapp2.au.logicacmg.com:16010"":
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:422)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- waiting to lock <61acd578> (a org.activemq.ActiveMQMessageConsumer)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQMessageConsumer.setMessageListener(ActiveMQMessageConsumer.java:243)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- locked <61acd670> (a java.lang.Object)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.advisories.ConnectionAdvisor.start(ConnectionAdvisor.java:82)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.transport.NetworkChannel.initializeRemote(NetworkChannel.java:597)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- locked <61a3c320> (a org.activemq.transport.NetworkChannel)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.transport.NetworkChannel.initialize(NetworkChannel.java:565)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.transport.NetworkChannel$1.run(NetworkChannel.java:197)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at java.lang.Thread.run(Thread.java:534)

A simple fix is to synchronize the setMessageListener() method, although this may be too coarse-grained.","Windows XP, Java 1.4",matthewv,seanf,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,"05/Sep/05 10:19;seanf;ASF.LICENSE.NOT.GRANTED--_TEST_ActiveMQDeadlock.java;https://issues.apache.org/jira/secure/attachment/12460532/ASF.LICENSE.NOT.GRANTED--_TEST_ActiveMQDeadlock.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2005-09-01 14:45:17.0,,,false,,,,,,,,,,,,,,,,,49043,,,Wed Sep 07 11:15:36 UTC 2005,,,,,,,,"0|i0s2dz:",161863,,,,,,,,,,,,,,,,,,,"01/Sep/05 14:45;yaussy;Hi,

I have just seen this issue as well (AMQ 3.1), although the second thread in my case was an already established TcpTransportChannel thread.

Found one Java-level deadlock:
=============================
""JmsSessionDispatcher: 8"":
  waiting to lock monitor 0x0110d9b0 (object 0xea8a1488, a java.lang.Object),
  which is held by ""TcpTransportChannel: Socket[addr=/170.137.15.50,port=36873,localport=61616]""
""TcpTransportChannel: Socket[addr=/170.137.15.50,port=36873,localport=61616]"":
  waiting to lock monitor 0x0110d9f8 (object 0xea8a13a8, a org.activemq.ActiveMQMessageConsumer),
  which is held by ""JmsSessionDispatcher: 8""

Java stack information for the threads listed above:
===================================================
""JmsSessionDispatcher: 8"":
        at org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:428)
        - waiting to lock <0xea8a1488> (a java.lang.Object)
        - locked <0xea8a13a8> (a org.activemq.ActiveMQMessageConsumer)
        at org.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:110)
        at org.activemq.ActiveMQSessionExecutor.run(ActiveMQSessionExecutor.java:95)
        at java.lang.Thread.run(Thread.java:595)
""TcpTransportChannel: Socket[addr=/170.137.15.50,port=36873,localport=61616]"":
        at org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:422)
        - waiting to lock <0xea8a13a8> (a org.activemq.ActiveMQMessageConsumer)
        at org.activemq.ActiveMQMessageConsumer.setMessageListener(ActiveMQMessageConsumer.java:243)
        - locked <0xea8a1488> (a java.lang.Object)
        at org.activemq.transport.NetworkMessageBridge.createRemoteConsumer(NetworkMessageBridge.java:168)
        at org.activemq.transport.NetworkMessageBridge.start(NetworkMessageBridge.java:157)
        at org.activemq.transport.NetworkChannel.createBridge(NetworkChannel.java:479)
        at org.activemq.transport.NetworkChannel.addConsumerInfo(NetworkChannel.java:443)
        at org.activemq.transport.NetworkChannel.addConsumerInfo(NetworkChannel.java:436)
        at org.activemq.transport.NetworkChannel.onConsumerInfo(NetworkChannel.java:239)
        at org.activemq.broker.impl.DefaultBroker.fireConsumerInfo(DefaultBroker.java:723)
        at org.activemq.broker.impl.DefaultBroker.addMessageConsumer(DefaultBroker.java:254)
        at org.activemq.broker.impl.BrokerContainerImpl.registerMessageConsumer(BrokerContainerImpl.java:355)
        at org.activemq.broker.impl.BrokerConnectorImpl.registerMessageConsumer(BrokerConnectorImpl.java:171)
        at org.activemq.broker.impl.BrokerClientImpl.consumeConsumerInfo(BrokerClientImpl.java:493)
        at org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:345)
        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)
        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)
        at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)
        at java.lang.Thread.run(Thread.java:595)


I am using embedded brokers, and the problem showed up about 9 hours after the process had started.  An event driver was feeding messages all that time.  Unfortunately, my full log file got truncated over night, so I am not sure whether there was something that may have happened that lead to this condition.

This was the first time for the problem, and so I don't know whether it is repeatable or not.  Have you repeated this situation?  If so, under what circumstances?  I can change the setMessageListener method to be synchornized, but as I haven't reproduced the issue, I don't know the full effects of that change.

We would like some feedback on this from the developers, as we are looking at a very large scale usage of AMQ.

","01/Sep/05 22:31;matthewv;No I haven't reproduced this issue. Once it was discovered, I fixed my version of ActiveMQ, to ensure it didn't happen again.

When I was looking at it, I thought that either the setMessageListener() method could be made synchronized (this was the fix I performed on my build of ActiveMQ), or that the messageListenerGuard could be held only for the actual assignment of the new message listener to the field, and not for the processMessage() call as well. Either of these would prevent the deadlock. But the former would mean that you couldn't guarantee all messages that would be processed via processMessage() would be processed by that specific message listener that you set (Someone else could set the message listener to something else, before the processMessage() call could reacquire the messageListenerGuard).

ActiveMQ seems to run fine with the setMessageListener() method synchronized, so I would recommend that this should be the way forward.","01/Sep/05 22:33;matthewv;Oops...this line:

But the former would mean that you couldn't guarantee all messages 

should have read

But the latter (reducing the scope of the messageListenerGuard lock being held) would mean that you couldn't guarantee all messages","02/Sep/05 12:25;yaussy;Matt,

Thanks for the response.  I will take a look at the code, given the second option you detailed as well.

Kevin.","05/Sep/05 10:19;seanf;I have a quick and dirty test case which gets the deadlock /most/ of the time on my dual core machine. ","06/Sep/05 13:02;jstrachan;I've added your test case to SVN as AMQ336Test.java - many thanks!

I've patched the code to fix up the locking around the setting of the MessageListener which I'm pretty sure should fix your issue. I also removed a few unnecessary synchronized methods which should further reduce the possibility of getting any deadlocks with this code.

While I'm pretty confident this resolves the issue, if you still see any issues with this issue, please let us know - we can always reopen this issue if you can in any way reproduce this problem again.","07/Sep/05 11:15;seanf;James,

I think you probably intended to make ActiveMessageConsumer.stop() unsynchronised too, since you changed it to use the SynchronizedBoolean, and it touches no other state.

BTW, that JUnit test was actually from me, not from Matthew.  Not that I'm vain or anything!

Sean.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
TEST org.codehaus.activemq.usecases.DeadLetterTest fails intermintently,AMQ-176,12481061,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,21/Jan/05 02:40,06/Sep/05 13:07,30/Jan/20 16:57,06/Sep/05 13:07,,,,,,,3.2,,,,,,,0,,OS X and Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-09-06 13:07:13.0,,,false,,,,,,,,,,,,,,,,,48909,,,Tue Sep 06 13:07:13 UTC 2005,,,,,,,,"0|i17y67:",254506,,,,,,,,,,,,,,,,,,,"21/Jan/05 02:45;chirino;Attaching the testcase report.","06/Sep/05 13:07;jstrachan;From all our testing this now appears to be fixed. If its not, let us know and we can reopen this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock in DurableQueue add/remove messageConsumer w/ tcp transport,AMQ-317,12481040,12481060,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,xd@maxexp.com,xd@maxexp.com,27/Jul/05 12:29,06/Sep/05 12:57,30/Jan/20 16:57,06/Sep/05 12:57,3.1,,,,,,3.2,,,Broker,Transport,,,1,"I've been writing some quick test benchmarks and ran across a race condition that causes the DurableQueueBoundedMessageManager.add/removeMessageConsumer to deadlock.  relavent parts of the stack trace:


""Thread-15"" daemon prio=5 tid=0x0053ff80 nid=0x19dfc00 waiting for monitor entry [f1010000..f1010ac0]
        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.removeConsumer(DurableQueueBoundedMessageContainer.java:152)
        - waiting to lock <0x4c9a7048> (a java.lang.Object)
        at org.activemq.service.boundedvm.DurableQueueBoundedMessageManager.removeMessageConsumer(DurableQueueBoundedMessageManager.java:265)
        - locked <0x4c999048> (a org.activemq.service.boundedvm.DurableQueueBoundedMessageManager)
        at org.activemq.broker.impl.DefaultBroker.removeMessageConsumer(DefaultBroker.java:265)
        at org.activemq.broker.impl.BrokerContainerImpl.deregisterMessageConsumer(BrokerContainerImpl.java:367)
        at org.activemq.broker.impl.BrokerConnectorImpl.deregisterMessageConsumer(BrokerConnectorImpl.java:182)
        at org.activemq.broker.impl.BrokerClientImpl.cleanUp(BrokerClientImpl.java:619)
        - locked <0x4caa47a8> (a org.activemq.broker.impl.BrokerClientImpl)
        at org.activemq.broker.impl.BrokerConnectorImpl.removeClient(BrokerConnectorImpl.java:327)
        at org.activemq.transport.TransportChannelSupport.stop(TransportChannelSupport.java:119)
        at org.activemq.transport.tcp.TcpTransportChannel.stop(TcpTransportChannel.java:215)
        at org.activemq.broker.impl.BrokerClientImpl.close(BrokerClientImpl.java:710)
        at org.activemq.broker.impl.BrokerClientImpl.onException(BrokerClientImpl.java:146)
        at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445)
        at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:480)
        at org.activemq.transport.tcp.TcpTransportChannel$1.run(TcpTransportChannel.java:258)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:552)

""Durable Queue Worker"" daemon prio=6 tid=0x00526320 nid=0x19c8a00 in Object.wait() [f0f0e000..f0f0eac0]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at EDU.oswego.cs.dl.util.concurrent.BoundedBuffer.put(Unknown Source)
        - locked <0x4caa46f8> (a java.lang.Object)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$WaitWhenBlocked.blockedAction(Unknown Source)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor.execute(Unknown Source)
        at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransportChannel.java:254)
        at org.activemq.broker.impl.BrokerClientImpl.send(BrokerClientImpl.java:676)
        at org.activemq.broker.impl.BrokerClientImpl.dispatchToClient(BrokerClientImpl.java:221)
        at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:166)
        at org.activemq.service.boundedvm.DurableQueueSubscription.doDispatch(DurableQueueSubscription.java:93)
        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.run(DurableQueueBoundedMessageContainer.java:326)
        - locked <0x4c9a7048> (a java.lang.Object)
        - locked <0x4c9a7050> (a java.lang.Object)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:552)


subsequent attempts to addConsumers will also hang until the server broker is killed and restarted

the code that causes this to happen is as follows:

          final long[] received = new long[1];

        Connection connection = connectionFactory.createConnection();
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        Destination destination = new ActiveMQQueue(""testQueue"");
        MessageConsumer consumer = session.createConsumer(destination);
        consumer.setMessageListener(new MessageListener() {
            public void onMessage(Message message) {
                synchronized(received) {
                    received[0]++;
                }
            }
        });
        connection.start();

        final int total = 1000000;


        new Thread(new Runnable() {
            public void run() {
                for(int i=0;i<total;i++) {
                    template.convertAndSend(""testQueue"", ""test message"");
                }
            }
        }).start();

        long last = 0;
        long cur = 0;

        do {
            synchronized(received) {
                cur = received[0];
            }
            System.out.println(""received = "" + cur + "" diff = "" + (cur - last));
            last = cur;
            Thread.sleep(1000);
        } while(cur < total);


(the template object is just a normal spring JmsTemplate configured in the app context in the test client)

If I run the above code and stop/kill/interupt the process while its still sending messages the server broker will go into this deadlock about 1 out of every 3 tries in my test setup, otherwise it just spits out an IOException and removes the messageConsumer just fine

","activemq-core-3.1-M6.jar util.concurrent 1.3.4, jdk 1.4.2 on osx 10.4
test client connecting to standalone broker configured for tcp transport and vm persistance
",seanf,xd@maxexp.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-08-26 06:28:44.0,,,false,,,,,,,,,,,,,,,,,49029,,,Tue Sep 06 12:57:48 UTC 2005,,,,,,,,"0|i0s2cn:",161857,,,,,,,,,,,,,,,,,,,"26/Aug/05 06:28;jstrachan;This looks like it could be the same issue","06/Sep/05 12:57;jstrachan;Many thanks for spotting this one Jason.

I've added your test case to SVN as AMQ317Test as well as resolving the issue.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fragmented message does not get delivered correctly to a connector endpoint,AMQ-338,12481048,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,24/Aug/05 15:20,02/Sep/05 16:10,30/Jan/20 16:57,02/Sep/05 16:10,3.1,,,,,,3.2,,,Connector,,,,0,"Rudolf Holler reported that he has problems consuming fragmented messages using the jca connector.  I think he correctly summerized that ""Perhapbs if the message parts are send with different threads to the MDBean, my MDBean is not able to receive all parts and put it together to one message.""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49044,,,Fri Sep 02 16:10:35 UTC 2005,,,,,,,,"0|i17ygv:",254554,,,,,,,,,,,,,,,,,,,"02/Sep/05 16:10;chirino;Should be fixed now.  Message dispatching once a message arrived to a conection could either go:
1. connection - > session -> consumer : the standard jms case of message consumers
2. connection -> connection consumer -> session -> message listener : for the MDB and MDP case of message consnumers.

The session was hadling reassembling fragmented messages.  Unfortunatley, in case #2 the fragments were being dispatched to different sessions.  I fixed the problem by moving the reassembly code to the connection level.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Big message queue causes deadlock on server restart,AMQ-324,12481060,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,juliano,juliano,16/Aug/05 13:12,02/Sep/05 14:27,30/Jan/20 16:57,02/Sep/05 14:27,3.0,,,,,,3.2,,,Broker,,,,0,"When adding a new consumer to a queue, the DurableQueueBoundedMessageManager will try to create the queue container and start it if it hasn´t been created yet. The container startup process tries to recover messages from persistent storage into the MemoryBoundedQueue associated with the destination. If the MemoryBoundedQueue becomes full during the recorvery, a deadlock situation is reached: the enqueue method of MemoryBoundedQueue will keep waiting until a message is consumed so it can add a new message, but no messages will be consumed because the message consumer has not yet been added to the destination.
","ActiveMQ 3.0, Linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-08-25 14:40:53.0,,,false,,,,,,,,,,,,,,,,,49035,,,Fri Sep 02 14:27:45 UTC 2005,,,,,,,,"0|i17yin:",254562,,,,,,,,,,,,,,,,,,,"25/Aug/05 14:40;jstrachan;Any idea how to reproduce this error?

Does 3.1 fix your error?","25/Aug/05 16:18;juliano;I've tried it agains 3.1M6 and it wasn't fixed then.
To reproduce:
- Create and start a producer that will send messages to a queue until it is full (i.e until messages like 'Queue is full...' start appearing in the activemq log file)
- Stop the producer
- Shutdown the activemq server
- Start the activemq server
- Start a consumer for the queue above.

After a while the ' Queue is full...' messages starts appearing in the log file. The consumer never gets a chance to consume the messages since at this point the queue is still being recoevered.
The queue will never be recovered since it's waiting for some messages to be dequeued. Deadlock.","26/Aug/05 06:28;jstrachan;This looks like it could be the same issue","02/Sep/05 14:27;chirino;Juliano,

I've just commited a fix for this to CVS that should fix the problem.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
possible NullPointerException when using temporary topics,AMQ-343,12481192,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,jstrachan,jstrachan,30/Aug/05 09:53,30/Aug/05 09:53,30/Jan/20 16:57,30/Aug/05 09:53,3.1,,,,,,3.2,,,,,,,0,"reported by Aleksi Kallio

> java.lang.NullPointerException
>         at 
> org.activemq.broker.impl.AdvisorySupport.matchGeneralAdvisory(AdvisorySupport.java:294) 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49048,,,2005-08-30 09:53:21.0,,,,,,,,"0|i17yg7:",254551,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RAR Implementation Does not Use Connection-specific configuration,AMQ-339,12481184,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,eriko,eriko,25/Aug/05 21:12,26/Aug/05 09:01,30/Jan/20 16:57,26/Aug/05 09:01,3.1,3.2,,,,,3.2,,,Connector,,,,0,"The connector implementation does not allow for connection factory-specific deployments. As an example, to connect to a broker that does not listen on the standard port, you can configure this in JBoss with a connection factory deployment as follows:

  <tx-connection-factory>
    <jndi-name>/activemq/QueueConnectionFactory</jndi-name>
    <local-transaction/>
    <rar-name>activemq-ra-3.2-SNAPSHOT.rar</rar-name>
    <config-property name=""ServerUrl"" type=""java.lang.String"">tcp://localhost:10000</config-property>
    <config-property name=""Clientid"" type=""java.lang.String"">NodeX1002</config-property>
    <connection-definition>javax.jms.QueueConnectionFactory</connection-definition>
    <security-domain-and-application>JmsXARealm</security-domain-and-application>
  </tx-connection-factory>

However, the connector does not actually honor the new values although they are properly set in JBoss. This is ultimately b/c the ActiveMQManagedConnectionFactory calls back to the ActiveMQResourceAdapter's makeConnection() method to create the connection object. makeConnection() uses a connection factory with the default configuration, not the configuration of the factory. Patch attached, tested and working in my environment for simple message dispatching, should probably be tested with MDB activation as well. ","Linux 2.6.12 custom kernel, java version ""1.5.0_04"", ActiveMQ 3.1 (3.2), JBoss 4.0.2
",,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Aug/05 21:12;eriko;ASF.LICENSE.NOT.GRANTED--rar-config.patch;https://issues.apache.org/jira/secure/attachment/12460534/ASF.LICENSE.NOT.GRANTED--rar-config.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2005-08-26 09:01:41.0,,,false,,,,,,,,,,,,,,,,,49045,,,Fri Aug 26 09:01:41 UTC 2005,,,,,,,,"0|i17ygn:",254553,,,,,,,,,,,,,,,,,,,"26/Aug/05 09:01;jstrachan;Path applied - many thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slow down in a Point-to-Point producer heavy scenario,AMQ-138,12481140,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,edcurry,edcurry,24/Nov/04 17:53,15/Aug/05 15:40,30/Jan/20 16:57,15/Aug/05 15:40,1.1,1.2,,,,,3.1,,,,,,,0,"In a Point-to-Point producer heavy scenario (i.e 50:5 producers:consumers) message throughput slows to 5msg/sec after a period of time (in the case of 50:5 it was about 40 seconds).

Messages are set as non-persistent.
Persistance has been removed from the server.
Auto_Ack.
BtyeMessages were used.

Once slow down starts CPU drops from 100% to 5/10%.

No error messages from server or clients.","Windows 2000 / Redhat 9.0
P4 1.5 
1gig ram",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-08-15 15:40:16.0,,,false,,,,,,,,,,,,,,,,,48873,,,Mon Aug 15 15:40:16 UTC 2005,,,,,,,,"0|i17y3b:",254493,,,,,,,,,,,,,,,,,,,"15/Aug/05 15:40;jstrachan;We've tested this heavily and its no longer the case that things slow down with producer heavy scenario.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TopicClusterTest needs to put brokers in different store dirs,AMQ-323,12481086,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,maguro,maguro,maguro,14/Aug/05 19:57,14/Aug/05 20:34,30/Jan/20 16:57,14/Aug/05 20:34,3.0,,,,,,3.1,3.2,,Broker,,,,0,TopicClusterTest needs to put brokers in different store directories.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49034,,,2005-08-14 19:57:18.0,,,,,,,,"0|i17yiv:",254563,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error accessing Journal using Peer protocol when Producer and Consumer are in 1 VM,AMQ-263,12481361,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,pvillacorta,pvillacorta,10/Jun/05 08:12,15/Jul/05 21:55,30/Jan/20 16:57,15/Jul/05 21:55,3.1,,,,,,3.1,,,,,,,0,"I tried to test ActiveMQ peer-to-peer in JMeter with the producer and consumer in the same VM (embedded broker, ""peer://development"" as url). 
I got the following exception:

javax.jms.JMSException: Failed to open transaction journal: java.io.IOException: Journal is allready opened by another application 

The producer and consumer were both trying to modify the same journal for persistence (in directory ""ActiveMQ"" or value set to system property ""activemq.store.dir"")",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-07 17:27:13.0,,,false,,,,,,,,,,,,,,,,,48984,,,Fri Jul 15 21:55:44 UTC 2005,,,,,,,,"0|i0tsuf:",171982,,,,,,,,,,,,,,,,,,,"07/Jul/05 17:27;jstrachan;This isn't a bug per se - its that the 2 JVMs are trying to use the journal files in the same directory. If you run each JVM in a different directory, it should be fine - or explicitly configure the ActiveMQ directory to be different for each JVM","07/Jul/05 17:28;jstrachan;Whoops, ignore the last comment. I missed the 'in 1 VM' :)

This sounds like a bug, as in the same JVM it should be using the same broker. Sounds like a bug afterall :)","15/Jul/05 21:55;chirino;Just retested and the issue has been now fixed.  ""peer://development"" can now be used in the jmeter sampler.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Too many open files caused by DataContainer.java,AMQ-219,12481023,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,foconer,foconer,18/Mar/05 04:45,15/Jul/05 21:49,30/Jan/20 16:57,15/Jul/05 21:49,2.1,,,,,,3.1,,,Broker,,,,0,"Reported by: Cobus Combrink (ccombrink@astratagroup.com)

The implementation of class DataContainer maintains a list of classes with
embedded OPEN file handles and runs the risk of exhausting the system file
handles.

This can be made visible by running a fast producer and a very slow
consumer.
An exception will be thrown after a large number of messages were queued
using the class SpooledBoundedActiveMQMessageQueue.
The server will be unable to queue further messages, subsequently dropping
connections.",,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-275,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-06-22 21:30:54.0,,,false,,,,,,,,,,,,,,,,,48944,,,Fri Jul 15 21:49:06 UTC 2005,,,,,,,,"0|i0tt3r:",172024,,,,,,,,,,,,,,,,,,,"22/Jun/05 21:30;gklyuzner;Same problem with v3.1

2005-06-22 11:51:54,929 [ocalport=61616]] ERROR BrokerClientImpl               - Could not enqueue message ACTIVEMQ_OBJECT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:ny-cap-33-2024-1119453996333-83:3980, bodyAsBytes = org.activemq.io.util.ByteArray@124df5, readOnlyMessage = false, jmsClientID = 'ID:ny-cap-33-2024-1119453996333-6:0' , jmsCorrelationID = 'null' , jmsDestination = Topic.sds.PropertyTemplatePublisher, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered = false, jmsType = 'null' , jmsExpiration = 1119455573633, jmsPriority = 4, jmsTimestamp = 1119455513633, properties = null, readOnlyProperties = false, entryBrokerName = 'ID:nyotc023-2882-1119382254093-0:0' , entryClusterName = 'default' , consumerNos = [I@1bc35d0, transactionId = 'null' , xaTransacted = false, consumerIdentifer = 'null' , messageConsumed = false, transientConsumed = false, sequenceNumber = 3980, deliveryCount = 1, dispatchedFromDLQ = false, messageAcknowledge = null, jmsMessageIdentity = null, producerKey = ID:ny-cap-33-2024-1119453996333-83: } ActiveMQObjectMessage{ object = null } to SpooledBoundedQueue for this slow consumer
javax.jms.JMSException: enqueNoBlock failed: Too many open files
	at org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueueNoBlock(SpooledBoundedActiveMQMessageQueue.java:121)
	at org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueue(SpooledBoundedActiveMQMessageQueue.java:91)
	at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:198)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.dispatchToQueue(TransientTopicBoundedMessageContainer.java:223)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.targetAndDispatch(TransientTopicBoundedMessageContainer.java:155)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.doSendMessage(TransientTopicBoundedMessageManager.java:225)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.sendMessage(TransientTopicBoundedMessageManager.java:204)
	at org.activemq.broker.impl.DefaultBroker.doMessageSend(DefaultBroker.java:563)
	at org.activemq.broker.impl.DefaultBroker.sendMessage(DefaultBroker.java:305)
	at org.activemq.broker.impl.BrokerContainerImpl.sendMessage(BrokerContainerImpl.java:462)
	at org.activemq.broker.impl.BrokerConnectorImpl.sendMessage(BrokerConnectorImpl.java:271)
	at org.activemq.broker.impl.BrokerClientImpl.consumeActiveMQMessage(BrokerClientImpl.java:706)
	at org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:310)
	at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)
	at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)
	at java.lang.Thread.run(Thread.java:534)
","15/Jul/05 21:49;chirino;closing as dup was closed.  see AMQ-275",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Journal files grow large and never resize back to the original size.,AMQ-298,12481104,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,12/Jul/05 19:54,14/Jul/05 19:01,30/Jan/20 16:57,14/Jul/05 19:01,3.0,,,,,,3.1,,,Message Store,,,,0,"When journal log files grew past thier prefered size and then rolledover, they were not being resized to the prefered size.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49016,,,Thu Jul 14 19:01:40 UTC 2005,,,,,,,,"0|i0tt5r:",172033,,,,,,,,,,,,,,,,,,,"14/Jul/05 19:01;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 3.0 client does not seem to be compatible with 3.1 server.,AMQ-261,12481295,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,09/Jun/05 14:55,13/Jul/05 18:01,30/Jan/20 16:57,07/Jul/05 17:41,3.0,,,,,,3.1,,,Transport,,,,0,Cook reported that we have broker the wire Format.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-06-09 16:52:27.0,,,false,,,,,,,,,,,,,,,,,48982,,,Wed Jul 13 18:01:45 UTC 2005,,,,,,,,"0|i0s0lr:",161574,,,,,,,,,,,,,,,,,,,"09/Jun/05 14:59;chirino;Dennis Cook Posted:

I have a question on connection compatibility.  Having read some older post about compatibility between versions, that led me to believe that older clients could connect to a newer broker if the major version was the same.  Where version 2 to version 3 was not possible because wire protocol changed, I thought 3.0 to 3.1 should be possible.  However my recent testing has shown several failures.  Since the bug reporting system is still out of commission, I have been sending these on to Hiram as I find them.  But I would like to get a consensus viewpoint.  Should 3.0 connection clients be connection compatible with the soon to be release version 3.1, or am I just chasing after a lost cause here?
","09/Jun/05 15:01;chirino;I fixed one problem with ActiveMQDestination by setting it's serialVersionUID to:
static final long serialVersionUID = -3300456112096957638L;

Other preoblems may be left.  Still need to check.","09/Jun/05 16:52;dennis@bevocal.com;Second problem found:

In the class org.activemq.broker.impl.AdvisorySupport there are many references to the method

ActiveMQDestination.getDestinationBeingAdvised()

such as the following example:

ActiveMQDestination match = advisory.getDestination().getDestinationBeingAdvised();

This usually followed by an unconditional use of the ""match"" member which was supposibly populated with the return value.  However this method can return a null value.  When the value is null, a NullPointerException is generated and the operation is never completed.","09/Jun/05 16:53;dennis@bevocal.com;The next problem I run into is now showing up on the 3.0 client side.  The exception conditions is as show below:

17:31:56,629 WARN  ActiveMQMessageConsumer  : could not process message: ACTIVEMQ_OBJECT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:ctl001-36683-1117844639697-1:360685, bodyAsBytes = org.activemq.io.util.ByteArray@14df53, readOnlyMessage = true, jmsClientID = 'null' , jmsCorrelationID = 'null' , jmsDestination = ActiveMQ.Advisory.TempDestinations.TemporaryTopic-{TD{wingnut.FPM.18}TD}ID:WINGNUT-3646-1117845035072-29:0, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered = false, jmsType = 'null' , jmsExpiration = 0, jmsPriority = 4, jmsTimestamp = 0, properties = null, readOnlyProperties = true, entryBrokerName = 'null' , entryClusterName = 'null' , consumerNos = [I@51f266, transactionId = 'null' , xaTransacted = false, consumerIdentifer = 'encamed002.Monitor.25.63.51' , messageConsumed = false, transientConsumed = true, sequenceNumber = 0, deliveryCount = 1, dispatchedFromDLQ = false, messageAcknowledge = org.activemq.ActiveMQSession@6cd0f9, jmsMessageIdentity = null, producerKey = null } ActiveMQObjectMessage{ object = ACTIVEMQ_CONNECTION_INFO: id = 0 ConnectionInfo{ clientId = 'log001.ResourceManager.1' , userName = 'defaultUser' , hostName = 'LOG001' , clientVersion = '3.1-SNAPSHOT' , wireFormatVersion = 3, startTime = 1117050559118, started = true, closed = false, properties = {noDelay=true} } } 
java.lang.ClassCastException: org.activemq.message.ConnectionInfo
 	at org.activemq.advisories.TempDestinationAdvisor.onMessage(TempDestinationAdvisor.java:137)
 	at org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:443)
 	at org.activemq.ActiveMQMessageConsumer.setMessageListener(ActiveMQMessageConsumer.java:243)
 	at org.activemq.advisories.TempDestinationAdvisor.start(TempDestinationAdvisor.java:84)
 	at org.activemq.ActiveMQConnection.startAdvisoryForTempDestination(ActiveMQConnection.java:1973)
 	at org.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:424)
 	at org.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:390)
 	at org.activemq.ActiveMQTopicPublisher.publish(ActiveMQTopicPublisher.java:177)
 	at bevocal.platform.util.MsgOutbox.run(MsgOutbox.java:432) 

I am really at a loss on how to explain the existance of the ConnectionInfo message in the client queue when the advisory consumer is created.  If you have any idea on how to get around this one I would love the input.  Otherwise I am not going to be able to stage my deployment and have to change all clients and the server at the same time.  That would not be fun.
","15/Jun/05 18:31;chirino;Hi Dennis,

I just tried the producer consumer examples shipped with 3.0 against a 3.1-SNAPSHOT server and they worked correctly.  What is your test case doing that's causing this error to show up?

Regards,
Hiram","16/Jun/05 01:30;dennis@bevocal.com;Hey Hiram,

The test case that showed the problem used networked brokers. It was a request/reply (non-durable topic) where the replier was connected to one broker and the requestor connected to the other broker.  I think that both the requestor and replier were version 3.0 and both brokers version 3.1.  I created separate classes for the requetor and replier.  I will attach them tomorrow when I get to work.

Dennis

","06/Jul/05 11:41;jstrachan;Dennis, is this still an issue - or can we mark it as fixed?","13/Jul/05 18:01;dennis@bevocal.com;I am not sure if still incompatible of not.  I have moved everything onto the 3.1 snapshots so it is no longer a problem for me.
",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Durable subscriptions + Journal: causes sporatic ""Message probably expired: null"" error message",AMQ-264,12481091,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,10/Jun/05 17:36,12/Jul/05 20:08,30/Jan/20 16:57,12/Jul/05 20:08,3.0,,,,,,3.1,,,Message Store,,,,0,"Matt Sinclair <msd@msdservices.com> Reported on the user list:

Hello,

I have been experiencing problems with ActiveMQ-3.1M2 dropping messages on durable subscriptions.

On a test submitting some 70,000 messages, each with approximately 1K payloads, the broker stalled somewhere around 53,911 for a couple minutes.  The broker's process began consuming 50% or more CPU, and the client was basically idle.  After a couple minutes the broker began delivering messages but at a much slower rate.  In the end, only 68398 of the 70000 messages were delivered. 
In the error log there were exactly 1602  ""Message probably expired: null"" error messages.  In terms of timing, I am not sure how these error messages correlate with the stall, though I believe the stall occurred soon after these messages.

Immediately prior to this problem and the 1602 messages there were a series of JMS exceptions in the broker's log.  The exceptions are detailed below.

This problem seems to be reproducible, though it happens less frequently with smaller batches of messages.  For example, sending batches of 10000, 30000, and 50000 generally work fine.

However, in tests sending batches of 50000 messages, exceptions about not being able to checkpoint the database were seen, though all messages were delivered.  What is interesting is that checkpoint failure seems to corresponded with the last message or second to last message in the batch.  Stacktraces are listed below.

The broker, client, and producer are running on the same machine, connected via TCP transport.  System is Java 1.4.2 on Mac OS X 10.3.9.  I can test Solaris/Sparc on Java 5 if that would be helpful.

Some of the problems appear to be ones previously reported on this list.  Obviously, the reliability of the broker is troubling.  If there is anything I can do, by way of running special builds or running more tests or etc., I would be more than willing to invest some time and resources in helping to track down and understand this serious problem.

Matt Sinclair


Sending 70000 messages, only 68398 delviered
----------------------------------------------------------
1117944936 20050605-04:15:36 :activemq: :E: :DBR0000: javax.jms.JMSException: Could not locate message in database with message id: ID:matthew-sinclair-day.local-63200-1117944927411-7:2000
	at org.activemq.store.jdbc.JDBCMessageStore.getMessageSequenceId(JDBCMessageStore.java:133)
	at 
org.activemq.store.jdbc.JDBCTopicMessageStore.setLastAcknowledgedMessageIdentity(JDBCTopicMessageStore.java:49)
	at 
org.activemq.store.journal.JournalTopicMessageStore$1.execute(JournalTopicMessageStore.java:111)
	at 
org.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
	at org.activemq.store.journal.JournalTopicMessageStore.checkpoint(JournalTopicMessageStore.java:103)
	at 
org.activemq.store.journal.JournalPersistenceAdapter$3.run(JournalPersistenceAdapter.java:365)
	at 
EDU.oswego.cs.dl.util.concurrent.QueuedExecutor$RunLoop.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:552)

1117945062 20050605-04:17:42 :activemq: :W: :DBR0000: Old message cleanup failed due to: SQL Exception: A lock could not be obtained within the time requested
1117945062 20050605-04:17:42 :activemq: :I: :DBR0000: Old message cleanup failed due to: SQL Exception: A lock could not be obtained within the time requested
1117945062 20050605-04:17:42 :activemq: :E: :DBR0000: ERROR 40XL1: A lock could not be obtained within the time requested
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java)
	at 
org.apache.derby.impl.services.locks.LockSet.lockObject(LockSet.java)
	at org.apache.derby.impl.services.locks.SinglePool.lockAnObject(SinglePool.java)
	at 
org.apache.derby.impl.services.locks.SinglePool.lockObject(SinglePool.java)
	at org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(RowLocking2.java)
	at 
org.apache.derby.impl.store.access.conglomerate.OpenConglomerate.lockPositionForRead(OpenConglomerate.java)
	at 
org.apache.derby.impl.store.access.conglomerate.GenericScanController.fetchRows(GenericScanController.java)
	at 
org.apache.derby.impl.store.access.heap.HeapScan.fetchNext(HeapScan.java)
	at org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(TableScanResultSet.java)
	at 
org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java)
	at 
org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java)
	at 
org.apache.derby.impl.sql.execute.DeleteResultSet.collectAffectedRows(DeleteResultSet.java)
	at 
org.apache.derby.impl.sql.execute.DeleteResultSet.open(DeleteResultSet.java)
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java)
	at 
org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java)
	at 
org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java)
	at 
org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at 
org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:94)
	at 
org.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDeleteOldMessages(DefaultJDBCAdapter.java:574)
	at 
org.activemq.store.jdbc.JDBCPersistenceAdapter.cleanup(JDBCPersistenceAdapter.java:252)
	at 
org.activemq.store.jdbc.JDBCPersistenceAdapter$1.run(JDBCPersistenceAdapter.java:241)
	at 
EDU.oswego.cs.dl.util.concurrent.ClockDaemon$RunLoop.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:552)

1117945076 20050605-04:17:56 :activemq: :E: :DBR0000: Failed to checkpoint a message store: javax.jms.JMSException: Could not locate message in database with message id: ID:matthew-sinclair-day.local-63200-1117944927411-7:53000
1117945076 20050605-04:17:56 :activemq: :E: :DBR0000: javax.jms.JMSException: Could not locate message in database with message id: ID:matthew-sinclair-day.local-63200-1117944927411-7:53000
	at org.activemq.store.jdbc.JDBCMessageStore.getMessageSequenceId(JDBCMessageStore.java:133)
	at 
org.activemq.store.jdbc.JDBCTopicMessageStore.setLastAcknowledgedMessageIdentity(JDBCTopicMessageStore.java:49)
	at 
org.activemq.store.journal.JournalTopicMessageStore$1.execute(JournalTopicMessageStore.java:111)
	at 
org.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
	at org.activemq.store.journal.JournalTopicMessageStore.checkpoint(JournalTopicMessageStore.java:103)
	at 
org.activemq.store.journal.JournalPersistenceAdapter$3.run(JournalPersistenceAdapter.java:365)
	at 
EDU.oswego.cs.dl.util.concurrent.QueuedExecutor$RunLoop.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:552)
1117945076 20050605-04:17:56 :activemq: :I: :DBR0000: Message probably expired: null
1117945076 20050605-04:17:56 :activemq: :I: :DBR0000: Message probably expired: null
[repeat another 1599 times]
1117945113 20050605-04:18:33 :activemq: :I: :DBR0000: Message probably expired: null


Sending 50000 messages, all delivered
-----------------------------------------------
1117930998 20050605-00:23:18 :activemq: :E: :DBR0000: Failed to checkpoint a message store: javax.jms.JMSException: Could not locate message in database with message id: ID:matthew-sinclair-day.local-62997-1117930799196-7:49999
1117930998 20050605-00:23:18 :activemq: :E: :DBR0000: javax.jms.JMSException: Could not locate message in database with message id: ID:matthew-sinclair-day.local-62997-1117930799196-7:49999
	at org.activemq.store.jdbc.JDBCMessageStore.getMessageSequenceId(JDBCMessageStore.java:133)
	at 
org.activemq.store.jdbc.JDBCTopicMessageStore.setLastAcknowledgedMessageIdentity(JDBCTopicMessageStore.java:49)
	at 
org.activemq.store.journal.JournalTopicMessageStore$1.execute(JournalTopicMessageStore.java:111)
	at 
org.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
	at org.activemq.store.journal.JournalTopicMessageStore.checkpoint(JournalTopicMessageStore.java:103)
	at 
org.activemq.store.journal.JournalPersistenceAdapter$3.run(JournalPersistenceAdapter.java:365)
	at 
EDU.oswego.cs.dl.util.concurrent.QueuedExecutor$RunLoop.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:552)",Journal+Derby,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48985,,,Tue Jul 12 20:08:39 UTC 2005,,,,,,,,"0|i0tt5z:",172034,,,,,,,,,,,,,,,,,,,"10/Jun/05 17:37;chirino;Fritz  <foconer@exist.com> was able to confirm:

Hi,

I was able to replicate the message thrown in the console ""Message probably
expired: null"". This seems to happen only when consumer is durable and
delivery mode is persistent. I tried the other scenario and it worked fine.

We will add this issue to Jira to be fixed for future release.

Regards,
Fritz
","12/Jun/05 04:37;chirino;Fritz,

I just commited a change to the Journal and pushed out a new SNAPSHOT out.  Could you re-test and let me know if the new SNAPSHOT resolves the ""Message probably expired: null"" problem?

Thanks,
Hiram ","12/Jul/05 20:08;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Serializable objects should declare a SUID,AMQ-285,12481050,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,tellison,tellison,04/Jul/05 13:47,11/Jul/05 20:25,30/Jan/20 16:57,11/Jul/05 20:25,,,,,,,3.1,,,,,,,0,"Each type that is defined as 'Serializable' should specify a constant serialVersionUID to ensure that instances of those types can be serialized across different implementations of the serialization code, or even between instances of the same ActiveMQ code compiled with different compilers[1].

An example of a serializable class that does not specify the SUID is given here[2]. 
(There is a handy compiler option in Eclipse to warn / fail classes that are serializable but do not declare the SUID).

Refs:
[1] http://java.sun.com/j2se/1.4.2/docs/guide/serialization/spec/class.html#wp4100
[2] http://svn.activemq.org/trunk/activemq/modules/core/src/java/org/activemq/io/impl/DefaultWireFormat.java?rev=294&view=markup",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-11 20:25:28.0,,,false,,,,,,,,,,,,,,,,,49004,,,Mon Jul 11 20:25:28 UTC 2005,,,,,,,,"0|i0tt7j:",172041,,,,,,,,,,,,,,,,,,,"11/Jul/05 20:25;chirino;Assigned a serialVersionUID to all Serializable",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in wire format,AMQ-273,12481264,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,22/Jun/05 16:40,11/Jul/05 09:57,30/Jan/20 16:57,22/Jun/05 20:44,3.0,,,,,,3.1,,,Transport,,,,0,"See:

http://permalink.gmane.org/gmane.comp.java.activemq.devel/534",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48994,,,Wed Jun 22 20:44:43 UTC 2005,,,,,,,,"0|i14quv:",235816,,,,,,,,,,,,,,,,,,,"22/Jun/05 20:29;chirino;The wire format message caching is not evicting entires from the cache properly.  This also cause un marshalling errors once the cache fills.","22/Jun/05 20:44;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker Memory Leak,AMQ-238,12481068,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,yuri,yuri,13/Apr/05 05:44,11/Jul/05 09:57,30/Jan/20 16:57,07/Jul/05 17:33,3.0,,,,,,3.1,,,Broker,,,,0,"We are using a Requestor for JMS RPC using a temporary queue.

We have a small number of clients, but each client potentially makes thousands of requests, and each request creates its own temporary queue.

We were seeing memory growth in 2.1 related to connections, this seems to be fixed in 3.0.

However, we now see memory growth in a different place.  YourKit shows 70% of the 240mb (currently) memory used, is in o.a.service.boundedvm.TransientQueueBoundedMessageManager.destinationMap (1 million objects), there are around 10,000 objects in TransientQueueBoundedMessageManager.destinations and TransientQueueBoundedMessageManager.containers.

We are opening and closing a connection for each Requestor, so the temporary queue, should be closing, and there is also a queue.delete() as in o.a.bean.Requestor.

If you want a YourKit snapshot, let me know, and I'll attach one.

We are looking at using a single topic with selectors as a workaround, but that complicates the logic, in order not to miss the response, before you start listening.  i.e. another thread is required.","Windows 2000 (YourKit Profiler enabled)
Java 1.4.2_06",,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-273,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-07 17:33:16.0,,,false,,,,,,,,,,,,,,,,,48961,,,Thu Jul 07 17:33:16 UTC 2005,,,,,,,,"0|i14qqf:",235796,,,,,,,,,,,,,,,,,,,"18/Apr/05 01:06;yuri;As discussed with James on irc, we are going to try the Multithreaded Requestor from lingo.  It seems that creating an unbounded number of  connections and/or temporary queues, is something that activemq doesn't handle well, even when clients are closing resources properly.  This could be related to long lived servers, but my understanding of JMS is that temporary queues should by garbage collected when the connection is closed. 

It might be good to deprecate o.a.bean.Requestor.  Its not great for performance, and also needlessly ties your app to ActiveMQ when  other alternatives are available.

But I'm OK with you guys closing this issue.  I can see we are being bad JMS citizens.  ","19/Apr/05 01:24;yuri;Using the MultiplexingRequestor from lingo seems to have stabilised memory usage.  It hasn't gotten above 17MB yet (started at 14MB).

Performance seems better, but no concrete figures to back it up.  But it wouldn't be unexpected. ","07/Jul/05 17:33;jstrachan;This is now fixed - we can handle many many producers being created & closed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
] No Packet found to match Receipt correlationId,AMQ-291,12481065,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,07/Jul/05 13:57,08/Jul/05 19:38,30/Jan/20 16:57,08/Jul/05 19:38,,,,,,,3.1,,,,,,,0,[TransportChannelSupport] No Packet found to match Receipt correlationId: 6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49009,,,Fri Jul 08 19:38:56 UTC 2005,,,,,,,,"0|i0tt9r:",172051,,,,,,,,,,,,,,,,,,,"08/Jul/05 19:38;chirino;Fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Beans are not being released when an InvalidMessageEndpointException is thrown,AMQ-170,12481036,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mgaffney,mgaffney,13/Jan/05 19:46,08/Jul/05 15:18,30/Jan/20 16:57,08/Jul/05 15:18,2.0,,,,,,3.1,,,JCA Container,,,,0,The container needs to release a bean and create a new one if an InvalidMessageEndpointException is thrown.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-04-13 11:52:34.0,,,false,,,,,,,,,,,,,,,,,48903,,,Fri Jul 08 15:18:38 UTC 2005,,,,,,,,"0|i0tt9b:",172049,,,,,,,,,,,,,,,,,,,"13/Apr/05 11:52;jstrachan;Shouldn't we use UnavailableException instead of InvalidMessageEndpointException? Just thinking we should use a standard exception if possible, rather than a custom ActiveMQ one.

BTW do you mean we shouild have a new EndpointFactory which creates a new MessageListener POJO whenever the exception occurs? Right now we tend to reuse the same POJO for each connector","08/Jul/05 15:18;jstrachan;Fixed - which means we now have to change the XML configuration slightly in Spring...

Previously we'd create a new connector like this...

  <bean id=""messageConnector"" factory-method=""addConnector"" factory-bean=""activeMQContainer"">

    <!-- subscription details -->
    <property name=""activationSpec"">
      <bean class=""org.activemq.ra.ActiveMQActivationSpec"">
        <property name=""destination"">
          <value>myTopic</value>
        </property>
        <property name=""destinationType"">
          <value>javax.jms.Topic</value>
        </property>
      </bean>
    </property>

    <!-- the bean used to process the message -->
    <property name=""messageListener"">
      <ref bean=""consumerBean""/>
    </property>
  </bean>

We now need to use this mechanism instead...

  <bean id=""messageConnector"" factory-method=""addConnector"" factory-bean=""activeMQContainer"">

    <!-- subscription details -->
    <property name=""activationSpec"">
      <bean class=""org.activemq.ra.ActiveMQActivationSpec"">
        <property name=""destination"">
          <value>myTopic</value>
        </property>
        <property name=""destinationType"">
          <value>javax.jms.Topic</value>
        </property>
      </bean>
    </property>

    <!-- the bean used to process the message -->
    <property name=""ref"" value=""consumerBean""/>
  </bean>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
abstract Spring beans and JCAContainer,AMQ-220,12481062,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,mperham,mperham,19/Mar/05 01:25,07/Jul/05 17:55,30/Jan/20 16:57,07/Jul/05 17:19,2.0,,,,,,3.1,,,,,,,1,"Please update JCAContainer to use ListableBeanFactory.getBeanNamesForType(Class) rather than blindly trying to instantiate every single bean in the context.

http://svn.activemq.org/trunk/activemq/modules/container/src/java/org/activemq/jca/JCAContainer.java?rev=1&view=auto


    [junit] Error creating bean with name 'abstractInboxCommand': Bean definition is abstract
    [junit] org.springframework.beans.factory.BeanIsAbstractException: Error creating bean with name
 'abstractInboxCommand': Bean definition is abstract
    [junit]     at org.springframework.beans.factory.support.AbstractBeanFactory.checkMergedBeanDefinition(AbstractBeanFactory.java:653)
    [junit]     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
    [junit]     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:145)
    [junit]     at org.codehaus.activemq.jca.JCAContainer.afterPropertiesSet(JCAContainer.java:77)
    [junit]     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1065)
    [junit]     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:343)
    [junit]     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:260)",,cameronbraid,pburleson,,,,,,,,,,,,,,,,,,,,,,,,AMQ-206,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-03-21 11:27:31.0,,,false,,,,,,,,,,,,,,,,,48945,,,Thu Jul 07 17:55:57 UTC 2005,,,,,,,,"0|i0s2db:",161860,,,,,,,,,,,,,,,,,,,"19/Mar/05 01:50;mperham;I'm unclear why you need to do this in the first place.  It appears that JCAConnector has an init method via InitializingBean so why isn't it just started there?

That said, there really doesn't seem like any clean way to do this in Spring 1.1.  Do you:

1) Force your users not to use abstract beans?
2) Raise the minimum Spring version to 1.1.1 or later to pick up new ListableBeanFactory functionality?
3) Something else...?
","21/Mar/05 11:27;jstrachan;BTW Mike, how do you create the error you get? e.g. do you have an example spring.xml we can use for testing?

The trouble is, the JCA container needs to initialise all the inbound message connectors on startup - i.e. perform all the subscriptions. So we need a nice way in Spring to find all the inbound message subscriptions; the issue is right now they are not beans of a certain type as we currently use factory methods to create them.

So maybe the ultimate solution is to introduce some bean of a certain type which represents all of the subscriptions; then we can just look for it? 

Maybe there's a better way in Spring that we've not thought of yet...","30/Mar/05 00:21;mperham;Just add any ole abstract Spring bean to your test XML.  Here's one for free:

<bean id=""foo""/>

The only other thing I could think to do would be to use a pre-defined naming scheme like ""*Connector"".  That is, you would try to start any beans that end in ""Connector"".

Another thought is to deprecate the whole factory method creation scheme and move to the simpler and more standard JavaBeans creation.

Instead of this:

	<bean id=""inboundMessageConnector"" factory-method=""addConnector"" factory-bean=""activeMQContainer"">
	</bean>

Use this:

	<bean id=""inboundMessageConnector"" class=""org.codehaus.activemq.jca.SomeType"">
                <property name=""container""><ref bean=""activeMQContainer""/></property>
	</bean>

Then you have the problem of how to get the ""child added"" callback to the container.  The best I can figure is make the child aware of that need:

public void init() {
    if (container instanceof ActiveMQContainer) {
        ((ActiveMQContainer)container).addConnector(this);
    }
}

But it does solve your Spring startup problem.","30/Mar/05 00:25;mperham;This is a dupe of AMQ-206
","20/Jun/05 15:54;cameronbraid;I don't understand why you need to find the inbound connector beans from the bean factory.

If they are all created via  JCAContainer.addConnector, then the JCAContainer could keep a refrence to them (in addConnector) then start them during it's afterPropertiesSet()

Am I missing something here ?","20/Jun/05 15:56;cameronbraid;If the reason is that JCAContainer can be used outside of the spring context, and in those cases the startup of the inbound connectors should be manually done - then create a new SpringJCAContainer bean that implements this idea.","29/Jun/05 22:40;pburleson;This is wrecking havoc with our setup as well. ActiveMQ should be much smarter about how it interacts with the bean factory. Abstract beans are very useful for defining common attributes that other beans use as a ""parent"". 

I'm still trying to understand the need to initialize all the beans in the factory? What's the purpose?","07/Jul/05 17:19;jstrachan;Patrick - the reason to try instantiate the beans is to ensure that all the inbound connections get correctly setup (sometimes Spring is lazy and doesn't instantiate stuff).

But your patch to AMQ-206 should fix this issue now I think?","07/Jul/05 17:19;jstrachan;Fixed now thanks to Patrick's patch","07/Jul/05 17:55;pburleson;James - Yes, the patch in AMQ-206 is to fix this problem as well. I forgot to mention the duplicate issues in my post to the dev list. And when I first found this one, I had yet to find the other. Thanks for applying the patch.",,,,,,,,,,,,,,,,,,,,,,,,,
JCAContainer fails to check if beans are abstract before calling beanFactory.getBean(),AMQ-206,12481079,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,awertkin,awertkin,05/Mar/05 10:08,07/Jul/05 17:18,30/Jan/20 16:57,07/Jul/05 17:15,2.1,,,,,,3.1,,,JCA Container,,,,1,"We have beans defined that are abstract and cannot be instantiated.  

JCAContainer attempts to instantiate all beans with:

            for (int i = 0; i < names.length; i++) {
                // TODO one day we could be smart to only pre-load the correct
                // types of bean, based on the definitions?
                String name = names[i];
                beanFactory.getBean(name);
            }

Result is a BeanIsAbstractException:

org.springframework.beans.factory.BeanIsAbstractException: Error creating bean with name 'baseXlParser': Bean definition is abstract
	at org.springframework.beans.factory.support.AbstractBeanFactory.checkMergedBeanDefinition(AbstractBeanFactory.java:653)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:145)
	at org.codehaus.activemq.jca.JCAContainer.afterPropertiesSet(JCAContainer.java:77)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1065)

Perhaps something like:

      } else if (!lazyLoad && beanFactory instanceof BeanDefinitionRegistry) {
         BeanDefinitionRegistry registry = (BeanDefinitionRegistry) beanFactory;
         String[] names = registry.getBeanDefinitionNames();
         for (int i = 0; i < names.length; i++) {
            String name = names[i];
            BeanDefinition definition = registry.getBeanDefinition(name);
            if (!definition.isAbstract())
               beanFactory.getBean(name);
         }
      }

The TO-DO in the code is well stated, what logic can be implemented to selectively get the necesssay beans?  The end result is that lazy-init singletons will be instantiated as well, perhaps without cause.

Also, I believe the code should use BeanFactoryUtils.beanNamesIncludingAncestors(ListableBeanFactory) to account for a potential hierarchy.

Note I found reference to this exact issue in the Spring Forum (http://forum.springframework.org/viewtopic.php?t=3064) but was unable to find an existing jira issue.

Thanks,

Andrew


",,awertkin,cameronbraid,mperham,pburleson,,,,,,,,,,,,,,,,,,,,,,,,"30/Jun/05 19:44;pburleson;ASF.LICENSE.NOT.GRANTED--JCAConnector.java.patch;https://issues.apache.org/jira/secure/attachment/12460722/ASF.LICENSE.NOT.GRANTED--JCAConnector.java.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2005-03-30 00:34:17.0,,,false,,,,,,,,,,,,,,,,,48933,,,Thu Jul 07 17:15:05 UTC 2005,,,,,,,,"0|i0s2dj:",161861,,,,,,,,,,,,,,,,,,,"30/Mar/05 00:34;mperham;See also AMQ-220

Another (hackish) solution: what about simply listing the names of the connectors associated with this container?

<bean id=""activeMQContainer"" ...>
  <property name=""connectorBeanList"">
    <list>
      <idref local=""connectorA""/>
      <idref local=""connectorB""/>
    </list>
  </property>
  ...
</bean>

The container could then perform an explicit getBean(String) on each value in the list.","30/Jun/05 02:32;pburleson;Posted this on AMQ-220 as well:

This is wrecking havoc with our setup as well. ActiveMQ should be much smarter about how it interacts with the bean factory. Abstract beans are very useful for defining common attributes that other beans use as a ""parent"".

I'm still trying to understand the need to initialize all the beans in the factory? What's the purpose?","30/Jun/05 02:33;pburleson;I don't think Mike's suggestion is too much of a hack. It's how I would configure most beans to work. It's better, at least to me, to see it all wired up in one place.

I think I'm going to checkout from SVN and take a look at creating a patch to create this behavior. ","30/Jun/05 19:44;pburleson;A patch to implement Andrew's idea of how to fix this. 

It allows my Spring Context to deploy just fine and the ActiveMQ stuff works as well. ","07/Jul/05 17:15;jstrachan;Many thanks for the patch Patrick - applied now!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource Adapter XA problems when using async sends,AMQ-293,12481141,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,07/Jul/05 14:58,07/Jul/05 15:31,30/Jan/20 16:57,07/Jul/05 15:31,3.1,,,,,,3.1,,,Connector,,,,0,"When using async sends in j2ee container, the broker sometimes would see exceptions saying that the XID had not been started yet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49011,,,Thu Jul 07 15:31:07 UTC 2005,,,,,,,,"0|i0rrp3:",160131,,,,,,,,,,,,,,,,,,,"07/Jul/05 15:31;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error message seen on client side lgs when using XA: No Packet found to match Receipt correlationId,AMQ-292,12481088,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,07/Jul/05 13:58,07/Jul/05 14:04,30/Jan/20 16:57,07/Jul/05 14:04,3.0,,,,,,3.1,,,,,,,0,[TransportChannelSupport] No Packet found to match Receipt correlationId: 6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49010,,,Thu Jul 07 14:04:01 UTC 2005,,,,,,,,"0|i0rron:",160129,,,,,,,,,,,,,,,,,,,"07/Jul/05 14:04;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zeroconfDiscovery fails to restore disconnect channel,AMQ-287,12481045,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rsaba,rsaba,rsaba,05/Jul/05 15:09,06/Jul/05 15:12,30/Jan/20 16:57,06/Jul/05 15:12,3.0,,,,,,3.1,,,Broker,,,,0,"Per Christopher Kingsbury:

Hi Ramzi,

I just tested against the latest in SVN, and it seems to have fixed the 80 megs of log messages.  However, the brokers don't seem to reconnect properly.   Here is how I was able to reproduce this problem.

   1. Remove all contents of the var directories in alpha and beta
   2. Startup Alpha, and wait until it logs ""ActiveMQ JMS Message Broker (alpha) has started""
   3. Startup Beta, and wait until it logs ""Started NetworkChannel to tcp://localhost:61616""
   4. Startup example consumer, pointed to alpha ""ant consumer -Durl=tcp://localhost:61616""
   5. Startup producer, pointed at beta ""ant producer  -Durl= tcp://localhost:61617"".  Messages are successfully delivered
   6. Kill beta via kill command
   7. Restart beta, and wait for ""Started NetworkChannel to tcp://localhost:61616""
   8. Startup example consumer, pointed to alpha.  It doesn't log any, however the Alpha broker then logs the following error

    00:57:20 ERROR Failed to start NetworkMessageBridge for destination: TEST.FOO
    org.activemq.ConnectionClosedException: The connection is already closed
            at org.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:811)
            at org.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:446)
            at org.activemq.transport.NetworkChannel.createBridge(NetworkChannel.java:416)
            at org.activemq.transport.NetworkChannel.addConsumerInfo(NetworkChannel.java:385)
            at org.activemq.transport.NetworkChannel.addConsumerInfo(NetworkChannel.java:379)
            at org.activemq.transport.NetworkChannel.access$200(NetworkChannel.java:53)
            at org.activemq.transport.NetworkChannel$2.run(NetworkChannel.java:237)
            at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
            at java.lang.Thread.run(Thread.java:595)

   9. Startup example producer, pointed to beta.  Messages are not delivered to the consumer

Interesting thing is that if I kill and restart alpha instead of beta (in the both test case), the producer/consumer works fine after the restart.  I've attached the logfiles and config files.

Thanks for your help.
Chris



<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC  ""-//ACTIVEMQ//DTD//EN"" ""http://activemq.org/dtd/activemq.dtd"">
<beans>
  
  <!-- ==================================================================== -->
  <!-- ActiveMQ Broker Configuration -->
  <!-- ==================================================================== -->
  <broker name=""alpha"">
    <connector>
      <tcpServerTransport uri=""tcp://localhost:61616"" backlog=""1000"" useAsyncSend=""true"" maxOutstandingMessages=""50""/>
    </connector>

    <discoveryAgent>
      <zeroconfDiscovery type=""_activemq.broker.development.""/>
    </discoveryAgent>
    <discoveryNetworkConnector/>

    <persistence>
      <cachePersistence>
        <journalPersistence directory=""../var/journal"">
          <jdbcPersistence dataSourceRef=""derby-ds""/>

          <!-- Choose one of the following three configurationss to work with mysql-ds-->
          <!--
          <jdbcPersistence dataSourceRef=""mysql-ds""
                         adapterClass=""org.activemq.store.jdbc.adapter.BytesJDBCAdaptor""/>
          <jdbcPersistence dataSourceRef=""mysql-ds""
                         adapterClass=""org.activemq.store.jdbc.adapter.BlobJDBCAdaptor""/>
          <jdbcPersistence dataSourceRef=""mysql-ds""
                         adapterClass=""org.activemq.store.jdbc.adapter.StreamJDBCAdaptor""/>
          -->
        </journalPersistence>
      </cachePersistence>
    </persistence>
  </broker>

  <!-- ==================================================================== -->
  <!-- JDBC DataSource Configurations -->
  <!-- ==================================================================== -->

  <!-- The Derby Datasource that will be used by the Broker -->
  <bean id=""derby-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"">
      <value>org.apache.derby.jdbc.EmbeddedDriver</value>
    </property>
    <property name=""url"">
      <!-- Use a URL like 'jdbc:hsqldb:hsql://localhost:9001' if you want to connect to a remote hsqldb -->
      <value>jdbc:derby:derbydb;create=true</value>
    </property>
    <property name=""username"">
      <value></value>
    </property>
    <property name=""password"">
      <value></value>
    </property>
    <property name=""poolPreparedStatements"">
      <value>true</value>
    </property>
  </bean>

  <!-- The MYSQL Datasource that will be used by the Broker -->
  <bean id=""mysql-ds""
    class=""org.apache.commons.dbcp.BasicDataSource""
    destroy-method=""close"">
    <property name=""driverClassName"">
      <value>com.mysql.jdbc.Driver</value>
    </property>
    <property name=""url"">
      <value>jdbc:mysql://localhost/activemq</value>
    </property>
    <property name=""username"">
      <value>myname</value>
    </property>
    <property name=""password"">
      <value>mypassword</value>
    </property>
    <property name=""poolPreparedStatements"">
      <value>true</value>
    </property>
  </bean>


</beans>



<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC  ""-//ACTIVEMQ//DTD//EN"" ""http://activemq.org/dtd/activemq.dtd"">
<beans>
  
  <!-- ==================================================================== -->
  <!-- ActiveMQ Broker Configuration -->
  <!-- ==================================================================== -->
  <broker name=""beta"">
    <connector>
      <tcpServerTransport uri=""tcp://localhost:61617"" backlog=""1000"" useAsyncSend=""true"" maxOutstandingMessages=""50""/>
    </connector>

    <discoveryAgent>
      <zeroconfDiscovery type=""_activemq.broker.development.""/>
    </discoveryAgent>
    <discoveryNetworkConnector/>

    <persistence>
      <cachePersistence>
        <journalPersistence directory=""../var/journal"">
          <jdbcPersistence dataSourceRef=""derby-ds""/>

          <!-- Choose one of the following three configurationss to work with mysql-ds-->
          <!--
          <jdbcPersistence dataSourceRef=""mysql-ds""
                         adapterClass=""org.activemq.store.jdbc.adapter.BytesJDBCAdaptor""/>
          <jdbcPersistence dataSourceRef=""mysql-ds""
                         adapterClass=""org.activemq.store.jdbc.adapter.BlobJDBCAdaptor""/>
          <jdbcPersistence dataSourceRef=""mysql-ds""
                         adapterClass=""org.activemq.store.jdbc.adapter.StreamJDBCAdaptor""/>
          -->
        </journalPersistence>
      </cachePersistence>
    </persistence>
  </broker>

  <!-- ==================================================================== -->
  <!-- JDBC DataSource Configurations -->
  <!-- ==================================================================== -->

  <!-- The Derby Datasource that will be used by the Broker -->
  <bean id=""derby-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"">
      <value>org.apache.derby.jdbc.EmbeddedDriver</value>
    </property>
    <property name=""url"">
      <!-- Use a URL like 'jdbc:hsqldb:hsql://localhost:9001' if you want to connect to a remote hsqldb -->
      <value>jdbc:derby:derbydb;create=true</value>
    </property>
    <property name=""username"">
      <value></value>
    </property>
    <property name=""password"">
      <value></value>
    </property>
    <property name=""poolPreparedStatements"">
      <value>true</value>
    </property>
  </bean>

  <!-- The MYSQL Datasource that will be used by the Broker -->
  <bean id=""mysql-ds""
    class=""org.apache.commons.dbcp.BasicDataSource""
    destroy-method=""close"">
    <property name=""driverClassName"">
      <value>com.mysql.jdbc.Driver</value>
    </property>
    <property name=""url"">
      <value>jdbc:mysql://localhost/activemq</value>
    </property>
    <property name=""username"">
      <value>myname</value>
    </property>
    <property name=""password"">
      <value>mypassword</value>
    </property>
    <property name=""poolPreparedStatements"">
      <value>true</value>
    </property>
  </bean>


</beans>

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49006,,,Wed Jul 06 15:12:26 UTC 2005,,,,,,,,"0|i0s17z:",161674,,,,,,,,,,,,,,,,,,,"06/Jul/05 15:12;rsaba;added logic to use a reliable tcp channel for zeroconf discovery networks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3.0 Binary Release m\Missing: META-INF/services/org/activemq/transport/server/ssl,AMQ-239,12481325,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,richardwalsh,richardwalsh,14/Apr/05 05:40,06/Jul/05 12:58,30/Jan/20 16:57,06/Jul/05 12:58,3.0,,,,,,3.1,,,Transport,,,,0,"The ssl file in the META-INF directory doesn't exist in the 3.0 binary release jar file.  Simple example that uses SSL barfs:

javax.jms.JMSException: Could not load protocol: ssl. Reason: java.io.IOException: Could not find class for resource: META-INF/services/org/activemq/transport/server/ssl
	at org.activemq.transport.TransportServerChannelProvider.createJMSexception(TransportServerChannelProvider.java:85)
	at org.activemq.transport.TransportServerChannelProvider.getFactory(TransportServerChannelProvider.java:76)
	at org.activemq.transport.TransportServerChannelProvider.create(TransportServerChannelProvider.java:45)
	at org.activemq.broker.impl.BrokerConnectorImpl.createTransportServerChannel(BrokerConnectorImpl.java:415)
	at org.activemq.broker.impl.BrokerConnectorImpl.<init>(BrokerConnectorImpl.java:69)
	at org.activemq.broker.impl.BrokerContainerImpl.addConnector(BrokerContainerImpl.java:616)
	at org.activemq.broker.impl.BrokerContainerImpl.addConnector(BrokerContainerImpl.java:612)

",Windows XP,richardwalsh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-06 12:58:43.0,,,false,,,,,,,,,,,,,,,,,48962,,,Wed Jul 06 12:58:43 UTC 2005,,,,,,,,"0|i0s2gn:",161875,,,,,,,,,,,,,,,,,,,"06/Jul/05 12:58;jstrachan;This is now fixed in the 3.1-SNAPSHOT distro...

http://dist.codehaus.org/activemq/distributions

and will be fixed for the 3.1 release",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
session.commit() inside a MessageListener does not ack the current message until after the transaction commit,AMQ-289,12481133,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,06/Jul/05 10:37,06/Jul/05 10:59,30/Jan/20 16:57,06/Jul/05 10:59,,,,,,,3.1,,,JMS client,,,,0,"org.activemq.test.RollbackTest has the test case from Deepak Nayal.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49007,,,2005-07-06 10:37:44.0,,,,,,,,"0|i0s127:",161648,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable Subscription recovery not working.,AMQ-282,12481199,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,30/Jun/05 04:16,01/Jul/05 21:56,30/Jan/20 16:57,01/Jul/05 21:56,3.0,,,,,,3.1,,,Message Store,,,,0,"Bug can be verified with the shipped examples.  To reproduce:

1. Start broker
2. ant -Dtopic=true -Ddurable=true consumer
3. Restart broker
4. ant -Dtopic=true -Ddurable=true producer
5. ant -Dtopic=true -Ddurable=true consumer

At step 5 I would expect the produced messages to be received but are not.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,41777,,,Fri Jul 01 21:56:03 UTC 2005,,,,,,,,"0|i0ttcf:",172063,,,,,,,,,,,,,,,,,,,"01/Jul/05 21:56;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory Messages are persistent,AMQ-284,12481278,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,01/Jul/05 18:58,01/Jul/05 21:35,30/Jan/20 16:57,01/Jul/05 21:35,3.0,,,,,,3.1,,,Broker,,,,0,Advisory messages should not be persisted to avoid performance degregation.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49003,,,Fri Jul 01 21:35:32 UTC 2005,,,,,,,,"0|i0ttg7:",172080,,,,,,,,,,,,,,,,,,,"01/Jul/05 21:35;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA elistment does not work when 2 sessions are used in 1 xa transaction.,AMQ-283,12481354,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,30/Jun/05 04:22,01/Jul/05 17:21,30/Jan/20 16:57,01/Jul/05 17:21,3.0,,,,,,3.1,,,Broker,,,,0,"Seems we are not hadling the case where the TM is elisting multiple sessions in the same transaction.  Bug reported on the user list:

From:   mazurek@opentext.com

Hi,

A colleague found what appears to be an ActiveMQ bug in 2.1.  Haven't had the opportunity to try it with version 3.0.

The issue revolves around enlistment of resources with transaction managers.  It appears that the enlistment process wipes out messages that have already been sent.

For example, in this piece of code:

  tm.begin();
  tm.getTransaction().enlistResource( jmsSession1.getXAResource() );
  producer1.send( message1 );
  producer1.send( message2 );
  producer1.send( message3 );

  // registering the second session on the same thread with the
  // transaction causes all of the previous messages on the transaction
  // to be lost
  tm.getTransaction().enlistResource( jmsSession2.getXAResource() );
  producer2.send( message4 );
  producer2.send( message5 );
  producer2.send( message6 );

the enlistment that starts off the second block will cause messages 1, 2 and 3 to be dropped.

I have attached three source files that will hopefully help confirm/diagnose/fix the problem.

Thanks.
-- 
Brad
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49002,,,Fri Jul 01 17:21:21 UTC 2005,,,,,,,,"0|i0rrpb:",160132,,,,,,,,,,,,,,,,,,,"01/Jul/05 17:21;chirino;Fixed.  Wrong hash map was being used to look up the xa transaction when a begin call was issued.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Killing broker causes other enormous error logging in remaining networked brokers,AMQ-281,12481209,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rsaba,rsaba,rsaba,29/Jun/05 21:21,29/Jun/05 21:30,30/Jan/20 16:57,29/Jun/05 21:30,3.1,,,,,,3.1,,,Transport,,,,0,"I configured clustering between 2 brokers (I called them alpha and beta).  To configure clustering I added the following into the activemq.xml file:

    <discoveryAgent>
      <zeroconfDiscovery type=""_activemq.broker.development.""/>
    </discoveryAgent>
    <discoveryNetworkConnector/>

When I start the brokers up, clustering seems fine, as both brokers successfully join the cluster, and I'm able to use the example producer/consumer to send/receive from either of the brokers. 

However, when I shutdown one of the brokers via kill (in this test run I killed beta), the remaining broker gets into a bad state, and ends up logging approximately 80 megs worth of this stack trace:

2005-06-27 14:34:38,203 [localport=1322]] WARN  ActiveMQConnection             - Async exception with no exception listener: javax.jms.JMSException: asyncSend failed: java.net.SocketException: Connection reset by peer: socket write error
javax.jms.JMSException: asyncSend failed: java.net.SocketException: Connection reset by peer: socket write error
	at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
	at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:479)
	at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransportChannel.java:286)
	at org.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1190)
	at org.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1167)
	at org.activemq.ActiveMQConnection.sendConnectionInfoToBroker(ActiveMQConnection.java:1452)
	at org.activemq.ActiveMQConnection.close(ActiveMQConnection.java:757)
	at org.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:982)
	at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445)
	at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:480)
	at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransportChannel.java:286)
	at org.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1190)
	at org.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1167)
	at org.activemq.ActiveMQConnection.sendConnectionInfoToBroker(ActiveMQConnection.java:1452)
	at org.activemq.ActiveMQConnection.close(ActiveMQConnection.java:757)
	at org.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:982)
	at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445)
	at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:480)
	at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransportChannel.java:286)
	at org.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1190)
	at org.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1167)
	at org.activemq.ActiveMQConnection.sendConnectionInfoToBroker(ActiveMQConnection.java:1452)
	at org.activemq.ActiveMQConnection.close(ActiveMQConnection.java:757)
	at org.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:982)
	at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445)
	at org.activemq.transport.tcp.TcpTransportChannel.doClose(TcpTransportChannel.java:509)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:326)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at org.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:109)
	at java.io.DataOutputStream.flush(DataOutputStream.java:106)
	at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:471)
	... 26 more

After restarting the beta broker I just killed, it seems to join the cluster properly, but as soon as I connect the consumer example to the alpha broker, the alpha proceeds to log another 80 megs worth of the same exceptions.",3.1-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49001,,,Wed Jun 29 21:30:56 UTC 2005,,,,,,,,"0|i17yc7:",254533,,,,,,,,,,,,,,,,,,,"29/Jun/05 21:30;rsaba;Added a check to make sure transport is still OK (isTransportOK) in asyncSendPacket(Packet packet, boolean doSendWhileReconnecting).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue managers are not properly invoking garbage collection,AMQ-280,12481167,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,rsaba,rsaba,rsaba,29/Jun/05 14:04,29/Jun/05 15:44,30/Jan/20 16:57,29/Jun/05 15:44,3.1,,,,,,3.1,,,Broker,,,,0,"Looks like the queue managers never trigger garbage collection because...

   this.doingGarbageCollection = new SynchronizedBoolean(false);

   private void doGarbageCollection() {
       if (doingGarbageCollection.commit(true, false)) { // this always evaluates to false, right?
            ...
       }
   }

Should this rather be?

   private void doGarbageCollection() {
       if (doingGarbageCollection.commit(false, true)) {
            ...
       }
   }

This is applicable to both TransientQueueBoundedMessageManager and DurableQueueBoundedMessageManager.",3.1-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49000,,,Wed Jun 29 15:44:16 UTC 2005,,,,,,,,"0|i0s133:",161652,,,,,,,,,,,,,,,,,,,"29/Jun/05 15:44;rsaba;Enabled garbage collection on transient and durable queue message managers.  Also added a check on capacity limit before removing idle containers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
registerConnection method of BrokerContainerImpl does not seem to be thread safe.,AMQ-267,12481298,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,14/Jun/05 20:05,22/Jun/05 22:48,30/Jan/20 16:57,22/Jun/05 22:48,3.0,,,,,,3.1,,,Broker,,,,0,It's possible that due to weird network conditions a client using reliable may restart multiple connections and they will call the registerConnection method of BrokerContainerImpl concurrently.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48988,,,Wed Jun 22 22:48:59 UTC 2005,,,,,,,,"0|i0s147:",161657,,,,,,,,,,,,,,,,,,,"22/Jun/05 22:48;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default Wire Format message caching cannot be disabled,AMQ-272,12481089,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,22/Jun/05 16:40,22/Jun/05 17:08,30/Jan/20 16:57,22/Jun/05 17:08,3.0,,,,,,3.1,,,Transport,,,,0,"See:

http://permalink.gmane.org/gmane.comp.java.activemq.devel/534",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48993,,,Wed Jun 22 17:08:48 UTC 2005,,,,,,,,"0|i0ttb3:",172057,,,,,,,,,,,,,,,,,,,"22/Jun/05 17:08;chirino;Fixed.  Caching can be diabled via url:
tcp://localhost:61616?cachingEnabled=false
or by using the following method on a ActiveMQConnectionFactory:
connectionFactory.setCachingEnabled(false);
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestReply across networked brokers broken (again),AMQ-262,12481341,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,09/Jun/05 17:04,15/Jun/05 07:37,30/Jan/20 16:57,15/Jun/05 07:37,3.1,,,,,,3.1,,,Connector,,,,0,"I have been testing version 266 and found that request/reply test is not working at a 100% level across networked brokers.  At first I thought that the race condition that had been a prior release had be revived. This was where replier would try to use the temp destination before the bridge was established.  Before that was fixed I could just insert a delay after creating the temp destination and its use to get around the problem.  Now it seems that work-around does not work either.  The first attempt to send a message to the temp destination will fail.

I have found that repeated attempts will succeed.  It seems that the first failed attempt is trigger a completion of the temp definition setup?  Anyway if after the first request fails to receive the reply, another request is made, the replying process has no problem sending the second reply.

Could this be another problem introduced as a result of the AdvisorySupport changes? ",jdk 1.4.2_05 on w2k and linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-06-15 07:37:04.0,,,false,,,,,,,,,,,,,,,,,48983,,,Wed Jun 15 07:37:04 UTC 2005,,,,,,,,"0|i17ydr:",254540,,,,,,,,,,,,,,,,,,,"09/Jun/05 17:05;dennis@bevocal.com;The problem turns out to be another race condition.

If there is no default destination for a producer, the ActiveMQConnection.startAdvisoryForTempDestination() method is invoked before a message is sent.  For a message targeted to a temporary destination,  this causes a TemporaryDestinationAdvisor object to be created and started.  The message destination is then processed through the ActiveMQConnection.validateDestination().  However if the TemporaryDestinationAdvisor has not yet processed the TempDestinationAdvisoryEvent then the validation will fail.  In my case, there was about a 200ms delay between the ""start"" of the TemporaryDestinationAdvisor and the processing of the event.

As a fix I introduced a sleep(500) after initiating the TemporaryDestinationAdvisor.  This gives the time for the advisory event to be processed.  Now this is not an idle solution since it could cause unwanted latencies or be to short a delay in other cases.  But unless someone can suggest something better, it is all I have at this point. ","10/Jun/05 20:29;dennis@bevocal.com;I do not think that the sleep I introduced in ActiveMQConnection.startAdvisoryForTempDestination() is the proper place for the delay.  I think it should actually be in the TempDestinationAdvisor.isActive() method.  That way it could use a wait(time) and be release by the arrival of the advisory event.

Something I do not understand about the TempDestinationAdvisor class is that it looks like an instance of this class is created for every TemporaryDestination used by the client.  However, there is a set of activeDestinations as a member of this class.  Won't this set only contain one destination?  If so why is a Set used?","13/Jun/05 19:27;dennis@bevocal.com;Fixed by allowing the ""is active"" test in TempDestinationAdvisor to wait for the initial advisory message.","15/Jun/05 07:37;jstrachan;Just assigning to 3.1 release",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When using protocol ""tcp"" the TransportStatusEvent.CONNECTED is never sent to the listener",AMQ-265,12481233,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,10/Jun/05 19:59,10/Jun/05 20:21,30/Jan/20 16:57,10/Jun/05 20:21,3.1,,,,,,3.1,,,Transport,,,,0,"Currently this event is fired from the TcpTransportChannel.initalizeStreams().  Since this method is called from the constructor before any listener could be registered, the event is never heard.  This even should be fired from the start() method.  ",W2k java 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48986,,,Fri Jun 10 20:21:35 UTC 2005,,,,,,,,"0|i17ydj:",254539,,,,,,,,,,,,,,,,,,,"10/Jun/05 20:21;dennis@bevocal.com;Moved firing of event to start()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
patched the resource adapter to use a Boolean property rather than boolean,AMQ-258,12481230,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,chirino,chirino,09/Jun/05 14:39,09/Jun/05 14:52,30/Jan/20 16:57,09/Jun/05 14:52,3.0,,,,,,3.1,,,Connector,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48979,,,2005-06-09 14:39:11.0,,,,,,,,"0|i0ttdb:",172067,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Journal throwing error when checkpointing durable sub acks.,AMQ-245,12481149,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,09/Jun/05 13:56,09/Jun/05 14:46,30/Jan/20 16:57,09/Jun/05 14:46,3.0,,,,,,3.1,,,Message Store,,,,0,"Error was occuring when using durable subscriptions, transactions and the journal when the journal checkpointed.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48966,,,2005-06-09 13:56:06.0,,,,,,,,"0|i0ttdj:",172068,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fixed a possible issue with the sequenceIds of messages being wrong after a server restart.,AMQ-254,12481287,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,09/Jun/05 14:25,09/Jun/05 14:44,30/Jan/20 16:57,09/Jun/05 14:44,3.0,,,,,,3.1,,,Message Store,,,,0,,JDBC message store.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48975,,,2005-06-09 14:25:54.0,,,,,,,,"0|i0ttgf:",172081,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.IllegalStateException: Multiple message delivery between before and after delivery is not allowed,AMQ-256,12481119,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,09/Jun/05 14:33,09/Jun/05 14:34,30/Jan/20 16:57,09/Jun/05 14:34,3.0,,,,,,3.1,,,Connector,,,,0,"Error occurs when using the RA with JBoss and you get error message:
java.lang.IllegalStateException: Multiple message delivery between before and after delivery is not allowed
",JBoss 4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48977,,,Thu Jun 09 14:34:28 UTC 2005,,,,,,,,"0|i0ttav:",172056,,,,,,,,,,,,,,,,,,,"09/Jun/05 14:34;chirino;Fixed.
- Also added better endpoint shutdown so that the sessions are properly closed.
- Better logging in the ServerSessionImpl so that we can tell which session is doing what.
- Added a maxSessions and a maxMessagesPerSession attribute to the Activation spec so that an EJB deployer can configure the max concurrency levels used by the resource adapter for a given enpoint.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error with BDB persistence,AMQ-110,12481250,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,cameronbraid,cameronbraid,11/Oct/04 05:14,09/Jun/05 07:42,30/Jan/20 16:57,09/Jun/05 07:42,,,,,,,3.0,,,,,,,2,"I am using a not transacted and auto-acknowledge queue.

I am using the <berkeleyDbPersistence/> adapter

The error message that I a reveiving is :

Could not delete sequenece number for: org.codehaus.activemq.service.MessageIdentity@7a86771e[id=ID:ev1.drivenow.com.au-50147-1097167695356-16132:0; sequenceNo=<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=8>] status: OperationStatus.NOTFOUND

Any pointers on how serious this error is - i.e. is the queue performing normally even though this message is being logged ?",,cameronbraid,eveyeti,taffandrews,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-10 21:34:38.0,,,false,,,,,,,,,,,,,,,,,48848,,,Thu Jun 09 07:42:56 UTC 2005,,,,,,,,"0|i0s2fj:",161870,,,,,,,,,,,,,,,,,,,"10/Nov/04 21:34;taffandrews;I am having the same issue.  The specific problem I am having is testing the recovery of messages.  I create 10 messages and place them into the JMS queue.  I let a few of them process through the Listener and then I shutdown Tomcat.  Then I start Tomcat again and I see the remaining messages process but I get the error mentioned in this bug report.  To make matters worse, if I shutdown Tomcat and restart again The same messages will process again becuase they were not deleted from the DB.","13/Nov/04 13:19;eveyeti;I have the same problems.
when I send 10000 messages the consumer receive more than 10000 messages many messages are repeating.","02/Dec/04 16:55;cameronbraid;I changed to Jourlan + JDBC (derby) persistence and am getting a very similiary error :

[2004-12-02 13:46:38 GMT]INFO  [JournalPersistenceAdapter] Journal Recovery Started.
[2004-12-02 13:46:38 GMT]ERROR [JournalPersistenceAdapter] Recovery Failure: Could not remove message: ID:ev1.drivenow.com.au-45070-1101875238632-68250:0, reason: javax.jms.JMSException: Could not locate message in database with message id: ID:ev1.drivenow.com.au-45070-1101875238632-68250:0
javax.jms.JMSException: Could not locate message in database with message id: ID:ev1.drivenow.com.au-45070-1101875238632-68250:0
        at org.codehaus.activemq.store.jdbc.JDBCMessageStore.getMessageSequenceId(JDBCMessageStore.java:125)
        at org.codehaus.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:136)
        at org.codehaus.activemq.store.journal.JournalPersistenceAdapter.recover(JournalPersistenceAdapter.java:469)
        at org.codehaus.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:154)
        at org.codehaus.activemq.store.cache.CachePersistenceAdapter.start(CachePersistenceAdapter.java:85)
        at org.codehaus.activemq.broker.impl.DefaultBroker.start(DefaultBroker.java:148)
        at org.codehaus.activemq.broker.impl.BrokerContainerImpl.start(BrokerContainerImpl.java:141)
        at org.codehaus.activemq.broker.BrokerContext.getBrokerContainerByName(BrokerContext.java:51)
        at org.codehaus.activemq.ActiveMQConnectionFactory.getContainer(ActiveMQConnectionFactory.java:535)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createBrokerConnector(ActiveMQConnectionFactory.java:542)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createTransportChannel(ActiveMQConnectionFactory.java:512)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:333)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:323)
        at org.springframework.jms.connection.SingleConnectionFactory.doCreateConnection(SingleConnectionFactory.java:150)
        at org.springframework.jms.connection.SingleConnectionFactory.init(SingleConnectionFactory.java:135)
        at org.springframework.jms.connection.SingleConnectionFactory.createConnection(SingleConnectionFactory.java:169)
        at org.springframework.jms.core.JmsTemplate.createConnection(JmsTemplate.java:404)
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:499)
        at org.springframework.jms.core.JmsTemplate.receive(JmsTemplate.java:663)
        at com.drivenow.mq.ScraperProcess.doConsume(ScraperProcess.java:213)
        at com.drivenow.mq.ScraperProcess.consume(ScraperProcess.java:191)
        at com.drivenow.mq.ScraperProcess$1.run(ScraperProcess.java:162)
        at java.lang.Thread.run(Thread.java:534)
[2004-12-02 13:46:39 GMT]INFO  [JournalPersistenceAdapter] Journal Recovered: 5 message(s) in transactions recovered.

This happens while starting the JVM, after I have stop the JVM while messages are queues.","09/Jun/05 07:42;jstrachan;From 3.0 onwards we are deprecating BDB and instead use our own journal and JDBC as they perform much better and have less bugs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate clientid error when using the ActiveMQInitialContextFactory,AMQ-227,12481017,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,06/Apr/05 17:34,13/Apr/05 11:54,30/Jan/20 16:57,13/Apr/05 11:54,2.1,,,,,,3.0,,,JMS client,,,,0,"ActiveMQ clients that ActiveMQ have the same client id, that is ""clientid"". This makes ActiveMQ complain about it.
Client is only using queues.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-04-13 11:54:54.0,,,false,,,,,,,,,,,,,,,,,48951,,,Wed Apr 13 11:54:54 UTC 2005,,,,,,,,"0|i0s0u7:",161612,,,,,,,,,,,,,,,,,,,"13/Apr/05 11:54;jstrachan;This was due to a bug in the JNDI initial context factory AFAIK",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting the adapterClass on the jdbcPersistence element of the activemq.xml config file does not work.,AMQ-237,12481164,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,13/Apr/05 05:10,13/Apr/05 05:27,30/Jan/20 16:57,13/Apr/05 05:27,3.0,,,,,,3.1,,,Broker,,,,0,Seems like the spring xslt transform does not cause the adapterClass to get set correctly.,,psmith@apache.org,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48960,,,Wed Apr 13 05:27:11 UTC 2005,,,,,,,,"0|i0tson:",171956,,,,,,,,,,,,,,,,,,,"13/Apr/05 05:27;chirino;Fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tcp transport async sending could send messages out of order.  Increasing maxOutstandingMessages reduces problems.,AMQ-233,12481064,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,13/Apr/05 00:08,13/Apr/05 01:00,30/Jan/20 16:57,13/Apr/05 01:00,3.0,,,,,,3.1,,,Transport,,,,0,"Right now the tcp transport could send messages out of order if the number of outstanding messages to be delivered exeeds the maxOutstandingMessages amount.

The PooledExecutor being used uses the default blocked execution policy which is Run.  It should be changed to Wait so that messages are not sent out of order.

Increasing the maxOutstandingMessages to a high number reduces the chance that the problem will be encountered.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48956,,,Wed Apr 13 01:00:27 UTC 2005,,,,,,,,"0|i0tt53:",172030,,,,,,,,,,,,,,,,,,,"13/Apr/05 01:00;chirino;Fixed.","13/Apr/05 01:00;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unsatisfied dependencies in Maven build,AMQ-189,12481090,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bpconlon,bpconlon,07/Feb/05 21:00,11/Apr/05 11:25,30/Jan/20 16:57,11/Apr/05 11:25,2.0,,,,,,3.0,,,Geronimo Integration,,,,0,"Attempting to build by executing
> maven
in main project directory.

Receive the following...

==================================================================
==================================================================
ActiveMQ :: Assembly
+----------------------------------------
| Executing default ActiveMQ :: Integration Tests :: Ejb
| Memory: 6M/10M
+----------------------------------------
Attempting to download geronimo-spec-ejb-2.1-rc3.jar.
WARNING: Failed to download geronimo-spec-ejb-2.1-rc3.jar.

BUILD FAILED
File...... C:\Documents and Settings\bconlon\.maven\cache\maven-multiproject-plugin-1.3.1\plugin.jelly
Element... maven:reactor
Line...... 217
Column.... 9
The build cannot continue because of the following unsatisfied dependency:

geronimo-spec-ejb-2.1-rc3.jar; version override doesn't exist: 2.1-rc3

Total time: 22 seconds
Finished at: Mon Feb 07 11:35:18 CST 2005
==================================================================
==================================================================

This version of geronimo-spec-ejb isn't in ibiblio or in any obvious place on apache or codehaus.  If I remove the ""ejb"" module, the build
will fail as follows:

==================================================================
==================================================================
+----------------------------------------
| Executing default ActiveMQ :: Transport :: HTTP
| Memory: 10M/12M
+----------------------------------------
Attempting to download geronimo-spec-servlet-2.4-rc3.jar.
WARNING: Failed to download geronimo-spec-servlet-2.4-rc3.jar.
Attempting to download org.mortbay.jetty-5.1-SNAPSHOT.jar.

BUILD FAILED
File...... C:\Documents and Settings\bconlon\.maven\cache\maven-multiproject-plu
gin-1.3.1\plugin.jelly
Element... maven:reactor
Line...... 217
Column.... 9
The build cannot continue because of the following unsatisfied dependency:

geronimo-spec-servlet-2.4-rc3.jar; version override doesn't exist: 2.4-rc3

Total time: 42 seconds
Finished at: Mon Feb 07 11:44:28 CST 2005
==================================================================
==================================================================","win32, jdk 1.4.2_07, Maven 1.0.1",bpconlon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-04-11 11:25:53.0,,,false,,,,,,,,,,,,,,,,,48919,,,Mon Apr 11 11:25:53 UTC 2005,,,,,,,,"0|i0s2dr:",161862,,,,,,,,,,,,,,,,,,,"11/Apr/05 11:25;jstrachan;AFAIK this is now resolved - I think it was a temporary issue with Apache's maven repository",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Undead threads in broker when TCP clients disconnect,AMQ-208,12481232,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,loo_benjamin,loo_benjamin,08/Mar/05 12:19,08/Apr/05 11:16,30/Jan/20 16:57,08/Apr/05 11:16,2.0,,,,,,3.0,,,Broker,,,,0,"When running an embedded broker in a Java app which acts as a message producer, I see (via JMX console for the whole app) that some activeMQ broker-related threads, dedicated to handling a TcpTransportChannel, remain alive whereas no client is connected to the broker.

As shown by the stack trace for these threads (see below) it seems that, after the remote client has disconnected, the thread is waiting to be notified by another object so that it can terminate. This issue does not happen every time a client disconnects.

Here is the waiting thread stack trace :

Name: Thread-11
State: WAITING on EDU.oswego.cs.dl.util.concurrent.PooledExecutor@f03c46
Total blocked: 162  Total waited: 10 152

Stack trace: 
java.lang.Object.wait(Native Method)
java.lang.Object.wait(Object.java:474)
EDU.oswego.cs.dl.util.concurrent.PooledExecutor.awaitTerminationAfterShutdown(Unknown Source)
org.codehaus.activemq.util.ExecutorHelper.stopExecutor(ExecutorHelper.java:50)
org.codehaus.activemq.transport.TransportChannelSupport.stopExecutor(TransportChannelSupport.java:472)
org.codehaus.activemq.transport.tcp.TcpTransportChannel.stop(TcpTransportChannel.java:196)
org.codehaus.activemq.broker.impl.BrokerClientImpl.close(BrokerClientImpl.java:658)
org.codehaus.activemq.broker.impl.BrokerClientImpl.onException(BrokerClientImpl.java:134)
org.codehaus.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:430)
org.codehaus.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:438)
org.codehaus.activemq.transport.tcp.TcpTransportChannel$1.run(TcpTransportChannel.java:233)
EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
java.lang.Thread.run(Thread.java:595)

",Embedded broker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-04-08 11:16:29.0,,,false,,,,,,,,,,,,,,,,,48935,,,Fri Apr 08 11:16:29 UTC 2005,,,,,,,,"0|i17ya7:",254524,,,,,,,,,,,,,,,,,,,"08/Apr/05 11:16;jstrachan;I think this issue is now fixed; we were incorrectly removing old client connections. Could you please verify this is the case with the latest 3.0 codebase? If its not, we can reopen this issue again",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reliable protocol + tcp Connector does not reconnect on restarted external broker,AMQ-230,12481066,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,psmith@apache.org,psmith@apache.org,08/Apr/05 07:44,08/Apr/05 09:22,30/Jan/20 16:57,08/Apr/05 09:22,3.0,,,,,,3.0,,,Connector,Transport,,,0,"This will either prove to be an incorrect assumption on my part, or a bug.  

Normally the reliable protocol is used to fail-over to a different broker if the 1st connected to broker dies.  However if one sets up a client connection using the reliable protocol to a one-and-only external/standalone broker that is alive, then dead, then alive, the reliable protocol does not reconnect to it.

This issue may be directly related to AMQ-211 which is marked as fixed, but this test case still fails for me.

The really interesting part is line 105 of my test case, that tries to send the 2nd message.  This line actually succeeds, but NOTHING actually happens.  By tracing through, I eventually get to ActiveMQSession, line 1458, where it calls asyncSendPacket(msg). Inside this method, it checks the isTransportOK property (which is false at this point), then does NOTHING, and returns.  

It is a silent failure.

Steps to Reproduce:

1. Using the 20050407 3.0 snapshot distribution, startup a standalone broker process using the below configuration file:

<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC  ""-//ACTIVEMQ//DTD//EN"" ""http://activemq.org/dtd/activemq.dtd"">
<beans>

  <broker>
    <connector>
      <tcpServerTransport uri=""tcp://localhost:61616""/>
    </connector>
<!--
    <discoveryAgent>
      <zeroconfDiscovery type=""_activemq.broker.development.""/>
    </discoveryAgent>

    <discoveryNetworkConnector/>
-->

    <persistence>
      <cachePersistence>
        <journalPersistence directory=""../var/journal"">
          <jdbcPersistence dataSourceRef=""derby-ds""/>
        </journalPersistence>
      </cachePersistence>
    </persistence>
  </broker>

  <!-- ==================================================================== -->
  <!-- JDBC DataSource Configurations -->
  <!-- ==================================================================== -->

  <!-- The Derby Datasource that will be used by the Broker -->
  <bean id=""derby-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"">
      <value>org.apache.derby.jdbc.EmbeddedDriver</value>
    </property>
    <property name=""url"">
      <!-- Use a URL like 'jdbc:hsqldb:hsql://localhost:9001' if you want to connect to a remote hsqldb -->
      <value>jdbc:derby:derbydb;create=true</value>
    </property>
    <property name=""username"">
      <value></value>
    </property>
    <property name=""password"">
      <value></value>
    </property>
    <property name=""poolPreparedStatements"">
      <value>true</value>
    </property>
  </bean>
</beans>

2. Run the attached unit test case, stopping & starting the external broker as requested in the log4j output to the console.  This unit test will wait for start/stop, but you'll have to trigger that manually.  I did not wish to try a fully automated test case because that did not represent the use-case we are trying to achieve.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-04-08 09:22:02.0,,,false,,,,,,,,,,,,,,,,,48954,,,Fri Apr 08 09:22:02 UTC 2005,,,,,,,,"0|i17ybj:",254530,,,,,,,,,,,,,,,,,,,"08/Apr/05 09:22;chirino;Should be fixed now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Monitor lock conflict during shutdown,AMQ-226,12481185,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,04/Apr/05 23:37,06/Apr/05 10:03,30/Jan/20 16:57,06/Apr/05 10:03,,,,,,,3.0,,,,,,,0,"Given the broker setup where:

1. A reliable/tcp NetworkChannel is defined with an extremely large value establishConnectionTimeout (allowing a never timeout case)
2. The target of the NetworkChannel is not available, so the channel never completes the initial setup.

Then attempt to stop the broker with a kill command.  (should be better way, maybe admin function)

The broker vm does not shutdown cleanly on linux as there is monitor lock conflict between the shutdown thread and the unfinished network channel thread.",linux 9.0 java 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-04-06 10:03:36.0,,,false,,,,,,,,,,,,,,,,,48950,,,Wed Apr 06 10:03:36 UTC 2005,,,,,,,,"0|i0s15b:",161662,,,,,,,,,,,,,,,,,,,"04/Apr/05 23:55;dennis@bevocal.com;The fix for this one is remove the synchronized modifier from the close() method and create a synchronized(this) block inside the body of the method after the point where the transportChannel.setPendingStop(true) is called.","06/Apr/05 10:03;jstrachan;Applied patch from Dennis - many thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven fails to complete for 2.1,AMQ-216,12481179,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,andrew cooke,andrew cooke,15/Mar/05 01:57,06/Apr/05 10:03,30/Jan/20 16:57,06/Apr/05 10:03,2.1,,,,,,3.0,,,,,,,0,"> cd activemq-release-2.1
> maven
[...]
    [echo] Building EAR activemq-itest-ear-2.1 with appxml ""/uyn0/andrew/nsa/messaging-system/activemq/activemq-release-2.1/itests/ear/target/application.xml""

BUILD FAILED
File...... /user/andrew/.maven/cache/maven-multiproject-plugin-1.3.1/plugin.jelly
Element... maven:reactor
Line...... 217
Column.... 9
Unable to obtain goal [ear:ear] -- /user/andrew/.maven/cache/maven-ear-plugin-1.6/plugin.jelly:99:24: <ant:fail> Case-sensitive issue: The dependency activemq:activemq-itest-ejb has a case problem.  The dependency was either retrieved in the past with the wrong case or has been specified with the wrong case in your project.xml file.  Fix your project.xml or update your local repository with the properly-cased file and try again.
Total time: 23 minutes 56 seconds
","redhat 9; maven 1.0.1; java 1.4.2_06; ant 1.6.2; activemq 2.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-04-06 10:03:08.0,,,false,,,,,,,,,,,,,,,,,48942,,,Wed Apr 06 10:03:08 UTC 2005,,,,,,,,"0|i0s14v:",161660,,,,,,,,,,,,,,,,,,,"15/Mar/05 18:04;andrew cooke;Thinking this may have compiled, but failed during tests, I then attempted
> maven server
which gave
BUILD FAILED
Goal ""server"" does not exist in this project.
Total time: 2 seconds
Finished at: Tue Mar 15 11:02:33 CLT 2005

I don't know if this is a separate problem or related.","15/Mar/05 19:37;andrew cooke;removing the test in .maven/cache/maven-ear-plugin-1.6/plugin.jelly (line 98) allows things to continue, apparently successfully.

""maven server"" still doesn't work, however.","06/Apr/05 10:03;jstrachan;We've performed some refactoring of the codebase. From the latest code to run a server, you need to do 

cd modules/assembly
maven server
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Apparent Memory Leak,AMQ-222,12481122,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,kwehner,kwehner,22/Mar/05 21:10,04/Apr/05 19:34,30/Jan/20 16:57,04/Apr/05 19:34,2.1,,,,,,3.0,,,Broker,,,,0,"My application seems to be triggering a memory leak in the broker when using the Derby store under load with 2.1. I haven't been able to reproduce the condition, but here's a quick breakdown of how I'm using the broker:
- A single queue that passes large ObjectMessages from 11 writers to a single reader
- A topic that messages small ObjectMessages to 11 readers from a single writer

The message frequency is about 1 per second max, with normal rates being about 2 per minute (very low). I'm using the default derby store, with two connectors listening on two different interfaces. The clients all have a manual reconnect if they get a JMS exception, closing and re-opening the connection to the broker.

After about a week of production runtime, the broker seems to start generating OutOfMemoryErrors. It seems to keep accepting TCP connections when in this state, but the clients that connect to it hang during the connect. ","Linux, JDK 1.4.2, Derby Store",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-04-04 19:33:42.0,,,false,,,,,,,,,,,,,,,,,48947,,,Mon Apr 04 19:34:40 UTC 2005,,,,,,,,"0|i14p5z:",235542,,,,,,,,,,,,,,,,,,,"22/Mar/05 21:14;kwehner;There's a secondary bug that seems to occur with this, but may be a symptom. I'm using the tcp transport, and when the broker hangs with the OutOfMemory error, even if the clients are using the reliable: url prefix, I don't seem the disconnect and reconnect, they connect and stick. Without reading the code, it seems like a connect() is hung without a timeout.","04/Apr/05 19:33;chirino;Some memory leaks have been fixed in the upcomming 3.0 release.  The leaks would occur every time a client disconnected.  I think this incident's OutOfMemory exceptions could have been caused by that leak.","04/Apr/05 19:34;chirino;Resolving as being fixed in 3.0.  Please re-test and re-open if the memory leak continues.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable fora durable subscriber to retreive persistent message,AMQ-209,12481030,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,franos,franos,08/Mar/05 20:05,04/Apr/05 11:12,30/Jan/20 16:57,04/Apr/05 11:12,2.1,,,,,,3.0,,,Broker,,,,0,"Hello,

Use the configuration activemq.xml and jndi.properties attached in the test.zip file.

Compile the sources (package protojms).

Start the IMEISubscriber.
Start the IMEIPublisher.
Kill the IMEISubscriber then kill the IMEIPublisher.
Restart the IMEISubscriber: you will see that some of the persistent message have not been received by this durable subscriber !

Bug in activeMQ or in my program ? 

I have tested this within JORAM : no pb!


I have other questions:
   1) For persistence performance what is recommended ? (BerkeleyDB, ....)
   2) In order to use BerkeleyDB what are the optional jars that I have to put in the 
      classpath ?
   3) Using Joram it is not manadatory to set the clientID, I have read the spec but nothing 
      has been said regarding this API. Could you give me some explanations regarding this 
      API ?
",Windows Jdk 1.4.2 persistence: BerkeleyDB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-03-22 10:33:42.0,,,false,,,,,,,,,,,,,,,,,48936,,,Mon Apr 04 11:12:51 UTC 2005,,,,,,,,"0|i17y9z:",254523,,,,,,,,,,,,,,,,,,,"11/Mar/05 13:12;franos;Hello,

It seems that I have narrowed down the pb. If you replace, in my code, the standard jms ConnectionFactory gotten through a jndi lookup by an ActiveMQConnectionFactory I don't loose any message. 

JNDI bug on the ConnectionFactory ?

Regards.","22/Mar/05 10:33;jstrachan;BTW some answers to your questions...

1) we recommend the journal and JDBC for persistence - its the fastest and most reliable

2) the BDB jars

3) clientID is optional - though if you are using durable topic subscriptions it really is mandatory, though most JMS providers will auto-create one for you - but its fairly pointless to use durable topics if you don't specify a clientID as there's no way to uniquely identify the messages for your client.

I've still no idea why using the JNDI breaks your test case - under the covers its the same JMS provider.","22/Mar/05 12:05;franos;Thanks for replying.

Does the status open means that you have reproduced the pb ? ","22/Mar/05 12:10;franos;Hello,

Could you give me some more infos about how to set journal and jdbc for persistence ?

Best regards.","22/Mar/05 14:12;jstrachan;The out of the box binary distribution from 2.1 onwards of ActiveMQ includes a journal & JDBC configuration file which could be used as a template. e.g. try starting ActiveMQ using the command line script & it will use the journal & JDBC","23/Mar/05 12:31;franos;Hello,

What is the difference if we use only jdbc and not journal ?

During my test with journal and jdbc, I got a NullPointerException (known issue):

23:05:26 ERROR Failed to checkpoint a message store: java.lang.NullPointerException
java.lang.NullPointerException
        at org.codehaus.activemq.store.jdbc.JDBCTopicMessageStore.setLastAcknowledgedMessageIdentity(JDBCTopicMessageStore.java:52)
        at org.codehaus.activemq.store.ProxyTopicMessageStore.setLastAcknowledgedMessageIdentity(ProxyTopicMessageStore.java:87)
        at org.codehaus.activemq.store.journal.JournalTopicMessageStore$1.execute(JournalTopicMessageStore.java:115)
        at org.codehaus.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
        at org.codehaus.activemq.store.journal.JournalTopicMessageStore.checkpoint(JournalTopicMessageStore.java:107)
        at org.codehaus.activemq.store.journal.JournalPersistenceAdapter$3.run(JournalPersistenceAdapter.java:374)
        at EDU.oswego.cs.dl.util.concurrent.QueuedExecutor$RunLoop.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:534)



Best Regards.
","23/Mar/05 18:54;jstrachan;The only real difference of using the journal with JDBC is it adds a performance boost - the journal is there to provide a high performance transaction log - though you can absolutely just use JDBC only","23/Mar/05 19:05;franos;Hello,

OK but I have performed some benchmarks with HSQL only and it gives much much better  performance (magnitude order) than using journal + HSQL !!!

Any comments ?

What do you think of the NullPointerException I am experiencing ?

Best regards.","25/Mar/05 12:06;franos;Hello,

Just another info. I have ran my test against HSQL jdbc persistence and haven't loose any message.

May be it's a BerkeleyDb issue ?

Comments ?

Regards.","04/Apr/05 11:12;jstrachan;Going forward we're focussing purely on the JDBC persistence option - with the journal as an optional performance boost. So I'm assuming this issue is purely related to the BDB persistence option.

From 3.0 onwards this issue should be resolved.

BTW I can't see how to reproduce your null pointer exception- I wonder can you try reproduce it with the latest code?

Incidentally, if you use just HSQL as your message store, it might seem really fast - but it could be that its not actually persisting to disk at all - HSQL is often used in RAM only mode. When testing JDBC persistence, please make sure you choose a JDBC driver which does write to disk - such as Apache Derby
",,,,,,,,,,,,,,,,,,,,,,,,,
Timeout increment logic is incorrect,AMQ-207,12483911,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,neil@cloudnine.net.nz,neil@cloudnine.net.nz,05/Mar/05 15:41,04/Apr/05 07:00,30/Jan/20 16:57,23/Mar/05 00:39,2.1,,,,,,3.0,,,Transport,,,,0,"The logic in CompositeTransportChannel.establishConnection appears incorrcet.

...
                if (incrementTimeout && time < maximumTimeout) {
                    time *= 2;
                    time = time > maximumTimeout ? maximumTimeout : timeout;
                }
...

should be:

...
                if (incrementTimeout && time < maximumTimeout) {
                    time *= 2;
                    time = time > maximumTimeout ? maximumTimeout : time;
                }

Otherwise if zeroconfig fails to get a connection, the sleep time is approx. 30s.
",Windows,psmith@apache.org,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-03-23 00:39:09.0,,,false,,,,,,,,,,,,,,,,,48934,,,Mon Apr 04 07:00:24 UTC 2005,,,,,,,,"0|i17yaf:",254525,,,,,,,,,,,,,,,,,,,"23/Mar/05 00:39;jstrachan;Patch applied, many thanks Neil!","04/Apr/05 07:00;psmith@apache.org;I'm not entirely sure if this is related to this fix, but I just downloaded a ""3.0"" snapshot (which the source unpacks with ""3.1"" in the directory name), and I get the following messages with a client connecting to a separate broker on the same machine that IS running before the client starts up.

[Logs from the JMS client]
1421 [main] INFO org.activemq.transport.zeroconf.ZeroconfDiscoveryAgent  - Discovering service of type: _activemq.broker.development.
1455 [main] INFO org.activemq.transport.composite.CompositeTransportChannel  - Could not connect; sleeping for: 500 millis and trying again
1841 [JmDNS.ServiceResolver] INFO org.activemq.transport.DiscoveryTransportChannel  - Adding new broker connection URL: reliable:tcp://Paul-Smiths-Computer.local:61616 with details: {connectURL=reliable:tcp://Paul-Smiths-Computer.local:61616, brokerName=sender}
1986 [main] INFO org.activemq.transport.composite.CompositeTransportChannel  - Could not connect; sleeping for: 29469 millis and trying again
31714 [main] INFO org.activemq.ActiveMQConnection  - channel status changed: Channel: ReliableTransportChannel: ReliableTransportChannel: TcpTransportChannel: Socket[addr=Paul-Smiths-Computer.local/192.168.0.242,port=61616,localport=61042] has connected
32795 [main] INFO com.aconex.activemqtests.test1.Consumer1  - WOOOT!  Message received: ACTIVEMQ_TEXT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:Paul-Smiths-Computer.local-61030-1112586708579-7:0, bodyAsBytes = org.activemq.message.util.ByteArray@10f0a0, readOnlyMessage = true, jmsClientID = 'ID:Paul-Smiths-Computer.local-61030-1112586708579-1:0' , jmsCorrelationID = 'null' , jmsDestination = test1queue, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered = false, jmsType = 'null' , jmsExpiration = 0, jmsPriority = 4, jmsTimestamp = 1112586740503, properties = null, readOnlyProperties = true, entryBrokerName = 'sender' , entryClusterName = 'default' , consumerNos = [I@25bd56, transactionId = 'null' , xaTransacted = false, consumerIdentifer = 'ID:Paul-Smiths-Computer.local-61036-1112586772361-1:0.1.1' , messageConsumed = false, transientConsumed = false, sequenceNumber = 0, deliveryCount = 1, dispatchedFromDLQ = false, messageAcknowledge = org.activemq.ActiveMQSession@b18235, jmsMessageIdentity = null, producerKey = ID:Paul-Smiths-Computer.local-61030-1112586708579-7: }, text = Hello World
32969 [main] INFO com.aconex.activemqtests.test1.Consumer1  - Consumer1 is shutting down


The client creates a connection factory as follows:

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""zeroconf:_activemq.broker.development."");

The first failure line does not show up on the actual broker logs as a trial connection, it's as if the JmDNS listener doesn't detect a local-to-the-machine broker until about 30 seconds has elapsed.  Maybe the initial 500ms-30000ms timeout escalation is too small, then too big?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network channel fails to reconnect,AMQ-173,12481170,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,20/Jan/05 04:26,27/Mar/05 03:23,30/Jan/20 16:57,22/Jan/05 01:15,,,,,,,2.0,,,,,,,0,"I am testing a setup where two brokers are networked in a site. This is done to provided but load balancing and high availablity.  However I have found a bug that prevents this configuration for both purposes.  In short if one of the broker fails for any length of time, the remain broker can never re-establish a proper link back to the restored broker.  The following steps to duplicate this problem.


Topology: 2 brokers
               broker1 port=61616, network channel=62626
               broker2 port=62626, network channel=61616
          1 consumer connects to 61616
			 1 producer connects to 62626
			 

Test procedure:

1) start broker1 and broker2
   log shows that both brokers establish network channels to the other
	
2) start consumer
	log for broker1 show client connection and forward of destination registration to broker2
	log for broker2 show receipt of destination registration
	 
3) start producer
   log for broker2 shows client connection and discconection when producer terminates
	log for broker1 shows forwarded messages for consumer received from broker2
	
4) stop broker2
   log for broker2 shows shutdown
	log for broker1 show broker2 disconnect, but also errors when trying to send keepalive
	
5) stop consumer

6) wait 2+ minutes, wait for ""NetworkChannel - stopped MetworkMessageBridge for destination:"" in broker1 log

7) start broker2
   log for broker1 shows establishment of network channel for broker2, but broker2 log does not corresponding broker1 network channel registration
	
8) start consumer
   log for broker 1 show error in attempt to establish NetworkMessageBridge for destination
	
9) start producter
   log for broker2 shows client connection and discconection when producer terminates
	log for broker1 shows NO forwarded messages","W2K Pro, java version ""1.4.2_05""",daggerrz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-03-27 03:23:26.0,,,false,,,,,,,,,,,,,,,,,48906,,,Sun Mar 27 03:23:26 UTC 2005,,,,,,,,"0|i0s2en:",161866,,,,,,,,,,,,,,,,,,,"20/Jan/05 04:31;dennis@bevocal.com;Broker config and log files from my test. ","20/Jan/05 05:33;dennis@bevocal.com;I ran the test again changing step 6 to restart broker2 immediately.  In this case it looks like broker1 was able to re-establish the network channel.  However when the producer is started, broker2 log shows a null pointer exception for every message forwarded to broker1.","21/Jan/05 03:34;dennis@bevocal.com;I have track the second part of this problem down to the fact that the writeValueCache in the DefaultWireFormat is not cleared when the network channel connection is broken.  However, I am not not sure the proper place to perform the clear. Can someone step in and provide some guidance.","21/Jan/05 21:52;dennis@bevocal.com;The information in attached file amq173info-3.zip is an extract from the log files generated by the networked brokers.  I added log statements in the DefaultWireFormat methods that read and write to the readValueCache map.  After confirming that I am currently working against the code in CVS HEAD, I reran my test and extracted the cache accessing log messages.  The log clearly show that the something is wrong with the cache as it is returning null values for the key that should represent the destination value.  I had assumed that this was cause by the sender assuming that the receiver had cached the needed values, but looking at the extracts closer, I think that wrong instance being accessed might be the cause.","22/Jan/05 01:12;dennis@bevocal.com;The NullPointerException problem has been repaired now, however the first problem still remains.  Thinking about it though I realized that not be a bug, but instead a limitation of the configuration used for the reliable transport.  Unless this tranport is configured in such a way as to perform a perpetual check for its defined peers, the Netword channel will eventually timeout and stop.  Once this NetworkChannel stops the only way to start it again is to restart the broker.

With this understanding I consider this issue close.  Thank Stewie for helping find the problem with NullPointerException.","27/Mar/05 03:23;fanhong;Hi everyone,

I need your input related to this problem. I am using the latest ActiveMQ 2.1 with JDK 1.5. I have two brokers clusters with network channels, let's say A, B. If I shutdown broker B, the network channel on both ends re-connected. But i noticed that the topic publisher in B is no longer able to publish message to A. On the other hand, topic subscriber is able to receive the message published by A. If I shutdown A, the situation is reversed.

I like to confirm whether this finding is valid. I appreciate you input.

Thanks

Hong",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Switching V1.5 to V2.0 => failed to build body from bytes,AMQ-187,12481130,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,laermtot,laermtot,07/Feb/05 16:49,23/Mar/05 00:07,30/Jan/20 16:57,23/Mar/05 00:07,1.5,2.0,,,,,3.0,,,,,,,0,"Due to a Problem with Version 1.5 (see other Commit) we tried using Version 2.0. Using Version 2.0 we permanently get an ""failed to build body from bytes"" Error. 

As fas as we analyzed, this normally seems to happen if there is a serilalisation/deserialisation Problem .. but in this Case the Broker, the ""Client"" and the ""Server"" are using all the Same machine/jdk/classes. 

We are simply ""transporting"" an Array of Tile-Requests as the Body of an ObjectMessage (see the Class below). In the Error-Case it seems that the Object-Body of the Message itself is being lost. 
The Message sent by the Client still contains the Object .. the Message received by the Server seems to have lost it's contents.

Any comments/ideas ??


8<-----------------8<----------------8<----------------8<----------
public class TileRequest implements Serializable {
  private Serializable segmentHandle;
  private RenderContext renderContext;
  private Rectangle tile;

public TileRequest(Serializable segmentHandle, RenderContext    
      renderContext, Rectangle tile) {
    this.segmentHandle = segmentHandle;
    this.renderContext = renderContext;
    this.tile = tile;
  }

  public RenderContext getRenderContext() {
    return renderContext;
  }

  public Serializable getSegmentHandle() {
    return segmentHandle;
  }

  public Rectangle getTileRectangle() {
    return tile;
  }
}",Windows 2k ,laermtot,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-03-17 00:14:05.0,,,false,,,,,,,,,,,,,,,,,48918,,,Wed Mar 23 00:07:43 UTC 2005,,,,,,,,"0|i0s2e7:",161864,,,,,,,,,,,,,,,,,,,"17/Mar/05 00:14;kingpin;I've experienced a similar issue using V1.5: I'm starting the application using classworlds and building the class loader structure in code. What I've observed is that when I run my application using a script file that just invokes the classworlds jar as the argument to java it works fine, however if I invoke it from within the java service wrapper I receive the error

javax.jms.JMSException: failed to build body from bytes
     at org.codehaus.activemq.message.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:163)
     at com.simpleeye.routing.BasicRouterService$multicastSubscriber.onMessage(BasicRouterService.java:362)
     at org.codehaus.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:397)
     at org.codehaus.activemq.ActiveMQSessionExecutor.run(ActiveMQSessionExecutor.java:79)
     at java.lang.Thread.run(Unknown Source)

After some exploration it turns out that the problem is dependent upon the working folder: if I reconfigure the service wrapper to use the same working directory as the batch file, it works fine (oddly enough, I experienced similar difficulties with JavaMail), so it seems there is some dependency between the working folder and the serialization/deserialization. A cursory glance at the ActiveMW source code didn't really enlighten me, but is there some specific property or configuration file that depends upon the relative location (with respect to the JVM's working directory) of the Active MQ jar files.","21/Mar/05 11:20;jstrachan;Any chance you could double check this is still an issue in 3.0-SNAPSHOT? We've added a number of fixes for serialization with different class loaders - this issue could now be resolved","23/Mar/05 00:07;jstrachan;I'm assuming this issue is resolved unless you let me know otherwise as we've seen the same issue as well and its now fixed from our tests at least",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
missing getter for messageRateTime in JMSEndPointStatsImpl,AMQ-193,12481174,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,11/Feb/05 04:26,22/Mar/05 10:29,30/Jan/20 16:57,22/Mar/05 10:29,,,,,,,3.0,,,,,,,0,"In the class org.codehaus.activemq.management.JMSEndpointStatsImpl the following getter should be exposed to provide access to the throughput statistic as is possible for the others.

public TimeStatistic getMessageRateTime() {
    return messageRateTime;
}",w2k java v 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-03-22 10:29:05.0,,,false,,,,,,,,,,,,,,,,,48922,,,Tue Mar 22 10:29:05 UTC 2005,,,,,,,,"0|i0s187:",161675,,,,,,,,,,,,,,,,,,,"22/Mar/05 10:29;jstrachan;Thanks for the patch Dennis :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBM Message recovery not working with Queues,AMQ-80,12481231,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,chirino,chirino,03/Sep/04 23:06,21/Mar/05 11:35,30/Jan/20 16:57,21/Mar/05 11:35,2.1,,,,,,3.0,,,Message Store,,,,0,"Started the server with:
 maven server -Dconfig=src\sample-conf\jdbm-example.xml

Then published some messages with:
 maven producer -Dtopic=false -Ddurable=true

Restarted the server and then ran the consumer with:
 maven consumer -Dtopic=false -Ddurable=true

Expected the consumer to receive the 10 message published by the producer but it did not receive any.","Windows, JDK 1.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-09-07 07:51:11.0,,,false,,,,,,,,,,,,,,,,,48821,,,Mon Mar 21 11:35:11 UTC 2005,,,,,,,,"0|i17xz3:",254474,,,,,,,,,,,,,,,,,,,"07/Sep/04 07:51;stewie;recovery doesn't work for Topics either.

on a restart - non of the subscriptions get initialized  in DurableTopicMessageContainerManager - hence messages get put on the DLQ.","21/Mar/05 11:35;jstrachan;We're descoping JDBM support for 3.0 and focussing purely on the journal + JDBC going forward",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Missing overrides for getStatistics() in session, consumer and producer",AMQ-194,12481042,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,dennis@bevocal.com,dennis@bevocal.com,12/Feb/05 04:13,21/Mar/05 11:19,30/Jan/20 16:57,21/Mar/05 11:19,,,,,,,3.0,,,,,,,0,"The o.c.a.manaement.Resettable.reset() does not work because the objects that extend the o.c.a.management.StatsImpl do no override the getStatistics() method.  Without the override none of the contained stats objects are ever reset.

I created overrides for the o.c.a.m.JMSConnectionStatsImpl, o.c.a.m.JMSSessionStatsImpl, o.c.a.m.JMSConsumerStatsImpl and o.c.a.m.JMSProducerStatsImpl to gather and return all member stats objects.  While this does allow the objects to be reset, I also relealized that the reset() functionality works in a manner opposing the other mutating methods.  Reset works from the top down while other mutators work from the bottom up.  This could cause some inconsistances in info at the different levels.  It might be wise to change the other mutators to work top down updating through their parent before self updates.  That way the methods could be synchronized and prevent the inconsistances.",w2k java 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-02-26 09:53:22.0,,,false,,,,,,,,,,,,,,,,,48923,,,Mon Mar 21 11:19:32 UTC 2005,,,,,,,,"0|i17y73:",254510,,,,,,,,,,,,,,,,,,,"12/Feb/05 06:33;dennis@bevocal.com;AAARRRGGGG! 

Okay I just realised that a simple override of getStatistics() will not work anyway.  The inheritance tree is totally wrong.

Class o.c.a.m.JMSSessionStatsImpl extends o.c.a.m.StatsImpl implements j.m.j.s.JMSSessionStats

and 

Clall o.c.a.m.StatsImpl implements j.m.j.s.Stats, o.c.a.m.Resettable

In the reset() method 
  The call to getStatistics returns j.m.j.s.Statistic[] but all the o.c.a.m stats objects implement the j.m.j.s.Stats interface not j.m.j.s.Statistics.  

As a result you can't get there from here.","15/Feb/05 05:51;dennis@bevocal.com;differences for o.c.a.m.StatsImpl.java","15/Feb/05 05:52;dennis@bevocal.com;differences for o.c.a.m.JMSEndpointStatsImpl.java","15/Feb/05 05:53;dennis@bevocal.com;differences for o.c.a.m.JMSSessionStatsImpl.java","15/Feb/05 05:54;dennis@bevocal.com;differences for o.c.a.m.JMSConnectionStatsImpl.java","15/Feb/05 05:54;dennis@bevocal.com;After pondering the problem for a while, I figure that quickest fix was to have the o.c.a.m.StatsImpl extend the o.c.a.m.StatisticImpl class.  That makes all getStatistics() method work properly.  But another issue that is that the JMSEndpointStatsImpl, JMSSessionStatsImpl and JMSConnectionStatsImpl  classes are aggrating containers and not all the aggregate counters are added the StatsImpl map.  As a result each of these classes have to have an override of the reset() method to clear all member counters. While I am sure that there is a lot more that of work to do in the statistics package, I have attached dif files for each of the files listed above.  These changes have gotten me to a point but where I can track and log stats in my client code.

One large hole that I ran across in my testing was in the area of destination stats.  I saw some hooks where attempts are made to record each message, but it seems that the stats objects are just dereferenced after it is updated.  Next update happens on an entirely new object.  I thought about trying to fix this to, but I am not sure how to handle the selection of a previously created stats object.  I think it would have to be something like a combination of classloader instance and destination to have it work properly within a app server environment.","26/Feb/05 09:53;jstrachan;am a bit snowed at the moment; fancy applying this one?","21/Mar/05 11:19;jstrachan;applied patch from Dennis - many thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,
Batch Startup Script Fails,AMQ-203,12481171,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,sethladd,sethladd,28/Feb/05 22:41,17/Mar/05 09:25,30/Jan/20 16:57,17/Mar/05 09:25,2.1,,,,,,3.0,,,,,,,0,"I just downloaded release 2.1, unzipped it, and tried to run the activemq.bat file (as per the instructions).  I have a JAVA_HOME defined, and am using JDK 1.4.2, and running winxp.

I get the error:

C:\Documents and Settings\Seth\Desktop\activemq-release-2.1\bin>activemq
Exception in thread ""main"" java.lang.NoClassDefFoundError: and","JDK 1.4.2, Windows XP",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-03-17 09:25:16.0,,,false,,,,,,,,,,,,,,,,,48931,,,Thu Mar 17 09:25:16 UTC 2005,,,,,,,,"0|i0tskf:",171937,,,,,,,,,,,,,,,,,,,"17/Mar/05 09:25;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue Browser behaves differently on non-persisten/persitent messages in a transacted session.,AMQ-204,12481096,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,01/Mar/05 07:56,17/Mar/05 09:06,30/Jan/20 16:57,17/Mar/05 09:06,2.1,,,,,,3.0,,,Broker,,,,0,"Using a queue browser with a transacted session.  The number of messages the that browser sees changes if you vary if you are sending persistent or non persistent messages.

Test case added to CVS but commented out.  See:

http://cvs.activemq.codehaus.org/viewrep/activemq/activemq/modules/core/src/test/org/codehaus/activemq/JmsQueueTransactionTest.java?r=1.3#l125",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48932,,,Thu Mar 17 09:06:12 UTC 2005,,,,,,,,"0|i0tt87:",172044,,,,,,,,,,,,,,,,,,,"17/Mar/05 09:06;chirino;Fixed: persistent and non-persistent now browse the same way.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Doing a rollback when using journal could cause messge to not get redelivered.,AMQ-202,12481046,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,27/Feb/05 21:14,17/Mar/05 06:47,30/Jan/20 16:57,17/Mar/05 06:47,2.1,,,,,,3.0,,,Message Store,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48930,,,Thu Mar 17 06:47:07 UTC 2005,,,,,,,,"0|i0tt9j:",172050,,,,,,,,,,,,,,,,,,,"17/Mar/05 06:47;chirino;Fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception occurs using derby and journal on startup,AMQ-198,12481178,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,cameronbraid,cameronbraid,22/Feb/05 11:01,17/Mar/05 06:46,30/Jan/20 16:57,17/Mar/05 06:46,2.1,,,,,,3.0,,,,,,,0,"Process to reproduce (in my app anyway)

1. Clear out derby and journal folders.
2. Start app - creates derby files and journal files.
3. Stop app.
4. Start app.

javax.jms.JMSException: Failed to recover transactions from journal: java.io.IOException: Invalid record header: start of record constant missing.
	at org.codehaus.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
	at org.codehaus.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:187)
	at org.codehaus.activemq.store.cache.CachePersistenceAdapter.start(CachePersistenceAdapter.java:85)
	at org.codehaus.activemq.broker.impl.DefaultBroker.start(DefaultBroker.java:148)
	at org.codehaus.activemq.broker.impl.BrokerContainerImpl.start(BrokerContainerImpl.java:147)
	at org.codehaus.activemq.broker.BrokerContext.getBrokerContainerByName(BrokerContext.java:51)
	at org.codehaus.activemq.ActiveMQConnectionFactory.getContainer(ActiveMQConnectionFactory.java:774)
	at org.codehaus.activemq.ActiveMQConnectionFactory.createBrokerConnector(ActiveMQConnectionFactory.java:781)
	at org.codehaus.activemq.ActiveMQConnectionFactory.createTransportChannel(ActiveMQConnectionFactory.java:751)
	at org.codehaus.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:553)
	at org.codehaus.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:543)
	at org.springframework.jms.connection.SingleConnectionFactory.doCreateConnection(SingleConnectionFactory.java:150)
	at org.springframework.jms.connection.SingleConnectionFactory.init(SingleConnectionFactory.java:135)
	at org.springframework.jms.connection.SingleConnectionFactory.createConnection(SingleConnectionFactory.java:169)
	at org.springframework.jms.core.JmsTemplate.createConnection(JmsTemplate.java:404)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:499)
	at org.springframework.jms.core.JmsTemplate.receive(JmsTemplate.java:663)
	at com.drivenow.mq.ScraperProcess.doConsume(ScraperProcess.java:200)
	at com.drivenow.mq.ScraperProcess.run(ScraperProcess.java:161)
	at com.drivenow.mq.ScraperProcess.access$0(ScraperProcess.java:155)
	at com.drivenow.mq.ScraperProcess$1.run(ScraperProcess.java:400)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Invalid record header: start of record constant missing.
	at org.activeio.journal.active.LogFileManager.read(LogFileManager.java:347)
	at org.activeio.journal.active.JournalImpl.read(JournalImpl.java:145)
	at org.codehaus.activemq.store.journal.JournalPersistenceAdapter.recover(JournalPersistenceAdapter.java:483)
	at org.codehaus.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:184)
	... 20 more
Caused by: java.io.IOException: Invalid record header: start of record constant missing.
	at org.activeio.journal.active.Record.readAndCheckConstant(Record.java:206)
	at org.activeio.journal.active.Record.readHeader(Record.java:135)
	at org.activeio.journal.active.Segment.readRecordHeader(Segment.java:321)
	at org.activeio.journal.active.LogFile.readData(LogFile.java:328)
	at org.activeio.journal.active.LogFileManager.queuedRead(LogFileManager.java:364)
	at org.activeio.journal.active.LogFileManager.access$300(LogFileManager.java:38)
	at org.activeio.journal.active.LogFileManager$5.run(LogFileManager.java:334)
	at EDU.oswego.cs.dl.util.concurrent.QueuedExecutor$RunLoop.run(Unknown Source)
	... 1 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-02-22 17:42:03.0,,,false,,,,,,,,,,,,,,,,,48926,,,Thu Mar 17 06:46:13 UTC 2005,,,,,,,,"0|i0tssf:",171973,,,,,,,,,,,,,,,,,,,"22/Feb/05 17:42;chirino;Cameron,

Did you build from source or did you get a binary snapshot?","22/Feb/05 18:01;cameronbraid;binary snapshot from http://dist.codehaus.org/activemq/jars/ 15-Feb-2005 12:08 ","22/Feb/05 18:02;cameronbraid;http://dist.codehaus.org/activemq/jars/activemq-2.1-SNAPSHOT.jar 15-Feb-2005 12:08","22/Feb/05 19:34;chirino;Cameron,

I just published a new snapshot.  Could you try it with the new snapshots?

Thanks,
Hiram","17/Mar/05 06:46;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No Connected event generated by CompositeTransferChannel,AMQ-215,12481225,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,12/Mar/05 02:16,12/Mar/05 03:24,30/Jan/20 16:57,12/Mar/05 03:24,,,,,,,3.0,,,,,,,0,"The method CompositeTransportChannel.start() should fire off a connected status event after completing the call to establishConnection().

need to change from:

    public void start() throws JMSException {
        if (started.commit(false, true)) {
            establishConnection(establishConnectionTimeout);
        }
    }

to

    public void start() throws JMSException {
        if (started.commit(false, true)) {
            establishConnection(establishConnectionTimeout);
            fireStatusEvent(new TransportStatusEvent(this,TransportStatusEvent.CONNECTED));
        }
    }
",w2l java 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48941,,,2005-03-12 02:16:27.0,,,,,,,,"0|i17y8v:",254518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ObjectMessage inputstream needs to handle loading class[] too.,AMQ-214,12481254,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,10/Mar/05 20:51,12/Mar/05 03:22,30/Jan/20 16:57,12/Mar/05 03:22,2.1,,,,,,3.0,,,JMS client,,,,0,"Our 

        protected Class resolveClass(ObjectStreamClass v) throws ClassNotFoundException{
            ClassLoader cl = Thread.currentThread().getContextClassLoader();
            try {
                if (cl != null){
                    return cl.loadClass(v.getName());
                } else {
                    return Class.forName(v.getName());
                }
            } catch ( ClassNotFoundException e ) {
                return ACTIVEMQ_CLASSLOADER.loadClass(v.getName());
            }
        }

The Serilaization helper class does not handle loading class arrays.  The class name will be something like ""[java.lang.String"" but cl.loadClass does not handle classes in that format.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48940,,,2005-03-10 20:51:19.0,,,,,,,,"0|i17y93:",254519,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
useAsyncSend parameter ignored for client connection,AMQ-212,12481222,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,dennis@bevocal.com,dennis@bevocal.com,09/Mar/05 05:51,12/Mar/05 03:19,30/Jan/20 16:57,12/Mar/05 03:19,,,,,,,3.0,,,Connector,,,,0,"I found that the useAsyncSend parameter was being ignored if defined on the client connection.  The problem is that the PooledExecutor is only created if the the useAsyncSend member is true at construction time (default is false).  However the client library sets this parameter after construction.  To fix the problem modified  setUseAsyncSend() method from:

    public void setUseAsyncSend(boolean useAsyncSend) {
    	this.useAsyncSend = useAsyncSend;
    }

to

    public void setUseAsyncSend(boolean useAsyncSend) {
    	this.useAsyncSend = useAsyncSend;
        try {
            if (useAsyncSend) {
                executor = new PooledExecutor(new BoundedBuffer(1000), 1);
            } else if (executor != null) {
                stopExecutor(executor);
            }
        } catch (Exception e) {
            log.warn(""problem closing executor"", e);
        }
    }",W2k java 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48938,,,2005-03-09 05:51:22.0,,,,,,,,"0|i17y9j:",254521,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DurableSubscription fails when taken active->inactive->active in one connection,AMQ-182,12481163,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,26/Jan/05 06:17,27/Feb/05 09:24,30/Jan/20 16:57,27/Feb/05 09:24,2.1,,,,,,3.0,,,Broker,,,,0,"A testcase like the following fails:

        consumer = session.createDurableSubscriber(topic, ""sub1"");
        producer = session.createProducer(topic);
        producer.setDeliveryMode(DeliveryMode.PERSISTENT);
        connection.start();

        producer.send(session.createTextMessage(""Msg:1""));
        assertTextMessageEquals(""Msg:1"", consumer.receive(5000));
        
        consumer.close();

        producer.send(session.createTextMessage(""Msg:2""));
        consumer = session.createDurableSubscriber(topic, ""sub1"");
        
        assertTextMessageEquals(""Msg:2"", consumer.receive(5000));",,,,,,,,,,,,,,,,,,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48913,,,Sun Feb 27 09:24:57 UTC 2005,,,,,,,,"0|i0tsjz:",171935,,,,,,,,,,,,,,,,,,,"26/Jan/05 06:27;chirino;Noticed that this is JDBC persistence problem.  Test passed against jdbm .","15/Feb/05 23:34;chirino;Created a test case in DurableSubscriptionTestSupport.java for the problem.  See: http://cvs.activemq.codehaus.org/viewrep/activemq/activemq/modules/assembly/src/test/org/codehaus/activemq/usecases/DurableSubscriptionTestSupport.java?r=1.2#l186","15/Feb/05 23:39;chirino;James, not sure if you or Stewie might be able to fix this better.  

But I tracked part of the problem down to the DurableTopicMessageContainerManager.  When an existing durable sub goes online, the call to subscriptionContainer.getSubscription(info.getConsumerId()); 
it does not get the exisiting subscription due to the getConsumerId() giving back a different value than what the subscription was created with.  Since 

consumerId = clientId + ""."" + sessionId + ""."" + consumerNo;  

The sessionId/consumerNo is changing with a new connection.","27/Feb/05 09:24;chirino;Fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Closing a consumer before a commit() rollsback the messages that were consumed.,AMQ-143,12481161,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,03/Dec/04 06:47,27/Feb/05 09:23,30/Jan/20 16:57,27/Feb/05 09:23,2.1,,,,,,3.0,,,Broker,,,,0,"The following code should cause received message to get consumed and not rolledback.  Right now it seems that when we close a consumer his messages are rollback even though they were consumed in transaction that is about to commit.

TextMessage message = (TextMessage) consumer.receive(1000);
consumer.close();
session.commit();",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-12-20 12:30:15.0,,,false,,,,,,,,,,,,,,,,,48878,,,Sun Feb 27 09:23:54 UTC 2005,,,,,,,,"0|i0tss7:",171972,,,,,,,,,,,,,,,,,,,"03/Dec/04 07:01;chirino;Added test case to demonstrate the problem.  Look at line 192 of
http://cvs.activemq.codehaus.org/viewrep/activemq/activemq/modules/core/src/test/org/codehaus/activemq/JmsTransactionTestSupport.java?r=1.4","20/Dec/04 12:30;jstrachan;is this issue resolved now?","21/Dec/04 05:54;chirino;Not yet.","27/Feb/05 09:23;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscription does not work when session is recycled.,AMQ-190,12481220,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,08/Feb/05 05:21,26/Feb/05 00:19,30/Jan/20 16:57,26/Feb/05 00:19,2.0,,,,,,2.1,,,Broker,,,,0,"The following test case fails:

        connection.setClientID(getName());
        connection.start();
        Session session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);
        Topic topic = session.createTopic(""topic-""+getName());
        MessageConsumer consumer = session.createDurableSubscriber(topic, ""sub1"");
        // Drain any messages that may allready be in the sub
        while( consumer.receive(1000)!=null )
            ;

        // See if the durable sub works in a new session.
        session.close();
        session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);

        // Send a Message that should be added to the durable sub.
        MessageProducer producer = createProducer(session, topic);
        producer.send(session.createTextMessage(""Message 1""));

        // Activate the durable sub now.  And receive the message.
        consumer = session.createDurableSubscriber(topic, ""sub1"");
        Message msg = consumer.receive(1000);
        assertNotNull(msg);        
        assertEquals( ""Message 1"", ((TextMessage)msg).getText()  );",,daggerrz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48920,,,Sat Feb 26 00:19:07 UTC 2005,,,,,,,,"0|i0tspr:",171961,,,,,,,,,,,,,,,,,,,"26/Feb/05 00:19;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prepared transactions not recovering after a rebuild due to serialVersionUID  changing.,AMQ-113,12481211,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,13/Oct/04 20:31,26/Feb/05 00:17,30/Jan/20 16:57,26/Feb/05 00:17,2.1,,,,,,2.0,,,Message Store,,,,0,"I had an ActiveMQ install which I upgraded with new ActiveMQ jars to fix a small bug.  When it started up I got the following error:


10:27:08,625 INFO  [JdbmPersistenceAdapter] Creating JDBM based message store in directory: C:\sandbox\geronimo-tck\j2ee\geronimo\var\activemq
10:27:08,781 INFO  [JdbmPreparedTransactionStore] Recovering prepared transactions
10:27:08,843 ERROR [JdbmPreparedTransactionStore] Failed to recover prepared transactions: java.io.InvalidClassException: org.codehaus.activemq.service.impl.AbstractTransaction; local class incompatible: stream classdesc serialVersionUID = -30595945985666
java.io.InvalidClassException: org.codehaus.activemq.service.impl.AbstractTransaction; local class incompatible: stream classdesc serialVersionUID = -3059594598566650262, local class serialVersionUID = -8026968802014775398
        at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:519)
        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1546)
        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1460)
        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1546)
        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1460)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1693)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1299)
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:339)
        at jdbm.btree.BPage.deserialize(BPage.java:996)
        at jdbm.recman.BaseRecordManager.fetch(BaseRecordManager.java:341)
        at jdbm.recman.CacheRecordManager.fetch(CacheRecordManager.java:264)
        at jdbm.btree.BPage.loadBPage(BPage.java:826)
        at jdbm.btree.BPage.childBPage(BPage.java:816)
        at jdbm.btree.BPage.findFirst(BPage.java:302)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48851,,,Sat Feb 26 00:17:50 UTC 2005,,,,,,,,"0|i0ttdr:",172069,,,,,,,,,,,,,,,,,,,"26/Feb/05 00:17;chirino;Ever sicne 2.0 we don't serialize a ""Transaction"" object any more.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Publishing to a temp destination that has been deleted does not fail,AMQ-179,12481136,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,motero,motero,24/Jan/05 06:44,25/Feb/05 23:47,30/Jan/20 16:57,25/Feb/05 23:47,,,,,,,2.1,,,,,,,0,"The following test case is failing in version 1.5. Basically when a temporary queue is deleted, publishing a message to that deleted queue is not throwing a JMSException.

--- JmsTempDestinationTest-New.java	2005-01-20 12:16:33.969038400 +1100
+++ JmsTempDestinationTest.java	2004-12-16 17:48:48.000000000 +1100
@@ -26,7 +26,6 @@
 import javax.jms.MessageConsumer;
 import javax.jms.MessageProducer;
 import javax.jms.Queue;
-import javax.jms.TemporaryQueue;
 import javax.jms.Session;
 import javax.jms.TextMessage;
 
@@ -171,36 +170,4 @@
         } catch ( JMSException e ) {            
         }
     }
-    
-    /**
-     * Make sure you cannot publish to a temp destination that has been deleted.
-     * 
-     * @throws JMSException
-     */
-    public void testPublishFailsForDeletedTempDestination() throws JMSException {
-        
-        Connection tempConnection = factory.createConnection();
-        Session tempSession = tempConnection.createSession(false, Session.AUTO_ACKNOWLEDGE);        
-        TemporaryQueue queue = tempSession.createTemporaryQueue();
-        
-        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);        
-        connection.start();        
-        
-        // This message delivery should work since the temp connection is still open.
-        MessageProducer producer = session.createProducer(queue);
-        producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
-        TextMessage message = session.createTextMessage(""First"");
-        producer.send(message);
-
-        // Deleting the temp queue should destroy it
-        queue.delete();        
-        
-        // This message delivery NOT should work since the temp queue has been deleted.
-        try {
-            message = session.createTextMessage(""Hello"");
-            producer.send(message);
-            fail(""Send should fail since temp queue has been deleted."");
-        } catch ( JMSException e ) {            
-        }
-    }
 }
\ No newline at end of file",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-02-25 23:47:29.0,,,false,,,,,,,,,,,,,,,,,48910,,,Fri Feb 25 23:47:29 UTC 2005,,,,,,,,"0|i17y5z:",254505,,,,,,,,,,,,,,,,,,,"25/Feb/05 23:47;chirino;Hi Matias, this should be working in the 2.1 release.  Could validate that it works for you and close this issue?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URI parameters like maximumRetries are ignored when using remote:// brokers,AMQ-195,12481169,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,daggerrz,daggerrz,14/Feb/05 19:08,16/Feb/05 22:51,30/Jan/20 16:57,16/Feb/05 22:51,2.0,,,,,,2.1,,,Transport,,,,0,"When using networked brokers like e.g remote://reliable:tcp://remotebrokerhost:61616, the URI parameters such as maximumRetries and failureSleepTime should be propagated to the underlying channel. This is not the case today as properties are populated on RemoteTransportChannel instances which do not expose setters for these properties.

This makes these topologies much less useful. :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-02-16 22:51:42.0,,,false,,,,,,,,,,,,,,,,,48924,,,Wed Feb 16 22:51:42 UTC 2005,,,,,,,,"0|i0tsg7:",171918,,,,,,,,,,,,,,,,,,,"16/Feb/05 22:51;jstrachan;To be able to disambiguate the properties on the reliable/composite channel from those on the individual named collections, we're currently using parenthesis...

e.g.

reliable:(vm://foo?sendCapacity=999&whatnot=456)?maximumRetries=123&another=456


So wrap all the sub-connections in () and append the usual properties to configure reliable/composite style transports",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The connection.destroyDestination() is not working properly,AMQ-171,12481115,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,13/Jan/05 21:00,15/Feb/05 23:20,30/Jan/20 16:57,15/Feb/05 23:20,2.1,,,,,,2.1,,,,,,,0,When you do a connection.destroyDestination(dest) it seems like it works but if you add a subscriber to the dest then all the messages existed in the destination before the destory get delivered.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48904,,,Tue Feb 15 23:20:10 UTC 2005,,,,,,,,"0|i0tstz:",171980,,,,,,,,,,,,,,,,,,,"15/Feb/05 23:20;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Significant performance loss,AMQ-155,12481213,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,bradleej,bradleej,13/Dec/04 20:40,03/Feb/05 10:46,30/Jan/20 16:57,07/Jan/05 20:02,1.3,,,,,,2.0,,,Broker,,,,0,"The perforamnce of 1.3 is less than 50% of that of 1.2 version. 

On a small windows test platform ActiveMQ 1.2 is producing about 1024 messages per second and consuming the same. About 2000 msgs per second on a single processor.

ActiveMQ 1.3 dropped into the same environment averages 472 msgs pers second or about 900 msgs produced/consumed on the same processor. While that figure is still good performance it is a significant loss.","Win2k, JDK5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-12-20 12:22:13.0,,,false,,,,,,,,,,,,,,,,,48889,,,Fri Jan 07 20:02:48 UTC 2005,,,,,,,,"0|i0tsiv:",171930,,,,,,,,,,,,,,,,,,,"20/Dec/04 12:22;jstrachan;fancy taking a look?","07/Jan/05 20:02;stewie;The performance degradation is caused by the change on the use asyncSend flag in the ActiveMQConnectionFactory from true to false. This was to enable some test cases around temporary queues to work correctly. This can be rectified by setting the useAsyncSend property to true on either the ConnectionFactory - or the Connection created from the ConnectionFactory",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to get multicast to work in severless environment,AMQ-29,12481344,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bguan,bguan,05/Jun/04 01:20,03/Feb/05 10:45,30/Jan/20 16:57,19/Jun/04 00:15,1.0,,,,,,2.0,,,Transport,,,,0,"I am trying to get a serverless setup using multicast or JRMP as transport.

I verified that Multicast works in my environment using this util: http://www.mikkle.dk/multicasttest/index.html

But I am unable to get ActiveMQ to work between 2 JVM on the same box or on different boxes.  Both producer and consumer runs without any error except that Consumer is not getting any message at all.  Furthermore, no multicast traffic can be detected on the network.

I have tried activemq-1.0-M1.jar and activemq-1.0-SNAPSHOT.jar as listed on http://dist.codehaus.org/activemq/jars and also several interim builds.

Attached are my 2 simple test program.  Note that I am able to get tcp protocol to work with these 2 program if I start a server.

::::::::::::::::::::::::::::::::::::
    Producer tester
::::::::::::::::::::::::::::::::::::

import java.util.Properties;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Destination;
import javax.jms.Message;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.Reference;

import org.codehaus.activemq.ActiveMQConnectionFactory;
import org.codehaus.activemq.jndi.JNDIReferenceFactory;


/**
 * Class to test ActiveMQ Publisher
 *
 * @author $author$
 * @version $Revision$
 */
public class TestActiveMQProducer
{
    protected ConnectionFactory connFactory;
    protected Connection sndConn;
    protected Session sndSess;
    protected MessageProducer producer;
    protected Destination dest;

    /**
     * main logic
     *
     * @param args .
     *
     * @throws Exception !
     */
    public static void main(String[] args) throws Exception
    {
        TestActiveMQProducer tester = new TestActiveMQProducer();

        tester.setUp();

        for (int i = 0; i < 100; i++) {
            Message msg = tester.sndSess.createTextMessage(""Hello World!"");
            tester.producer.send(tester.dest, msg);
            System.out.println(""Sent msg: "" + msg);
            Thread.sleep(1000);
        }
        
        tester.tearDown();
    }

    protected void setUp() throws Exception
    {
        connFactory = new ActiveMQConnectionFactory(""multicast://224.0.0.1:8000"");     
        //connFactory = new ActiveMQConnectionFactory(""tcp://127.0.0.1:61616"");       
        System.out.println(""Created conn factory: "" + connFactory);
        
        sndConn = connFactory.createConnection();
        System.out.println(""Created conn: "" + sndConn);
        
        sndSess = sndConn.createSession(false, Session.AUTO_ACKNOWLEDGE);
        System.out.println(""Created receiveSession: "" + sndSess);
        
        dest = sndSess.createTopic(""FOO"");
        System.out.println( ""Created destination: "" + dest + "" of type: "" + dest.getClass() );

        producer = sndSess.createProducer(dest);
        sndConn.start();
        
        System.out.println(""Started connections"");
    }

    protected void tearDown() throws Exception
    {
        sndSess.close();
        sndConn.close();
    }
}


::::::::::::::::::::::::::::::::::::
    Consumer tester
::::::::::::::::::::::::::::::::::::

import java.util.Properties;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Destination;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.Session;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.Reference;

import org.codehaus.activemq.ActiveMQConnectionFactory;
import org.codehaus.activemq.jndi.JNDIReferenceFactory;


/**
 * Class to test ActiveMQ Subscriber
 *
 * @author $author$
 * @version $Revision$
 */
public class TestActiveMQConsumer implements MessageListener
{
    protected ConnectionFactory connFactory;
    protected Connection rcvConn;
    protected Session rcvSess;
    protected MessageConsumer consumer;
    protected Destination dest;

    /**
     * main logic
     *
     * @param args .
     *
     * @throws Exception !
     */
    public static void main(String[] args) throws Exception
    {
        TestActiveMQConsumer tester = new TestActiveMQConsumer();

        tester.setUp();

        // tester.tearDown();
    }

    protected void setUp() throws Exception
    {
        connFactory = new ActiveMQConnectionFactory(""multicast://224.0.0.1:8000"");     
        //connFactory = new ActiveMQConnectionFactory(""tcp://127.0.0.1:61616"");     
        System.out.println(""Created conn factory: "" + connFactory);
   
        rcvConn = connFactory.createConnection();
        System.out.println(""Created conn: "" + rcvConn);
        
        rcvSess = rcvConn.createSession(false, Session.AUTO_ACKNOWLEDGE);
        System.out.println(""Created receiveSession: "" + rcvSess);
        
        dest = rcvSess.createTopic(""FOO"");
        System.out.println( ""Created destination: "" + dest + "" of type: "" + dest.getClass() );
            
        consumer = rcvSess.createConsumer(dest);
        consumer.setMessageListener(this);
        rcvConn.start();
        
        System.out.println(""Started connections"");
    }

    protected void tearDown() throws Exception
    {
        rcvSess.close();
        rcvConn.close();
    }

    /**
     * Got a message!
     *
     * @param message .
     */
    public void onMessage(Message message)
    {
        System.out.println(""Received message: "" + message);
    }
}",Tested on both W2K/JDK1.4.2_04 and Linux/JDK1.4.2,bguan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-06-19 00:15:26.0,,,false,,,,,,,,,,,,,,,,,48777,,,Sat Jun 19 00:15:26 UTC 2004,,,,,,,,"0|i0tsqn:",171965,,,,,,,,,,,,,,,,,,,"19/Jun/04 00:15;jstrachan;Should be fixed now in CVS - sorry about that",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to retrieve object bound with JNDI,AMQ-30,12481274,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,bguan,bguan,05/Jun/04 03:10,03/Feb/05 10:45,30/Jan/20 16:57,14/Jun/04 14:01,1.0,,,,,,2.0,,,JMS client,,,,0,"I was trying to learn how to use ActiveMQ.  

I try using Sun's Filesystem JNDI provider instead of using say RMI registry or some other JNDI provider that comes with app servers.

The problem I am having is, when I bind an ActiveMQTopic to Sun's filesystem provider, what I looked-up from the other JVM is a javax.naming.Reference object instead of what I was expecting i.e. ActiveMQTopic objects.

Looking into the .bindings used by the filesystem JNDI reveals what I think is the explaination:

	#This file is used by the JNDI FSContext.
	#Thu Jun 03 14:05:58 PDT 2004
	FOO/RefAddr/0/Encoding=String
	FOO/RefAddr/0/Content=FOO
	FOO/FactoryName=com.spirit.core.util.resolver.JNDIResolver
	FOO/ClassName=org.codehaus.activemq.message.ActiveMQTopic
	FOO/RefAddr/0/Type=physicalName


Is it intentional that the FactoryName is set to com.spirit.core.util.resolver.JNDIResolver?
Isn't spirit soft commercial software?

Looking into the code, it seems to be coming from org.codehaus.activemq.jndi.JNDIReferenceFactory.createReference().


Well, hope to hear from you soon about this. 


Many thanks in advance.","Win2K and Linux on intel, Sun JDK1.4.2_04, Sun Filesystem JNDI provider 1.2, ActiveMQ 1.0-M1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-06-14 14:01:03.0,,,false,,,,,,,,,,,,,,,,,48778,,,Mon Jun 14 14:01:03 UTC 2004,,,,,,,,"0|i0tstj:",171978,,,,,,,,,,,,,,,,,,,"14/Jun/04 14:01;jstrachan;Now fixed in CVS. Many thanks for spotting this typo",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
temporary queue errors when using NetworkMessageBridge,AMQ-117,12481350,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,jstrachan,jstrachan,19/Oct/04 11:03,03/Feb/05 10:45,30/Jan/20 16:57,09/Nov/04 20:15,1.1,,,,,,2.0,,,,,,,0,"I have 2 brokers running connected using tcp. I create a QueueRequestor
using the code below

....
ActiveMQSession session =
(ActiveMQSession)connection.createSession(false,
Session.AUTO_ACKNOWLEDGE);
Queue queue = session.createQueue(name);
QueueRequestor requestor =new QueueRequestor(session, queue);



The problem is that I get the error below:

ERROR [org.codehaus.activemq.transport.NetworkChannel] Failed to start
NetworkMessageBridge for destination:
TemporaryQueue-{TD{ID:marcxp-1607-1098116733286-14:0}TD}ID:marcxp
-1607-10981
16733286-170:0

It seems that the actual exception is in the ActiveMQMessageConsumer
constructor. An InvalidDestinationException is thrown with the message
""Cannot use a temporary destination from another connection"".


We should not be exposing temporary queues across network bridges should we?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-09 12:40:31.0,,,false,,,,,,,,,,,,,,,,,48855,,,Tue Nov 09 20:15:03 UTC 2004,,,,,,,,"0|i0tthz:",172088,,,,,,,,,,,,,,,,,,,"09/Nov/04 12:40;stewie;We need to support temporary queues across networks. I suggest we mark the connection as being used for internal routing - and ignore JMS spec imposed compliance for these cases.","09/Nov/04 12:43;jstrachan;Sounds good to me","09/Nov/04 20:15;stewie;disable J2EE compliance for internally routed messages",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When using multicast, setting msg expiry stops msgs from being sent",AMQ-33,12481303,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,bguan,bguan,22/Jun/04 02:41,03/Feb/05 10:45,30/Jan/20 16:57,22/Jun/04 14:30,1.0,,,,,,2.0,,,Transport,,,,0,"When using multicast, setting msg expiry by calling msg.setJMSExpiration(10000) actually stops msgs from being sent!

The following error is logged:

2004-06-21 16:40:03,625 [Thread-0] INFO  org.codehaus.activemq.service.vm.VMSubscription - Message probably expired: null


If I skip the call to setJMSExpiration(), msg will get sent.


Also, when using a server using TCP protocol, setJMSExpiration() works too.","Win2K, Sun JDK 1.4.2_04",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-06-22 12:28:47.0,,,false,,,,,,,,,,,,,,,,,48779,,,Tue Jun 22 14:30:52 UTC 2004,,,,,,,,"0|i0ttgv:",172083,,,,,,,,,,,,,,,,,,,"22/Jun/04 12:28;jstrachan;I don't think you're meant to call Message.setJMSExpiration() as the JMS provider is meant to do that.

If you want to send a message with a time to live (TTL), I think you're meant to call MessageProducer.send(...., timeToLive);

http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageProducer.html#send(javax.jms.Destination,%20javax.jms.Message,%20int,%20int,%20long)

Or specify a default time to live on the MessageProducer...

http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageProducer.html#setTimeToLive(long)


AFAIK the time to live code is working. Maybe if you specify the TTL properly it might fix your issue? Incidentally the value of Message.getJMSExpiration() is GMT + the TTL, rather than just the TTL. This might explain why things are not sent?","22/Jun/04 12:52;jstrachan;From the spec....

3.4.11 How Message Header Values Are Set

Header Fields Set By
JMSDestination Send Method
JMSDeliveryMode Send Method
JMSExpiration Send Method
JMSPriority Send Method
JMSMessageID Send Method
JMSTimestamp Send Method
JMSCorrelationID Client
JMSReplyTo Client
JMSType Client
JMSRedelivered Provider","22/Jun/04 14:30;jstrachan;We now explicitly overwrite the value of jmsExpiration() in the JMS client's send() method now to avoid any further confusion. See the above comments for how to specify a timeToLive when sending messages",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
release build seems broken - doesn't include user guide HTML or examples,AMQ-167,12481331,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,jstrachan,jstrachan,07/Jan/05 14:21,03/Feb/05 10:45,30/Jan/20 16:57,07/Jan/05 21:14,,,,,,,2.0,,,,,,,0,"If I'm in activemq/modules/assembly and type

maven dist:prepare-bin-filesystem

then I get stuff in the binary distro such as userGuide.html and an example directory containing a bunch of examples with an Ant build for folks to run stuff.

For some reason the last 3 releases don't have this stuff included despite this stuff being in CVS for some time. 

(The idea is to provide a few easy to run examples in the binary distro that folks can play with, with pure Ant and not needing Maven etc).

I wondered if you had any idea why it doesn't work when we do a release?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-01-07 21:08:58.0,,,false,,,,,,,,,,,,,,,,,48900,,,Fri Jan 07 21:14:40 UTC 2005,,,,,,,,"0|i0tthj:",172086,,,,,,,,,,,,,,,,,,,"07/Jan/05 21:08;chirino;Those files were added to the HEAD branch after the 1.x branch was created.  All build so far have been off the 1.x branch.  Thus, thats the reason why they have no shown up in the previous releases.

Those files will be in the next 2.x release.  If you think there will be another 1.x release, let me know and I'll merge those files into the 1.x branch.","07/Jan/05 21:14;jstrachan;DOH! Thanks for that Hiram.

No worries about back-porting - we can let this stuff flow right through for 2.x. Its another incentive for folks to upgrade :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling Session.recover from within the onMessage listener causes already acknowledged messages to be redelivered.,AMQ-112,12481168,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,tlitton,tlitton,13/Oct/04 01:02,03/Feb/05 10:45,30/Jan/20 16:57,09/Nov/04 12:34,1.1,,,,,,2.0,,,JMS client,,,,0,"ActiveMQMessageConsumer.processMessage registers the message as delivered after the onMessage call.  Therefore when the Session.recover method is called, it recovers the previous message which has already been acknowledged.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-10-24 15:00:10.0,,,false,,,,,,,,,,,,,,,,,48850,,,Tue Nov 09 12:34:30 UTC 2004,,,,,,,,"0|i0tt47:",172026,,,,,,,,,,,,,,,,,,,"24/Oct/04 15:00;jstrachan;Fancy taking a looksie at this one?","24/Oct/04 17:24;stewie;mmm- a tough one! If the message is acknowledged - then dispatched to the Message Listener - there is a window where the client application could die before seeing the message, but after the acknowledgement has been sent to the broker. This would result in the message being lost for good.

I assume this issue arose using Session.CLIENT_ACKNOWLEDGE mode ?","25/Oct/04 17:26;tlitton;Yes, it was in Client.Acknowledged mode.  

I didn't see where the code was sending information to the broker, so won't the broker still retain a copy even if the client fails?  It's been a while since i've read the code, so I could be wrong.","09/Nov/04 12:34;stewie;moved acknowledge call to before message is delivered to a MessageListener",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problematic Xid comparison in ActiveMQXASession,AMQ-89,12481378,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,boerdijk,boerdijk,17/Sep/04 17:41,03/Feb/05 09:32,30/Jan/20 16:57,23/Sep/04 17:59,1.0,1.1,1.2,,,,1.1,,,JMS client,,,,0,"In ActiveMQXASession.java, Xids are tested for equality in various places using the == operator. This will not work properly if the Xids are equal but happen to be different objects. A better approach would be to use a boolean equals(Xid a, Xid b) method that tests the formatId, globalTransactionId and branchQualifier of the involved Xids for equality.",All environments,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-09-23 17:59:15.0,,,false,,,,,,,,,,,,,,,,,48828,,,Fri Sep 24 00:03:43 UTC 2004,,,,,,,,"0|i0ttif:",172090,,,,,,,,,,,,,,,,,,,"23/Sep/04 17:59;stewie;Xid comparisions to use equals - and updated ActiveMQXid equals method","23/Sep/04 23:13;boerdijk;I see that you now use Xid.equals() to do the testing, but how can you be sure that Xid.equals() does indeed test the formatID, global transaction id and branch qualifier for equality? It's not required by the JTA spec (as far as I can tell), so to avoid surprises, I would recommend doing the testing with a custom static boolean equals(Xid a, Xid b) method.","24/Sep/04 00:03;stewie;It's a fair cop guv, I was just cutting corners. ActiveMQXaSession now uses a static method on ActiveMQXid to test for equality ... :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate Topic deliveries on clustered servers,AMQ-91,12481240,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,aarrgard,aarrgard,24/Sep/04 10:33,03/Feb/05 09:31,30/Jan/20 16:57,02/Oct/04 09:52,1.1,,,,,,1.1,,,,,,,0,"When configuring three or more brokers in a cluster we can receive a lot of duplicate Topic messages. 

This is due to the fact that a broker marks a message as visited when it receives it. This is not a problem for queue message, however for topic messages this becomes a problem since messages are distributed on all the server channels that the broker is aware of (and that the message has not visited?). This means that for three brokers we will get two duplicate deliveries for four broker we will get 12(3x4)? duplicates for five brokers we will get 60(3x4x5)? duplicates.

Increasing the number of connected brokers in a cluster will have a severe impact in performance...

Is it possible for the broker to mark topic messages as visited by all the brokers that it will send the message to excluding the one it is about to send to? This way the broker that receives a topic message wont send it to the brokers that have already received it(is about to receive it).",1.1-CVS-SNAPSHOT on 23 Sep 2004 running on a Windows XP/SUN JVM 1.4_05 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-09-24 20:13:39.0,,,false,,,,,,,,,,,,,,,,,48830,,,Sat Oct 02 09:52:44 UTC 2004,,,,,,,,"0|i0tst3:",171976,,,,,,,,,,,,,,,,,,,"24/Sep/04 11:58;aarrgard;Attached a test case that I am using to test different cluster configurations. It reads the configuration files for the brokers in a cluster starting at index 1. It then sets up consumers/produces to the first defined transport for each broker. The test then sends some queue or topic messages in a round robin fashion checking that each message is delivered to each consumer.

The source code does not conform to the coding standard in ActiveMQ. If you want I can fix that...","24/Sep/04 20:13;stewie;this is the same problem as AMQ-90","24/Sep/04 22:07;aarrgard;Perhaps they are related, but the fix of AMQ-90 does not cover this problem. However since it only affects clusters with three or more brokers exchanging topic messages I guess that it is not that urgent to fix...","25/Sep/04 10:27;stewie;In my rush to run through closing outstanding issues - I missed the point you was making. Currently, Networks are only valid for store and forward acyclic network topologies, unless the topology is ring containing only two brokers. 

There is still a few things to add to support clusters. But rather than take the approach that you outlined so well, it will probably more optimal to restrict subscription propagation  within a cluster, as messages are only forwarded on this basis.","02/Oct/04 09:52;stewie;There's a Topic cluster test now in usecases, with a Producer/Consumer on each broker. This seems to work ok",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clustered brokers sends topic messages back and forth,AMQ-90,12481198,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,aarrgard,aarrgard,20/Sep/04 11:59,03/Feb/05 09:30,30/Jan/20 16:57,23/Sep/04 18:10,1.1,,,,,,1.1,,,,,,,0,"When setting up two clustered brokers that each have a consumer listening to the same topic, posted messages are sent back and forth between the two brokers.

This can be reproduced by configuring the zeroconf example with the topic switch and connecting one consumer to each server. The servers will start to consume a lot of CPU and memory when sending topic messages to that configuration....",1.1-CVS-SNAPSHOP on 19 Sep 2004 running on a Windows XP/SUN JVM 1.4_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-09-23 18:10:48.0,,,false,,,,,,,,,,,,,,,,,48829,,,Thu Sep 23 18:10:48 UTC 2004,,,,,,,,"0|i0ttbj:",172059,,,,,,,,,,,,,,,,,,,"23/Sep/04 18:10;stewie;Resolved in CVS head",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
strange behaviour of peer network with queues,AMQ-93,12481347,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,jstrachan,jstrachan,28/Sep/04 15:16,03/Feb/05 09:30,30/Jan/20 16:57,06/Oct/04 18:56,,,,,,,1.1,,,,,,,0,"Try running this in two shells...

maven -o jndi:consumer -Djndi=src/test/peer-jndi.properties 

(wait for it to startup) then

maven -o jndi:producer -Djndi=src/test/peer-jndi.properties 


It will use an embedded broker with discovery to create a network. (Its using src/sample-conf/peer.xml to configure the broker).

If you pass -Dsubject=MyTopic things work perfectly. Though with queues, the consumer seems to get the messages, yet they are not messages 1..100 but instead are like 20 copies of message 39 etc. i.e. lots of duplicates seem to be dispatched for some reason. Something wierd going on.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-10-06 18:56:21.0,,,false,,,,,,,,,,,,,,,,,48832,,,Wed Oct 06 18:56:21 UTC 2004,,,,,,,,"0|i0tthb:",172085,,,,,,,,,,,,,,,,,,,"06/Oct/04 18:56;stewie;Fixed in 1.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Temporary Topic Destinations broken (changed to Queue Destination),AMQ-134,12481283,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,nicolaiwadstrom,nicolaiwadstrom,19/Nov/04 22:22,03/Feb/05 09:25,30/Jan/20 16:57,02/Feb/05 20:15,1.1,1.2,,,,,2.0,,,,,,,1,"I have to peers that communicate using JMS, the first one creates a message, sets the JMSReplyTo to a temporary (Topic) Destination for the purpose and sends it to the Topic, the second peer receives the message and processes it and responds to the Temporary Topic Destination.

This all works with OpenJMS, but using ActiveMQ on the second peer the JMSReplyTo property is a QueueDestination and not a TopicDestination (although the name from toString().

Peer one:
org.codehaus.activemq.message.ActiveMQTemporaryTopic / TemporaryTopic-{TD{ID:dozer-3076-1100891655894-1:0}TD}ID:dozer-3076-1100891655894-8:0

Peer two:
org.codehaus.activemq.message.ActiveMQTemporaryQueue / TemporaryTopic-{TD{ID:dozer-3076-1100891655894-1:0}TD}ID:dozer-3076-1100891655894-8:0","Windows XP, 768MByte RAM, J2SE 1.5.0",drag0n2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-22 02:22:06.0,,,false,,,,,,,,,,,,,,,,,48870,,,Thu Jan 06 19:49:25 UTC 2005,,,,,,,,"0|i0tspz:",171962,,,,,,,,,,,,,,,,,,,"19/Nov/04 22:36;nicolaiwadstrom;To clarify, Peer One sends the message to a separate Topic for the purpose of sending Requests from which Peer Two consumes messages.","22/Nov/04 02:22;stewie;Would you mind submitting a test-case? Having problems reproducing this on the latest from CVS","28/Nov/04 14:42;nicolaiwadstrom;Hi, I have tried this on 1.1 and 1.2-snapshot. I did not submit a test case, because the code is quite large and complex before it reaches this point of the application.

I will try to isolate a test case and submit it ASAP.","04/Jan/05 01:39;drag0n2;Test case:

Server code:

public class SSTest implements MessageListener {
    public static void main(String[] args) throws JMSException, NamingException, InterruptedException {
        SSTest sst = new SSTest();
        sst.registerListener();
        Thread.sleep(1000000);

    }

    private QueueSession qs;
    private QueueSession sendSession;

    public SSTest() throws JMSException {
        BrokerContainer container = new BrokerContainerImpl();
        container.addConnector(""tcp://localhost:6126"");
        container.addConnector(""vm://SS"");
        container.start();
    }

    public void registerListener() throws JMSException, NamingException {
        ActiveMQConnectionFactory qcf = new ActiveMQConnectionFactory(""vm://SS"");
        qcf.setUseAsyncSend(false);

        QueueConnection qc = qcf.createQueueConnection();
        qs = qc.createQueueSession(false,Session.AUTO_ACKNOWLEDGE);
        sendSession = qc.createQueueSession(false,Session.AUTO_ACKNOWLEDGE);
        Queue queue = (Queue) qs.createQueue(""SS.LoginQueue"");
        QueueReceiver qr = qs.createReceiver(queue);
        qr.setMessageListener(this);
        qc.start();



    }


    public void onMessage(Message msg) {
        try {
            if (msg != null && msg instanceof TextMessage) {
                TextMessage message = (TextMessage) msg;
                System.out.println(""Reading message: "" +
                        message.getText());
                Destination dest = message.getJMSReplyTo();
                if (dest != null) {
                    MessageProducer mp = sendSession.createProducer(dest);
                    TextMessage replyMessage = sendSession.createTextMessage();
                    replyMessage.setText(message.getText());
                    mp.send(replyMessage);
                    mp.close();
                    System.out.println(""Reply sent"");

                } else {
                    System.out.println(""No reply sent"");
                }
            } else {
                System.out.println(""Err, problem message is: "" + msg);
            }
        } catch (JMSException e) {
            e.printStackTrace();
        }
    }

}


Client code:

public class ConnectTest {

    public static void main(String [] args) throws JMSException, NamingException, InterruptedException {


        ActiveMQConnectionFactory qcf = new ActiveMQConnectionFactory(""tcp://localhost:6126"");
        qcf.setUseAsyncSend(false);

        QueueConnection qc = qcf.createQueueConnection();
        QueueSession qs = qc.createQueueSession(false,Session.AUTO_ACKNOWLEDGE);
        Queue queue = qs.createQueue(""SS.LoginQueue"");
        Queue replyQueue = qs.createTemporaryQueue();
        int i = 0;
        while (true) {
            TextMessage tm = qs.createTextMessage(""this is a test "" + i++);
            tm.setJMSReplyTo(replyQueue);
            QueueSender sender = qs.createSender(queue);
            sender.send(tm);
            sender.close();
            System.out.println(""Here"");
            QueueReceiver receiver = qs.createReceiver(replyQueue);
            Message reply = receiver.receive();              
            TextMessage tmReply = (TextMessage) reply;
            System.out.println(""Received reply: "" + tmReply.getText());
            Thread.sleep(5000);
        }
    }
}","04/Jan/05 01:40;drag0n2;In the above test case the client waits forever for a reply. ","05/Jan/05 12:30;stewie;There's a couple of gotchas on the test case submitted.
On the client side, before messages are delivered, the Connection needs to be started.
Also, as the test case is using queues, if the Connection is started, only one message will
be received - as the QueueReceiver is not closed in the while loop, and is not necessarily garbage collected, messages will not necessarily be delivered to the new QueueReceiver.

After fixing these issues, I can't reproduce on the latest (1.4). Changing Queues to Topics (which the orginal issue was raised on) still does not produce the behaviour described.

Please can you confirm that this is still an issue on version 1.4 ?","06/Jan/05 02:11;drag0n2;OOPS! after fixing the above problems my test program works fine... Would be great if this would come up as a debug message somewhere... Because the send goes out, but the receive never returns....

Perhaps you should fail the send if the Connection is not started?","06/Jan/05 12:16;jstrachan;I don't think we can fail a send() if the connection is not started as we'd not pass the J2EE certification tests if we did. To be compliant I think we have to be able to send() on a non-started connection","06/Jan/05 19:49;drag0n2;A warning in the log instead would be great then... Otherwise I would have never figured it out.",,,,,,,,,,,,,,,,,,,,,,,,,,
Socket time out/close,AMQ-154,12481117,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,bradleej,bradleej,13/Dec/04 19:30,03/Feb/05 01:25,30/Jan/20 16:57,03/Feb/05 01:25,1.2,,,,,,2.0,,,Broker,,,,0,"The test was created by using the ActiveMQ benchmark and looping it repeatedly. The client socket is closing over a week end. Evidiently a time out occurs about 4 or 5 hours into the test.


2004-12-09 16:54:25,792 [ocalport=61616]] INFO  BrokerContainerImpl            -
 Removing client: ID:doodah-3917-1102632865323-1:0 on transport: TcpTransp
ortChannel: Socket[addr=/127.0.0.1,port=3918,localport=61616]
2004-12-09 16:55:02,323 [ocalport=61616]] INFO  TcpTransportChannel            -
 The socket peer is now closed
2004-12-09 16:55:02,323 [ocalport=61616]] INFO  BrokerClientImpl               -
 Client disconnected: brokerConnector-client:(5670411) : TcpTransportChannel: So
cket[addr=/127.0.0.1,port=3921,localport=61616]
2004-12-09 16:55:02,323 [ocalport=61616]] WARN  BrokerContainerImpl            -
 No clientID available for client: brokerConnector-client:(5670411) : TcpTranspo
rtChannel: Socket[addr=/127.0.0.1,port=3921,localport=61616]
2004-12-09 17:03:34,807 [ocalport=61616]] INFO  BrokerContainerImpl            -
 Adding new client: ID:doodah-3946-1102633414573-1:0 on transport: TcpTran
sportChannel: Socket[addr=/127.0.0.1,port=3947,localport=61616]
2004-12-09 17:04:00,573 [ocalport=61616]] INFO  BrokerContainerImpl            -
 Adding new client: ID:doodah-3950-1102633440323-1:0 on transport: TcpTran
sportChannel: Socket[addr=/127.0.0.1,port=3951,localport=61616]
2004-12-09 19:23:40,448 [ocalport=61616]] ERROR DefaultWireFormat              -
 Could not find PacketReader for packet type: UNKNOWN PACKET TYPE: 54
2004-12-09 19:23:40,448 [ocalport=61616]] ERROR DefaultWireFormat              -
 Could not find PacketReader for packet type: UNKNOWN PACKET TYPE: 48
2004-12-09 19:23:40,448 [ocalport=61616]] ERROR DefaultWireFormat              -
 Could not find PacketReader for packet type: UNKNOWN PACKET TYPE: 49
2004-12-09 19:23:40,448 [ocalport=61616]] ERROR DefaultWireFormat              -
 Could not find PacketReader for packet type: UNKNOWN PACKET TYPE: 51
2004-12-09 19:23:40,448 [ocalport=61616]] ERROR DefaultWireFormat              -
 Could not find PacketReader for packet type: UNKNOWN PACKET TYPE: 51
2004-12-09 19:23:40,448 [ocalport=61616]] ERROR DefaultWireFormat              -
 Could not find PacketReader for packet type: UNKNOWN PACKET TYPE: 53
Exception in thread ""TcpTransportChannel: Socket[addr=/127.0.0.1,port=3947,local
port=61616]"" java.lang.NegativeArraySizeException
        at org.codehaus.activemq.io.impl.DefaultWireFormat.readPacket(DefaultWir
eFormat.java:294)
        at org.codehaus.activemq.io.impl.DefaultWireFormat.readPacket(DefaultWir
eFormat.java:159)
        at org.codehaus.activemq.transport.tcp.TcpTransportChannel.run(TcpTransp
ortChannel.java:294)
        at java.lang.Thread.run(Thread.java:595)
2004-12-13 10:05:15,984 [ocalport=61616]] INFO  BrokerClientImpl               -
 Client disconnected: brokerConnector-client:(17477791) ID:doodah-3950-110
2633440323-1:0: TcpTransportChannel: Socket[addr=/127.0.0.1,port=3951,localport=
61616]
2004-12-13 10:05:15,984 [ocalport=61616]] INFO  BrokerContainerImpl            -
 Removing client: ID:doodah-3950-1102633440323-1:0 on transport: TcpTransp
ortChannel: Socket[addr=/127.0.0.1,port=3951,localport=61616]","Win2k, JKD1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-12-20 12:23:11.0,,,false,,,,,,,,,,,,,,,,,48888,,,Thu Feb 03 01:25:12 UTC 2005,,,,,,,,"0|i17y5b:",254502,,,,,,,,,,,,,,,,,,,"20/Dec/04 12:23;jstrachan;Dunno if you've fixed this one already - rings a bell","03/Feb/05 01:25;stewie;resolved",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network propgation of temp dest to late for request/reply,AMQ-180,12481146,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,dennis@bevocal.com,dennis@bevocal.com,25/Jan/05 01:29,03/Feb/05 00:01,30/Jan/20 16:57,03/Feb/05 00:01,2.0,,,,,,2.0,,,,,,,0,"I have confirmed that while a temporary destination is propgated between broker instances across NetworkChannels, it is happening to late to work for request/reply (RPC) operations.

To test two brokers are required to be interconnected.  Attach to broker1 a ""replier"" process and on broker2 a ""requestor"" process.

The replier process need only send back a reply message on the ""replyTo"" destination contained in the received message.


The requestor process performs the following steps:

1) create temporary topic
2) create producer topic TOOL.DEFAULT
3) create consumer topic from step 1
4) producer send msg
5) consumer receive msg

Broker1 log show that the registration of the consumer for the temporary topic arrives after the message is received from the producer.  The result is an exception condition that the destination is no longer valid because the client no longer exists.

Given the order of execution, I suspect one of the follow problems:

a) registration of a consumer is happening at the time the first receive() is executed and not when the consumer is created.

b) network propogation of consumers is done in background thread.",W2K java version 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-01-28 22:20:08.0,,,false,,,,,,,,,,,,,,,,,48911,,,Thu Feb 03 00:01:58 UTC 2005,,,,,,,,"0|i0s2ef:",161865,,,,,,,,,,,,,,,,,,,"27/Jan/05 06:09;dennis@bevocal.com;Okay here is some more info on this problem.  I changed the steps a bit.

1) create temporary topic
2) create consumer topic from step 1
Sleep for 1 second
3) create producer topic TOOL.DEFAULT
4) producer send msg
5) consumer receive msg 


Now the broker1 log show that the temporary topic registration is happening before the message is sent.

2005-01-26 18:22:32,278 [ocalport=61616]] DEBUG TransientQueueBoundedMessageManager      - Adding consumer: CONSUMER_INFO: id = 8 ConsumerInfo{ browser = false, destination = TemporaryTopic-{TD{requestor12345}TD}ID:hogmaw-1580-1106792549494-6:0, consumerIdentifier = 'ID:hogmaw-4518-1106783758977-0:0_NetworkChannel.1.1' , clientId = 'ID:hogmaw-4518-1106783758977-0:0_NetworkChannel' , sessionId = '1' , consumerName = '' , selector = '' , startTime = 1106792552248, started = true, consumerNo = 1, noLocal = false, prefetchNumber = 10, consumerKey = '[ID:hogmaw-4518-1106783758977-0:0_NetworkChannel:]'  }

Note it is registered with the TransientQueueBoundedMessageManager.  However when the reply message is being sent to the temporary topic the error message of:

2005-01-26 18:22:33,620 [ocalport=61616]] WARN  BrokerClientImpl                         - caught exception consuming packet: ACTIVEMQ_TEXT_MESSAGE: id = 8 ActiveMQMessage{ , jmsMessageID = null, bodyAsBytes = org.codehaus.activemq.message.util.ByteArray@1f03691, readOnlyMessage = false, jmsClientID = 'replier12345' , jmsCorrelationID = 'null' , jmsDestination = TemporaryTopic-{TD{requestor12345}TD}ID:hogmaw-1580-1106792549494-6:0, jmsReplyTo = null, jmsDeliveryMode = 1, jmsRedelivered = false, jmsType = 'null' , jmsExpiration = 0, jmsPriority = 4, jmsTimestamp = 1106792553330, properties = null, readOnlyProperties = false, entryBrokerName = 'ID:hogmaw-1411-1106791070978-0:0' , entryClusterName = 'default' , consumerNos = null, transactionId = 'null' , xaTransacted = false, consumerIdentifer = 'null' , messageConsumed = false, transientConsumed = false, sequenceNumber = 0, deliveryCount = 1, dispatchedFromDLQ = false, messageAcknowledge = null, jmsMessageIdentity = null, producerKey = ID:hogmaw-1578-1106792527032-9: }, text = Returning Message: 0 sent at: Wed Jan 26 18:22:33 PST 2005
javax.jms.InvalidDestinationException: Destination TemporaryTopic-{TD{requestor12345}TD}ID:hogmaw-1580-1106792549494-6:0 is no longer valid because the client requestor12345 no longer exists
	at org.codehaus.activemq.broker.impl.BrokerContainerImpl.checkTempDestinationExistance(BrokerContainerImpl.java:460)

Is indicating that test for the clientID is being done against a the BrokerContainerImpl.  Since the add is not recorded here, it is failing.

Another interesting item I found in the log is that NetworkMessageBridge objects are setup for temp destination on every broker in the network.  This seems contrary to the way other destination are handled where the NetworkMessageBridge is only established in the broker to which the orginating client is attached.","28/Jan/05 22:20;stewie;Added JmsTopicRequestor test (using a peer:// topology) to demonstrate and resolve this issue.","29/Jan/05 06:11;dennis@bevocal.com;Sorry to be the bearer of bad new, but the problem still exists.  I performed a build with all changes Stewie had checked in as of 1/28 before running the test.  All logs (client and server) are in attached amq180-retestinfo.zip file.","29/Jan/05 06:14;dennis@bevocal.com;The replier process is client1 (attached to server1) and the requestor process is client2 (attached to server2).  FWIW, servers 3 and 4 represent hosts that will be at a second site.

Server log 1 show the regestration of the temporary destination, but still when the reply is directed back to the requestor the error indicating the client does not exist is still being hit.","01/Feb/05 22:09;dennis@bevocal.com;Info (requested by Stewie) to duplicate problem:

The attached zip file contains my clients (Replier and Requestor), scripts for execution of brokers (server1 - 4) and the clients, and the configuration directories for each process.  

I have both a binary installation (created by dist:build-bin) and a source development installation.  The scripts are run from the source development area, but use the jars from the binary installation via the ACTIVEMQ_HOME env variable.

BTW replier client connects to server1 and requestor client connects to server2.  While I run all four servers to duplicate my intended enviroment, the problem can be duplicate with just servers 1 and 2.","03/Feb/05 00:01;dennis@bevocal.com;Fix for this one looks good.  Thanks Stewie.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
target dist:build-bin does not include commons-beanutil-1.6.1.jar file,AMQ-181,12481157,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,dennis@bevocal.com,dennis@bevocal.com,26/Jan/05 05:38,26/Jan/05 06:43,30/Jan/20 16:57,26/Jan/05 06:43,2.0,,,,,,2.0,,,,,,,0,"The binary distribution unit is missing the commons-beanutils-1.6.1.jar file.  This file is specified as a dependancy in core.  It needed when a client specifies parameters in a connection URL.


Connecting to URL: reliable:tcp://localhost:61616?keepAliveTimeout=60000
Consuming topic: TOOL.DEFAULT
Using non-durable subscription
2005-01-25 18:21:20,094 [main           ] DEBUG BeanUtils                      - Cannot find: org.apache.commons.beanutils.BeanUtils. Reason: java.lang.ClassNotFoundException: org.apache.commons.beanutils.BeanUtils
java.lang.ClassNotFoundException: org.apache.commons.beanutils.BeanUtils
        at java.net.URLClassLoader$1.run(URLClassLoader.java:199)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:187)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:274)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
        at org.codehaus.activemq.util.BeanUtils.populate(BeanUtils.java:41)
        at org.codehaus.activemq.transport.TransportChannelFactorySupport.populateProperties(TransportChannelFactorySupport.java:55)
        at org.codehaus.activemq.transport.reliable.ReliableTransportChannelFactory.create(ReliableTransportChannelFactory.java:51)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createTransportChannel(ActiveMQConnectionFactory.java:748)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:539)
        at org.codehaus.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:529)
        at org.codehaus.activemq.tool.ToolSupport.createConnection(ToolSupport.java:68)
        at org.codehaus.activemq.tool.ConsumerTool.run(ConsumerTool.java:76)
        at org.codehaus.activemq.tool.ConsumerTool.main(ConsumerTool.java:67)",W2k java version 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-01-26 06:43:03.0,,,false,,,,,,,,,,,,,,,,,48912,,,Wed Jan 26 06:43:03 UTC 2005,,,,,,,,"0|i0tsk7:",171936,,,,,,,,,,,,,,,,,,,"26/Jan/05 06:43;chirino;Commit fix in HEAD will make it into next 2.0 release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ with ActiveCluster appears to leak memory,AMQ-139,12481189,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,lazerdye,lazerdye,24/Nov/04 18:35,18/Jan/05 20:15,30/Jan/20 16:57,18/Jan/05 20:15,1.0,1.2,,,,,2.0,,,,,,,0,"I am using ActiveCluster as part of a long-running Java service inside Tomcat. In production, I have to re-start Tomcat every other days or else I run out of memory. I found through a memory profiler that ActiveMQ seems to be holding many messages in memory. After finding that, I put together a simple test using ActiveCluster which sends out as many messages as it can, and receives them in a separate thread. 

The test case can be run with ""ant run"", and the number of messages send but not received will be printed out once a second. After about 30 seconds or so, the error ""OutOfMemoryError"" is displayed, and messages are stopped being sent or received.

As a sort-of-related note, this test case uses ActiveMQ 1.0 with the multicast: URL. I wanted to try out ActiveMQ 1.2, but it does not seem to work with the multicast: URL.",Fedora Core 3 with Sun Java 1.4.2_06,lazerdye,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-26 10:52:31.0,,,false,,,,,,,,,,,,,,,,,48874,,,Tue Jan 18 20:15:35 UTC 2005,,,,,,,,"0|i0s2f3:",161868,,,,,,,,,,,,,,,,,,,"24/Nov/04 18:36;lazerdye;Attached is the test which causes the out of memory error about 30 seconds after running ""ant run"".","26/Nov/04 10:52;stewie;Have you tried the latest from CVS Head for ActiveMQ and ActiveCluster?","30/Nov/04 18:52;lazerdye;I'd like to, but the current CVS of activecluster fails during the test:

Testcase: testMembershipCluster(org.codehaus.activecluster.ClusterTest):	FAILED
Node: 4 with contents: 
junit.framework.AssertionFailedError: Node: 4 with contents: 
	at org.codehaus.activecluster.ClusterTest.testMembershipCluster(ClusterTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)","18/Jan/05 20:15;stewie;Fixed - ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException on second message delivery (using spring and jca connector),AMQ-157,12481304,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,srt,srt,16/Dec/04 01:15,20/Dec/04 13:22,30/Jan/20 16:57,20/Dec/04 13:22,1.4,2.0,,,,,2.0,,,,,,,0,"I am running an external active mq broker (default config on tcp://localhost:61616) and use the following spring config shown below.
Now i am sending messages to myTopic via

JmsTemplate jt = new JmsTemplate(connectionFactory);
jt.setPubSubDomain(true);
jt.convertAndSend(""myTopic"", text);

The first message is properly processed but any further messages result in the following NullPointerException:

java.lang.NullPointerException
        at
org.codehaus.activemq.jca.LocalTransactionEndpoint.beforeDelivery(LocalTransactionEndpoint.java:48)
        at
org.codehaus.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.beforeDelivery(MessageEndpointProxy.java:124)
        at
org.codehaus.activemq.ra.MessageEndpointProxy.beforeDelivery(MessageEndpointProxy.java:70)
        at
org.codehaus.activemq.ra.ActiveMQRASession.preDeliveryHook(ActiveMQRASession.java:174)
        at
org.codehaus.activemq.ActiveMQSession.run(ActiveMQSession.java:553)
        at
org.codehaus.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:137)

A sample project is available for download at 
http://null.reucon.net/~srt/activemq-npe.zip

spring config:

	<bean id=""jmsFactory"" class=""org.codehaus.activemq.ActiveMQConnectionFactory"">
		<property name=""brokerURL"">
			<value>tcp://localhost:61616</value>
		</property>
	</bean>

	<!-- JCA container for ActiveMQ -->
	<bean id=""activeMQContainer"" class=""org.codehaus.activemq.jca.JCAContainer"" depends-on=""jmsFactory"">
		<!-- the work manager (thread pool) for this container -->
    	<property name=""workManager"">
			<bean id=""workManager"" class=""org.codehaus.activemq.work.SpringWorkManager""/>
		</property>
		<!-- the JCA Resource Adapter -->
		<property name=""resourceAdapter"">
			<bean id=""activeMQResourceAdapter"" class=""org.codehaus.activemq.ra.ActiveMQResourceAdapter"">
				<property name=""serverUrl""><value>tcp://localhost:61616</value></property>
			</bean>
		</property>
	</bean>

	<!-- inbound message connector -->
	<bean id=""messageConnector"" factory-method=""addConnector"" factory-bean=""activeMQContainer"">
		<!-- subscription details -->
		<property name=""activationSpec"">
			<bean class=""org.codehaus.activemq.ra.ActiveMQActivationSpec"">
				<property name=""destination""><value>myTopic</value></property>
				<property name=""destinationType""><value>javax.jms.Topic</value></property>
			</bean>
		</property>
		<!-- the bean used to process the message -->
		<property name=""messageListener"">
			<ref bean=""targetBean""/>
		</property>
	</bean>

	<bean id=""targetBean"" class=""TargetBean""/>","spring 1.1.3, activemq 1.4 / 2.0",srt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-12-16 02:03:59.0,,,false,,,,,,,,,,,,,,,,,48891,,,Mon Dec 20 13:22:49 UTC 2004,,,,,,,,"0|i0tsq7:",171963,,,,,,,,,,,,,,,,,,,"16/Dec/04 02:03;mgaffney;I have attached the file Stefan provided.","17/Dec/04 18:45;jstrachan;This now fixed in CVS; we should maybe add a test case for it though...","20/Dec/04 13:22;jstrachan;Stefan, I've added your test case to CVS in the modules/container area, refactorig it slightly to work as a unit test case. SEe

SpringTemplateAndJCATest.java.

This issue is now resolved",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sending a message to a temp queue that has been destoryed due to client connection closing should throw JMSException.,AMQ-146,12481113,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,07/Dec/04 23:50,20/Dec/04 11:59,30/Jan/20 16:57,09/Dec/04 03:06,1.3,,,,,,1.4,,,,,,,0,Sending a message to a temp queue that has been destoryed due to client connection closing should throw JMSException.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-12-20 11:59:59.0,,,false,,,,,,,,,,,,,,,,,48881,,,Mon Dec 20 11:59:59 UTC 2004,,,,,,,,"0|i0tt8n:",172046,,,,,,,,,,,,,,,,,,,"07/Dec/04 23:54;chirino;Added test case: 


http://cvs.activemq.codehaus.org/viewrep/activemq/activemq/modules/core/src/test/org/codehaus/activemq/JmsTempDestinationTest.java?r=1.3#l148","09/Dec/04 03:06;chirino;Fixed.","09/Dec/04 03:11;chirino;The one thing to look out for now is that the ConnectionFactory used to create the connection needs to be configured with userAsyncSend=false.

This due to the send opperation needing to wait for the broker to report if the send operation succeeded or not.  If you are using Async sends, the client does not wait for the broker to get the message and therefore it will not get the expected exception.","14/Dec/04 10:52;chirino;Changed the default value of useAsyncSend to false so that by default you get a spec compliant implementation.","20/Dec/04 11:59;jstrachan;BTW one way of fixing this even for async sending is to distribute all the valid temporary queue names per connection on a broker to each client - and distributing when a connection closes, so that attempts to send to a non-existent connection/destintation can throw an immediate exception even while being an async send.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Selector fails when expression conatins the Long.MIN_VALUE literal.,AMQ-159,12481132,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,17/Dec/04 01:18,17/Dec/04 01:30,30/Jan/20 16:57,17/Dec/04 01:30,1.0,1.1,1.2,1.3,1.4,,1.5,2.0,,Selector,,,,0,Selector fails when expression conatins the Long.MIN_VALUE literal.,Java 1.4 Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48893,,,Fri Dec 17 01:30:29 UTC 2004,,,,,,,,"0|i0tt73:",172039,,,,,,,,,,,,,,,,,,,"17/Dec/04 01:19;chirino;We were doing a new BigDecimal(Long.MIN_VALUE) which is java 1.5 only method. Changed to using  BigDecimal.valueOf(Long.MIN_VALUE)","17/Dec/04 01:30;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Selector : ""x = TRUE"" fails to evaluate",AMQ-158,12481102,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,17/Dec/04 01:16,17/Dec/04 01:30,30/Jan/20 16:57,17/Dec/04 01:30,1.4,,,,,,1.5,2.0,,Selector,,,,0,"Selector : ""x = TRUE"" fails to evaluate to true when x == true.",Linux java 1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48892,,,Fri Dec 17 01:30:07 UTC 2004,,,,,,,,"0|i0tt5j:",172032,,,,,,,,,,,,,,,,,,,"17/Dec/04 01:30;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread safety of RequestMap in TransportChannelSupport,AMQ-151,12481131,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,daggerrz,daggerrz,09/Dec/04 15:33,09/Dec/04 15:33,30/Jan/20 16:57,09/Dec/04 15:33,1.3,,,,,,1.3,,,Transport,,,,0,The requestMap in TransportChannelSupport isn't syncrhonized which in some cases can lead to indefinite freezes when sending packets syncrhonously. This is most likely to occur while using VMTransport.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48886,,,2004-12-09 15:33:25.0,,,,,,,,"0|i17y5r:",254504,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.outOfMemory - leak or gc problem?,AMQ-125,12481257,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,bradleej,bradleej,03/Nov/04 22:55,22/Nov/04 02:00,30/Jan/20 16:57,22/Nov/04 02:00,,,,,,,1.2,,,Broker,,,,0,"I ran the benchmark test with a producer/client that defaults to BENCHMARK.FEED0. The persesitence was on as by default in the release.

After letting the producer/consumer run for over an hour the broker/server crapped out with a java.lang.outOfMemory error. Both producer and consumer continued to run but were now showing 0.0 for statistics indicating lack of connection.

It's difficult to tell what's happening by this error. I've had this problem when the gc fails to recollect memory and I've had it from memory ""leaks"" (yes, I know, technically impossible but it is descriptive.) 

If it is a gc problem then a larger initial broker JVM size may solve the problem. If a resource isn't being released that just delays the eventual.","Windows2k
J2sdk1.4.1_02
activeMQ1.1 release date 10/7/2004 full binary/src zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-22 02:00:39.0,,,false,,,,,,,,,,,,,,,,,48862,,,Mon Nov 22 02:00:39 UTC 2004,,,,,,,,"0|i17y27:",254488,,,,,,,,,,,,,,,,,,,"22/Nov/04 02:00;stewie;This now appears fixed in release 1.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1 Dispatcher Thread Created per Temporary Queue created.,AMQ-115,12481279,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,18/Oct/04 06:36,10/Nov/04 12:50,30/Jan/20 16:57,10/Nov/04 12:50,1.2,,,,,,1.2,,,Broker,,,,0,While doing some debuging It looked like we are creating 1 Dispatcher thread per temporary Queue that is created.  We may be even creating a Dispatcher per Queue period.  This could lead to an unnessary number of Dispatcher threads that sitting idle using up VM resources.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-10 12:50:53.0,,,false,,,,,,,,,,,,,,,,,48853,,,Wed Nov 10 12:50:53 UTC 2004,,,,,,,,"0|i0s14f:",161658,,,,,,,,,,,,,,,,,,,"22/Oct/04 06:35;chirino;Looks like TransientQueueBoundedMessageContainer creates a method on start() and never stops it.

I could add something to stop the thread.. but we should not be allocating a thread per temp destination.  Using a thread Pool Would be a better option.

It might be a better get the TransientQueueBoundedMessageContainer to poll message like the DurableQueueMessageContainerManager does it.  With a Dispatcher object.

Anyways.  I'm going to disable the TransientQueueBoundedMessageContainer 
for now since it's giving me headachs.  Issue AMQ-118 has also been opened up on it.","10/Nov/04 12:50;stewie;thread created and lives only for the lifetime of active subscribers on the queue, then gets put back into a pool",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
un-acked messages do not get redelivered on Session.close(),AMQ-128,12481207,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,jstrachan,jstrachan,08/Nov/04 22:18,09/Nov/04 17:51,30/Jan/20 16:57,09/Nov/04 17:51,,,,,,,1.2,,,,,,,0,"for client-ack mode it seems that messages not ack'd don 't get redelivered if we close the session.

seems OK if we close the connection though",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-09 12:42:04.0,,,false,,,,,,,,,,,,,,,,,48865,,,Tue Nov 09 17:51:44 UTC 2004,,,,,,,,"0|i17y47:",254497,,,,,,,,,,,,,,,,,,,"09/Nov/04 12:42;stewie;All message types or non-durable topics/queues ?","09/Nov/04 17:51;stewie;sbe!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue messages dropped in clusters,AMQ-100,12481152,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,aarrgard,aarrgard,03/Oct/04 21:55,09/Nov/04 13:05,30/Jan/20 16:57,09/Nov/04 13:05,1.1,,,,,,1.2,,,,,,,0,"Queue messages are delivered to subscribers in a round robin fashion(implemented in QueueMessageContainerManager.doPoll method). If we have two consumers connected to two separate brokers and posting a queue message to this configuration there is a possibility that the first broker sends the message over to the other one and that the receiving broker wants to send it back again. This will cause the message to be dropped since it has already been at both brokers.

Shouldn´t subscriptions that won´t cause the message to jump between servers have higher priority?",1.1-CVS-SNAPSHOT on 03 Oct 2004 running on a Windows XP/SUN JVM 1.4_05 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-10-04 12:13:14.0,,,false,,,,,,,,,,,,,,,,,43745,,,Thu Oct 07 08:19:37 UTC 2004,,,,,,,,"0|i17y1j:",254485,,,,,,,,,,,,,,,,,,,"04/Oct/04 12:13;jstrachan;fancy taking a look at this one?","06/Oct/04 18:53;stewie;This works for transient queues. With persistent queues, there is an issue where messages are consumed correctly, but don't appear to be deleted from the store correctly (they get resent on restarting the broker.","06/Oct/04 22:37;aarrgard;Just grabbbed the latest sourced from the head it seems to work for me now as well. 

The test that I was using always failed when sending the third message in a round robin distribution of queue messages to a cluster of two servers using the CVS head on the filed date.

When I added the following code to randomly select a subscriber in the QueueMessageContainerManager.doPoll method the messages were dropped in random... 

         int count = 0;
         ActiveMQMessage msg = null;
         if (subList != null && subList.size() > 0) {
+        	for(int i = (int) (Math.random() * 100); i >= 0; i--) {
+        		subList.rotate();
+        	}
             do {
                 boolean dispatched = false;
                 msg = container.poll();

this alteration works for me now as well...

I guess this issue actually boiled down to some other problem that has been fixed.","07/Oct/04 08:19;aarrgard;The problem occured more frequently(before the latest update) with less debug messages. When using DEBUG instead of INFO logging it was quite hard to reproduce the issue. When they occurred in debug mode the messages were dropped with the message ""Broker already visited..."". Perhaps this was/is? some kind of race condition?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransientQueueBoundedMessageContainer drops messages that have no intrested consumers.,AMQ-118,12481221,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,22/Oct/04 06:23,22/Oct/04 21:50,30/Jan/20 16:57,22/Oct/04 21:50,1.2,,,,,,1.2,,,Broker,,,,0,"Doing some testing last week, it seemed like the TransientQueueBoundedMessageContainer was dropping messages that did not have an intrested consumer. 

If there was an active consumer, the messages would get delivered, to the consumer.  If the messages were sent to the destination before the consumer was created, the messages would not get delivered to the consumer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-10-22 21:50:39.0,,,false,,,,,,,,,,,,,,,,,48856,,,Fri Oct 22 21:50:39 UTC 2004,,,,,,,,"0|i17y2v:",254491,,,,,,,,,,,,,,,,,,,"22/Oct/04 21:50;stewie;That's the desired behaviour!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Our Queue and Topic session are a little too 'happy' since they implement both Topic and Queue,AMQ-114,12481200,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,13/Oct/04 21:31,14/Oct/04 03:19,30/Jan/20 16:57,14/Oct/04 03:19,1.0,1.1,1.2,,,,1.2,,,,,,,0,"We don't do this that is in the JMS API for a QueueSession:

A QueueSession cannot be used to create objects specific to the publish/subscribe domain. The following methods inherit from Session, but must throw an IllegalStateException if they are used from QueueSession:

    * createDurableSubscriber
    * createTemporaryTopic
    * createTopic
    * unsubscribe",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48852,,,Thu Oct 14 03:19:33 UTC 2004,,,,,,,,"0|i0tssn:",171974,,,,,,,,,,,,,,,,,,,"14/Oct/04 03:19;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ObjectMessage. setObject(value) is treating the value is if passed by ref,AMQ-111,12481237,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,chirino,chirino,11/Oct/04 21:08,14/Oct/04 03:18,30/Jan/20 16:57,14/Oct/04 03:18,1.2,,,,,,1.2,,,JMS client,,,,0,"ObjectMessage. setObject(value) is treating the value is if passed by ref.  Modifiying the value after the setObject() but before the send(), will cause the modified value to be sent.  This is not spec compliant.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48849,,,Thu Oct 14 03:18:59 UTC 2004,,,,,,,,"0|i0ttdz:",172070,,,,,,,,,,,,,,,,,,,"14/Oct/04 03:18;chirino;Fixed.  The object is now serialized as soon as it's set.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpTransportChannels will always time out on receive after 5 seconds,AMQ-96,12481259,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,daggerrz,daggerrz,29/Sep/04 14:24,30/Sep/04 15:24,30/Jan/20 16:57,30/Sep/04 15:24,1.1,,,,,,1.1,,,Transport,,,,0,"When sockets are initialised in TcpTransportChannel their timeout is set to SO_TIMEOUT (5000 millis). In the read loop in run(), it seems like this timeout is supposed to be set to infinite once the connection is established. This is reasonable since clients can subscribe to an empty destination for days without any traffic and there's no ping in the protocol. The timeout will be changed if the changeTimeout flag is set but there is no code setting this flag anywhere. 

This means that all connections idle more than 5 seconds will time out. This in combination with AMQ-95 will render all connections (even HA) unusable after as they will time out and never be reused. :)",,daggerrz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-09-29 14:52:39.0,,,false,,,,,,,,,,,,,,,,,48835,,,Thu Sep 30 11:05:21 UTC 2004,,,,,,,,"0|i0s2fz:",161872,,,,,,,,,,,,,,,,,,,"29/Sep/04 14:52;jstrachan;Fancy taking a stab at this? Maybe we need a ping protocol?","30/Sep/04 10:06;daggerrz;Sure, I'll take a look. :)","30/Sep/04 10:43;stewie;The problem isn't the timeout per say - it's the fact the exception is dispatched to the BrokerClient which then assumes it's a genuine transport error - and closes ","30/Sep/04 11:05;daggerrz;I realise that comment probably was for Stewie, but I have some thoughts on this matter too. :)

1. Is a ping protocol necessary?
I think so. If something in the receive thread breaks and leaves the socket open or if something goes wrong on one end of a NATted / port forwarded connection it won't be detected - at least not while there's no other activity. Pinging will proactively ensure that the application level is working.

2. Which component's concern is pinging?
The concept of ""pinging"" is probably not a common concern for all transport channels (e.g mutlicast and jgroups?) and even if it seems logical to let ReliableTransportChannel take care of managing the keep-alive, I think it will be much easier to implement this on the TcpTransportChannel level. It will just be a matter of sending a ping packet the first time the socket read times out and fail if the second read also times out. 

Receiving a ping response packet over a WireFormat will require changes in the current WireFormat implementations and the Packet class as a new Packet type will be required. Perhaps adding a simple WIRE_SPECIFIC_PACKET type with unparsed binary content could future proof other link specific needs?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
exception listener does not appear to be working properly,AMQ-94,12481293,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,28/Sep/04 15:20,28/Sep/04 15:55,30/Jan/20 16:57,28/Sep/04 15:55,,,,,,,1.1,,,JMS client,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48833,,,2004-09-28 15:20:39.0,,,,,,,,"0|i0tscn:",171902,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
creating a producer inside an onMessage() causes deadlocks,AMQ-38,12481329,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,jstrachan,jstrachan,01/Jul/04 03:31,06/Sep/04 23:24,30/Jan/20 16:57,06/Sep/04 23:24,,,,,,,1.1,,,,,,,0,"This one is from Gianny...

I have encountered a major problem during the implementation:
* I have one Connection C;
* I create a Session S1 and one MessageConsumer MC1, which registers an asynchronous MessageListener ML1;
* ML1.onMessage is called;
* in the context of this invocation, I create a new Session S1 from C; and
* then I create a MessageProducer from S1.

This creation causes a deadlock as the various TransportChannel implementations, at least VmTransportChannel and TcpTransportChannel, dispatch the ML1.onMessage method in the same Thread that the one used to read incoming Packet. In other words, in the context of an onMessage method, one can not create some objects (e.g. MessageProducer, MessageConsumer), which need to be acknowledged (a Packet with ReceiptRequired). I do not understand why when creating a Session one does not need such an acknowledgement, though there is to be sure a very good reason. I had a look to the JMS specifications, and there are no restrictions on the above scenario.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-09-03 08:36:48.0,,,false,,,,,,,,,,,,,,,,,48783,,,Fri Sep 03 20:28:52 UTC 2004,,,,,,,,"0|i0tsdz:",171908,,,,,,,,,,,,,,,,,,,"03/Sep/04 08:36;stewie;The problem is that there is not a separate thread for dispatching for each session - but all message dispatching is driven from a thread associated with the TransportChannel","03/Sep/04 20:28;jstrachan;Incidentally I think there's a problem creating a Session inside the onMessage() thread as well...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
disallow receive() from use in a session which has been used to create a MessageListener,AMQ-55,12481291,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,jstrachan,jstrachan,09/Aug/04 20:35,06/Sep/04 23:23,30/Jan/20 16:57,06/Sep/04 23:23,,,,,,,1.1,,,,,,,0,To be properly compliant with the spec we should avoid this user error & give a meaningful exception,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48798,,,2004-08-09 20:35:18.0,,,,,,,,"0|i0tscv:",171903,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
createObjectMessage() should clone the object to avoid mutations,AMQ-74,12481137,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,stewie,jstrachan,jstrachan,31/Aug/04 21:19,06/Sep/04 23:22,30/Jan/20 16:57,06/Sep/04 23:22,,,,,,,1.1,,,,,,,0,We should clone() the object on createObjectMessage() to avoid any possible issues due to the mutation of the object between the sending of the message and the creation of the ObjectMessage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-09-06 21:29:39.0,,,false,,,,,,,,,,,,,,,,,48815,,,Mon Sep 06 21:29:39 UTC 2004,,,,,,,,"0|i0tspj:",171960,,,,,,,,,,,,,,,,,,,"06/Sep/04 21:29;chirino;I don't think that clone() works on all Objects.  But you can serialize to byte[] and back.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HOWL log suffers log overflow if you run tests twice without cleaning,AMQ-52,12481339,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,chirino,djencks,djencks,02/Aug/04 22:22,06/Sep/04 21:41,30/Jan/20 16:57,06/Sep/04 21:41,,,,,,,1.1,,,,,,,0,HOWL log gets a log file overflow exception if you run tests twice without cleaning.  Most likely you are not setting the mark when a message delivery is committed to indicate that the message can be forgotten.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-08-20 11:19:01.0,,,false,,,,,,,,,,,,,,,,,48795,,,Mon Sep 06 21:41:43 UTC 2004,,,,,,,,"0|i0s0wv:",161624,,,,,,,,,,,,,,,,,,,"20/Aug/04 11:19;jstrachan;Thought I'd give this one to you since you're looking at Howl & your logger. I think this is just an issue that the log runs out of space","06/Sep/04 21:40;chirino;Created a new Journal abstraction API that is implemented by the HOWL logger and a custom ActiveMQ logger.  

Created a new JournalPersistenceAdapter that uses the new Journal API.  This new JournalPersistenceAdapter coupled with the custome ActiveMQ logger now does not suffer from overflows.","06/Sep/04 21:41;chirino;Forgot to select which version this fix will be in.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST API and queues seems to leave messages in limbo,AMQ-70,12481166,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,26/Aug/04 15:44,26/Aug/04 16:06,30/Jan/20 16:57,26/Aug/04 16:06,,,,,,,1.1,,,,,,,0,"We should use a single consumer per queue to make it easier to load balance message consumption on queues across many HTTP requests.

The current code base of 1 consumer per HTTP sessions only really works well for topics",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48812,,,Thu Aug 26 16:06:55 UTC 2004,,,,,,,,"0|i0ttbr:",172060,,,,,,,,,,,,,,,,,,,"26/Aug/04 16:06;jstrachan;I think this is now fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZIP source for 1.0 does not build,AMQ-67,12481326,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jstrachan,nicklothian,nicklothian,23/Aug/04 03:55,24/Aug/04 14:04,30/Jan/20 16:57,24/Aug/04 14:04,1.0,,,,,,1.1,,,,,,,0,"The source download http://dist.codehaus.org/activemq/distributions/activemq-1.0-src.zip does not build.

java:compile:
    [echo] Compiling to C:\dev\projects\org.codehaus\activemq-1.0-src\activemq-1
.0/target/classes
    [javac] Compiling 368 source files to C:\dev\projects\org.codehaus\activemq-
1.0-src\activemq-1.0\target\classes
C:\dev\projects\org.codehaus\activemq-1.0-src\activemq-1.0\src\java\org\codehaus
\activemq\selector\SelectorParser.java:9: package org.codehaus.activemq.router.f
ilter does not exist
import org.codehaus.activemq.router.filter.*;
^
C:\dev\projects\org.codehaus\activemq-1.0-src\activemq-1.0\src\java\org\codehaus
\activemq\selector\SelectorParser.java:22: cannot resolve symbol
symbol  : class Filter
location: class org.codehaus.activemq.selector.SelectorParser
    public Filter parse(String sql) throws InvalidSelectorException {


http://dist.codehaus.org/activemq/distributions/activemq-1.0-SNAPSHOT-src.tar.gz   
builds correctly however.","Win 2000, JDK 1.4.1, Maven 1.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-08-24 14:04:17.0,,,false,,,,,,,,,,,,,,,,,48809,,,Tue Aug 24 14:04:17 UTC 2004,,,,,,,,"0|i0tth3:",172084,,,,,,,,,,,,,,,,,,,"24/Aug/04 14:04;jstrachan;This was a package refactoring which didn't make it into the .jj file used by JavaCC to build the SQL parser.

Its now fixed in CVS HEAD and will be resolved for sure in 1.1 which is a few weeks away.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
duplicate client disconnect message,AMQ-58,12481281,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,12/Aug/04 16:34,16/Aug/04 13:55,30/Jan/20 16:57,16/Aug/04 13:55,,,,,,,1.0,,,,,,,0,"Thanks to Charles Anthony for spotting this one.

It seems on the server side that as a connection closes, we get a 'closed client' log message. Then when the JVM finishes, we get another close message.

Sounds like we're keeping around the connection?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48801,,,2004-08-12 16:34:17.0,,,,,,,,"0|i0ttfb:",172076,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Receiving multiple versions of messages when using multicast & jgroups transports,AMQ-53,12481360,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,03/Aug/04 11:27,04/Aug/04 11:18,30/Jan/20 16:57,04/Aug/04 11:18,,,,,,,1.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48796,,,2004-08-03 11:27:02.0,,,,,,,,"0|i0ttgn:",172082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
consuming above prefetch limit seems to be a bug,AMQ-42,12481210,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jstrachan,jstrachan,06/Jul/04 15:03,03/Aug/04 10:43,30/Jan/20 16:57,03/Aug/04 10:43,,,,,,,1.0,,,,,,,0,"The test case in src/test/org/codehaus/activemq/usecases/ConsumeExactPrefetchSizeTest

If you uncomment the TODO line which sets the messageCount to be > 2 times the prefetch limit then the test case fails. Seems like a bug in the prefetch logic.

We should run this test case with count < prefetch, count == prefetch and count > prefetch to ensure the logic works properly in each case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48787,,,2004-07-06 15:03:46.0,,,,,,,,"0|i0tssv:",171975,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build Fails: Geronimo Transport,AMQ-48,12481249,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chirino,chirino,02/Aug/04 04:51,03/Aug/04 10:41,30/Jan/20 16:57,03/Aug/04 10:41,1.0,,,,,,1.0,,,Transport,,,,0,"Seems like the jar files that are being downloaded by maven cause our stuff to fail to compile.

java:compile:
    [echo] Compiling to C:\sandbox\activemq/target/classes
    [javac] Compiling 345 source files to C:\sandbox\activemq\target\classes
C:\sandbox\activemq\src\java\org\codehaus\activemq\transport\gnet\GTransportChannel.java:162: cannot resolve symbol
symbol  : method flush ()
location: interface org.apache.geronimo.network.protocol.Protocol
                                getDownProtocol().flush();",Clean Maven build (blow away your .maven directory).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48792,,,Mon Aug 02 05:01:18 UTC 2004,,,,,,,,"0|i0tsfj:",171915,,,,,,,,,,,,,,,,,,,"02/Aug/04 05:01;chirino;Building the geronimo out of HEAD allows the activemq to build without error.  I guess we just need to get geronimo to push out a newer version of thier jars.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Trying to create FS JNDI context, but fails with NotContextException",AMQ-46,12481334,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,rossmason,rossmason,29/Jul/04 03:52,03/Aug/04 10:40,30/Jan/20 16:57,03/Aug/04 10:40,1.0,,,,,,1.0,,,JMS client,,,,0,"I created the following FS JNDI context, but noticed that the FactoryName is an interface, which I thought might be causing the problem -

#This file is used by the JNDI FSContext.
#Thu Jul 29 10:42:05 EST 2004
JmsQueueConnectionFactory/RefAddr/3/Content=defaultUser
JmsQueueConnectionFactory/RefAddr/3/Type=userName
JmsQueueConnectionFactory/FactoryName=org.codehaus.activemq.jndi.JNDIStorableInterface
JmsQueueConnectionFactory/RefAddr/0/Type=brokerURL
JmsQueueConnectionFactory/RefAddr/0/Encoding=String
JmsQueueConnectionFactory/RefAddr/3/Encoding=String
JmsQueueConnectionFactory/RefAddr/1/Encoding=String
JmsQueueConnectionFactory/RefAddr/1/Type=password
JmsQueueConnectionFactory/RefAddr/0/Content=tcp\://localhost\:61616
JmsQueueConnectionFactory/RefAddr/2/Content=false
JmsQueueConnectionFactory/RefAddr/2/Type=useEmbeddedBroker
JmsQueueConnectionFactory/ClassName=org.codehaus.activemq.ActiveMQConnectionFactory
JmsQueueConnectionFactory/RefAddr/2/Encoding=String
JmsQueueConnectionFactory/RefAddr/1/Content=defaultPassword

How are other people getting their connections from Jndi?",,rossmason,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-08-03 10:40:24.0,,,false,,,,,,,,,,,,,,,,,48790,,,Tue Aug 03 10:40:24 UTC 2004,,,,,,,,"0|i0tsqf:",171964,,,,,,,,,,,,,,,,,,,"03/Aug/04 10:40;jstrachan;I think Stewie fixed this now. Lemme know if its not fixed & I can reopen it",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"InactivityMonitor: Transport connection disconnected ""Channel was inactive for too long.""",AMQ-1146,12482091,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,chirino,mariappan.r@gmail.com,mariappan.r@gmail.com,01/Feb/07 20:26,22/Aug/16 18:18,30/Jan/20 16:57,19/Oct/07 17:31,4.1.0,,,,,,5.0.0,,,Broker,,,,2,"Sometimes (when the transport is idle for long) the transport gets disconnected with the message ""Channel was inactive for too long."" 

        Apparently this is same as reported in http://www.nabble.com/Channel-was-inactive-for-too-long-t1463069.html#a3971744 and http://www.nabble.com/Durable-consumer-reconnect-problem-tf1716817.html#a6147014 

Version: 4.1 

Background: 

        The class org.apache.activemq.transport.InactivityMonitor runs monitoring threads to check the read and write of the transport(TCP for example). If it hasn't sent the message during the given period, it sends a KeepAliveInfo to ensure the connectivity. If it doesn't receive the message for a given duration, then it disconnects the transport. 

        By default, the maximumInactivityDuration is 30000 milliseconds. This is the time interval between the check for read. That is if an end of the transport doesn't receive any message for this period, then it will close the connection. For the read check, the time interval is half of maximumInactivityDuration i.e. 15000 millisecond. That is if a message was not sent during this period, it will send a KeepAliveInfo to ensure the connectivity. 


Problem and the recommended fix: 

        The InactivityMonitor class uses the flags inReceive and commandReceived variables in methods readCheck and onCommand. Typically these two methods are called from different threads. Also, the flags inSend and commandSent are used in methods oneway and writeCheck. Again these two methods are called from different threads. But, the synchronization was missing for these. This seems to be a potential cause for the problem. So, synchronization has been incorporated for these flag usages. 

        The same class InactivityMonitor is used at both client and server side. In general, the write check (which sends KeepAliveInfo) happens twice during the time when the read check happens once. Probably the client and server machines have performance differences and just to be safer, now the write check is made to happen thrice during the time when the read check happens once. 


        The original and the changed source files are attached here. 

http://www.nabble.com/file/5958/InactivityMonitor_changed.java

http://www.nabble.com/file/5957/InactivityMonitor_Original.java
",Windows Server 2003 running broker and Windows XP running client. Java 1.5.0_08 ,ahirepankaj,antoniogmc,cshannon,jevans12,mariappan.r@gmail.com,xalibur,zhangliwen,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,"01/Feb/07 20:26;mariappan.r@gmail.com;ASF.LICENSE.NOT.GRANTED--InactivityMonitor_Original.java;https://issues.apache.org/jira/secure/attachment/12460775/ASF.LICENSE.NOT.GRANTED--InactivityMonitor_Original.java","01/Feb/07 20:26;mariappan.r@gmail.com;ASF.LICENSE.NOT.GRANTED--InactivityMonitor_changed.java;https://issues.apache.org/jira/secure/attachment/12460565/ASF.LICENSE.NOT.GRANTED--InactivityMonitor_changed.java",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2007-06-12 13:42:55.2,,,false,,,,,,,,,,,,,,,,,84481,,,Mon Aug 22 18:18:11 UTC 2016,,,,Patch Available,,,,"0|i0ku3j:",119694,,,,,,,,,,,,,,,,,,,"12/Jun/07 13:42;jstrachan;Patch applied with thanks!","18/Oct/07 08:12;mteira;I'm having some issues where slow performance in the backend database seems to lead to InactivityIOExceptions. My opinion is that the fix for this issue is causing those problems: 

Having in mind that the design of the readCheck/writeCheck monitors is that we always should have a command among two readCheck (produced by normal activity or by the response of a KeepAlive injected by the writeCheck between two readChecks if needed), synchronizing on the readChecker variable seems a bad idea:

If the chain of transportListener.onCommand() is lasting more than the negociated MaxInactivityDuration, we will end with two readCheck executing one after the other, without a writeCheck between them. The first readCheck success, sets the commandReceived to false, and the second one is always going to fail, as no new command has been processed, nor a writeCheck has been executed since the last readCheck.

I don't see the need of synchronizing on the readChecker/writeChecker variables. These are AtomicBooleans and should be safe to access them from different threads (this seemed to be the motivation of the fix). Also, synchronizing the readCheck/writeCheck is actually delaying the execution of the check, and we cannot guarantee anymore the alternating of writeCheck readCheck execution, that is needed for the solution to work.

Also, synchronizing that is avoiding this code in readCheck() :
{code}     
synchronized (readChecker) {
        if (inReceive.get()) {
                LOG.trace(""A receive is in progress"");
                return;
        }
{code}

to be reached: because inReceive is only set during onCommand, and that is synchronized on readChecker also. Furthermore, the right way to do this is returning here when a onCommand is performed at the same time, and not waiting, to not break the sequence of readCheck/writeCheck invocations.


In few words, I think that this change breaks the InactivityMonitor, and my opinion is that it should be rolled back. Also in the 4.1 subtask that I opened some time ago. :-(

Any comments?

","18/Oct/07 10:44;mteira;After discussing the problem with Rob Davies in the IRC channel, I'm reopening this issue to rollback the synchronization for the readCheck/writeCheck.

","19/Oct/07 17:31;chirino;tightened up the synchronizations in trunk.   Now we only synchronize to avoid 2 concurrent sends going the next transport or to avoid 2 concurrent commands / exceptions from being delivered to the transport listener.","22/Aug/16 05:44;ahirepankaj;Hi All,

I am facing the same issue with Activemq 5.6.0. I tried to disable the Inactivity monitor by setting 0 , in activemq.mxl under conf.
Still facing same error.

Thanks.","22/Aug/16 18:18;cshannon;This jira is 9 years old and even version 5.6.0 is several years old by now.  You should try the latest version (up to 5.14.0 now) and then start a new Jira issue if you think there is a bug or try and get help on the users mailing list.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"InstanceAlreadyExistsException on .war redeploy (if useJmx=""true)",AMQ-585,12483261,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,massdosage,massdosage,20/Feb/06 16:27,26/Apr/16 14:43,30/Jan/20 16:57,07/Mar/06 11:30,4.0 M4,,,,,,4.0 RC2,,,Broker,,,,0,"I am using ActiveMQ as part of a web-app deployed to Tomcat. Active MQ is configured via spring and follows the spring examples that you ship with the source in M4. If I configure the broker to use JMX (  <broker useJmx=""true""> ) and deploy the app to tomcat, everything goes fine. However, when I deploy a newer version of the app (hot deploy) I get the following error when the JMS consumer is created from spring:

006-02-20 15:16:17,378 ERROR org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:205) Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'smsResponseConsumer' defined in ServletContext resource [/WEB-INF/applicationContext-messaging.xml]: Initialization of bean failed; nested exception is javax.jms.JMSException: org.apache.activemq:Type=Topic,Destination=ActiveMQ.Advisory.Connection,BrokerName=localhost
javax.jms.JMSException: org.apache.activemq:Type=Topic,Destination=ActiveMQ.Advisory.Connection,BrokerName=localhost

And the root cause of this exception is:

Caused by: javax.management.InstanceAlreadyExistsException: org.apache.activemq:Type=Topic,Destination=ActiveMQ.Advisory.Connection,BrokerName=localhost
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:274)
	at org.apache.activemq.openwire.DataStreamMarshaller.createThrowable(DataStreamMarshaller.java:199)
	at org.apache.activemq.openwire.DataStreamMarshaller.unmarsalThrowable(DataStreamMarshaller.java:159)
	at org.apache.activemq.openwire.v1.ExceptionResponseMarshaller.unmarshal(ExceptionResponseMarshaller.java:67)
	at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:214)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
	... 1 more

So it appears as if the JMX entry isn't ""unbound"" when the applicaiton restarts on a redeploy.

If I set JMX to false then I can redeploy the application without any errors. 
","SuSe Linux 9.1, Sun JDK 1.4.2_08, Tomcat 5.0.28",akornev,massdosage,stuchl4n3k,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-06 21:23:13.0,,,false,,,,,,,,,,,,,,,,,49225,,,Tue Apr 26 14:43:42 UTC 2016,,,,,,,,"0|i17z2v:",254653,,,,,,,,,,,,,,,,,,,"06/Mar/06 21:23;jstrachan;BTW could you describe exactly how you are deploying ActiveMQ in spring please - as there are a few optoins. Are you using the BrokerFactoryBean?","06/Mar/06 22:52;massdosage;I am indeed using the BrokerFactoryBean. My spring config looks something like this:

	<!-- JMS CONFIGURATION -->	
	<bean id=""brokerContainer"" class=""org.apache.activemq.xbean.BrokerFactoryBean"" depends-on=""activeMQConfigurer"">
		<property name=""config"" value=""classpath:activemq.xml""/>
	</bean>
	
	<bean id=""jmsFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
		<property name=""brokerURL"" value=""tcp://localhost:61616""/>
	</bean>
	  
	<!-- Spring JMS Template -->
	<bean id=""jmsTemplate"" class=""org.springframework.jms.core.JmsTemplate"">
		<property name=""connectionFactory"">
			<!-- lets wrap in a pool to avoid creating a connection per send -->
			<bean class=""org.springframework.jms.connection.SingleConnectionFactory"">
				<property name=""targetConnectionFactory"" ref=""jmsFactory""/>
			</bean>
		</property>
		<property name=""pubSubDomain"" value=""false""/>
	</bean>

The broker is then configured in activemq.xml like so:

  <broker useJmx=""false"">

	<persistenceAdapter>
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""#activeMQConfigurer.dataDirectory"" dataSource=""#activeMQConfigurer.dataSource""/>
    </persistenceAdapter>
  
    <transportConnectors>
       <transportConnector uri=""tcp://localhost:61616""/>
    </transportConnectors>
    
    <networkConnectors>
      <networkConnector uri=""static://(tcp://localhost:61616)"" />
    </networkConnectors>
    
  </broker>

Let me know if there is any other information you need...","07/Mar/06 11:30;jstrachan;I've just added the test case ReconnectWithJMXEnabledTest to ensure that all of our MBeans are properly unregistered if you call BrokerService.stop() (which should happen by default if you use the BrokerFactoryBean so AFAIK this issue is now resolved.

If you still have an issue, let us know more details on how you are using tomcat, spring and activemq and we can always reopen this issue
","08/Mar/06 10:03;jstrachan;Incidentally if this still is an issye - is your Spring application context being closed? Do you see any logging when you undeploy the WAR? Which mechanism are you using in web.xml to load spring","25/Mar/10 15:56;akornev;Hi!
I use ActiveMq 5.2.0.
In web.xml spring context get by org.springframework.web.context.ContextLoaderListener
Persistent = false

And I have exception:
javax.jms.JMSException: Could not create Transport. Reason: javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=localhost,Type=Broker
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35) [org.apache.activemq-5.2.0.jar:5.2.0]
        at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:239) [org.apache.activemq-5.2.0.jar:5.2.0]
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:252) [org.apache.activemq-5.2.0.jar:5.2.0]
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:224) [org.apache.activemq-5.2.0.jar:5.2.0]
        at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:172) [org.apache.activemq-5.2.0.jar:5.2.0]

Could you please help me with my problem.

Thx!
","26/Apr/16 14:43;stuchl4n3k;Hello there.

Sorry to bring this up again, but I am probably experiencing the same issue here 6 years later.

System setup:
 - Linux Mint 17.3 x64
 - Tomcat 7 with activemq-all.jar (v5.10.0) in tomcat7/lib
{code:title=Tomcat context.xml}
<Resource name=""jms/myConnectionFactory"" auth=""Container""
              type=""org.apache.activemq.ActiveMQConnectionFactory""
              description=""JMS Connection Factory""
              factory=""org.apache.activemq.jndi.JNDIReferenceFactory""
              brokerURL=""vm://localhost""
              brokerName=""LocalActiveMQBroker""
              userName=""activemq"" password=""activemq""
              useEmbeddedBroker=""false"" />
{code}

Using JMS with Spring 4.2.5 (Spring Integration JMS & Java DSL config). When invoking JMS outbound adapter I get the above-mentioned {{InstanceAlreadyExistsException}}.
If I add {{useJmx=""false""}}, the exception disappears.

To answer the questions for [~jstrachan]:
 - Spring context is closed. I tried clean deploy and tomcat restart as well. 
 - I don't see any logging related to AMQ other than a clash of bindings (not related I suppose):
{code}
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/usr/share/tomcat7/lib/activemq-all.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/var/lib/tomcat7/webapps/ROOT/WEB-INF/lib/logback-classic-1.0.13.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
{code}
 - I load multiple xml classpath files including spring-context.xml in my web.xml. I also import some JavaConfig beans and use aop proxy. 

Any ideas?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activeio test package inclusion and logging properties,AMQ-1132,12483319,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,dejanb,dejanb,17/Jan/07 11:02,05/Sep/12 13:15,30/Jan/20 16:57,14/Oct/11 13:42,incubation,,,,,,5.6.0,,,,,,,6,"When you include activemq-core as a dependency on an empty project, even simplest examples fails with

java.io.FileNotFoundException: /target/test.log (No such file or directory)

exception.

First of all, the core package includes dependency on activeio-core test jar 

    <dependency>
      <groupId>${pom.groupId}</groupId>
      <artifactId>activeio-core</artifactId>
      <optional>false</optional>
      <type>test-jar</type>
    </dependency>

for which I'm not sure is needed.
Second, in this test activeio package logging.properties is configured so that root logger writes into ${basedir}/target/test.log, which causes application to fail. It would be better to set it to write to stdout by default.
",,computerfresher@gmail.com,jasonrivers,pieteriserbyt,tuomas_kiviaho,vadimos,wguttmn,,,,,,,,,,,,,,,,,,,,AMQ-2211,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-04-07 17:22:27.34,,,false,,,,,,,,,,,,,,,,,84248,,,Wed Sep 05 13:15:32 UTC 2012,,,,,,,,"0|i0akw7:",59658,,,,,,,,,,,,,,,,,,,"07/Apr/08 17:22;gmazza;This is an annoying, ugly bug.  Even the Camel samples[1] are returning this error trace before continuing:

log4j:ERROR setFile(null,true) call failed.
java.io.FileNotFoundException: /target/test.log (No such file or directory)
        at java.io.FileOutputStream.openAppend(Native Method)
        at java.io.FileOutputStream.<init>(FileOutputStream.java:177)
        at java.io.FileOutputStream.<init>(FileOutputStream.java:102)
        at org.apache.log4j.FileAppender.setFile(FileAppender.java:289)
        at org.apache.log4j.FileAppender.activateOptions(FileAppender.java:163)
        at org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:256)
        at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:132)
        at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:96)
        at org.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:654)
        at org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:612)
        at org.apache.log4j.PropertyConfigurator.configureRootCategory(PropertyConfigurator.java:509)
        at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:415)
        at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:441)
        at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:468)
        at org.apache.log4j.LogManager.<clinit>(LogManager.java:122)
        at org.apache.log4j.Logger.getLogger(Logger.java:104)
        at org.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:229)
        at org.apache.commons.logging.impl.Log4JLogger.<init>(Log4JLogger.java:65)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
        at org.apache.commons.logging.impl.LogFactoryImpl.newInstance(LogFactoryImpl.java:529)
        at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:235)
        at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:209)
        at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:351)
        at org.apache.camel.impl.DefaultCamelContext.<clinit>(DefaultCamelContext.java:64)
        at org.apache.camel.example.jmstofile.CamelJmsToFileExample.main(CamelJmsToFileExample.java:44)

If it would mean turning off this error, perhaps best to go to stdout by default as the OP says or just trapping this message with a more user-friendly exception.

[1] http://svn.apache.org/viewvc/activemq/camel/trunk/examples/camel-example-jms-file/ (run ""mvn clean install"" followed by mvn exec:java.)","26/May/08 14:20;jamie;if you're using maven, this is a workaround:

   <dependency>
     <groupId>org.apache.activemq</groupId>
     <artifactId>activemq-core</artifactId>
     <version>5.1.0</version>
     <exclusions>
       <exclusion>
         <groupId>org.apache.activemq</groupId>
         <artifactId>activeio-core</artifactId>
       </exclusion>
     </exclusions>
   </dependency>
   <dependency>
     <groupId>org.apache.activemq</groupId>
     <artifactId>activeio-core</artifactId>
     <version>3.1.0</version>
   </dependency>","18/Aug/08 15:11;pieteriserbyt;In my case, upgrading to maven 2.0.9 fixed my issues. The test jar is still included, but does not trigger the log4j problem somehow (don't ask me why, I'm totally confused).","10/Dec/09 19:36;wguttmn;Actually, running into this problem again using Maven 2.1.0, and I don't think it's actually related to Maven at all.

In our case, the second (test) dependency causes some ugly behaviour with log4j initialization in our environment, as it contains a {{log4j.properties}} file. When ''introduced'' into a web container in our case, you start relying on the sequence of how JARs are loaded. In our case, this {{log4j.properties}} unfortunately initialized log4j in such a way that our project logging settings never were applied, as the ones from activeio-core had been picked up before. And that made it hard for us - during a functional testing period - to diagnose problems we had as we lost parts of our logging messages.

Can anybody pretty please look into this and have it fixed for 5.4.0 ?","13/Oct/11 23:52;tabish;The only reason we need to have the activeio test.jar in for the tests is for the JournalPerfTool and JournalPerfRWTool classes which aren't actually unit tests, should we move these someplace else so we can remove the test.jar dependency?","14/Oct/11 08:07;dejanb;Yeah, I think we should do that.","14/Oct/11 13:42;tabish;Fix applied in trunk removed the dependency on the test.jar from activeio","05/Sep/12 13:15;computerfresher@gmail.com;Hi Friends


This workaround as suggested by Jamie(please see below) is not working, please suggest some other way out. I am stuck :(

<dependency>
<groupId>org.apache.activemq</groupId>
<artifactId>activemq-core</artifactId>
<version>5.1.0</version>
<exclusions>
<exclusion>
<groupId>org.apache.activemq</groupId>
<artifactId>activeio-core</artifactId>
</exclusion>
</exclusions>
</dependency>
<dependency>
<groupId>org.apache.activemq</groupId>
<artifactId>activeio-core</artifactId>
<version>3.1.0</version>
</dependency>



Thanks
Saurabh",,,,,,,,,,,,,,,,,,,,,,,,,,,
Test Failure in activeio.ExceptionListenerTest,AMQ-184,12481072,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,chirino,topping,topping,31/Jan/05 19:42,28/Apr/12 05:35,30/Jan/20 16:57,06/Sep/05 13:06,2.0,,,,,,3.2,,,Transport,,,,0,"Failure in test when building:

Testsuite: org.codehaus.activemq.transport.activeio.ExceptionListenerTest
Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 4.679 sec

------------- Standard Output ---------------
Created connection: org.codehaus.activemq.ActiveMQConnection@781f6226
Failed to close connection: javax.jms.JMSException: asyncSend failed: java.net.SocketException: Socket closed
------------- ---------------- ---------------
------------- Standard Error -----------------
javax.jms.JMSException: asyncSend failed: java.net.SocketException: Socket closed
        at org.codehaus.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
        at org.codehaus.activemq.transport.activeio.ActiveIOTransportChannel.doAsyncSend(ActiveIOTransportChannel.java:124)
        at org.codehaus.activemq.transport.TransportChannelSupport.asyncSendWithReceipt(TransportChannelSupport.java:158)
        at org.codehaus.activemq.transport.TransportChannelSupport.send(TransportChannelSupport.java:143)
        at org.codehaus.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:916)
        at org.codehaus.activemq.ActiveMQConnection.sendConnectionInfoToBroker(ActiveMQConnection.java:1132)
        at org.codehaus.activemq.ActiveMQConnection.close(ActiveMQConnection.java:553)
        at org.codehaus.activemq.transport.activeio.ExceptionListenerTest.tearDown(ExceptionListenerTest.java:81)
        at junit.framework.TestCase.runBare(TestCase.java:130)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:118)
        at junit.framework.TestSuite.runTest(TestSuite.java:208)
        at junit.framework.TestSuite.run(TestSuite.java:203)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:325)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:536)
Caused by: java.net.SocketException: Socket closed
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:99)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
        at org.activeio.packet.ByteArrayPacket.writeTo(ByteArrayPacket.java:100)
        at org.activeio.net.SocketSynchChannel.write(SocketSynchChannel.java:134)
        at org.activeio.adapter.SynchToAsynchChannelAdapter.write(SynchToAsynchChannelAdapter.java:183)
        at org.codehaus.activemq.transport.activeio.ActiveIOTransportChannel.doAsyncSend(ActiveIOTransportChannel.java:114)
        ... 15 more
------------- ---------------- ---------------
Testcase: testFailingConnection(org.codehaus.activemq.transport.activeio.ExceptionListenerTest):        FAILED
Should have been notified of an exception
junit.framework.AssertionFailedError: Should have been notified of an exception
        at org.codehaus.activemq.transport.activeio.ExceptionListenerTest.testFailingConnection(ExceptionListenerTest.java:45)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)","Fedora Core 3, AMD64",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-15 21:38:57.0,,,false,,,,,,,,,,,,,,,,,48915,,,Tue Sep 06 13:06:57 UTC 2005,,,,,,,,"0|i0ttkv:",172101,,,,,,,,,,,,,,,,,,,"15/Jul/05 21:38;chirino;Changing to minor severity since activeio is optional transport.","18/Jul/05 10:50;jstrachan;fancy having a go at this one?","06/Sep/05 13:06;jstrachan;From all our testing this now appears to be fixed. If its not, let us know and we can reopen this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chat sample not working properly with > 1 windows,AMQ-1545,12483413,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,gmazza,gmazza,11/Jan/08 02:45,02/Mar/12 22:01,30/Jan/20 16:57,02/Mar/12 22:01,5.0.0,,,,,,NEEDS_REVIEW,,,Samples,,,,1,Opening three browser windows of the Chat sample is resulting in it not working properly.  Each message sent from one window gets picked up by only one of the three browser windows (in rotating fashion).  It is possible to move to a publish-subscribe model for the javascript comprising this example so all windows get each message sent?,,dvarela,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/09 10:24;dvarela;activemq.patch;https://issues.apache.org/jira/secure/attachment/12461312/activemq.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2009-03-02 10:21:21.405,,,false,,,,,,,,,,,,,,,,,84659,,,Fri Mar 02 22:01:52 UTC 2012,,,,,,,,"0|i0amgv:",59913,,,,,,,,,,,,,,,,,,,"02/Mar/09 10:21;dvarela;Yes, this affects obviously not only the chat example but any instance where there is more than one window open within the same session. Even having a single window, message reception is altered by reloading that window, as I found out with some tests in Firefox 3 and Konqueror. Results were quite inconsistent, sometimes missing messages altogether, sometimes the latest window getting all of them, sometimes were alternating between windows.

I'm including a patch that might solve this problem, hopefully keeping compatibility with any previous behaviour. It works by including a ""windowId"" in the ""amq.url"" parameter of the HTML page, like this:

<script type=""text/javascript"">amq.uri='amq/window_'+Math.floor(Math.random()*100000);</script>

This parameter will be different for every window or ""window reload"", and then it is picked up (through getRequestInfo) by WebClient and MessageListenerServlet to map different windows to different listeners, allowing ALL of them to get the messages. After applying this patch the chat example allows chatting between multiple windows of the same session.

Hope this helps.
Daniel.
","02/Mar/09 10:24;dvarela;Allow multiple windows within the same session to receive messages.","02/Mar/12 22:01;tabish;Tested here and its working fine with multiple chat windows.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Killing STOMP client stalls the Q forever until a new message is written to that Q,AMQ-1203,12483143,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,bikeracer,bikeracer,14/Mar/07 03:40,20/Sep/11 11:01,30/Jan/20 16:57,20/Sep/11 11:01,4.1.1,,,,,,5.6.0,,,,,,,0,"Using  STOMP C client subscribed in client ack mode
A) send 20 messages into a Q
B) startup slow reader, read 5 messages and control-C without allowing client to send DISCONNECT
C) restart a reader (or more readers if desired)
D) the remaining 15 messages are still present but none will be delivered to the STOMP clients until at least 1 new message is written into the Q.

So no loss of messages under these conditions but Q is effectively stalled until a new message is written in.

------ copy of Hiram's comments from AMQ-1192 ------------
I think this is due to the socket being killed but the server side not noticing. But it will notice once it tries to send it a message, so the it shutdown the dead socket and redelivers all messages queued for the client. On some OSes the TCP timeout interval can be tweaked. Otherwise, keep alive packets would need to be periodically transmitted in Stomp so that the server could detect a dead client sooner. Keep alives have not been added to Stomp yet.. but could be in a future version.
------------------------------------------------------------------------------
",AS3 linux,mkelley63,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-06-14 22:12:57.964,,,false,,,,,,,,,,,,,,,,,43789,,,Tue Sep 20 11:01:36 UTC 2011,,,,,,,,"0|i0akvz:",59657,,,,,,,,,,,,,,,,,,,"14/Jun/08 22:12;bwtaylor;I'm seeing a socket leak that is hanging my server that I think is related to this bug, given Hiram's comment. My producers connect by stomp to my broker. I believe a firewall in between the producers and the broker drops the connection when it's quiet for longer than a timeout. When the producers try to send another message, they see the dead socket and reopen a new one. However, my broker still sees the original connections as ESTABLISHED. This game plays out on any stomp connection that is quiet for longer than the firewall's timeout, which gives me about 25-35 leaked sockets a day until I hit the ulimit for file descriptors. At this time, my broker is hung: it cannot accept new connections, but has not crashed.

I have several suggestions:
1) bump the priority of this ticket
2) implement keep alives and the maxInactivityDuration parameter for stomp
3) when sockets are maxed out, kill old sockets LRU style so as to always accept new connections","13/Aug/11 22:32;tabish;Problems like this can be resolved by using Stomp v1.1 clients with heartbeats.  AMQ-3449 adds Stomp 1.1","20/Sep/11 10:56;gtully;reopen to set fix version to 5.6","20/Sep/11 11:01;gtully;closing again with correct fix version",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StompSubscriptionRemoveTest hangs,AMQ-1323,12482674,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,hadrian,,14/Jul/07 04:09,14/Jul/10 23:42,30/Jan/20 16:57,20/Jul/07 16:48,4.1.1,,,,,,5.0.0,,,Test Cases,,,,0,"StompSubscriptionRemoveTest hangs on windows in a native write so one can never do a mvn install.

The cause is that the message-id is not properly retrieved from the message and the queue name is sent back as message id in acks and hell breaks loose from there.",win32,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/07 04:11;amq1323.patch;https://issues.apache.org/jira/secure/attachment/12460932/amq1323.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-07-20 16:48:19.416,,,false,,,,,,,,,,,,,,,,,84559,,,Fri Jul 20 16:48:19 UTC 2007,,,,,,,,"0|i181e7:",255028,,,,,,,,,,,,,,,,,,,"20/Jul/07 16:48;rajdavies;by svn revision 558044",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URISupport.parseComposite() incorrectly decodes URI parts,AMQ-1385,12482139,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,jcsahnwaldt,jcsahnwaldt,12/Sep/07 20:12,03/Feb/10 10:33,30/Jan/20 16:57,03/Feb/10 10:33,4.1.1,,,,,,5.4.0,,,,,,,0,org.apache.activemq.util.URISupport.parseComposite() throws an URISyntaxException for some input URIs.,,jcsahnwaldt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-02-03 10:33:17.955,,,false,,,,,,,,,,,,,,,,,84541,,,Wed Feb 03 10:33:17 UTC 2010,,,,Patch Available,,,,"0|i0rqz3:",160014,,,,,,,,,,,,,,,,,,,"12/Sep/07 20:29;jcsahnwaldt;The following throws an exception:
{code}
URI uri = new URI(""vm://localhost/?broker.dataDirectory=C:/Documents%20and%20Settings/foo/bar"");
new ActiveMQConnectionFactory(uri).createConnection().close();
{code}

The test works when one line in URISupport.parseComposite() is changed: use getRawSchemeSpecificPart() instead of getSchemeSpecificPart().
{code}
String ssp = stripPrefix(uri.getSchemeSpecificPart().trim(), ""//"").trim(); // crashes
String ssp = stripPrefix(uri.getRawSchemeSpecificPart().trim(), ""//"").trim(); // works
{code}
This makes sense because the scheme specific part is later passed to the constructor URI(String), which expects an escaped ('raw') string.
","12/Sep/07 20:34;jcsahnwaldt;As a workaround, I use _double_ URI encoding, i.e. a space becomes {{%2520}}.
This works:
{code}
URI uri = new URI(""vm://localhost/?broker.dataDirectory=C:/Documents%2520and%2520Settings/foo/bar"");
new ActiveMQConnectionFactory(uri).createConnection().close();
{code}
","03/Feb/10 10:33;rajdavies;Fixed by SVN  revision 905978",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows Service High CPU Usage,AMQ-1090,12482837,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,bryanross@insightbb.com,bryanross@insightbb.com,05/Dec/06 17:08,04/Sep/09 18:45,30/Jan/20 16:57,04/Sep/09 18:45,4.1.0,,,,,,5.3.0,,,,,,,0,"When running ActiveMQ as a service using the Java Wrapper Service, the CPU usage is 100%.  My logging levels are set to ERROR and there is nothing in the log.  I have tried both methods of JWS: WrapperSimpleApp and WrapperStartStopApp.  Perhaps this is a JWS issue but I've been searching around and anything I've found points back to the application.

The workaround is to not run ActiveMQ as a service but that is not the optimal solution in a production environment where ActiveMQ needs to start upon re-boot of the machine.",Windows 2003 R2 - Java 1.5.0_06 and Windows 2000 Pro,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,41766,,,2006-12-05 17:08:29.0,,,,,,,,"0|i180un:",254940,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tcp connections hang,AMQ-844,12482841,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,spidaman,spidaman,25/Jul/06 07:36,04/Sep/09 18:38,30/Jan/20 16:57,04/Sep/09 18:38,4.0.2,,,,,,5.3.0,,,Connector,,,,1,"This problem readily occurs running the standard examples:
ant -Durl=tcp://10.10.3.73:61616?trace=true -Dmax=100 consumer  
ant -Durl=tcp://10.10.3.73:61616 -Dmax=10 producer 
...run the producer side for 2-5 iterations before is just hangs. Once it's in that state, all subsequent client connections hang (i.e. control-C out of either consumer or producer and restart the connection: hangs).

Upping and lowering soTimeout and other connection parameters has so far proven fruitless. Switching JVMs, up'ing from 4.0.1 to 4.0.2-SNAPSHOT (on both client and server), and including/excluding ""-Ddurable=true"" made no difference (all orignal test attempts were with durable messages but in the end, not incluing that had no effect on whether or not the clients eventually hang). The config on the server looks like this:

<beans xmlns=""http://activemq.org/config/1.0"">
  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
  <broker useJmx=""true"">
    <persistenceAdapter>
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""../activemq-data"" 
          dataSource=""#postgres-ds""/>
    </persistenceAdapter>
    <transportConnectors>
       <transportConnector name=""default"" uri=""tcp://10.10.3.73:61616?trace=true"" />
    </transportConnectors>
  </broker>
  <bean id=""postgres-ds"" class=""org.postgresql.ds.PGPoolingDataSource"">
    <property name=""serverName"" value=""localhost""/>
    <property name=""databaseName"" value=""activemq""/>
    <property name=""portNumber"" value=""0""/>
    <property name=""user"" value=""activemq""/>
    <property name=""password"" value=""activemq""/>
    <property name=""dataSourceName"" value=""postgres""/>
    <property name=""initialConnections"" value=""5""/>
    <property name=""maxConnections"" value=""50""/>
  </bean>
</beans> 

FWIW, this doesn't happen when running the same tests on a laptop (MacOS tiger) with clients on loopback. Bug is ""Minor"" but (since is't only exhibited by a small group of us)without being able validate the client connections, this is a not show-stopper for production use of activemq.",Tried with j2sdk1.4.2_06 and jdk1.5.0_05 on redhat enterprise linux 4 (2.6 kernel).,tvijlbrief,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jan/07 09:54;tvijlbrief;dumpemu3.png;https://issues.apache.org/jira/secure/attachment/12460864/dumpemu3.png",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-07-25 08:52:37.0,,,false,,,,,,,,,,,,,,,,,84446,,,Sun Jan 28 09:50:32 UTC 2007,,,,,,,,"0|i17zxz:",254793,,,,,,,,,,,,,,,,,,,"25/Jul/06 08:52;jstrachan;BTW I wonder if you create a thread dump when things are hanging if there is any kind of deadlock in the broker?","26/Jul/06 00:18;spidaman;We got to the bottom of this. It turned out that there were still some client processes running activemq-3.1-M5 on the network hitting the 4.0.x servers. When took them offline (and then fired them back up with 4.0.2 jars), everything stabilized. If backwards compatibility isn't handled, it'd be nice if there was a graceful degradation; having the servers opaquely cease to be responsive to *any* clients due to the presence of some other old clients was pretty troublesome.","28/Jan/07 09:50;tvijlbrief;This bug is still present in 4.1!

When running Stomp C clients and terminating them the TCP-connection is closed
but still visible in JConsole (see screendump)

tom@nomad:~$ netstat -t
Active Internet connections (w/o servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        0      0 nomad.local:47610       pop.xs4all.nl:pop3      ESTABLISHED
tcp        0      0 localhost:32000         localhost:31000         ESTABLISHED
tcp        0      0 nomad.local:36415       userimap.xs4all.n:imap2 ESTABLISHED
tcp        0      0 nomad.local:39095       userimap.xs4all.n:imap2 ESTABLISHED
tcp6       0      0 localhost:45628         localhost:61616         ESTABLISHED
tcp6       0      0 localhost:38235         localhost:46749         ESTABLISHED
tcp6       0      0 localhost:34009         localhost:8093          ESTABLISHED
tcp6       0      0 localhost:33475         localhost:46749         ESTABLISHED
tcp6       0      0 localhost:51894         localhost:46749         TIME_WAIT
tcp6       0      0 localhost:46749         localhost:33475         ESTABLISHED
tcp6       0      0 localhost:31000         localhost:32000         ESTABLISHED
tcp6       1      0 nomad.local:44358       eris.apache.org:www     CLOSE_WAIT
tcp6       1      0 nomad.local:45311       eris.apache.org:www     CLOSE_WAIT
tcp6       0      0 localhost:8093          localhost:34009         ESTABLISHED
tcp6       0      0 localhost:61616         localhost:45628         ESTABLISHED
tcp6       0      0 localhost:46749         localhost:38235         ESTABLISHED
tcp6       1      0 nomad.local:54433       eris.apache.org:www     CLOSE_WAIT
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use of https transport throws ClassCastException,AMQ-1098,12482773,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,hernan.otero,hernan.otero,13/Dec/06 17:30,22/Dec/08 13:34,30/Jan/20 16:57,22/Dec/08 13:34,incubation,,,,,,5.3.0,,,Transport,,,,2,"Trying to run the sample producer out of the main trunk using an https url throws a ClassCastException.  I've tracked this down in the code to the fact that HttpTransportFactory.java expects to find an HttpClientTransport but HttpsTransportFactory does not override createTransport() to create an HttpsClientTransport instead (HttpsClientTransport does not exist as a class).

Thanks,

Hernan

$ ant producer
Buildfile: build.xml

init:

compile:

producer:
     [echo] Running producer against server at $url = https://my.example.com:2222 for subject $subject = TEST.FOO
     [java] Connecting to URL: https://my.example.com:7043
     [java] Publishing a Message with size 1000 to topic: TEST.FOO
     [java] Using non-persistent messages
     [java] Sleeping between publish 0 ms
     [java] javax.jms.JMSException: Could not create Transport. Reason: java.lang.ClassCastException: org.apache.activemq.transport.https.HttpsTransport
     [java] Caught: javax.jms.JMSException: Could not create Transport. Reason: java.lang.ClassCastException: org.apache.activemq.transport.https.HttpsTransport
     [java]     at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:33)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:229)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:242)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:211)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:158)
     [java]     at ProducerTool.run(Unknown Source)
     [java]     at ProducerTool.main(Unknown Source)
     [java] Caused by: java.lang.ClassCastException: org.apache.activemq.transport.https.HttpsTransport
     [java]     at org.apache.activemq.transport.http.HttpTransportFactory.compositeConfigure(HttpTransportFactory.java:62)
     [java]     at org.apache.activemq.transport.TransportFactory.configure(TransportFactory.java:213)
     [java]     at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:117)
     [java]     at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:43)
     [java]     at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:77)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:227)
     [java]     ... 5 more

BUILD SUCCESSFUL
Total time: 2 seconds
",Ubuntu Linux & Mac OS X,jsilva,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/May/08 15:45;joef;HttpsTransportFactory.txt;https://issues.apache.org/jira/secure/attachment/12460984/HttpsTransportFactory.txt","10/Apr/08 19:52;jsilva;amq-1098potentialpatch.zip;https://issues.apache.org/jira/secure/attachment/12460978/amq-1098potentialpatch.zip",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-04-10 19:52:25.418,,,false,,,,,,,,,,,,,,,,,84249,,,Mon Dec 22 13:34:23 UTC 2008,,,,,,,,"0|i14bkv:",233339,,,,,,,,,,,,,,,,,,,"10/Apr/08 19:52;jsilva;Attached in amq-1098potentialpatch.zip are a few fixed files that appear to address the classcastexception...basically made an httpsclienttransport which just extends the existing HttpClientTransport.  Because the underlying HttpClient works with http and https, there are no further changes needed.  Then in the HttpsTransportFactory I return the newly created httpsclienttransport...since it extends the httpclienttransport there is no longer the classcastexception.  Tested and seems to work for my purposes, patch against v4.1.1.","24/Apr/08 17:40;chirino;patch applied in rev 651320.. Thanks!","26/May/08 15:41;joef;HttpsTransportFactory does not override doBind(URI location); therefore, HttpTransportFactory's doBind(URI location) is referenced instead. So a 'https://' transportConnector ends up using a HttpTransportServer instead of HttpsTransportServer object. ","26/May/08 15:45;joef;The attached patch should address the issue with HttpsTransportFactory not overriding doBind(URI location).","21/Jul/08 18:08;jsilva;Original patch resolves issue for 4.1.1, additionally applying Joe's patch seems to resolve issues in 5.1.0","22/Dec/08 13:34;gtully;patch applied to trunk, r728687 thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using the connectionDotFilePlugin with a Broker not named localhost causes a NullPointerException,AMQ-1436,12482182,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,steveyoung,steveyoung,28/Sep/07 12:45,08/Oct/08 08:49,30/Jan/20 16:57,24/Sep/08 15:03,,,,,,,5.2.0,,,,,,,0,"To recrate, define a broker in your ActiveMQ config file and specify the name, e.g.:

<broker brokerName=""MyBroker"" useJmx=""true"" persistent=""true"" xmlns=""http://activemq.org/config/1.0"">
        <plugins>
                <connectionDotFilePlugin />
        </plugins -->

When starting the container a NPE is thrown if no broker called ""localhost"" is present.  Changing the name of the broker above to ""localhost"" stops the problem and the .dot files is generated normally.

FYI The problem appears to be in:

   http://activemq.apache.org/maven/activemq-core/xref/org/apache/activemq/broker/view/ConnectionDotFileInterceptor.html

...specifically the hardcoded string in this line is in the constuctor:

   ObjectName brokerName = new ObjectName(domain + "":Type=Broker,BrokerName=localhost"");

",,steveyoung,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-24 15:03:05.842,,,false,,,,,,,,,,,,,,,,,95783,,,Wed Sep 24 15:03:05 UTC 2008,,,,,,,,"0|i14bhb:",233323,,,,,,,,,,,,,,,,,,,"24/Sep/08 15:03;rajdavies;Fixed by SVN revision 698603",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Loop errors in TaskRunnerTest and BrokerBenchmark,AMQ-1058,12482103,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,kaitchuc,kaitchuc,17/Nov/06 19:10,08/Sep/08 18:49,30/Jan/20 16:57,08/Sep/08 18:49,4.0.2,,,,,,5.3.0,,,Performance Test,,,,0,"In both TaskRunnerTest.doTestWakeup() and BrokerBenchmark.testPerformance() there is a for loop nested within an outer for loop. However they both use the same control varible i. So the outer loop exits prematurely.

This is a trivial fix, but I don't have commit rights.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-08 18:49:44.763,,,false,,,,,,,,,,,,,,,,,84423,,,Mon Sep 08 18:49:44 UTC 2008,,,,,,,,"0|i0ttmn:",172109,,,,,,,,,,,,,,,,,,,"08/Sep/08 18:49;gtully;not an issue in 5.2, looks to be fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQManagedConnectionFactory not reading the ServerUrl property in the activemq-ds.xml,AMQ-1316,12482188,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,x.genster,x.genster,06/Jul/07 09:02,08/Sep/08 18:15,30/Jan/20 16:57,08/Sep/08 18:15,4.1.1,,,,,,5.2.0,,,,,,,0,"There are no getter/setter in apache-activemq-4.1.1/src/activemq-ra/src/main/java/org/apache/activemq/ra/ActiveMQManagedConnectionFactory.java for the ServerURL
 
   public String getServerUrl() {
        return info.getServerUrl();
    }

  public void setServerUrl(String url) {
        info.setServerUrl(url);
    }

",,x.genster,,,,,,,,,,,,,,,,,900,900,,0%,900,900,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-08 18:15:17.223,,,false,,,,,,,,,,,,,,,,,84562,,,Mon Sep 08 18:15:17 UTC 2008,,,,,,,,"0|i181fj:",255034,,,,,,,,,,,,,,,,,,,"08/Sep/08 18:15;gtully;probably fixed for quite a while, in 5.2 in any event.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SessionPool.returnSession() doesn't check for closed sessions,AMQ-1329,12482211,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,stremin,stremin,18/Jul/07 10:21,08/Sep/08 18:13,30/Jan/20 16:57,08/Sep/08 18:13,4.1.1,,,,,,5.2.0,,,,,,,0,"Closing session twice leads to a closed session in a pool.
Found using spring JmsInvokerClientInterceptor.executeRequest() where session is closed both by QueueRequestor and explicitly:
   JmsUtils.closeQueueRequestor(requestor);
   JmsUtils.closeSession(session);",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-08 18:13:23.161,,,false,,,,,,,,,,,,,,,,,84558,,,Mon Sep 08 18:13:23 UTC 2008,,,,,,,,"0|i181dj:",255025,,,,,,,,,,,,,,,,,,,"08/Sep/08 18:13;gtully;probably fixed for quite a while. 5.2 does indeed do close check",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnection throws Exception when closing an already closed exception.,AMQ-1364,12482655,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,hennejg,hennejg,16/Aug/07 11:36,08/Sep/08 18:08,30/Jan/20 16:57,08/Sep/08 18:08,4.1.1,,,,,,5.2.0,,,Connector,,,,0,"The {{ActiveMQConnection.close()}} explicitely states
bq. Closing a closed connection must NOT throw an exception.

But the first call in the close() implementation is to checkClosed(), which throws an exception, if the connection is already closed:

{code:language=java}
    /**
     * simply throws an exception if the Connection is already closed
     * 
     * @throws JMSException
     */
    protected synchronized void checkClosed() throws JMSException {
        if (closed.get()) {
            throw new ConnectionClosedException();
        }
    }
{code}",,vadimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-09-08 18:08:49.881,,,false,,,,,,,,,,,,,,,,,84551,,,Mon Sep 08 18:08:49 UTC 2008,,,,,,,,"0|i181jb:",255051,,,,,,,,,,,,,,,,,,,"08/Sep/08 18:08;gtully;probabally was fixed a lot earlier but only getting tidied out now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using a destinationDotFilePlugin results in an ArrayStoreException,AMQ-1508,12482649,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,kwark,kwark,29/Nov/07 15:42,04/Sep/08 15:42,30/Jan/20 16:57,04/Sep/08 15:42,4.1.1,,,,,,5.2.0,,,Broker,,,,0,"When you add a destinationDotFilePlugin to the activemq configuration, like this:

  <broker>
	<plugins>
	   <destinationDotFilePlugin/>
	</plugins>
       ...
  </broker>

The Broker refuses to start up and crashes with ArrayStoreException:

ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.ArrayStoreExceptio
n
java.lang.ArrayStoreException
        at java.lang.System.arraycopy(Native Method)
        at java.util.ArrayList.toArray(ArrayList.java:304)
        at org.apache.activemq.broker.region.RegionBroker.getDestinations(RegionBroker.java:315)
        at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:149)
        at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:149)
        at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:149)
        at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:149)
        at org.apache.activemq.broker.view.DestinationDotFileInterceptor.generateFile(DestinationDotFileInterceptor.java:53)
        at org.apache.activemq.broker.view.DotFileInterceptorSupport.generateFile(DotFileInterceptorSupport.java:48)
        at org.apache.activemq.broker.view.DestinationDotFileInterceptor.addDestination(DestinationDotFileInterceptor.java:43)
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
        at org.apache.activemq.broker.BrokerService.startDestinations(BrokerService.java:1619)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:410)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:46)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1201)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1171)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:425)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:251)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:156)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:248)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:160)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:287)

The bug is in RegionBroker.getDestinations method:

    public ActiveMQDestination[] getDestinations() throws Exception {
		ArrayList l;

		l = new ArrayList(destinations.values());

		ActiveMQDestination rc[] = new ActiveMQDestination[l.size()];
		l.toArray(rc);
		return rc;
	}

The destinations property is Map where the keys are ActiveMQDestinations and the values are Destinations. Trying to convert a collection of Destinations to an array of ActiveMQConnections throws the aforementioned exception.

The method should be changed to:

    public ActiveMQDestination[] getDestinations() throws Exception {
		ArrayList l;

		l = new ArrayList(destinations.keySet());

		ActiveMQDestination rc[] = new ActiveMQDestination[l.size()];
		l.toArray(rc);
		return rc;
	}

","Windows
ActiveMQ 4.1.1",kwark,mlukica,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,"29/Nov/07 15:54;kwark;activemq.xml;https://issues.apache.org/jira/secure/attachment/12460972/activemq.xml",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-06-10 09:19:51.645,,,false,,,,,,,,,,,,,,,,,84525,,,Thu Sep 04 15:42:34 UTC 2008,,,,,,,,"0|i181un:",255102,,,,,,,,,,,,,,,,,,,"29/Nov/07 15:54;kwark;configuration file with destinationDotFilePlugin which causes the ArrayStoreException during broker startup","10/Jun/08 09:19;mlukica;Version 4.1.2 is also affected.","04/Sep/08 15:42;rajdavies;This is fixed in 5.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA fails to start when JCA rar re-establishes connectivity with an external broker (tcp transport).,AMQ-1200,12482334,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,jstalker,jstalker,09/Mar/07 17:38,22/Apr/08 07:09,30/Jan/20 16:57,22/Apr/08 07:09,4.1.0,,,,,,5.1.0,,,Broker,Connector,,,3,"Hi,

Here's the scenario:
I recently (ie, a couple days ago) downloaded and built the 4.1 branch, set up JBoss 4.0.5.GA with a slightly modified activemq-ra.rar (ra.xml modified to communicate with an external instance of the broker via tcp and setting UseInboundSession to true...not sure what this does really, but I tried it as false and the same behavior happens).

Via a persistent queue (oracle 10 backing), I'm consuming messages in an MDB via the JCA message datasource using XA.

Here's the problem I'm seeing: if I shut down the JMS server, I see the appropriate EOF exception and subsequent reconnection attempts by the rar in JBoss. When I startup the external activemq broker again, the connection appears to get reestablished and work is accepted, started, and completed...EXCEPT there's no mention of XA and thus the message is never actually accepted and consumed.

Here's some debug output from the JCA:

PRE shutdown of external broker:
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] ServerSession requested.
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] Using idle session: ServerSessionImpl:1
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Starting run.
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work accepted: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work started: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Running
2007-03-09 11:43:02,883 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] run loop start
2007-03-09 11:43:02,884 DEBUG [org.apache.activemq.TransactionContext] Start: XidImpl[FormatId=257, GlobalId=node118/114, BranchQual=1, localId=114]
2007-03-09 11:43:02,884 DEBUG [org.apache.activemq.TransactionContext] Started XA transaction: XID:257:6e6f64653131382f313134:31

- snip - output of a resulting consumption of message

2007-03-09 11:43:04,447 DEBUG [org.apache.activemq.TransactionContext] End: XidImpl[FormatId=257, GlobalId=node118/114, BranchQual=1, localId=114]
2007-03-09 11:43:04,447 DEBUG [org.apache.activemq.TransactionContext] Ended XA transaction: XID:257:6e6f64653131382f313134:31
2007-03-09 11:43:04,448 DEBUG [org.apache.activemq.TransactionContext] Prepare: XidImpl[FormatId=257, GlobalId=node118/114, BranchQual=1, localId=114]
2007-03-09 11:43:04,454 DEBUG [org.apache.activemq.TransactionContext] Commit: XidImpl[FormatId=257, GlobalId=node118/114, BranchQual=1, localId=114]
2007-03-09 11:43:05,150 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] run loop end
2007-03-09 11:43:05,178 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] Session returned to pool: ServerSessionImpl:1
2007-03-09 11:43:05,178 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Run finished
2007-03-09 11:43:05,178 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work completed: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]

POST shutdown and restart of external broker

2007-03-09 11:46:33,077 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] Sending: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, CacheSize=1024, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-03-09 11:46:33,126 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] Received WireFormat: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, CacheSize=1024, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-03-09 11:46:33,126 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] tcp://seqlims.broad.mit.edu/18.103.10.168:61616 before negotiation: OpenWireFormat{version=2, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2007-03-09 11:46:33,126 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] tcp://seqlims.broad.mit.edu/18.103.10.168:61616 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] ServerSession requested.
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] Using idle session: ServerSessionImpl:1
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Starting run.
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work accepted: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]
2007-03-09 11:53:15,196 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work started: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Running

- as you can see, no XA here

2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] run loop start
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] run loop end
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionPoolImpl] Session returned to pool: ServerSessionImpl:1
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Run finished
2007-03-09 11:53:15,197 DEBUG [org.apache.activemq.ra.ServerSessionImpl:1] Work completed: javax.resource.spi.work.WorkEvent[source=org.jboss.resource.work.JBossWorkManager@1461b5b]

Thanks for your help!
John","Linux 2.6.8-24.24-smp
java version ""1.5.0_09""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_09-b03)
Java HotSpot(TM) Server VM (build 1.5.0_09-b03, mixed mode)

fresh checkout of activemq-4.1 and build (as of 05-March-07).",adeneui,germm,jstalker,lhotari,,,,,,,,,,,,,,,,,,,,,,,,"21/Apr/08 15:53;hudalla;amq-1200.diff;https://issues.apache.org/jira/secure/attachment/12460907/amq-1200.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-01-31 22:07:32.599,,,false,,,,,,,,,,,,,,,,,84463,,,Tue Apr 22 07:09:07 UTC 2008,,,,,,,,"0|i0rrq7:",160136,,,,,,,,,,,,,,,,,,,"19/Mar/07 19:57;jstalker;It appears that this is worse than I thought...

I just noticed an XA rollback due to an application exception (correct behavior) which should cause the message to be redelivered every 10 minutes for 2 hours (set via the ra.xml file) until the message is processed successfully...should happen on the first try.

At any rate, messages sent after the rollback are delivered to the connector with the same behavior as above: no XA is utilized, so the messages pile up on the server side.","11/Apr/07 01:17;jstalker;After poking around the activemq-ra code base a bit and looking through the log files detailing the failure of XA to come back after ActiveMQEndpointWorker.java calls into reconnect(JMSException error), I have a question that someone can hopefully shed some light on or some thoughts anyway.

From what I can see, the ServerSessionImpl which was active when the problem happened (XA rollback, or connection failure with the broker, or whatever else) removes itself from the ServerSessionPoolImpl (via removeFromPool) and the EndpointWorker will reconnect.  Shouldn't ALL the ServerSessionImpl objects cached in the pool be invalidated and removed so that new ServerSessions come into play with the new connections?  Is there some Tom-foolery with the reconnect that binds the new connection(s) into the XA some place?

Thanks for any input...
John","31/Jan/08 22:07;adeneui;I am using Jencks 2.0/Geronimo along with ActiveMQ 5.0 RA.  I took a look into this issue and it looks like the session object stored by the idle ServerSessionImpl's are stale on reconnect and also do not seem to throw an Exception when session.run() is called (which would get them evicted from the pool).  I added a small bit of code in ActiveMQEndpointWorker to close and recreate the ServerSessionPool everytime we try to reconnect.  This is a little brute-force but it appears to work for us.

--- src/main/java/org/apache/activemq/ra/ActiveMQEndpointWorker.java    (revision 617232)
+++ src/main/java/org/apache/activemq/ra/ActiveMQEndpointWorker.java    (working copy)
@@ -230,6 +230,12 @@
         consumer = null;
         safeClose(connection);
         connection = null;
+
+        // recreating ServerSessionPool because existing sessions are dead
+        //
+        LOG.debug(""Recreating ServerSessionPool"");
+        serverSessionPool.close();
+        serverSessionPool = new ServerSessionPoolImpl(this, endpointActivationKey.getActivationSpec().getMaxSessionsIntValue());
     }
 



","21/Apr/08 15:48;hudalla;Alex is right, the problem is that the _ActiveMQEndpointWorker_ calls _Connection.close()_ when it tries to re-connect to the broker. _ActiveMQConnection.close()_ will then stop message delivery on all its registered _Sessions_ by calling _ActiveMQSession.stop()_. Because of this the _Session.run()_ method invoked by _ServerSessionImpl.run()_ does not throw any exception but instead just doesn't do anything (and in particular does not deliver any messages to the _MessageListener_ registered with the _Session_).

I have modified the _ServerSessionImplTest_ test case to include a test for the _ServerSessionImpl_ to detect a stopped Session. I have tried to use Alex' diff in order to solve the problem but it didn't work for me. However, I have added some lines to _ServerSessionImpl_ to check if its Session is still running before calling its run() method. If it doesn't, the _ServerSessionImpl_ is marked as stale and will be evicted from the _ServerSessionPoolImpl_ using the _removeFromPool_ method  ... Pending messages are then dispatched to another (new) _ServerSessionImpl_ in the pool.

Kai","21/Apr/08 15:53;hudalla;Fix for AMQ-1200","22/Apr/08 07:09;rajdavies;Fixed by SVN revision 650392",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression with networkConnector 'name' attribute,AMQ-1465,12482446,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,joef,joef,15/Oct/07 20:27,10/Apr/08 13:41,30/Jan/20 16:57,10/Apr/08 13:41,,,,,,,5.1.0,,,Connector,,,,1,"On 4.1.1, the value assigned to the networkConnector's  'name' attribute shows up nicely on the jconsole. However, there appears to be a regression with 5.0, because the name no longer shows up on the jconsole. With 5.0, you instead see the String representation of an instance of the SimpleDiscoveryAgent class",ActiveMQ 5.0,joef,tpounds,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/08 23:53;tpounds;patch.r61674.diff;https://issues.apache.org/jira/secure/attachment/12460967/patch.r61674.diff","11/Jan/08 20:28;joef;patchfile.txt;https://issues.apache.org/jira/secure/attachment/12460840/patchfile.txt",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2008-01-09 17:08:16.62,,,false,,,,,,,,,,,,,,,,,95793,,,Thu Apr 10 13:41:49 UTC 2008,,,,,,,,"0|i14bdj:",233306,Regression,,,,,,,,,,,,,,,,,,"09/Jan/08 17:08;tpounds;I've noticed this as well during my testing.  I modeled this behavior when i submitted patches to improve the LdapNetworkConnector support.  If no one takes this task on I will try to provide a patch for this at some point soon...","09/Jan/08 19:03;joef;There are some trivial improvements that I'd like to add to this area and it looks like I'll have some free time to start on this today. I'll also take a crack at this issue. ","10/Jan/08 02:35;joef;Here's the scoop re this issue. 

In 4.1.1,  getName() was properly implemented in NetworkConnector. If a name attribute was not supplied, it relied on an abstract method called createName to provide a default value. The createName method, as implemented in the subclasses, returns the name of a transport object.

In 5.0, NetworkConnector.getName() was made abstract and the implementation in the subclasses simply returns the transport object name, which is what we're now seeing in jconsole. 

NetworkConnector extends NetworkBridgeConfiguration, which properly implements getName(). If a name attribute is not supplied, the default 'localhost' is used. 

IMO, the getName method in NetworkConnector and its subclasses should be removed and we should simply let NetworkBridgeConfiguration handle it just like it does for the other attributes. 

If everyone is okay with the above, I can submit a patch. ","11/Jan/08 20:28;joef;I've attached a patch file for this issue. ","13/Jan/08 23:53;tpounds;I've attached an updated version of the patch. I've made 2 notable changes to the one submitted by Joe:
- changed base getName method to set and return ""localhost"" as the default if it has not been previously set
- LdapNetworkConnector getName method to return a better default representation","14/Jan/08 13:17;joef;wrt the original implementation; if the user had multiple network connectors w/out a  'name' attribute, the broker would throw an exception. This was because you'd end up having multiple network connectors with the same name (i.e., ""localhost""). My patch addressed this by assigning a unique name to each network connection having a 'null' name (i.e., no name specified). - Joe  ","14/Jan/08 15:04;tpounds;This is still the case for specific NetworkConnector impl (i.e. Discovery, Multicast, LDAP). However if there is a new connector in the future that does not override the default getName impl then it will default to ""localhost.""","10/Apr/08 13:41;rajdavies;Patch applied in SVN revision 646803",,,,,,,,,,,,,,,,,,,,,,,,,,,
RSS/Atom Feed does not work in the WebConsole,AMQ-1315,12482342,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,msiegenthaler,msiegenthaler,05/Jul/07 22:40,09/Apr/08 13:59,30/Jan/20 16:57,09/Apr/08 13:59,5.0.0,,,,,,5.1.0,,,Broker,,,,0,The links for the rss and atom view of the queues (in queues.jsp) are broken. They render an error page (something like could not create connection factory). ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jul/07 22:46;msiegenthaler;activemq-queuebrowser.patch;https://issues.apache.org/jira/secure/attachment/12460948/activemq-queuebrowser.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-04-09 13:59:57.75,,,false,,,,,,,,,,,,,,,,,38757,,,Wed Apr 09 13:59:57 UTC 2008,,,,Patch Available,,,,"0|i14bsf:",233373,,,,,,,,,,,,,,,,,,,"05/Jul/07 22:46;msiegenthaler;Path for the QueueBrowser Servlet.

* Uses the ConnectionFactory from the WebClient, but keeps it's own connection and session pool, since we don't want to depend on the session (would be bad if we got many requests)
* Fixes typo in the queues.jsp (Web-Console): feed=rss2.0 not ffeed
* Changed the links in the rss/atom for the messages. The trunk implementation will create a new queue with the name {queue}/{messageId}. I don't think that's the expected behavior, so I changed it to link to a xstream representation of the message. This could be improved, but I think we should define first what exactly we want to show before we butter any time into implementing it.","15/Oct/07 21:33;msiegenthaler;The patch is a bit outdated (due to the refactories by Hiram and James). The patch attached to AMQ-1460 also fixes this issue, let me know if there's a need to have a separate patch for this issue. ","09/Apr/08 13:59;jstrachan;Thanks again for this patch! Applied all I could - also refactored the QueueBrowseServlet to use WebClient as well. Wanna check I didn't miss anything? The code's changed a bit since the patch so it got a bit hairy comparing the diffs :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spelling Mistake,AMQ-1373,12482175,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,claudio.carta,claudio.carta,30/Aug/07 09:20,09/Apr/08 12:10,30/Jan/20 16:57,09/Apr/08 12:10,,,,,,,5.1.0,,,JMS client,,,,0,"Then running the active-mq through mule as spelling mistake was noted when being initialized Mesaage is seen

Here is the exact example of the mistake.

Loading Mesaage Broker from activemq.xml on the CLASSPATH",Mule,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/07 09:20;claudio.carta;ASF.LICENSE.NOT.GRANTED--Spelling Mistake.bmp;https://issues.apache.org/jira/secure/attachment/12460921/ASF.LICENSE.NOT.GRANTED--Spelling+Mistake.bmp",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95773,,,2007-08-30 09:20:00.0,,,,,,,,"0|i181ov:",255076,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken URL,AMQ-1353,12482005,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jlim,erharold,erharold,30/Jul/07 16:05,04/Jan/08 22:15,30/Jan/20 16:57,17/Oct/07 07:06,4.1.1,,,,,,5.1.0,,,Documentation,,,,0,The link to maven under Getting started Download and install Maven. is 404,http://activemq.apache.org/building.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-10-17 07:06:43.605,,,false,,,,,,,,,,,,,,,,,84552,,,Wed Oct 17 07:06:43 UTC 2007,,,,,,,,"0|i181kv:",255058,,,,,,,,,,,,,,,,,,,"17/Oct/07 07:06;jlim;Thanks! This is now updated",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visualization page needs updating,AMQ-1531,12482246,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,gmazza,gmazza,01/Jan/08 17:41,02/Jan/08 11:54,30/Jan/20 16:57,02/Jan/08 11:54,,,,,,,5.1.0,,,Documentation,,,,0,"On this page[1], the hyperlink to the technical presentation at the top is dead, also the two hyperlinks that are aliased ""this example"" are also broken.  I can't fix it  because I don't know they should be replaced with.

[1] http://activemq.apache.org/visualisation.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2008-01-02 11:54:11.11,,,false,,,,,,,,,,,,,,,,,95817,,,Wed Jan 02 11:54:11 UTC 2008,,,,,,,,"0|i181wf:",255110,,,,,,,,,,,,,,,,,,,"02/Jan/08 11:54;jstrachan;I've fixed the page

http://cwiki.apache.org/ACTIVEMQ/visualisation.html

I had to link to Gregor's page of talks as the 2006 talk details are no longer online any more at the TSSJS site",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-ra pom.xml's xbean plugin missing version,AMQ-1218,12482088,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,maguro,maguro,maguro,30/Mar/07 21:17,20/Aug/07 05:15,30/Jan/20 16:57,12/Jun/07 16:26,5.0.0,,,,,,5.0.0,,,,,,,0,Simple enough to fix...,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:42:45.897,,,false,,,,,,,,,,,,,,,,,84709,,,Tue Jun 12 16:26:21 UTC 2007,,,,,,,,"0|i18173:",254996,,,,,,,,,,,,,,,,,,,"12/Jun/07 09:42;jstrachan;You still working on this one Alan or can we reassign to someone else?","12/Jun/07 16:26;maguro;Sorry about that.  Was fixed a long time ago...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unused import sun.security.x509.IssuerAlternativeNameExtension prevents using IBM JDK for building ActiveMQ,AMQ-1279,12482067,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,vamsic,vamsic,14/Jun/07 18:01,31/Jul/07 05:52,30/Jan/20 16:57,31/Jul/07 05:52,5.0.0,,,,,,5.0.0,,,Broker,,,,0,Unused import sun.security.x509.IssuerAlternativeNameExtension in org.apache.activemq.broker.region.AbstractRegion.java prevents using IBM JDK 1.5.0 for building ActiveMQ.  Is there any reason to retain this unused import?,WinXP IBMJDK1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/07 18:01;vamsic;ASF.LICENSE.NOT.GRANTED--remove-unused-import.patch;https://issues.apache.org/jira/secure/attachment/12460889/ASF.LICENSE.NOT.GRANTED--remove-unused-import.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84703,,,2007-06-14 18:01:39.0,,,,Patch Available,,,,"0|i1819b:",255006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
multi-threaded issues with failover transport,AMQ-750,12482050,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,ning.li,ning.li,13/Jun/06 02:15,30/Jul/07 11:43,30/Jan/20 16:57,30/Jul/07 11:43,4.0,,,,,,5.0.0,,,Transport,,,,0,"Modified ProducerTool.java into multi-threaded test code:

This is the peudo code:

For ( thread 1 to 30 ) 
{ 
    Connection connection = createConnection(); 
    Session session = createSession(connection); 
   Producer producer = createProducer(session); 
   sendMessages(producer, 10); //each thread send 10 messages to broker, using url = failover:tcp://localhost:61616
} 

Please turn on Debug info for log4j, otherwise you will hit other threading issue before this one, when client shutting down, this exception will be thrown:
Thread-13 Sending total message: 10 Total time: 203 DONE !!!

[                     Thread-13] FailoverTransport              DEBUG Stopped.
[cp://localhost/127.0.0.1:61616] FailoverTransport              DEBUG Transport failed, starting up reconnect task
java.net.SocketException: socket closed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
	at java.io.DataInputStream.readInt(DataInputStream.java:353)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
	at java.lang.Thread.run(Thread.java:595)
[            ActiveMQ Scheduler] InactivityMonitor              DEBUG Message sent since last write check, resetting flag
[cp://localhost/127.0.0.1:61616] FailoverTransport              DEBUG Transport failed, starting up reconnect task
java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:168)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
	at java.io.DataInputStream.readInt(DataInputStream.java:353)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
	at java.lang.Thread.run(Thread.java:595)
[                 ActiveMQ Task] FailoverTransport              DEBUG Attempting connect to: tcp://localhost:61616


Thread-17 Sending total message: 10 Total time: 109 DONE !!!
[                     Thread-17] FailoverTransport              DEBUG Stopped.
[cp://localhost/127.0.0.1:61616] FailoverTransport              DEBUG Transport failed, starting up reconnect task
java.net.SocketException: socket closed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
	at java.io.DataInputStream.readInt(DataInputStream.java:353)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
	at java.lang.Thread.run(Thread.java:595)


Thread-14 Sending total message: 10 Total time: 328 DONE !!!
[cp://localhost/127.0.0.1:61616] FailoverTransport              DEBUG Transport failed, starting up reconnect task
java.net.SocketException: socket closed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
	at java.io.DataInputStream.readInt(DataInputStream.java:353)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
	at java.lang.Thread.run(Thread.java:595)



","Got the June 6 code using svn, and test is run on Windows",,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jun/06 04:16;ning.li;ProducerTool.java;https://issues.apache.org/jira/secure/attachment/12460782/ProducerTool.java","13/Jun/06 04:16;ning.li;ToolSupport.java;https://issues.apache.org/jira/secure/attachment/12460639/ToolSupport.java","13/Jun/06 04:16;ning.li;log4j.properties;https://issues.apache.org/jira/secure/attachment/12460642/log4j.properties",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2006-06-13 03:32:27.0,,,false,,,,,,,,,,,,,,,,,84338,,,Tue Jun 13 04:16:26 UTC 2006,,,,,,,,"0|i17zvb:",254781,,,,,,,,,,,,,,,,,,,"13/Jun/06 03:32;chirino;Ning,

Could you supply a junit test case that shows the failaure?  Mutithreading issues are complex and hard to describe, a test case would make it very clear.","13/Jun/06 04:16;ning.li;Adding multi-threaded test code for the bug.

Thanks for looking into the problem.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kaha can't be completely disabled in activemq-5.0,AMQ-1294,12482072,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,tom@samplonius.org,tom@samplonius.org,24/Jun/07 07:55,29/Jul/07 08:55,30/Jan/20 16:57,29/Jul/07 08:55,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"Kaha can't be completely disabled in activemq-5.0-20070621.

With this config:

 <persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
 </persistenceAdapter>

ActiveMQ should just use JDBC/Derby+Journal, as soon as the first consumer gets a message, ActiveMQ logs this:

INFO  KahaStore                      - Kaha Store successfully deleted data directory activemq-data/localhost/tmp_storage
INFO  BrokerService                  - Successfully deleted temporary storage

So ActiveMQ is trying to delete temporary files belong to a persistence engine that isn't used.

It seems odd that Kaha purges temporary files during consumer startup, rather than ActiveMQ startup when Kaha would normally (if I was using it), be recovering/checking its database.


","java version ""1.5.0""
Java(TM) 2 Runtime Environment, Standard Edition (build diablo-1.5.0-b01)
Java HotSpot(TM) Server VM (build diablo-1.5.0_07-b01, mixed mode)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-07-29 08:55:43.415,,,false,,,,,,,,,,,,,,,,,84700,,,Sun Jul 29 08:55:43 UTC 2007,,,,,,,,"0|i181i7:",255046,,,,,,,,,,,,,,,,,,,"29/Jul/07 08:55;rajdavies;Fixed by SVN revision 560693",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Advisory Consumer could be not closed down properly,AMQ-1320,12482073,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jlim,mteira,mteira,13/Jul/07 07:36,24/Jul/07 11:55,30/Jan/20 16:57,24/Jul/07 11:55,4.1.1,,,,,,,,,Broker,,,,0,"The AdvisoryConsumer.java doesn't send to the broker the remove command on dispose().
This has been corrected in trunk as r551857. I'm sending a patch backporting this fix.
",activemq svn branch 4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jul/07 07:36;mteira;ASF.LICENSE.NOT.GRANTED--AdvisoryConsumer.patch;https://issues.apache.org/jira/secure/attachment/12460807/ASF.LICENSE.NOT.GRANTED--AdvisoryConsumer.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-07-24 11:55:58.982,,,false,,,,,,,,,,,,,,,,,38736,,,Tue Jul 24 11:55:58 UTC 2007,,,,Patch Available,,,,"0|i181ev:",255031,,,,,,,,,,,,,,,,,,,"24/Jul/07 11:55;jlim;Thanks! patch applied to 4.1 branch r559015",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Destination statistics message count is not decremented after message expired,AMQ-879,12481780,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,hbruch,hbruch,14/Aug/06 07:09,20/Jul/07 17:10,30/Jan/20 16:57,20/Jul/07 17:10,4.0.1,,,,,,5.0.0,,,Broker,,,,0,"After consuming an expired message from a queue, the destination statistics messages count is not decremented. See also the included test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Aug/06 07:09;hbruch;ASF.LICENSE.NOT.GRANTED--StatisticsMessagesCountTest.java;https://issues.apache.org/jira/secure/attachment/12460774/ASF.LICENSE.NOT.GRANTED--StatisticsMessagesCountTest.java",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-07-20 17:10:30.442,,,false,,,,,,,,,,,,,,,,,84391,,,Fri Jul 20 17:10:30 UTC 2007,,,,,,,,"0|i1809r:",254846,,,,,,,,,,,,,,,,,,,"20/Jul/07 17:10;rajdavies;fixed by svn revision 558054",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spelling error in examples directory,AMQ-1289,12481754,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,majorbugger,majorbugger,21/Jun/07 19:44,22/Jun/07 01:58,30/Jan/20 16:57,22/Jun/07 01:58,4.1.1,,,,,,4.1.2,5.0.0,,,,,,0,"There is a spelling error inside ""example/src"" directory. The file ""CommnadLineSupport.java "" should be ""CommandLineSupport.java"" and inside the file, ""public class CommnadLineSupport"" should be changed to ""public class CommandLineSupport""","Windows version, didn't check others",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-22 01:58:31.207,,,false,,,,,,,,,,,,,,,,,84568,,,Fri Jun 22 01:58:31 UTC 2007,,,,,,,,"0|i1818f:",255002,,,,,,,,,,,,,,,,,,,"22/Jun/07 01:58;jlim;this  has been fixed here :

https://issues.apache.org/activemq/browse/AMQ-1167",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq connection factory silently ignores the erroneous arguments in broker url,AMQ-1071,12482041,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,aco,dileepan,dileepan,25/Nov/06 13:35,18/Jun/07 08:57,30/Jan/20 16:57,18/Jun/07 08:57,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"When an erroneous argument is passed to the broker url with failover, activemq connection factory ignores the error. However if failover is removed, it does throw exception. 

Here is the example

1. failover:(tcp://localhost:62012)?jms.prefetchPolicy.all=10&amp;wireFormat.maxInactivityDuration=0&amp;jms.optimizeAcknowledge=false

2. tcp://localhost:62012?jms.prefetchPolicy.all=10&amp;wireFormat.maxInactivityDuration=0&amp;jms.optimizeAcknowledge=false

Only the # 2 throws exception as jms.prefetchPolicy.all is an invalid argument here",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:48:07.733,,,false,,,,,,,,,,,,,,,,,84727,,,Mon Jun 18 08:57:52 UTC 2007,,,,,,,,"0|i180wv:",254950,,,,,,,,,,,,,,,,,,,"12/Jun/07 09:48;jstrachan;added an affected version","18/Jun/07 08:57;aco;Fix added here: http://svn.apache.org/viewvc?view=rev&rev=548260

Test case here: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/transport/failover/FailoverUriTest.java?view=auto&rev=548260

Though it should be noted that errors within the transport list is ignored. i.e. failover:(tcp://localhost:61616?cheese=abc) will not be flagged as erroneous because the tcp part is configured during actual connection only. Any exceptions during connection in failover will result in the transport trying to reconnect. In this case unless the failover transport is configured to fail after n retries it will hang. I'm not sure if this is a serious bug or an expected side effect.

Let me know if it works for you Dileepan. Thanks! :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The example does not work under JVM 1.4,AMQ-1167,12481997,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,aco,woon_san,woon_san,22/Feb/07 04:26,18/Jun/07 06:50,30/Jan/20 16:57,18/Jun/07 04:41,4.1.0,,,,,,4.1.2,,,,,,,0,"The example under ./example/ directory does not work because its sources uses Arrays.toString() method, which is available only in JVM 1.5.

So, I modified 'Arrays.toString()' to 'CollectionUtils.arrayToList()' using Spring 2.0 utility. The CollectionUtils.arrayToList() method returns an adequate list instance for primitive arrays or object arrays, and toString() method of list is very similar to 'Arrays.toString()' method.",JVM 1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Feb/07 04:26;woon_san;ASF.LICENSE.NOT.GRANTED--example-diff.txt;https://issues.apache.org/jira/secure/attachment/12460602/ASF.LICENSE.NOT.GRANTED--example-diff.txt",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-06-12 10:30:14.001,,,false,,,,,,,,,,,,,,,,,38751,,,Mon Jun 18 06:50:15 UTC 2007,,,,Patch Available,,,,"0|i18153:",254987,,,,,,,,,,,,,,,,,,,"12/Jun/07 10:30;jstrachan;Fancy taking a stab at these Adrian? :)","18/Jun/07 04:41;aco;Fix added to: http://svn.apache.org/viewvc?view=rev&rev=548207

Though I've decided to just create a simple Utilities class to do the converting from arrays to string. Just to avoid adding a dependency to spring and keep the examples simpler.

Thanks for the heads up Woonsan. :)","18/Jun/07 06:50;woon_san;Yes, for the examples, Utilities class looks neater than spring dependency. Thanks!
Cheers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RemoveSubscriptionInfo has incorrect openwire annotation in its header,AMQ-1284,12482048,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,17/Jun/07 14:03,17/Jun/07 14:04,30/Jan/20 16:57,17/Jun/07 14:04,5.0.0,,,,,,5.0.0,,,Broker,,,,0,"The RemoveSubscriptionInfo Openwire command has the wrong annotation in its header for the type of openwire command.

Currently its

@openwire:marshaller command=""9""

Should be:

@openwire:marshaller code=""9""

This affects the clients that have commands generated using the openwire generator as they send in a command with an invalid command ID.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84702,,,Sun Jun 17 14:04:48 UTC 2007,,,,,,,,"0|i1818v:",255004,,,,,,,,,,,,,,,,,,,"17/Jun/07 14:04;tabish;Fixed in trunk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven build doesn't fail even when maven plugin fails to start broker,AMQ-1224,12481991,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,aco,timmorrow,timmorrow,06/Apr/07 16:02,15/Jun/07 09:52,30/Jan/20 16:57,15/Jun/07 09:52,5.0.0,,,,,,5.0.0,,,,,,,0,"Original post here: http://www.nabble.com/Maven-build-doesn%27t-fail-even-when-maven-plugin-fails-to-start-broker-tf3537412s2354.html

If the maven plugin fails to start the broker for whatever reason (e.g. there is already a process listening on the broker port) the error is logged but the maven build proceeds.  I would have expected the maven build to error out.

It would appear that this is because the class that the plugin invokes (org.apache.activemq.console.Main) sucks up all throwables. 

Reproduce by simply starting something on port 61616 then trying to run the broker via the maven plugin.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:42:14.535,,,false,,,,,,,,,,,,,,,,,84708,,,Fri Jun 15 09:52:24 UTC 2007,,,,,,,,"0|i18167:",254992,,,,,,,,,,,,,,,,,,,"12/Jun/07 09:42;jstrachan;any chance you could take a look at this when you get chance?","15/Jun/07 09:52;aco;Fixed in -  http://svn.apache.org/viewvc?view=rev&rev=547575
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"4.1 RC1: META-INF/spring.schemas refers to building user ""file:/Users/chirino/""",AMQ-1016,12481971,12482227,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,aco,stolsvik,stolsvik,30/Oct/06 17:49,14/Jun/07 12:39,30/Jan/20 16:57,14/Jun/07 00:55,4.1.0,,,,,,5.0.0,,,,,,,6,"Referring to the 4.1 RC1 posted by Hiram Chirino  Oct 06, here:
  http://www.nabble.com/ActiveMQ-4.1-RC-1-tf2397970.html#a6686974

The META-INF file spring.schemas have the single line.
""http\://activemq.org/config/1.0=file:/Users/chirino/sandbox/activemq-4.1/activemq-core/target/activemq.xsd""

Notice ""file:/"" and ""Users/chirino"". Referring to org.springframework.beans.factory.xml.PluggableSchemaResolver's javadoc: ""schema-location should also be a schema file in the classpath"", and that no-one can tell what structure I will have on my fs, this must be wrong. In addition, I most probably won't have a user name ""chirino"".

PS: In addition, the doc at
  http://www.activemq.org/site/how-do-i-embed-a-broker-inside-a-connection.html
refers as such:

xmlns:amq=""http://activemq.org/config/1.0""
 .. and ..
xsi:schemaLocation=""http://activemq.org/config/1.0 http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd""

Wouldn't it be nice if this was put at a better place than such a snapshot-build URI? It could be put where it will reside when 4.1 actually is out, w/o anyone being to angry about changes during the finalization period, I personally believe.",n/a,alewando,daggerrz,ge0ffrey.desmet,ojs,stolsvik,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-14 17:14:01.0,,,false,,,,,,,,,,,,,,,,,84501,,,Thu Jun 14 12:39:08 UTC 2007,,,,,,,,"0|i180rr:",254927,Regression,,,,,,,,,,,,,,,,,,"30/Oct/06 18:03;stolsvik;$.01 :

Find one thing that stands out:
{noformat} 
<beans xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns=""http://www.springframework.org/schema/beans""
	xmlns:aop=""http://www.springframework.org/schema/aop""
	xmlns:tx=""http://www.springframework.org/schema/tx""
	xmlns:amq=""http://activemq.org/config/1.0""
	xsi:schemaLocation=""
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/tx    http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    http://activemq.org/config/1.0              http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd"">
{noformat} 

and btw, the ""http://activemq.org/config/1.0"" doesn't exist (404), and I don't quite get the ""1.0"" either. Why not do as spring itself does, like ""http://apache.org/schema/amq"" and have a file ""activemq-amq-4.x.xsd"" or somehting there?","14/Nov/06 17:14;chirino;Fix applied in trunk rev 474872 and in 4.1 branch rev 474876","08/Jan/07 14:17;stolsvik;Just wanted to point out that in the 4.1 release, the line in question reads

{code}http\://activemq.org/config/1.0=file:/home/foconer/logicblaze/activemq-temp/activemq-4.1.0/activemq-core/target/activemq.xsd{code}

This is still very wrong, and additionally, with the current file residing at the {{http://people.apache.../activemq-core-4.1-incubator-SNAPSHOT.xsd}} location (refer to my first comment), the entire xbeans-stuff doesn't seem able to ""boot"" at all anymore, giving a huge exception:

{code}
Exception in thread ""main"" org.springframework.beans.factory.BeanDefinitionStoreException: Line 113 in XML document from class path resource [com/picorg/SpringPicorg.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-complex-type.2.4.b: The content of element 'amq:transportConnector' is not complete. One of '{""http://activemq.org/config/1.0"":broker, ""http://activemq.org/config/1.0"":brokerInfo, ""http://activemq.org/config/1.0"":discoveryAgent, ""http://activemq.org/config/1.0"":messageAuthorizationPolicy, ""http://activemq.org/config/1.0"":server, ""http://activemq.org/config/1.0"":taskRunnerFactory, WC[##other:""http://activemq.org/config/1.0""]}' is expected.
Caused by: org.xml.sax.SAXParseException: cvc-complex-type.2.4.b: The content of element 'amq:transportConnector' is not complete. One of '{""http://activemq.org/config/1.0"":broker, ""http://activemq.org/config/1.0"":brokerInfo, ""http://activemq.org/config/1.0"":discoveryAgent, ""http://activemq.org/config/1.0"":messageAuthorizationPolicy, ""http://activemq.org/config/1.0"":server, ""http://activemq.org/config/1.0"":taskRunnerFactory, WC[##other:""http://activemq.org/config/1.0""]}' is expected.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:410)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3165)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.elementLocallyValidComplexType(XMLSchemaValidator.java:3129)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.elementLocallyValidType(XMLSchemaValidator.java:3076)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processElementContent(XMLSchemaValidator.java:2978)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleEndElement(XMLSchemaValidator.java:2121)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:714)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:377)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2740)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:645)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:508)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:807)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:225)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:283)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:77)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:405)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:357)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:126)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:142)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:168)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:113)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:79)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:94)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:294)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:92)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:77)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:68)
{code}

The spring config file in question used to boot.

Shouldn't there exist a proper, stable location with a proper schema for 4.1?!","08/Jan/07 14:39;stolsvik;Just to point out for any viewers of this bug that have the same problem with AMQ 4.1: it seems like if you exchange the location URL with

{code}
http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.2-incubator-SNAPSHOT.xsd
{code}

.. it works again. (That is, the AMQ version 4.1 sems to work xbeans-style better with the devel 4.2 schema).

","19/Jan/07 14:55;stolsvik;Now the 4.2 SNAPSHOT version doesn't work either.

I've now put a 4.1-working version here (its a 4.2 SNAPSHOT version that I apparently downloaded 2007-01-08, according to its timestamp):
  http://picorg.net/schema/activemq-4.1-working-V4.2.xsd

Hopefully the maintainers of ActiveMQ at some point will understand and fix this rather big problem.

By exchanging the xsi:schemaLocation URL with that one, I got both Eclipse to be happy, and my app to actually boot.

NOTE: I will not promise that I'll leave that file there forever, so don't go production with it.
","19/Jan/07 15:10;alewando;This issue is not resolved.","19/Jan/07 15:40;stolsvik;Nice to see it reopened. At least the next versions, both 4.2 and 4.1.1 should have this fixed.

Here's a link to a post that describes the different problems, again referring to some more posts:

http://www.nabble.com/Re%3A-Issues-configuring-ActiveMQ-in-spring-context-file-p8450503.html","07/Mar/07 18:15;jstrachan;So I've just double checked both the 4.1-SNAPSHOT (which will become 4.1.1 very soon) and 4.2-SNAPSHOT releases. Both of them are the same, the value of spring.schemas is...

http\://activemq.org/config/1.0=activemq.xsd

and inside the activemq-core.jar is the file activemq.xsd. i.e. so Spring will load the XSD from the jar rather than relying on some external canonical URL.

Incidentally if you want to double check this,  I used the distros from 6th May 2007 from the maven repo...

http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/apache-activemq/","15/Mar/07 21:03;alewando;Sorry to re-open this issue again, but Spring's entity resolver won't attempt to resolve the systemid (""http://activemq.org/config/1.0"" in this case) unless it ends with '.xsd' or '.dtd'.  See org.springframework.beans.factory.xml.DelegatingEntityResolver

To fix this, change spring.schemas to read something like:

http\://activemq.org/config/1.0/activemq.xsd=activemq.xsd

and use ""http://activemq.org/config/1.0/activemq.xsd"" as the systemid in the schemaLocation declaration of the app context xml.
","16/Mar/07 07:51;jstrachan;OK - we can change the schema namespace in 4.2.0 to resolve this but unfortunately this will have to remain unfixed for 4.1.1 (as its a bug fix release and we can't break backwards compatibilitiy)","16/Mar/07 08:20;stolsvik;That's a _pretty darn_ moot point, as it doesn't work at all as it stands.

I must say I really don't understand the point of Active MQ ""implementing"" the Spring/Xbeans combo when there is no drive at all to actually make the shit work.

I have several hundred requests per week from ""browser: Java"" to the file I've posted some comments ago - an extremely hacky solution - this due to the fact that the ActiveMQ maintainers repeatedly ignores the problem, and apparently refuses to put up a schema on some permanent location that actually works.

I just can't fathom why, and really makes me wonder about the whole thing..","16/Mar/07 08:46;ojs;See my comments on http://www.nabble.com/Is-any-working-%27Spring-2.0.1-%2B-Lingo-1.3-%2B-ActiveMQ-4.1-final%27-configuration-out-there--tf3127903.html - AMQ currently is just unusable for many.","16/Mar/07 14:49;chirino;You have to realized that the namspace is used by the default xbean application that is used to load the stand alone broker.  And Yes that IS working.
So we change the namespace, then all the existing configuration files out there would stop working as the xbean loader would no longer work.","16/Mar/07 15:03;cgs;Even if it was unusable, why couldn't one:

1. Patch AMQ so it works for them
2. Write an EntityResolver
3. Configure it another way","16/Mar/07 15:26;stolsvik;Hiram: why won't you at least put a working schema for your _released_ version of AMQ on a permanent, stable location, with documentation on the AMQ site that actually will work (using the correct, stable schema)?

Christopher: I've already provided a hack for people that swing by this bug. The opinions you air are absolutely uninteresting.","23/Mar/07 09:51;ge0ffrey.desmet;Hiram, I don't believe the namespace need to be changed - as I didn't need to in my workaround.

There are 2 issues:

1) MINOR: an official, stable, working url with the xsd for each release.
So Eclipse/Intellij can fetch it and do code completion. It's not needed at runtime.
Till then someone makes one, this one seems to work (but can break at any time as the helpfull person who put it up said)
http://picorg.net/schema/activemq-4.1-working-V4.2.xsd

2) CRITICAL: that xsd inside the jar and a spring.schemas files which couples
the official url to that xsd in the jar. It is needed at runtime.
Notice that the namespace ""http://activemq.org/config/1.0"" isn't affected.

Workaround for this issue
=====================

Define this in your spring context - you might wanna use a more trustworty url of your own:

  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
  http://activemq.org/config/1.0 http://picorg.net/schema/activemq-4.1-working-V4.2.xsd"">

Make a resource in your jar:
  /org/apache/activemq/patch/activemq-4.1-working-V4.2.xsd
and copy the contents from that online xsd in it.

Make a resource in your jar:
  /META-INF/spring.schemas
and copy the following contents in it:
  http\://picorg.net/schema/activemq-4.1-working-V4.2.xsd=org/apache/activemq/patch/activemq-4.1-working-V4.2.xsd

Pitfall: notice the  \ in front of the : of http://
","23/Mar/07 09:53;ge0ffrey.desmet;With your jar, I don't mean a local version of the activemq jar, but your own jar/war which uses activemq","02/Apr/07 15:12;ge0ffrey.desmet;Since this can be fixed without changing the namespace (so it doesn't affect the xbean implementation),
can it be pushed back for 4.1.1 or at least 4.1.2?

It blocks the use of ActiveMQ with Spring 2's schema support.
Falling back on xbean is for many not an option if you're using spring's property placeholder support to configure port/host etc. ","16/Apr/07 20:32;alewando;I'm able to use placeholders with xbean. You just need to declare the configurer in the xbean config file:

Ex: activemq-brokers.xml:
{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<!-- this file can only be parsed using the xbean-spring library -->
<beans>
	<bean
		class=""org.springframework.beans.factory.config.PropertiesPlaceholderConfigurer"">
		<property name=""location""
			value=""classpath:config/environment.properties"" />
		<property name=""placeholderPrefix"" value=""$jms{"" />
	</bean>

	<broker brokerName=clusterBroker$jms{nodeNumber}"" persistent=""false"" useJmx=""false"" start=""false""
		xmlns=""http://activemq.org/config/1.0"">
		<transportConnectors>
			<transportConnector uri=""$jms{cluster.local.listener}"" />
		</transportConnectors>

		<networkConnectors>
			<networkConnector
				uri=""static:($jms{cluster.broker.urls})"" />
		</networkConnectors>
	</broker>

</beans>
{code}","14/Jun/07 00:55;aco;Working xsds can be found here:
5.0 - http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-5.0-SNAPSHOT.xsd
4.1 - http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-SNAPSHOT.xsd

Hopefully, a stable release (i.e. without the SNAPSHOT will be made available after the release).

A sample spring config can be found here: http://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/test/resources/spring-embedded-xbean.xml","14/Jun/07 07:30;stolsvik;Those URLs looks REALLY pathetic. Seriously, are you proposing that you put a ""final and stable release"" of a configuration schema at an address that starts with ""people.apache.org""?? And which is that extremely long-winded, with lots utterly schema-unrelated data?

Why can't you come up with something along the lines of ""http://schemas.apache.org/activemq/amctivemq-5.0.xsd"", at the MOST? Something that looks like you've at least put one cent into doing this the right way? Look at ANY OTHER schema definition on the entire internet, and you'll find that yours are .. non-good.

You folks apparently desperately wants the distribution of this file to be so automated and nice and cool. That is a very flawed logic. The URL you now propose is no better than the one that this whole shit started off with, and with later releases, you'll fsck this up again, and installations around the world will start to bomb out.

And finally, you do realize that this element is this bug's ""secondary aspect"" - the first is that there really RUNTIME-wise shouldn't be need for such a proper and stable URL at all (obviously), since Spring (with xbeans) have this feature where it will look it up in the classpath, using the META-INF/spring.schemas system (so that my offline application using your system will be able to boot without being hooked up to the internet).

Simply read the bug, starting with the initial description, then going through the dozen or so comments above, and you'll be informed.

How you are able to close this bug with that comment is actually frightening.","14/Jun/07 08:38;jstrachan;Thanks Endre for your comments; your tone really helps encourage those volunteers on the project to use our spare time to help you out :)

Note that the public URL is not required; as you say that Spring can use the one from inside the jar. The public URI is only required if folks want to use it for some XSD editing tool. 
We're also talking about the internet too; folks can easily put that XSD wherever they like, on their hard drive, on their own server at whatever URL floats their boat.

I realise we should have a nice short URL for all versions of the schema. Its not quite trivial to do that at Apache so please bear with us. 

We could add some redirects here...
https://svn.apache.org/repos/asf/activemq/site/.htaccess

if anyone fancies figuring out the .htaccess ninja to make a nice URI of the form something like

http://activemq.apache.org/schemas/activemq-$VERSION.xsd

am gonna split this thing up as a separate JIRA","14/Jun/07 08:57;jstrachan;OK so the XSDs should soon be appearing here...

http://activemq.apache.org/schema/

for example


http://activemq.apache.org/schema/activemq-core-5.0.xsd

(when we do the release).

Until then it'll be

http://activemq.apache.org/schema/activemq-core-5.0-SNAPSHOT.xsd

etc","14/Jun/07 09:04;jstrachan;So this issue was caused by multiple things. 

* Bad XSDs caused by a bug in XBean; which AFAIK is now fixed, the generated XSDs are now valid right?
* lousy URLs for the XSDs, which should now be fixed (once Apache's caching infrastructure spots the new files)
* Spring unable to find the embedded XSD which is inside the activemq-core.jar

Am unsure how to resolve the last item without changing the namespace. Ideally if we can, we'd avoid changing the namespace (then the fix can be applied to 4.1.x and 5.0). 
Sure we could write our own EntityResolver, but I've no idea how to automatically register it so its always available to Spring; given that Spring is in charge, loads its ApplicationContext and we have to fit inside its callback stuff mid-parse.

Am wondering if the simplest solution is to change the namespace URI to end in "".xsd""? Maybe to http://activemq.apache.org/schema/activemq-core.xsd?

If anyone knows how to resolve this last issue nicely with using pure Spring I'd be most grateful. Endre - any ideas? Do you think the namespace URI really has to change?
","14/Jun/07 09:16;jstrachan;A few more thoughts. The ideal solution to the issue might be to keep backwards compatibility of the namespace URI; but to allow a cleaner URL thats more spring-like (and Apache-like) to be used. 
BTW its worth saying that the use of ActiveMQ's namespaces pre-dates both the move to Apache and the Spring 2 XML configuration stuff by quite a while so it was kinda hard to second guess how the spring 2.0 XML handling was gonna work!

A more spring-like namespace might be

http://activemq.apache.org/schema/activemq-core

for the namespace URI which then maps to the physical release as...

http://activemq.apache.org/schema/activemq-core-5.0.xsd

Then it'd kinda seem more normal in an XML declaration...

{code}
<beans xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns=""http://www.springframework.org/schema/beans""
	xmlns:aop=""http://www.springframework.org/schema/aop""
	xmlns:tx=""http://www.springframework.org/schema/tx""
	xmlns:amq=""http://activemq.org/config/1.0""
	xsi:schemaLocation=""
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/tx    http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    http://activemq.apache.org/schema/activemq-core     http://activemq.apache.org/schema/activemq-core-5.0.xsd"">
{code}

Thoughts?","14/Jun/07 09:28;jstrachan;BTW am wondering if the generated file spring.schemas 

http\://activemq.org/config/1.0=activemq.xsd

should look like this

http\://activemq.org/config/1.0/1.0.xsd=activemq.xsd

to work with spring's entity resolver thingy
","14/Jun/07 09:49;jstrachan;DOH! Am thinking the spring.schemas file has nothing at all to do with the namespace URI at all; its purely to do with the XSD location!

So maybe something like this is better

{code}
http\://activemq.apache.org/schema/activemq-core.xsd = activemq.xsd
http\://activemq.apache.org/schema/activemq-core-5.0.xsd = activemq.xsd
{code}

So that the namespace URI does not have to change?","14/Jun/07 09:51;jstrachan;BTW the apache caching infrastructure seems to have spotted that those nicer schema URLs are working...

http://activemq.apache.org/schema/activemq-core-5.0-SNAPSHOT.xsd

or look at them all

http://activemq.apache.org/schema/","14/Jun/07 10:07;jstrachan;One further change to the URL stuff. We need one directory for snapshots and one directory for actual releases.

So I've just updated the symlinks (which will take a few hours to refresh in the caching infrastructure) so that

releases of XSDs appear here...
http://activemq.apache.org/schema/

such as 
http://activemq.apache.org/schema/activemq-core-4.1.1.xsd

and snapshot schemas appear here
http://activemq.apache.org/snapshot-schema/

such as 
http://activemq.apache.org/snapshot-schema/activemq-core-5.0-SNAPSHOT.xsd

The snapshots are a fair bit longer, but folks should usually be using the shorter, released XSDs
","14/Jun/07 10:23;stolsvik;James: It is SO AMAZINGLY REFRESHING to see you on this, and just KICKING this rather longstanding bug outta here!

Seriously - I think this has annoyed several people, and just stagnated others. The file I'm hosting as a ""fix"" to this is getting several hundred hits per week (admittedly not from that many different hosts! But still!).

I saw you asked for ideas - is that still so? After that, you quickly added 4-5 more comments, so I'm not sure you need me anymore? :) Do also note that I think I've stated most of my knowledge on how this should be done on earlier comments.","14/Jun/07 10:43;stolsvik;Okay, here's a comment to something I spotted up there

In your ""Then it'd kinda seem more normal in an XML declaration..."", and a XML suggestion, there is, as I understand it, a rather serious flaw.

The idea is that the namespace declaration ??""xmlns:amq=""http://activemq.org/config/1.0""?? must obviously match up with the later LOCATION declaration, which it doesn't do here: ??""http://activemq.apache.org/schema/activemq-core     http://activemq.apache.org/schema/activemq-core-5.0.xsd""??

Also, if you check out the URL's that spring itself uses, you'll see that BOTH of them actually resolve to something sane: the first is a unique URL that will never change - it states the ""scope"" of the declaration, and happens to point to a directory listing on a server, and the second is the actual ""instance"" of this declaration - i.e. ""use this specific file"" - which happens to be inside the former directory.

And in the spring.schemas, you are correct in that it is a ""location"" or ""instance"" redirecter, not a namespace redirecter.

I however wonder why you'd put the actual file ""directly on root"", and not put it inside one of the packages. Spring at least does this..
","14/Jun/07 11:06;jstrachan;Hey Endre

I think we're all on the same page; we all want to see an end to all these spring XML related bugs, issues and discussions :)

I think I'm getting to the bottom of understanding this; apart from the various bugs mentioned above that are now resolved, I think a misunderstanding of the role of the spring.schemas file has caused some confusion & blind alleys.
To be fair quite a few folks dived in and tried to fix the various issues in this whole Spring XML namespaces thing; it turned out there was quite a few things going wrong etc.

I think we're getting closer now.

trunk has a test case Spring2XmlNamespacesTest which uses this spring-embedded-xbean.xml
which at the time of writing looks like this...

{code}
<beans 
  xmlns=""http://www.springframework.org/schema/beans"" 
  xmlns:amq=""http://activemq.org/config/1.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.org/config/1.0 http://activemq.apache.org/snapshot-schema/activemq-core-5.0-SNAPSHOT.xsd"">
{code}

which works fine. Then there's Spring2XmlNamespacesWithoutRemoteSchemaTest which uses spring-embedded-xbean-noversion.xml which uses an XSD location that doesn't actually exist (rather like in spring using
http://www.springframework.org/schema/beans/spring-beans.xsd without using the 2.0 version)

{code}
<beans 
  xmlns=""http://www.springframework.org/schema/beans"" 
  xmlns:amq=""http://activemq.org/config/1.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.org/config/1.0 http://activemq.apache.org/schema/activemq-core.xsd"">
{code}

this test case works too - showing that the spring.schemas is indeed finding the local activemq.xsd file.","14/Jun/07 11:15;stolsvik;This is starting to look very good!

It would be nice if that ""schema-defintion URL"" (http://activemq.org/config/1.0) actually existed - and you do own that domain, so you can make it so, right? Maybe a little README.txt in there, or something cute?

If it is possible in the 5.0 release, then renaming the ""http://activemq.org/config/1.0"" to something along the lines of what spring does (read my comment above) would in addition simply LOOK very much more right and corrent, and give pedantic wankers like me those warm tingly feelings that only unifiedness, correctness and thoroughness can give! ","14/Jun/07 12:26;jstrachan;Have followed spring's lead where the namespace URI points to the directory of the various versioned files. So in an hour or two the URL should work...
http://activemq.org/config/1.0

when Apache catches up :). Though activemq.org is a redirect to activemq.apache.org so it'll probably only work in browsers; but that should do right?

Have also added a little ReadMe.html.

I think it might be nice to change the namespace URL to something more spring like and Apache-ish for 5.0; its a bit of a pain for users but we could support backwards compatibility I guess...

have brought this (and a number of related issues) up on the dev list...
http://www.nabble.com/Handling-XSDs-and-Spring-2-XML-processing-etc.-tf3921424s2354.html

it might be worth jumping on there, as this JIRA is long and complex enough already :)","14/Jun/07 12:39;stolsvik;That's really nice!

If it is a proper redirect, even other clients than browsers should be able to follow it - but that is really not that terribly important.

You could call the file ""index.html"" instead, so it'll just come directly up? Or maybe a dir-listing actually is good, so that one can see the different versions? Probably.. but isn't there an Apache HTTPD feature, whereby if you call a file README or something, it'll automatically be ""#included"" in the dir-listing?

I've replied to the email, basically just stating the same opinions that I have here and in 1276. And I obviously agree with the ""spring-like and Apache-ish"" URI, but realize that my _opinion_ don't weigh very much when decision-time comes!"
activemq-rar-4.1.0-incubator.rar contains spring twice: spring-1.2.4.jar and spring-2.0.jar,AMQ-1124,12482039,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,aco,cybernd,cybernd,12/Jan/07 10:12,14/Jun/07 01:12,30/Jan/20 16:57,14/Jun/07 01:12,4.1.0,,,,,,4.1.2,5.0.0,,,,,,1,"Seems like AMQ-1004 was not solved.

Deploying the .rar containing both spring versions lead to:
11:06:06,531 WARN  [ServiceController] Problem starting service jboss.jca:service=RARDeployment,name='activemq-rar-4.1.0-incubator.rar'
javax.resource.spi.ResourceAdapterInternalException: Failed to startup an embedded broker: xbean:broker-config.xml, due to: java.lang.Illega
lStateException: Could not find valid implementation for: 2.0
        at org.apache.activemq.ra.ActiveMQResourceAdapter.start(ActiveMQResourceAdapter.java:83)
...
Caused by: java.lang.NoSuchMethodError: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.setValidationMode(I)V
        at org.apache.xbean.spring.context.v2.XBeanXmlBeanDefinitionReader.<init>(XBeanXmlBeanDefinitionReader.java:58)
...

Workaround: manual deletion of spring-1.2.4.jar ",,cybernd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 10:00:25.037,,,false,,,,,,,,,,,,,,,,,84486,,,Thu Jun 14 01:12:39 UTC 2007,,,,,,,,"0|i180xj:",254953,,,,,,,,,,,,,,,,,,,"12/Jun/07 10:00;jstrachan;Oh Maven-ninja, could you take a look at this please? :)","14/Jun/07 01:12;aco;I've checked in the latest 4.1 and 5.0 branches and I don't see the spring 1.2.4 jar being included. Just reopen the issue if its still a problem in the latest versions. :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid XSD (according to XML Spy),AMQ-929,12482031,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,cressie176,cressie176,19/Sep/06 19:40,12/Jun/07 14:52,30/Jan/20 16:57,12/Jun/07 14:52,4.1.0,,,,,,5.0.0,,,,,,,3,"XmlSpy reports http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd is invalid with the following message:

<xs:element ref='tns:topic'> makes the content model non-deterministic. Possible causes: name equality, overlapping occurance or substitution groups.

It's complaining because it has no way to validate whether it should validate against tns:topic/tns:queue or the xs:any for the following element

<xs:element name='destination' minOccurs='0' maxOccurs='1'>
   <xs:complexType>
      <xs:choice minOccurs='0' maxOccurs='1'>
         <xs:element ref='tns:queue'/>
         <xs:element ref='tns:topic'/>
         <xs:any/>
      </xs:choice>
   </xs:complexType>
</xs:element>

Possible fix adapted from http://www.thescripts.com/forum/threadedpost1605613.html:

<xs:element name=""destination"" minOccurs=""0"" maxOccurs=""1"">
	<xs:complexType>
		<xs:choice minOccurs=""0"" maxOccurs=""1"">
			<xs:element name=""extensions"">
				<xs:sequence maxOccurs=""1"">
					<xs:any/>				
				</xs:sequence>
			</xs:element>
			<xs:element ref=""tns:queue""/>
			<xs:element ref=""tns:topic""/>
		</xs:choice>
	</xs:complexType>
</xs:element>

But I suspect difficult to fix as the XSD is autogenerated + you'll lose backwards compatability with previous documents. The problem occurs repeatedly throughout the schema.

",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/May/07 06:54;aco;activemq.xsd;https://issues.apache.org/jira/secure/attachment/12460643/activemq.xsd",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-12-16 00:29:03.0,,,false,,,,,,,,,,,,,,,,,84508,,,Tue Jun 12 14:52:00 UTC 2007,,,,,,,,"0|i180e7:",254866,,,,,,,,,,,,,,,,,,,"16/Dec/06 00:29;fwiesner;With the xsd embedded into the Spring context, I get the following stacktrace:

org.springframework.beans.factory.BeanDefinitionStoreException: Line 4531 in XML document from class path resource [resources/junit-application-context.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cos-nonambig: ""http://activemq.org/config/1.0"":redeliveryPolicy and WC[##any] (or elements from their substitution group) violate ""Unique Particle Attribution"". During validation against this schema, ambiguity would be created for those two particles.
Caused by: org.xml.sax.SAXParseException: cos-nonambig: ""http://activemq.org/config/1.0"":redeliveryPolicy and WC[##any] (or elements from their substitution group) violate ""Unique Particle Attribution"". During validation against this schema, ambiguity would be created for those two particles.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:172)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:382)
	at com.sun.org.apache.xerces.internal.impl.xs.XSConstraints.reportSchemaError(XSConstraints.java:315)
	at com.sun.org.apache.xerces.internal.impl.xs.XSConstraints.fullSchemaChecking(XSConstraints.java:463)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleEndElement(XMLSchemaValidator.java:2246)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.endElement(XMLSchemaValidator.java:814)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanEndElement(XMLNSDocumentScannerImpl.java:719)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1685)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:77)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:405)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:357)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanFactory.<init>(XmlBeanFactory.java:73)
	at org.springframework.beans.factory.xml.XmlBeanFactory.<init>(XmlBeanFactory.java:61)
	at de.florian_wiesner.TestJMSLogReader.setUp(TestJMSLogReader.java:29)
	at junit.framework.TestCase.runBare(TestCase.java:125)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
","29/May/07 06:54;aco;Hi,

Wonder if you can try the newly generated xsd if its valid against xml spy. See attached.","29/May/07 07:54;bwellhoefer;The new XSD works fine in my version of XMLSpy.","12/Jun/07 14:52;jstrachan;Great thanks for the heads up Bertrand; looks like 5.0.0 should be good from an XSD perspective",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException thrown from QueueBrowserServlet,AMQ-1261,12482000,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,dennisbyrne,dennisbyrne,02/Jun/07 22:23,12/Jun/07 14:37,30/Jan/20 16:57,12/Jun/07 14:37,,,,,,,5.0.0,,,,,,,0,"I get this from the demo app when I go to the queue browser pages ...

java.lang.IllegalStateException: missing ConnectionFactory in QueueBrowserServlet
	at org.apache.activemq.web.QueueBrowseServlet.getConnectionFactory(QueueBrowseServlet.java:75)
	at org.apache.activemq.web.QueueBrowseServlet.getConnection(QueueBrowseServlet.java:63)
	at org.apache.activemq.web.QueueBrowseServlet.createSession(QueueBrowseServlet.java:158)
	at org.apache.activemq.web.QueueBrowseServlet.borrowSession(QueueBrowseServlet.java:140)
	at org.apache.activemq.web.QueueBrowseServlet.doGet(QueueBrowseServlet.java:89)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:467)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1075)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:47)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1066)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:185)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:715)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:402)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:285)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:469)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:791)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:500)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:358)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:365)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)","apache-activemq-4.2-SNAPSHOT as of june 2, 2007",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 14:37:51.142,,,false,,,,,,,,,,,,,,,,,95728,,,Tue Jun 12 14:37:51 UTC 2007,,,,,,,,"0|i181bz:",255018,,,,,,,,,,,,,,,,,,,"12/Jun/07 14:37;jstrachan;Applied patch to trunk to fix this. If you grab trunk and build the assembly, running 'bin/activemq' should have a working web console and web demos; capable of browsing queues etc",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad quotes on web page,AMQ-1258,12482022,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,eharold,eharold,31/May/07 18:03,12/Jun/07 10:12,30/Jan/20 16:57,12/Jun/07 10:12,5.1.0,,,,,,5.0.0,,,Documentation,,,,0,"The page at http://activemq.apache.org/getting-started.html#GettingStarted-StartingActiveMQ in the testing installation section I find the following in the windows instructions:

netstat -an|find &quot;61616&quot;

Obviously a double-escaped ampersand in the HTML. It should of course be

netstat -an|find ""61616""",http://activemq.apache.org/getting-started.html#GettingStarted-StartingActiveMQ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 10:12:47.999,,,false,,,,,,,,,,,,,,,,,84816,,,Tue Jun 12 10:12:47 UTC 2007,,,,,,,,"0|i181cn:",255021,,,,,,,,,,,,,,,,,,,"12/Jun/07 10:12;jstrachan;Thanks for that!

Unfortunately this JIRA is using the same wiki markup engine as the wiki which powers the website...
http://activemq.apache.org/how-does-the-website-work.html

so I'm not 100% sure of the correct command line :). But I think I've fixed it...

http://cwiki.apache.org/confluence/display/ACTIVEMQ/Getting+Started

Let me know if its not yet fixed and I can update it - or it might be easier & quicker for you to go right ahead and just edit the above wiki page.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Illegal character in hostname error on hosts with underscores in their host names,AMQ-1188,12481802,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,ygrignon,ygrignon,05/Mar/07 23:58,06/Mar/07 11:47,30/Jan/20 16:57,06/Mar/07 11:47,4.1.0,,,,,,5.0.0,,,,,,,0,"On a machine where the hostname contains underscores (e.g. HS_RH64_A3_1) ActiveMQ fails to initialize with the stack trace below. This seems to be a problem with the TCP protocol handler since doing new URL(""http://HS_RH64_A3_1.godzilla.local:61616"") works fine.

2007-03-05 08:30:20,076 [WrapperSimpleAppMain] ERROR (BrokerService.java:412) - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Transp
ort Connector could not be registered in JMX: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
java.io.IOException: Transport Connector could not be registered in JMX: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:25)
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1079)
        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1508)
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1468)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:402)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:82)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:159)
        at org.apache.activemq.console.Main.main(Main.java:91)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:197)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:43)
        at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:94)
        at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:56)
        at org.apache.activemq.transport.TransportFactory.bind(TransportFactory.java:109)
        at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:270)
        at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:122)
        at org.apache.activemq.broker.TransportConnector.asManagedConnector(TransportConnector.java:100)
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1072)
        ... 35 more
Caused by: java.net.URISyntaxException: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
        at java.net.URI$Parser.fail(URI.java:2816)
        at java.net.URI$Parser.parseHostname(URI.java:3355)
        at java.net.URI$Parser.parseServer(URI.java:3204)
        at java.net.URI$Parser.parseAuthority(URI.java:3123)
        at java.net.URI$Parser.parseHierarchical(URI.java:3065)
        at java.net.URI$Parser.parse(URI.java:3021)
        at java.net.URI.<init>(URI.java:663)
        at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:91)
        ... 41 more
","RHEL4 Update 4 ES x86_64
Sun JDK 1.4.2_08",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-03-06 11:47:50.589,,,false,,,,,,,,,,,,,,,,,84468,,,Tue Mar 06 11:47:50 UTC 2007,,,,,,,,"0|i18127:",254974,,,,,,,,,,,,,,,,,,,"06/Mar/07 00:23;ygrignon;I reproduce the same crash using new URI() in a test program. Looking at the RFC an underscore is in fact an invalid character in a host name. However, Linux lets you name a machine with underscores in the host name, so whether or not ActiveMQ should gracefully handle this case is still a relevant question. Also, the config file used to generate this issue was using localhost not the host name but the connector initialization code would still resolve it to the fully qualified host name of the machine resulting in the stack trace above.","06/Mar/07 11:47;jstrachan;FWIW a workaround is probably to use the IP address in the config file (its only when using the localhost that we try and resolve it).

I've added a fix to trunk to work around this where if the URI is invalid we try to use the IP address in the URI instead. Let us know if that doesn't fix it and we can reopen this issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Warning when using  multicast discoveryUri,AMQ-1089,12481912,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,brandtal,brandtal,05/Dec/06 15:04,26/Feb/07 18:23,30/Jan/20 16:57,06/Dec/06 10:28,4.0.1,4.0.2,,,,,4.1.1,5.0.0,,,,,,0,"When using a transportconnector with a multicast discoveryagent a warning is shown.

config: <transportConnector  name=""default"" uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/>

WARN  MulticastDiscoveryAgent          -brokerName not set

When the transportconnector is started the MulticastDiscoveryAgent is created if it does not exist,
but the brokerName for this MulticastDiscoveryAgent is not set by the transportconnector.

See the code and the suggested modification to prevent this warning:

org.apache.activemq.broker.TransportConnector.java

<snip>
public void start() throws Exception {
        getServer().start();
        DiscoveryAgent da = getDiscoveryAgent();
        if( da!=null ) {
            da.registerService(getConnectUri().toString());
            //suggested modification start
            if(da.getBrokerName() == null || da.getBrokerName().length == 0) {
                   da.setBrokerName(this.getBroker().getBrokerName());
            }
            //suggested modification end
            da.start();
        }
        this.statusDector.start();
        log.info(""Connector ""+getName()+"" Started"");
    }
<snap>",reproduced on Windows XP Pro and SuSE Linux Enterprise 9.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-12-06 10:28:14.0,,,false,,,,,,,,,,,,,,,,,84364,,,Wed Dec 06 11:02:53 UTC 2006,,,,Patch Available,,,,"0|i180uv:",254941,,,,,,,,,,,,,,,,,,,"06/Dec/06 10:28;jlim;i believe this has already been resolved in the 4.2 trunk (r464216)","06/Dec/06 11:02;jlim;btw, this  issue has also been resolved  in the 4.1.0  release",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransportConnector get duplicated when used with JMX,AMQ-1029,12481908,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,vasquez,vasquez,07/Nov/06 14:17,26/Feb/07 18:23,30/Jan/20 16:57,21/Nov/06 08:19,4.0.2,,,,,,4.1.1,5.0.0,,Broker,,,,0,"The BrokerService keeps the configured TransportConnectors in a list called transportConnectors. In startAllConnectors, the list is traversed and each connector is started through startTransportConnector(). This method checks if JMX is configured, and if so, it called connector.asManagedConnector() which returns a new instance of a TransportConnector. This instance is started.

But in the  transportConnectors list of BrokerService, the old, unstarted object is still existent. Since a TransportConnector starts a TransportServiceDetector thread, the old, unstarted instance contains a TSD that is not active. But the started TSD isn't referenced anymore.

On shutdown, the old, unstarted TC and subsequently TSD are stopped. The ""lost"" instance can't be touched anymore.

My patch does this: During spin-up, startTransportConnector() returns the instance that is started. The started instances are collected in an arraylist, this list replaces transportConnectors after startup.

Thanks to jstrachan for being patient on irc.
","Linux, ActiveMQ broker in a custom servlet, running on Tomcat 5.5.",,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/06 14:17;vasquez;ASF.LICENSE.NOT.GRANTED--tc-jmx-patch;https://issues.apache.org/jira/secure/attachment/12460612/ASF.LICENSE.NOT.GRANTED--tc-jmx-patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-11-21 08:19:57.0,,,false,,,,,,,,,,,,,,,,,84425,,,Wed Nov 22 07:44:59 UTC 2006,,,,Patch Available,,,,"0|i180qf:",254921,,,,,,,,,,,,,,,,,,,"21/Nov/06 08:19;jlim;Thanks! 

patch  applied to :
trunk : 477570
4.1 branch: 477571

Btw,  I just added a bit of code to clear the transportConnectors list before replacing it with the started instances  :)  
 ie.           .....
                this.transportConnectors.clear();
            	setTransportConnectors(al);
               ....","22/Nov/06 07:32;vasquez;thanks. Will it also be applied to 4.0.2 (which I'm still using currently)?","22/Nov/06 07:44;jlim;sorry about that, forgot to apply it on the 4.0 branch: 

it's applied at 4.0 branch : r478063",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RoundRobinDispatchPolicy divides uneven,AMQ-1006,12481899,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,hbruch,hbruch,26/Oct/06 13:13,26/Feb/07 18:23,30/Jan/20 16:57,20/Nov/06 06:23,4.0.2,,,,,,4.1.1,5.1.0,,Broker,,,,0,"In case that multiple consumers with different message selectors are registered for the same destination, messages are not evenly divided.

To reproduce, register 2 consumers for prio 9, one for prio 4. Of 1000 messages with prio 9 both prio 9 consumers should receive 500. Actually, the first consumer gets 667 messages, the second 333.

This is caused by the consumer shifting strategy in the RoundRobinDispatchPolicy which rotates consumers, even if they did not match.

The attached file contains a testcase illustrating the behavior and a patch for RoundRobinDispatchPolicy, that shifts the first matching consumer instead of the first.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/06 13:13;hbruch;ASF.LICENSE.NOT.GRANTED--RoundRobinDispatchPolicyDivide.patch;https://issues.apache.org/jira/secure/attachment/12460614/ASF.LICENSE.NOT.GRANTED--RoundRobinDispatchPolicyDivide.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-11-20 06:23:35.0,,,false,,,,,,,,,,,,,,,,,84430,,,Mon Nov 20 06:23:35 UTC 2006,,,,Patch Available,,,,"0|i180sv:",254932,,,,,,,,,,,,,,,,,,,"20/Nov/06 06:23;jlim;Thanks! 

patch applied to  : 

trunk:  477066
4.1 branch:  477068",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-console only has limited classpath/extensions directory functionality,AMQ-1096,12481073,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,aco,jheitmann,jheitmann,12/Dec/06 21:03,11/Jan/07 09:57,30/Jan/20 16:57,11/Jan/07 09:57,4.1.0,,,,,,,,,Broker,,,,0,"Reproduction:

1) Untar the binary distribution.
2) Run bin/activemq and note what logging looks like (you should see output to the console)
3) Stop the broker.
4) mv conf/log4j.properties foo/log4j.properties
5) export CLASSPATH=/path/to/foo/
6) export ACTIVEMQ_CLASSPATH=/path/to/foo/
7) Run './activemq --extdir /path/to/foo

Now note there is no log output even though there are 3 different attempts to set the proper directory. This is a regression from 4.0 to 4.1.

There are 2 root problems in Main.java. First, 'classpaths' doesn't actually pull from the classpath. The only thing that ever gets added to classpaths is the hard coded 'conf' directory. Second, directories specified with --extdir have jars and zips added, but not the directories themselves.

The attached patch totally removes the vestigial classpaths, and fixes extdir to pull in directories. This means that step 7 now works, but steps 5 and 6 are still useless. I like having only one way to specify classpath, but I could see others wanting the CLASSPATH and ACTIVEMQ_CLASSPATH settings to work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/06 21:03;jheitmann;ASF.LICENSE.NOT.GRANTED--logpatch.diff;https://issues.apache.org/jira/secure/attachment/12460731/ASF.LICENSE.NOT.GRANTED--logpatch.diff",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2007-01-11 09:57:58.53,,,false,,,,,,,,,,,,,,,,,84491,,,Thu Jan 11 09:57:58 UTC 2007,,,,Patch Available,,,,"0|i180uf:",254939,Regression,,,,,,,,,,,,,,,,,,"11/Jan/07 09:57;aco;Fix added to r495172

Added a activemq.classpath system property to extend the classpath of activemq

By default it contains activemq.home/conf.

It can be extended by specifying additional paths via the ACTIVEMQ_CLASSPATH environment variable separated by semi-colons.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConsumer can catch an error in dispatch but logs it as a warning,AMQ-1113,12481901,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,rajdavies,rajdavies,29/Dec/06 09:26,29/Dec/06 09:29,30/Jan/20 16:57,29/Dec/06 09:29,,,,,,,5.0.0,,,JMS client,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,95680,,,Fri Dec 29 09:29:09 UTC 2006,,,,,,,,"0|i180yn:",254958,,,,,,,,,,,,,,,,,,,"29/Dec/06 09:29;rajdavies;Fixed by SVN revision 490967",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when using MasterConnector and specifying the broker name with space in it.,AMQ-841,12481771,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,rwafer,rwafer,24/Jul/06 14:56,28/Dec/06 20:30,30/Jan/20 16:57,28/Dec/06 20:30,4.0.1,,,,,,5.0.0,,,Broker,,,,0,"I've got a hard time trying to figure out why I got a null pointer trying to use the Master/slave configuration for ActiveMQ. 

Finnally by looking at the code I've saw the following:
In BrokerService.java 
public void initializeMasterConnector(URI remoteURI) throws Exception { 
...
URI localURI = getVmConnectorURI();
...
}

public URI getVmConnectorURI() {
        if (vmConnectorURI == null) {
            try {
                vmConnectorURI = new URI(""vm://"" + getBrokerName());
            }
            catch (URISyntaxException e) {
            }
        }
        return vmConnectorURI;
}

My problem is that I've specified a broker name with space in it  ""Slave Broker"". So I the new URI() here throw a URISyntaxException that was badly absorb. And this leads to a null pointer at line:159 of TransportFactory.java.
   String scheme = location.getScheme(); when location is null du to the previous exception.

The link between the error and the cause was not clear at the first sigth. 

A precondition on the setBrokerName could do the job.","Linux, jdk1.5.0_06",rwafer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-11-23 10:35:32.0,,,false,,,,,,,,,,,,,,,,,84398,,,Thu Dec 28 20:30:45 UTC 2006,,,,,,,,"0|i17zyf:",254795,,,,,,,,,,,,,,,,,,,"23/Nov/06 10:35;marlonsantos;Hi, 
  
     i had seen that the problem was when the URISyntaxException was catched, there was no actual value given to the vmConnectorURI so it stays null. I can create a patch for this but i dont know which is the best approach, because of some issues.

a) shutdown the broker gracefully and display a warn sign that the broker is shutting down because of invalid brokername
b) trim the starting and ending space, and change spaces in - between the brokername. 

","23/Nov/06 10:40;marlonsantos;It also happens with other broker configurations and present in the windows xp os..","28/Dec/06 20:30;rajdavies;Fixed in SVN revision 490786",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
consumer queue is empty when running requester,AMQ-1057,12481847,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jlim,marlonsantos,marlonsantos,17/Nov/06 01:56,17/Nov/06 14:09,30/Jan/20 16:57,17/Nov/06 06:24,4.1.0,,,,,,5.0.0,,,,,,,0,"
    consumer queue is empty when running requester, producer and consumer. The reply destination also results into an empty string.  ",,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,"17/Nov/06 01:56;marlonsantos;ASF.LICENSE.NOT.GRANTED--RequesterTool.java;https://issues.apache.org/jira/secure/attachment/12460711/ASF.LICENSE.NOT.GRANTED--RequesterTool.java","17/Nov/06 04:09;kgallo;ConsumerTool.patch;https://issues.apache.org/jira/secure/attachment/12460581/ConsumerTool.patch","17/Nov/06 05:00;marlonsantos;RequesterTool.patch;https://issues.apache.org/jira/secure/attachment/12460558/RequesterTool.patch",,,,,,3.0,,,,,,,,,,,,,,,,,,,,2006-11-17 04:09:33.0,,,false,,,,,,,,,,,,,,,,,84496,,,Fri Nov 17 14:09:05 UTC 2006,,,,Patch Available,,,,"0|i180n3:",254906,,,,,,,,,,,,,,,,,,,"17/Nov/06 04:09;kgallo;changed 
    Session session = connection.createSession(transacted, ackMode); 
to
    session = connection.createSession(transacted, ackMode); 

so requester-consumer example works.","17/Nov/06 05:00;marlonsantos;patch for the requester tool.

Changes:

                        if (topic) {
				destination = session.createTopic(subject);
				if( replySubject==null )
					replyDest = session.createTemporaryTopic();
				else
					replyDest = session.createTopic(replySubject);
			} else {
				destination = session.createQueue(subject);
				if( replySubject==null)
					replyDest = session.createTemporaryQueue();
				else
					replyDest = session.createQueue(replySubject);
			}
             

                        changed to:

                        if (topic) {
				destination = session.createTopic(subject);
				if( replySubject==null || replySubject.equals("""") )
					replyDest = session.createTemporaryTopic();
				else
					replyDest = session.createTopic(replySubject);
			} else {
				destination = session.createQueue(subject);
				if( replySubject==null || replySubject.equals("""") )
					replyDest = session.createTemporaryQueue();
				else
					replyDest = session.createQueue(replySubject);
			}
                  
","17/Nov/06 06:24;jlim;
applied in revision : 476058 

thanks Ken and marlon!","17/Nov/06 14:09;chirino;Also applied to 4.1 branch revision: 476144",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"createConnector=""false"" has no effect on Tiger",AMQ-950,12483915,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,bruyeron@fullsix.com,bruyeron@fullsix.com,02/Oct/06 12:11,03/Oct/06 10:12,30/Jan/20 16:57,03/Oct/06 08:37,4.1.0,,,,,,4.1.0,,,Broker,,,,0,"
On Tiger, activemq always creates a rmi connector on port 1099 no matter what I do with -Djavax.management... and <managementContext/>
In particular, setting createConnector=""false"" should prevent AMQ from setting up its own connector, but it does not.

The problem is in the findMBeanServer() method:
            if (result == null && createMBeanServer) {
                result = createMBeanServer();
            }
            else {
                createConnector(result);
            }

result is not null on Tiger with useJmx=""true"", and createConnector is not protected by if(createConnector) like it is on the non-Tiger flow.
The fix (I think) is simply to do this:
            if (result == null && createMBeanServer) {
                result = createMBeanServer();
            }
            else {
                if(createConnector){
                      createConnector(result);
                }
            }",JDK 1.5.0_08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-10-03 08:37:19.0,,,false,,,,,,,,,,,,,,,,,84505,,,Tue Oct 03 10:12:08 UTC 2006,,,,,,,,"0|i180kv:",254896,,,,,,,,,,,,,,,,,,,"03/Oct/06 08:37;jstrachan;Patch applied - many thanks Renaud.

BTW could you double check my version of your patch works - I only create a connector if result != null and createConnector is true.

","03/Oct/06 09:59;bruyeron@fullsix.com;
Hi James,

this looks correct to me, however I can't play with the latest 4.1 snapshots because they break with servicemix-3.0 final
(something wrong with jencks and the RA). It broke in the last 3 weeks (snapshot from 20060830 works).","03/Oct/06 10:12;bruyeron@fullsix.com;
me again,

sorry, I meant to say that I plan to look into this issue with the latest snapshots - I don't have time right now but it is on my todo to provide more info on the problem I am seeing ;-)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jaas and jdbm twice on project.xml,AMQ-945,12481719,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jlim,gabrielk,gabrielk,27/Sep/06 20:30,29/Sep/06 02:49,30/Jan/20 16:57,29/Sep/06 02:49,4.0.1,4.0.2,,,,,4.0,,,,,,,0,"In project.xml of active-core : you find activemq-jaas twice
One with a propertie rar.bundle = true
One without taht propertie

And in actuvemq-jaas/project.xml You find two jdbm

",,,,,,,,,,,,,,,,,,,1200,1200,,0%,1200,1200,,,,,"27/Sep/06 20:30;gabrielk;ASF.LICENSE.NOT.GRANTED--project.xml;https://issues.apache.org/jira/secure/attachment/12460607/ASF.LICENSE.NOT.GRANTED--project.xml","27/Sep/06 20:30;gabrielk;ASF.LICENSE.NOT.GRANTED--project.xml;https://issues.apache.org/jira/secure/attachment/12460653/ASF.LICENSE.NOT.GRANTED--project.xml",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-09-29 02:49:21.0,,,false,,,,,,,,,,,,,,,,,84378,,,Fri Sep 29 02:49:21 UTC 2006,,,,,,,,"0|i180lj:",254899,,,,,,,,,,,,,,,,,,,"27/Sep/06 20:31;gabrielk;Here I attached the 2 ""fixed"" projects.xml 
The activeqm-code/project.xml includes the <resource-bundle>true</resource-bundle> propertie","29/Sep/06 02:49;jlim;Thanks Gabriel! Applied the fix on the 4.0 branch  (https://svn.apache.org/repos/asf/incubator/activemq/branches/activemq-4.0/)  

revison : 451092",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMSXUserId not set when using a JAAS login module,AMQ-940,12481801,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jstrachan,kellyc,kellyc,25/Sep/06 18:30,26/Sep/06 13:29,30/Jan/20 16:57,26/Sep/06 13:29,4.1.0,,,,,,4.1.0,,,,,,,0,"The JMSXUserID field is not set when using a JAAS login module.

A unit test that fails and a bugfix are attached.","Linux, JDK 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/06 18:30;kellyc;ASF.LICENSE.NOT.GRANTED--JMSXUserID-jaas.patch;https://issues.apache.org/jira/secure/attachment/12460853/ASF.LICENSE.NOT.GRANTED--JMSXUserID-jaas.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-09-26 13:29:32.0,,,false,,,,,,,,,,,,,,,,,84507,,,Tue Sep 26 13:29:32 UTC 2006,,,,Patch Available,,,,"0|i180lz:",254901,,,,,,,,,,,,,,,,,,,"26/Sep/06 13:29;jstrachan;Patch applied - many thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InterruptedException handling tweaks,AMQ-891,12481787,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,chirino,jheitmann,jheitmann,22/Aug/06 07:50,04/Sep/06 05:47,30/Jan/20 16:57,04/Sep/06 05:47,4.0.2,,,,,,4.0.2,4.1.0,,Broker,,,,0,"There were a few spots where the broker was masking the interrupt state after handling an InterruptedException. This is a lint pass to clean some of that up. I learned after I made this patch that it's actually slightly better stylistically to call Thread.interrupt() instead of Thread.currentThread().interrupt() since it's static and the interrupt state is global(ish), but this is the version we've tested.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/06 07:50;jheitmann;ASF.LICENSE.NOT.GRANTED--interrupted.patch.gz;https://issues.apache.org/jira/secure/attachment/12460846/ASF.LICENSE.NOT.GRANTED--interrupted.patch.gz",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-08-25 15:42:48.0,,,false,,,,,,,,,,,,,,,,,84443,,,Mon Sep 04 05:47:52 UTC 2006,,,,Patch Available,,,,"0|i1808f:",254840,,,,,,,,,,,,,,,,,,,"25/Aug/06 15:42;jstrachan;Do you wanna handle this one - I seem to remember you doing some work on the interupted stuff?","04/Sep/06 05:47;chirino;Great patch!  Applied to trunk rev 439886 and to 4.0 branch rev 439941",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX purge() fails with a ConcurrentModificationException,AMQ-890,12481701,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jheitmann,jheitmann,22/Aug/06 07:33,25/Aug/06 11:49,30/Jan/20 16:57,25/Aug/06 11:49,4.0.2,,,,,,4.1.0,,,Broker,,,,0,I think this must be an issue running under jdk 1.5 only. It shows up on Mac OS X and Linux 1.5 jvms. Remove and gc() were stumbling over each other and invalidating the iterator. I broke them apart a bit to avoid the exception. Thanks to Alan Robbins for help tracking this down.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/06 07:33;jheitmann;ASF.LICENSE.NOT.GRANTED--purge.patch.gz;https://issues.apache.org/jira/secure/attachment/12460814/ASF.LICENSE.NOT.GRANTED--purge.patch.gz",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-08-25 11:49:18.0,,,false,,,,,,,,,,,,,,,,,84444,,,Fri Aug 25 11:49:18 UTC 2006,,,,Patch Available,,,,"0|i1808n:",254841,,,,,,,,,,,,,,,,,,,"25/Aug/06 11:49;jstrachan;Patch applied - many thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
consumer.dispatchAsync defaults to false,AMQ-770,12481670,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,yaussy,yaussy,22/Jun/06 22:28,09/Aug/06 08:52,30/Jan/20 16:57,09/Aug/06 08:52,4.0,4.0.1,,,,,4.1.0,,,JMS client,,,,0,"Seems like there was a change between 4.0-RC3 and incubator-4.0(.1) with regards to the default value for the destination option ""consumer.dispatchAsync"".  According to the web documentation for destination options, as well as behavior in RC3, the default is true.  However, it looks like incubator-4.0(.1) defaults to false.  I have to explicitly give the consumer.dispatchAsync=true for a destination option, in order to get async dispatch in the Broker.

Is this a code bug, or documentation bug?
",,yaussy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-08-09 08:52:13.0,,,false,,,,,,,,,,,,,,,,,84333,,,Wed Aug 09 08:52:13 UTC 2006,,,,,,,,"0|i17zt3:",254771,,,,,,,,,,,,,,,,,,,"09/Aug/06 08:52;jstrachan;This was a documentation error. We default to false to minimise the number of threads used by default.

http://activemq.org/site/destination-options.html

It would be nice to be able to overload things like this on the broker side maybe",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error while using management interface on messages with binary data.,AMQ-665,12481236,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jlim,bmitchener,bmitchener,28/Mar/06 11:17,02/Jul/06 23:49,30/Jan/20 16:57,02/Jul/06 23:49,4.0,,,,,,4.0.2,4.1.0,,,,,,0,"I'm sending binary data through STOMP (with a content-length header).  When I go into jconsole and try to use 'browse' to view the message, I get this exception on the server side:

javax.management.openmbean.OpenDataException: Argument's element itemValues[7]=""[B@40e1f305"" is not a valid value for this item (itemName=BodyPreview,itemType=javax.management.openmbean.ArrayType(name=[Ljava.lang.Byte;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.Byte))).
        at javax.management.openmbean.CompositeDataSupport.<init>(CompositeDataSupport.java:145)
        at javax.management.openmbean.CompositeDataSupport.<init>(CompositeDataSupport.java:190)
        at org.apache.activemq.broker.jmx.OpenTypeSupport.convert(OpenTypeSupport.java:253)
        at org.apache.activemq.broker.jmx.DestinationView.browse(DestinationView.java:91)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at com.sun.jmx.mbeanserver.StandardMetaDataImpl.invoke(StandardMetaDataImpl.java:414)
        at com.sun.jmx.mbeanserver.MetaDataImpl.invoke(MetaDataImpl.java:220)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:815)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:784)
        at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1408)
        at javax.management.remote.rmi.RMIConnectionImpl.access$100(RMIConnectionImpl.java:81)
        at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1245)
        at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1341)
        at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:782)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:294)
        at sun.rmi.transport.Transport$1.run(Transport.java:153)
        at java.security.AccessController.doPrivileged(Native Method)
        at sun.rmi.transport.Transport.serviceCall(Transport.java:149)
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:460)
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:701)
        at java.lang.Thread.run(Thread.java:595) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-13 02:44:43.0,,,false,,,,,,,,,,,,,,,,,49292,,,Sun Jul 02 23:49:56 UTC 2006,,,,,,,,"0|i17zdb:",254700,,,,,,,,,,,,,,,,,,,"13/Jun/06 02:44;chirino;Jonas,

If you get a chance could you check to see if you can reproduce this bug?","16/Jun/06 00:11;chirino;A test case for this would be great!","02/Jul/06 23:49;chirino;ByteMessages were not being properly converted to OpenType objects.

Fix in head rev 418618 and 4.0 branch rev 418619.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq.dtd has duplicate lines,AMQ-559,12481437,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jbeattie,jbeattie,14/Feb/06 17:45,15/Jun/06 10:40,30/Jan/20 16:57,15/Jun/06 10:40,3.2.2,,,,,,3.2.5,,,Broker,,,,0,"The file org/activemq/activemq.dtd in activemq-core-3.2.2.jar contains some duplicate lines.  My XML parser (OC4J) 
complains about these.  Here are the duplicated lines:

<!--
	Default values for all bean definitions. Can be overridden at
	the ""bean"" level. See those attribute definitions for details.
-->
<!ATTLIST beans default-lazy-init (true | false) ""false"">
<!ATTLIST beans default-dependency-check (none | objects | simple | all) ""none"">
<!ATTLIST beans default-autowire (no | byName | byType | constructor | autodetect) ""no"">

These lines appear starting a line 21 and line 539.  Removing the second set of duplicate lines should resolve the issue.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-06-15 10:40:48.0,,,false,,,,,,,,,,,,,,,,,49204,,,Thu Jun 15 10:40:48 UTC 2006,,,,,,,,"0|i17z6v:",254671,,,,,,,,,,,,,,,,,,,"15/Jun/06 10:40;chirino;Thanks for info.. fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
missing quotes in activemq.bat,AMQ-706,12481667,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,aco,bradfritz,bradfritz,08/May/06 21:43,18/May/06 13:23,30/Jan/20 16:57,18/May/06 13:23,4.0 RC2,,,,,,4.1.0,,,,,,,0,"The argument following ""-jar"" in activemq.bat is not quoted.  If %ACTIVEMQ_HOME% contains
spaces, startup will fail with an error like:

  Unable to access jarfile C:\Program

I haven't tested, but the same bug may apply to the other batch files and the unix shell scripts.

Attached is a trival patch to add the quotes to activemq.bat.

--Brad
",Windows 2000,bradfritz,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/May/06 21:43;bradfritz;ASF.LICENSE.NOT.GRANTED--activemq_bat_quotes.patch;https://issues.apache.org/jira/secure/attachment/12460652/ASF.LICENSE.NOT.GRANTED--activemq_bat_quotes.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-05-18 13:23:11.0,,,false,,,,,,,,,,,,,,,,,84296,,,Thu May 18 13:23:11 UTC 2006,,,,,,,,"0|i17zqv:",254761,,,,,,,,,,,,,,,,,,,"18/May/06 13:23;aco;done. Thanks Brad!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQActivationSpec does not validate that DestinationType is set to Topic when SubscriptionDurability is set to Durable,AMQ-705,12481682,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,chirino,johnrsisson,johnrsisson,04/May/06 14:40,04/May/06 20:42,30/Jan/20 16:57,04/May/06 20:42,3.2.1,3.2.2,3.2.3,4.0 M4,4.0 RC2,4.0 RC3,3.2.4,4.0,,JCA Container,,,,0,"Found problem when using Geronimo with an incorrectly configured EJB 2.0 MDB that has:

         <message-driven-destination>
            <destination-type>javax.jms.Queue</destination-type>
            <subscription-durability>Durable</subscription-durability>
         </message-driven-destination>

The above config doesn't make sense since subscription-durability is only applicable for Topics.

This resulted in a message that didn't directly point to the problem:

C:\test>java  -jar geronimo-1.1-SNAPSHOT\bin\deployer.jar --user system --password manager deploy my.ear myplan.xml
    Error: Unable to distribute my.ear: JMS settings for
    message-driven bean FooMDBean are not valid:
    Invalid settings: clientId must be set since durable subscription  was requested. subscriptionName must be set since durable     subscription was requested. 

With the patch applied, the error will now be:

C:\test>java  -jar geronimo-1.1-SNAPSHOT\bin\deployer.jar --user system --password manager deploy my.ear wmyplan.xml
    Error: Unable to distribute my.ear: JMS settings for
    message-driven bean FooMDBean are not valid:
    Invalid settings: subscriptionDurability cannot be set to: Durable  when destinationType is set to javax.jms.Queue as it is only valid when destinationType is set to javax.jms.Topic. clientId must be set since durable subscription was requested. subscriptionName must be set since durable subscription was requested.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/May/06 17:06;johnrsisson;AMQ-705-activemq-3.patch;https://issues.apache.org/jira/secure/attachment/12460796/AMQ-705-activemq-3.patch","04/May/06 17:06;johnrsisson;AMQ-705-incubator-trunk.patch;https://issues.apache.org/jira/secure/attachment/12460786/AMQ-705-incubator-trunk.patch",,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2006-05-04 20:42:14.0,,,false,,,,,,,,,,,,,,,,,84274,,,Thu May 04 20:42:14 UTC 2006,,,,,,,,"0|i17zr3:",254762,,,,,,,,,,,,,,,,,,,"04/May/06 14:43;johnrsisson;Attached patch for review for activemq-3 branch.","04/May/06 14:44;johnrsisson;Attached patch for review for incubator trunk.","04/May/06 20:42;chirino;Great patch!  Applied!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CMS C++ Client - bug handling bytes messages,AMQ-685,12481631,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,nmittler,nmittler,10/Apr/06 19:46,24/Apr/06 05:13,30/Jan/20 16:57,24/Apr/06 05:13,4.0 RC2,,,,,,,,,JMS client,,,,0,The content-length property isn't used properly when reading bytes messages,any,,,,,,,,,,,,,,,,,,172800,172800,,0%,172800,172800,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49309,,,Mon Apr 24 05:13:39 UTC 2006,,,,,,,,"0|i0ttm7:",172107,,,,,,,,,,,,,,,,,,,"24/Apr/06 05:13;nmittler;CMS now properly handles bytes messages.  Tested against the April 19th incubator snapshot of the broker.  Also updated the test program to send/receive bytes and text messages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup Failed When ActiveMQConnection.close() is called,AMQ-623,12481586,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,cloudor,cloudor,09/Mar/06 06:02,17/Mar/06 13:27,30/Jan/20 16:57,17/Mar/06 13:27,4.0 M4,,,,,,4.0 RC2,,,Broker,,,,0,"I got exceptions from time to time when I close connections,

---------------------------------------------------------------------------------------------------------------------------------------------
2006-3-9 11:42:11 org.apache.activemq.ActiveMQConnection transportFailed
Warn: Cleanup failed
javax.jms.JMSException: Cannot write to the stream any more it has already been closed
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:57)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1043)
	at org.apache.activemq.ActiveMQConnection.cleanup(ActiveMQConnection.java:1191)
	at org.apache.activemq.ActiveMQConnection.transportFailed(ActiveMQConnection.java:1585)
	at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1338)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:102)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:102)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:102)
	at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:90)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:149)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.io.EOFException: Cannot write to the stream any more it has already been closed
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.checkClosed(TcpBufferedOutputStream.java:131)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:69)
	at java.io.DataOutputStream.writeInt(Unknown Source)
	at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:169)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:117)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:90)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:65)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1041)
	... 9 more
---------------------------------------------------------------------------------------------------------------------------------------------

It seems that things happened in this order:

1. On client, in user thread, connection.close() is called.

2. On server, shutdown info is received  and socket is closed.

3. On client, in consumer thread, TcpTransport got an EOFException because socket is closed before TcpTransport.closed is set to true.

4. On client, ActiveMQConnection.cleanup() is called becauseof EOFException happend in 3. But isConnectionInfoSentToBroker is still true, another Exception is raised when sending packet to broker through the already closed socket.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-17 13:27:54.0,,,false,,,,,,,,,,,,,,,,,49257,,,Fri Mar 17 13:27:54 UTC 2006,,,,,,,,"0|i17zhz:",254721,,,,,,,,,,,,,,,,,,,"17/Mar/06 13:27;jstrachan;I've just patched SVN HEAD to fix this issue AFAIK - any chance you could try out tomorrows SNAPSHOT build (or the latest in subversion) to see if this fixes your issue please?

If not let us know and we'll reopen this issue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TEST org.apache.activemq.usecases.MultiBrokersMultiClientsTest FAILED,AMQ-473,12481485,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,chirino,chirino,10/Jan/06 19:46,06/Mar/06 18:16,30/Jan/20 16:57,06/Mar/06 18:16,4.0,,,,,,4.0 RC2,,,Test Cases,,,,0,Disabling until fixed.,OS X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-06 18:16:02.0,,,false,,,,,,,,,,,,,,,,,49145,,,Mon Mar 06 18:16:02 UTC 2006,,,,,,,,"0|i17z07:",254641,,,,,,,,,,,,,,,,,,,"15/Feb/06 17:55;chirino;This test just hangs on OS X","06/Mar/06 18:16;rajdavies;Noe fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TEST org.apache.activemq.transport.TopicClusterTest FAILED,AMQ-472,12481593,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,rajdavies,chirino,chirino,10/Jan/06 19:44,06/Mar/06 18:14,30/Jan/20 16:57,06/Mar/06 18:14,4.0,,,,,,4.0 RC2,,,Test Cases,,,,0,Disabling until fixed.,OS X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-03-06 18:14:22.0,,,false,,,,,,,,,,,,,,,,,49144,,,Mon Mar 06 18:14:22 UTC 2006,,,,,,,,"0|i17z0f:",254642,,,,,,,,,,,,,,,,,,,"06/Mar/06 18:14;rajdavies;Fixed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker memory leak during creation/deletion of temporary queues,AMQ-366,12481483,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,dsemeniuk,dsemeniuk,20/Sep/05 09:34,16/Feb/06 11:44,30/Jan/20 16:57,16/Feb/06 11:44,3.1,,,,,,4.0 M4,,,Broker,,,,0,"This code crashes broker sooner or later regardless of the memory given to the broker. Broker run with 1Mb of heap crashes after ~2850 attempts (processed in several seconds only).

        ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""tcp://192.168.0.2:62002"");
        QueueConnection connection = connectionFactory.createQueueConnection();
        connection.start();
        QueueSession session = connection.createQueueSession(true, Session.AUTO_ACKNOWLEDGE);
        int n = 1;
        while (true) {
            System.out.println(""attempt "" + n++);
            TemporaryQueue temporaryQueue = session.createTemporaryQueue();
            temporaryQueue.delete();
        }

",WinXP / JDK 1.4.2,dsemeniuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-11-16 12:28:38.0,,,false,,,,,,,,,,,,,,,,,49066,,,Tue Nov 22 14:02:03 UTC 2005,,,,,,,,"0|i14qgn:",235752,,,,,,,,,,,,,,,,,,,"20/Sep/05 09:36;dsemeniuk;The crash is ""java.lang.OutOfMemory"" written to the console and further malfunction.","16/Nov/05 12:28;jstrachan;I've added a test case to try reproduce it - see CreateLotsOfTemporaryQueuesTest.

You can try it out in the assembly module...

maven test-create-temp-queues -Dcount=30000

Making about 5000 or so seem to run out of heap when using a max heap of 10Mb.
","16/Nov/05 12:48;jstrachan;Note that temporary destinations should always be reused and not created and destroyed in a tight loop; so I've downgraded this to a minor issue.

If you are using temporary destinations for request/response stuff, always use 1 destination & consumer on it, then use a correlationID on the messages rather than creating large numbers of temporary destinations in a tight loop","16/Nov/05 19:36;jstrachan;We have found one or two memory leaks that this test case highlighted. I've just fixed one in DestinationMap which is in 4.0 now - we should have the others licked real soon too...","22/Nov/05 14:02;chirino;Fixed the DestinationStatistics memory leak too.  All leaks should now be gone.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lost terminate JVM from remote location with version 4.0,AMQ-418,12481539,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,dennis@bevocal.com,dennis@bevocal.com,22/Nov/05 01:56,16/Feb/06 11:41,30/Jan/20 16:57,16/Feb/06 11:41,4.0,,,,,,4.0 M4,,,Broker,,,,0,"I think I can answer my own question.  The test of the command should be in the ControlCommand.visit() method.  The CommandVisitor interface of implemented by the TransportConnection already has a processShutdown() method, but I don't think this was meant for JVM level termination.

Dennis Cook wrote:

> Okay I thought I had figured out how to cause a broker shutdown.
>
> I found the onControlCommand method in the ActiveMQConnection class. Great figured just asyncSendPacket() a ControlCommand with ""shutdown"" as command.
>
> First problem found and fixed was command member of ControlCommand was not marshalled.  Next found that the ActiveMQConnection is not part of the filter chain on the broker side.
>
> It seems that an anonymous TransportListener is created, in the TransportConnection contructor, to perform the dispatch. On the surface this seems to me like the appropriate place to replicate the onControlCommand method that I found in the ActiveMQConnection class.
>
> Is the the correct approach or am I off base here?
>
>
>
> Dennis Cook wrote:
>
>> I had added the terminateBrokerVM() method to ActiveMQConnetion in v3 until there was a better way to terminate, from a remote location, the JVM running a broker.  This has been removed from v4 source, but still I cannot find a way to tell the broker JVM to shutdown cleanly.
>>
>> What is the intention for this this vesion? Is it intended that this be accomplished via JMX? I have already tried JConsole and issued STOP on both the broker and connector objects, but the JVM did not stop.
>>
","w2k, jdk1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49104,,,Tue Nov 22 02:01:23 UTC 2005,,,,,,,,"0|i17yqf:",254597,,,,,,,,,,,,,,,,,,,"22/Nov/05 02:01;dennis@bevocal.com;Using the ActiveMQConnectcion.asyncSendPacket (), send a ControlCommand message wtihthe command value set to ""shutdown"".  This will trigger the System.exit(0).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection name (JMX) should reflect clientid,AMQ-420,12481553,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jstrachan,dennis@bevocal.com,dennis@bevocal.com,22/Nov/05 02:20,16/Feb/06 11:39,30/Jan/20 16:57,16/Feb/06 11:39,4.0,,,,,,4.0 M4,,,Connector,,,,0,Each client connection is established the ManagedTransportConnector class assign a sequential connection id.  It would be more helpful if the clientid supplies by the client were used as the id.,"w2k, jdk1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-12-05 11:21:15.0,,,false,,,,,,,,,,,,,,,,,49106,,,Mon Dec 05 19:31:26 UTC 2005,,,,,,,,"0|i17ypz:",254595,,,,,,,,,,,,,,,,,,,"05/Dec/05 11:21;jstrachan;I've added a fix for this into SVN HEAD - any chance you could try it out; we can reopen this issue if you've still got issues with it?","05/Dec/05 19:31;dennis@bevocal.com;Looks good",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stopping a PooledConnectionFactory leaves JmsSessionDispatcher threads running,AMQ-393,12481474,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jvolkman,jvolkman,25/Oct/05 17:34,16/Feb/06 11:30,30/Jan/20 16:57,05/Dec/05 09:55,3.2,,,,,,4.0 M4,,,JMS client,,,,0,"When a PooledConnectionFactory is stopped, ObjectPools created by the SessionPools aren't closed, and therefore PooledSessions remain running.  Since the underlying ActiveMQSession isn't actually closed when the PooledSession is closed, the ActiveMQSessionExecutor and its worker threads are never stopped.  I added a method to PooledConnection called ""destroyPools"" which will close the ObjectPools associated with a connection.  The differences are pasted below.

diff oldpool/PooledConnection.java pool/PooledConnection.java
21a22
> import java.util.Iterator;
154a156,163
>     protected void destroyPools() {
>         Iterator i = cache.values().iterator();
>         while (i.hasNext()) {
>             SessionPool pool = (SessionPool) i.next();
>             i.remove();
>             pool.close();
>         }
>     }
diff oldpool/PooledConnectionFactory.java pool/PooledConnectionFactory.java
95a96
>             connection.destroyPools();
diff oldpool/SessionPool.java pool/SessionPool.java
98c98,104
<
---
>     protected void close() {
>         if (sessionPool != null) {
>             try {
>                 sessionPool.close();
>             } catch (Exception e) {}
>         }
>     }",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-11-15 18:42:51.0,,,false,,,,,,,,,,,,,,,,,49085,,,Mon Dec 05 09:55:24 UTC 2005,,,,,,,,"0|i17ymn:",254580,,,,,,,,,,,,,,,,,,,"15/Nov/05 18:42;jstrachan;patch applied, thanks Jeremy","23/Nov/05 07:46;beyond005;I fix the files in ActiveMQ3.2 source code and rebuild it. But the problem still happen. The JmsSessionDispatcher threads increase to a big number and cause the test program hang. What's the problem?","05/Dec/05 09:55;jstrachan;The issue is resolved in 4.0, not in 3.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consider using hash buckets for the message group map maintained by the broker,AMQ-439,12481338,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jstrachan,chirino,chirino,09/Dec/05 22:23,16/Feb/06 11:30,30/Jan/20 16:57,05/Jan/06 16:30,,,,,,,4.0 M4,,,Broker,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-12-21 18:52:41.0,,,false,,,,,,,,,,,,,,,,,49117,,,Thu Jan 05 16:30:02 UTC 2006,,,,,,,,"0|i17yu7:",254614,,,,,,,,,,,,,,,,,,,"21/Dec/05 18:52;jstrachan;The current implementation uses a Map containing every indiviudal JMSXGroupID value. There is a risk that they may not be evicted from the Map and this could lead to a memory leak.

So rather than storing every individual object lets just associate hash bucket ranges to consumers. e.g. just say that 0-1000 goes to consumer 1 and 1001-2000 to consumer 2 etc.","05/Jan/06 16:30;jstrachan;we now use a MessageGroupHashBucket to implement hash-bucket style association of message group ID to consumer",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TEST org.apache.activemq.transport.stomp.StompTest FAILED,AMQ-502,12481415,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jstrachan,chirino,chirino,23/Jan/06 17:12,16/Feb/06 11:24,30/Jan/20 16:57,14/Feb/06 19:02,4.0 M4,,,,,,4.0 M4,,,Connector,,,,0,Diabling test until it is fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49165,,,2006-01-23 17:12:24.0,,,,,,,,"0|i17yx3:",254627,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DeadLetterPolicy creates incorrect deadletter name from destination,AMQ-387,12481420,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jaypierson,jaypierson,14/Oct/05 15:27,05/Dec/05 10:07,30/Jan/20 16:57,05/Dec/05 10:07,3.1,,,,,,3.2.2,,,Broker,,,,0,"DeadLetterPolicy.java method getDeadLetterNameFromDestination(ActiveMQDestination destination)

has member variable String deadLetterName that mirrors an instance variable of the same name, private String deadLetterName = DEFAULT_DEAD_LETTER_NAME;

This results in incorrect dlq naming.",n/a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49079,,,2005-10-14 15:27:02.0,,,,,,,,"0|i17yn3:",254582,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use of lower case column names can cause problems on case sensitive databases,AMQ-423,12481371,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,jsparkes,jsparkes,23/Nov/05 15:21,23/Nov/05 15:52,30/Jan/20 16:57,23/Nov/05 15:52,3.2,,,,,,3.2.1,,,Message Store,,,,0,"Two functions in DefaultStatementProvider refer to ""last_acked_id"" and ""container"" instead of ""LAST_ACKED_ID"" and ""CONTAINER"".
I've attached a patch.

When the activemq server tries to clean up old messages, the following appears in the log:
2005-11-22 16:44:33,320 [Cleanup Timmer ] WARN  JDBCPersistenceAdapter         - Old message cleanup failed due to: com.jnetdirect.jsql.y: Invalid column name 'last_acked_id'.
com.jnetdirect.jsql.y: Invalid column name 'last_acked_id'.
	at com.jnetdirect.jsql.y.a(Unknown Source)
	at com.jnetdirect.jsql.ay.a(Unknown Source)
	at com.jnetdirect.jsql.JSQLConnection.prePrepare(Unknown Source)
	at com.jnetdirect.jsql.JSQLConnection.getPreparedStatementHandle(Unknown Source)
	at com.jnetdirect.jsql.at.executeQuery(Unknown Source)
	at org.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doGetOldMessages(DefaultJDBCAdapter.java:672)
	at org.activemq.store.jdbc.JDBCPersistenceAdapter.cleanup(JDBCPersistenceAdapter.java:270)
	at org.activemq.store.jdbc.JDBCPersistenceAdapter$1.run(JDBCPersistenceAdapter.java:257)
	at EDU.oswego.cs.dl.util.concurrent.ClockDaemon$RunLoop.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:534)



","Windows XP with SqlServer.  The database was created with server default collation.  Running the stored procedure sp_server_info tells me that IDENTIFIER_CASE is SENSITIVE, and COLLATION_SEQ is charset=iso_1 collation=Latin1_General_CS_AI.   CS means case sensitive.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/05 15:21;jsparkes;ASF.LICENSE.NOT.GRANTED--case.patch;https://issues.apache.org/jira/secure/attachment/12460861/ASF.LICENSE.NOT.GRANTED--case.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,49108,,,Wed Nov 23 15:52:34 UTC 2005,,,,,,,,"0|i0ttlb:",172103,,,,,,,,,,,,,,,,,,,"23/Nov/05 15:52;jsparkes;This has already been fixed in 3.2.1 snapshot.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jgroup transport service descriptor in sandbox is still in the org.codehaus hierarchy,AMQ-278,12481308,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,sbailliez,sbailliez,25/Jun/05 19:50,15/Jul/05 23:51,30/Jan/20 16:57,15/Jul/05 23:51,3.1,,,,,,3.1,,,Transport,,,,0,"I wanted to try out jgroups protocol located in sandbox.

The hierarchy has not been changed from org.codehaus to org.activemq thus the transport factory is unable to pickup the classes:

/META-INF/services/org/codehaus/activemq/* -> /META-INF/services/org/activemq/* ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-15 23:51:04.0,,,false,,,,,,,,,,,,,,,,,48998,,,Fri Jul 15 23:51:04 UTC 2005,,,,,,,,"0|i0tton:",172118,,,,,,,,,,,,,,,,,,,"15/Jul/05 23:51;chirino;Fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception occues when using MessageContainerAdmin.empty(),AMQ-199,12481307,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,chirino,cameronbraid,cameronbraid,22/Feb/05 11:05,15/Jul/05 22:53,30/Jan/20 16:57,15/Jul/05 22:53,2.1,,,,,,3.1,,,,,,,0,"I am using an embedded broker.

I used this code :

MessageContainerAdmin[] admins = activeMQConnectionFactory.getBrokerContainer().getBroker().getBrokerAdmin().listMessageContainerAdmin();
for (int i = 0; i < admins.length; i++) {
  MessageContainerAdmin admin = admins[i];
  if (admin.getDestinationName().equals(queueName)) {
    admin.empty();
  }
}

All messages appear to have been removed from the queue.  The following exception occurs during the admin.empty() method call.

Exception in thread ""Dispatch Worker"" java.lang.NullPointerException
	at java.io.ByteArrayInputStream.<init>(ByteArrayInputStream.java:89)
	at org.codehaus.activemq.io.AbstractWireFormat.fromBytes(AbstractWireFormat.java:127)
	at org.codehaus.activemq.store.jdbc.JDBCMessageStore.getMessage(JDBCMessageStore.java:97)
	at org.codehaus.activemq.store.journal.JournalMessageStore.getMessage(JournalMessageStore.java:190)
	at org.codehaus.activemq.store.cache.CacheMessageStore.getMessage(CacheMessageStore.java:80)
	at org.codehaus.activemq.service.impl.DurableQueueMessageContainer.getMessage(DurableQueueMessageContainer.java:136)
	at org.codehaus.activemq.service.impl.SubscriptionImpl.getMessagesToDispatch(SubscriptionImpl.java:341)
	at org.codehaus.activemq.service.impl.DispatchWorker.dispatchMessages(DispatchWorker.java:154)
	at org.codehaus.activemq.service.impl.DispatchWorker.run(DispatchWorker.java:108)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-15 22:07:27.0,,,false,,,,,,,,,,,,,,,,,48927,,,Fri Jul 15 22:53:50 UTC 2005,,,,,,,,"0|i0ttl3:",172102,,,,,,,,,,,,,,,,,,,"15/Jul/05 22:07;chirino;The error is happening because there is an active consumer on one of the destinations being emptied out.  You should not be calling empty() on a destination that is in used.  We should add logic so that an exception is thrown from the empty() call if the destination is in use.

I'll keep this open till the error check is implemented.","15/Jul/05 22:53;chirino;Error check it snow implemented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-Fatal ConcurrentModificationException in Broker,AMQ-236,12481173,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,yuri,yuri,13/Apr/05 02:41,07/Jul/05 17:20,30/Jan/20 16:57,07/Jul/05 17:20,3.0,,,,,,3.1,,,Broker,,,,0,"09:35:36 WARN  caught exception consuming packet: CONSUMER_INFO: id = 375 ConsumerInfo{ browser = false, destination = ActiveMQ.Advisory.TempDestinations.TemporaryQueue-{TD{ID:cyclops-4948-1113347143177-1284:0}TD}ID:cyclops-4948-1113347143177-1475:0, consumerIdentifier = 'ID:cyclops-4790-1113348862947-9:0.48.48' , clientId = 'ID:cyclops-4790-1113348862947-9:0' , sessionId = '48' , consumerName = '' , selector = '' , startTime = 1113348936040, started = true, consumerNo = 48, noLocal = false, prefetchNumber = 10, consumerKey = '[ID:cyclops-4790-1113348862947-9:0:]' }

java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(Unknown Source)
        at java.util.HashMap$KeyIterator.next(Unknown Source)
        at org.activemq.broker.impl.AdvisorySupport.addAdvisory(AdvisorySupport.java:88)
        at org.activemq.broker.impl.DefaultBroker.addMessageConsumer(DefaultBroker.java:251)
        at org.activemq.broker.impl.BrokerContainerImpl.registerMessageConsumer(BrokerContainerImpl.java:355)
        at org.activemq.broker.impl.BrokerConnectorImpl.registerMessageConsumer(BrokerConnectorImpl.java:170)
        at org.activemq.broker.impl.BrokerClientImpl.consumeConsumerInfo(BrokerClientImpl.java:466)
        at org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:327)
        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)
        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)
        at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:310)
        at java.lang.Thread.run(Unknown Source)","Windows 2000 
JDK 1.4.2_06",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48959,,,2005-04-13 02:41:36.0,,,,,,,,"0|i17yb3:",254528,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specifying maximumRetries for zeroconf discovery agent,AMQ-126,12481306,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,yaussy,yaussy,05/Nov/04 00:50,06/Jul/05 12:11,30/Jan/20 16:57,06/Jul/05 12:11,1.1,,,,,,3.1,,,Broker,,,,0,"I'm not seeing how to specify the maximumRetries property, relating to a networkChannel, if I use zeroconf discovery agent.  It looks like the broker dynamically creates a networkChannel once it finds another broker via the zeroconf agent.  The maximumRetries property only applies to the networkChannel which, if specified, must have a URI given as well.  That seems to defeat the purpose of zeroconf.

How can I override the default maximumRetries when using zeroconf?","Solaris 2.8, jdk 1.4.2_05",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-07-06 12:11:34.0,,,false,,,,,,,,,,,,,,,,,48863,,,Wed Jul 06 12:11:34 UTC 2005,,,,,,,,"0|i17y4f:",254498,,,,,,,,,,,,,,,,,,,"06/Jul/05 12:11;jstrachan;maximumRetries is a property on the reliable transport, which can be used with any other transport. 

e.g.

reliable:(zeroconf://foo, tcp://host:port)?maximumRetries=10

See this page for more details
http://activemq.org/Configuring+Transports",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Re-enable persistence tests.,AMQ-172,12481147,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,chirino,chirino,18/Jan/05 20:57,01/Jul/05 21:59,30/Jan/20 16:57,01/Jul/05 21:59,2.1,,,,,,3.1,,,Message Store,,,,0,"A few persitence tests were disabled in the following commits.  Look into enabling them again.

http://cvs.activemq.codehaus.org/changelog/activemq?cs=MAIN:chirino:20050116052525
http://cvs.activemq.codehaus.org/changelog/activemq?cs=MAIN:chirino:20050116052458
http://cvs.activemq.codehaus.org/changelog/activemq?cs=MAIN:chirino:20050116044058",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48905,,,2005-01-18 20:57:14.0,,,,,,,,"0|i0ttjr:",172096,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DB Auto-detect expects ""Oracle_JDBC_Driver"" but Oracle driver returns ""Oracle_JDBC_driver""",AMQ-225,12481111,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,tcarlson,tcarlson,30/Mar/05 00:40,04/Apr/05 11:06,30/Jan/20 16:57,04/Apr/05 11:06,2.1,,,,,,3.0,,,Message Store,,,,0,"Hi Ben,

That's our db auto detection code not working right.  Seems like you  
oracle driver is reporting Oracle_JDBC_driver as the type of driver.   
But we were expecting to get Oracle_JDBC_Driver (case is different).
Since auto detection is not working for you (I'll work on getting this  
right for the next release), you should change the persistence config  
so it looks like:

 <persistence>
       <cachePersistence>
         <journalPersistence directory=""../var/journal/"">
           <jdbcPersistence dataSourceRef=""oracle-ds""   adapterClass=""org.codehaus.activemq.store.jdbc.adapter.OracleJDBCAdapter""/>
         </journalPersistence>
       </cachePersistence>
     </persistence>

Regards,
Hiram

On Mar 16, 2005, at 10:40 AM, Ben.Temperton@... wrote:

> Hi,
>
> I'm trying to set up active MQ to persist its message store in an  
> oracle
> database.
> I've added the following to my activemq.xml file:
>
> <bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource""
> destroy-method=""close"">
>     <property name=""driverClassName"">
>       <value>oracle.jdbc.driver.OracleDriver</value>
>     </property>
>     <property name=""url"">
>       <value>jdbc:oracle:thin: <at> myserver:1521:mydb</value>
>     </property>
>     <property name=""username"">
>       <value>activemq</value>
>     </property>
>     <property name=""password"">
>       <value>activemq</value>
>     </property>
>     <property name=""poolPreparedStatements"">
>       <value>true</value>
>     </property>
>   </bean>
>
> and to my <broker> tag I have added the following:
>
> <persistence>
>       <cachePersistence>
>         <journalPersistence directory=""../var/journal/"">
>           <jdbcPersistence dataSourceRef=""oracle-ds""/>
>         </journalPersistence>
>       </cachePersistence>
>     </persistence>
>
>
> When I start up activeMQ using ""activemq.bat"", ActiveMQ creates the  
> tables
> required in mydb. However, in full debug mode, it throws the following
> warning:
>
> 15:34:28 WARN  Unrecognized database type (Oracle_JDBC_driver).  Will  
> use
> default JDBC implementation.
> 15:34:28 DEBUG Reason: java.io.IOException: Could not find class for
> resource: META-INF/services/org
> /codehaus/activemq/store/jdbc/Oracle_JDBC_driver
> java.io.IOException: Could not find class for resource:
> META-INF/services/org/codehaus/activemq/store/jdbc/Oracle_JDBC_driver
>         at
> org.codehaus.activemq.util.FactoryFinder.doFindClass(FactoryFinder.java 
> :76)
","Java 1.5.0, Oracle 9i, Solaris 9",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2005-04-04 11:06:35.0,,,false,,,,,,,,,,,,,,,,,48949,,,Mon Apr 04 11:06:35 UTC 2005,,,,,,,,"0|i17y87:",254515,,,,,,,,,,,,,,,,,,,"04/Apr/05 11:06;jstrachan;This is fixed now in 3.0 AFAIK",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
toString() of TransportStatusEvent needs update,AMQ-213,12481191,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,dennis@bevocal.com,dennis@bevocal.com,09/Mar/05 21:55,12/Mar/05 03:05,30/Jan/20 16:57,12/Mar/05 03:05,,,,,,,3.0,,,Connector,,,,0,"The TransportStatusEvent.toString() sometimes prints null for the connection information.  This happens when the remoteURI was provided to the event rather than a TransportChannel object.  The following replacement method will print a better message in these cases.

public String toString() {
    return ""Channel: "" + (transportChannel == null ? remoteURI.toString() : transportChannel.toString()) + "" has "" + getStatusAsString(channelStatus);
}
",w2k java 1.4.2_05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48939,,,2005-03-09 21:55:00.0,,,,,,,,"0|i17y9b:",254520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQObjectMessage.toString() does not print the object,AMQ-145,12483909,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,hdockter,hdockter,06/Dec/04 17:43,07/Dec/04 17:03,30/Jan/20 16:57,07/Dec/04 17:03,1.3,,,,,,1.3,,,,,,,0,"I'm using activemq via http.

If I put an object into a ActiveMQObjectMessage, the toString method  of the ActiveMQObjectMessage does not print the object but:

'... ActiveMQObjectMessage{ object = null }'

With getObject() I get nonetheless the non-null object I've put into the message.

This can be a bit confusing when debugging.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48880,,,2004-12-06 17:43:11.0,,,,,,,,"0|i0ttlz:",172106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
It shouldn't ve said that you can use cvsgrab,AMQ-123,12483910,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,hdockter,hdockter,02/Nov/04 13:57,16/Nov/04 11:42,30/Jan/20 16:57,16/Nov/04 11:42,,,,,,,1.2,,,Documentation,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-11-16 11:42:08.0,,,false,,,,,,,,,,,,,,,,,48860,,,Tue Nov 16 11:42:08 UTC 2004,,,,,,,,"0|i0ttjj:",172095,,,,,,,,,,,,,,,,,,,"02/Nov/04 14:02;hdockter;Accidentally I commited this issue before I was finished.

Anyway, on the website it is said, that you can use cvsgrab to checkout stuff if you are behind a firewall. 

http://activemq.codehaus.org/maven/cvs-usage.html

But cvsgrab doesn't work with fisheye. So if people try it, it might waste quite a bit of their time. It would be good to remove this remark.","16/Nov/04 11:42;jstrachan;I've updated the website...

http://docs.codehaus.org/display/ACTIVEMQ/CVS

and we now have tarball support on FishEye",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can only create temp. queues once connection is start()ed.,AMQ-104,12481092,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jstrachan,mousepad,mousepad,05/Oct/04 03:13,06/Oct/04 13:12,30/Jan/20 16:57,06/Oct/04 13:12,1.1,,,,,,1.1,,,JMS client,,,,0,"I get a NullPointerException calling QueueSession.createTemporaryQueue(), unless the session's Connection.start() method has already been called. If the connection has been started, the createTemporaryQueue() call works fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-10-05 09:02:15.0,,,false,,,,,,,,,,,,,,,,,48842,,,Wed Oct 06 13:12:48 UTC 2004,,,,,,,,"0|i0tto7:",172116,,,,,,,,,,,,,,,,,,,"05/Oct/04 09:02;jstrachan;I've just created a test case to try reproduce your problem...

http://cvs.activemq.codehaus.org/viewrep/activemq/src/test/org/codehaus/activemq/usecases/CreateTemporaryQueueBeforeStartTest.java?r=HEAD

I've tried various things but couldn't get a NullPointerException. Can you think of anything different I can try to reproduce you're issue?

If not, I'll mark this issue as closed. Maybe its just been fixed in CVS since you experienced this?","05/Oct/04 20:44;mousepad;Here's a sample program that causes the NullPointerException:

import javax.jms.*;
import org.codehaus.activemq.ActiveMQConnectionFactory;

/**
 * Example to reproduce jira AMQ104.
 * If the connection.start() call is moved above the createTemporaryQueue()
 * call then everything works, but like this it gives a NullPointerException.
 * (Basically because the session doesn't have a clientID yet).
 */
public class AMQ104
        {
        public static void main(String[] args) throws Exception
                {
                String url = ""tcp://localhost:61616"";
                ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(url);
                QueueConnection connection = factory.createQueueConnection();
                QueueSession session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE);
                QueueSender sender = session.createSender(null); //Unidentified
                Queue receiverQueue = session.createTemporaryQueue();
                QueueReceiver receiver = session.createReceiver(receiverQueue);
                connection.start();

                //...
                }
        }","06/Oct/04 13:12;jstrachan;Many thanks Peter - I've added your test case to CVS and fixed the issue also.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default activemq.xml should not have snippet stuff in it,AMQ-926,12482168,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,rajdavies,jdillon,jdillon,15/Sep/06 20:22,04/Sep/09 18:41,30/Jan/20 16:57,04/Sep/09 18:41,4.0.1,,,,,,5.3.0,,,,,,,1,"The default configuration file should not have the {{<!-- START SNIPPET: example -->}} stuff in it... and should probably also include a standard {{<?xml version=""1.0"" encoding=""UTF-8""?>}} header.

And the xml indent of this file is not consistent.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84381,,,2006-09-15 20:22:18.0,,,,,,,,"0|i180ev:",254869,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XBean annotation 'resourceAdapter' is specified twice,AMQ-1345,12482454,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,rajdavies,gertvanthienen,gertvanthienen,25/Jul/07 19:59,10/Apr/08 13:14,30/Jan/20 16:57,10/Apr/08 13:14,5.2.0,,,,,,5.1.0,,,Connector,,,,1,The 'resourceAdapter' XBean annotation is specified on both the org.apache.activemq.ra.MessageResourceAdapter interface and the org.apache.activemq.ra.ActiveMQResourceAdapter class,,tpounds,zgl,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/07 20:01;gertvanthienen;AMQ-1345.patch;https://issues.apache.org/jira/secure/attachment/12461019/AMQ-1345.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-03-19 21:43:01.371,,,false,,,,,,,,,,,,,,,,,95762,,,Thu Apr 10 13:14:40 UTC 2008,,,,,,,,"0|i14bmn:",233347,,,,,,,,,,,,,,,,,,,"25/Jul/07 20:01;gertvanthienen;This patch removes it from the interface, avoiding exceptions like 'Could not instantiate bean class [org.apache.activemq.ra.MessageResourceAdapter]: Specified class is an interface'","19/Mar/08 21:43;tpounds;I saw this recently when using a custom built ActiveMQ (5.0.0.9-fuse) with ServiceMix (3.2.1).","10/Apr/08 13:14;rajdavies;Patch applied in svn revision 646789",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Exception String from BrokerFactory has a typo - ""Could load "" should presumably read ""Could not load """,AMQ-1565,12482291,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,aco,steveyoung,steveyoung,23/Jan/08 14:41,18/Feb/08 14:54,30/Jan/20 16:57,18/Feb/08 14:54,,,,,,,5.1.0,,,Broker,,,,0,"The error message I get is this:

java.io.IOException: Could load xbean factory:java.lang.NoClassDefFoundError: org/springframework/core/io/FileSystemResource
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27)

presuambly the error should be that the class could *not* load the xbean factory :-)",Linux 2.6.9-42.EL #1 Wed Jul 12 23:16:43 EDT 2006 i686 athlon i386 GNU/Linux,,,,,,,,,,,,,,,,,,60,60,,0%,60,60,,,,,"05/Feb/08 14:04;mricardo;BrokerFactory.java.patch;https://issues.apache.org/jira/secure/attachment/12460874/BrokerFactory.java.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2008-02-05 14:04:21.334,,,false,,,,,,,,,,,,,,,,,95831,,,Mon Feb 18 14:54:11 UTC 2008,,,,,,,,"0|i14bsv:",233375,,,,,,,,,,,,,,,,,,,"05/Feb/08 14:04;mricardo;A patch to change the log message.","18/Feb/08 14:54;aco;Patch applied to rev 628764. Many thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Thread name spelling mistake: ""AcitveMQ Connection Worker""",AMQ-1524,12482140,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,rajdavies,sits,sits,18/Dec/07 02:20,20/Dec/07 14:36,30/Jan/20 16:57,20/Dec/07 14:36,,,,,,,5.1.0,,,Broker,,,,0,"Just noticed this in a thread dump.  Line 199 in ./activemq-core/src/main/java/org/apache/activemq/ActiveMQConnection.java has a spelling mistake.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-12-20 14:36:31.485,,,false,,,,,,,,,,,,,,,,,95813,,,Thu Dec 20 14:36:31 UTC 2007,,,,,,,,"0|i14br3:",233367,,,,,,,,,,,,,,,,,,,"20/Dec/07 14:36;rajdavies;Fixed by SVN revision 605943",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
spelling error,AMQ-1305,12481321,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,rajdavies,erharold,erharold,02/Jul/07 18:59,30/Jul/07 20:37,30/Jan/20 16:57,30/Jul/07 20:37,4.1.1,,,,,,5.0.0,,,Documentation,,,,0,Near the bottom of the page at http://activemq.apache.org/stomp.html activemq.subcriptionName should be activemq.subscriptionName,http://activemq.apache.org/stomp.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-07-02 19:11:24.38,,,false,,,,,,,,,,,,,,,,,84565,,,Mon Jul 30 20:37:01 UTC 2007,,,,,,,,"0|i181gv:",255040,,,,,,,,,,,,,,,,,,,"02/Jul/07 19:11;tabish;Actually this spelling is correct against the code.  The SubscriptionInfo command in activemq-core has the subscription name spelled subcriptionName, and since the code uses reflection to find the property with this name, if you set it as activemq.subscriptionName it wouldn't work.","03/Jul/07 13:24;erharold;Then this problem is more serious than I thought. The bug should be shifted from documentation to code, and the importance upgraded from trivial  to normal.

Of course the documentation should not be fixed until the code is fixed, but in the meantime it wouldn't hurt to  explicitly call out the misspelling in the documentation.","30/Jul/07 20:37;rajdavies;Fixed by SVN revision 561109",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activem.conf: Use ${activemq.base} instead of ..,AMQ-1122,12481989,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,frank.spies,frank.spies,09/Jan/07 10:42,12/Jun/07 14:47,30/Jan/20 16:57,12/Jun/07 14:47,5.0.0,,,,,,5.0.0,,,,,,,0,"In activemq.xml:

<persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
      <!-- To use a different datasource, use the following syntax : -->
      <!-- 
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""../activemq-data"" dataSource=""#postgres-ds""/>
       -->
    </persistenceAdapter>


should be changed to 

<persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
      <!-- To use a different datasource, use the following syntax : -->
      <!-- 
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data"" dataSource=""#postgres-ds""/>
       -->
    </persistenceAdapter>

, shouldn't it?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2007-06-12 09:48:08.366,,,false,,,,,,,,,,,,,,,,,84719,,,Tue Jun 12 14:47:21 UTC 2007,,,,,,,,"0|i180xr:",254954,,,,,,,,,,,,,,,,,,,"12/Jun/07 09:48;jstrachan;added an affected version","12/Jun/07 14:47;jstrachan;Fixed - with thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default log4j.properties has stdout enabled and not the out file appender,AMQ-927,12481845,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,rajdavies,jdillon,jdillon,15/Sep/06 20:25,15/Oct/06 15:54,30/Jan/20 16:57,13/Oct/06 14:29,4.0.1,,,,,,4.1.0,,,,,,,0,"The default log4j.properties has:

{noformat}
log4j.rootLogger=INFO, stdout
{noformat}

and then goes on to say:

{noformat}
# CONSOLE appender not used by default
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
..
{noformat}

And it also has this header... which is misleading:

{noformat}
#
# The logging properties used during tests..
#
{noformat}

Also not sure why this would be in data... nor do I ever see this being created, even when out is enabled...

{noformat}
log4j.appender.out.file=${activemq.home}/data/activemq.log
{noformat}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-10-13 14:29:39.0,,,false,,,,,,,,,,,,,,,,,84380,,,Sun Oct 15 15:54:57 UTC 2006,,,,,,,,"0|i180en:",254868,,,,,,,,,,,,,,,,,,,"13/Oct/06 14:29;rajdavies;Fixed by revision 463689","15/Oct/06 15:54;chirino;I just started up activemq from the command line and noticed this change.  I think that the previous behaviour of logging to the console was a good idea.  That way folks see when the broker is fully started and what transports are opened and such.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Eclipse fails to compile activemq-core due to invalid symbol in UdpTransportFactory.java,AMQ-822,12481777,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,mfateev,mfateev,14/Jul/06 06:18,08/Aug/06 19:05,30/Jan/20 16:57,08/Aug/06 19:05,incubation,,,,,,4.1.0,,,Transport,,,,0,"UdpTransportFactory contains commented out code that contain symbol that eclipse cannot handle. The following fix was sufficient for code to be compiled without problem:

fateev@fateev:/workplace/fateev/activemq/trunk> svn diff activemq-core/src/main/java/org/apache/activemq/transport/udp/UdpTransportFactory.java
Index: activemq-core/src/main/java/org/apache/activemq/transport/udp/UdpTransportFactory.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/transport/udp/UdpTransportFactory.java      (revision 421719)
+++ activemq-core/src/main/java/org/apache/activemq/transport/udp/UdpTransportFactory.java      (working copy)
@@ -161,7 +161,7 @@
          * switch to the target endpoint // based on the last packet that was
          * received // so that all future requests go to the newly created UDP
          * channel Endpoint from = info.getFrom();
-         * System.out.println(""####&#65533;setting the client side target to: "" +
+         * System.out.println(""####setting the client side target to: "" +
          * from); udpTransport.setTargetEndpoint(from); } }; return transport;
          */
     }
fateev@fateev:/workplace/fateev/activemq/trunk>
",RHEL-3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84251,,,2006-07-14 06:18:44.0,,,,,,,,"0|i1800f:",254804,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CMS Client - unassigned value in ActiveMQConnectionFactory constructor,AMQ-686,12481620,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,nmittler,nmittler,10/Apr/06 19:53,24/Apr/06 04:59,30/Jan/20 16:57,24/Apr/06 04:59,4.0 RC2,,,,,,,,,JMS client,,,,0,"The brokerUrl member of ActiveMQConnectionFactory is not assigned a value in the ActiveMQConnectionFactory( const char*, const char*, const char* ) constructor.",any,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,84301,,,Mon Apr 24 04:59:38 UTC 2006,,,,,,,,"0|i0ttp3:",172120,,,,,,,,,,,,,,,,,,,"24/Apr/06 04:59;nmittler;Host and port were not being parsed properly in the transport - this is fixed now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The README.txt file contains references to activemq.org,AMQ-653,12481633,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,johnrsisson,johnrsisson,22/Mar/06 10:42,22/Mar/06 17:32,30/Jan/20 16:57,22/Mar/06 17:32,4.0,,,,,,4.0 RC2,,,Documentation,,,,0,These need to be updated to point to the incubator web site.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/06 10:45;johnrsisson;ASF.LICENSE.NOT.GRANTED--AMQ-653.patch;https://issues.apache.org/jira/secure/attachment/12460629/ASF.LICENSE.NOT.GRANTED--AMQ-653.patch",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2006-03-22 17:32:27.0,,,false,,,,,,,,,,,,,,,,,49282,,,Wed Mar 22 17:32:27 UTC 2006,,,,,,,,"0|i17zdz:",254703,,,,,,,,,,,,,,,,,,,"22/Mar/06 10:45;johnrsisson;Simple patch that corrects URLS in readme file.","22/Mar/06 17:32;chirino;applied",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No clientID assigned to networkConnction,AMQ-490,12481527,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,rajdavies,dennis@bevocal.com,dennis@bevocal.com,17/Jan/06 01:22,16/Feb/06 11:24,30/Jan/20 16:57,02/Feb/06 12:44,4.0,,,,,,4.0 M4,,,Connector,,,,0,"Trival, but logging anoyance; hate to see exceptions even at DEBUG level.  Just need to generate and provide a clientId when a network connection is generated.

2006-01-13 18:00:04,573 [Thread-5       ] DEBUG AbstractConnection             - Async error occurred: javax.jms.InvalidClientIDException: No clientID specified for connection request
javax.jms.InvalidClientIDException: No clientID specified for connection request
	at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:130)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:50)
	at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:66)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:50)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:64)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:50)
	at org.apache.activemq.broker.TransportConnector$2.addConnection(TransportConnector.java:216)
	at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:462)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:179)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:55)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:75)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
	at org.apache.activemq.network.DemandForwardingBridge.startBridge(DemandForwardingBridge.java:158)
	at org.apache.activemq.network.DemandForwardingBridge$3.run(DemandForwardingBridge.java:142)
2006-01-13 18:00:04,573 [Thread-5       ] WARN  DemandForwardingBridge         - Unexpected local command: ConnectionError {commandId=2, responseRequired=false, connectionId=null, exception=javax.jms.InvalidClientIDException: No clientID specified for connection request}
2006-01-13 18:00:04,573 [Thread-5       ] INFO  DemandForwardingBridge         - Network connection between vm://roadrash#2 and tcp://harley:61616 has been established.
2006-01-13 18:00:04,620 [.16.12.88:61616] WARN  DemandForwardingBridge         - Unexpected remote command: ConnectionError {commandId=2, responseRequired=false, connectionId=null, exception=javax.jms.InvalidClientIDException: No clientID specified for connection request}
2006-01-13 18:00:06,385 [.16.12.88:53307] DEBUG TcpTransport                   - TCP consumer thread starting
2006-01-13 18:00:06,588 [.16.12.88:53307] DEBUG AbstractConnection             - Async error occurred: javax.jms.InvalidClientIDException: No clientID specified for connection request
javax.jms.InvalidClientIDException: No clientID specified for connection request
	at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:130)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:50)
	at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:66)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:50)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:64)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:50)
	at org.apache.activemq.broker.TransportConnector$2.addConnection(TransportConnector.java:216)
	at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:462)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:82)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:179)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:55)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
	at java.lang.Thread.run(Thread.java:595)
",w2k and linux with jdk 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-01 11:28:37.0,,,false,,,,,,,,,,,,,,,,,49156,,,Thu Feb 02 12:44:58 UTC 2006,,,,,,,,"0|i17yyn:",254634,,,,,,,,,,,,,,,,,,,"01/Feb/06 11:28;gnodet;This error happens when the connection is created and before the clientId can be set.","02/Feb/06 12:44;rajdavies;A clientId is now assigned ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in DefaultThreadPools.getDeaultPool(),AMQ-530,12481322,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,rnewson,rnewson,05/Feb/06 22:56,06/Feb/06 07:20,30/Jan/20 16:57,06/Feb/06 07:20,4.0 M4,,,,,,,,,,,,,0,"
The method in DefaultThreadPools should be called getDefaultPool() not getDeaultPool().
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2006-02-06 07:20:50.0,,,false,,,,,,,,,,,,,,,,,49185,,,Mon Feb 06 07:20:50 UTC 2006,,,,,,,,"0|i17zan:",254688,,,,,,,,,,,,,,,,,,,"06/Feb/06 07:20;aco;Done. Thanks for the heads up Robert.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Typo in thread name ""Cleanup Timmer""",AMQ-427,12481402,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,jsparkes,jsparkes,28/Nov/05 20:03,05/Dec/05 10:19,30/Jan/20 16:57,05/Dec/05 10:19,3.2,,,,,,3.2.2,,,Message Store,,,,0,"Yeah, it's trivia, but it annoys me!  
Patch attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/05 20:03;jsparkes;ASF.LICENSE.NOT.GRANTED--timmer.patch.gz;https://issues.apache.org/jira/secure/attachment/12460536/ASF.LICENSE.NOT.GRANTED--timmer.patch.gz",,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2005-12-05 10:19:05.0,,,false,,,,,,,,,,,,,,,,,49111,,,Mon Dec 05 10:19:05 UTC 2005,,,,,,,,"0|i17yon:",254589,,,,,,,,,,,,,,,,,,,"05/Dec/05 10:19;jstrachan;Patch applied, thanks Jeff!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Eclipse project for Core not working,AMQ-228,12481074,,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,skleinei,skleinei,07/Apr/05 17:21,07/Apr/05 18:59,30/Jan/20 16:57,07/Apr/05 18:59,3.0,,,,,,3.0,,,Broker,,,,0,"The .classpath file for the core module contains a classpath entry for <ACTIVEMQ_HOME>/src/class (absolute path), whereas the correct path would be <ACTIVEMQ_HOME>/modules/core/src/conf (absolute path) or just src/conf (rel. path).

The fix is as easy as adding ${basedir} in /modules/core/project.properties line 10:
maven.eclipse.classpath.include=${basedir}/src/conf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,48952,,,2005-04-07 17:21:58.0,,,,,,,,"0|i17ybz:",254532,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible division-by-zero in stats impl,AMQ-101,12481267,,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,,maniax,maniax,03/Oct/04 23:17,04/Oct/04 12:21,30/Jan/20 16:57,04/Oct/04 12:21,1.1,,,,,,1.1,,,Broker,,,,0,"Just been browsing through the jmx stats impl stuff from activemq and found two possible div/0 errors

org.codehaus.activemq.management.TimeStatisticImpl

see getAveragePerSecond* methods.

http://cvs.activemq.codehaus.org/viewrep/activemq/src/java/org/codehaus/activemq/management/TimeStatisticImpl.java?r=1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2004-10-04 12:21:46.0,,,false,,,,,,,,,,,,,,,,,48839,,,Mon Oct 04 12:21:46 UTC 2004,,,,,,,,"0|i0ttpb:",172121,,,,,,,,,,,,,,,,,,,"04/Oct/04 12:21;jstrachan;Many thanks Thomas - I think these are both fixed now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
